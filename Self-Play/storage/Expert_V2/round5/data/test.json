[{"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_28257_plus (a b c x y z : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 1) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hxyz : x + y + z = 1) : (x * y) ^ 2 / (x ^ 2 * y ^ 2) + (y * z) ^ 2 / (y ^ 2 * z ^ 2) + (z * x) ^ 2 / (z ^ 2 * x ^ 2) \u2265 3 * (x * y * z):= by", "target": "\n  have h1 : 0 < x * y := by positivity\n  have h2 : 0 < y * z := by positivity\n  have h3 : 0 < z * x := by positivity\n  have h4 : x * y + y * z + z * x \u2264 1 := by\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  have h5 : (x * y) ^ 2 / (x ^ 2 * y ^ 2) = 1 := by\n    rw [div_eq_iff (by positivity)]\n    ring\n  have h6 : (y * z) ^ 2 / (y ^ 2 * z ^ 2) = 1 := by\n    rw [div_eq_iff (by positivity)]\n    ring\n  have h7 : (z * x) ^ 2 / (z ^ 2 * x ^ 2) = 1 := by\n    rw [div_eq_iff (by positivity)]\n    ring\n  nlinarith [h5, h6, h7, mul_self_nonneg (x * y + y * z + z * x),\n    mul_self_nonneg (x * y - y * z), mul_self_nonneg (y * z - z * x),\n    mul_self_nonneg (z * x - x * y)]\n  <;> linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_48802_plus (x y : \u211d) (h\u2081 : 0 < x \u2227 0 < y) (h\u2082 : x \u2260 y) : \u2203 a b : \u211d, a \u2260 0 \u2227 b \u2260 0 \u2227 a^2 + b^2 = 1 \u2227 (x^2 + y^2)^2 \u2265 (x^2 - y^2)^2 + (2 * x * y)^2 \u2228 (x^2 + y^2)^2 < (x^2 - y^2)^2 + (2 * x * y)^2 \u2227 \u2203 a b : \u211d, a \u2260 0 \u2227 b \u2260 0 \u2227 a^2 + b^2 = 1 \u2227 (x^2 + y^2)^2 \u2265 (x^2 - y^2)^2 + (2 * x * y)^2  := by", "target": "\n  use 1 / 2, \u221a3 / 2\n  have h\u2083 : 0 < \u221a3 := by norm_num\n  have h\u2084 : (1 / 2 : \u211d) ^ 2 + (\u221a3 / 2) ^ 2 = 1 := by\n    norm_num\n    <;> ring\n  simp [h\u2081, h\u2082, h\u2083, h\u2084]\n  <;> norm_num\n  <;> ring_nf\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4679 (a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 3) : (a + 1) * (b + 1) * (c + 1) \u2265 (a + b) * (b + c) * (c + a) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4679_plus (a b c : \u211d) (hab : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 3) : (1 + 1 / a) * (1 + 1 / b) * (1 + 1 / c) \u2265 16 / 3 \u2227 (1 + 1 / a) * (1 + 1 / b) * (1 + 1 / c) \u2265 (1 + 1 / (a + b + c)) * (1 + 1 / (a + b + c)) * (1 + 1 / (a + b + c)):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_39691_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \u2203 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2227 \u2203 t \u2265 0, (x * (y ^ t + z ^ t) / (y ^ (t + 1) + z ^ (t + 1)) + y * (z ^ t + x ^ t) / (z ^ (t + 1) + x ^ (t + 1)) + z * (x ^ t + y ^ t) / (x ^ (t + 1) + y ^ (t + 1))) \u2264 2 \u2228 \u2200 t \u2265 0, (x * (y ^ t + z ^ t) / (y ^ (t + 1) + z ^ (t + 1)) + y * (z ^ t + x ^ t) / (z ^ (t + 1) + x ^ (t + 1)) + z * (x ^ t + y ^ t) / (x ^ (t + 1) + y ^ (t + 1))) > 2  := by", "target": "\n  use 1, 1, 1\n  simp\n  norm_num\n  <;> by_contra! h\n  <;> linarith [h 0 (by norm_num)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_6271 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : 0 \u2264 a + b) (hbc : 0 \u2264 b + c) (hca : 0 \u2264 a + c) (h : a^2 + b^2 + c^2 + a * b * c = 4) : a * b + a * c + b * c \u2264 (3 * (a + b + c - 2) * (4 * (a + b + c) + 3)) / (18 - a - b - c) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_6271_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b * c \u2264 1) (h : a + b + c = 3) : a ^ 2 * b ^ 2 * c ^ 2 \u2264 (a + b + c) ^ 3 \u2227 a * b * c * (a ^ 2 + b ^ 2 + c ^ 2) \u2264 (a + b + c) ^ 2 * (a ^ 2 + b ^ 2 + c ^ 2):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_31883_plus (x y z : \u211d) (h\u2081 : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z) (h\u2082 : x + y + z = 3) (h\u2083 : x * y + x * z + y * z \u2264 3) :\n  x ^ 2 * y ^ 2 * z ^ 2 \u2264 27 \u2227 x ^ 2 * y ^ 2 + x ^ 2 * z ^ 2 + y ^ 2 * z ^ 2 \u2264 9:= by", "target": "\n  have h\u2084 : (x + y + z) ^ 2 = 9 := by rw [h\u2082]; norm_num\n  have h\u2085 : 0 \u2264 x * y := by nlinarith\n  have h\u2086 : 0 \u2264 x * z := by nlinarith\n  have h\u2087 : 0 \u2264 y * z := by nlinarith\n  have h\u2088 : 0 \u2264 x * y * z := by nlinarith\n  have h\u2089 : x * y * z \u2264 3 := by nlinarith\n  have h\u2081\u2080 : (x * y + x * z + y * z) ^ 2 \u2264 9 := by nlinarith\n  have h\u2081\u2081 : x ^ 2 * y ^ 2 * z ^ 2 \u2264 27 := by\n    nlinarith\n  have h\u2081\u2082 : x ^ 2 * y ^ 2 + x ^ 2 * z ^ 2 + y ^ 2 * z ^ 2 \u2264 9 := by\n    nlinarith\n  exact \u27e8h\u2081\u2081, h\u2081\u2082\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_3876_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (h : a + b + c = 1) : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) * Real.sqrt (1 + c ^ 2) \u2265 1 + a * b * c:= by", "target": "\n  have h\u2080 : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) * Real.sqrt (1 + c ^ 2) = Real.sqrt ((1 + a ^ 2) * (1 + b ^ 2) * (1 + c ^ 2)) := by\n    rw [Real.sqrt_mul, Real.sqrt_mul]\n    all_goals positivity\n  rw [h\u2080]\n  apply Real.le_sqrt_of_sq_le\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n    mul_nonneg hab hb, mul_nonneg hab hc, mul_nonneg hb hc,\n    mul_nonneg (mul_nonneg hab hb) hc, mul_nonneg (mul_nonneg hab hc) hb, mul_nonneg (mul_nonneg hb hc) hab]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_7800 (a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (hab : a * b + a * c + b * c \u2260 0) : (a^2 + b^2 + c^2) / (a * b + a * c + b * c) + 72 * a * b * c / (a + b + c) * ((a + b + c)^2 + 5 * (a * b + a * c + b * c)) >= 2 + 571744 * (a - b)^2 * (a - c)^2 * (b - c)^2 * a^2 * b^2 * c^2 / (a + b + c)^12 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_7800_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 1) (h' : a * b + a * c + b * c \u2264 1) : a ^ 2 * b ^ 2 * c ^ 2 * (a + b + c) ^ 3 * (a * b + a * c + b * c) ^ 3 \u2264 1:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_31578_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a + b + c = 1) : (1 / 3 : \u211d) \u2264 ((a / (a + 2 * b)) ^ 2 + (b / (b + 2 * c)) ^ 2 + (c / (c + 2 * a)) ^ 2) \u2228 (a * b * c) \u2264 (1 / 9) := by", "target": "\n  apply or_iff_not_imp_right.2\n  intro h\n  have h\u2083 : 0 \u2264 a * b := by nlinarith\n  have h\u2084 : 0 \u2264 b * c := by nlinarith\n  have h\u2085 : 0 \u2264 c * a := by nlinarith\n  have h\u2086 : (a + b + c) ^ 2 = 1 := by nlinarith\n  have h\u2087 : 0 < a + 2 * b := by nlinarith\n  have h\u2088 : 0 < b + 2 * c := by nlinarith\n  have h\u2089 : 0 < c + 2 * a := by nlinarith\n  have h\u2081\u2080 : (a / (a + 2 * b)) ^ 2 + (b / (b + 2 * c)) ^ 2 + (c / (c + 2 * a)) ^ 2 \u2265 (1 / 3 : \u211d) := by\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      mul_self_nonneg (a * b + b * c + c * a),\n      mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a),\n      mul_self_nonneg (c * a - a * b)]\n  linarith\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3067 (x y z : \u211d) : (x + y + z) ^ 2 * (y ^ 2 + z ^ 2) * (z ^ 2 + x ^ 2) * (x ^ 2 + y ^ 2) - 8 * (x * y + z * x + y * z) * x * y * z * (x ^ 3 + y ^ 3 + z ^ 3) \u2265 0 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3067_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) : \u2203 (a b c : \u211d), a * b * c * (a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2) * (c ^ 2 + a ^ 2) \u2264 (x + y + z) ^ 2 * (y ^ 2 + z ^ 2) * (z ^ 2 + x ^ 2) * (x ^ 2 + y ^ 2):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4459 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : (a + b + c) ^ 2 * (a ^ 2 + b ^ 2 + c ^ 2) \u2265 9 * (a ^ 3 * b + b ^ 3 * c + c ^ 3 * a) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4459_plus (a b c : \u211d) (hab : 0 \u2264 a) (hbc : 0 \u2264 b) (hca : 0 \u2264 c) (h : a + b + c = 1) : (a * b) ^ 2 / (b + c) ^ 2 + (b * c) ^ 2 / (c + a) ^ 2 + (c * a) ^ 2 / (a + b) ^ 2 \u2264 1 \u2227 (a * b) ^ 2 / (b + c) ^ 2 + (b * c) ^ 2 / (c + a) ^ 2 + (c * a) ^ 2 / (a + b) ^ 2 \u2264 (a + b + c) ^ 2:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_27420_plus (x : \u211d) (hx: x > 0) : \u2203 y, y > 0 \u2227 \u2203 z, z > 0 \u2227 (x^2 + 1 / (4 * x) \u2265 3 / 4 \u2228 \u2203 w, w > 0 \u2227 1 / (x^2) \u2265 1):= by", "target": "\n  use 1\n  constructor\n  linarith\n  use 1\n  constructor\n  linarith\n  apply Or.inl\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - 1 / 2)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_7694 (a b c : \u211d) (ha : a \u2260 0) (hb : b \u2260 0) (hc : c \u2260 0) : (b * c + c * a + 1 / (a * b)) * (c * a + a * b + 1 / (b * c)) \u2265 (2 + c * a)^2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_7694_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b * c \u2260 0) : (1 + 1 / a) * (1 + 1 / b) * (1 + 1 / c) \u2265 8 / (a + b + c):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_6681 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a * b + b * c + c * a = 3 * a * b * c) : 1 / (1 + Real.sqrt (a * b)) + 1 / (1 + Real.sqrt (b * c)) + 1 / (1 + Real.sqrt (c * a)) \u2264 3 / 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_6681_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b + b * c + c * a = 3) : Real.sqrt (a ^ 2 + 1) * Real.sqrt (b ^ 2 + 1) * Real.sqrt (c ^ 2 + 1) \u2265 (Real.sqrt (a * b + 1) * Real.sqrt (b * c + 1) * Real.sqrt (c * a + 1)) * (3 / 5):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_17550_plus (x y : \u211d) (h\u2081 : 0 \u2264 x) (h\u2082 : 0 \u2264 y) :  Real.sqrt ((x + 2)^2 + (y - 4)^2) \u2265 Real.sqrt 2 * Real.sqrt ((x + 2)^2 + (y - 4)^2) - Real.sqrt 2 * Real.sqrt ((x + 2)^2 + (y - 4)^2):= by", "target": "\n  have h\u2083 : 0 \u2264 Real.sqrt ((x + 2)^2 + (y - 4)^2) := Real.sqrt_nonneg _\n  have h\u2084 : 0 \u2264 Real.sqrt 2 * Real.sqrt ((x + 2)^2 + (y - 4)^2) := by positivity\n  nlinarith [Real.mul_self_sqrt (show 0 \u2264 2 by norm_num), Real.mul_self_sqrt (show 0 \u2264 (x + 2)^2 + (y - 4)^2 by positivity)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_45614_plus (x y z : \u2115) (h\u2081 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2082 : x \u2264 y \u2227 y \u2264 z \u2227 z \u2264 x) (h\u2083 : (x-y)*(y-z)*(z-x) = (x+z+y)) : (x+z+y) % 27 = 0 \u2228 (x-y) % 27 = 0 \u2228 (y-z) % 27 = 0 \u2228 (z-x) % 27 = 0:= by", "target": "\n  have h\u2084 : x = y \u2227 y = z := by\n    apply And.intro\n    \u00b7 omega\n    \u00b7 omega\n  rw [h\u2084.1, h\u2084.2] at h\u2083\n  ring_nf at h\u2083\n  omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3957 {a : \u2115} {p : \u2115} (hp : p.Prime) (h : a \u2261 1 [ZMOD p]) : \u2200 n : \u2115, a^(p^n) \u2261 1 [ZMOD p^(n+1)] := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3957_plus : \u2200 a p : \u2115, p.Prime \u2192 a \u2261 1 [ZMOD p] \u2192 \u2200 n : \u2115, a ^ (p ^ n) \u2261 1 [ZMOD p ^ (n + 1)] \u2228 a ^ (p ^ n) \u2261 1 [ZMOD p] := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_19516_plus (n : \u2115) (hn : 1 < n) : (\u2203 x y : \u2115, 2 ^ n \u2223 x ^ 2 + y ^ 2) \u2194 2 ^ n \u2223 (2 ^ n) ^ 2 + (2 ^ n) ^ 2 := by", "target": "\n  refine' \u27e8fun \u27e8x, y, hxy\u27e9 => _, fun h => \u27e82 ^ n, 0, _\u27e9\u27e9 <;> simp_all [Nat.dvd_iff_mod_eq_zero, Nat.pow_mod, Nat.add_mod, Nat.mul_mod, Nat.mod_mod]\n  <;> omega\n  <;> omega\n  <;> omega"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_744 (a b c : \u211d) (ha : a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0) (hab : a + b + c = 3) : (a^2 + a + 1) * (b^2 + b + 1) * (c^2 + c + 1) \u2264 27 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_744_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 3) (h1 : a * b + b * c + c * a \u2264 3) : a ^ 2 * b ^ 2 * c ^ 2 \u2264 (a + b + c) ^ 3:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_22112_plus (n : \u2115) (hn : 1 < n) : (\u2203 a b : \u2115, \u2200 m : \u2115, m \u2264 n \u2192 \u2203 c : \u2115, c \u2264 n \u2227 m \u2264 a * c + b) \u2194 \u2203 a : \u2115, \u2200 m : \u2115, m \u2264 n \u2192 \u2203 c : \u2115, c \u2264 n \u2227 m \u2264 a * c  := by", "target": "\n  apply Iff.intro\n  intro h\n  rcases h with \u27e8a, b, h\u27e9\n  use 1\n  intro m hm\n  use m\n  constructor\n  linarith\n  nlinarith\n  intro h\n  rcases h with \u27e8a, h\u27e9\n  use 1, 0\n  intro m hm\n  use m\n  constructor\n  linarith\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_1467_plus (a : \u2115 \u2192 \u211d) (a_n_def : \u2200 n, a n = (n! * (Real.exp n)) / (n ^ (n + 1))) (h\u2081 : 0 < n!) : \u2203 N : \u2115, \u2200 n : \u2115, n \u2265 N \u2192 0 < a n \u2228 a n = 0 \u2228 a n < 0 := by", "target": "\n  use 0\n  intro n hn\n  have h\u2082 : a n = (n! * (Real.exp n)) / (n ^ (n + 1)) := a_n_def n\n  rw [h\u2082]\n  by_cases h\u2083 : (n! * (Real.exp n)) / (n ^ (n + 1)) = 0 <;> simp_all [div_eq_mul_inv]\n  <;> positivity\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_6690_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 3) (h\u2081 : 0 < x * y) (h\u2082 : 0 < x * z) (h\u2083 : 0 < y * z) : (x^3 + 4)/(x + 2) + (y^3 + 4)/(y + 2) + (z^3 + 4)/(z + 2) \u2265 5 \u2227 (x * y + x * z + y * z)^2 \u2265 3 * (x * y) * (x * z) * (y * z):= by", "target": "\n  have h\u2084 : 0 < x * y * z := by positivity\n  have h\u2085 : 0 < x * y * z * (x + y + z) := by positivity\n  have h\u2086 : 0 < x * y * z * (x * y + x * z + y * z) := by positivity\n  constructor\n  \u00b7 field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x - 1), sq_nonneg (y - 1), sq_nonneg (z - 1),\n      mul_nonneg hx.le hy.le, mul_nonneg hx.le hz.le, mul_nonneg hy.le hz.le]\n  \u00b7 have h\u2087 : (x * y + x * z + y * z) ^ 2 \u2265 3 * (x * y) * (x * z) * (y * z) := by\n      nlinarith [sq_nonneg (x * y - x * z), sq_nonneg (x * y - y * z), sq_nonneg (x * z - y * z),\n        sq_nonneg (x * y + x * z + y * z)]\n    exact h\u2087"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_22145_plus (x : \u2115 \u2192 \u211d) (hx : \u2200 n, x n = 1 / (n + 1)) : \u2203 N : \u2115, \u2200 n : \u2115, N \u2264 n \u2192 |x n| \u2264 1:= by", "target": "\n  use 1\n  intro n hn\n  rw [hx]\n  rw [abs_of_nonneg (show (0 : \u211d) \u2264 1 / (n + 1) from by positivity)]\n  exact by\n    apply le_of_sub_nonneg\n    field_simp\n    rw [le_div_iff]\n    nlinarith\n    positivity"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_47235_plus (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (h : y * (5 - 2 * x ^ 2) = 3) : (2 / x ^ 2 + y \u2265 (7 + 4 * Real.sqrt 3) / 5 \u2227 1 / x ^ 2 + y \u2265 1 + 2 * Real.sqrt 6 / 5) \u2228 (2 / x ^ 2 + y < (7 + 4 * Real.sqrt 3) / 5 \u2228 1 / x ^ 2 + y < 1 + 2 * Real.sqrt 6 / 5)  := by", "target": "\n  by_cases h\u2080 : 2 / x ^ 2 + y \u2265 (7 + 4 * Real.sqrt 3) / 5\n  <;> by_cases h\u2081 : 1 / x ^ 2 + y \u2265 1 + 2 * Real.sqrt 6 / 5\n  <;> simp_all\n  <;> nlinarith [Real.sqrt_nonneg 3, Real.sqrt_nonneg 6,\n    Real.sq_sqrt (show (0 : \u211d) \u2264 3 from by linarith),\n    Real.sq_sqrt (show (0 : \u211d) \u2264 6 from by linarith)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2791 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^2 + b^2) / (a + b) + (b^2 + c^2) / (b + c) \u2265 2 * (Real.sqrt 2 - 1) * (a + c) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2791_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : a * b / (a + b) + b * c / (b + c) + c * a / (c + a) \u2264 1 / 2 * (a + b + c):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_23926_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b + b * c + c * a = 1) :\n  1 / (a ^ 2 + b ^ 2 + c ^ 2 + 2 * a * b + 2 * b * c + 2 * c * a) \u2264 1 / 2 \u2227\n  1 / (a ^ 2 + b ^ 2 + c ^ 2 + 2 * a * b + 2 * b * c + 2 * c * a) \u2264 1 / 2 \u2227\n  1 / (a ^ 2 + b ^ 2 + c ^ 2 + 2 * a * b + 2 * b * c + 2 * c * a) \u2264 1 / 2 \u2227\n  1 / (a ^ 2 + b ^ 2 + c ^ 2 + 2 * a * b + 2 * b * c + 2 * c * a) \u2264 1 / 2 \u2227\n  1 / (a ^ 2 + b ^ 2 + c ^ 2 + 2 * a * b + 2 * b * c + 2 * c * a) \u2264 1 / 2 \u2227\n  1 / (a ^ 2 + b ^ 2 + c ^ 2 + 2 * a * b + 2 * b * c + 2 * c * a) \u2264 1 / 2 \u2227\n  1 / (a ^ 2 + b ^ 2 + c ^ 2 + 2 * a * b + 2 * b * c + 2 * c * a) \u2264 1 / 2 \u2227\n  1 / (a ^ 2 + b ^ 2 + c ^ 2 + 2 * a * b + 2 * b * c + 2 * c * a) \u2264 1 / 2 \u2227\n  1 / (a ^ 2 + b ^ 2 + c ^ 2 + 2 * a * b + 2 * b * c + 2 * c * a) \u2264 1 / 2 \u2227\n  1 / (a ^ 2 + b ^ 2 + c ^ 2 + 2 * a * b + 2 * b * c + 2 * c * a) \u2264 1 / 2:= by", "target": "\n  have : 0 \u2264 a * b := by positivity\n  have : 0 \u2264 b * c := by positivity\n  have : 0 \u2264 c * a := by positivity\n  have : 0 \u2264 a ^ 2 + b ^ 2 + c ^ 2 + 2 * a * b + 2 * b * c + 2 * c * a := by positivity\n  have : 1 / (a ^ 2 + b ^ 2 + c ^ 2 + 2 * a * b + 2 * b * c + 2 * c * a) \u2264 1 / 2 := by\n    rw [div_le_iff] <;> nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  repeat'\n    constructor\n  all_goals\n    linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_5663_plus (A : Fin 5 \u2192 \u211d) (h\u2080 : \u2200 i, A i \u2265 0) (h\u2081 : \u2211 i, A i = 1) (h\u2082 : \u2211 i, i * A i \u2264 1) : \u2211 i, A i * (1 - A i) \u2264 1 \u2227 \u2211 i, A i * (1 - A i) \u2265 0:= by", "target": "\n  constructor\n  all_goals\n    have h\u2083 : (\u2211 i, A i * (1 - A i)) \u2264 1 := by\n      have h\u2084 : \u2211 i, A i * (1 - A i) \u2264 \u2211 i, A i := by\n        apply Finset.sum_le_sum\n        intro x hx\n        nlinarith [h\u2080 x, h\u2081, h\u2082, Finset.single_le_sum (fun i _ => h\u2080 i) hx]\n      simpa [h\u2081] using h\u2084\n    have h\u2084 : \u2211 i, A i * (1 - A i) \u2265 0 := by\n      apply Finset.sum_nonneg\n      intro x hx\n      nlinarith [h\u2080 x, h\u2081, h\u2082, Finset.single_le_sum (fun i _ => h\u2080 i) hx]\n    nlinarith\n  <;> simp_all"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_26480_plus : \u2200 a b : \u2115, a \u2264 999 \u2227 b \u2264 999 \u2192 \u220f i in Finset.range a, ((2 * i - 1) / (2 * i)) \u2264 1 / 44 \u2228 \u220f i in Finset.range b, ((2 * i - 1) / (2 * i)) \u2264 1 / 44 \u2228 \u220f i in Finset.range (a + b), ((2 * i - 1) / (2 * i)) \u2264 1 / 44 \u2228 \u220f i in Finset.range (a + b + 1), ((2 * i - 1) / (2 * i)) \u2264 1 / 44  := by", "target": "\n  rintro a b \u27e8h\u2081, h\u2082\u27e9\n  rcases a with (_ | _ | a) <;> rcases b with (_ | _ | b) <;> norm_num <;> simp_all [Finset.prod_range_succ', Nat.div_eq_of_lt]\n  all_goals\n    omega\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1411 (a b c : \u211d) : (a^2 - b * c) / Real.sqrt ((1 + 2 * Real.sqrt 2) * a^2 + b^2 + c^2) + (b^2 - c * a) / Real.sqrt ((1 + 2 * Real.sqrt 2) * b^2 + c^2 + a^2) + (c^2 - a * b) / Real.sqrt ((1 + 2 * Real.sqrt 2) * c^2 + a^2 + b^2) \u2265 0 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1411_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : a * b * Real.sqrt (1 + 2 * Real.sqrt 2) + b * c * Real.sqrt (1 + 2 * Real.sqrt 2) + c * a * Real.sqrt (1 + 2 * Real.sqrt 2) \u2264 (a + b + c) * (b + c + a) * Real.sqrt (1 + 2 * Real.sqrt 2):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_9785 (a b c : \u211d) : (1 / (a ^ 2 * b + b ^ 2 * c + c ^ 2 * a) + 1 / (a * b * c)) \u2265 4 / (a * b ^ 2 + b * c ^ 2 + c * a ^ 2) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_9785_plus (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : \u2203 a b c : \u211d, 1 / (a ^ 2 * b + b ^ 2 * c + c ^ 2 * a) + 1 / (a * b * c) \u2265 4 / (a * b ^ 2 + b * c ^ 2 + c * a ^ 2) \u2227 a * b * c > 0 \u2227 a * b ^ 2 + b * c ^ 2 + c * a ^ 2 > 0:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_1433_plus (A : Fin 5 \u2192 \u211d) (h\u2080 : \u2200 i, 0 \u2264 A i) (h\u2081 : \u2211 i, A i \u2264 1) (h\u2082 : \u2211 i, (A i * A i) \u2264 1) : \u2211 i, \u2211 j, (A i * A j) \u2264 4:= by", "target": "\n  have h\u2083 : \u2211 i, \u2211 j, (A i * A j) = \u2211 i, A i * \u2211 j, A j := by\n    simp [Finset.sum_mul, Finset.mul_sum]\n  rw [h\u2083]\n  have h\u2084 : \u2211 i, A i * \u2211 j, A j \u2264 \u2211 i, A i * 1 := by\n    apply Finset.sum_le_sum\n    intro x hx\n    have h\u2085 : \u2211 j, A j \u2264 1 := by\n      have h\u2086 : \u2211 j, A j \u2264 \u2211 i, A i := by\n        apply Finset.sum_le_sum_of_subset_of_nonneg\n        \u00b7 intro y hy\n          simp_all\n        \u00b7 intro i hi _\n          simp_all\n      linarith\n    nlinarith [h\u2080 x, h\u2080 x]\n  simp_all\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_46439_plus (a b c : \u211d) (h\u2081 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2082 : a + b + c = 3) (h\u2083 : a * b + b * c + c * a \u2264 3) : a ^ 2 / (2 * b + c) + b ^ 2 / (2 * c + a) + c ^ 2 / (2 * a + b) \u2265 (a * b + b * c + c * a) / 3:= by", "target": "\n  rcases h\u2081 with \u27e8ha, hb, hc\u27e9\n  have h\u2084 : 0 < b * c := by positivity\n  have h\u2085 : 0 < c * a := by positivity\n  have h\u2086 : 0 < a * b := by positivity\n  have h\u2087 : 0 < 2 * b + c := by linarith\n  have h\u2088 : 0 < 2 * c + a := by linarith\n  have h\u2089 : 0 < 2 * a + b := by linarith\n  have h\u2081\u2080 : 0 < (2 * b + c) * (2 * c + a) * (2 * a + b) := by positivity\n  have h\u2081\u2081 : 0 < (2 * b + c) * (2 * c + a) * (2 * a + b) * 3 := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b + b * c + c * a), mul_self_nonneg (a * b - b * c),\n    mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_8372 (a b c d : \u211d) (h : a^2 + b^2 + c^2 + d^2 = 4) : a + b + c + d \u2265 a * b + b * c + c * d + d * a := by\n<hard theorem>", "target": "\ntheorem leanworkbook_8372_plus (a b c d : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 0 \u2264 d) (h\u2082 : a + b + c + d = 4) : a ^ 2 / (a + 1) + b ^ 2 / (b + 1) + c ^ 2 / (c + 1) + d ^ 2 / (d + 1) \u2264 4 / 2 \u2228 a * b + b * c + c * d + d * a \u2265 a + b + c + d \u2228 a + b + c + d \u2264 4 \u2228 a * b + b * c + c * d + d * a \u2264 4:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_28763_plus : \u2200 a b c : \u211d, a + b + c = 0 \u2228 a * b * c = 0 \u2228 a * b * c \u2260 0 \u2192 a^3 + b^3 + c^3 - 3 * a * b * c = (a + b + c) * (a^2 + b^2 + c^2 - a * b - b * c - a * c) \u2228 (a^2 + b^2 + c^2 - a * b - b * c - a * c) \u2260 0:= by", "target": "\n  rintro a b c (h | h | h)\n  all_goals\n    ring_nf\n    aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_48004_plus : \u2200 x : \u211d, 0.6 < x \u2227 x < 1 \u2192 x - x ^ 3 < 0.6 \u2228 \u2203 y, y \u2208 Set.Ioo 0 1 \u2227 y ^ 2 < x:= by", "target": "\n  rintro x \u27e8hx1, hx2\u27e9\n  refine' or_iff_not_imp_right.mpr fun h => _\n  norm_num at *\n  nlinarith [pow_two_nonneg (x - 1 / 2), pow_two_nonneg (x ^ 2 - 1 / 2)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_22817_plus (x y z : \u211d) (h\u2081 : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z) (h\u2082 : x + y + z = 1) : (1 - x * y) * (1 - y * z) * (1 - z * x) \u2265 (1 - x - y - z) ^ 2 * (x * y + y * z + z * x):= by", "target": "\n  have h\u2083 : 0 \u2264 x * y := by nlinarith\n  have h\u2084 : 0 \u2264 y * z := by nlinarith\n  have h\u2085 : 0 \u2264 z * x := by nlinarith\n  have h\u2086 : (x + y + z) ^ 2 = 1 := by nlinarith\n  nlinarith [mul_self_nonneg (x - y), mul_self_nonneg (y - z),\n    mul_self_nonneg (z - x), mul_nonneg h\u2083 h\u2084, mul_nonneg h\u2084 h\u2085, mul_nonneg h\u2085 h\u2083]\n  <;> linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_10952_plus (n : \u2115) (hn : 0 < n) : (\u2203 f : \u211d \u2192 \u211d, Continuous f \u2227 (\u2200 x y : \u211d, f (x + y) = f x + f y + x * y) \u2227 \u2203 k : \u211d, \u2200 x : \u211d, f x = k * x + x ^ 2 / 2) \u2194 (\u2203 k : \u211d, \u2200 x : \u211d, \u2203 y : \u211d, y \u2264 x \u2227 (x - y) ^ 2 \u2264 n * (x ^ 2 + y ^ 2)) := by", "target": "\n  apply Iff.intro\n  \u00b7 rintro \u27e8f, hf, hf', hf''\u27e9\n    use 0\n    intro x\n    use x\n    constructor\n    \u00b7 linarith\n    \u00b7 nlinarith\n  \u00b7 rintro \u27e8k, hk\u27e9\n    use fun x => k * x + x ^ 2 / 2\n    constructor\n    \u00b7 exact Continuous.add (Continuous.mul continuous_const continuous_id) (by continuity)\n    constructor\n    \u00b7 intro x y\n      simp only [mul_add, add_mul, mul_comm, mul_left_comm, sq]\n      ring\n    \u00b7 use k\n      intro x\n      simp"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_579_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 3) (h' : a * b + b * c + c * a \u2264 3) (h'' : Real.sqrt 3 \u2265 1) : (Real.sqrt (3 - a) * Real.sqrt (3 - b) * Real.sqrt (3 - c) \u2265 1) \u2228 (Real.sqrt (3 - a) * Real.sqrt (3 - b) * Real.sqrt (3 - c) \u2265 0 \u2227 a * b + b * c + c * a \u2264 3):= by", "target": "\n  right\n  constructor\n  exact mul_nonneg (mul_nonneg (Real.sqrt_nonneg _) (Real.sqrt_nonneg _)) (Real.sqrt_nonneg _)\n  linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_7046_plus (a b c : \u211d) (hab : 0 < a \u2227 0 < b \u2227 0 < c) (h : a + b + c = 3 * a * b * c) :  (1 / a + 1 / b + 1 / c) ^ 2 \u2265 3 * (1 / a * (1 / b) + 1 / b * (1 / c) + 1 / c * (1 / a)) \u2227 (1 / a + 1 / b + 1 / c) ^ 2 \u2265 9:= by", "target": "\n  have h\u2080 : 0 < a := by linarith\n  have h\u2081 : 0 < b := by linarith\n  have h\u2082 : 0 < c := by linarith\n  have h\u2083 : 0 < a * b := by positivity\n  have h\u2084 : 0 < b * c := by positivity\n  have h\u2085 : 0 < c * a := by positivity\n  have h\u2086 : 0 < a * b * c := by positivity\n  constructor\n  \u00b7 apply le_of_sub_nonneg\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b),\n      sq_nonneg (a * b * c), sq_nonneg (a * b * c * (a * b - b * c)),\n      sq_nonneg (a * b * c * (b * c - c * a)), sq_nonneg (a * b * c * (c * a - a * b))]\n  \u00b7 apply le_of_sub_nonneg\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b),\n      sq_nonneg (a * b * c), sq_nonneg (a * b * c * (a * b - b * c)),\n      sq_nonneg (a * b * c * (b * c - c * a)), sq_nonneg (a * b * c * (c * a - a * b))]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_51044_plus (a b c d : \u211d) (h\u2080 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 0 \u2264 d) (h\u2081 : a * b * c * d \u2264 1) : (1 + a ^ 2) * (1 + b ^ 2) * (1 + c ^ 2) * (1 + d ^ 2) \u2265 (1 + a * b) * (1 + c * d) * (1 + a * d) * (1 + b * c):= by", "target": "\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (a - d), sq_nonneg (b - c), sq_nonneg (b - d), sq_nonneg (c - d),\n    mul_nonneg h\u2080.1 h\u2080.2.1, mul_nonneg h\u2080.1 h\u2080.2.2.1, mul_nonneg h\u2080.1 h\u2080.2.2.2, mul_nonneg h\u2080.2.1 h\u2080.2.2.1,\n    mul_nonneg h\u2080.2.1 h\u2080.2.2.2, mul_nonneg h\u2080.2.2.1 h\u2080.2.2.2,\n    mul_nonneg (sq_nonneg (a * b)) (sq_nonneg (c * d)),\n    mul_nonneg (sq_nonneg (a * d)) (sq_nonneg (b * c))]\n  <;> simp [h\u2080, h\u2081]\n  <;> nlinarith\n  <;> simp [h\u2080, h\u2081]\n  <;> nlinarith\n  <;> simp [h\u2080, h\u2081]\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_81920_plus : \u2200 x y z : \u211d, 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z \u2227 x + y + z \u2264 1 \u2192  x ^ 2 * y ^ 2 * z ^ 2 * (x + y + z) \u2264 (x * y * z) * (x + y + z):= by", "target": "\n  rintro x y z \u27e8hx, hy, hz, h\u27e9\n  have h1 : 0 \u2264 x * y := by positivity\n  have h2 : 0 \u2264 x * y * z := by positivity\n  have h3 : 0 \u2264 x * y * z * (x + y + z) := by positivity\n  have h4 : x * y * z * (x + y + z) \u2265 0 := by positivity\n  have h5 : x ^ 2 * y ^ 2 * z ^ 2 * (x + y + z) \u2264 (x * y * z) * (x + y + z) := by\n    have h6 : x ^ 2 * y ^ 2 * z ^ 2 \u2264 x * y * z := by\n      gcongr\n      all_goals nlinarith\n    nlinarith\n  exact h5"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_15550_plus (a b c n : \u211d) (habc : a * b * c = 1) (hn : 1 \u2264 n) : \u2203 x y z : \u211d, x * y * z \u2264 1 \u2227 (x ^ n + y ^ n + z ^ n) \u2265 (x ^ 2 + y ^ 2 + z ^ 2) * (x + y + z) / 9:= by", "target": "\n  refine' \u27e81, 1, 1, _, _\u27e9 <;> simp_all\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_8555_plus (a b c d : \u211d) (hab : 0 \u2264 a) (hbc : 0 \u2264 b) (hcd : 0 \u2264 c) (hda : 0 \u2264 d) : (\u2203 x y z w : \u211d, x ^ 2 + y ^ 2 + z ^ 2 + w ^ 2 = 1 \u2227 a * x * y * z + b * y * z * w + c * z * w * a + d * w * a * b \u2264 1 \u2227 0 \u2264 a * b * c * d):= by", "target": "\n  use 1, 0, 0, 0\n  constructor\n  nlinarith\n  constructor\n  nlinarith [mul_nonneg hab hbc, mul_nonneg hbc hcd, mul_nonneg hcd hda, mul_nonneg hda hab]\n  positivity"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4735 (f : \u2115 \u2192 \u2115) (h\u2081 : \u2200 x, f x = x + 1) : f 3 = 4 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4735_plus (f : \u2115 \u2192 \u2115) (h\u2081 : \u2200 x, f x = x + 1) (h\u2082 : \u2200 x, f (x + 1) = f x + 1) : \u2200 x, f x = x + 1 \u2227 \u2200 x, f (x + 1) = f x + 1 \u2194 \u2200 x, f x = x + 1:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_70422_plus : \u2200 \u03b5 : \u211d, \u03b5 > 0 \u2192 \u2203 \u03b4 : \u211d, \u03b4 > 0 \u2227 \u2200 x : \u211d, x \u2208 Set.Ioo (-\u03b4) \u03b4 \u2192 |(Real.sqrt (1 + x ^ 2) - 1) ^ 2 - x ^ 2| < \u03b5   := by", "target": "\n  intro \u03b5 \u03b5_pos\n  use \u03b5/2, by positivity\n  intro x hx\n  have h : 0 < Real.sqrt (1 + x ^ 2) := Real.sqrt_pos.mpr (by nlinarith)\n  have hx' : x ^ 2 < (\u03b5 / 2) ^ 2 := by\n    nlinarith [hx.1, hx.2]\n  have hx'' : |(Real.sqrt (1 + x ^ 2) - 1) ^ 2 - x ^ 2| < \u03b5 := by\n    rw [abs_sub_lt_iff]\n    constructor <;>\n      nlinarith [Real.sq_sqrt (show 0 \u2264 1 + x ^ 2 by nlinarith),\n        Real.sqrt_nonneg (1 + x ^ 2),\n        sq_nonneg (Real.sqrt (1 + x ^ 2) - 1),\n        sq_nonneg (Real.sqrt (1 + x ^ 2) + 1)]\n  exact hx''"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_77102_plus (a b x : \u211d) (hab : 0 < a \u2227 0 < b) (hx : 0 < x \u2227 x < Real.pi / 2) : (1 + Real.sin x ^ 2) * (1 + Real.tan x ^ 2) \u2265 4 * Real.sin x * Real.tan x / (1 + Real.sin x * Real.tan x):= by", "target": "\n  have h1 : 0 < Real.sin x := Real.sin_pos_of_pos_of_lt_pi hx.1 (by linarith)\n  have h2 : 0 < Real.tan x := Real.tan_pos_of_pos_of_lt_pi_div_two hx.1 hx.2\n  have h3 : 0 < Real.sin x * Real.tan x := mul_pos h1 h2\n  have h4 : 0 < 1 + Real.sin x * Real.tan x := by linarith\n  have h5 : 0 < Real.sin x ^ 2 * Real.tan x ^ 2 := by positivity\n  field_simp [h1, h2, h3, h4, h5]\n  rw [div_le_iff, mul_comm]\n  nlinarith [sq_nonneg (Real.sin x - Real.tan x), sq_nonneg (Real.sin x + Real.tan x),\n    Real.sin_sq_add_cos_sq x]\n  positivity"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4976 (a b c : \u211d) : a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 7 * (2 * (a ^ 2 + b ^ 2 + c ^ 2) - 7 * (a * b + b * c + c * a)) ^ 2 \u2265 39 * (a + b + c) ^ 4 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4976_plus (a b c : \u211d) (hab : 0 \u2264 a) (hbc : 0 \u2264 b) (hca : 0 \u2264 c) (habc : a + b + c \u2264 1) : 3 * (1 - a) * (1 - b) * (1 - c) ^ 2 \u2265 (1 - a - b - c) * (1 - a - b - c) * (1 - a - b - c) \u2227 3 * (1 - a) * (1 - b) * (1 - c) ^ 2 \u2265 (1 - a - b - c) * (1 - a - b - c) * (1 - a - b - c):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_36676_plus  (x y z : \u211d) (h\u2080 : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z) (h\u2081 : x + y + z = 1) :\n    x * y * z * (x * y + y * z + z * x) \u2264 1 / 27 \u2227 x * y * z \u2264 1 / 27:= by", "target": "\n  have h\u2082 : 0 \u2264 x * y := by nlinarith\n  have h\u2083 : 0 \u2264 y * z := by nlinarith\n  have h\u2084 : 0 \u2264 z * x := by nlinarith\n  have h\u2085 : 0 \u2264 x * y * z := by nlinarith\n  have h\u2086 : (x + y + z) ^ 2 = 1 := by nlinarith\n  have h\u2087 : x * y * z * (x * y + y * z + z * x) \u2264 1 / 27 := by\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n      mul_self_nonneg (x * y + y * z + z * x),\n      mul_self_nonneg (x * y - y * z), mul_self_nonneg (y * z - z * x),\n      mul_self_nonneg (z * x - x * y)]\n  have h\u2088 : x * y * z \u2264 1 / 27 := by\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n      mul_self_nonneg (x * y + y * z + z * x),\n      mul_self_nonneg (x * y - y * z), mul_self_nonneg (y * z - z * x),\n      mul_self_nonneg (z * x - x * y)]\n  exact \u27e8h\u2087, h\u2088\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_6474 (a b c : \u211d) : (a^2 + b^2 + c^2) / (a * b + b * c + c * a) + 1 / 2 \u2265 a / (b + c) + b / (c + a) + c / (a + b) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_6474_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b + b * c + c * a = 0) : a ^ 2 / (b ^ 2 + c ^ 2) + b ^ 2 / (a ^ 2 + c ^ 2) + c ^ 2 / (a ^ 2 + b ^ 2) \u2265 3 * (a * b) / (a ^ 2 + b ^ 2 + c ^ 2):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_37917_plus (a b c : \u211d) (habc : a * b * c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0) : (a + b + c) ^ 2 / (a * b + b * c + c * a) \u2265 3 * (Real.sqrt 3 / 2) \u2227 (a + b + c) ^ 2 / (a * b + b * c + c * a) \u2265 3 * (Real.sqrt 3 / 2):= by", "target": "\n  have : 0 < a * b := by nlinarith\n  have : 0 < b * c := by nlinarith\n  have : 0 < c * a := by nlinarith\n  have : 0 < a * b + b * c + c * a := by nlinarith\n  have : 0 < Real.sqrt 3 := by nlinarith [Real.sqrt_pos.mpr (by norm_num : (0 : \u211d) < 3)]\n  constructor\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 by norm_num),\n    mul_self_nonneg (a - b),\n    mul_self_nonneg (b - c),\n    mul_self_nonneg (c - a),\n    mul_self_nonneg (a * b + b * c + c * a),\n    mul_self_nonneg (a * b - b * c),\n    mul_self_nonneg (b * c - c * a),\n    mul_self_nonneg (c * a - a * b)]\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 by norm_num),\n    mul_self_nonneg (a - b),\n    mul_self_nonneg (b - c),\n    mul_self_nonneg (c - a),\n    mul_self_nonneg (a * b + b * c + c * a),\n    mul_self_nonneg (a * b - b * c),\n    mul_self_nonneg (b * c - c * a),\n    mul_self_nonneg (c * a - a * b)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5320 (a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : (a / (a + b + c + 3 * d) + b / (b + c + d + 3 * a) + c / (c + d + a + 3 * b) + d / (d + a + b + 3 * c)) \u2265 2 / 3 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5320_plus (a b c d : \u211d) (hab : 0 < a) (hbc : 0 < b) (hcd : 0 < c) (hda : 0 < d) : (1 / (a + b + c + 3 * d) + 1 / (b + c + d + 3 * a) + 1 / (c + d + a + 3 * b) + 1 / (d + a + b + 3 * c)) \u2264 (1 / a + 1 / b + 1 / c + 1 / d):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_50005_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \u2203 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = x * y * z \u2227 (x * y) / (y * z) + (y * z) / (z * x) + (z * x) / (x * y) \u2265 3:= by", "target": "\n  refine' \u27e8x, y, z, hx, hy, hz, rfl, _\u27e9\n  have hxy : 0 < x * y := mul_pos hx hy\n  have hyz : 0 < y * z := mul_pos hy hz\n  have hxz : 0 < z * x := mul_pos hz hx\n  have h : (x * y) / (y * z) + (y * z) / (z * x) + (z * x) / (x * y) \u2265 3 := by\n    have h1 : 0 < x * y * (y * z) := by positivity\n    have h2 : 0 < y * z * (z * x) := by positivity\n    have h3 : 0 < z * x * (x * y) := by positivity\n    field_simp [hxy, hyz, hxz, h1, h2, h3]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y)]\n  exact h"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_27589_plus (a b c : \u211d) (hab : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 3) : a * b ^ 2 * c ^ 2 + b * c ^ 2 * a ^ 2 + c * a ^ 2 * b ^ 2 \u2264 3 * (a ^ 2 + b ^ 2 + c ^ 2):= by", "target": "\n  have : (a + b + c) ^ 2 = 9 := by rw [habc, show (3 : \u211d) ^ 2 = 9 by norm_num]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_pos hab hb, mul_pos hb hc, mul_pos hc hab,\n    mul_pos (mul_pos hab hb) hc, mul_pos (mul_pos hb hc) hab, mul_pos (mul_pos hc hab) hb]\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2020 (a b c: \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (habc : a * b * c = 1): 4 * ((a / b)^(1 / 3) + (b / c)^(1 / 3) + (c / a)^(1 / 3)) \u2264 3 * (2 + a + b + c + 1 / a + 1 / b + 1 / c)^(2 / 3) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2020_plus (a b c : \u211d) (habc : a * b * c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0) : (a * b) * (b * c) * (c * a) \u2264 (a + b + c) ^ 2 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_19866_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) (h : (1 - a) * (1 - b) * (1 - c) \u2260 0) : 1 / (a + b + 1) + 1 / (b + c + 1) + 1 / (c + a + 1) \u2265 3 / 2 - 1 / 2 * (a * b + b * c + c * a):= by", "target": "\n  have h\u2080 : 0 \u2264 a * b := by positivity\n  have h\u2081 : 0 \u2264 b * c := by positivity\n  have h\u2082 : 0 \u2264 c * a := by positivity\n  have h\u2083 : 0 \u2264 a * b * c := by positivity\n  have h\u2084 : 1 / (a + b + 1) \u2265 1 / 2 := by\n    rw [ge_iff_le, le_div_iff]\n    nlinarith\n    nlinarith\n  have h\u2085 : 1 / (b + c + 1) \u2265 1 / 2 := by\n    rw [ge_iff_le, le_div_iff]\n    nlinarith\n    nlinarith\n  have h\u2086 : 1 / (c + a + 1) \u2265 1 / 2 := by\n    rw [ge_iff_le, le_div_iff]\n    nlinarith\n    nlinarith\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4985 (p : \u2115) (hp : p.Prime) (hp3 : 3 < p) : (p^3).choose (p^2) \u2261 (p^2).choose p [ZMOD p^8] := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4985_plus (p : \u2115) (hp : p.Prime) (hp3 : 3 < p) : (\u2211 k in Finset.Ico 0 (p + 1), (p.choose k : \u2124) ^ 2) \u2265 p:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2534 {a b c : \u211d} (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) (hA: 0 < a \u2227 0 < b \u2227 0 < c) : (a + b + c) * (3 * (a ^ 2 + b ^ 2 + c ^ 2) - 4 * (a * b + b * c + c * a)) \u2265 6 * a * b * c * (a ^ 2 / (b ^ 2 + c ^ 2) + b ^ 2 / (c ^ 2 + a ^ 2) + c ^ 2 / (a ^ 2 + b ^ 2) - 3) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2534_plus : \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a + b > c \u2227 b + c > a \u2227 a + c > b \u2192 0 < a \u2227 0 < b \u2227 0 < c \u2192 (a + b + c) * (3 * (a ^ 2 + b ^ 2 + c ^ 2) - 4 * (a * b + b * c + c * a)) \u2265 6 * a * b * c * (a ^ 2 / (b ^ 2 + c ^ 2) + b ^ 2 / (c ^ 2 + a ^ 2) + c ^ 2 / (a ^ 2 + b ^ 2) - 3) \u2228 (\u2203 x y z : \u211d, x > 0 \u2227 y > 0 \u2227 z > 0 \u2227 x + y > z \u2227 y + z > x \u2227 x + z > y \u2227 a + b + c = x + y + z \u2227 (x ^ 2 + y ^ 2 + z ^ 2) \u2264 (a ^ 2 + b ^ 2 + c ^ 2)) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1951 {a b c : \u211d} : a ^ 3 + b ^ 3 + c ^ 3 + 3 * (a * b ^ 2 + b * c ^ 2 + c * a ^ 2) + 6 * a * b * c \u2265 6 * (a ^ 2 * b + b ^ 2 * c + c ^ 2 * a) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1951_plus : \u2200 a b c : \u211d, a ^ 2 + b ^ 2 + c ^ 2 = 1 \u2192 0 \u2264 (a * b + b * c + c * a) ^ 2 \u2227 (a * b + b * c + c * a) ^ 2 \u2264 1 \u2228 (a * b + b * c + c * a) ^ 2 \u2265 1 \u2227 (a * b + b * c + c * a) ^ 2 \u2264 3 \u2228 (a * b + b * c + c * a) ^ 2 \u2265 3 \u2227 (a * b + b * c + c * a) ^ 2 \u2264 4:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5655 (a b c : \u211d) : (a / (b * c - a ^ 2) + b / (c * a - b ^ 2) + c / (a * b - c ^ 2)) * (1 / (b * c - a ^ 2) + 1 / (c * a - b ^ 2) + 1 / (a * b - c ^ 2)) = a / (b * c - a ^ 2) ^ 2 + b / (c * a - b ^ 2) ^ 2 + c / (a * b - c ^ 2) ^ 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5655_plus (a b c : \u211d) (h\u2081 : a \u2260 0 \u2227 b \u2260 0 \u2227 c \u2260 0) (h\u2082 : a * b * c \u2260 0) (h\u2083 : a ^ 2 \u2260 b ^ 2) (h\u2084 : a ^ 2 \u2260 c ^ 2) (h\u2085 : b ^ 2 \u2260 c ^ 2) (h\u2086 : a * b \u2260 c ^ 2) (h\u2087 : a * c \u2260 b ^ 2) (h\u2088 : b * c \u2260 a ^ 2) : (a / (b * c - a ^ 2) + b / (c * a - b ^ 2) + c / (a * b - c ^ 2)) * (1 / (b * c - a ^ 2) + 1 / (c * a - b ^ 2) + 1 / (a * b - c ^ 2)) \u2265 a / (b * c - a ^ 2) ^ 2 + b / (c * a - b ^ 2) ^ 2 + c / (a * b - c ^ 2) ^ 2 \u2228 (a / (b * c - a ^ 2) + b / (c * a - b ^ 2) + c / (a * b - c ^ 2)) * (1 / (b * c - a ^ 2) + 1 / (c * a - b ^ 2) + 1 / (a * b - c ^ 2)) < a / (b * c - a ^ 2) ^ 2 + b / (c * a - b ^ 2) ^ 2 + c / (a * b - c ^ 2) ^ 2 \u2228 a / (b * c - a ^ 2) ^ 2 + b / (c * a - b ^ 2) ^ 2 + c / (a * b - c ^ 2) ^ 2 = (a / (b * c - a ^ 2) + b / (c * a - b ^ 2) + c / (a * b - c ^ 2)) * (1 / (b * c - a ^ 2) + 1 / (c * a - b ^ 2) + 1 / (a * b - c ^ 2)):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_153 (x y z : \u211d) : (x + y + z) * (z * y ^ 3 + x * z ^ 3 + x ^ 3 * y) \u2265 (x * y + x * z + y * z) * (x * y ^ 2 + y * z ^ 2 + x ^ 2 * z) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_153_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \u2203 a b c : \u211d, a * b * c \u2264 x * y * z \u2227 a * b * c \u2264 y * z * x \u2227 a * b * c \u2264 z * x * y \u2227 a * b * c \u2265 0 \u2227 a * b * c \u2264 x * y * z \u2227 a * b * c \u2264 y * z * x \u2227 a * b * c \u2264 z * x * y \u2227 a * b * c \u2265 0 \u2227 a * b * c \u2264 x * y * z \u2227 a * b * c \u2264 y * z * x \u2227 a * b * c \u2264 z * x * y \u2227 a * b * c \u2265 0 \u2227 a * b * c \u2264 x * y * z \u2227 a * b * c \u2264 y * z * x \u2227 a * b * c \u2264 z * x * y \u2227 a * b * c \u2265 0 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5712 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x^2 + y^2 + z^2 = x*y*z) : x*y + x*z + y*z \u2265 5*(x + y + z) - 18 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5712_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x^2 + y^2 + z^2 = x*y*z) : \u2203 a b c : \u211d, a * b * c \u2264 x^2 + y^2 + z^2 \u2227 a * b * c \u2264 (x * y + x * z + y * z)^2 \u2227 a * b * c \u2264 (x * y + x * z + y * z)^2 + (x * y * z):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_8298 (a : \u2115 \u2192 \u211d) (k l : \u211d) (h\u2081 : k = 1 / exp 1) (h\u2082 : l = (exp 1 - 1) / exp 1) : a (n + 1) = k * a n + l \u2192 a n = 1 + k ^ n := by\n<hard theorem>", "target": "\ntheorem leanworkbook_8298_plus (n : \u2115) (hn : 0 < n) : (1 : \u211d) + (1 / exp 1) ^ n \u2264 2 * (1 + (1 / exp 1) ^ n) \u2227 (1 : \u211d) + (1 / exp 1) ^ n \u2264 2 * (1 + (1 / exp 1) ^ n) \u2227 (1 : \u211d) + (1 / exp 1) ^ n \u2264 2 * (1 + (1 / exp 1) ^ n) \u2227 (1 : \u211d) + (1 / exp 1) ^ n \u2264 2 * (1 + (1 / exp 1) ^ n) \u2227 (1 : \u211d) + (1 / exp 1) ^ n \u2264 2 * (1 + (1 / exp 1) ^ n) \u2227 (1 : \u211d) + (1 / exp 1) ^ n \u2264 2 * (1 + (1 / exp 1) ^ n) \u2227 (1 : \u211d) + (1 / exp 1) ^ n \u2264 2 * (1 + (1 / exp 1) ^ n) \u2227 (1 : \u211d) + (1 / exp 1) ^ n \u2264 2 * (1 + (1 / exp 1) ^ n) \u2227 (1 : \u211d) + (1 / exp 1) ^ n \u2264 2 * (1 + (1 / exp 1) ^ n) \u2227 (1 : \u211d) + (1 / exp 1) ^ n \u2264 2 * (1 + (1 / exp 1) ^ n) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2974 (a b c : \u211d) (h : c \u2265 a \u2227 a \u2265 b) : a^2 + b^2 + c^2 - a * b - b * c - c * a \u2265 2 * (a - b) * (a - c) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2974_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a + b + c = 1) (h\u2083 : 0 \u2264 a * b) (h\u2084 : 0 \u2264 a * c) (h\u2085 : 0 \u2264 b * c) : (a * b) ^ 2 / (a + b) ^ 2 + (a * c) ^ 2 / (a + c) ^ 2 + (b * c) ^ 2 / (b + c) ^ 2 \u2265 0 \u2227 (a * b) ^ 2 / (a + b) ^ 2 + (a * c) ^ 2 / (a + c) ^ 2 + (b * c) ^ 2 / (b + c) ^ 2 \u2264 3 * (a + b + c):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_53138_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a * b + b * c + c * a \u2264 1) : 1 / (a + b) + 1 / (b + c) + 1 / (c + a) \u2265 0 \u2228 (a * b + b * c + c * a = 1 \u2227 1 / (a + b) + 1 / (b + c) + 1 / (c + a) \u2265 5 / 2 \u2228 1 / (a + b) + 1 / (b + c) + 1 / (c + a) \u2265 5 / 2 \u2228 1 / (a + b) + 1 / (b + c) + 1 / (c + a) \u2265 5 / 2):= by", "target": "\n  have : 0 \u2264 a * b := by nlinarith\n  have : 0 \u2264 b * c := by nlinarith\n  have : 0 \u2264 c * a := by nlinarith\n  have : 0 \u2264 (a + b) := by nlinarith\n  have : 0 \u2264 (b + c) := by nlinarith\n  have : 0 \u2264 (c + a) := by nlinarith\n  left\n  positivity\n  <;> try norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_6995 {p q : \u2115} (hp : p.Prime) (hq : p = 2 * q + 1) : (q!)^2 + (-1 : \u2124)^q \u2261 0 [ZMOD p] := by\n<hard theorem>", "target": "\ntheorem leanworkbook_6995_plus : \u2200 (p : \u2115), p.Prime \u2192 (\u2203 x : \u2115, p \u2223 x^2 + 1) \u2228 (\u2203 x : \u2115, p \u2223 x^2 - 1) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4606 (x : \u211d) (h : 1 \u2264 x \u2227 x \u2264 2) : x + 2 / x \u2264 3 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4606_plus (x : \u211d) (h\u2081 : 1 \u2264 x \u2227 x \u2264 2) : 1 / (x + 1) \u2264 1 \u2228 1 \u2264 x \u2227 x \u2264 2 \u2227 1 / (x + 1) \u2264 1:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1291 (a b c : \u211d) : (3 / 2) * (a * b * c + a) \u2264 a ^ 3 + b ^ 3 + c ^ 3 \u2227 a ^ 3 + b ^ 3 + c ^ 3 \u2264 (17 / 5) * (a * b * c + a) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1291_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a + b + c = 1) : (1 / 2) * (a ^ 2 * b ^ 2 * c ^ 2) \u2264 a ^ 3 + b ^ 3 + c ^ 3 \u2227 a ^ 3 + b ^ 3 + c ^ 3 \u2264 (17 / 5) * (a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 + b ^ 2 + c ^ 2):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_6590 (f : \u211d \u2192 \u211d) (hf : Continuous f) (a : \u211d) : \u2203 c \u2208 Set.Icc 0 (1 / 2), f c = f (c + 1 / 2) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_6590_plus (n : \u2115) (hn : 0 < n) : (\u2203 x \u2208 Set.Icc 0 1, \u2203 y \u2208 Set.Icc 0 1, 1 / (2 * n : \u211d) \u2264 |x - y|) \u2228 (\u2203 x \u2208 Set.Icc 0 1, \u2203 y \u2208 Set.Icc 0 1, |x - y| < 1 / (2 * n : \u211d)) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2500 (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x^2 + y^2 = 1) : 1 / (1 + x^2) + 1 / (1 + y^2) + 1 / (1 + x * y) \u2265 3 / (1 + (x + y) ^ 2 / 4) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2500_plus (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x^2 + y^2 = 1) : \u2203 (z : \u211d), 1 / (1 + x ^ 2) + 1 / (1 + y ^ 2) + 1 / (1 + x * y) \u2265 3 / (1 + (x + y) ^ 2 / 4) \u2227 3 / (1 + (x + y) ^ 2 / 4) \u2265 z \u2227 1 / (1 + x ^ 2) + 1 / (1 + y ^ 2) + 1 / (1 + x * y) \u2265 z := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_81722_plus (a b c d : \u2115) (h1 : a + b + c + d = 2023) (h2 : 2023 \u2223 (a * b + a * c + a * d + b * c + b * d + c * d)) (h3 : 2023 \u2223 (a * b * c + b * c * d + c * d * a + d * a * b)) (h4 : 2023 \u2223 (a * b * c * d)) : a * b * c * d \u2264 2023^4:= by", "target": "\n  norm_num [Nat.dvd_iff_mod_eq_zero] at h1 h2 h3 h4\n  have : a * b * c * d \u2264 2023^4 := by\n    have : a * b * c * d \u2264 2023 * 2023 * 2023 * 2023 := by\n      gcongr\n      all_goals nlinarith\n    nlinarith\n  exact this"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_9582 (X : Set \u2115) (hX : \u2203 x, x \u2208 X) (hX' : \u2200 x \u2208 X, (4*x) \u2208 X \u2227 (Nat.floor (Real.sqrt x)) \u2208 X) : X = Set.univ := by\n<hard theorem>", "target": "\ntheorem leanworkbook_9582_plus (X : Set \u2115) (h\u2080 : \u2203 x, x \u2208 X) (h\u2081 : \u2200 x \u2208 X, (4*x) \u2208 X \u2227 (Nat.floor (Real.sqrt x)) \u2208 X) : \u2203 x, x \u2208 X \u2227 \u2203 y, y \u2208 X \u2227 (4*x) \u2208 X \u2227 (Nat.floor (Real.sqrt x)) \u2208 X \u2227 (4*y) \u2208 X \u2227 (Nat.floor (Real.sqrt y)) \u2208 X \u2227 x \u2260 y \u2228 x \u2208 X \u2227 x \u2208 X \u2227 (4*x) \u2208 X \u2227 (Nat.floor (Real.sqrt x)) \u2208 X \u2227 x = x:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4018 (a b c: \u211d) : (a^2 + b^2 + c^2)^2 \u2265 3 * (a^3 * b + b^3 * c + c^3 * a) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4018_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a + b + c = 1) : (1 - a ^ 2 - b ^ 2) ^ 2 + (1 - b ^ 2 - c ^ 2) ^ 2 + (1 - c ^ 2 - a ^ 2) ^ 2 + 4 * (a ^ 2 * b ^ 2 * c ^ 2) \u2265 3 * a * b * c * (a + b + c):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_12280_plus (n : \u2115) (hn : 1 < n) : \u2203 x y : \u2115, x \u2264 y \u2227 y \u2264 n \u2227 (x ^ 2 + y ^ 2 \u2264 n ^ 2 \u2227 x ^ 2 + y ^ 2 \u2260 0 \u2227 \u2203 z : \u2115, z \u2264 n \u2227 z \u2260 0 \u2227 z ^ 2 \u2264 n ^ 2):= by", "target": "\n  use 1, 1\n  have h1 : 1 \u2264 n := by linarith\n  have h2 : 1 ^ 2 + 1 ^ 2 \u2264 n ^ 2 := by nlinarith\n  have h3 : 1 ^ 2 + 1 ^ 2 \u2260 0 := by norm_num\n  have h4 : \u2203 z : \u2115, z \u2264 n \u2227 z \u2260 0 \u2227 z ^ 2 \u2264 n ^ 2 := by\n    use 1\n    have h5 : 1 \u2264 n := by linarith\n    have h6 : 1 ^ 2 \u2264 n ^ 2 := by nlinarith\n    have h7 : 1 \u2260 0 := by norm_num\n    exact \u27e8h5, h7, h6\u27e9\n  exact \u27e8by linarith, by linarith, h2, h3, h4\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_17017_plus (n : \u2115) (a b c : \u2115 \u2192 \u211d) (h\u2081 : \u2200 i, a i > 0 \u2227 b i > 0 \u2227 c i > 0) (h\u2082 : \u2200 i, a i + b i + c i = 3) (h\u2083 : \u2200 i, a i * b i * c i = 1) : \u2211 i in Finset.range n, (a i ^ 2 + b i ^ 2 + c i ^ 2) ^ (3 / 2) \u2264 3^n * (3^3)  := by", "target": "\n  have h\u2084 : \u2200 i, a i ^ 2 + b i ^ 2 + c i ^ 2 \u2264 9 := by\n    intro i\n    nlinarith [sq_nonneg (a i - b i), sq_nonneg (b i - c i), sq_nonneg (c i - a i),\n      h\u2081 i, h\u2082 i, h\u2083 i]\n  calc\n    \u2211 i in Finset.range n, (a i ^ 2 + b i ^ 2 + c i ^ 2) ^ (3 / 2) \u2264 \u2211 i in Finset.range n, 9 ^ (3 / 2) := by\n      apply Finset.sum_le_sum\n      intro x hx\n      exact pow_le_pow_of_le_left (by nlinarith [h\u2081 x, h\u2082 x, h\u2083 x]) (h\u2084 x) _\n    _ = \u2211 i in Finset.range n, 9 ^ (3 / 2) := by rfl\n    _ = n * 9 ^ (3 / 2) := by simp [Finset.sum_const, Finset.card_range]\n    _ \u2264 3^n * (3^3) := by\n      have h\u2085 : (9 : \u211d) ^ (3 / 2) \u2264 3 ^ 3 := by norm_num\n      have h\u2086 : (n : \u211d) \u2264 3 ^ n := by\n        norm_cast\n        exact Nat.le_of_lt (Nat.lt_pow_self (by norm_num) n)\n      calc\n        (n * 9 ^ (3 / 2) : \u211d) \u2264 (3 ^ n * 9 ^ (3 / 2)) := by gcongr\n        _ \u2264 (3 ^ n * 3 ^ 3) := by gcongr\n      <;> norm_num\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_58647_plus (n : \u2115) (hn : 0 < n) : (\u2203 x, 0 < x \u2227 x \u2264 1 \u2227 \u2203 z, x \u2264 z \u2227 (1 - x) \u2264 z) \u2228 (\u2200 x, 0 < x \u2192 x \u2264 1 \u2192 \u2200 z, x \u2264 z \u2192 (1 - x) \u2264 z \u2192 x + (1 - x) \u2264 z)  := by", "target": "\n  refine' or_iff_not_imp_right.mpr fun h => \u27e81, by norm_num, by norm_num, 1, by norm_num, by norm_num\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_1359_plus (a : \u211d) (h\u2081 : 0 < a) :\n    \u2203 x, 1 - (2 * a^2 / (a^2 + 1)) \u2265 1 - x \u2227 x \u2264 a \u2228 1 - (2 * a^2 / (a^2 + 1)) \u2264 1 - a \u2227 a \u2264 x:= by", "target": "\n  refine' \u27e8a, _\u27e9\n  apply or_iff_not_imp_right.2\n  intro h\n  simp_all\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1361 {x y z : \u211d} : (y + z) ^ 4 - x ^ 2 * y * z * (y - z) ^ 2 + (z + x) ^ 4 - x * y ^ 2 * z * (z - x) ^ 2 + (x + y) ^ 4 - x * y * z ^ 2 * (x - y) ^ 2 \u2265 0 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1361_plus : \u2200 a b c : \u211d, a * b > 0 \u2227 b * c > 0 \u2227 c * a > 0 \u2192 \u2203 x y z : \u211d, x ^ 2 + y ^ 2 + z ^ 2 = a ^ 2 + b ^ 2 + c ^ 2 \u2227 x * y + y * z + z * x = a * b + b * c + c * a \u2227 0 \u2264 (x - y) ^ 2 + (y - z) ^ 2 + (z - x) ^ 2 \u2227 (x * y + y * z + z * x) ^ 2 \u2264 (x ^ 2 + y ^ 2 + z ^ 2) * (y ^ 2 + z ^ 2 + x ^ 2) \u2227 (x * y * z) ^ 2 \u2264 (a * b * c) ^ 2:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_4757_plus (n : \u2115) (a : Fin n \u2192 \u211d) (A : \u211d) (hA : A + \u2211 i, a i ^ 2 < (\u2211 i, a i) ^ 2 / (n - 1)) (i j : Fin n) (hij : i < j) (hij' : (\u2211 i, a i) ^ 2 / (n - 1) \u2264 A + \u2211 i, a i ^ 2) : \u2211 i, a i ^ 2 \u2265 0 \u2227 (\u2211 i, a i) ^ 2 / (n - 1) \u2264 A + \u2211 i, a i ^ 2 \u2227 A < 2 * a i * a j:= by", "target": "\n  have h\u2081 : \u2211 i, a i ^ 2 \u2265 0 := by positivity\n  have h\u2082 : (\u2211 i, a i) ^ 2 / (n - 1) \u2264 A + \u2211 i, a i ^ 2 := by linarith\n  have h\u2083 : A < 2 * a i * a j := by\n    linarith [hA, h\u2082, sq_nonneg (\u2211 i, a i - a i), sq_nonneg (\u2211 i, a i - a j)]\n  exact \u27e8h\u2081, h\u2082, h\u2083\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_58160_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c \u2264 3) : a * b ^ 2 * c ^ 2 + b * c ^ 2 * a ^ 2 + c * a ^ 2 * b ^ 2 \u2264 3 * (a + b + c) * (a ^ 2 + b ^ 2 + c ^ 2):= by", "target": "\n  have h\u2080 : 0 \u2264 a * b := by positivity\n  have h\u2081 : 0 \u2264 b * c := by positivity\n  have h\u2082 : 0 \u2264 c * a := by positivity\n  have h\u2083 : 0 \u2264 a * b * c := by positivity\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_nonneg hab hb, mul_nonneg hb hc, mul_nonneg hc hab,\n    mul_nonneg h\u2080 h\u2081, mul_nonneg h\u2081 h\u2082, mul_nonneg h\u2082 h\u2080,\n    mul_nonneg h\u2083 h\u2080, mul_nonneg h\u2083 h\u2081, mul_nonneg h\u2083 h\u2082]\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5666 (x y m n k : \u211d) : (x / y = m / n) \u2192 (x / y = (x + k * m) / (x + k * n)) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5666_plus (x y m n k : \u211d) (h\u2081 : 0 < x \u2227 0 < y) (h\u2082 : 0 < m \u2227 0 < n) (h\u2083 : 0 < k) : (x / y = m / n) \u2192 (x / y = (x + k * m) / (x + k * n)) \u2228 (x + k * n = 0 \u2228 y + k * n = 0) \u2228 (x * n - y * m = 0):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_22833_plus (x : \u211d) (hx : 0 \u2264 x) : \u2203 y, 0 \u2264 y \u2227 y \u2264 1 \u2227 0 \u2264 Real.log (x + 1) + y * Real.log (1 + x):= by", "target": "\n  use 0\n  constructor\n  linarith\n  constructor\n  linarith\n  simp [Real.log_nonneg, hx]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_33792_plus  (b : \u211d)\n  (a : \u2115 \u2192 \u211d)\n  (h\u2080 : 0 < b)\n  (h\u2081 : \u2200 i, 0 < a i)\n  (h\u2082 : a 0 < a 1)\n  : \u2203 (f : \u211d \u2192 \u211d), \u2200 (x : \u211d), 0 < x \u2192 f x = Real.logb b x \u2228 f x = Real.logb b (x + 1):= by", "target": "\n  refine' \u27e8fun x \u21a6 Real.logb b x, _\u27e9\n  intro x hx\n  simp [hx, h\u2080]\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_48574_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (h : a + b + c = 1) : Real.sqrt (1 - a ^ 2 - b ^ 2) * (1 - a) + Real.sqrt (1 - b ^ 2 - c ^ 2) * (1 - b) + Real.sqrt (1 - c ^ 2 - a ^ 2) * (1 - c) \u2265 3 * (a * b * c):= by", "target": "\n  have h\u2080 : Real.sqrt (1 - a ^ 2 - b ^ 2) \u2265 1 - a - b := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (a + b), h]\n  have h\u2081 : Real.sqrt (1 - b ^ 2 - c ^ 2) \u2265 1 - b - c := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (b + c), h]\n  have h\u2082 : Real.sqrt (1 - c ^ 2 - a ^ 2) \u2265 1 - c - a := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (c + a), h]\n  nlinarith [mul_nonneg hab hb, mul_nonneg hb hc, mul_nonneg hc hab,\n    mul_nonneg (sq_nonneg a) (sq_nonneg b), mul_nonneg (sq_nonneg b) (sq_nonneg c), mul_nonneg (sq_nonneg c) (sq_nonneg a)]\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_43373_plus (n : \u2115) (h\u2081 : 1 < n) : (\u2203 k : \u2115, n \u2223 k + 1) \u2228 (\u2203 k : \u2115, n \u2223 k - 1):= by", "target": "\n  refine' or_iff_not_imp_right.2 fun h => _\n  use n - 1\n  cases' n with n\n  all_goals simp_all\n  all_goals omega"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_3960_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : a + b + c = 3) (h : (1 + 1 / a) ^ 2 + (1 + 1 / b) ^ 2 + (1 + 1 / c) ^ 2 \u2265 4) : (1 / a + 1 / b + 1 / c) ^ 2 \u2265 3:= by", "target": "\n  have h\u2081 : 1 / a + 1 / b + 1 / c \u2265 3 := by\n    field_simp at h \u22a2\n    rw [le_div_iff (by positivity)] at *\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      mul_pos hab hbc, mul_pos hbc hca, mul_pos hca hab]\n  nlinarith [sq_nonneg (1 / a + 1 / b + 1 / c - 3)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_36761_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a + b + c = 1)  (h\u2083 : 0 \u2264 a * b) (h\u2084 : 0 \u2264 b * c) (h\u2085 : 0 \u2264 c * a) : a ^ 2 * b ^ 2 * c ^ 2 * (a + b + c) ^ 2 \u2265 a ^ 2 * b ^ 2 * c ^ 2 * (a * b + b * c + c * a):= by", "target": "\n  have h\u2086 : (a + b + c) ^ 2 = 1 := by simp [h\u2082]\n  have h\u2087 : 0 \u2264 a * b * c := by\n    nlinarith\n  have h\u2088 : 0 \u2264 a ^ 2 * b ^ 2 * c ^ 2 := by\n    nlinarith\n  have h\u2089 : a ^ 2 * b ^ 2 * c ^ 2 * (a + b + c) ^ 2 \u2265 a ^ 2 * b ^ 2 * c ^ 2 * (a * b + b * c + c * a) := by\n    nlinarith [sq_nonneg (a * b + b * c + c * a), sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n  exact h\u2089"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_47847_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : a * b * Real.sqrt (a + c) + b * c * Real.sqrt (b + a) + c * a * Real.sqrt (c + b) \u2264 (a + b) * Real.sqrt (a + c) * (b + c) + (b + c) * Real.sqrt (b + a) * (c + a) + (c + a) * Real.sqrt (c + b) * (a + b):= by", "target": "\n  refine' le_of_sub_nonneg _\n  ring_nf\n  positivity"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_4826_plus (a b c : \u211d) (hab : 0 \u2264 a * b) (hbc : 0 \u2264 b * c) (hca : 0 \u2264 c * a) (h : 0 \u2264 a + b + c) : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) * Real.sqrt (1 + c ^ 2) \u2265 (1 + a * b * c) * (1 / Real.sqrt 2):= by", "target": "\n  have h\u2081 : Real.sqrt 2 \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    norm_num\n  have h\u2082 : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) * Real.sqrt (1 + c ^ 2) \u2265 (1 + a * b * c) * (1 / Real.sqrt 2) := by\n    have h\u2083 : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) * Real.sqrt (1 + c ^ 2) = Real.sqrt ((1 + a ^ 2) * (1 + b ^ 2) * (1 + c ^ 2)) := by\n      rw [Real.sqrt_mul, Real.sqrt_mul]\n      all_goals positivity\n    rw [h\u2083]\n    apply le_sqrt_of_sq_le\n    apply le_of_sub_nonneg\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a * b * c), sq_nonneg (a * b), sq_nonneg (b * c), sq_nonneg (c * a),\n      sq_nonneg (a - b * c), sq_nonneg (b - c * a), sq_nonneg (c - a * b)]\n  linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_42950_plus : \u2200 i : \u2115, (\u2211 k in Finset.range (i+1), k * (Nat.choose i k)) \u2264 i * 2^(i) \u2228 (\u2211 k in Finset.range (i+1), k * (Nat.choose i k)) = i * 2^(i-1):= by", "target": "\n  intro i\n  have h : (\u2211 k in Finset.range (i+1), k * (Nat.choose i k)) \u2264 i * 2^i := by\n    calc\n      (\u2211 k in Finset.range (i+1), k * (Nat.choose i k)) \u2264 \u2211 k in Finset.range (i+1), i * (Nat.choose i k) := by\n        apply Finset.sum_le_sum\n        intro x hx\n        exact Nat.mul_le_mul_right (Nat.choose i x) (Finset.mem_range_succ_iff.mp hx)\n      _ = i * \u2211 k in Finset.range (i+1), (Nat.choose i k) := by\n        simp [Finset.mul_sum, mul_comm]\n      _ = i * 2^i := by\n        simp [Nat.sum_range_choose]\n  apply Or.inl\n  exact h"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_13787_plus : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 a * b + b * c + c * a \u2260 0 \u2192 (Real.sqrt (a ^ 2 + a * b + b ^ 2) + Real.sqrt (b ^ 2 + b * c + c ^ 2)) / Real.sqrt (c ^ 2 + c * a + a ^ 2) + (Real.sqrt (b ^ 2 + b * c + c ^ 2) + Real.sqrt (c ^ 2 + c * a + a ^ 2)) / Real.sqrt (a ^ 2 + a * b + b ^ 2) + (Real.sqrt (a ^ 2 + a * b + b ^ 2) + Real.sqrt (c ^ 2 + c * a + a ^ 2)) / Real.sqrt (b ^ 2 + b * c + c ^ 2) \u2265 3  := by", "target": "\n  rintro a b c \u27e8ha, hb, hc\u27e9 h\n  have h1 : 0 < a * b + b * c + c * a := by nlinarith\n  have h2 : 0 < Real.sqrt (a ^ 2 + a * b + b ^ 2) := Real.sqrt_pos.mpr (by nlinarith)\n  have h3 : 0 < Real.sqrt (b ^ 2 + b * c + c ^ 2) := Real.sqrt_pos.mpr (by nlinarith)\n  have h4 : 0 < Real.sqrt (c ^ 2 + c * a + a ^ 2) := Real.sqrt_pos.mpr (by nlinarith)\n  have h5 : 0 < Real.sqrt (a ^ 2 + a * b + b ^ 2) * Real.sqrt (b ^ 2 + b * c + c ^ 2) := by positivity\n  have h6 : 0 < Real.sqrt (b ^ 2 + b * c + c ^ 2) * Real.sqrt (c ^ 2 + c * a + a ^ 2) := by positivity\n  have h7 : 0 < Real.sqrt (c ^ 2 + c * a + a ^ 2) * Real.sqrt (a ^ 2 + a * b + b ^ 2) := by positivity\n  field_simp [h2, h3, h4, h5, h6, h7]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_sqrt (by positivity : 0 \u2264 a ^ 2 + a * b + b ^ 2), sq_sqrt (by positivity : 0 \u2264 b ^ 2 + b * c + c ^ 2), sq_sqrt (by positivity : 0 \u2264 c ^ 2 + c * a + a ^ 2),\n    mul_self_nonneg (Real.sqrt (a ^ 2 + a * b + b ^ 2) - Real.sqrt (b ^ 2 + b * c + c ^ 2)),\n    mul_self_nonneg (Real.sqrt (b ^ 2 + b * c + c ^ 2) - Real.sqrt (c ^ 2 + c * a + a ^ 2)),\n    mul_self_nonneg (Real.sqrt (c ^ 2 + c * a + a ^ 2) - Real.sqrt (a ^ 2 + a * b + b ^ 2))]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_6258_plus : \u2200 a b : \u211d, a \u2208 Set.Icc (0 : \u211d) 1 \u2227 b \u2208 Set.Icc (0 : \u211d) 1 \u2192 Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) \u2265 1 - a * b \u2227 Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) \u2264 2:= by", "target": "\n  rintro a b \u27e8\u27e8ha0, ha1\u27e9, \u27e8hb0, hb1\u27e9\u27e9\n  have ha2 : a ^ 2 \u2264 1 := by nlinarith\n  have hb2 : b ^ 2 \u2264 1 := by nlinarith\n  have ha3 : 0 \u2264 1 + a ^ 2 := by nlinarith\n  have hb3 : 0 \u2264 1 + b ^ 2 := by nlinarith\n  have ha4 : 0 \u2264 Real.sqrt (1 + a ^ 2) := Real.sqrt_nonneg (1 + a ^ 2)\n  have hb4 : 0 \u2264 Real.sqrt (1 + b ^ 2) := Real.sqrt_nonneg (1 + b ^ 2)\n  have ha5 : 0 \u2264 Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) := by positivity\n  have hb5 : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) \u2264 2 := by\n    nlinarith [sq_sqrt (show 0 \u2264 1 + a ^ 2 from ha3), sq_sqrt (show 0 \u2264 1 + b ^ 2 from hb3),\n      mul_self_nonneg (a - b), mul_self_nonneg (Real.sqrt (1 + a ^ 2) - Real.sqrt (1 + b ^ 2))]\n  have ha6 : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) \u2265 1 - a * b := by\n    nlinarith [sq_sqrt (show 0 \u2264 1 + a ^ 2 from ha3), sq_sqrt (show 0 \u2264 1 + b ^ 2 from hb3),\n      mul_self_nonneg (a + b), mul_self_nonneg (Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + b ^ 2))]\n  exact \u27e8ha6, hb5\u27e9\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4641 (t : \u211d) (n : \u2115) : 0 < n \u2192 t \u2208 Set.Icc 0 1 \u2192 1 / (n^2 * t^2) > 1 / (1 + n^2 * t^2) \u2227 1 / (1 + n^2 * t^2) \u2265 1 / (1 + n^2) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4641_plus (x : \u211d) (y : \u211d) (n : \u2115) : 0 < n \u2192 0 \u2264 x \u2227 x \u2264 1 \u2227 0 \u2264 y \u2227 y \u2264 1 \u2192 x * y \u2264 1 \u2227 1 - x * y \u2265 0 \u2227 (x * y) ^ 2 \u2264 1 \u2227 (1 - x * y) ^ 2 \u2264 1 \u2227 (x * y) ^ 2 * (1 - x * y) ^ 2 \u2264 1:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_20638_plus (a b c : \u211d) (hab : 0 \u2264 a) (hbc : 0 \u2264 b) (hca : 0 \u2264 c) (h : a + b + c = 1) : (1 - a * b) ^ 2 / (1 + a ^ 2) * (1 + b ^ 2) + (1 - b * c) ^ 2 / (1 + b ^ 2) * (1 + c ^ 2) + (1 - a * c) ^ 2 / (1 + a ^ 2) * (1 + c ^ 2) \u2265 (1 - a - b - c) ^ 3 \u2227 (1 - a * b) ^ 2 / (1 + a ^ 2) * (1 + b ^ 2) + (1 - b * c) ^ 2 / (1 + b ^ 2) * (1 + c ^ 2) + (1 - a * c) ^ 2 / (1 + a ^ 2) * (1 + c ^ 2) \u2265 (1 - a - b - c) ^ 3 \u2227 (1 - a * b) ^ 2 / (1 + a ^ 2) * (1 + b ^ 2) + (1 - b * c) ^ 2 / (1 + b ^ 2) * (1 + c ^ 2) + (1 - a * c) ^ 2 / (1 + a ^ 2) * (1 + c ^ 2) \u2265 (1 - a - b - c) ^ 3  := by", "target": "\n  have h\u2081 : a + b + c = 1 := h\n  have h\u2082 : 0 \u2264 a * b := by nlinarith\n  have h\u2083 : 0 \u2264 b * c := by nlinarith\n  have h\u2084 : 0 \u2264 a * c := by nlinarith\n  have h\u2085 : (1 - a * b) ^ 2 / (1 + a ^ 2) * (1 + b ^ 2) \u2265 0 := by positivity\n  have h\u2086 : (1 - b * c) ^ 2 / (1 + b ^ 2) * (1 + c ^ 2) \u2265 0 := by positivity\n  have h\u2087 : (1 - a * c) ^ 2 / (1 + a ^ 2) * (1 + c ^ 2) \u2265 0 := by positivity\n  have h\u2088 : 1 - a - b - c = 0 := by linarith\n  simp_all only [h\u2088, zero_add, zero_sub, sub_zero, zero_mul, mul_zero, sub_self, sub_neg_eq_add,\n    add_zero]\n  norm_num\n  <;> nlinarith\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_36782_plus (a b c : \u211d) (habc : a * b * c = 2) (h : a + b + c = 0) : a ^ 2 + b ^ 2 + c ^ 2 + (a * b + b * c + c * a) ^ 2 \u2265 3 * (a * b * c):= by", "target": "\n  have h1 : a ^ 2 + b ^ 2 + c ^ 2 = (a + b + c) ^ 2 - 2 * (a * b + b * c + c * a) := by ring\n  rw [h] at h1\n  simp at h1\n  nlinarith [sq_nonneg (a * b + b * c + c * a), sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n  <;> linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_42640_plus (a b c : \u211d) (habc : a + b + c = 0) (h : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) : Real.sqrt (a ^ 2 + b ^ 2) * Real.sqrt (b ^ 2 + c ^ 2) * Real.sqrt (c ^ 2 + a ^ 2) \u2264 (a ^ 2 + b ^ 2 + b ^ 2 + c ^ 2 + c ^ 2 + a ^ 2) * (a ^ 2 + b ^ 2 + c ^ 2):= by", "target": "\n  have h\u2081 : 0 \u2264 a ^ 2 + b ^ 2 := by nlinarith\n  have h\u2082 : 0 \u2264 b ^ 2 + c ^ 2 := by nlinarith\n  have h\u2083 : 0 \u2264 c ^ 2 + a ^ 2 := by nlinarith\n  have h\u2084 : Real.sqrt (a ^ 2 + b ^ 2) \u2264 a + b := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  have h\u2085 : Real.sqrt (b ^ 2 + c ^ 2) \u2264 b + c := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  have h\u2086 : Real.sqrt (c ^ 2 + a ^ 2) \u2264 c + a := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  calc\n    Real.sqrt (a ^ 2 + b ^ 2) * Real.sqrt (b ^ 2 + c ^ 2) * Real.sqrt (c ^ 2 + a ^ 2) \u2264\n        (a + b) * (b + c) * (c + a) := by gcongr <;> nlinarith\n    _ \u2264 (a ^ 2 + b ^ 2 + b ^ 2 + c ^ 2 + c ^ 2 + a ^ 2) * (a ^ 2 + b ^ 2 + c ^ 2) := by\n      nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_11263_plus (a b : \u211d) (hab : 0 < a \u2227 0 < b) : (1 / (a^2 + 1) + 1 / (b^2 + 1) = 1 \u2194 a * b = 1) \u2228 (1 / (a^2 + 1) + 1 / (b^2 + 1) = 1 \u2227 a * b \u2260 1):= by", "target": "\n  apply Or.inl\n  have h\u2080 : 0 < a := hab.1\n  have h\u2081 : 0 < b := hab.2\n  have h\u2082 : 0 < a * b := mul_pos h\u2080 h\u2081\n  field_simp\n  constructor\n  intro h\n  nlinarith [sq_nonneg (a - b), h]\n  intro h\n  nlinarith [sq_nonneg (a - b), h]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1286 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (yz / (x ^ 2 + 2 * y * z) + z * x / (y ^ 2 + 2 * z * x) + x * y / (z ^ 2 + 2 * x * y) \u2264 1) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1286_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x * y * z * (x * y + y * z + z * x) \u2260 0 \u2227 x * y * z * (x * y + y * z + z * x) > 0 \u2228 x * y * z * (x * y + y * z + z * x) = 0) \u2228 (x * y * z * (x * y + y * z + z * x) > 0 \u2228 x * y * z * (x * y + y * z + z * x) = 0):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_33118_plus (a b c : \u211d) (hab : 0 < a) (hb : 0 < b) (hc : 0 < c) : a / b / c + b / a / c + c / a / b \u2265 2 / a + 2 / b - 2 / c \u2228 (\u2203 x y z : \u211d, x * y * z \u2264 0 \u2227 x * y > 0 \u2227 x * z > 0 \u2227 y * z > 0):= by", "target": "\n  refine' or_iff_not_imp_right.2 fun h => _\n  have h\u2080 : 0 < a * b := by positivity\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * a := by positivity\n  have h\u2083 : 0 < a * b * c := by positivity\n  have h\u2084 : 0 < a * b * c * (a * b * c) := by positivity\n  field_simp [h\u2080, h\u2081, h\u2082, h\u2083, h\u2084]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b),\n    sq_nonneg (a * b * c), sq_nonneg (a * b * c * (a - b)), sq_nonneg (a * b * c * (b - c)),\n    sq_nonneg (a * b * c * (c - a)), sq_nonneg (a * b * c * (a + b - c))]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_13482_plus (a b c : \u211d) (habc : a + b + c = 1) (h : 0 < a \u2227 0 < b \u2227 0 < c) : (\u2203 x y z : \u211d, x + y + z = 1 \u2227 0 < x \u2227 0 < y \u2227 0 < z \u2227 a * b * z * x * y \u2264 (x + y + z) ^ 3 / 27) \u2227 (\u2203 x y z : \u211d, x + y + z = 1 \u2227 0 < x \u2227 0 < y \u2227 0 < z \u2227 b * c * x * y * z \u2264 (x + y + z) ^ 3 / 27) \u2227 (\u2203 x y z : \u211d, x + y + z = 1 \u2227 0 < x \u2227 0 < y \u2227 0 < z \u2227 c * a * y * z * x \u2264 (x + y + z) ^ 3 / 27) := by", "target": "\n  rcases h with \u27e8h\u2081, h\u2082, h\u2083\u27e9\n  refine' \u27e8\u27e81 / 3, 1 / 3, 1 / 3, by norm_num, by norm_num, by norm_num, by norm_num, _\u27e9,\n    \u27e81 / 3, 1 / 3, 1 / 3, by norm_num, by norm_num, by norm_num, by norm_num, _\u27e9,\n    \u27e81 / 3, 1 / 3, 1 / 3, by norm_num, by norm_num, by norm_num, by norm_num, _\u27e9\u27e9\n  all_goals\n    ring_nf\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_78369_plus (a b c : \u211d) (hab : a > 0 \u2227 b > 0 \u2227 c > 0) (habc : a + b > c) (hbc : b + c > a) (hca : a + c > b) : a * b * c \u2264 1 \u2192 (a^2 + b^2 + c^2) * (a^2 * b^2 + b^2 * c^2 + c^2 * a^2) \u2265 9 * a^2 * b^2 * c^2  \u2228 (a * b + b * c + c * a) * (a * b + b * c + c * a) \u2264 9 * (a * b) * (b * c) + 9 * (b * c) * (c * a) + 9 * (c * a) * (a * b):= by", "target": "\n  intro h\n  by_contra! h'\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b),\n    mul_self_nonneg (a * b + b * c + c * a)]\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_9470_plus (n : \u2115) (hn : 1 < n) : (\u2211 k in Finset.Ico 0 n, (1 : \u211d) / (n - k)) \u2264 n * (1 + 1 / n) ^ 2:= by", "target": "\n  have : \u2200 k \u2208 Finset.Ico 0 n, (1 : \u211d) / (n - k) \u2264 1 := by\n    intro k hk\n    have h : (n - k : \u211d) \u2265 1 := by\n      rw [sub_eq_add_neg, add_comm]\n      norm_cast\n      linarith [Finset.mem_Ico.mp hk]\n    exact (div_le_iff (by linarith)).mpr (by linarith)\n  calc\n    (\u2211 k in Finset.Ico 0 n, (1 : \u211d) / (n - k)) \u2264 \u2211 k in Finset.Ico 0 n, 1 := Finset.sum_le_sum this\n    _ = n := by simp [Finset.sum_Ico_eq_sum_range]\n    _ \u2264 n * (1 + 1 / n) ^ 2 := by\n      norm_num\n      apply le_of_sub_nonneg\n      field_simp\n      ring_nf\n      positivity"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_27975_plus (n : \u2115) (hn : 1 < n) : (Real.sqrt n : \u211d) \u2264 n \u2227 (Real.sqrt n : \u211d) \u2264 n + 1 \u2194 (Real.sqrt n : \u211d) \u2264 n + 1 \u2227 (Real.sqrt n : \u211d) \u2264 n + 1 := by", "target": "\n  have hn' : 1 < (n : \u211d) := by exact_mod_cast hn\n  have h1 : Real.sqrt n \u2264 n := Real.sqrt_le_iff.mpr (by constructor <;> norm_cast <;> nlinarith)\n  have h2 : Real.sqrt n \u2264 n + 1 := Real.sqrt_le_iff.mpr (by constructor <;> norm_cast <;> nlinarith)\n  constructor <;> intro h <;> constructor <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_75988_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c \u2264 3) (h : 0 \u2264 a * b) (h' : 0 \u2264 a * c) (h'' : 0 \u2264 b * c) : a ^ 2 / (b + c) ^ 2 + b ^ 2 / (a + c) ^ 2 + c ^ 2 / (a + b) ^ 2 \u2265 3 * (a + b + c) ^ 2 / (a + b + c) ^ 2 - 3:= by", "target": "\n  rcases eq_or_lt_of_le hab with (rfl | h\u2080) <;> rcases eq_or_lt_of_le hb with (rfl | h\u2081) <;>\n    rcases eq_or_lt_of_le hc with (rfl | h\u2082) <;>\n      simp_all [sq, div_eq_mul_inv, mul_inv_cancel_left\u2080, mul_inv_cancel_right\u2080] <;>\n        apply le_of_sub_nonneg <;>\n          field_simp <;>\n            ring_nf <;>\n              positivity"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_65607_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 1) : x ^ 2 * (y + z) ^ 2 / (x + y + z) ^ 2 + y ^ 2 * (z + x) ^ 2 / (x + y + z) ^ 2 + z ^ 2 * (x + y) ^ 2 / (x + y + z) ^ 2 \u2264 1:= by", "target": "\n  simp_all only [sq, add_assoc, add_left_comm, add_comm]\n  ring_nf\n  nlinarith [mul_nonneg hx hy, mul_nonneg hx hz, mul_nonneg hy hz,\n    mul_nonneg (sq_nonneg (x + y)) hz, mul_nonneg (sq_nonneg (x + z)) hy,\n    mul_nonneg (sq_nonneg (y + z)) hx]\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_946 (a b c d A : \u211d) (hA : A = (a * b * c * d)^(1 / 4)) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : (144 / (a + b + c + d) ^ 2 + 24 / (a + b + c + d) - 3) \u2264 12 * A ^ 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_946_plus (a b c d : \u211d) (hab : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : Real.sqrt (a ^ 2 + 1) * Real.sqrt (b ^ 2 + 1) * Real.sqrt (c ^ 2 + 1) * Real.sqrt (d ^ 2 + 1) \u2265 (a * b * c * d + 1) / 4:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1082 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : (a ^ 5 + b ^ 5 + c ^ 5) ^ 2 \u2265 2 * (a ^ 8 * b ^ 2 + b ^ 8 * c ^ 2 + c ^ 8 * a ^ 2) + a ^ 6 * b ^ 4 + b ^ 6 * c ^ 4 + c ^ 6 * a ^ 4 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1082_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : a * b + b * c + c * a \u2264 (a ^ 2 + b ^ 2 + c ^ 2) + (b ^ 2 + c ^ 2 + a ^ 2) * (c ^ 2 + a ^ 2 + b ^ 2) / (a ^ 2 + b ^ 2 + c ^ 2):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_3674_plus (x y z : \u211d) (h\u2081 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2082 : x * y * z = 1) : 4 * (x ^ 2 + y ^ 2 + z ^ 2) ^ 2 \u2265 3 * (x * y + y * z + z * x) + 9 * x * y * z \u2227 4 * (x ^ 2 + y ^ 2 + z ^ 2) ^ 2 \u2265 3 * (x * y + y * z + z * x) + 9 * x * y * z + (9 * x * y * z * (x * y * z)):= by", "target": "\n  obtain \u27e8hx, hy, hz\u27e9 := h\u2081\n  have hxy : 0 < x * y := mul_pos hx hy\n  have hyz : 0 < y * z := mul_pos hy hz\n  have hxz : 0 < z * x := mul_pos hz hx\n  constructor <;> nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    sq_nonneg (x * y - 1), sq_nonneg (y * z - 1), sq_nonneg (z * x - 1)]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_10143_plus (x y z : \u211d) (h\u2081 : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z) (h\u2082 : x + y + z \u2264 3) (h\u2083 : x^2 + y^2 + z^2 \u2264 3) (h\u2084 : x * y * z \u2264 1) : x * (x - y) ^ 2 + y * (y - z) ^ 2 + z * (z - x) ^ 2 \u2264 9:= by", "target": "\n  have : x ^ 2 + y ^ 2 + z ^ 2 \u2264 3 * (x ^ 2 + y ^ 2 + z ^ 2) := by\n    nlinarith\n  nlinarith [sq_nonneg (x + y + z), sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_9761_plus (a b c d : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 0 \u2264 d) (h\u2082 : a + b + c + d = 1) : (1 - a * b) * (1 - a * d) * (1 - b * c) * (1 - c * d) \u2265 (1 - a - b - c - d) * (a * b * c * d):= by", "target": "\n  obtain \u27e8h\u2081a, h\u2081b, h\u2081c, h\u2081d\u27e9 := h\u2081\n  have h\u2083 : 0 \u2264 a * b := by positivity\n  have h\u2084 : 0 \u2264 a * d := by positivity\n  have h\u2085 : 0 \u2264 b * c := by positivity\n  have h\u2086 : 0 \u2264 c * d := by positivity\n  have h\u2087 : 0 \u2264 a * b * c := by positivity\n  have h\u2088 : 0 \u2264 a * b * d := by positivity\n  have h\u2089 : 0 \u2264 a * c * d := by positivity\n  have h\u2081\u2080 : 0 \u2264 b * c * d := by positivity\n  have h\u2081\u2081 : 0 \u2264 a * b * c * d := by positivity\n  have h\u2081\u2082 : 1 - a - b - c - d = 1 - (a + b + c + d) := by linarith\n  rw [h\u2081\u2082, h\u2082]\n  norm_num\n  have h\u2081\u2083 : (1 - a * b) * (1 - a * d) * (1 - b * c) * (1 - c * d) \u2265 0 := by\n    apply mul_nonneg\n    apply mul_nonneg\n    apply mul_nonneg\n    all_goals nlinarith\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4105 (D : Finset \u2115) (hD : D = (Nat.divisors 2592)) : \u2211d in D, ((Nat.totient d) / d) = 77/6 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4105_plus (n : \u2115) (hn : n \u2265 2) : \u2211 d in (Nat.divisors n), ((Nat.totient d) / d) \u2264 n:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_55423_plus (a b c : \u211d) (hab : 0 < a) (hb : 0 < b) (hc : 0 < c) : a * b * c > 0 \u2227 (a + b + c) ^ 4 > 16 * (b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2 + a ^ 2 * b ^ 2) \u2228 (a * b * c \u2264 0 \u2228 a * b * c = 0) \u2227 (a * b * c \u2264 0 \u2228 a * b * c = 0):= by", "target": "\n  apply Or.inl\n  constructor\n  positivity\n  nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_pos hab hb, mul_pos hb hc, mul_pos hc hab, sq_nonneg (a + b - c), sq_nonneg (b + c - a),\n    sq_nonneg (c + a - b)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_33855_plus (a : \u2124) (h\u2081 : 5 \u2223 a^2 + 1) (h\u2082 : 3 \u2223 a^2 + 1) : 15 \u2223 a^2 + 1 \u2228 15 \u2223 a^2 - 1  := by", "target": "\n  have h\u2083 : 15 \u2223 a^2 + 1 := by\n    have h\u2084 : 15 \u2223 a^2 + 1 := by\n      omega\n    exact h\u2084\n  exact Or.inl h\u2083"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2920 (a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) (habc : a + b + c + d = 4) : 1 / (8 * a ^ 2 - 18 * a + 11) + 1 / (8 * b ^ 2 - 18 * b + 11) + 1 / (8 * c ^ 2 - 18 * c + 11) + 1 / (8 * d ^ 2 - 18 * d + 11) \u2264 4 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2920_plus (a b c d : \u211d) (hab : 0 < a) (hbc : 0 < b) (hcd : 0 < c) (hda : 0 < d) (habc : a + b + c + d = 4) : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) * Real.sqrt (1 + c ^ 2) * Real.sqrt (1 + d ^ 2) \u2265 16 * a * b * c * d / 16:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_9213 (a b c : \u211d) (habc : a * b * c \u2265 1) : a / (a ^ 3 + b ^ 2 + c) + b / (b ^ 3 + c ^ 2 + a) + c / (c ^ 3 + a ^ 2 + b) \u2264 1 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_9213_plus (a b c : \u211d) (habc : a * b * c \u2265 1) : a ^ 2 / (a ^ 3 + b ^ 2 + c) + b ^ 2 / (b ^ 3 + c ^ 2 + a) + c ^ 2 / (c ^ 3 + a ^ 2 + b) \u2264 1 \u2228 (\u2203 a b c : \u211d, a * b * c \u2265 1 \u2227 a ^ 2 / (a ^ 3 + b ^ 2 + c) + b ^ 2 / (b ^ 3 + c ^ 2 + a) + c ^ 2 / (c ^ 3 + a ^ 2 + b) > 1):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_8009 (x\u2081 x\u2082 x\u2083 : \u211d) (hx\u2081 : x\u2081^3 - x\u2081 - 1 = 0) (hx\u2082 : x\u2082^3 - x\u2082 - 1 = 0) (hx\u2083 : x\u2083^3 - x\u2083 - 1 = 0) : (1 + x\u2081) / (1 - x\u2081) + (1 + x\u2082) / (1 - x\u2082) + (1 + x\u2083) / (1 - x\u2083) = -7 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_8009_plus (x\u2081 x\u2082 x\u2083 : \u211d) (hx\u2081 : x\u2081^3 - x\u2081 - 1 = 0) (hx\u2082 : x\u2082^3 - x\u2082 - 1 = 0) (hx\u2083 : x\u2083^3 - x\u2083 - 1 = 0) : (x\u2081 + 1) ^ 2 / ((x\u2081 - 1) ^ 2) + (x\u2082 + 1) ^ 2 / ((x\u2082 - 1) ^ 2) + (x\u2083 + 1) ^ 2 / ((x\u2083 - 1) ^ 2) \u2265 4:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5388 (b c : \u211d) (n : \u2115) (hb : b > 0) (hc : c > 0) (hn: n > 0) : (b - c) ^ 2 \u2265 (b ^ (1 / n) - c ^ (1 / n)) ^ (2 * n) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5388_plus (n : \u2115) (hn : 1 < n) : \u2203 a b : \u211d, a > 0 \u2227 b > 0 \u2227 (\u2211 k in Finset.Icc 1 n, (1 : \u211d) / k) \u2265 a * Real.log b:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_57413_plus (n : \u2115) (hn : 1 < n) : (fib (n + 1))^2 = fib n * fib (n + 2) + (-1 : \u2124)^n \u2228 (fib (n + 1))^2 - fib n * fib (n + 2) = (-1 : \u2124)^n  := by", "target": "\n  apply Or.intro_right\n  induction' hn with n hn IH\n  all_goals simp_all [fib_add_two, pow_succ, Int.mul_emod, Int.add_emod]\n  all_goals ring_nf at *\n  all_goals omega"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4998 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a + b + c + 6 / (a + b + c) \u2265 5 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4998_plus (a b c : \u211d) (habc : a * b * c = 1) (h : 0 < a \u2227 0 < b \u2227 0 < c) : a ^ 2 + b ^ 2 + c ^ 2 + (1 / a ^ 2 + 1 / b ^ 2 + 1 / c ^ 2) \u2265 6:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_31965_plus (n : \u2115) (hn : 1 < n) : (\u2203 x y : \u211d, \u2211 k in Finset.range n, (x + y * (k : \u211d) / n) \u2265 1) \u2228 (\u2203 x y : \u211d, \u2211 k in Finset.range n, (x + y * (k : \u211d) / n) < 1):= by", "target": "\n  by_cases h : \u2203 x y : \u211d, \u2211 k in Finset.range n, (x + y * (k : \u211d) / n) \u2265 1 <;>\n  simp_all\n  <;>\n  exact \u27e80, 0, by positivity\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_42 (n k : \u2115) (h\u2080 : 0 < k \u2227 0 < n) (h\u2081 : n \u2265 k) : Nat.choose n (k - 1) = Nat.choose n (n - k + 1) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_42_plus (n k : \u2115) (h\u2080 : 0 < k \u2227 0 < n) (h\u2081 : n \u2265 k) : (\u2211 i in Finset.Ico 0 (k + 1), choose n i) \u2265 choose n k:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_27920_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 3) : (1 + 1 / Real.sqrt (a + 1) + 1 / Real.sqrt (b + 1) + 1 / Real.sqrt (c + 1)) \u2265 1 + 1 / Real.sqrt 4 + 1 / Real.sqrt 4:= by", "target": "\n  have h\u2080 : Real.sqrt 4 = 2 := by rw [Real.sqrt_eq_iff_mul_self_eq (by norm_num) (by norm_num)] ; norm_num\n  have h\u2081 : Real.sqrt (a + 1) \u2264 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 linarith\n    \u00b7 nlinarith\n  have h\u2082 : Real.sqrt (b + 1) \u2264 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 linarith\n    \u00b7 nlinarith\n  have h\u2083 : Real.sqrt (c + 1) \u2264 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 linarith\n    \u00b7 nlinarith\n  calc\n    (1 + 1 / Real.sqrt (a + 1) + 1 / Real.sqrt (b + 1) + 1 / Real.sqrt (c + 1)) \u2265 1 + 1 / 2 + 1 / 2 + 1 / 2 := by gcongr <;> nlinarith\n    _ = 1 + 3 / 2 := by ring\n    _ \u2265 1 + 1 / Real.sqrt 4 + 1 / Real.sqrt 4 := by\n      rw [h\u2080]\n      norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_29275_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 3) (h' : a * b + b * c + c * a \u2264 3) : 3 * (1 - (a - b) ^ 2 / (a + b) ^ 2) * (1 - (b - c) ^ 2 / (b + c) ^ 2) * (1 - (c - a) ^ 2 / (c + a) ^ 2) \u2265 0 \u2227 3 * (1 - (a - b) ^ 2 / (a + b) ^ 2) * (1 - (b - c) ^ 2 / (b + c) ^ 2) * (1 - (c - a) ^ 2 / (c + a) ^ 2) \u2264 9:= by", "target": "\n  rcases hab with \u27e8ha, hb, hc\u27e9\n  have h\u2080 : (a - b) ^ 2 / (a + b) ^ 2 \u2265 0 := by positivity\n  have h\u2081 : (b - c) ^ 2 / (b + c) ^ 2 \u2265 0 := by positivity\n  have h\u2082 : (c - a) ^ 2 / (c + a) ^ 2 \u2265 0 := by positivity\n  have h\u2083 : 1 - (a - b) ^ 2 / (a + b) ^ 2 \u2265 0 := by\n    have : (a - b) ^ 2 / (a + b) ^ 2 \u2264 1 := by\n      apply div_le_one_of_le\n      nlinarith\n      positivity\n    linarith\n  have h\u2084 : 1 - (b - c) ^ 2 / (b + c) ^ 2 \u2265 0 := by\n    have : (b - c) ^ 2 / (b + c) ^ 2 \u2264 1 := by\n      apply div_le_one_of_le\n      nlinarith\n      positivity\n    linarith\n  have h\u2085 : 1 - (c - a) ^ 2 / (c + a) ^ 2 \u2265 0 := by\n    have : (c - a) ^ 2 / (c + a) ^ 2 \u2264 1 := by\n      apply div_le_one_of_le\n      nlinarith\n      positivity\n    linarith\n  have h\u2086 : 3 * (1 - (a - b) ^ 2 / (a + b) ^ 2) * (1 - (b - c) ^ 2 / (b + c) ^ 2) * (1 - (c - a) ^ 2 / (c + a) ^ 2) \u2265 0 := by positivity\n  have h\u2087 : 3 * (1 - (a - b) ^ 2 / (a + b) ^ 2) * (1 - (b - c) ^ 2 / (b + c) ^ 2) * (1 - (c - a) ^ 2 / (c + a) ^ 2) \u2264 9 := by\n    have : 1 - (a - b) ^ 2 / (a + b) ^ 2 \u2264 1 := by\n      have : (a - b) ^ 2 / (a + b) ^ 2 \u2265 0 := by positivity\n      linarith\n    have : 1 - (b - c) ^ 2 / (b + c) ^ 2 \u2264 1 := by\n      have : (b - c) ^ 2 / (b + c) ^ 2 \u2265 0 := by positivity\n      linarith\n    have : 1 - (c - a) ^ 2 / (c + a) ^ 2 \u2264 1 := by\n      have : (c - a) ^ 2 / (c + a) ^ 2 \u2265 0 := by positivity\n      linarith\n    have : (1 - (a - b) ^ 2 / (a + b) ^ 2) * (1 - (b - c) ^ 2 / (b + c) ^ 2) \u2264 1 := by\n      nlinarith\n    nlinarith\n  exact \u27e8h\u2086, h\u2087\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1110 (x y z : \u211d) : 23 * (x^2 + y^2 + z^2)^3 \u2265 (7 * (x^2 + y^2 + z^2) + 16 * (x * y + x * z + y * z)) * (x^3 + y^3 + z^3) * (x + y + z) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1110_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) : \u2203 a : \u211d, a \u2265 1 \u2227 a * (x^2 + y^2 + z^2)^3 \u2265 (7 * (x^2 + y^2 + z^2) + 16 * (x * y + x * z + y * z)) * (x^3 + y^3 + z^3) * (x + y + z):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_35723_plus (n : \u2115) (hn : 1 \u2264 n) : \u2211 i in Finset.range (n + 1), 2 ^ i * (Nat.choose n i) * (Nat.choose (n - i) (Nat.floor ((n - i) / 2))) \u2265 Nat.choose (2 * n + 1) n \u2227 Nat.choose (2 * n + 1) n \u2265 Nat.choose (2 * n + 1) n \u2228 Nat.choose (2 * n + 1) n \u2265 Nat.choose (2 * n + 1) n \u2227 Nat.choose (2 * n + 1) n \u2265 Nat.choose (2 * n + 1) n := by", "target": "\n  cases n\n  all_goals simp_all [Nat.choose_symm, Nat.choose_succ_succ, Nat.choose_zero_right, Nat.choose_one_right, Nat.choose_self, Nat.choose_mul_succ_eq]\n  all_goals\n    apply Or.intro_left\n    apply And.intro\n    \u00b7 apply Nat.le_of_lt_succ\n      all_goals norm_num\n      all_goals omega\n    \u00b7 apply Nat.le_refl"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4028 (a b c x y z : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : a + x = 1) (hbc : b + y = 1) (hca : c + z = 1) : (abc + xyz) * (1 / (ay) + 1 / (bz) + 1 / (cx)) \u2265 3 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4028_plus (a b c x y z : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (habc : a + b + c = 1) (hxyz : x + y + z = 1) (h : a * z + b * x + c * y \u2264 1) : a * b * c * (x * y * z + y * z * x + z * x * y) \u2264 1/9:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_9116 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 3) : (Real.sqrt (b + c) / (4 - b) / (4 - c) + Real.sqrt (c + a) / (4 - c) / (4 - a) + Real.sqrt (a + b) / (4 - a) / (4 - b)) \u2265 Real.sqrt 2 / 3 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_9116_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c \u2264 3) (h : 0 \u2264 Real.sqrt 2) : (Real.sqrt (b + c) / (4 - b) / (4 - c) + Real.sqrt (c + a) / (4 - c) / (4 - a) + Real.sqrt (a + b) / (4 - a) / (4 - b)) \u2265 Real.sqrt 2 / 3 \u2228 (Real.sqrt (b + c) / (4 - b) / (4 - c) + Real.sqrt (c + a) / (4 - c) / (4 - a) + Real.sqrt (a + b) / (4 - a) / (4 - b) < Real.sqrt 2 / 3 \u2227 (Real.sqrt 2 / 3 \u2264 1)) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_69033_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : a + b + c = 3) (h : 0 \u2264 a * b + b * c + c * a) : a ^ 2 / (b + c) ^ 2 + b ^ 2 / (c + a) ^ 2 + c ^ 2 / (a + b) ^ 2 \u2265 3 / 8 * (a * b + b * c + c * a) / (a * b + b * c + c * a):= by", "target": "\n  have h\u2081 : a * b + b * c + c * a \u2260 0 := by nlinarith\n  have h\u2082 : 0 < a * b + b * c + c * a := by nlinarith\n  have h\u2083 : a ^ 2 / (b + c) ^ 2 + b ^ 2 / (c + a) ^ 2 + c ^ 2 / (a + b) ^ 2 \u2265 3 / 8 := by\n    have h\u2084 : 0 < b + c := by nlinarith\n    have h\u2085 : 0 < c + a := by nlinarith\n    have h\u2086 : 0 < a + b := by nlinarith\n    have h\u2087 : 0 < (b + c) ^ 2 := by positivity\n    have h\u2088 : 0 < (c + a) ^ 2 := by positivity\n    have h\u2089 : 0 < (a + b) ^ 2 := by positivity\n    have h\u2081\u2080 : 0 < (b + c) ^ 2 * (c + a) ^ 2 * (a + b) ^ 2 := by positivity\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2)]\n  have h\u2084 : 3 / 8 * (a * b + b * c + c * a) / (a * b + b * c + c * a) \u2264 3 / 8 := by\n    rw [mul_comm]\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith\n  linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_37465_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b + b * c + c * a = 1) : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) * Real.sqrt (1 + c ^ 2) \u2265 Real.sqrt (1 + (a * b + b * c + c * a) ^ 2):= by", "target": "\n  have : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) * Real.sqrt (1 + c ^ 2) =\n      Real.sqrt ((1 + a ^ 2) * (1 + b ^ 2) * (1 + c ^ 2)) := by\n    rw [Real.sqrt_mul, Real.sqrt_mul]\n    all_goals positivity\n  rw [this]\n  apply Real.sqrt_le_sqrt\n  nlinarith [sq_nonneg (a * b), sq_nonneg (b * c), sq_nonneg (c * a),\n    sq_nonneg (a * b * c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_29549_plus (\u03b8 : \u211d) : tan (\u03b8 / 2) = sin \u03b8 / (1 + cos \u03b8) \u2228 \u2203 x : \u211d, 1 + x ^ 2 = 0 \u2228 1 + x ^ 2 = 1 := by", "target": "\n  refine' Or.inr \u27e80, _\u27e9\n  simp\n  <;> norm_num\n  <;> aesop"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_42856_plus (x y z u v : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hu : 0 < u) (hv : 0 < v) : (1 + x) ^ 2 / x + (1 + y) ^ 2 / y + (1 + z) ^ 2 / z + (1 + u) ^ 2 / u + (1 + v) ^ 2 / v \u2265 5 * (x + y + z + u + v) / 5:= by", "target": "\n  have h\u2080 : \u2200 a : \u211d, 0 < a \u2192 (1 + a) ^ 2 / a \u2265 2 * (1 + a) / 2 := by\n    intro a ha\n    rw [ge_iff_le]\n    have h\u2081 : 0 < a := by linarith\n    have h\u2082 : 0 < (1 + a) ^ 2 := by positivity\n    have h\u2083 : 0 < a * (1 + a) := by positivity\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a - 1)]\n  linarith [h\u2080 x hx, h\u2080 y hy, h\u2080 z hz, h\u2080 u hu, h\u2080 v hv]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_15791_plus : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 a * b * c = 1 \u2192 Real.sqrt (a ^ 3 + 2 * b ^ 3 + 6) \u2265 2 \u2227 Real.sqrt (b ^ 3 + 2 * c ^ 3 + 6) \u2265 2 \u2227 Real.sqrt (c ^ 3 + 2 * a ^ 3 + 6) \u2265 2 \u2228 Real.sqrt (a ^ 3 + 2 * b ^ 3 + 6) < 2 \u2227 Real.sqrt (b ^ 3 + 2 * c ^ 3 + 6) < 2 \u2227 Real.sqrt (c ^ 3 + 2 * a ^ 3 + 6) < 2 := by", "target": "\n  rintro a b c \u27e8ha, hb, hc\u27e9 h\n  apply or_iff_not_imp_right.2\n  intro h'\n  have h1 : Real.sqrt (a ^ 3 + 2 * b ^ 3 + 6) \u2265 2 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a - 1), sq_nonneg (b - 1),\n      mul_nonneg ha.le hb.le, mul_nonneg ha.le (sq_nonneg (a - 1)),\n      mul_nonneg hb.le (sq_nonneg (b - 1))]\n  have h2 : Real.sqrt (b ^ 3 + 2 * c ^ 3 + 6) \u2265 2 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (b - c), sq_nonneg (b - 1), sq_nonneg (c - 1),\n      mul_nonneg hb.le hc.le, mul_nonneg hb.le (sq_nonneg (b - 1)),\n      mul_nonneg hc.le (sq_nonneg (c - 1))]\n  have h3 : Real.sqrt (c ^ 3 + 2 * a ^ 3 + 6) \u2265 2 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (c - a), sq_nonneg (c - 1), sq_nonneg (a - 1),\n      mul_nonneg hc.le ha.le, mul_nonneg hc.le (sq_nonneg (c - 1)),\n      mul_nonneg ha.le (sq_nonneg (a - 1))]\n  exact \u27e8h1, h2, h3\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_2199_plus (a b c d : \u2124) (h\u2081 : 0 < a \u2227 0 < b \u2227 0 < c \u2227 0 < d) (h\u2082 : a * d - b * c = 1) : (\u2203 x y z : \u2124, 0 < x \u2227 0 < y \u2227 0 < z \u2227 x * y * z = a * d - b * c \u2227 x \u2223 a \u2227 y \u2223 b \u2227 z \u2223 c) \u2194 (\u2203 x y z : \u2124, 0 < x \u2227 0 < y \u2227 0 < z \u2227 x * y * z = 1 \u2227 x \u2223 a \u2227 y \u2223 b \u2227 z \u2223 c):= by", "target": "\n  have h\u2083 : 0 < a * d - b * c := by linarith\n  constructor <;> rintro \u27e8x, y, z, hx, hy, hz, hxyz, hx', hy', hz'\u27e9 <;>\n  use 1, 1, 1 <;> simp_all"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_955 (a b c d : \u211d) : 6 * (a ^ 4 + b ^ 4 + c ^ 4 + d ^ 4) + 12 * (a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + a ^ 2 * d ^ 2 + b ^ 2 * c ^ 2 + b ^ 2 * d ^ 2 + c ^ 2 * d ^ 2) \u2265 8 * (a ^ 3 * b + b ^ 3 * a + a ^ 3 * c + c ^ 3 * a + a ^ 3 * d + d ^ 3 * a + b ^ 3 * c + c ^ 3 * b + b ^ 3 * d + d ^ 3 * b + c ^ 3 * d + d ^ 3 * c) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_955_plus (a b c d : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 0 \u2264 d) (h\u2082 : a + b + c + d = 1) : (1 - a ^ 2 - b ^ 2) ^ 2 + (1 - b ^ 2 - c ^ 2) ^ 2 + (1 - c ^ 2 - d ^ 2) ^ 2 + (1 - d ^ 2 - a ^ 2) ^ 2 + (1 - a ^ 2 - c ^ 2) * (1 - b ^ 2 - d ^ 2) + (1 - a ^ 2 - d ^ 2) * (1 - b ^ 2 - c ^ 2) \u2265 0 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_16658_plus (x y : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hxy : x + y \u2264 2) :\n   x ^ 2 * y ^ 2 * (x ^ 2 + y ^ 2) \u2264 2 * (x ^ 2 + y ^ 2) * (x ^ 2 + y ^ 2) * (x + y) \u2227\n    x ^ 2 * y ^ 2 * (x ^ 2 + y ^ 2) \u2264 2 * (x ^ 2 + y ^ 2) * (x ^ 2 + y ^ 2) * 4 \u2227\n    x ^ 2 * y ^ 2 * (x ^ 2 + y ^ 2) \u2264 2 * (x ^ 2 + y ^ 2) * 4 * (x + y) \u2227\n    x ^ 2 * y ^ 2 * (x ^ 2 + y ^ 2) \u2264 2 * 4 * (x + y) * (x + y):= by", "target": "\n  have h\u2081 : 0 \u2264 x * y := mul_nonneg hx hy\n  have h\u2082 : 0 \u2264 x ^ 2 + y ^ 2 := by nlinarith\n  have h\u2083 : 0 \u2264 x ^ 2 * y ^ 2 := by positivity\n  have h\u2084 : 0 \u2264 x * y * (x ^ 2 + y ^ 2) := by positivity\n  have h\u2085 : 0 \u2264 x ^ 2 * y ^ 2 * (x ^ 2 + y ^ 2) := by positivity\n  have h\u2086 : x ^ 2 + y ^ 2 \u2264 4 := by nlinarith\n  have h\u2087 : x * y \u2264 2 := by\n    nlinarith [sq_nonneg (x - y)]\n  have h\u2088 : 0 \u2264 2 * (x ^ 2 + y ^ 2) * (x ^ 2 + y ^ 2) * (x + y) := by positivity\n  have h\u2089 : 0 \u2264 2 * (x ^ 2 + y ^ 2) * (x ^ 2 + y ^ 2) * 4 := by positivity\n  have h\u2081\u2080 : 0 \u2264 2 * (x ^ 2 + y ^ 2) * 4 * (x + y) := by positivity\n  have h\u2081\u2081 : 0 \u2264 2 * 4 * (x + y) * (x + y) := by positivity\n  exact \u27e8by nlinarith [sq_nonneg (x * y), sq_nonneg (x - y)], by nlinarith [sq_nonneg (x * y), sq_nonneg (x - y)], by nlinarith [sq_nonneg (x * y), sq_nonneg (x - y)], by nlinarith [sq_nonneg (x * y), sq_nonneg (x - y)]\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_8401 (a b : \u211d) : Complex.abs (a + b * Complex.I) = Real.sqrt (a ^ 2 + b ^ 2) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_8401_plus (a b : \u211d) (h\u2080 : 0 \u2264 a \u2227 0 \u2264 b) : Real.sqrt (a ^ 2 + b ^ 2) \u2265 a * b / (a + b) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_12644_plus : \u2200 n, (\u2211 k in Finset.range n, 1/(k + 1)) \u2264 n \u2227 (\u2211 k in Finset.range n, 1/(k + 1)) \u2264 n * (n + 1) / 2 \u2227 (\u2211 k in Finset.range n, 1/(k + 1)) \u2264 n ^ 2 + n:= by", "target": "\n  intro n\n  induction' n with n ih\n  norm_num\n  cases n\n  all_goals simp_all [Finset.sum_range_succ', Nat.div_eq_of_lt, Nat.succ_le_succ_iff]\n  all_goals\n    ring_nf at *\n    omega"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_45639_plus (a b : \u211d) (hb : 0 < b) : Real.sqrt 2 * (Real.sqrt (a * (a + b) ^ 3) + b * Real.sqrt (a ^ 2 + b ^ 2)) \u2264 3 * (a ^ 2 + b ^ 2) \u2228 \u2203 x y : \u211d, Real.sqrt 2 * (Real.sqrt (x * (x + y) ^ 3) + y * Real.sqrt (x ^ 2 + y ^ 2)) > 3 * (x ^ 2 + y ^ 2):= by", "target": "\n  by_cases h : Real.sqrt 2 * (Real.sqrt (a * (a + b) ^ 3) + b * Real.sqrt (a ^ 2 + b ^ 2)) \u2264 3 * (a ^ 2 + b ^ 2)\n  exact Or.inl h\n  exact Or.inr \u27e8a, b, by\n    have h\u2080 : Real.sqrt 2 * (Real.sqrt (a * (a + b) ^ 3) + b * Real.sqrt (a ^ 2 + b ^ 2)) > 3 * (a ^ 2 + b ^ 2) := by\n      linarith\n    exact h\u2080\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_60198_plus (a b c : \u211d) (habc : a * b * c = 1) (h : 0 < a \u2227 0 < b \u2227 0 < c) : (1 + 1 / a) * (1 + 1 / b) * (1 + 1 / c) \u2265 8 * (1 / 2) \u2227 (1 + 1 / a) * (1 + 1 / b) * (1 + 1 / c) \u2265 4 * (1 / 3):= by", "target": "\n  have h\u2081 : 0 < a := by linarith\n  have h\u2082 : 0 < b := by linarith\n  have h\u2083 : 0 < c := by linarith\n  have h\u2084 : 0 < a * b := by positivity\n  have h\u2085 : 0 < b * c := by positivity\n  have h\u2086 : 0 < c * a := by positivity\n  have h\u2087 : 0 < a * b * c := by positivity\n  constructor\n  \u00b7 field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a),\n      mul_self_nonneg (c * a - a * b)]\n  \u00b7 field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a),\n      mul_self_nonneg (c * a - a * b)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_51457_plus (a b c : \u211d) (habc : a + b + c = 3) (h : 0 < a \u2227 0 < b \u2227 0 < c) : (\u2203 x y z : \u211d, x + y + z = 3 \u2227 0 < x \u2227 0 < y \u2227 0 < z \u2227 x * y * z \u2264 1) \u2227 (\u2203 x y z : \u211d, x + y + z = 3 \u2227 0 < x \u2227 0 < y \u2227 0 < z \u2227 x * y * z \u2264 1 \u2227 Real.sqrt (x * y) + Real.sqrt (y * z) + Real.sqrt (z * x) \u2264 3):= by", "target": "\n  have h\u2080 : 0 < a := by linarith\n  have h\u2081 : 0 < b := by linarith\n  have h\u2082 : 0 < c := by linarith\n  have h\u2083 : a * b * c \u2264 1 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n      mul_pos h\u2080 h\u2081, mul_pos h\u2081 h\u2082, mul_pos h\u2082 h\u2080]\n  have h\u2084 : Real.sqrt (a * b) + Real.sqrt (b * c) + Real.sqrt (c * a) \u2264 3 := by\n    have h\u2085 : Real.sqrt (a * b) \u2264 (a + b) / 2 := by\n      nlinarith [sq_sqrt (mul_nonneg (le_of_lt h\u2080) (le_of_lt h\u2081)), sq_nonneg (a - b)]\n    have h\u2086 : Real.sqrt (b * c) \u2264 (b + c) / 2 := by\n      nlinarith [sq_sqrt (mul_nonneg (le_of_lt h\u2081) (le_of_lt h\u2082)), sq_nonneg (b - c)]\n    have h\u2087 : Real.sqrt (c * a) \u2264 (c + a) / 2 := by\n      nlinarith [sq_sqrt (mul_nonneg (le_of_lt h\u2082) (le_of_lt h\u2080)), sq_nonneg (c - a)]\n    nlinarith\n  exact \u27e8\u27e8a, b, c, by linarith, h\u2080, h\u2081, h\u2082, h\u2083\u27e9, \u27e8a, b, c, by linarith, h\u2080, h\u2081, h\u2082, h\u2083, h\u2084\u27e9\u27e9\n  <;> aesop\n  <;> aesop\n  <;> aesop"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3458 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : (Real.sqrt (a^2 + a * b * c) / (a * b + c) + Real.sqrt (b^2 + a * b * c) / (b * c + a) + Real.sqrt (c^2 + a * b * c) / (c * a + b) \u2264 1 / (2 * Real.sqrt (a * b * c))) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3458_plus (a b c : \u211d) (habc : a + b + c = 1) (h : 0 < a \u2227 0 < b \u2227 0 < c) : (\u2203 (x y z : \u211d), 0 < x \u2227 0 < y \u2227 0 < z \u2227 x + y + z = 1 \u2227 (Real.sqrt (x ^ 2 + x * y * z) / (x * y + z) + Real.sqrt (y ^ 2 + x * y * z) / (y * z + x) + Real.sqrt (z ^ 2 + x * y * z) / (z * x + y) \u2264 1 / (2 * Real.sqrt (x * y * z)) ) ) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_43933_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 a \u2264 1) (hbc : 0 \u2264 b \u2227 b \u2264 1) (hca : 0 \u2264 c \u2227 c \u2264 1) (h : a * b * c > 0) : a / (b * c + 1) + b / (c * a + 1) + c / (a * b + 1) \u2264 2 \u2228 a * b * c \u2264 1 / 9 \u2228 a * b * c \u2265 1 / 3:= by", "target": "\n  refine' or_iff_not_imp_right.2 fun h\u2081 => _\n  have h\u2082 : 0 < b * c := by nlinarith\n  have h\u2083 : 0 < c * a := by nlinarith\n  have h\u2084 : 0 < a * b := by nlinarith\n  have h\u2085 : 0 < b * c * (c * a) := by nlinarith\n  have h\u2086 : 0 < a * b * (b * c) := by nlinarith\n  have h\u2087 : 0 < c * a * (a * b) := by nlinarith\n  field_simp [h\u2082.ne', h\u2083.ne', h\u2084.ne', h\u2085.ne', h\u2086.ne', h\u2087.ne']\n  rw [div_le_iff (by positivity)]\n  nlinarith [mul_le_mul_of_nonneg_left hab.2 (by nlinarith : 0 \u2264 b),\n    mul_le_mul_of_nonneg_left hbc.2 (by nlinarith : 0 \u2264 c),\n    mul_le_mul_of_nonneg_left hca.2 (by nlinarith : 0 \u2264 a)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_24728_plus (f : \u211d \u2192 \u211d) (hf: Continuous f) (hff : f \u2218 f = id) : \u2203 x, \u2200 y, f y = x \u2228 \u2203 z, f z \u2260 x := by", "target": "\n  use f 0\n  intro y\n  by_cases h : f y = f 0\n  exacts [Or.inl h, Or.inr \u27e8y, h\u27e9]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_8507 (a b c : \u211d) (ha : 0 \u2264 a \u2227 a \u2264 1) (hb : 0 \u2264 b \u2227 b \u2264 1) (hc : 0 \u2264 c \u2227 c \u2264 1) : 3 * (a + b + c) - a^3 * b - b^3 * c - c^3 * a \u2264 (27 * (3:\u211d)^(1/3)) / (4 * (4:\u211d)^(1/3)) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_8507_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 a \u2264 1) (hbc : 0 \u2264 b \u2227 b \u2264 1) (hca : 0 \u2264 c \u2227 c \u2264 1) (h : a + b + c = 1) : a * b ^ 2 * c ^ 2 + b * c ^ 2 * a ^ 2 + c * a ^ 2 * b ^ 2 \u2264 1 / 32 \u2227 a * b * c \u2264 1 / 8:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_33927_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) : \u2203 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 Real.sqrt ((a^2)/(a^2 + 7*a*b + b^2)) + Real.sqrt ((b^2)/(b^2 + 7*b*c + c^2)) + Real.sqrt ((a^2)/(a^2 + 7*a*c + c^2)) \u2265 1 \u2227 (\u2203 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2227 x + y + z = 1 \u2227 x * y * z > 0):= by", "target": "\n  use 1, 1, 1\n  constructor\n  \u00b7 norm_num\n  constructor\n  \u00b7 norm_num\n  constructor\n  \u00b7 norm_num\n  constructor\n  \u00b7\n    have h\u2081 : Real.sqrt ((1 ^ 2) / (1 ^ 2 + 7 * 1 * 1 + 1 ^ 2)) \u2265 1 / 3 := by\n      apply Real.le_sqrt_of_sq_le\n      norm_num\n    have h\u2082 : Real.sqrt ((1 ^ 2) / (1 ^ 2 + 7 * 1 * 1 + 1 ^ 2)) \u2265 1 / 3 := by\n      apply Real.le_sqrt_of_sq_le\n      norm_num\n    have h\u2083 : Real.sqrt ((1 ^ 2) / (1 ^ 2 + 7 * 1 * 1 + 1 ^ 2)) \u2265 1 / 3 := by\n      apply Real.le_sqrt_of_sq_le\n      norm_num\n    linarith\n  use 1 / 3, 1 / 3, 1 / 3\n  constructor\n  \u00b7 norm_num\n  constructor\n  \u00b7 norm_num\n  constructor\n  \u00b7 norm_num\n  constructor\n  \u00b7 norm_num\n  norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_34174_plus (a b c : \u211d) (hab : 0 < a \u2227 0 < b \u2227 0 < c) (h : a + b + c = 3) (h' : a * b + b * c + c * a = 3 * Real.sqrt 3) : a ^ 2 / (b + c) ^ 2 + b ^ 2 / (c + a) ^ 2 + c ^ 2 / (a + b) ^ 2 + (a * b + b * c + c * a) / (a * b * c) \u2265 3:= by", "target": "\n  rcases hab with \u27e8ha, hb, hc\u27e9\n  have h\u2080 : 0 < a * b := by positivity\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * a := by positivity\n  have h\u2083 : 0 < a * b * c := by positivity\n  have h\u2084 : Real.sqrt 3 \u2265 0 := Real.sqrt_nonneg 3\n  have h\u2085 : a ^ 2 / (b + c) ^ 2 + b ^ 2 / (c + a) ^ 2 + c ^ 2 / (a + b) ^ 2 \u2265 0 := by positivity\n  have h\u2086 : (a * b + b * c + c * a) / (a * b * c) \u2265 3 := by\n    rw [h']\n    field_simp [h\u2080, h\u2081, h\u2082, h\u2083]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_sqrt (by positivity : 0 \u2264 (3 : \u211d)),\n      mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a)]\n  linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_45436_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) (h' : x ^ 2 + y ^ 2 + z ^ 2 + 1 / x + 1 / y + 1 / z \u2264 3) : x = 1 \u2227 y = 1 \u2227 z = 1  := by", "target": "\n  have h\u2081 : 0 < x * y := mul_pos hx hy\n  have h\u2082 : 0 < x * y * z := by positivity\n  have h\u2083 : 0 < x * y * z * x := by positivity\n  have h\u2084 : 0 < x * y * z * x * y := by positivity\n  have h\u2085 : 0 < x * y * z * x * y * z := by positivity\n  field_simp [h, h\u2082, h\u2083, h\u2084, h\u2085] at h'\n  norm_num at h'\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (y - 1), sq_nonneg (z - 1)]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_18863_plus (x : \u211d) (k : \u2124) (hx : 0 < x) (hk : 0 < k) : \u2203 y : \u211d, y \u2264 0 \u2227 \u2203 z : \u211d, 0 < z \u2227 (x * (k - 1) / x - (x + 1) * k / (x + 1) \u2264 z)  := by", "target": "\n  refine' \u27e8-1, by linarith, 1, by linarith, _\u27e9\n  field_simp [hk.ne', hx.ne', hx.ne']\n  <;> ring_nf\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_12844_plus (a\u2081 a\u2082 a\u2083 b\u2081 b\u2082 b\u2083 : \u211d) (h\u2081 : 0 < a\u2081 \u2227 0 < a\u2082 \u2227 0 < a\u2083) (h\u2082 : 0 < b\u2081 \u2227 0 < b\u2082 \u2227 0 < b\u2083) (h\u2083 : a\u2081 / b\u2081 = a\u2082 / b\u2082) (h\u2084 : a\u2082 / b\u2082 = a\u2083 / b\u2083) : a\u2081 * b\u2083 = a\u2083 * b\u2081 \u2227 a\u2082 * b\u2083 = a\u2083 * b\u2082 \u2227 a\u2081 * b\u2082 = a\u2082 * b\u2081   := by", "target": "\n  have h\u2085 : a\u2081 * b\u2083 = a\u2083 * b\u2081 := by\n    field_simp [h\u2082.1.ne', h\u2082.2.1.ne', h\u2082.2.2.ne', h\u2081.1.ne', h\u2081.2.1.ne', h\u2081.2.2.ne'] at h\u2083 h\u2084\n    nlinarith\n  have h\u2086 : a\u2082 * b\u2083 = a\u2083 * b\u2082 := by\n    field_simp [h\u2082.1.ne', h\u2082.2.1.ne', h\u2082.2.2.ne', h\u2081.1.ne', h\u2081.2.1.ne', h\u2081.2.2.ne'] at h\u2083 h\u2084\n    nlinarith\n  have h\u2087 : a\u2081 * b\u2082 = a\u2082 * b\u2081 := by\n    field_simp [h\u2082.1.ne', h\u2082.2.1.ne', h\u2082.2.2.ne', h\u2081.1.ne', h\u2081.2.1.ne', h\u2081.2.2.ne'] at h\u2083 h\u2084\n    nlinarith\n  exact \u27e8h\u2085, h\u2086, h\u2087\u27e9\n  <;> simp [h\u2085, h\u2086, h\u2087]\n  <;> linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_36345_plus (x : \u2115 \u2192 \u211d) (hx : \u220f i in Finset.range 6, x i = 1/27) : \u2203 x1 x2 x3 x4 x5 x6 : \u211d, x1 + x4 + x5 = x2 - x4 + x6 \u2227 x2 - x4 + x6 = x3 - x5 - x6 \u2227 x3 - x5 - x6 = 1 \u2227 0 < x1 \u2227 0 < x2 \u2227 0 < x3 \u2227 0 < x4 \u2227 0 < x5 \u2227 0 < x6 \u2227 \u220f i in Finset.range 6, x i \u2264 1/27 \u2227 \u220f i in Finset.range 6, x i \u2265 1/27 \u2227 (\u220f i in Finset.range 6, x i) ^ 2 \u2264 1 \u2227 (\u220f i in Finset.range 6, x i) ^ 3 \u2264 1 \u2227 (\u220f i in Finset.range 6, x i) ^ 4 \u2264 1 \u2227 (\u220f i in Finset.range 6, x i) ^ 5 \u2264 1 \u2227 (\u220f i in Finset.range 6, x i) ^ 6 \u2264 1  := by", "target": "\n  use 1/3,1,5/3,1/3,1/3,1/3\n  constructor <;> simp_all <;> norm_num"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1145 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 9) : x * y + y * z + z * x \u2264 27 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1145_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 9) (h1 : 0 < x * y + y * z + z * x) : x ^ 2 / (x + y) + y ^ 2 / (y + z) + z ^ 2 / (z + x) \u2265 (x + y + z) / 4 - x * y * z:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_16752_plus : \u2200 n : \u2115, 3 \u2223 (n^2 - n) \u2228 3 \u2223 (n^2 + n):= by", "target": "\n  intro n\n  rw [\u2190 Nat.mod_add_div n 3]\n  simp [Nat.dvd_iff_mod_eq_zero, Nat.add_mod, Nat.mul_mod, Nat.pow_mod]\n  ring_nf\n  have h : n % 3 = 0 \u2228 n % 3 = 1 \u2228 n % 3 = 2 := by omega\n  rcases h with (h | h | h) <;> simp [h]\n  <;> omega"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_9095_plus : \u2203 r R : \u211d, Real.sqrt (2 * r * R) \u2265 2 * r \u2227 R \u2265 2 * r \u2227 2 * Real.sqrt (2 * r * R) \u2265 4 * r \u2227 (\u2203 r R : \u211d, r \u2264 1 \u2227 R \u2264 1 \u2227 r * R \u2264 1):= by", "target": "\n  refine' \u27e80, 0, _, _, _, \u27e80, 0, by norm_num, by norm_num, by norm_num\u27e9\u27e9 <;> norm_num\n  <;> apply le_of_lt\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_8850 (x y z k : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hk : 0 < k) (h : x + y + z = k) : (9 * k + 3 * k ^ 2) / (x * y * z) + k * (1 / x + 1 / y + 1 / z) ^ 3 \u2265 (1 / x + 1 / y + 1 / z) ^ 2 + (4 * k ^ 2) / (x * y * z) * (1 / x + 1 / y + 1 / z) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_8850_plus (x y z k : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hk : 0 < k) (h : x + y + z = k) : (1 + 1 / x) * (1 + 1 / y) * (1 + 1 / z) \u2265 1 + 1 / (x + y + z):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_39583_plus (a b : \u211d) (h\u2081 : a = Real.log 2) (h\u2082 : b = Real.log 3) : Real.log (64 / 15) \u2264 7 * a - b - 1 \u2228 7 * a - b - 1 \u2264 Real.log (64 / 15) \u2228 Real.log (64 / 15) = 7 * a - b - 1  := by", "target": "\n  rw [h\u2081, h\u2082]\n  refine' or_iff_not_imp_left.2 fun h => _\n  refine' or_iff_not_imp_left.2 fun h' => _\n  linarith [Real.log_le_sub_one_of_pos (show 0 < (64 : \u211d) / 15 from by norm_num),\n    Real.log_pos (show (1 : \u211d) < 64 / 15 from by norm_num)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_8018 (k : \u211d): (\u2200 a : \u211d, a>0 \u2227 a-1/a >= 1 \u2192 a^3-1/(a^3) >= k*(a-1/a)) \u2194 k <= 4 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_8018_plus (x : \u211d) (hx : 0 < x \u2227 x <= 1) : \u2203 k : \u211d, k <= 4 \u2227 \u2200 a : \u211d, a > 0 \u2227 a - 1 / a >= 1 \u2192 a ^ 3 - 1 / (a ^ 3) >= k * (a - 1 / a) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_18201_plus (a b c d : \u211d) (habc : a * b * c * d = 1) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) * Real.sqrt (1 + c ^ 2) * Real.sqrt (1 + d ^ 2) \u2265 (1 + a * b * c * d) \u2227 (1 + a * b * c * d) \u2264 Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) * Real.sqrt (1 + c ^ 2) * Real.sqrt (1 + d ^ 2):= by", "target": "\n  have : 0 \u2264 a * b * c * d := by positivity\n  have h\u2080 : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) * Real.sqrt (1 + c ^ 2) * Real.sqrt (1 + d ^ 2) = Real.sqrt ((1 + a ^ 2) * (1 + b ^ 2) * (1 + c ^ 2) * (1 + d ^ 2)) := by\n    rw [Real.sqrt_mul, Real.sqrt_mul, Real.sqrt_mul] <;> positivity\n  rw [h\u2080]\n  constructor\n  \u00b7 apply le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (a * b * c * d), sq_nonneg (a * b * c), sq_nonneg (a * b), sq_nonneg (a * c),\n      sq_nonneg (a * d), sq_nonneg (b * c), sq_nonneg (b * d), sq_nonneg (c * d)]\n  \u00b7 apply le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (a * b * c * d), sq_nonneg (a * b * c), sq_nonneg (a * b), sq_nonneg (a * c),\n      sq_nonneg (a * d), sq_nonneg (b * c), sq_nonneg (b * d), sq_nonneg (c * d)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_47675_plus (a : \u2115) (h\u2081 : 2 \u2223 a) (h\u2082 : 5 \u2223 a) : a \u2261 0 [ZMOD 10] \u2228 a \u2261 0 [ZMOD 10] := by", "target": "\n  simp only [Int.ModEq, Int.emod_eq_emod_iff_emod_sub_eq_zero]\n  omega"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1820 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a * b + b * c + c * a = a + b + c) : 3 / (a * b + b * c + c * a + 1) + 1 / (1 + a) ^ 2 + 1 / (1 + b) ^ 2 + 1 / (1 + c) ^ 2 \u2265 2 * (a + b + c + 3) / (a + 1) / (b + 1) / (c + 1) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1820_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 1) : 1 / (1 + a * b) + 1 / (1 + b * c) + 1 / (1 + c * a) \u2265 9 / 4 * (a + b + c):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_15995_plus : \u2200 a b c d : \u2115, a \u2264 b \u2192 b \u2264 c \u2192 c \u2264 d \u2192 a * b * c * d \u2264 b * c * d * d:= by", "target": "\n  rintro a b c d hab hbc hcd\n  have h\u2081 : a * b \u2264 b * c := by\n    gcongr\n  have h\u2082 : b * c * d \u2264 c * d * d := by\n    gcongr\n  have h\u2083 : a * b * c \u2264 b * c * d := by\n    gcongr\n  nlinarith\n  <;> assumption\n  <;> linarith\n  <;> linarith\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_33939_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a) (h\u2082 : 0 \u2264 b) (h\u2083 : 0 \u2264 c) (h\u2084 : a + b + c = 1) : Real.sqrt ((1 - a) ^ 2 + a ^ 2) * (Real.sqrt ((1 - b) ^ 2 + b ^ 2)) * (Real.sqrt ((1 - c) ^ 2 + c ^ 2)) \u2265 (1 - a - b - c) ^ 2:= by", "target": "\n  have h\u2085 : (1 - a - b - c) ^ 2 = 0 := by\n    rw [show (1 - a - b - c) = 0 by linarith]\n    simp\n  rw [h\u2085]\n  have h\u2086 : Real.sqrt ((1 - a) ^ 2 + a ^ 2) \u2265 1 - a := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2087 : Real.sqrt ((1 - b) ^ 2 + b ^ 2) \u2265 1 - b := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2088 : Real.sqrt ((1 - c) ^ 2 + c ^ 2) \u2265 1 - c := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  calc\n    Real.sqrt ((1 - a) ^ 2 + a ^ 2) * (Real.sqrt ((1 - b) ^ 2 + b ^ 2)) * (Real.sqrt ((1 - c) ^ 2 + c ^ 2)) \u2265\n        (1 - a) * (1 - b) * (1 - c) := by gcongr <;> nlinarith\n    _ \u2265 0 := by\n      nlinarith [mul_nonneg (sub_nonneg.mpr h\u2081) (sub_nonneg.mpr h\u2082),\n        mul_nonneg (sub_nonneg.mpr h\u2082) (sub_nonneg.mpr h\u2083), mul_nonneg (sub_nonneg.mpr h\u2083) (sub_nonneg.mpr h\u2081)]\n  <;> linarith\n  <;> linarith\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_37781_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b + b * c + c * a = 1) : a ^ 2 + b ^ 2 + c ^ 2 + (1 - a * b - b * c - c * a) ^ 2 \u2265 4 * (a * b * c):= by", "target": "\n  simp only [habc, add_comm, add_left_comm, add_assoc]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_nonneg hab hb, mul_nonneg hb hc, mul_nonneg hc hab, sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_8959 (r\u2081 r\u2082 r\u2083 : \u211d) : (r\u2081 + r\u2082 + r\u2083) / 3 \u2265 3 / (1 / r\u2081 + 1 / r\u2082 + 1 / r\u2083) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_8959_plus (r\u2081 r\u2082 r\u2083 : \u211d) (h\u2081 : 0 < r\u2081) (h\u2082 : 0 < r\u2082) (h\u2083 : 0 < r\u2083) : \u2203 r : \u211d, 1 / r \u2264 1 / r\u2081 + 1 / r\u2082 + 1 / r\u2083 \u2227 r > 0:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_44359_plus : \u2200 n : \u2115, (\u2203 k : \u2115, n! \u2265 2 ^ (n - 1) \u2228 n! \u2265 3 ^ (n - 1)) \u2228 (\u2200 k : \u2115, n! < 2 ^ (n - 1) \u2227 n! < 3 ^ (n - 1))  := by", "target": "\n  intro n\n  by_cases h\u2081 : n! \u2265 2 ^ (n - 1) <;> by_cases h\u2082 : n! \u2265 3 ^ (n - 1) <;> simp_all\n  <;> omega\n  <;> omega\n  <;> omega"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_64151_plus (a : \u211d) (ha : a > 0) : \u2203 N : \u2115, \u2200 n : \u2115, n \u2265 N \u2192 |Real.log (1 + a ^ (1 / n)) - a ^ (1 / n)| < 1 \u2228 1 / n = 0 \u2228 a ^ (1 / n) = 0 \u2228 a ^ (1 / n) = 1:= by", "target": "\n  use 3\n  intro n hn\n  rcases n with (_ | _ | _ | _) <;>\n    simp_all [Nat.div_eq_of_lt, Nat.div_eq_of_lt, Nat.div_eq_of_lt, Nat.div_eq_of_lt]\n  all_goals norm_num\n  all_goals\n    apply Or.inl\n    apply abs_lt.mpr\n    constructor <;>\n    norm_num <;>\n    linarith [Real.log_one, Real.log_one, Real.log_one, Real.log_one]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2496 (a b c d : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (hd : d > 0) : a^2 / b + b^2 / c + c^2 / d + d^2 / a > a + b + c + d := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2496_plus (a b c d : \u211d) (hab : 0 < a) (hbc : 0 < b) (hcd : 0 < c) (hda : 0 < d) (habc : a + b + c + d = 1) : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) * Real.sqrt (1 + c ^ 2) * Real.sqrt (1 + d ^ 2) \u2265 16 * a * b * c * d := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_38639_plus : \u2200 n : \u2115, n > 1 \u2192 \u2203 k : \u2115, k > n \u2227 \u2203 m : \u2115, m < 2 ^ n \u2227 m \u2264 n * 2 ^ n \u2227 n ! < m * k ^ n := by", "target": "\n  intro n hn\n  use n + 1\n  have h1 : n + 1 > n := by linarith\n  have h2 : \u2203 m : \u2115, m < 2 ^ n \u2227 m \u2264 n * 2 ^ n \u2227 n ! < m * (n + 1) ^ n := by\n    use 1\n    have h3 : 1 < 2 ^ n := by\n      calc\n        1 = 2 ^ 0 := by simp\n        _ < 2 ^ n := by exact Nat.pow_lt_pow_of_lt_right (by linarith) (by linarith)\n    have h4 : 1 \u2264 n * 2 ^ n := by\n      have h5 : 0 < 2 ^ n := by positivity\n      have h6 : 0 < n := by linarith\n      nlinarith\n    have h7 : n ! < 1 * (n + 1) ^ n := by\n      have h8 : n ! \u2264 n ^ n := by\n        exact Nat.factorial_le_pow n\n      have h9 : n ^ n < (n + 1) ^ n := by\n        exact Nat.pow_lt_pow_of_lt_left (by linarith) (by linarith)\n      have h10 : 1 * (n + 1) ^ n = (n + 1) ^ n := by simp\n      nlinarith\n    exact \u27e8by linarith, by linarith, by linarith\u27e9\n  exact \u27e8h1, h2\u27e9\n  <;> try norm_num <;> try linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_68992_plus (n : \u2115) (hn : 1 < n) : (\u2211 k in Finset.range n, k) \u2264 n * (n - 1) \u2227 (\u2211 k in Finset.range n, k) \u2264 n^2 := by", "target": "\n  cases n with\n  | zero => contradiction\n  | succ n =>\n    clear hn\n    induction' n with n ih\n    \u00b7 simp\n    \u00b7 simp_all [Finset.sum_range_succ, Nat.succ_mul, Nat.pow_succ, Nat.mul_succ]\n      omega"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_51424_plus (a b c : \u211d) (habc : a * b * c = 1) (h : a + b + c = 3) : a ^ 2 + b ^ 2 + c ^ 2 \u2265 3 * (Real.sqrt (a * b * c) / 3) \u2227 a ^ 2 + b ^ 2 + c ^ 2 \u2265 3 * (Real.sqrt (a * b * c / 3) / 3):= by", "target": "\n  have h\u2081 : a ^ 2 + b ^ 2 + c ^ 2 \u2265 3 := by\n    nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  have h\u2082 : a ^ 2 + b ^ 2 + c ^ 2 \u2265 3 * (Real.sqrt (a * b * c) / 3) := by\n    nlinarith [sq_sqrt (show 0 \u2264 a * b * c by nlinarith), h\u2081]\n  have h\u2083 : a ^ 2 + b ^ 2 + c ^ 2 \u2265 3 * (Real.sqrt (a * b * c / 3) / 3) := by\n    have h\u2084 : Real.sqrt (a * b * c / 3) \u2264 1 := by\n      rw [Real.sqrt_le_iff]\n      constructor\n      \u00b7 nlinarith\n      \u00b7 rw [div_le_iff] <;> nlinarith\n    nlinarith [sq_sqrt (show 0 \u2264 a * b * c / 3 by nlinarith), h\u2081]\n  exact \u27e8h\u2082, h\u2083\u27e9\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4488 {x y : \u211d} (hx : 1 < x \u2227 x < 2) (hy : 1 < y \u2227 y < 2) : (x^2 + x*y + 1)^Real.sqrt 2019 + (y^2 + x*y + 1)^Real.sqrt 2019 < (x^3 + y^3 / (x + y))^Real.sqrt 2019 + (3*x*y + 2)^Real.sqrt 2019 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4488_plus : \u2200 a b : \u211d, a \u2208 Set.Ioo 1 2 \u2227 b \u2208 Set.Ioo 1 2 \u2192 (Real.sqrt (a ^ 2 + 1) + Real.sqrt (b ^ 2 + 1)) ^ 2 \u2265 4 * (Real.sqrt (a * b + 1)) ^ 2 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_81169_plus (a b c x y z : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) : a * b * c \u2264 (a + x) * (b + y) * (c + z) / 4 \u2194 a * b * c \u2264 (a + x) * (b + y) * (c + z) / 4 \u2227 0 \u2264 (a + x) * (b + y) * (c + z) / 4 := by", "target": "\n  constructor\n  rintro h\n  exact \u27e8h, by positivity\u27e9\n  rintro \u27e8h\u2081, h\u2082\u27e9\n  exact h\u2081"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_11940_plus (x y z : \u211d) (h\u2080 : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z) (h\u2081 : x + y + z = 1) (h\u2082 : x * y + x * z + y * z \u2264 1) : 4 * (x * y * z) ^ 2 + x ^ 2 + y ^ 2 + z ^ 2 \u2265 3 * (x * y * z) * (x + y + z) \u2227 4 * (x * y * z) ^ 2 + x ^ 2 + y ^ 2 + z ^ 2 \u2265 3 * (x * y * z) * (x * y + x * z + y * z):= by", "target": "\n  have h\u2083 : 0 \u2264 x * y := by nlinarith\n  have h\u2084 : 0 \u2264 x * z := by nlinarith\n  have h\u2085 : 0 \u2264 y * z := by nlinarith\n  have h\u2086 : 0 \u2264 x * y * z := by nlinarith\n  have h\u2087 : x * y * z \u2264 1 := by nlinarith\n  have h\u2088 : 4 * (x * y * z) ^ 2 + x ^ 2 + y ^ 2 + z ^ 2 \u2265 3 * (x * y * z) * (x + y + z) := by\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  have h\u2089 : 4 * (x * y * z) ^ 2 + x ^ 2 + y ^ 2 + z ^ 2 \u2265 3 * (x * y * z) * (x * y + x * z + y * z) := by\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  exact \u27e8h\u2088, h\u2089\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_9806_plus (x : \u211d) (hx : 3 * x ^ 2 - 5 * x - 2 = 0) : x = 2 \u2228 x = -1/3 \u2228 x = -2/3 \u2228 x = -1/2 := by", "target": "\n  have h : 3 * x ^ 2 - 5 * x - 2 = 0 := hx\n  have h\u2081 : (x - 2) * (3 * x + 1) = 0 := by linarith\n  have h\u2082 : x - 2 = 0 \u2228 3 * x + 1 = 0 := eq_zero_or_eq_zero_of_mul_eq_zero h\u2081\n  cases h\u2082 with\n  | inl h\u2083 =>\n    have h\u2084 : x = 2 := by linarith\n    exact Or.inl h\u2084\n  | inr h\u2083 =>\n    have h\u2084 : x = -1/3 := by linarith\n    exact Or.inr (Or.inl h\u2084)\n  <;> norm_num\n  <;> aesop\n  <;> aesop\n  <;> aesop"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_5032_plus (R I : \u211d) (m : \u211d) (g \u03b8 : \u211d) (h\u2081 : 0 < R \u2227 0 < I \u2227 0 < m \u2227 0 < g \u2227 0 \u2264 \u03b8 \u2227 \u03b8 \u2264 90) (h\u2082 : R * cos \u03b8 \u2264 1) (h\u2083 : 0 < R * cos \u03b8) : (1 + (I / (m * R^2)))^(-1 : \u2124) \u2265 0 \u2227 (1 + (I / (m * R^2)))^(-1 : \u2124) \u2264 1:= by", "target": "\n  have h\u2084 : 0 < R * cos \u03b8 := by positivity\n  have h\u2085 : 0 < R^2 := by\n    have : 0 < R := by\n      linarith\n    positivity\n  have h\u2086 : 0 < m * R^2 := by\n    have : 0 < m := by\n      linarith\n    positivity\n  have h\u2087 : 0 < I / (m * R^2) := by\n    apply div_pos\n    \u00b7 linarith\n    \u00b7 linarith\n  have h\u2088 : (1 + (I / (m * R^2)))^(-1 : \u2124) \u2265 0 := by\n    apply zpow_nonneg\n    positivity\n  have h\u2089 : (1 + (I / (m * R^2)))^(-1 : \u2124) \u2264 1 := by\n    apply zpow_le_one_of_nonpos\n    \u00b7 linarith\n    \u00b7 linarith\n  exact \u27e8h\u2088, h\u2089\u27e9\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_11161_plus (x y z : \u211d) (h\u2080 : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z) (h\u2081 : 0 < y) (h\u2082 : x \u2265 y \u2227 y \u2265 z) :  Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) \u2265 Real.sqrt (x * y + y * z + z * x) - Real.sqrt (2 * (x * y + y * z + z * x)) \u2227 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) \u2265 Real.sqrt (x * y + y * z + z * x) - Real.sqrt (2 * (x * y + y * z + z * x)) \u2228 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) < Real.sqrt (x * y + y * z + z * x) - Real.sqrt (2 * (x * y + y * z + z * x)) \u2227 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) < Real.sqrt (x * y + y * z + z * x) - Real.sqrt (2 * (x * y + y * z + z * x)) := by", "target": "\n  by_cases h\u2083 : Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) \u2265 Real.sqrt (x * y + y * z + z * x) - Real.sqrt (2 * (x * y + y * z + z * x))\n  exact Or.inl \u27e8h\u2083, h\u2083\u27e9\n  exact Or.inr \u27e8by linarith [h\u2083], by linarith [h\u2083]\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_41361_plus (a b c : \u211d) (hab : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n    a * b * c * (a + b + c) \u2264 (a^2 + b^2 + c^2) * (b * c + a * c + a * b) \u2227\n    Real.sqrt ((a^2 + b^2 + c^2) * (b * c + a * c + a * b)) \u2265\n       Real.sqrt (3) * (a * b + b * c + c * a) / 3:= by", "target": "\n  have h\u2080 : 0 < a * b := by positivity\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * a := by positivity\n  have h\u2083 : 0 < a * b * c := by positivity\n  have h\u2084 : 0 < a * b * c * (a + b + c) := by positivity\n  have h\u2085 : 0 < a * b * c * (a + b + c) * (a + b + c) := by positivity\n  have h\u2086 : (a - b) ^ 2 * (b * c + a * c + a * b) + (b - c) ^ 2 * (b * c + a * c + a * b) +\n      (c - a) ^ 2 * (b * c + a * c + a * b) \u2265 0 := by positivity\n  have h\u2087 : Real.sqrt ((a ^ 2 + b ^ 2 + c ^ 2) * (b * c + a * c + a * b)) \u2265\n      Real.sqrt (3) * (a * b + b * c + c * a) / 3 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 by norm_num),\n      mul_self_nonneg (a * b + b * c + c * a),\n      mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a),\n      mul_self_nonneg (c * a - a * b)]\n  exact \u27e8by nlinarith, h\u2087\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1115 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : (a^2 / (2 * a + 1) + b^2 / (2 * b + 1) + c^2 / (2 * c + 1)) \u2264 (a^2 + b^2 + c^2) / (Real.sqrt (a^2 + b^2 + c^2 + 6)) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1115_plus (a b c : \u211d) (hab : 0 < a \u2227 0 < b \u2227 0 < c) (h : a + b + c = 3) (h' : a * b + b * c + c * a \u2264 3) : a ^ 2 / (2 * a + 1) + b ^ 2 / (2 * b + 1) + c ^ 2 / (2 * c + 1) \u2264 (a ^ 2 + b ^ 2 + c ^ 2) / (Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2 + 6)) \u2228 (a + b + c) ^ 2 / (a + b + c) \u2264 a + b + c:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_11953_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 1) (h\u2081 : 0 \u2264 a * b) (h\u2082 : 0 \u2264 a * c) (h\u2083 : 0 \u2264 b * c) : Real.sqrt (a ^ 2 + a * b * c) + Real.sqrt (b ^ 2 + a * b * c) + Real.sqrt (c ^ 2 + a * b * c) \u2265 Real.sqrt (1 + 9 * a * b * c) \u2228 (Real.sqrt (a ^ 2 + a * b * c) + Real.sqrt (b ^ 2 + a * b * c) + Real.sqrt (c ^ 2 + a * b * c) < Real.sqrt (1 + 9 * a * b * c)) \u2227 (\u2203 x y z : \u211d, x + y + z = 1 \u2227 0 \u2264 x * y \u2227 0 \u2264 x * z \u2227 0 \u2264 y * z \u2227 Real.sqrt (x ^ 2 + x * y * z) + Real.sqrt (y ^ 2 + x * y * z) + Real.sqrt (z ^ 2 + x * y * z) < Real.sqrt (1 + 9 * x * y * z)) := by", "target": "\n  by_cases h\u2084 : Real.sqrt (a ^ 2 + a * b * c) + Real.sqrt (b ^ 2 + a * b * c) + Real.sqrt (c ^ 2 + a * b * c) \u2265 Real.sqrt (1 + 9 * a * b * c)\n  exact Or.inl h\u2084\n  exact Or.inr \u27e8by linarith, \u27e8a, b, c, h, h\u2081, h\u2082, h\u2083, by linarith\u27e9\u27e9\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_140 (p : \u2115) (hp : p.Prime) (a : ZMod p) (ha : a \u2260 0) : \u2203 b : ZMod p, a * b = 1 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_140_plus (p : \u2115) (hp : p.Prime) (a : ZMod p) (ha : a \u2260 0) : \u2203 b : ZMod p, a * b = 1 \u2228 \u2203 b : ZMod p, a * b = a \u2228 \u2203 b : ZMod p, a * b = a^2 \u2228 \u2203 b : ZMod p, a * b = a^3:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_39764_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a + b + c = 1) : (1 - c) * (1 - a) ^ 2 * (1 - b) ^ 2 \u2265 (1 - a - b - c) * (1 - a) * (1 - b):= by", "target": "\n  have h\u2083 : 0 \u2264 a * b := by nlinarith\n  have h\u2084 : 0 \u2264 a * c := by nlinarith\n  have h\u2085 : 0 \u2264 b * c := by nlinarith\n  have h\u2086 : 0 \u2264 a * b * c := by nlinarith\n  have h\u2087 : 0 \u2264 (1 - a) * (1 - b) := by nlinarith\n  have h\u2088 : 0 \u2264 (1 - a) * (1 - c) := by nlinarith\n  have h\u2089 : 0 \u2264 (1 - b) * (1 - c) := by nlinarith\n  have h\u2081\u2080 : 0 \u2264 (1 - a) * (1 - b) * (1 - c) := by nlinarith\n  nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (a - c),\n    mul_self_nonneg (b - c)]\n  <;> assumption\n  <;> simp_all only [add_assoc, add_left_comm, add_comm, mul_one, sub_self, zero_add,\n    add_zero, mul_zero, mul_assoc, mul_left_comm, mul_comm, add_right_comm]\n  <;> linarith\n  <;> simp_all only [add_assoc, add_left_comm, add_comm, mul_one, sub_self, zero_add,\n    add_zero, mul_zero, mul_assoc, mul_left_comm, mul_comm, add_right_comm]\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_41604_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) : \u2203 (a b c : \u211d), a * x + b * y + c * z \u2264 3 * (x + y + z) \u2227 (Real.sqrt (x * y) + Real.sqrt (y * z) + Real.sqrt (z * x)) \u2264 a * (x + y + z) + b * (x + y + z) + c * (x + y + z):= by", "target": "\n  refine' \u27e83, 3, 3, by linarith, _\u27e9\n  have h\u2081 : Real.sqrt (x * y) \u2264 (x + y) / 2 := by\n    nlinarith [sq_sqrt (mul_nonneg hx hy), sq_nonneg (x - y)]\n  have h\u2082 : Real.sqrt (y * z) \u2264 (y + z) / 2 := by\n    nlinarith [sq_sqrt (mul_nonneg hy hz), sq_nonneg (y - z)]\n  have h\u2083 : Real.sqrt (z * x) \u2264 (z + x) / 2 := by\n    nlinarith [sq_sqrt (mul_nonneg hz hx), sq_nonneg (z - x)]\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_3237_plus (a b c d : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 0 \u2264 d) (h\u2082 : a + b + c + d = 1) :\n  Real.sqrt ((a * b) ^ 2 + (a * c) ^ 2 + (a * d) ^ 2 + (b * c) ^ 2 + (b * d) ^ 2 + (c * d) ^ 2) \u2264 1:= by", "target": "\n  have : (a * b) ^ 2 + (a * c) ^ 2 + (a * d) ^ 2 + (b * c) ^ 2 + (b * d) ^ 2 + (c * d) ^ 2 \u2264 1 := by\n    have : a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2 \u2264 1 := by\n      nlinarith [sq_nonneg (a + b + c + d), h\u2082]\n    nlinarith [mul_self_nonneg (a * b), mul_self_nonneg (a * c), mul_self_nonneg (a * d),\n      mul_self_nonneg (b * c), mul_self_nonneg (b * d), mul_self_nonneg (c * d)]\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  \u00b7 nlinarith\n  \u00b7 nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_12364_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b + b * c + c * a = 1) : a ^ 2 * b ^ 2 * c ^ 2 * (a + b + c) ^ 2 \u2264 (a * b + b * c + c * a) ^ 3:= by", "target": "\n  have h1 : 0 \u2264 a * b := by positivity\n  have h2 : 0 \u2264 b * c := by positivity\n  have h3 : 0 \u2264 c * a := by positivity\n  have h4 : 0 \u2264 a * b * c := by positivity\n  have h5 : 0 \u2264 a * b * c * (a + b + c) := by positivity\n  have h6 : (a * b + b * c + c * a) ^ 3 = 1 := by simp [habc]\n  nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b),\n    mul_self_nonneg (a * b * c), mul_self_nonneg (a * b * c * (a + b + c))]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_10550_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b * c \u2260 0) : (1 / (a + b) + 1 / (b + c) + 1 / (c + a) \u2265 3 / (a + b + c)) \u2227 (1 / (a * b) + 1 / (b * c) + 1 / (c * a) \u2265 3 / (a * b + b * c + c * a)):= by", "target": "\n  constructor\n  \u00b7 have h\u2080 : 0 < a := lt_of_le_of_ne hab (by rintro rfl; simp_all)\n    have h\u2081 : 0 < b := lt_of_le_of_ne hb (by rintro rfl; simp_all)\n    have h\u2082 : 0 < c := lt_of_le_of_ne hc (by rintro rfl; simp_all)\n    have h\u2083 : 0 < a + b := by linarith\n    have h\u2084 : 0 < b + c := by linarith\n    have h\u2085 : 0 < c + a := by linarith\n    have h\u2086 : 0 < a * b := by positivity\n    have h\u2087 : 0 < b * c := by positivity\n    have h\u2088 : 0 < c * a := by positivity\n    field_simp [h\u2083, h\u2084, h\u2085, h\u2086, h\u2087, h\u2088]\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  \u00b7 have h\u2080 : 0 < a := lt_of_le_of_ne hab (by rintro rfl; simp_all)\n    have h\u2081 : 0 < b := lt_of_le_of_ne hb (by rintro rfl; simp_all)\n    have h\u2082 : 0 < c := lt_of_le_of_ne hc (by rintro rfl; simp_all)\n    have h\u2083 : 0 < a * b := by positivity\n    have h\u2084 : 0 < b * c := by positivity\n    have h\u2085 : 0 < c * a := by positivity\n    have h\u2086 : 0 < a * b * c := by positivity\n    field_simp [h\u2083, h\u2084, h\u2085, h\u2086]\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_40558_plus (x : \u211d) (hx : 0 < x) : \u2203 y, y \u2260 0 \u2227 6 * x ^ 2 / (2 * x ^ 2 * Real.sqrt 3) = 3 / Real.sqrt 3 \u2228 6 * x ^ 2 / (2 * x ^ 2 * Real.sqrt 3) = 3 / Real.sqrt 3 \u2227 y = 0:= by", "target": "\n  use 0\n  simp [hx, mul_comm]\n  <;> norm_num\n  <;> field_simp\n  <;> ring\n  <;> norm_num\n  <;> ring\n  <;> norm_num\n  <;> ring\n  <;> norm_num\n  <;> ring\n  <;> norm_num\n  <;> ring\n  <;> norm_num\n  <;> ring\n  <;> norm_num\n  <;> ring\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4673 (a b : \u211d) (u : \u2115 \u2192 \u211d) (h\u2080 : \u2200 n, u n = (a + b) * 2^n + (2 * a - b) * (-1)^n) (h\u2081 : \u2200 n, u (n + 1) = f (u n)) (h\u2082 : f = fun x => (x + b * x^2) / (x + a * x^2)) : \u2200 n, (f (u n) / u n) = u (n + 1) / u n := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4673_plus (a b : \u211d) (u : \u2115 \u2192 \u211d) (h\u2080 : \u2200 n, u n = (a + b) * 2^n + (2 * a - b) * (-1)^n) (h\u2081 : \u2200 n, u (n + 1) = f (u n)) (h\u2082 : f = fun x => (x + b * x^2) / (x + a * x^2)) : (\u2203 x, \u2203 y, x \u2260 0 \u2227 y \u2260 0 \u2227 x * y \u2260 0 \u2227 \u2200 n, u n \u2260 0 \u2227 \u2200 n, u (n + 1) \u2260 0) \u2192 \u2200 n, (u n) \u2260 0 \u2227 (u (n + 1)) \u2260 0 \u2227 (u n) \u2260 0 \u2227 (u (n + 1)) \u2260 0 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_20859_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 3) (h' : a * b + b * c + c * a \u2264 3) : 1 / (1 + a ^ 2) + 1 / (1 + b ^ 2) + 1 / (1 + c ^ 2) \u2265 3 / 4 \u2227 1 / (1 + a ^ 2) + 1 / (1 + b ^ 2) + 1 / (1 + c ^ 2) \u2265 3 / 4 - a * b * c:= by", "target": "\n  rcases hab with \u27e8ha, hb, hc\u27e9\n  have h\u2080 : 0 \u2264 a * b := by positivity\n  have h\u2081 : 0 \u2264 b * c := by positivity\n  have h\u2082 : 0 \u2264 c * a := by positivity\n  have h\u2083 : 0 \u2264 a * b * c := by positivity\n  have h\u2084 : 1 / (1 + a ^ 2) \u2265 1 / 2 - a / 4 := by\n    rw [ge_iff_le, le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a - 1)]\n  have h\u2085 : 1 / (1 + b ^ 2) \u2265 1 / 2 - b / 4 := by\n    rw [ge_iff_le, le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (b - 1)]\n  have h\u2086 : 1 / (1 + c ^ 2) \u2265 1 / 2 - c / 4 := by\n    rw [ge_iff_le, le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (c - 1)]\n  constructor\n  \u00b7 linarith\n  \u00b7 nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_55887_plus (a b c : \u211d) (hab : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 3) (h : 0 \u2264 a * b + b * c + c * a) : Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) * (Real.sqrt (b ^ 2 + a ^ 2 + c ^ 2) * (Real.sqrt (c ^ 2 + a ^ 2 + b ^ 2))) \u2264 (3 * (a + b + c)) ^ 3 \u2227 (Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) * (Real.sqrt (b ^ 2 + a ^ 2 + c ^ 2) * (Real.sqrt (c ^ 2 + a ^ 2 + b ^ 2)))) \u2264 (3 * (a + b + c)) ^ 3:= by", "target": "\n  have h\u2081 : Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) \u2264 3 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    all_goals nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  have h\u2082 : Real.sqrt (b ^ 2 + a ^ 2 + c ^ 2) \u2264 3 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    all_goals nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  have h\u2083 : Real.sqrt (c ^ 2 + a ^ 2 + b ^ 2) \u2264 3 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    all_goals nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  constructor\n  calc\n    Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) * (Real.sqrt (b ^ 2 + a ^ 2 + c ^ 2) * (Real.sqrt (c ^ 2 + a ^ 2 + b ^ 2))) \u2264 3 * (3 * 3) := by\n      gcongr <;> assumption\n    _ \u2264 (3 * (a + b + c)) ^ 3 := by\n      rw [habc]\n      ring_nf\n      nlinarith\n  calc\n    Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) * (Real.sqrt (b ^ 2 + a ^ 2 + c ^ 2) * (Real.sqrt (c ^ 2 + a ^ 2 + b ^ 2))) \u2264 3 * (3 * 3) := by\n      gcongr <;> assumption\n    _ \u2264 (3 * (a + b + c)) ^ 3 := by\n      rw [habc]\n      ring_nf\n      nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_50161_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b + b * c + c * a = 0) : a ^ 2 + b ^ 2 + c ^ 2 + (a * b + b * c + c * a) * (a * b + b * c + c * a) * (a * b + b * c + c * a) * (a * b + b * c + c * a) \u2265 2 * (a * b * b * c * c * a):= by", "target": "\n  have h\u2081 : a * b + b * c + c * a = 0 := habc\n  have h\u2082 : a * b = 0 := by\n    nlinarith [sq_nonneg a, sq_nonneg b, sq_nonneg c, h\u2081]\n  have h\u2083 : b * c = 0 := by\n    nlinarith [sq_nonneg a, sq_nonneg b, sq_nonneg c, h\u2081]\n  have h\u2084 : c * a = 0 := by\n    nlinarith [sq_nonneg a, sq_nonneg b, sq_nonneg c, h\u2081]\n  simp_all only [sq, mul_zero, zero_add, zero_mul, add_zero]\n  nlinarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_7071 (a b c : \u211d) (h\u2081 : a < b \u2227 b < c) (h\u2082 : a + b + c = 6) (h\u2083 : a * b + b * c + c * a = 9) : 4 * (a ^ 2 + c ^ 2) + 5 * b * (c - a) \u2264 1179 / 13 \u2227 a ^ 2 + c ^ 2 + b * (c - a) \u2264 (37 + 13 * Real.sqrt 13) / 4 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_7071_plus (a b c : \u211d) (h\u2081 : a < b \u2227 b < c) (h\u2082 : a + b + c = 6) (h\u2083 : a * b + b * c + c * a = 9) : Real.sqrt (a ^ 2 + 1) + Real.sqrt (b ^ 2 + 1) + Real.sqrt (c ^ 2 + 1) \u2265 6 / 3 \u2227 Real.sqrt (a ^ 2 + 1) + Real.sqrt (b ^ 2 + 1) + Real.sqrt (c ^ 2 + 1) \u2265 3 * Real.sqrt 13 / 3:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_7552 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a / (b * (1 + c)) + b / (a + b * c) + b * c / (a + b)) \u2265 3 / 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_7552_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b * c \u2260 0) : (1 / (a + 1) + 1 / (b + 1) + 1 / (c + 1) + 1 / (a * b + 1) + 1 / (b * c + 1) + 1 / (c * a + 1)) \u2265 6 / (a * b * c + 3):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5886 (x y z t : \u2115) (h : t = x / y / z + y / x / z + z / x / y) : t = 1 \u2228 t = 3 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5886_plus (x y z t : \u2115) (h\u2081 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2082 : 0 < x * y \u2227 0 < x * z \u2227 0 < y * z) (h\u2083 : t = x / y / z + y / x / z + z / x / y) : t \u2264 3 \u2228 t \u2265 4:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_36148_plus  (x y z : \u2124)\n  (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z)\n  (h\u2081 : x \u2261 0 [ZMOD 7] \u2228 y \u2261 0 [ZMOD 7] \u2228 z \u2261 0 [ZMOD 7])\n  (h\u2082 : x^3 + y^3 + z^3 = 0) :\n  x \u2264 84 \u2228 y \u2264 84 \u2228 z \u2264 84 := by", "target": "\n  by_contra! h\n  have h\u2083 : 0 < x^3 \u2227 0 < y^3 \u2227 0 < z^3 := by\n    refine' \u27e8pow_pos h\u2080.1 3, pow_pos h\u2080.2.1 3, pow_pos h\u2080.2.2 3\u27e9\n  have h\u2084 : x^3 + y^3 + z^3 > 0 := by\n    linarith\n  linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3992 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x / y + y / z + z / x - 3) ^ 3 \u2265 432 * (x ^ 2 + y ^ 2 + z ^ 2 - x * y - y * z - z * x) ^ 3 / (x + y + z) ^ 6 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3992_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \u2203 a : \u211d, a \u2265 1 \u2227 a ^ 3 \u2265 432 * (x ^ 2 + y ^ 2 + z ^ 2 - x * y - y * z - z * x) ^ 3 / (x + y + z) ^ 6 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_8011 : \u2211 k in Finset.range 1000, ((-1:\u2124)^k * ((1)/(k + 1))) + \u2211 k in Finset.range 1000, ((1)/(k + 1001)) = 0 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_8011_plus : \u2211 k in Finset.range 1000, ((-1:\u2124)^k * ((1)/(k + 1))) + \u2211 k in Finset.range 1000, ((1)/(k + 1001)) \u2265 0 \u2228 \u2211 k in Finset.range 1000, ((-1:\u2124)^k * ((1)/(k + 1))) + \u2211 k in Finset.range 1000, ((1)/(k + 1001)) < 0 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_48528_plus (a b c : \u211d) (hab : a + b + c = 1) (h : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) : (Real.sqrt (a^2 + 9 * b^2 + c^2 - 6 * a * b + 18 * b * c + 18 * c * a) + Real.sqrt (a^2 + b^2 + 9 * c^2 + 18 * a * b - 6 * b * c + 18 * c * a) + Real.sqrt (9 * a^2 + b^2 + c^2 + 18 * a * b + 18 * b * c - 6 * c * a)) \u2264 18 * (a + b + c):= by", "target": "\n  have h\u2081 : a + b + c = 1 := hab\n  have h\u2082 : 0 \u2264 a := h.1\n  have h\u2083 : 0 \u2264 b := h.2.1\n  have h\u2084 : 0 \u2264 c := h.2.2\n  have h\u2085 : Real.sqrt (a^2 + 9 * b^2 + c^2 - 6 * a * b + 18 * b * c + 18 * c * a) \u2264 3 * (a + 3 * b + c):= by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (a - 3 * b + c), sq_nonneg (a + 3 * b - c), sq_nonneg (3 * a + b + c)]\n  have h\u2086 : Real.sqrt (a^2 + b^2 + 9 * c^2 + 18 * a * b - 6 * b * c + 18 * c * a) \u2264 3 * (a + b + 3 * c):= by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (a - b + 3 * c), sq_nonneg (a + b - 3 * c), sq_nonneg (3 * a + b + c)]\n  have h\u2087 : Real.sqrt (9 * a^2 + b^2 + c^2 + 18 * a * b + 18 * b * c - 6 * c * a) \u2264 3 * (3 * a + b + c):= by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (3 * a - b + c), sq_nonneg (3 * a + b - c), sq_nonneg (a + b + 3 * c)]\n  linarith\n  <;> try norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_29314_plus : \u2200 x : \u211d, 4 * x \u2264 x ^ 4 + 1 + 1 + 1 \u2228 \u2203 y : \u211d, y ^ 2 + 1 \u2264 (4 * x) / 3 \u2228 (4 * x) / 3 \u2264 y ^ 2 + 1 := by", "target": "\n  intro x\n  by_cases h : 4 * x \u2264 x ^ 4 + 1 + 1 + 1\n  \u00b7 left\n    linarith\n  \u00b7 right\n    use (4 * x) / 3\n    by_contra h'\n    push_neg at h'\n    nlinarith [sq_nonneg (x ^ 2 - 1)]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_9003 : \u2200 a b c : \u211d, a ^ 4 + b ^ 4 + c ^ 4 \u2265 (a ^ 3 * b + b ^ 3 * a) + (c ^ 3 * a + a ^ 3 * c) + (b * c ^ 3 + c * b ^ 3) \u2227 (a ^ 3 * b + b ^ 3 * a) + (c ^ 3 * a + a ^ 3 * c) + (b * c ^ 3 + c * b ^ 3) \u2265 2 * (a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_9003_plus : \u2200 a b c : \u211d, \u2203 d : \u211d, d \u2265 a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2 \u2227 d \u2265 0 \u2227 d \u2265 a * b * c * (a + b + c):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2422 (a b c : \u211d) (hab : a \u2264 b) (hbc : b \u2264 c) (hca : c \u2264 a) (habc : a * b + b * c + c * a = 3) : 1 \u2264 1 / (2 * a + b) + 1 / (2 * b + c) + 1 / (2 * c + a) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2422_plus (a b c : \u211d) (hab : a \u2264 b) (hbc : b \u2264 c) (hca : c \u2264 a) (habc : a * b + b * c + c * a = 3) : 1 \u2264 Real.sqrt (a ^ 2 + 1) * Real.sqrt (b ^ 2 + 1) * Real.sqrt (c ^ 2 + 1):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_21830_plus (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a * b + b * c + c * a \u2264 3 * (a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2) + (a ^ 2 + b ^ 2 + c ^ 2):= by", "target": "\n  have h\u2080 : 0 < a * b := mul_pos ha hb\n  have h\u2081 : 0 < b * c := mul_pos hb hc\n  have h\u2082 : 0 < c * a := mul_pos hc ha\n  have h\u2083 : 0 < a ^ 2 + b ^ 2 + c ^ 2 := by positivity\n  have h\u2084 : 0 < a ^ 2 * c ^ 2 := by positivity\n  have h\u2085 : 0 < b ^ 2 * a ^ 2 := by positivity\n  have h\u2086 : 0 < c ^ 2 * b ^ 2 := by positivity\n  have h\u2087 : 0 < a ^ 2 * b ^ 2 * c ^ 2 := by positivity\n  field_simp [h\u2080, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    sq_nonneg (a ^ 2 * c - b ^ 2 * a), sq_nonneg (b ^ 2 * a - c ^ 2 * b), sq_nonneg (c ^ 2 * b - a ^ 2 * c)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_11547_plus (p : \u2115) (a b c : \u2115) (hp : p.Prime) : p \u2223 (a * b * c) ^ 2 \u2227 p \u2223 (b * c) ^ 2 + (a * c) ^ 2 + (a * b) ^ 2 \u2192 (p \u2223 (a * b * c) \u2228 p \u2223 (b * c) \u2228 p \u2223 (a * c) \u2228 p \u2223 (a * b)) \u2228 (p \u2223 (b * c) \u2228 p \u2223 (a * c) \u2228 p \u2223 (a * b)) \u2228 p \u2223 (a * c) \u2228 p \u2223 (a * b):= by", "target": "\n  intro h\n  by_cases h\u2080 : p \u2223 (a * b * c) <;> simp_all [hp.dvd_mul, pow_two]\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_69311_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) : Real.sqrt ((x + y) * (x + z)) * Real.sqrt ((y + z) * (y + x)) * Real.sqrt ((z + y) * (z + x)) \u2265 x * y * z * 2:= by", "target": "\n  have h\u2080 : Real.sqrt ((x + y) * (x + z)) * Real.sqrt ((y + z) * (y + x)) * Real.sqrt ((z + y) * (z + x)) =\n      Real.sqrt (((x + y) * (x + z)) * ((y + z) * (y + x)) * ((z + y) * (z + x))) := by\n    rw [\u2190 Real.sqrt_mul, \u2190 Real.sqrt_mul]\n    all_goals positivity\n  rw [h\u2080]\n  apply le_sqrt_of_sq_le\n  have h\u2081 : 0 \u2264 x * y := by positivity\n  have h\u2082 : 0 \u2264 y * z := by positivity\n  have h\u2083 : 0 \u2264 z * x := by positivity\n  have h\u2084 : 0 \u2264 (x * y) * (y * z) := by positivity\n  have h\u2085 : 0 \u2264 (y * z) * (z * x) := by positivity\n  have h\u2086 : 0 \u2264 (z * x) * (x * y) := by positivity\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_14455_plus (a b c : \u211d) (habc : a * b * c = 1) (h : a + b + c >= 1) : Real.sqrt (a + b + c) + Real.sqrt (1 + (1 + 1)) + Real.sqrt (1 + (1 + 1)) \u2265 2 * Real.sqrt (2):= by", "target": "\n  have : Real.sqrt (1 + (1 + 1)) \u2265 Real.sqrt (2) := by\n    apply Real.sqrt_le_sqrt\n    linarith\n  have : Real.sqrt (a + b + c) \u2265 0 := Real.sqrt_nonneg _\n  have : Real.sqrt (1 + (1 + 1)) \u2265 0 := Real.sqrt_nonneg _\n  nlinarith [sq_sqrt (show (2 : \u211d) \u2265 0 by norm_num),\n    sq_sqrt (show (1 + (1 + 1) : \u211d) \u2265 0 by norm_num),\n    sq_sqrt (show (a + b + c : \u211d) \u2265 0 by linarith),\n    sq_nonneg (Real.sqrt (a + b + c) - Real.sqrt (2))]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_13163_plus (a b : \u2115) (hb : 1 < b) : a \u2223 b \u2192 (2^a-1 \u2223 2^b-1) \u2228 \u2203 c, 2^b-1 < 2^c-1 \u2227 c \u2264 b \u2228 2^b-1 < 2^c-1 \u2227 b < c := by", "target": "\n  intro h\n  have h1 : 2^a - 1 \u2223 2^b - 1 := by\n    have h2 : a \u2223 b := h\n    have h3 : 2^a - 1 \u2223 2^b - 1 := by\n      obtain \u27e8m, hm\u27e9 := h2\n      rw [hm]\n      simpa only [one_pow, pow_mul] using nat_sub_dvd_pow_sub_pow _ 1 m\n    exact h3\n  apply Or.inl\n  exact h1"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_43948_plus (n : \u2115) (hn : 1 \u2264 n) : \u2211 k in Finset.Icc 0 n, (1 : \u211d) / (k + 1) \u2265 1 - (1 / (n + 1)) \u2227 \u2211 k in Finset.Icc 0 n, (1 : \u211d) / (k + 1) \u2264 n + 1:= by", "target": "\n  constructor\n  \u00b7 induction' hn with n hn IH\n    norm_num [Finset.sum_Icc_succ_top]\n    rw [Finset.sum_Icc_succ_top (Nat.zero_le _)]\n    rw [Nat.cast_succ]\n    apply le_trans _ (add_le_add_right IH _)\n    norm_num\n    apply le_of_sub_nonneg\n    field_simp\n    ring_nf\n    positivity\n  \u00b7 induction' hn with n hn IH\n    norm_num [Finset.sum_Icc_succ_top]\n    rw [Finset.sum_Icc_succ_top (Nat.zero_le _)]\n    rw [Nat.cast_succ]\n    apply le_trans (add_le_add_right IH _) _\n    norm_num\n    apply le_of_sub_nonneg\n    field_simp\n    ring_nf\n    positivity"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1097 (a b c : \u211d) (h1 : a>0 \u2227 b>0 \u2227 c>0 \u2227 a * b * c = 1) : 1 / (2 * a + 1) + 1 / (2 * b + 1) + 1 / (2 * c + 1) \u2265 1 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1097_plus (a b c : \u211d) (habc : a * b * c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0) : (1 + 1 / (2 * a)) * (1 + 1 / (2 * b)) * (1 + 1 / (2 * c)) \u2265 8 / 9 \u2227 (1 + 1 / (2 * a)) * (1 + 1 / (2 * b)) * (1 + 1 / (2 * c)) \u2265 1 \u2228 (1 + 1 / (2 * a)) * (1 + 1 / (2 * b)) * (1 + 1 / (2 * c)) < 8 / 9 \u2227 (1 + 1 / (2 * a)) * (1 + 1 / (2 * b)) * (1 + 1 / (2 * c)) < 1:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_43531_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) : \u2203 a' b' c' : \u211d, (0 < a' \u2227 0 < b' \u2227 0 < c') \u2227 (a' + b') * (c' + a') \u2265 2 * Real.sqrt (a' * b' * c' * (a' + b' + c')) \u2227 (a' + b' + c') \u2264 3 * (a + b + c):= by", "target": "\n  use a, b, c\n  constructor\n  exact \u27e8hab, hbc, hca\u27e9\n  have h\u2080 : 0 < a * b := by positivity\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * a := by positivity\n  have h\u2083 : 0 < a * b * c := by positivity\n  have h\u2084 : 0 < a * b * c * (a + b + c) := by positivity\n  have h\u2085 : Real.sqrt (a * b * c * (a + b + c)) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2086 : (a + b) * (c + a) \u2265 2 * Real.sqrt (a * b * c * (a + b + c)) := by\n    nlinarith [sq_sqrt (by positivity : 0 \u2264 a * b * c * (a + b + c)),\n      mul_self_nonneg (a - b),\n      mul_self_nonneg (b - c),\n      mul_self_nonneg (c - a),\n      mul_self_nonneg (a * b - Real.sqrt (a * b * c * (a + b + c))),\n      mul_self_nonneg (b * c - Real.sqrt (a * b * c * (a + b + c))),\n      mul_self_nonneg (c * a - Real.sqrt (a * b * c * (a + b + c)))]\n  have h\u2087 : a + b + c \u2264 3 * (a + b + c) := by linarith\n  exact \u27e8h\u2086, h\u2087\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_1137_plus (a b c : \u211d) (hab : 0 \u2264 a) (hbc : 0 \u2264 b) (hca : 0 \u2264 c) :\n  Real.sqrt (a ^ 2 + b * c) \u2265 0 \u2227 (1 / (a + Real.sqrt (a ^ 2 + b * c))) ^ 2 \u2265 (b + c) / ((a + b + c) * (a + b) * (a + c)) \u2228 (1 / (a + Real.sqrt (a ^ 2 + b * c))) ^ 2 < (b + c) / ((a + b + c) * (a + b) * (a + c)) \u2227 Real.sqrt (a ^ 2 + b * c) \u2265 0:= by", "target": "\n  by_cases h\u2080 : (1 / (a + Real.sqrt (a ^ 2 + b * c))) ^ 2 \u2265 (b + c) / ((a + b + c) * (a + b) * (a + c))\n  exact Or.inl \u27e8Real.sqrt_nonneg (a ^ 2 + b * c), h\u2080\u27e9\n  exact Or.inr \u27e8by linarith, Real.sqrt_nonneg (a ^ 2 + b * c)\u27e9\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_6861 (a b c : \u211d) : a * b * c \u2265 (a + b - c) * (a - b + c) * (-a + b + c) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_6861_plus (a b c : \u211d) (h\u2081 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2082 : a + b + c = 3) (h\u2083 : a * b + b * c + c * a \u2264 3) : a ^ 3 + b ^ 3 + c ^ 3 + 3 * (a ^ 2 * b ^ 2 * c ^ 2) / (a + b + c) ^ 3 \u2265 a * b * c * (a + b + c):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_19377_plus (x y : \u211d) (h\u2081 : x + y = 2) (h\u2082 : x^2 + y^2 = 1) : x^30 + y^30 \u2265 1/2^30 \u2227 x^40 + y^40 \u2265 1/2^40 \u2227 x^50 + y^50 \u2265 1/2^50 \u2227 x^60 + y^60 \u2265 1/2^60 \u2227 x^70 + y^70 \u2265 1/2^70 \u2227 x^80 + y^80 \u2265 1/2^80 \u2227 x^90 + y^90 \u2265 1/2^90 \u2227 x^100 + y^100 \u2265 1/2^100 := by", "target": "\n  have h\u2083 : y = 2 - x := by linarith\n  simp only [h\u2083] at *\n  constructor\n  \u00b7\n    nlinarith [sq_nonneg (x - 1), sq_nonneg (x + 1), sq_nonneg (x ^ 2 - x), sq_nonneg (x ^ 2 + x), sq_nonneg (x ^ 3 - x ^ 2), sq_nonneg (x ^ 3 + x ^ 2), sq_nonneg (x ^ 4 - x ^ 3), sq_nonneg (x ^ 4 + x ^ 3)]\n  \u00b7 constructor\n    \u00b7\n      nlinarith [sq_nonneg (x - 1), sq_nonneg (x + 1), sq_nonneg (x ^ 2 - x), sq_nonneg (x ^ 2 + x), sq_nonneg (x ^ 3 - x ^ 2), sq_nonneg (x ^ 3 + x ^ 2), sq_nonneg (x ^ 4 - x ^ 3), sq_nonneg (x ^ 4 + x ^ 3)]\n    \u00b7 constructor\n      \u00b7\n        nlinarith [sq_nonneg (x - 1), sq_nonneg (x + 1), sq_nonneg (x ^ 2 - x), sq_nonneg (x ^ 2 + x), sq_nonneg (x ^ 3 - x ^ 2), sq_nonneg (x ^ 3 + x ^ 2), sq_nonneg (x ^ 4 - x ^ 3), sq_nonneg (x ^ 4 + x ^ 3)]\n      \u00b7 constructor\n        \u00b7\n          nlinarith [sq_nonneg (x - 1), sq_nonneg (x + 1), sq_nonneg (x ^ 2 - x), sq_nonneg (x ^ 2 + x), sq_nonneg (x ^ 3 - x ^ 2), sq_nonneg (x ^ 3 + x ^ 2), sq_nonneg (x ^ 4 - x ^ 3), sq_nonneg (x ^ 4 + x ^ 3)]\n        \u00b7 constructor\n          \u00b7\n            nlinarith [sq_nonneg (x - 1), sq_nonneg (x + 1), sq_nonneg (x ^ 2 - x), sq_nonneg (x ^ 2 + x), sq_nonneg (x ^ 3 - x ^ 2), sq_nonneg (x ^ 3 + x ^ 2), sq_nonneg (x ^ 4 - x ^ 3), sq_nonneg (x ^ 4 + x ^ 3)]\n          \u00b7 constructor\n            \u00b7\n              nlinarith [sq_nonneg (x - 1), sq_nonneg (x + 1), sq_nonneg (x ^ 2 - x), sq_nonneg (x ^ 2 + x), sq_nonneg (x ^ 3 - x ^ 2), sq_nonneg (x ^ 3 + x ^ 2), sq_nonneg (x ^ 4 - x ^ 3), sq_nonneg (x ^ 4 + x ^ 3)]\n            \u00b7\n              nlinarith [sq_nonneg (x - 1), sq_nonneg (x + 1), sq_nonneg (x ^ 2 - x), sq_nonneg (x ^ 2 + x), sq_nonneg (x ^ 3 - x ^ 2), sq_nonneg (x ^ 3 + x ^ 2), sq_nonneg (x ^ 4 - x ^ 3), sq_nonneg (x ^ 4 + x ^ 3)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_2993_plus : \u2200 n : \u2115, (\u220f k in Finset.range n, (1 + 1 / k ^ 3)) < 3 \u2228 (\u220f k in Finset.range n, (1 + 1 / k ^ 3)) \u2265 3 \u2227 (\u220f k in Finset.range n, (1 + 1 / k ^ 3)) % 3 = 0 := by", "target": "\n  intro n\n  cases n with\n  | zero =>\n    simp\n  | succ n =>\n    cases n with\n    | zero =>\n      simp\n    | succ n =>\n      induction' n with n ih\n      all_goals simp_all [Finset.prod_range_succ', Nat.div_eq_of_lt]\n      all_goals omega\n      <;> omega"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_9248 (m n : \u2115) (x : \u2115) (y : \u2115) (z : \u2115) (hx : x = 3 * (2 * 3 ^ m) ^ (2 * m ^ 2 + m)) (hy : y = 3 * (2 * 3 ^ m) ^ (2 * m ^ 2)) (hz : z = (2 * 3 ^ m) ^ (2 * m ^ 2 - m + 1)) (hn : n = 2 * m + 1) : x ^ (n - 1) + y ^ n = z ^ (n + 1) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_9248_plus (x y z : \u2115) (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2081 : x \u2223 y) (h\u2082 : y \u2223 z) (h\u2083 : z \u2223 x) (h\u2084 : x \u2264 y) (h\u2085 : y \u2264 z) (h\u2086 : z \u2264 x) : x = y \u2227 y = z \u2227 z = x \u2228 x = 1 \u2227 y = 1 \u2227 z = 1 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_6121 (a b : \u211d) (ha : 0 < a) (hb : 0 < b) : 1 + Real.sqrt 3 / 3 < (Real.sqrt a + Real.sqrt b) * (1 / Real.sqrt (a + 3 * b) + 1 / Real.sqrt (3 * a + b)) \u2227 (Real.sqrt a + Real.sqrt b) * (1 / Real.sqrt (a + 3 * b) + 1 / Real.sqrt (3 * a + b)) \u2264 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_6121_plus (a b : \u211d) (hab : 0 < a \u2227 0 < b) : Real.sqrt (a ^ 2 + b ^ 2) / (Real.sqrt a + Real.sqrt b) \u2264 Real.sqrt (a + b):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_77_plus (a b c : \u211d) (h\u2081 : a + b + c = 3) (h\u2082 : a * b + b * c + c * a = 1) (h\u2083 : 1 / (a + b) + 1 / (b + c) + 1 / (c + a) = 10 / 3) : c ^ 2 / (a ^ 2 + b ^ 2) + a ^ 2 / (b ^ 2 + c ^ 2) + b ^ 2 / (c ^ 2 + a ^ 2) \u2265 3 / 8 \u2228 0 < a * b + b * c + c * a \u2228 0 < a * b * c:= by", "target": "\n  refine' or_iff_not_imp_left.mpr fun h => _\n  have : 0 < a * b + b * c + c * a := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_28728_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \u2203 a : \u211d, \u2203 b : \u211d, \u2203 c : \u211d, a * b * c > 0 \u2227 a * b > 0 \u2227 b * c > 0 \u2227 c * a > 0 \u2227 (1 / (x ^ 2 + x * y + y ^ 2) + 1 / (y ^ 2 + y * z + z ^ 2) + 1 / (z ^ 2 + z * x + x ^ 2) \u2265 9 / (x + y + z) ^ 2 ) \u2227 (\u2203 a : \u211d, 0 < a \u2227 a \u2264 x * y * z)  := by", "target": "\n  use 1, 1, 1\n  have h\u2080 : 0 < x * y := by positivity\n  have h\u2081 : 0 < y * z := by positivity\n  have h\u2082 : 0 < z * x := by positivity\n  have h\u2083 : 1 / (x ^ 2 + x * y + y ^ 2) + 1 / (y ^ 2 + y * z + z ^ 2) + 1 / (z ^ 2 + z * x + x ^ 2) \u2265 9 / (x + y + z) ^ 2 := by\n    field_simp [sq]\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (y ^ 2 - z ^ 2), sq_nonneg (z ^ 2 - x ^ 2),\n      sq_nonneg (x ^ 2 + y ^ 2 - 2 * x * y), sq_nonneg (y ^ 2 + z ^ 2 - 2 * y * z),\n      sq_nonneg (z ^ 2 + x ^ 2 - 2 * z * x)]\n  exact \u27e8by positivity, by positivity, by positivity, by positivity, h\u2083, \u27e8x * y * z, by positivity, by nlinarith\u27e9\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_26001_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c \u2264 5) (h : 0 \u2264 a * b * c) : a ^ 2 + b ^ 2 + c ^ 2 + 3 * (a * b * c) \u2265 2 * a * b * c + Real.sqrt (a * b * c) * (a + b + c):= by", "target": "\n  have h\u2080 : 0 \u2264 a * b * c := by positivity\n  have h\u2081 : 0 \u2264 Real.sqrt (a * b * c) := Real.sqrt_nonneg _\n  nlinarith [sq_sqrt (show 0 \u2264 a * b * c from h\u2080), mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a),\n    mul_self_nonneg (Real.sqrt (a * b * c) - a), mul_self_nonneg (Real.sqrt (a * b * c) - b), mul_self_nonneg (Real.sqrt (a * b * c) - c)]\n  <;> assumption\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_82483_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) : \u2203 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 \u221a(2 * a / (b + c)) + \u221a(2 * b / (c + a)) + \u221a(2 * c / (a + b)) \u2264 \u221a(3 * (a / b + b / c + c / a)) \u2227 3 * (a + b + c) * (1 / a + 1 / b + 1 / c) \u2265 3 * (a + b + c) * (1 / a + 1 / b + 1 / c):= by", "target": "\n  refine' \u27e81, 1, 1, by norm_num, by norm_num, by norm_num, _, _\u27e9 <;> norm_num <;>\n    apply le_of_pow_le_pow_left two_ne_zero (by positivity) <;>\n    ring_nf <;>\n    apply le_of_sub_nonneg <;>\n    field_simp <;>\n    ring_nf <;>\n    positivity"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_35629_plus (x y : \u211d) (hx : x \u2265 1) (hy : y \u2265 1) : (x + 1) * (y + 1) \u2264 2 * (x * y + 1) \u2228 \u2203 x y : \u211d, x \u2265 1 \u2227 y \u2265 1 \u2227 (x + 1) * (y + 1) > 2 * (x * y + 1):= by", "target": "\n  by_cases h : (x + 1) * (y + 1) \u2264 2 * (x * y + 1)\n  \u00b7 left\n    linarith\n  \u00b7 right\n    exact \u27e8x, y, hx, hy, by linarith\u27e9\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_9617 (a b c : \u211d) (ha : a \u2260 0) (hb : b \u2260 0) (hc : c \u2260 0) : (a^2 / b + b^2 / c + c^2 / a) \u2265 (a + b + c) * (a^2 + b^2 + c^2) / (a * b + b * c + a * c) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_9617_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b + b * c + c * a = 1) : a ^ 2 / b + b ^ 2 / c + c ^ 2 / a \u2265 (a + b + c) * (a ^ 2 + b ^ 2 + c ^ 2) / (a * b + b * c + a * c) \u2228 a * b + b * c + c * a = 0 \u2228 0 \u2264 a * b \u2227 0 \u2264 b * c \u2227 0 \u2264 c * a:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_55848 (x y z : \u211d) (h\u2081 : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z \u2227 x + y + z \u2264 1 \u2227 x * y + y * z + z * x \u2264 1 \u2227 x * y * z \u2264 1) : (x^2 + y^2 + z^2) * (x * y + y * z + z * x) \u2264 (x * y + y * z + z * x) + 3 * (x * y * z):= by", "target": "\n  have h\u2082 : 0 \u2264 x * y := by nlinarith\n  have h\u2083 : 0 \u2264 y * z := by nlinarith\n  have h\u2084 : 0 \u2264 z * x := by nlinarith\n  have h\u2085 : 0 \u2264 x * y * z := by nlinarith\n  have h\u2086 : x * y + y * z + z * x \u2264 1 := by nlinarith\n  have h\u2087 : x * y * z \u2264 1 := by nlinarith\n  have h\u2088 : (x^2 + y^2 + z^2) \u2264 1 := by nlinarith\n  have h\u2089 : (x^2 + y^2 + z^2) * (x * y + y * z + z * x) \u2264 (x * y + y * z + z * x) + 3 * (x * y * z) := by\n    nlinarith [mul_self_nonneg (x - y), mul_self_nonneg (y - z), mul_self_nonneg (z - x)]\n  exact h\u2089"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2006 (a b c d : \u211d) : 16 * (a * b * c + b * c * d + c * d * a + d * a * b) \u2264 (a + b + c + d) ^ 3 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2006_plus (a b c d : \u211d) (h\u2080 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 0 \u2264 d) (h\u2081 : a + b + c + d = 1) (h\u2082 : a * b + a * c + a * d + b * c + b * d + c * d \u2264 1) : 16 * (a * b * c + b * c * d + c * d * a + d * a * b) \u2264 (a + b + c + d) ^ 3 \u2227 (a * b * c + b * c * d + c * d * a + d * a * b) \u2264 1:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_78249_plus : 4 * Real.sin 10 * Real.sin (60 - 10) * Real.sin (60 + 10) \u2265 0 \u2228 4 * Real.sin 10 * Real.sin (60 - 10) * Real.sin (60 + 10) \u2264 0 \u2228 4 * Real.sin 10 * Real.sin (60 - 10) * Real.sin (60 + 10) = 0 \u2228 4 * Real.sin 10 * Real.sin (60 - 10) * Real.sin (60 + 10) = 0 \u2228 4 * Real.sin 10 * Real.sin (60 - 10) * Real.sin (60 + 10) = 0 \u2228 4 * Real.sin 10 * Real.sin (60 - 10) * Real.sin (60 + 10) = 0 \u2228 4 * Real.sin 10 * Real.sin (60 - 10) * Real.sin (60 + 10) = 0 \u2228 4 * Real.sin 10 * Real.sin (60 - 10) * Real.sin (60 + 10) = 0 \u2228 4 * Real.sin 10 * Real.sin (60 - 10) * Real.sin (60 + 10) = 0 \u2228 4 * Real.sin 10 * Real.sin (60 - 10) * Real.sin (60 + 10) = 0 := by", "target": "\n  by_contra h\n  push_neg at h\n  nlinarith [Real.sin_sq_add_cos_sq 10, Real.sin_sq_add_cos_sq (60 - 10), Real.sin_sq_add_cos_sq (60 + 10),\n    mul_self_nonneg (Real.sin 10 * Real.sin (60 - 10)), mul_self_nonneg (Real.sin 10 * Real.sin (60 + 10)),\n    mul_self_nonneg (Real.sin (60 - 10) * Real.sin (60 + 10))]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_31795_plus (a b c : \u211d) (habc : a + b + c = 1) (h : 0 < a \u2227 0 < b \u2227 0 < c) : (\u2203 (x y z : \u211d), 0 < x \u2227 0 < y \u2227 0 < z \u2227 x + y + z = 1 \u2227 (Real.sqrt (x ^ 2 + x * y * z) / (z + x * y) + Real.sqrt (y ^ 2 + x * y * z) / (x + y * z) + Real.sqrt (z ^ 2 + x * y * z) / (y + z * x)) \u2264 1 / (2 * Real.sqrt (x * y * z))):= by", "target": "\n  refine' \u27e81 / 3, 1 / 3, 1 / 3, by norm_num, by norm_num, by norm_num, by norm_num, _\u27e9\n  norm_num\n  <;>\n  apply le_of_pow_le_pow_left two_ne_zero\n  <;>\n  ring_nf\n  <;>\n  norm_num\n  <;>\n  linarith\n  <;>\n  linarith\n  <;>\n  linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_9480 (a b : \u211d) (ha : 0 < a) (hb : 0 < b) (hab : a^4 + b^4 \u2265 2) : a / (a + b^2) + b / (b^3 + a) < 13 / 10 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_9480_plus (a b : \u211d) (hab : 0 < a \u2227 0 < b) (h : 0 \u2264 a * b) : \u2203 a b : \u211d, 0 < a \u2227 0 < b \u2227 a * b \u2264 1 \u2227 a^4 + b^4 \u2265 2 \u2227 a / (a + b^2) + b / (b^3 + a) < 13 / 10 \u2228 a^4 + b^4 \u2265 2 \u2227 b / (b^3 + a) \u2264 3 / 4 \u2228 a^4 + b^4 \u2265 2 \u2227 a / (a + b^2) \u2264 3 / 4 \u2228 a^4 + b^4 \u2265 2 \u2227 a / (a + b^2) \u2264 3 / 4 \u2227 b / (b^3 + a) \u2264 3 / 4 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_48273_plus (a b c : \u211d) (habc : a * b * c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0) : (2 / (a * b + a + 2) + 1 / (b * c + b + 2) + 1 / (c * a + c + 2)) \u2264 9 / 4 \u2228 (2 / (a * b + a + 2) + 1 / (b * c + b + 2) + 1 / (c * a + c + 2)) > 9 / 4 \u2227 (2 / (a * b + a + 2) + 1 / (b * c + b + 2) + 1 / (c * a + c + 2)) \u2264 5 / 2 - Real.sqrt 2 \u2228 (2 / (a * b + a + 2) + 1 / (b * c + b + 2) + 1 / (c * a + c + 2)) > 5 / 2 - Real.sqrt 2 := by", "target": "\n  by_contra! h'\n  nlinarith [mul_pos h.1 h.2.1, mul_pos h.2.1 h.2.2, mul_pos h.1 h.2.2,\n    Real.sqrt_nonneg 2, sq_sqrt (show 0 \u2264 2 by norm_num)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_531_plus (x y : \u211d) (h\u2081 : 0 < x \u2227 0 < y) (h\u2082 : x * y \u2264 1) : x * y * (x + y) ^ 2 \u2264 (x ^ 2 + y ^ 2) * (x + y):= by", "target": "\n  nlinarith [sq_nonneg (x - y), mul_nonneg h\u2081.1.le h\u2081.2.le, mul_nonneg (sq_nonneg (x + y)) h\u2081.1.le,\n    mul_nonneg (sq_nonneg (x + y)) h\u2081.2.le, mul_nonneg (sq_nonneg x) h\u2081.2.le, mul_nonneg (sq_nonneg y) h\u2081.1.le]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_8604 (n : \u2115) : |(1:\u211d) - Real.log 2| < \u2211' k : \u2115, (1:\u211d) / (k * (n * k + 1)) \u2227 \u2211' k : \u2115, (1:\u211d) / (k * (n * k + 1)) < \u2211' k : \u2115, (1:\u211d) / (n * k ^ 2) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_8604_plus (n : \u2115) (hn : 1 < n) : (\u2211' k : \u2115, 1 / (n * k ^ 2) : \u211d) \u2264 1 \u2228 (\u2211' k : \u2115, 1 / (n * k ^ 2) : \u211d) > 1 \u2227 (\u2211' k : \u2115, 1 / (n * k ^ 2) : \u211d) \u2265 1:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2983 (a b c : \u211d) : abs a + abs b + abs c - a * b * c \u2264 4 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2983_plus (a b c : \u211d) (h\u2080 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2081 : a * b * c \u2264 1) (h\u2082 : a + b + c = 3) : abs a + abs b + abs c - a * b * c \u2264 4 \u2227 (abs a + abs b + abs c - a * b * c) ^ 2 \u2264 16:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_49006_plus (n : \u2115) (hn : \u2203 k, n < k) : \u2203 k, n < k \u2227 \u2200 l, n < l \u2192 k \u2264 l:= by", "target": "\n  obtain \u27e8k, hk\u27e9 := hn\n  refine' \u27e8n + 1, by linarith, fun l hl => by linarith\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_54815_plus (n r : \u2115) (hn : 0 < n) (hr : 0 < r) (h : n \u2264 3) : \u2211 k in Finset.range (n + 1), k ^ r \u2264 (n + 1) ^ (r + 1):= by", "target": "\n  have h\u2081 : \u2200 k \u2208 Finset.range (n + 1), k ^ r \u2264 (n + 1) ^ r := by\n    intro k hk\n    have h\u2082 : k \u2264 n + 1 := by\n      simp only [Finset.mem_range] at hk\n      linarith\n    exact Nat.pow_le_pow_of_le_left h\u2082 r\n  calc\n    \u2211 k in Finset.range (n + 1), k ^ r \u2264 \u2211 k in Finset.range (n + 1), (n + 1) ^ r := Finset.sum_le_sum h\u2081\n    _ = (n + 1) ^ r * (n + 1) := by simp [mul_comm]\n    _ = (n + 1) ^ (r + 1) := by rw [\u2190 pow_succ, add_comm]\n  <;> simp [h, hn, hr]\n  <;> linarith\n  <;> linarith\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_19324_plus (a b c : \u211d) (hab : 0 < a) (hb : 0 < b) (hc : 0 < c) : a * b * c * (a + b + c) \u2264 a^2 * b^2 + b^2 * c^2 + c^2 * a^2 \u2228 (a * b * c * (a + b + c) > 0 \u2227 a * b * c * (a + b + c) \u2264 a^2 * b^2 + b^2 * c^2 + c^2 * a^2):= by", "target": "\n  apply or_iff_not_imp_right.2\n  intro h\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_pos hab hb, mul_pos hb hc, mul_pos hc hab,\n    mul_self_nonneg (a * b + b * c + c * a), mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a),\n    mul_self_nonneg (c * a - a * b)]\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_6423 (f : \u211d \u2192 \u211d) (hf: \u2200 x \u2208 Set.Ioo 0 1, f x < x) : False := by\n<hard theorem>", "target": "\ntheorem leanworkbook_6423_plus (n : \u2115) (hn : 0 < n) : (\u2203 x \u2208 Set.Ioo 0 1, 1 / (1 - x ^ 2) \u2264 n) \u2228 (\u2200 x \u2208 Set.Ioo 0 1, 1 / (1 - x ^ 2) > n):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5027 (x y : \u211d) : (x^2 + y^2)^2 = (x^2 - y^2)^2 + (2 * x * y)^2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5027_plus (x y : \u211d) (h\u2081 : 0 < x \u2227 0 < y) (h\u2082 : x \u2260 y) : \u2203 a b : \u211d, a \u2260 0 \u2227 b \u2260 0 \u2227 a^2 + b^2 = 1 \u2227 (x^2 + y^2)^2 \u2265 (x^2 - y^2)^2 + (2 * x * y)^2 \u2228 (x^2 + y^2)^2 < (x^2 - y^2)^2 + (2 * x * y)^2 \u2227 \u2203 a b : \u211d, a \u2260 0 \u2227 b \u2260 0 \u2227 a^2 + b^2 = 1 \u2227 (x^2 + y^2)^2 \u2265 (x^2 - y^2)^2 + (2 * x * y)^2 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_19737_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : a * b * c = 1 \u2192 a * b \u2264 (a ^ 2 + b ^ 2) / 2 \u2227 a * c \u2264 (a ^ 2 + c ^ 2) / 2 \u2227 b * c \u2264 (b ^ 2 + c ^ 2) / 2 \u2228 (a * b \u2264 (a ^ 2 + b ^ 2) / 2 \u2228 a * c \u2264 (a ^ 2 + c ^ 2) / 2 \u2228 b * c \u2264 (b ^ 2 + c ^ 2) / 2) \u2227 a * b * c \u2264 1:= by", "target": "\n  intro h\n  refine' Or.inr \u27e8by\n    by_contra! h\u2081\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c), h\u2081], by\n    by_contra! h\u2082\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c), h\u2082]\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_1756_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hx1 : x + y + z = 1) (hxy : 0 < x * y) (hxz : 0 < x * z) (hyz : 0 < y * z) : (x + y + z) ^ 2 / (x * y + y * z + z * x) * (x * y * z) \u2264 (x + y + z) ^ 2:= by", "target": "\n  have h1 : 0 < x * y * z := by positivity\n  have h2 : 0 < x * y + y * z + z * x := by positivity\n  have h3 : 0 < (x * y + y * z + z * x) * (x * y * z) := by positivity\n  field_simp [h2.ne', h1.ne', h3.ne']\n  rw [div_le_iff]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_self_nonneg (x * y + y * z + z * x),\n    mul_self_nonneg (x * y - y * z), mul_self_nonneg (y * z - z * x), mul_self_nonneg (z * x - x * y)]\n  positivity"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_46040_plus (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n  (a^3 + b^3 + c^3) / (a * b * c) + (9 / 2) * ((a * b + b * c + c * a) / (a^2 + b^2 + c^2))^2 \u2265 15 / 2 \u2228\n  (a * b + b * c + c * a) / (a^2 + b^2 + c^2) \u2264 1:= by", "target": "\n  refine' or_iff_not_imp_right.2 fun h\u2081 => _\n  have : 0 < a * b := by positivity\n  have : 0 < b * c := by positivity\n  have : 0 < c * a := by positivity\n  have : 0 < a * b * c := by positivity\n  have : (a * b + b * c + c * a) / (a^2 + b^2 + c^2) \u2264 1 := by\n    rw [div_le_iff (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  linarith\n  <;> try norm_num\n  <;> linarith\n  <;> try norm_num\n  <;> linarith\n  <;> try norm_num\n  <;> linarith\n  <;> try norm_num\n  <;> linarith\n  <;> try norm_num\n  <;> linarith\n  <;> try norm_num\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_8868 (a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 3) : (a^2 + a + 1) * (b^2 + b + 1) * (c^2 + c + 1) \u2264 27 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_8868_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c \u2264 3) (h : a * b + b * c + c * a \u2264 3) : a ^ 2 * b ^ 2 * c ^ 2 * (a + b + c) ^ 2 \u2264 81:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_28858_plus (x : \u2115 \u2192 \u211d) (hx : x 1 = 1) (hn: \u2200 n, x (n + 1) = x n + 1 / x n) (h : \u2200 n, 0 < x n) : \u2203 f : \u211d \u2192 \u211d, \u2200 n, x n = f n \u2228 \u2203 y, x n = y * f n := by", "target": "\n  refine' \u27e8fun y => x 1, fun n => _\u27e9\n  have h1 := h 1\n  have h2 := h 0\n  simp_all"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_7285 (a b : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hab : a + b = 1) : a^4 + b^4 + (7 / 4) * Real.sqrt (a * b) \u2265 1 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_7285_plus (a b : \u211d) (hab : a + b = 1) (h : 0 \u2264 a * b) : a * b * (a + b) ^ 2 + (a * b) ^ 2 * (a + b) + (a * b) ^ 3 \u2264 1:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_10513_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : a * b + b * c + c * a \u2264 (a ^ 2 + b ^ 2 + c ^ 2) \u2228 (Real.sqrt (a ^ 2 + b ^ 2) \u2264 Real.sqrt (b ^ 2 + c ^ 2) + Real.sqrt (c ^ 2 + a ^ 2)) \u2228 (Real.sqrt (b ^ 2 + c ^ 2) \u2264 Real.sqrt (a ^ 2 + b ^ 2) + Real.sqrt (c ^ 2 + a ^ 2)) \u2228 (Real.sqrt (c ^ 2 + a ^ 2) \u2264 Real.sqrt (a ^ 2 + b ^ 2) + Real.sqrt (b ^ 2 + c ^ 2)) \u2228 (a * b + b * c + c * a \u2264 (a ^ 2 + b ^ 2 + c ^ 2)):= by", "target": "\n  by_cases h\u2081 : a * b + b * c + c * a \u2264 (a ^ 2 + b ^ 2 + c ^ 2) <;> simp_all\n  all_goals norm_num\n  all_goals\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      Real.sqrt_nonneg (a ^ 2 + b ^ 2), Real.sqrt_nonneg (b ^ 2 + c ^ 2),\n      Real.sqrt_nonneg (c ^ 2 + a ^ 2), Real.sqrt_nonneg (a ^ 2 + b ^ 2 + c ^ 2),\n      Real.sqrt_nonneg (b ^ 2 + c ^ 2 + a ^ 2), Real.sqrt_nonneg (c ^ 2 + a ^ 2 + b ^ 2)]\n  all_goals linarith\n  all_goals norm_num\n  all_goals\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      Real.sqrt_nonneg (a ^ 2 + b ^ 2), Real.sqrt_nonneg (b ^ 2 + c ^ 2),\n      Real.sqrt_nonneg (c ^ 2 + a ^ 2), Real.sqrt_nonneg (a ^ 2 + b ^ 2 + c ^ 2),\n      Real.sqrt_nonneg (b ^ 2 + c ^ 2 + a ^ 2), Real.sqrt_nonneg (c ^ 2 + a ^ 2 + b ^ 2)]\n  all_goals linarith\n  all_goals norm_num\n  all_goals\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      Real.sqrt_nonneg (a ^ 2 + b ^ 2), Real.sqrt_nonneg (b ^ 2 + c ^ 2),\n      Real.sqrt_nonneg (c ^ 2 + a ^ 2), Real.sqrt_nonneg (a ^ 2 + b ^ 2 + c ^ 2),\n      Real.sqrt_nonneg (b ^ 2 + c ^ 2 + a ^ 2), Real.sqrt_nonneg (c ^ 2 + a ^ 2 + b ^ 2)]\n  all_goals linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_44051_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 1) (h\u2081 : 0 \u2264 a * b) (h\u2082 : 0 \u2264 a * c) (h\u2083 : 0 \u2264 b * c) : 1 / (a + b + c + 1) + 1 / (b + c + a + 1) + 1 / (c + a + b + 1) \u2264 9 / 4 \u2227 1 / (a * b + b * c + c * a + 1) \u2264 3:= by", "target": "\n  have h\u2084 : a + b + c + 1 = 2 := by linarith\n  have h\u2085 : b + c + a + 1 = 2 := by linarith\n  have h\u2086 : c + a + b + 1 = 2 := by linarith\n  have h\u2087 : 1 / (a + b + c + 1) = 1 / 2 := by rw [h\u2084]\n  have h\u2088 : 1 / (b + c + a + 1) = 1 / 2 := by rw [h\u2085]\n  have h\u2089 : 1 / (c + a + b + 1) = 1 / 2 := by rw [h\u2086]\n  have h\u2081\u2080 : 1 / (a * b + b * c + c * a + 1) \u2264 3 := by\n    rw [div_le_iff (show (0 : \u211d) < a * b + b * c + c * a + 1 by nlinarith)]\n    nlinarith\n  exact \u27e8by linarith, h\u2081\u2080\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_28455_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a + b + c = 1)  (h\u2083 : 0 \u2264 a * b)  (h\u2084 : 0 \u2264 a * c)  (h\u2085 : 0 \u2264 b * c) : (1 - a * b) * (1 - a * c) * (1 - b * c) \u2265 (1 - a - b - c) ^ 2:= by", "target": "\n  have h\u2086 : (a + b + c) ^ 2 = 1 := by simp [h\u2082]\n  nlinarith [mul_nonneg h\u2083 h\u2084, mul_nonneg h\u2084 h\u2085, mul_nonneg h\u2083 h\u2085, sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c)]\n  <;> linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_27120_plus (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : a * b + b * c + c * a \u2264 (1 / 3) * (a ^ 2 + b ^ 2 + c ^ 2) + (Real.sqrt (2 * (a ^ 2 + b ^ 2 + c ^ 2))) * (Real.sqrt (3 * (a ^ 2 + b ^ 2 + c ^ 2))) \u2227 (Real.sqrt (2 * (a ^ 2 + b ^ 2 + c ^ 2))) * (Real.sqrt (3 * (a ^ 2 + b ^ 2 + c ^ 2))) \u2264 5 * (a ^ 2 + b ^ 2 + c ^ 2):= by", "target": "\n  have h\u2080 : 0 \u2264 a ^ 2 + b ^ 2 + c ^ 2 := by positivity\n  have h\u2081 : 0 \u2264 Real.sqrt (2 * (a ^ 2 + b ^ 2 + c ^ 2)) := by positivity\n  have h\u2082 : 0 \u2264 Real.sqrt (3 * (a ^ 2 + b ^ 2 + c ^ 2)) := by positivity\n  have h\u2083 : 0 \u2264 Real.sqrt (2 * (a ^ 2 + b ^ 2 + c ^ 2)) * Real.sqrt (3 * (a ^ 2 + b ^ 2 + c ^ 2)) := by positivity\n  constructor\n  \u00b7 nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      Real.sq_sqrt (show 0 \u2264 2 * (a ^ 2 + b ^ 2 + c ^ 2) by positivity),\n      Real.sq_sqrt (show 0 \u2264 3 * (a ^ 2 + b ^ 2 + c ^ 2) by positivity),\n      mul_self_nonneg (Real.sqrt (2 * (a ^ 2 + b ^ 2 + c ^ 2)) - Real.sqrt (3 * (a ^ 2 + b ^ 2 + c ^ 2)))]\n  \u00b7 nlinarith [sq_sqrt (show 0 \u2264 2 * (a ^ 2 + b ^ 2 + c ^ 2) by positivity),\n      sq_sqrt (show 0 \u2264 3 * (a ^ 2 + b ^ 2 + c ^ 2) by positivity),\n      mul_self_nonneg (Real.sqrt (2 * (a ^ 2 + b ^ 2 + c ^ 2)) - Real.sqrt (3 * (a ^ 2 + b ^ 2 + c ^ 2)))]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_18956_plus (a b c : \u211d) (habc : a * b * c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0) : a ^ 2 / (b ^ 2 + c ^ 2) + b ^ 2 / (a ^ 2 + c ^ 2) + c ^ 2 / (a ^ 2 + b ^ 2) \u2265 3 / 2 - Real.sqrt 37 / 3 \u2228  Real.sqrt 37 / 3 \u2265 3 / 2 - a ^ 2 / (b ^ 2 + c ^ 2) - b ^ 2 / (a ^ 2 + c ^ 2) - c ^ 2 / (a ^ 2 + b ^ 2):= by", "target": "\n  by_cases h\u2080 : a ^ 2 / (b ^ 2 + c ^ 2) + b ^ 2 / (a ^ 2 + c ^ 2) + c ^ 2 / (a ^ 2 + b ^ 2) \u2265 3 / 2 - Real.sqrt 37 / 3\n  \u00b7 left\n    exact h\u2080\n  \u00b7 right\n    have h\u2081 : Real.sqrt 37 / 3 \u2265 3 / 2 - a ^ 2 / (b ^ 2 + c ^ 2) - b ^ 2 / (a ^ 2 + c ^ 2) - c ^ 2 / (a ^ 2 + b ^ 2) := by\n      have h\u2082 : Real.sqrt 37 \u2265 0 := Real.sqrt_nonneg 37\n      have h\u2083 : Real.sqrt 37 / 3 \u2265 0 := by positivity\n      have h\u2084 : a ^ 2 / (b ^ 2 + c ^ 2) \u2265 0 := by\n        apply div_nonneg\n        \u00b7 nlinarith\n        \u00b7 nlinarith\n      have h\u2085 : b ^ 2 / (a ^ 2 + c ^ 2) \u2265 0 := by\n        apply div_nonneg\n        \u00b7 nlinarith\n        \u00b7 nlinarith\n      have h\u2086 : c ^ 2 / (a ^ 2 + b ^ 2) \u2265 0 := by\n        apply div_nonneg\n        \u00b7 nlinarith\n        \u00b7 nlinarith\n      nlinarith [sq_sqrt (show (0 : \u211d) \u2264 37 from by norm_num)]\n    exact h\u2081"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_7661_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \u2203 a b c : \u211d, a * b * c \u2264 x ^ 2 + y ^ 2 + z ^ 2 \u2227 0 \u2264 a ^ 2 + b ^ 2 + c ^ 2 \u2227 a * b + b * c + c * a \u2264 x * y + y * z + z * x \u2227 a * b * c * (x * y + y * z + z * x) \u2264 (x ^ 2 + y ^ 2 + z ^ 2) * (x * y + y * z + z * x):= by", "target": "\n  refine' \u27e80, 0, 0, _, _, _, _\u27e9 <;> norm_num <;> nlinarith [mul_nonneg hx.le hy.le, mul_nonneg hy.le hz.le, mul_nonneg hz.le hx.le]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_15280_plus (a : \u211d) (x y z : \u211d) (h\u2080 : 0 \u2264 a) (h\u2081 : 0 \u2264 x) (h\u2082 : 0 \u2264 y) (h\u2083 : 0 \u2264 z) (h\u2084 : a + x + y + z = 1) : (1 - a) * (1 - x) * (1 - y) * (1 - z) \u2265 (1 - a - x - y - z) ^ 2:= by", "target": "\n  have h\u2085 : 0 \u2264 a * x := by positivity\n  have h\u2086 : 0 \u2264 a * y := by positivity\n  have h\u2087 : 0 \u2264 a * z := by positivity\n  have h\u2088 : 0 \u2264 x * y := by positivity\n  have h\u2089 : 0 \u2264 x * z := by positivity\n  have h\u2081\u2080 : 0 \u2264 y * z := by positivity\n  have h\u2081\u2081 : 0 \u2264 a * x * y := by positivity\n  have h\u2081\u2082 : 0 \u2264 a * x * z := by positivity\n  have h\u2081\u2083 : 0 \u2264 a * y * z := by positivity\n  have h\u2081\u2084 : 0 \u2264 x * y * z := by positivity\n  have h\u2081\u2085 : 0 \u2264 a * x * y * z := by positivity\n  nlinarith\n  <;> linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_9346 (a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (habc : a * b * c = 1) : (a * (1 + c + a + a * b) + 2 * b * c) / (a + 2 * b) ^ 2 + (a ^ 2 + b ^ 2 + c ^ 2) / (a + b + c) \u2265 3 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_9346_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : a + b + c = 3) (h : 0 \u2264 a * b + b * c + c * a) : a ^ 2 / (b + c) ^ 2 + b ^ 2 / (c + a) ^ 2 + c ^ 2 / (a + b) ^ 2 \u2265 3 / 8 * (a + b + c) / 2 \u2227 a ^ 2 / (b + c) ^ 2 + b ^ 2 / (c + a) ^ 2 + c ^ 2 / (a + b) ^ 2 \u2265 3 / 8 * (a + b + c) / 2 \u2227 a ^ 2 / (b + c) ^ 2 + b ^ 2 / (c + a) ^ 2 + c ^ 2 / (a + b) ^ 2 \u2265 3 / 8 * (a + b + c) / 2 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_79147_plus (a b : \u211d) (hab : a + b = 2) (h : 0 < a \u2227 0 < b) : a^5 * b^5 * (a^5 + b^5 + a^5 * b^5) \u2264 3 \u2228 0 < a * b \u2227 a * b \u2264 1 \u2228 0 < a * b \u2227 a * b > 1:= by", "target": "\n  right\n  left\n  have h\u2080 : 0 < a * b := mul_pos h.1 h.2\n  have h\u2081 : a * b \u2264 1 := by\n    nlinarith [sq_nonneg (a - b), pow_two (a + b), pow_two (a - b),\n      pow_two (a + b - 2 * a * b), pow_two (a + b + 2 * a * b)]\n  exact \u27e8h\u2080, h\u2081\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2608 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 3) : (a * b ^ 3 + b * c ^ 3 + c * a ^ 3 + a * b * c) * (a * b + b * c + c * a) \u2264 16 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2608_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 3) (h\u2082 : a * b * c \u2264 1) : a ^ 2 * b ^ 2 * c ^ 2 * (a + b + c) \u2264 27:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_39610_plus (a b c d : \u211d) (h\u2081 : 0 \u2264 a) (h\u2082 : 0 \u2264 b) (h\u2083 : 0 \u2264 c) (h\u2084 : 0 \u2264 d) : Real.sqrt (a ^ 2 + a * b + b ^ 2) * Real.sqrt (c ^ 2 + c * d + d ^ 2) \u2265 Real.sqrt ((a * c - b * d) ^ 2)  := by", "target": "\n  have h\u2085 : Real.sqrt (a ^ 2 + a * b + b ^ 2) * Real.sqrt (c ^ 2 + c * d + d ^ 2) =\n      Real.sqrt ((a ^ 2 + a * b + b ^ 2) * (c ^ 2 + c * d + d ^ 2)) := by\n    rw [Real.sqrt_mul (by positivity)]\n  rw [h\u2085]\n  apply Real.sqrt_le_sqrt\n  nlinarith [sq_nonneg (a * d - b * c), sq_nonneg (a * c + b * d),\n    sq_nonneg (a * d + b * c), mul_nonneg h\u2081 h\u2083, mul_nonneg h\u2082 h\u2084,\n    mul_nonneg h\u2081 h\u2084, mul_nonneg h\u2082 h\u2083]\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_21013_plus (a : \u211d) (h\u2081 : 0 \u2264 a) (h\u2082 : a \u2264 1) : a \u2264 0.25 \u2194 a \u2264 25 / 100 \u2227 0 \u2264 a \u2227 a \u2264 1 := by", "target": "\n  constructor <;> intro h\n  exact \u27e8by norm_num at h \u22a2; linarith, by linarith, by linarith\u27e9\n  norm_num at h \u22a2\n  linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_7560 (f g : \u211d \u2192 \u211d) (hf : Continuous f) (hg : Continuous g) (h : \u2200 x : \u211a, f x = g x) : \u2200 x : \u211d, f x = g x := by\n<hard theorem>", "target": "\ntheorem leanworkbook_7560_plus (n : \u2115) (hn : 0 < n) : (\u2203 x : \u211d, 1 < x \u2227 \u2203 y : \u211d, 0 < y \u2227 (1 / x) ^ n \u2264 y) \u2194 (\u2203 x : \u211d, 1 < x \u2227 \u2203 y : \u211d, 0 < y \u2227 (1 / x) ^ n \u2264 y \u2227 y \u2264 2) \u2228 (\u2203 x : \u211d, 1 < x \u2227 \u2203 y : \u211d, 0 < y \u2227 (1 / x) ^ n \u2264 y \u2227 y > 2):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_46791_plus (x y : \u211d) (h\u2080 : 0 \u2264 x \u2227 0 \u2264 y) :  Real.sqrt (x ^ 2 + y ^ 2) \u2265 (x * y) / (x + y) \u2228 x + y = 0 \u2228 x * y = 0  := by", "target": "\n  by_cases h\u2081 : x + y = 0\n  \u00b7 right\n    left\n    exact h\u2081\n  left\n  have h\u2082 : 0 \u2264 x * y := mul_nonneg h\u2080.1 h\u2080.2\n  apply Real.le_sqrt_of_sq_le\n  apply le_of_sub_nonneg\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x + y), sq_nonneg (x * y)]\n  <;> positivity\n  <;> linarith\n  <;> positivity\n  <;> linarith\n  <;> positivity\n  <;> linarith\n  <;> positivity\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_48143_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) : a * b * c > 0 \u2227 (\u2203 x y z : \u211d, x > 0 \u2227 y > 0 \u2227 z > 0 \u2227 a / (2 * b + 1) + b / (2 * c + 1) + c / (2 * a + 1) + 1 / (a + b + c) \u2265 4 / 3):= by", "target": "\n  have h\u2080 : 0 < a * b := by positivity\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * a := by positivity\n  have h\u2083 : a * b * c > 0 := by positivity\n  have h\u2084 : \u2203 x y z : \u211d, x > 0 \u2227 y > 0 \u2227 z > 0 \u2227 a / (2 * b + 1) + b / (2 * c + 1) + c / (2 * a + 1) + 1 / (a + b + c) \u2265 4 / 3 := by\n    refine' \u27e81, 1, 1, by norm_num, by norm_num, by norm_num, _\u27e9\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    ring_nf\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      mul_self_nonneg (a - 1), mul_self_nonneg (b - 1), mul_self_nonneg (c - 1)]\n  exact \u27e8h\u2083, h\u2084\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4649 : \u2200 x : \u211d, x^2 < 2 \u2192 1 / (4 - x^2) \u2264 (x^4 + 5) / 18 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4649_plus : \u2200 x : \u211d, 0 \u2264 x \u2227 x \u2264 1 \u2192 \u2203 y : \u211d, y \u2264 1 \u2227 1 - x ^ 2 \u2264 (1 - y) ^ 2 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_24601_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a + b + c \u2264 1) (h\u2083 : a * b + b * c + c * a \u2264 1) : 1 / (a + b + 1) ^ 2 + 1 / (b + c + 1) ^ 2 + 1 / (c + a + 1) ^ 2 \u2265 9 / 16:= by", "target": "\n  rcases h\u2081 with \u27e8ha, hb, hc\u27e9\n  have h\u2084 : a * b + b * c + c * a \u2264 1 := h\u2083\n  have h\u2085 : a + b + c \u2264 1 := h\u2082\n  have h\u2086 : 0 \u2264 a := ha\n  have h\u2087 : 0 \u2264 b := hb\n  have h\u2088 : 0 \u2264 c := hc\n  have h\u2089 : 1 / (a + b + 1) ^ 2 \u2265 1 / 4 := by\n    rw [ge_iff_le]\n    rw [div_le_div_iff]\n    nlinarith\n    nlinarith\n    nlinarith\n  have h\u2081\u2080 : 1 / (b + c + 1) ^ 2 \u2265 1 / 4 := by\n    rw [ge_iff_le]\n    rw [div_le_div_iff]\n    nlinarith\n    nlinarith\n    nlinarith\n  have h\u2081\u2081 : 1 / (c + a + 1) ^ 2 \u2265 1 / 4 := by\n    rw [ge_iff_le]\n    rw [div_le_div_iff]\n    nlinarith\n    nlinarith\n    nlinarith\n  linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_48512_plus : \u2200 x : \u211d, 0 < x \u2227 x < Real.pi \u2192 cos x < 1 \u2228 cos x = 1 \u2228 cos x > 1 := by", "target": "\n  intro x hx\n  by_cases h : cos x = 1 <;> simp_all\n  <;>\n  by_cases h' : cos x < 1 <;> simp_all\n  <;>\n  by_cases h'' : cos x > 1 <;> simp_all\n  <;>\n  linarith [Real.cos_le_one x, Real.neg_one_le_cos x]\n  <;>\n  linarith [Real.cos_le_one x, Real.neg_one_le_cos x]\n  <;>\n  linarith [Real.cos_le_one x, Real.neg_one_le_cos x]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2692 (x : \u211d) : (1 + x) / Real.sqrt (1 + x + x ^ 2) \u2264 2 * Real.sqrt 3 / 3 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2692_plus (x : \u211d) (hx : 0 \u2264 x) : Real.sqrt (1 + x + x ^ 2) \u2265 1 + x / 2 \u2227 (1 + x) / Real.sqrt (1 + x + x ^ 2) \u2264 2 * Real.sqrt 3 / 3 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_58810_plus (a b c d : \u211d) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hd : 0 \u2264 d) (habc : a + b + c + d = 1) (h : \u2203 t : \u211d, a * Real.cos t + b * Real.sin t \u2264 1) : \u2203 t : \u211d, a * Real.cos t + b * Real.sin t \u2264 1 \u2228 \u2203 t : \u211d, a * Real.cos t + b * Real.sin t \u2265 0 \u2228 \u2203 t : \u211d, a * Real.cos t + b * Real.sin t \u2265 0 \u2228 \u2203 t : \u211d, a * Real.cos t + b * Real.sin t \u2265 0 := by", "target": "\n  rcases h with \u27e8t, ht\u27e9\n  exact \u27e8t, Or.inl ht\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_33706_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 3) (h\u2081 : a * b + b * c + c * a \u2264 3) : (2 + a ^ 2) * (2 + b ^ 2) * (2 + c ^ 2) + a * b * c \u2265 28 * (1 / 3) * (a * b + b * c + c * a):= by", "target": "\n  have h\u2082 : 0 \u2264 a * b := by nlinarith\n  have h\u2083 : 0 \u2264 b * c := by nlinarith\n  have h\u2084 : 0 \u2264 c * a := by nlinarith\n  have h\u2085 : 0 \u2264 a * b * c := by nlinarith\n  have h\u2086 : (2 + a ^ 2) * (2 + b ^ 2) * (2 + c ^ 2) \u2265 28 * (1 / 3) * (a * b + b * c + c * a) - a * b * c := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      mul_self_nonneg (a * b - 1), mul_self_nonneg (b * c - 1), mul_self_nonneg (c * a - 1)]\n  nlinarith\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_74635_plus (n : \u2115) (hn : 0 < n) : (\u2203 k : \u211d, 0 < k \u2227 k \u2264 n \u2227 \u230ak\u230b \u2264 n \u2227 \u230ak\u230b > 0 \u2227 k \u2264 \u230ak\u230b + 1) := by", "target": "\n  use (1 : \u211d)\n  norm_num\n  linarith [Int.floor_le (1 : \u211d), Int.lt_floor_add_one (1 : \u211d)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4008 (a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (habc : a * b * c = Real.exp 3) : (a^2 / Real.sqrt (a^3 + 1) + b^2 / Real.sqrt (b^3 + 1) + c^2 / Real.sqrt (c^3 + 1)) > 81 / 17 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4008_plus (a b c : \u211d) (habc : a * b * c = Real.exp 3) : (\u2203 x y z : \u211d, x * y * z = Real.exp 3 \u2227 x > 0 \u2227 y > 0 \u2227 z > 0 \u2227 x * y > 1 \u2227 x * z > 1 \u2227 y * z > 1) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_4074_plus (a b c : \u211d) (hab : 0 \u2264 a) (hbc : 0 \u2264 b) (hca : 0 \u2264 c) (habc : a * b + b * c + c * a = 3) : Real.sqrt (a ^ 2 + 1) * Real.sqrt (b ^ 2 + 1) * Real.sqrt (c ^ 2 + 1) \u2265 (Real.sqrt (a * b + 1) * Real.sqrt (b * c + 1) * Real.sqrt (c * a + 1)) * (2 / 3)  := by", "target": "\n  have : Real.sqrt (a ^ 2 + 1) * Real.sqrt (b ^ 2 + 1) * Real.sqrt (c ^ 2 + 1) = Real.sqrt ((a ^ 2 + 1) * (b ^ 2 + 1) * (c ^ 2 + 1)) := by\n    rw [Real.sqrt_mul, Real.sqrt_mul]\n    all_goals positivity\n  rw [this]\n  have : Real.sqrt (a * b + 1) * Real.sqrt (b * c + 1) * Real.sqrt (c * a + 1) = Real.sqrt ((a * b + 1) * (b * c + 1) * (c * a + 1)) := by\n    rw [Real.sqrt_mul, Real.sqrt_mul]\n    all_goals positivity\n  rw [this]\n  apply Real.le_sqrt_of_sq_le\n  refine' le_of_sub_nonneg _\n  have h\u2080 : 0 \u2264 a * b := by positivity\n  have h\u2081 : 0 \u2264 b * c := by positivity\n  have h\u2082 : 0 \u2264 c * a := by positivity\n  have h\u2083 : 0 \u2264 a * b * c := by positivity\n  nlinarith [sq_sqrt (show 0 \u2264 (a * b + 1) * (b * c + 1) * (c * a + 1) from by positivity),\n    sq_sqrt (show 0 \u2264 (a ^ 2 + 1) * (b ^ 2 + 1) * (c ^ 2 + 1) from by positivity),\n    sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3975 (a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) (hab : a * b * c * d = 1) : a^2 / (a^2 + b * c) + b^2 / (b^2 + c * d) + c^2 / (c^2 + d * a) + d^2 / (d^2 + a * b) \u2265 1 + 2 * (a * b * c * d) ^ (1 / 4) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3975_plus (a b c d : \u211d) (hab : 0 < a) (hbc : 0 < b) (hcd : 0 < c) (hda : 0 < d) (habc : a * b * c * d = 1) : Real.sqrt (a ^ 2 + b ^ 2) * Real.sqrt (b ^ 2 + c ^ 2) * Real.sqrt (c ^ 2 + d ^ 2) * Real.sqrt (d ^ 2 + a ^ 2) \u2265 a * b * c * d:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_10848_plus  (f : \u211d \u2192 \u211d) (hf: \u2200 x, f x \u2265 0) (h : \u2200 x y, f (x^2 - 2 * y * f x) + f (y^2) = (f (x - y))^2) : \u2200 x, f x = 0 \u2228 \u2203 y, f y > 0 \u2227 y \u2264 x:= by", "target": "\n  intro x\n  have h\u2081 := h x 0\n  simp at h\u2081\n  have h\u2082 := h 0 0\n  simp at h\u2082\n  have h\u2083 := h 0 x\n  simp at h\u2083\n  have h\u2084 := h x x\n  simp at h\u2084\n  by_cases h\u2085 : f x = 0\n  exact Or.inl h\u2085\n  right\n  use x\n  constructor\n  exact lt_of_le_of_ne (hf x) (Ne.symm h\u2085)\n  linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_48966_plus : \u2200 a b : \u211d, \u2203 f : \u2115 \u2192 \u211d, \u2211 k in Finset.range 3, f k * (a + b) ^ k \u2265 \u2211 k in Finset.range 3, f k * a ^ k * b ^ (3 - k) \u2228 \u2211 k in Finset.range 3, f k * (a + b) ^ k < \u2211 k in Finset.range 3, f k * a ^ k * b ^ (3 - k)  := by", "target": "\n  intro a b\n  use fun k => 0\n  simp [Finset.sum_range_succ]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_35733_plus (a b c : \u211d) (s : \u211d) (rA : \u211d) (rB : \u211d) (rC : \u211d) (h\u2081 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2082 : 0 < s) (h\u2083 : 0 < rA \u2227 0 < rB \u2227 0 < rC) (h\u2084 : rA * rB * rC = s * (s - a) * (s - b) * (s - c)) : s * (s - a) * (s - b) * (s - c) \u2265 rA * rB * rC \u2227 rA * rB * rC \u2265 s * (s - a) * (s - b) * (s - c) \u2227 (s * (s - a) * (s - b) * (s - c) \u2265 0 \u2228 s * (s - a) * (s - b) * (s - c) \u2264 0):= by", "target": "\n  have h\u2085 : s * (s - a) * (s - b) * (s - c) \u2265 rA * rB * rC := by\n    nlinarith\n  have h\u2086 : rA * rB * rC \u2265 s * (s - a) * (s - b) * (s - c) := by\n    nlinarith\n  have h\u2087 : s * (s - a) * (s - b) * (s - c) \u2265 0 \u2228 s * (s - a) * (s - b) * (s - c) \u2264 0 := by\n    by_contra h\n    push_neg at h\n    nlinarith\n  exact \u27e8h\u2085, h\u2086, h\u2087\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_4444_plus (x : \u2115) (hx : 3 \u2264 x) : (x ^ 2 - 1) ^ (x - 1) \u2265 (x - 1) ^ (x - 1) \u2228 (x ^ 2 - 1) ^ (x - 1) \u2264 1:= by", "target": "\n  have h : (x ^ 2 - 1) ^ (x - 1) \u2265 (x - 1) ^ (x - 1) \u2228 (x ^ 2 - 1) ^ (x - 1) \u2264 1 := by\n    by_cases h\u2080 : (x ^ 2 - 1) ^ (x - 1) \u2264 1\n    \u00b7 right\n      exact h\u2080\n    \u00b7 left\n      have h\u2081 : (x ^ 2 - 1) ^ (x - 1) \u2265 (x - 1) ^ (x - 1) := by\n        have h\u2082 : x ^ 2 - 1 \u2265 x - 1 := by\n          cases x with\n          | zero => omega\n          | succ x' =>\n            cases x' with\n            | zero => omega\n            | succ x'' =>\n              simp_all [Nat.succ_eq_add_one, Nat.mul_succ]\n              ring_nf\n              omega\n        exact Nat.pow_le_pow_of_le_left h\u2082 (x - 1)\n      exact h\u2081\n  exact h"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_5111_plus (A : Fin 5 \u2192 \u211d) (h\u2081 : \u2200 i, abs (A i) \u2264 3) (h\u2082 : \u2211 i, A i = 0) (h\u2083 : \u2211 i, A i ^ 2 = 9) : \u2211 i, abs (A i) \u2264 15 := by", "target": "\n  have h\u2084 : \u2200 i, abs (A i) \u2264 3 := h\u2081\n  have h\u2085 : \u2211 i, abs (A i) \u2264 15 := by\n    calc\n      (\u2211 i, abs (A i)) \u2264 \u2211 i : Fin 5, 3 := by\n        exact Finset.sum_le_sum fun i _ => h\u2084 i\n      _ = 5 * 3 := by\n        simp [Finset.sum_const]\n      _ = 15 := by norm_num\n  exact h\u2085"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_41396_plus (n : \u2115) (hn : 1 < n) : 1 / ((n:\u211d) + 1) \u2264 Real.log (1 + 1 / n) \u2228 Real.log (1 + 1 / n) \u2264 1 / n := by", "target": "\n  apply or_iff_not_imp_right.2\n  intro h\n  have : 0 < (n : \u211d) := by positivity\n  have : 0 < (n : \u211d) + 1 := by positivity\n  have : 0 < 1 + 1 / (n : \u211d) := by positivity\n  have : 0 < Real.log (1 + 1 / (n : \u211d)) := Real.log_pos (by\n    rw [\u2190 sub_pos]\n    field_simp\n    nlinarith)\n  linarith [Real.log_le_sub_one_of_pos (show 0 < (1 + 1 / (n : \u211d)) by positivity)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_9300_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) : Real.sqrt (a^2 + 1) * Real.sqrt (b^2 + 1) * Real.sqrt (c^2 + 1) \u2265 (Real.sqrt (a * b) + Real.sqrt (b * c) + Real.sqrt (c * a) ) - (a + b + c):= by", "target": "\n  have h\u2080 : Real.sqrt (a^2 + 1) * Real.sqrt (b^2 + 1) * Real.sqrt (c^2 + 1) \u2265 0 := by positivity\n  have h\u2081 : Real.sqrt (a * b) \u2264 (a + b) / 2 := by\n    nlinarith [sq_sqrt (mul_nonneg hab.le hbc.le), sq_nonneg (a - b)]\n  have h\u2082 : Real.sqrt (b * c) \u2264 (b + c) / 2 := by\n    nlinarith [sq_sqrt (mul_nonneg hbc.le hca.le), sq_nonneg (b - c)]\n  have h\u2083 : Real.sqrt (c * a) \u2264 (c + a) / 2 := by\n    nlinarith [sq_sqrt (mul_nonneg hca.le hab.le), sq_nonneg (c - a)]\n  nlinarith [sq_sqrt (add_nonneg (sq_nonneg a) zero_le_one),\n    sq_sqrt (add_nonneg (sq_nonneg b) zero_le_one),\n    sq_sqrt (add_nonneg (sq_nonneg c) zero_le_one)]\n  <;> linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_7780_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) : (x + y) ^ 4 + (y + z) ^ 4 + (z + x) ^ 4 \u2265 (4 / 7) * (x ^ 4 + y ^ 4 + z ^ 4) + (1 / 49) * (x * y + y * z + z * x) ^ 2 \u2227 0 \u2264 (x - y) ^ 2 * (y - z) ^ 2 * (z - x) ^ 2:= by", "target": "\n  constructor\n  nlinarith [sq_nonneg ((x + y) ^ 2 - (y + z) ^ 2), sq_nonneg ((y + z) ^ 2 - (z + x) ^ 2), sq_nonneg ((z + x) ^ 2 - (x + y) ^ 2),\n    mul_nonneg hx hy, mul_nonneg hy hz, mul_nonneg hz hx,\n    sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_nonneg (sq_nonneg (x + y)) hz, mul_nonneg (sq_nonneg (y + z)) hx, mul_nonneg (sq_nonneg (z + x)) hy,\n    mul_nonneg (sq_nonneg (x - y)) hz, mul_nonneg (sq_nonneg (y - z)) hx, mul_nonneg (sq_nonneg (z - x)) hy]\n  positivity"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4139 (a b c : \u211d) (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2081 : a \u2260 b) (h\u2082 : b \u2260 c) (h\u2083 : c \u2260 a) : 10 / 9 * (a / b + b / c + c / a)^2 \u2265 3 * (a + b + c) * (1 / a + 1 / b + 1 / c) - 17 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4139_plus (a b c : \u211d) (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2081 : a \u2260 b) (h\u2082 : b \u2260 c) (h\u2083 : c \u2260 a) : Real.sqrt (a ^ 2 + 1) * Real.sqrt (b ^ 2 + 1) * Real.sqrt (c ^ 2 + 1) \u2265 (a * b + b * c + c * a) / (a + b + c) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5088 (a b c : \u211d) : a / (a^4 + a^2 + 1) + b / (b^4 + b^2 + 1) + c / (c^4 + c^2 + 1) \u2264 (a^2 + b^2 + c^2) / (3 * a * b * c) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5088_plus (a b c : \u211d) (habc : a * b * c \u2264 1) : a / (a^4 + a^2 + 1) + b / (b^4 + b^2 + 1) + c / (c^4 + c^2 + 1) \u2264 3 / 2:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_28038_plus : \u2200 x : \u211d, 3 * x ^ 2 / (x ^ 6 + 1) \u2265 0 \u2228 \u2203 a : \u211d, 3 * x ^ 2 / (x ^ 6 + 1) < a \u2227 a \u2264 1 := by", "target": "\n  intro x\n  apply or_iff_not_imp_right.2\n  intro h\n  apply div_nonneg\n  nlinarith [sq_nonneg (x ^ 3)]\n  nlinarith [sq_nonneg (x ^ 2), sq_nonneg (x ^ 3)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_60058_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 1) (h\u2081 : 0 \u2264 a * b) (h\u2082 : 0 \u2264 a * c) (h\u2083 : 0 \u2264 b * c) :  (a * b) ^ 2 / (a + b) ^ 2 + (a * c) ^ 2 / (a + c) ^ 2 + (b * c) ^ 2 / (b + c) ^ 2 \u2265 0 \u2227 (a * b) ^ 2 / (a + b) ^ 2 + (a * c) ^ 2 / (a + c) ^ 2 + (b * c) ^ 2 / (b + c) ^ 2 \u2264 3 / 4:= by", "target": "\n  constructor\n  exact by positivity\n  have h\u2084 : a ^ 2 + b ^ 2 + c ^ 2 \u2264 1 := by\n    nlinarith [sq_nonneg (a + b + c), h]\n  have h\u2085 : (a * b) ^ 2 / (a + b) ^ 2 \u2264 (a ^ 2 + b ^ 2) / 4 := by\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (a - b), sq_nonneg (a + b)]\n  have h\u2086 : (a * c) ^ 2 / (a + c) ^ 2 \u2264 (a ^ 2 + c ^ 2) / 4 := by\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (a - c), sq_nonneg (a + c)]\n  have h\u2087 : (b * c) ^ 2 / (b + c) ^ 2 \u2264 (b ^ 2 + c ^ 2) / 4 := by\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (b - c), sq_nonneg (b + c)]\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_29089_plus (x y : \u2124) : 3 * x ^ 2 + 7 * x * y - 6 * y ^ 2 = (3 * x - 2 * y) * (x + 3 * y) \u2228 \u2203 a b : \u2124, a * b \u2264 0 \u2227 3 * x ^ 2 + 7 * x * y - 6 * y ^ 2 = a * b := by", "target": "\n  apply Or.inl\n  ring_nf"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_44705_plus (f : \u2115 \u2192 \u2115) (hf : \u2200 n, n > 10000 \u2192 f n = n - 10) (hg : \u2200 n, n \u2264 10000 \u2192 f n = f (f (n + 11))) : \u2203 n, f n \u2264 10000 \u2227 f n > 10000 \u2228 f n \u2264 10000 \u2227 f (f n) \u2264 10000 := by", "target": "\n  use 10001\n  have h\u2081 := hf 10001\n  have h\u2082 := hg 10000\n  have h\u2083 := hf 10000\n  have h\u2084 := hg 9999\n  have h\u2085 := hf 9999\n  norm_num at *\n  <;> simp_all\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_30499_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) : \u2203 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2227 1 / Real.sqrt (1 + a) + 1 / Real.sqrt (1 + b) + 1 / Real.sqrt (1 + c) \u2264 3 / Real.sqrt 2 \u2227 \u2200 a' b' c' : \u211d, a' > 0 \u2227 b' > 0 \u2227 c' > 0 \u2227 a' * b' * c' = 1 \u2192 1 / Real.sqrt (1 + a') + 1 / Real.sqrt (1 + b') + 1 / Real.sqrt (1 + c') \u2264 3 / Real.sqrt 2 \u2192 a' * b' * c' \u2264 a * b * c:= by", "target": "\n  refine' \u27e81, 1, 1, by norm_num, by norm_num, by norm_num, by norm_num, _, fun a' b' c' h\u2080 h\u2081 => by simp_all\u27e9\n  norm_num\n  <;> apply le_of_pow_le_pow_left two_ne_zero (by positivity)\n  <;> field_simp\n  <;> ring_nf\n  <;> norm_num\n  <;> apply le_of_sub_nonneg\n  <;> field_simp\n  <;> ring_nf\n  <;> norm_num\n  <;> positivity"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_11988_plus (n : \u2115) (hn : 1 < n) : \u2211 k in Finset.Icc 1 n, Nat.floor (k/2) \u2264 n * (n + 1) / 3 := by", "target": "\n  cases n with\n  | zero => contradiction\n  | succ n =>\n    clear hn\n    induction' n with n ih\n    all_goals simp_all [Finset.sum_Icc_succ_top, Nat.succ_mul, Nat.mul_succ, Nat.div_eq_of_lt, Nat.lt_succ_self]\n    all_goals\n      ring_nf at *\n      omega"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_48830_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) :   x ^ 2 * y ^ 2 * z ^ 2 * (x + y + z) ^ 2 \u2264 (x ^ 2 + y ^ 2 + z ^ 2) ^ 2 * (y ^ 2 * z ^ 2 + x ^ 2 * z ^ 2 + x ^ 2 * y ^ 2):= by", "target": "\n  have h1 : 0 \u2264 x ^ 2 * y ^ 2 * z ^ 2 := by positivity\n  have h2 : 0 \u2264 x ^ 2 * z ^ 2 := by positivity\n  have h3 : 0 \u2264 y ^ 2 * z ^ 2 := by positivity\n  have h4 : 0 \u2264 x ^ 2 * y ^ 2 := by positivity\n  have h5 : 0 \u2264 x ^ 2 * z ^ 2 * y ^ 2 := by positivity\n  nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (x ^ 2 - z ^ 2), sq_nonneg (y ^ 2 - z ^ 2),\n    mul_self_nonneg (x * y - x * z), mul_self_nonneg (x * y + x * z),\n    mul_self_nonneg (y * z - x * y), mul_self_nonneg (y * z + x * y),\n    mul_self_nonneg (x * z - y * z), mul_self_nonneg (x * z + y * z)]\n  <;> linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3947 : \u2200 a b c : \u211d, (a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a + b + c >= 3 * (a * b * c) ^ (1/3)) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3947_plus : \u2200 a b c : \u211d, (a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 \u2203 x y z : \u211d, x + y + z = a + b + c \u2227 x * y * z \u2264 (x + y + z) ^ 3 / 27 \u2227 x * y * z \u2265 0) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_18462_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b + b * c + c * a = 0) : a ^ 2 / (b + c) + b ^ 2 / (a + c) + c ^ 2 / (a + b) \u2265 (3 * (a ^ 2 + b ^ 2 + c ^ 2)) / (2 * (a + b + c)) \u2228 (a = 0 \u2227 b = 0 \u2227 c = 0) \u2228 (a = 0 \u2228 b = 0 \u2228 c = 0):= by", "target": "\n  refine' or_iff_not_imp_right.mpr fun h => _\n  have h\u2081 : a * b = 0 := by\n    nlinarith\n  have h\u2082 : b * c = 0 := by\n    nlinarith\n  have h\u2083 : c * a = 0 := by\n    nlinarith\n  have h\u2084 : a = 0 \u2228 b = 0 \u2228 c = 0 := by\n    aesop\n  cases' h\u2084 with h\u2084 h\u2084\n  \u00b7 simp_all\n  \u00b7 cases' h\u2084 with h\u2084 h\u2084\n    \u00b7 simp_all\n    \u00b7 simp_all\n  <;> simp_all\n  <;> linarith\n  <;> linarith\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_24402_plus (n : \u2115) (hn : 0 < n) : (\u2203 k : \u2115, n \u2264 6 * k) \u2228 (\u2203 k : \u2115, 6 * k \u2264 n) := by", "target": "\n  by_cases h : 6 \u2223 n\n  case pos =>\n    right\n    exact \u27e8n / 6, by omega\u27e9\n  case neg =>\n    left\n    exact \u27e8n, by omega\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3071 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a / (b + c) + b / (c + a) + c / (a + b) + 1 / 2 \u2265 a / (b + c) + b / (c + a) + Real.sqrt (2 * c / (a + b)) \u2227 a / (b + c) + b / (c + a) + Real.sqrt (2 * c / (a + b)) >= 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3071_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) : \u2203 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a / (b + c) + b / (c + a) + c / (a + b) + 1 / 2 \u2265 a / (b + c) + b / (c + a) + Real.sqrt (2 * c / (a + b)) \u2227 a / (b + c) + b / (c + a) + Real.sqrt (2 * c / (a + b)) >= 2 \u2227 (\u2203 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2227 x + y + z = 1 \u2227 x * y + y * z + z * x \u2264 1 / 2):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_22219_plus (a b c : \u211d) (h\u2081 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2082 : a + b + c = 3) (h\u2083 : (a + b + c) ^ 2 = 3 * (a * b + b * c + c * a)) : a ^ 2 / (b * c) + b ^ 2 / (c * a) + c ^ 2 / (a * b) \u2265 3 \u2227 a ^ 2 / (b * c) + b ^ 2 / (c * a) + c ^ 2 / (a * b) \u2265 3 * (a * b + b * c + c * a) / (a * b + b * c + c * a):= by", "target": "\n  have : a = 1 \u2227 b = 1 \u2227 c = 1 := by\n    have : (a - 1) ^ 2 + (b - 1) ^ 2 + (c - 1) ^ 2 = 0 := by\n      nlinarith\n    constructor\n    \u00b7 nlinarith\n    \u00b7 constructor\n      \u00b7 nlinarith\n      \u00b7 nlinarith\n  simp_all only [sq, add_assoc]\n  norm_num\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_8598 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b * c = 1) (h : a^3 + b^3 + c^3 + a * b * c = 4) : a * b + b * c + c * a \u2264 2 + a * b * c \u2227 a^2 * b + b^2 * c + c^2 * a \u2264 2 + a * b * c \u2227 a^2 * b + b^2 * c + c^2 * a \u2264 3 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_8598_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b * c \u2264 1) (h : a ^ 2 + b ^ 2 + c ^ 2 = 1) : a * b * c * (a * b + b * c + c * a) \u2264 1 \u2227 a * b * c * (a ^ 2 * b + b ^ 2 * c + c ^ 2 * a) \u2264 1:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_51371_plus (a b : \u211d) (hab : a \u2260 b) : (a - b) ^ 2 > 0 \u2228 (a + b) ^ 2 / 4 > a * b \u2228 (a - b) ^ 2 > 0 \u2228 (a - b) ^ 2 > 0 \u2228 (a - b) ^ 2 > 0 \u2228 (a - b) ^ 2 > 0:= by", "target": "\n  have h : (a - b) ^ 2 > 0 := sq_pos_of_ne_zero (sub_ne_zero.2 hab)\n  exact Or.inl h"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_28201_plus (a b : \u2124) (h\u2081 : a^2 = b^2022 - b) : b \u2265 0 \u2228 b \u2264 0 \u2228 \u2203 c : \u2124, b = 2 * c \u2228 b = 2 * c + 1 := by", "target": "\n  by_contra! h\n  have h\u2082 := h\u2081\n  have h\u2083 := h\u2081\n  have h\u2084 : a^2 = b^2022 - b := h\u2081\n  have h\u2085 : a^2 \u2265 0 := by nlinarith\n  have h\u2086 : b^2022 - b \u2265 0 := by nlinarith\n  have h\u2087 : b^2022 \u2265 b := by nlinarith\n  have h\u2088 : b \u2264 0 \u2228 0 \u2264 b := by omega\n  cases' h\u2088 with h\u2088 h\u2088 <;> omega"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_17208_plus (n : \u2115) (h\u2081 : 1 < n) : (\u2203 x y : \u2124, x^2 - n*y^2 = 1 \u2227 0 < x \u2227 0 < y \u2227 1 < n) \u2194 \u2203 k : \u2124, k > 1 \u2227 \u2203 x y : \u2124, x^2 - n*y^2 = 1 \u2227 0 < x \u2227 0 < y \u2227 1 < n := by", "target": "\n  constructor\n  rintro \u27e8x, y, h, hx, hy, hn\u27e9\n  refine \u27e8x, by nlinarith, x, y, h, hx, hy, hn\u27e9\n  rintro \u27e8k, hk, x, y, h, hx, hy, hn\u27e9\n  exact \u27e8x, y, h, hx, hy, hn\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_42219_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (h : a + b + c = 1) : Real.sqrt (1 - a ^ 2 - b ^ 2 - c ^ 2) * (1 - (a * b + b * c + c * a)) \u2264 (1 - a * b - b * c - c * a):= by", "target": "\n  have h\u2080 : Real.sqrt (1 - a ^ 2 - b ^ 2 - c ^ 2) \u2264 1 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  have h\u2081 : 0 \u2264 1 - a * b - b * c - c * a := by\n    nlinarith\n  have h\u2082 : 0 \u2264 1 - a ^ 2 - b ^ 2 - c ^ 2 := by\n    nlinarith\n  have h\u2083 : Real.sqrt (1 - a ^ 2 - b ^ 2 - c ^ 2) * (1 - (a * b + b * c + c * a)) \u2264 1 - a * b - b * c - c * a := by\n    nlinarith\n  linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1499 (a b c d : \u211d) : (a^2 + b^2 + c^2 + d^2)^2 / (2 * (a * b + b * c + c * d + d * a) + 2 * (a * c + b * d)) \u2265 1 / 3 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1499_plus (a b c d : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 0 \u2264 d) (h\u2082 : a + b + c + d = 1) (h\u2083 : a * b + b * c + c * d + d * a \u2264 1) : (a * b) * (b * c) * (c * d) * (d * a) \u2264 (1 / 4) ^ 4 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5462 (x y z : \u211d) (hx : x \u2260 0) (hy : y \u2260 0) (hz : z \u2260 0) (hxy : x \u2260 y) (hxz : x \u2260 z) (hyz : y \u2260 z) : 3 \u2264 |x / (x - y - z) + y / (y - z - x) + z / (z - x - y)| := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5462_plus (x y z : \u211d) (hx : x \u2260 0) (hy : y \u2260 0) (hz : z \u2260 0) (hxy : x \u2260 y) (hxz : x \u2260 z) (hyz : y \u2260 z) : \u2203 (x y z : \u211d), x \u2260 0 \u2227 y \u2260 0 \u2227 z \u2260 0 \u2227 x \u2260 y \u2227 x \u2260 z \u2227 y \u2260 z \u2227 3 \u2264 |x / (x - y - z) + y / (y - z - x) + z / (z - x - y)| \u2228 3 \u2264 |x / (x - y - z) + y / (y - z - x) + z / (z - x - y)| := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_41208_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a + b + c = 1) : (1 - a ^ 2 - b ^ 2) ^ 2 + (1 - b ^ 2 - c ^ 2) ^ 2 + (1 - c ^ 2 - a ^ 2) ^ 2 + 4 * (a ^ 2 * b ^ 2 * c ^ 2) \u2265 4 * a * b * c * (1 - a * b - b * c - c * a):= by", "target": "\n  have h\u2083 : a ^ 2 + b ^ 2 + c ^ 2 \u2264 1 := by\n    nlinarith [sq_nonneg (a + b + c), h\u2082]\n  have h\u2084 : 0 \u2264 a * b := by\n    nlinarith\n  have h\u2085 : 0 \u2264 b * c := by\n    nlinarith\n  have h\u2086 : 0 \u2264 c * a := by\n    nlinarith\n  have h\u2087 : 0 \u2264 a * b * c := by\n    nlinarith\n  have h\u2088 : 0 \u2264 a * b * c * (a + b + c) := by\n    nlinarith\n  nlinarith [sq_nonneg (a * b), sq_nonneg (b * c), sq_nonneg (c * a)]\n  <;> assumption\n  <;> simp_all only [add_assoc, add_left_comm, add_comm]\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_7404_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a * b + b * c + c * a = 3) : Real.sqrt (a ^ 2 + 3) + Real.sqrt (b ^ 2 + 3) + Real.sqrt (c ^ 2 + 3) \u2265 3:= by", "target": "\n  have h\u2081 : Real.sqrt (a ^ 2 + 3) \u2265 a := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2082 : Real.sqrt (b ^ 2 + 3) \u2265 b := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2083 : Real.sqrt (c ^ 2 + 3) \u2265 c := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> simp [h\u2081, h\u2082, h\u2083]\n  <;> linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1307 {a b c : \u211d} : 8 * (a^2 * b^2 + b^2 * c^2 + c^2 * a^2) \u2265 a * (a + b) * (a + c) + b * (b + c) * (b + a) + c * (c + a) * (c + b) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1307_plus : \u2200 a b c : \u211d, \u2203 d : \u211d, d \u2265 0 \u2227 d \u2265 a * b + b * c + c * a \u2227 d \u2265 a ^ 2 + b ^ 2 + c ^ 2 - (a * b + b * c + c * a):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_34261_plus (a b c d : \u211d) (hab : 0 < a) (hbc : 0 < b) (hcd : 0 < c) (hda : 0 < d) (habc : a + b + c + d = 1) : Real.sqrt ((1 - a) * (1 - b) * (1 - c) * (1 - d)) \u2265 (1 - a - b - c - d):= by", "target": "\n  have h\u2080 : 0 \u2264 a * b := by positivity\n  have h\u2081 : 0 \u2264 c * d := by positivity\n  have h\u2082 : 0 \u2264 a * b * c := by positivity\n  have h\u2083 : 0 \u2264 a * b * d := by positivity\n  have h\u2084 : 0 \u2264 a * c * d := by positivity\n  have h\u2085 : 0 \u2264 b * c * d := by positivity\n  have h\u2086 : 0 \u2264 a * b * c * d := by positivity\n  have h\u2087 : 1 - a - b - c - d = 1 - (a + b + c + d) := by linarith\n  rw [h\u2087, habc]\n  apply Real.le_sqrt_of_sq_le\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_20962_plus (a b c d : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 0 \u2264 d) (h : a + b + c + d = 1) (h1 : 0 \u2264 a * b) (h2 : 0 \u2264 a * c) (h3 : 0 \u2264 a * d) (h4 : 0 \u2264 b * c) (h5 : 0 \u2264 b * d) (h6 : 0 \u2264 c * d) (h7 : 0 \u2264 a * b * c) (h8 : 0 \u2264 a * b * d) (h9 : 0 \u2264 a * c * d) (h10 : 0 \u2264 b * c * d) (h11 : 0 \u2264 a * b * c * d) : a ^ 2 * (a - b) ^ 2 * (a - c) ^ 2 * (a - d) ^ 2 + b ^ 2 * (b - a) ^ 2 * (b - c) ^ 2 * (b - d) ^ 2 + c ^ 2 * (c - a) ^ 2 * (c - b) ^ 2 * (c - d) ^ 2 + d ^ 2 * (d - a) ^ 2 * (d - b) ^ 2 * (d - c) ^ 2 \u2265 0 \u2227 a * b * (a + b) * (a * b - c * d) ^ 2 \u2265 0 \u2227 a * c * (a + c) * (a * c - b * d) ^ 2 \u2265 0 \u2227 a * d * (a + d) * (a * d - b * c) ^ 2 \u2265 0 \u2227 b * c * (b + c) * (b * c - a * d) ^ 2 \u2265 0 \u2227 b * d * (b + d) * (b * d - a * c) ^ 2 \u2265 0 \u2227 c * d * (c + d) * (c * d - a * b) ^ 2 \u2265 0 := by", "target": "\n  have h12 : a ^ 2 * (a - b) ^ 2 * (a - c) ^ 2 * (a - d) ^ 2 + b ^ 2 * (b - a) ^ 2 * (b - c) ^ 2 * (b - d) ^ 2 + c ^ 2 * (c - a) ^ 2 * (c - b) ^ 2 * (c - d) ^ 2 + d ^ 2 * (d - a) ^ 2 * (d - b) ^ 2 * (d - c) ^ 2 \u2265 0 := by positivity\n  have h13 : a * b * (a + b) * (a * b - c * d) ^ 2 \u2265 0 := by\n    refine' mul_nonneg (mul_nonneg (mul_nonneg (by linarith) (by linarith)) (by linarith)) (sq_nonneg _)\n  have h14 : a * c * (a + c) * (a * c - b * d) ^ 2 \u2265 0 := by\n    refine' mul_nonneg (mul_nonneg (mul_nonneg (by linarith) (by linarith)) (by linarith)) (sq_nonneg _)\n  have h15 : a * d * (a + d) * (a * d - b * c) ^ 2 \u2265 0 := by\n    refine' mul_nonneg (mul_nonneg (mul_nonneg (by linarith) (by linarith)) (by linarith)) (sq_nonneg _)\n  have h16 : b * c * (b + c) * (b * c - a * d) ^ 2 \u2265 0 := by\n    refine' mul_nonneg (mul_nonneg (mul_nonneg (by linarith) (by linarith)) (by linarith)) (sq_nonneg _)\n  have h17 : b * d * (b + d) * (b * d - a * c) ^ 2 \u2265 0 := by\n    refine' mul_nonneg (mul_nonneg (mul_nonneg (by linarith) (by linarith)) (by linarith)) (sq_nonneg _)\n  have h18 : c * d * (c + d) * (c * d - a * b) ^ 2 \u2265 0 := by\n    refine' mul_nonneg (mul_nonneg (mul_nonneg (by linarith) (by linarith)) (by linarith)) (sq_nonneg _)\n  exact \u27e8h12, h13, h14, h15, h16, h17, h18\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_54756_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : a * b * c = 1) (h : a + b + c = 3) : a ^ 2 + b ^ 2 + c ^ 2 + 5 * a * b * c * (3 / (a + b + c)) ^ (7 / 4) \u2265 8 \u2227 (\u2203 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a * b * c = 1 \u2227 a + b + c = 3):= by", "target": "\n  constructor\n  \u00b7 field_simp [h, hab, hbc, hca, habc]\n    ring_nf\n    nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  \u00b7 exact \u27e81, 1, 1, by norm_num, by norm_num, by norm_num, by norm_num, by norm_num\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_13170_plus : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c = 3 \u2192 (\u2203 x y z : \u211d, x > 0 \u2227 y > 0 \u2227 z > 0 \u2227 a^3 / (b^3 + 8) + b^3 / (c^3 + 8) + c^3 / (a^3 + 8) \u2265 (16:\u211d) / 9 - 13 / 27 * (x * y + y * z + z * x)):= by", "target": "\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  refine' \u27e83, 3, 3, by norm_num, by norm_num, by norm_num, _\u27e9\n  norm_num\n  have h\u2080 : a ^ 3 / (b ^ 3 + 8) \u2265 0 := by positivity\n  have h\u2081 : b ^ 3 / (c ^ 3 + 8) \u2265 0 := by positivity\n  have h\u2082 : c ^ 3 / (a ^ 3 + 8) \u2265 0 := by positivity\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_27720_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \u2203 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 1 / (2 * a + b + c) + 1 / (a + 2 * b + c) + 1 / (a + b + 2 * c) \u2264 1 \u2228 1 / (2 * a + b + c) + 1 / (a + 2 * b + c) + 1 / (a + b + 2 * c) > 1 \u2227 1 / (2 * x + y + z) + 1 / (x + 2 * y + z) + 1 / (x + y + 2 * z) \u2264 1  := by", "target": "\n  use 1, 1, 1\n  simp\n  norm_num\n  <;>\n  apply or_iff_not_imp_right.mpr\n  <;>\n  intro h\n  <;>\n  linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_21680_plus : \u2200 \u03b5 : \u211d, \u03b5 > 0 \u2192 \u2203 N : \u2115, \u2200 n : \u2115, n \u2265 N \u2192 (1 + 1 / n)^n \u2265 1 \u2227 (1 + 1 / n)^n \u2264 2 ^ n \u2227 (1 + 1 / n)^n \u2265 1 \u2227 (1 + 1 / n)^n \u2264 2 ^ n \u2227 (1 + 1 / n)^n \u2265 1 \u2227 (1 + 1 / n)^n \u2264 2 ^ n \u2227 (1 + 1 / n)^n \u2265 1 \u2227 (1 + 1 / n)^n \u2264 2 ^ n  := by", "target": "\n  intro \u03b5 h\u03b5\n  use 1\n  intro n hn\n  have h\u2081 : (1 + 1 / n) ^ n \u2265 1 := by\n    exact one_le_pow_of_one_le (by\n      rcases n with (_ | _ | n) <;>\n      simp_all [Nat.div_eq_of_lt]) n\n  have h\u2082 : (1 + 1 / n) ^ n \u2264 2 ^ n := by\n    exact\n      calc\n        (1 + 1 / n) ^ n \u2264 (1 +1) ^ n := by\n          gcongr\n          <;>\n          rcases n with (_ | _ | n) <;>\n          simp_all [Nat.div_eq_of_lt]\n        _ = 2 ^ n := by simp\n  exact \u27e8h\u2081, h\u2082, h\u2081, h\u2082, h\u2081, h\u2082, h\u2081, h\u2082\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_58928_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 3) (h' : a * b + b * c + c * a \u2264 3) : a ^ 3 + b ^ 3 + c ^ 3 + 3 * (a ^ 2 * b ^ 2 * c ^ 2) \u2265 a * b * c * (a + b + c):= by", "target": "\n  have : 0 \u2264 a * b := by nlinarith\n  have : 0 \u2264 b * c := by nlinarith\n  have : 0 \u2264 c * a := by nlinarith\n  have : 0 \u2264 a * b * c := by nlinarith\n  have : 0 \u2264 a * b * c * (a + b + c) := by nlinarith\n  have : 0 \u2264 a ^ 2 * b ^ 2 * c ^ 2 := by positivity\n  nlinarith [pow_two (a - b), pow_two (b - c), pow_two (c - a)]\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_6987_plus (x y z : \u211d) (h\u2080 : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z) (h\u2081 : x + y + z = 1) (h\u2082 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2083 : a + b + c = 1) (h\u2084 : Real.sqrt (x ^ 2 + y ^ 2) \u2264 1) (h\u2085 : Real.sqrt (y ^ 2 + z ^ 2) \u2264 1) (h\u2086 : Real.sqrt (z ^ 2 + x ^ 2) \u2264 1) : Real.sqrt ((1 - x) ^ 2 + (1 - y) ^ 2) + Real.sqrt ((1 - y) ^ 2 + (1 - z) ^ 2) + Real.sqrt ((1 - z) ^ 2 + (1 - x) ^ 2) \u2265 2 * Real.sqrt (1 - (x + y + z)) \u2227 Real.sqrt ((1 - x) ^ 2 + (1 - y) ^ 2) + Real.sqrt ((1 - y) ^ 2 + (1 - z) ^ 2) + Real.sqrt ((1 - z) ^ 2 + (1 - x) ^ 2) \u2265 2 * Real.sqrt (1 - (x + y + z)):= by", "target": "\n  constructor\n  all_goals\n    have h\u2087 : Real.sqrt (1 - (x + y + z)) = 0 := by simp [h\u2081]\n    have h\u2088 : Real.sqrt ((1 - x) ^ 2 + (1 - y) ^ 2) \u2265 0 := Real.sqrt_nonneg _\n    have h\u2089 : Real.sqrt ((1 - y) ^ 2 + (1 - z) ^ 2) \u2265 0 := Real.sqrt_nonneg _\n    have h\u2081\u2080 : Real.sqrt ((1 - z) ^ 2 + (1 - x) ^ 2) \u2265 0 := Real.sqrt_nonneg _\n    have h\u2081\u2081 : Real.sqrt ((1 - x) ^ 2 + (1 - y) ^ 2) + Real.sqrt ((1 - y) ^ 2 + (1 - z) ^ 2) + Real.sqrt ((1 - z) ^ 2 + (1 - x) ^ 2) \u2265 0 := by linarith\n    nlinarith [sq_sqrt (show 0 \u2264 (1 - x) ^ 2 + (1 - y) ^ 2 from by nlinarith),\n      sq_sqrt (show 0 \u2264 (1 - y) ^ 2 + (1 - z) ^ 2 from by nlinarith),\n      sq_sqrt (show 0 \u2264 (1 - z) ^ 2 + (1 - x) ^ 2 from by nlinarith)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_48470_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a + b + c \u2264 3) (h\u2083 : a * b + b * c + c * a \u2264 3) : a ^ 2 * b ^ 2 * c ^ 2 * (a + b + c) \u2264 (a * b + b * c + c * a) ^ 2 * (a + b + c) \u2227 (a * b + b * c + c * a) ^ 2 * (a + b + c) \u2264 9 * (a * b + b * c + c * a) * (a + b + c):= by", "target": "\n  have h\u2084 : 0 \u2264 a * b := by nlinarith\n  have h\u2085 : 0 \u2264 b * c := by nlinarith\n  have h\u2086 : 0 \u2264 c * a := by nlinarith\n  have h\u2087 : 0 \u2264 a * b * c := by nlinarith\n  have h\u2088 : 0 \u2264 a * b * c * (a + b + c) := by nlinarith\n  have h\u2089 : (a * b + b * c + c * a) ^ 2 * (a + b + c) \u2264 9 * (a * b + b * c + c * a) * (a + b + c) := by\n    have h\u2081\u2080 : (a * b + b * c + c * a) ^ 2 \u2264 9 * (a * b + b * c + c * a) := by\n      nlinarith [sq_nonneg (a * b + b * c + c * a), sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a),\n        sq_nonneg (c * a - a * b)]\n    nlinarith\n  have h\u2081\u2080 : a ^ 2 * b ^ 2 * c ^ 2 * (a + b + c) \u2264 (a * b + b * c + c * a) ^ 2 * (a + b + c) := by\n    have h\u2081\u2081 : a ^ 2 * b ^ 2 * c ^ 2 \u2264 (a * b + b * c + c * a) ^ 2 := by\n      nlinarith [sq_nonneg (a * b + b * c + c * a), sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a),\n        sq_nonneg (c * a - a * b)]\n    nlinarith\n  exact \u27e8h\u2081\u2080, h\u2089\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_14510_plus (a b c d : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 0 \u2264 d) (h\u2082 : a * b + c * d \u2264 a * d + b * c) : \u221a(a^2 + b^2) + \u221a(c^2 + d^2) \u2265 \u221a((a - c)^2 + (b - d)^2)  \u2228 (\u221a(a^2 + b^2) + \u221a(c^2 + d^2) < \u221a((a - c)^2 + (b - d)^2)) \u2227 (\u221a(a^2 + b^2) + \u221a(c^2 + d^2) + \u221a((a - c)^2 + (b - d)^2)) \u2265 \u221a((a - c)^2 + (b - d)^2):= by", "target": "\n  refine' or_iff_not_imp_right.mpr fun h => _\n  nlinarith [Real.sqrt_nonneg (a ^ 2 + b ^ 2), Real.sqrt_nonneg (c ^ 2 + d ^ 2),\n    Real.sqrt_nonneg ((a - c) ^ 2 + (b - d) ^ 2),\n    Real.sq_sqrt (show 0 \u2264 (a - c) ^ 2 + (b - d) ^ 2 from by nlinarith),\n    Real.sq_sqrt (show 0 \u2264 a ^ 2 + b ^ 2 from by nlinarith),\n    Real.sq_sqrt (show 0 \u2264 c ^ 2 + d ^ 2 from by nlinarith)]\n  <;> linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_6786 (a b c : \u211d) : 2 * (a ^ 3 + b ^ 3 + c ^ 3) \u2265 a * b * (a + b) + b * c * (b + c) + c * a * (c + a) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_6786_plus (a b c : \u211d) (h\u2081 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2082 : a + b + c = 3) (h\u2083 : a * b + b * c + c * a \u2264 3) : a ^ 3 + b ^ 3 + c ^ 3 \u2265 3 * a * b * c * (a + b + c) / (3 * (a + b + c)) \u2227 a ^ 2 + b ^ 2 + c ^ 2 \u2265 3 * a * b * c / 3:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_16374_plus : \u2200 n : \u2115, (n^2 + 4*n)^2 * (n^2 + 4*n + 3)^2 * (n^2 + 4*n + 4) \u2264 (n^2 + 4*n + 4)^2 * (n^2 + 4*n + 3)^2 * (n^2 + 4*n + 4):= by", "target": "\n  exact fun n => by\n    ring_nf\n    omega"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_7195 (n a b : \u2115) : (3 : \u211a) / n = 1 / (a * n) + 1 / b + 1 / (b * n) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_7195_plus (n a b : \u2115) (h\u2081 : 3 < n) (h\u2082 : 0 < a) (h\u2083 : 0 < b) : (3 : \u211a) / n \u2264 1 / (a * n) + 1 / b + 1 / (b * n) \u2228 1 / (a * n) + 1 / b + 1 / (b * n) \u2264 (3 : \u211a) / n := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_15683_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) : \u2203 a' b' c' : \u211d, (0 < a' \u2227 0 < b' \u2227 0 < c') \u2227 (Real.sqrt (a' / (b' + c')) + Real.sqrt (b' / (c' + a')) + Real.sqrt (c' / (a' + b')) \u2265 2 * Real.sqrt (1 + (a' * b' * c') / ((a' + b') * (b' + c') * (c' + a')))) \u2227 (a' * b' * c' > 0) \u2227 (a' + b' + c' > 0):= by", "target": "\n  refine \u27e81, 1, 1, \u27e8by norm_num, by norm_num, by norm_num\u27e9, ?_, by norm_num, by norm_num\u27e9\n  norm_num\n  <;> apply le_of_pow_le_pow_left two_ne_zero\n  <;> ring_nf\n  <;> norm_num\n  <;> apply le_of_sub_nonneg\n  <;> field_simp\n  <;> ring_nf\n  <;> norm_num\n  <;> positivity"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_17434_plus : \u2200 m : \u2115, \u2203 n : \u2115, n > m \u2227 (Nat.digits 10 ((3^n))).sum \u2265 (Nat.digits 10 ((3^(n+1)))).sum \u2228 (Nat.digits 10 ((3^n))).sum < (Nat.digits 10 ((3^(n+1)))).sum \u2227 (Nat.digits 10 ((3^n))).sum \u2265 (Nat.digits 10 ((3^n))).sum \u2228 (Nat.digits 10 ((3^n))).sum < (Nat.digits 10 ((3^(n+1)))).sum \u2227 (Nat.digits 10 ((3^n))).sum < (Nat.digits 10 ((3^n))).sum  := by", "target": "\n  intro m\n  use m + 1\n  simp [Nat.succ_eq_add_one, Nat.add_comm, Nat.add_left_comm]\n  <;> omega\n  <;> simp_all\n  <;> omega\n  <;> simp_all\n  <;> omega\n  <;> simp_all\n  <;> omega\n  <;> simp_all\n  <;> omega"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_11873_plus (a b c : \u211d) (hab : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) (h : a * b * c \u2264 1 / 9) : a ^ 2 / (1 - a ^ 2) + b ^ 2 / (1 - b ^ 2) + c ^ 2 / (1 - c ^ 2) \u2265 1 / 3:= by", "target": "\n  have h\u2081 : 0 < a * b := mul_pos hab hb\n  have h\u2082 : 0 < b * c := mul_pos hb hc\n  have h\u2083 : 0 < a * c := mul_pos hab hc\n  have h\u2084 : 0 < a * b * c := by positivity\n  have h\u2085 : a ^ 2 / (1 - a ^ 2) \u2265 a ^ 2 / 1 := by\n    apply div_le_div_of_le_left (by positivity) (by nlinarith)\n    nlinarith\n  have h\u2086 : b ^ 2 / (1 - b ^ 2) \u2265 b ^ 2 / 1 := by\n    apply div_le_div_of_le_left (by positivity) (by nlinarith)\n    nlinarith\n  have h\u2087 : c ^ 2 / (1 - c ^ 2) \u2265 c ^ 2 / 1 := by\n    apply div_le_div_of_le_left (by positivity) (by nlinarith)\n    nlinarith\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4058 (a b c : \u211d) (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2081 : 1 / a + 1 / b + 1 / c = 1) : 1 / 28 \u2265 1 / (a^2 * b * c + c) + 1 / (b^2 * c * a + a) + 1 / (c^2 * a * b + b) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4058_plus (a b c : \u211d) (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2081 : 1 / a + 1 / b + 1 / c = 1) : a * b * c \u2265 1 \u2227 1 / (a * b) + 1 / (b * c) + 1 / (c * a) \u2265 9 / (a * b * c):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2933 (a b c : \u211d) (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : a^3 + b^3 + c^3 + 9 * a * b * c \u2264 2 * (b * c * (b + c) + c * a * (c + a) + a * b * (a + b)) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2933_plus (a b c : \u211d) (hab : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 3) : a * b ^ 2 * c ^ 2 + b * c ^ 2 * a ^ 2 + c * a ^ 2 * b ^ 2 \u2264 3 * (a ^ 2 + b ^ 2 + c ^ 2):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_51344_plus (a b : \u211d) (hab : 0 < a \u2227 0 < b) : Real.sqrt (a ^ 2 + 1) * Real.sqrt (b ^ 2 + 1) \u2265 a * b \u2227 Real.sqrt (a ^ 2 + 1) * Real.sqrt (b ^ 2 + 1) \u2265 a * b * (1 - a * b):= by", "target": "\n  have h\u2080 : Real.sqrt (a ^ 2 + 1) * Real.sqrt (b ^ 2 + 1) \u2265 a * b := by\n    have h\u2081 : Real.sqrt (a ^ 2 + 1) * Real.sqrt (b ^ 2 + 1) = Real.sqrt ((a ^ 2 + 1) * (b ^ 2 + 1)) := by\n      rw [Real.sqrt_mul] <;> nlinarith\n    rw [h\u2081]\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (a * b), sq_nonneg (a - b), sq_nonneg (a * b - 1)]\n  have h\u2081 : Real.sqrt (a ^ 2 + 1) * Real.sqrt (b ^ 2 + 1) \u2265 a * b * (1 - a * b) := by\n    have h\u2082 : Real.sqrt (a ^ 2 + 1) * Real.sqrt (b ^ 2 + 1) = Real.sqrt ((a ^ 2 + 1) * (b ^ 2 + 1)) := by\n      rw [Real.sqrt_mul] <;> nlinarith\n    rw [h\u2082]\n    have h\u2083 : Real.sqrt ((a ^ 2 + 1) * (b ^ 2 + 1)) \u2265 a * b := by\n      apply Real.le_sqrt_of_sq_le\n      nlinarith [sq_nonneg (a * b), sq_nonneg (a - b), sq_nonneg (a * b - 1)]\n    nlinarith [sq_nonneg (a * b), sq_nonneg (a - b), sq_nonneg (a * b - 1)]\n  exact \u27e8h\u2080, h\u2081\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_6425 : \u2211 i in Finset.range 101, 3^i = 3^101 - 1 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_6425_plus : \u2211 i in Finset.range 101, 3^i \u2264 3^101 - 1 \u2228 \u2211 i in Finset.range 101, 3^i = 3^101 - 1 \u2228 \u2211 i in Finset.range 101, 3^i \u2265 3^101 - 1 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_44352_plus (x y : \u211d) (h\u2081 : 0 \u2264 x \u2227 0 \u2264 y) (h\u2082 : Real.sqrt x * Real.sqrt y = 0) : x \u2264 1 \u2228 y \u2264 1 := by", "target": "\n  cases' h\u2081 with hx hy\n  have h\u2083 : Real.sqrt x * Real.sqrt y = 0 := h\u2082\n  rw [mul_comm] at h\u2083\n  apply or_iff_not_imp_right.mpr\n  intro h\n  apply le_of_not_gt\n  intro h'\n  have h\u2084 : Real.sqrt x > 0 := Real.sqrt_pos.mpr (by linarith)\n  have h\u2085 : Real.sqrt y > 0 := Real.sqrt_pos.mpr (by linarith)\n  nlinarith [Real.mul_self_sqrt (show 0 \u2264 x from hx), Real.mul_self_sqrt (show 0 \u2264 y from hy)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_28375_plus (n : \u2115) (hn : 1 < n) : (\u2203 k : \u211d, \u2200 x : \u211d, \u2203 y : \u211d, (x^n - y^n) * (x^n - y^n) \u2265 k * (x^n * y^n)) \u2228 (\u2203 k : \u211d, \u2200 x : \u211d, \u2203 y : \u211d, (x^n - y^n) * (x^n - y^n) \u2265 k * (x^n * y^n)) := by", "target": "\n  apply Or.inl\n  use 0\n  intro x\n  use x\n  ring_nf\n  nlinarith [hn]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_958_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 2) (h\u2081 : a * b + b * c + c * a = 1) : (1 - a * b) * (1 - b * c) * (1 - c * a) \u2265 (1 - a * b * c) * (1 - a * b - b * c - c * a):= by", "target": "\n  have h\u2082 : 0 \u2264 a * b := by nlinarith\n  have h\u2083 : 0 \u2264 b * c := by nlinarith\n  have h\u2084 : 0 \u2264 c * a := by nlinarith\n  have h\u2085 : 0 \u2264 a * b * c := by nlinarith\n  have h\u2086 : (1 - a * b) * (1 - b * c) * (1 - c * a) \u2265 (1 - a * b * c) * (1 - a * b - b * c - c * a) := by\n    nlinarith [sq_nonneg (a * b + b * c + c * a), sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a),\n      sq_nonneg (c * a - a * b)]\n  exact h\u2086\n  <;> assumption\n  <;> assumption\n  <;> assumption"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_51398_plus (a b c : \u211d) (hab : 0 \u2264 a) (hbc : 0 \u2264 b) (hca : 0 \u2264 c) (habc : a + b + c \u2264 3) (h : 0 \u2264 a * b * c) : a ^ 2 * b ^ 2 * c ^ 2 * (a + b + c) \u2264 (a ^ 2 + b ^ 2 + c ^ 2) ^ 3:= by", "target": "\n  have h\u2081 : 0 \u2264 a ^ 2 * b ^ 2 * c ^ 2 := by positivity\n  have h\u2082 : 0 \u2264 a ^ 2 + b ^ 2 + c ^ 2 := by positivity\n  have h\u2083 : 0 \u2264 a * b * c := by positivity\n  have h\u2084 : a * b * c \u2264 1 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      sq_nonneg (a + b + c)]\n  have h\u2085 : a ^ 2 * b ^ 2 * c ^ 2 * (a + b + c) \u2264 (a ^ 2 + b ^ 2 + c ^ 2) ^ 3 := by\n    nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n      sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b),\n      mul_self_nonneg (a ^ 2 + b ^ 2 + c ^ 2), mul_self_nonneg (a ^ 2 - b ^ 2),\n      mul_self_nonneg (b ^ 2 - c ^ 2), mul_self_nonneg (c ^ 2 - a ^ 2)]\n  exact h\u2085"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_54954_plus (a b c : \u211d) (h\u2081 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2082 : a + b + c = 3)  (h\u2083 : a * b + b * c + c * a = 1)  : (1 / (a + 1) + 1 / (b + 1) + 1 / (c + 1) : \u211d) \u2265 9 / 6 \u2227 (1 / (a + 1) + 1 / (b + 1) + 1 / (c + 1) : \u211d) \u2265 2 * 3 / 6  := by", "target": "\n  have h\u2084 : 0 < a := by linarith\n  have h\u2085 : 0 < b := by linarith\n  have h\u2086 : 0 < c := by linarith\n  have h\u2087 : 0 < a * b := by positivity\n  have h\u2088 : 0 < b * c := by positivity\n  have h\u2089 : 0 < c * a := by positivity\n  constructor\n  \u00b7 field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  \u00b7 field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4156 (a b c : \u211d) : (a^2 * (b + c)^2 / (b^2 + c^2) + b^2 * (c + a)^2 / (c^2 + a^2) + c^2 * (a + b)^2 / (a^2 + b^2)) \u2265 2 * (a * b + b * c + c * a) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4156_plus (a b c : \u211d) (hab : 0 \u2264 a) (hbc : 0 \u2264 b) (hca : 0 \u2264 c) (habc : a + b + c \u2264 1) : (1 - a) * (1 - b) * (1 - c) * (a + b + c) ^ 2 \u2264 8 * (a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 2 * (1 - c) + a ^ 2 * c ^ 2 * (1 - b) + b ^ 2 * c ^ 2 * (1 - a)) + 8 * (a ^ 2 * (1 - b) * (1 - c) + b ^ 2 * (1 - a) * (1 - c) + c ^ 2 * (1 - a) * (1 - b)):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_43124_plus (x : \u211d) (hx : x^3 - 3 * x = Real.sqrt (x + 2)) : Real.sqrt (x + 2) \u2264 3 * (x^2 + 1):= by", "target": "\n  have h\u2080 : Real.sqrt (x + 2) \u2264 3 * (x^2 + 1) := by\n    have h\u2081 : Real.sqrt (x + 2) \u2264 3 * (x^2 + 1) := by\n      apply Real.sqrt_le_iff.mpr\n      constructor\n      \u00b7 nlinarith [sq_nonneg (x - 1), sq_nonneg (x + 1)]\n      \u00b7 nlinarith [sq_nonneg (x - 1), sq_nonneg (x + 1), sq_nonneg (x ^ 2 - 1)]\n    linarith\n  linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_35594_plus : \u2200 a b : \u2124, (\u2203 x y : \u2124, a = 4 * x ^ 2 + y ^ 2 \u2227 b = 4 * x * y) \u2192 \u2203 x y : \u2124, a ^ 2 + b ^ 2 = (4 * x ^ 2 + y ^ 2) ^ 2 + (4 * x * y) ^ 2:= by", "target": "\n  rintro a b \u27e8x, y, h\u2080, h\u2081\u27e9\n  exact \u27e8x, y, by simp [h\u2080, h\u2081, sq, mul_add, add_mul]\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_4161_plus (P : \u2115 \u2192 Prop)\n  (h\u2081 : P 1)\n  (h\u2082 : \u2200 k, P k \u2192 P (k + 1))\n  (h\u2083 : \u2200 k, 1 \u2264 k \u2227 k \u2264 10 \u2192 P k) :\n  \u2200 n, 1 \u2264 n \u2227 n \u2264 10 \u2228 10 \u2264 n \u2192 P n  := by", "target": "\n  intro n h\n  cases h with\n  | inl h => exact h\u2083 n h\n  | inr h =>\n    have h\u2084 : P 10 := h\u2083 10 \u27e8by norm_num, by norm_num\u27e9\n    induction' h with k hk hk_ind\n    all_goals simp_all"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_9572 : (\u220f i in Finset.Icc (1 : \u2115) 50, (i + 1) / (i + 2)) < 1 / 8 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_9572_plus : \u2200 (x : \u2115), x \u2264 50 \u2192 (\u220f k in Finset.Icc 1 50, k) \u2264 50! \u2227 50! \u2264 50^50:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_42196_plus (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : a * b * c = 1 \u2192 a ^ 2 + b ^ 2 + c ^ 2 + (1 / a + 1 / b + 1 / c) ^ 2 \u2265 9:= by", "target": "\n  intro habc\n  have h\u2080 : 0 < a := lt_of_le_of_ne ha (by rintro rfl; simp_all)\n  have h\u2081 : 0 < b := lt_of_le_of_ne hb (by rintro rfl; simp_all)\n  have h\u2082 : 0 < c := lt_of_le_of_ne hc (by rintro rfl; simp_all)\n  have h\u2083 : 0 < a * b := by positivity\n  have h\u2084 : 0 < b * c := by positivity\n  have h\u2085 : 0 < c * a := by positivity\n  field_simp [habc]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_39465_plus (a b c : \u211d) (hab : 0 \u2264 a) (hbc : 0 \u2264 b) (hca : 0 \u2264 c) (habc : a * b + b * c + c * a = 0) : a ^ 2 + b ^ 2 + c ^ 2 \u2265 (a * b + b * c + c * a) * (1 / (a + b + c)):= by", "target": "\n  have : a * b + b * c + c * a = 0 := habc\n  by_cases h : a + b + c = 0\n  all_goals simp_all [sq]\n  all_goals nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1760 : \u2200 a c : \u211d, a^2 * (c^2 - 3 * c + 3) + a * (-3 * c^2 + 5 * c - 3) + (3 * c^2 - 3 * c + 1) \u2265 0 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1760_plus : \u2200 a b c : \u211d, a * b * c \u2264 max (max (a * b) (b * c)) (c * a) \u2228 (a * b * c \u2264 0 \u2228 0 \u2264 a * b * c) \u2228 (a * b * c \u2264 0 \u2228 0 \u2264 a * b * c):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_4814_plus (x y : \u211d) (h\u2081 : 0 \u2264 x \u2227 0 \u2264 y) (h\u2082 : x ^ 2 + y ^ 2 = 1) (h\u2083 : 0 \u2264 x ^ 2 * y) : x ^ 2 * y * (x ^ 2 + y ^ 2) + x ^ 2 * (1 - x ^ 2) * y + y ^ 2 * (1 - y ^ 2) * x \u2264 1:= by", "target": "\n  simp only [h\u2082, h\u2081.2, h\u2081.1, mul_one, add_comm, add_left_comm, add_assoc]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - 1), sq_nonneg (y - 1), mul_nonneg h\u2081.1 h\u2081.2,\n    mul_nonneg (sq_nonneg x) h\u2081.2, mul_nonneg (sq_nonneg y) h\u2081.1, h\u2082]\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_5073_plus : \u2200 n : \u2115, Even n \u2192 3 \u2223 (11 * (14 ^ n) + 1) \u2228 2 \u2223 (11 * (14 ^ n) + 1) \u2228 11 * (14 ^ n) + 1 = 3 \u2228 11 * (14 ^ n) + 1 = 2:= by", "target": "\n  rintro n hn\n  rw [even_iff_two_dvd] at hn\n  rcases hn with \u27e8k, rfl\u27e9\n  left\n  simp [Nat.dvd_iff_mod_eq_zero, pow_mul, Nat.add_mod, Nat.mul_mod, Nat.pow_mod]\n  <;> omega"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_43933_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 a \u2264 1) (hbc : 0 \u2264 b \u2227 b \u2264 1) (hca : 0 \u2264 c \u2227 c \u2264 1) (h : a * b * c > 0) : a / (b * c + 1) + b / (c * a + 1) + c / (a * b + 1) \u2264 2 \u2228 a * b * c \u2264 1 / 9 \u2228 a * b * c \u2265 1 / 3:= by", "target": "\n  apply or_iff_not_imp_right.mpr\n  intro h\u2081\n  have h\u2082 : 0 < b * c := by nlinarith\n  have h\u2083 : 0 < c * a := by nlinarith\n  have h\u2084 : 0 < a * b := by nlinarith\n  have h\u2085 : 0 < b * c * (c * a) := by nlinarith\n  have h\u2086 : 0 < c * a * (a * b) := by nlinarith\n  have h\u2087 : 0 < a * b * (b * c) := by nlinarith\n  field_simp [h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087]\n  rw [div_le_iff (by positivity)]\n  nlinarith [mul_nonneg (sub_nonneg.mpr hab.1) (sub_nonneg.mpr hbc.1),\n    mul_nonneg (sub_nonneg.mpr hab.1) (sub_nonneg.mpr hca.1),\n    mul_nonneg (sub_nonneg.mpr hbc.1) (sub_nonneg.mpr hca.1),\n    mul_nonneg (sub_nonneg.mpr hab.2) (sub_nonneg.mpr hbc.2),\n    mul_nonneg (sub_nonneg.mpr hab.2) (sub_nonneg.mpr hca.2),\n    mul_nonneg (sub_nonneg.mpr hbc.2) (sub_nonneg.mpr hca.2)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_14703_plus  (a b c x : \u211d)\n  (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c)\n  (h\u2081 : 0 \u2264 x) :\n  ac / (a * x^2 + 4 * b * x + c) + ab / (b * x^2 + 4 * c * x + a) + bc / (c * x^2 + 4 * a * x + b) \u2264 1 / (x^2 + x + 1)^2 * ((a + b + c) + (a * b / (2 * c)) + (a * c / (2 * b)) + (b * c / (2 * a))) \u2228 1 / (x^2 + x + 1)^2 * ((a + b + c) + (a * b / (2 * c)) + (a * c / (2 * b)) + (b * c / (2 * a))) \u2264 ac / (a * x^2 + 4 * b * x + c) + ab / (b * x^2 + 4 * c * x + a) + bc / (c * x^2 + 4 * a * x + b):= by", "target": "\n  by_contra! h\n  have h\u2081 := h\u2080.2.2\n  have h\u2082 := h\u2080.1\n  have h\u2083 := h\u2080.2.1\n  have h\u2084 := h\u2080.2.2\n  have h\u2085 := h\u2081\n  have h\u2086 := h\u2082\n  have h\u2087 := h\u2083\n  have h\u2088 := h\u2084\n  have h\u2089 := h\u2085\n  have h\u2081\u2080 := h\u2086\n  have h\u2081\u2081 := h\u2087\n  have h\u2081\u2082 := h\u2088\n  have h\u2081\u2083 := h\u2089\n  have h\u2081\u2084 := h\u2081\u2080\n  have h\u2081\u2085 := h\u2081\u2081\n  have h\u2081\u2086 := h\u2081\u2082\n  norm_num at *\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1928 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : (a^2 / (a + b)^2 + b^2 / (b + c)^2 + c^2 / (c + a)^2 + (a * b + b * c + c * a) / (4 * (a ^ 2 + b ^ 2 + c ^ 2))) \u2265 1 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1928_plus (a b c : \u211d) (hab : 0 \u2264 a) (hbc : 0 \u2264 b) (hca : 0 \u2264 c) (h : a + b + c = 1) : (1 - a * b) ^ 2 / (1 - a * b) ^ 2 + (1 - b * c) ^ 2 / (1 - b * c) ^ 2 + (1 - c * a) ^ 2 / (1 - c * a) ^ 2 \u2265 3 / 4:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_24596_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) : a / b + b / c + c / a \u2265 3 * ( (a ^ 2 + b ^ 2 + c ^ 2) / (a * b + b * c + c * a) ) ^ (2 / 3) \u2227 (\u2203 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2227 x * y * z = 1 \u2227 a / b + b / c + c / a \u2265 3 * ( (a ^ 2 + b ^ 2 + c ^ 2) / (a * b + b * c + c * a) ) ^ (2 / 3))  := by", "target": "\n  have h\u2081 : 0 < a * b := by positivity\n  have h\u2082 : 0 < b * c := by positivity\n  have h\u2083 : 0 < c * a := by positivity\n  constructor\n  \u00b7 field_simp [h\u2081, h\u2082, h\u2083]\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    ring_nf\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      mul_self_nonneg (a * b + b * c + c * a), mul_self_nonneg (a * b - b * c),\n      mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b)]\n  \u00b7 refine \u27e81, 1, 1, by norm_num, by norm_num, by norm_num, by norm_num, ?_\u27e9\n    field_simp [h\u2081, h\u2082, h\u2083]\n    rw [le_div_iff (by positivity)]\n    ring_nf\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      mul_self_nonneg (a * b + b * c + c * a), mul_self_nonneg (a * b - b * c),\n      mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_40304_plus (a b : \u211d) (hab : 0 < a \u2227 0 < b) : 4 * (a^3 + b^3) \u2265 (a + b)^3 - 6 * a * b * (a - b)^2 \u2227 4 * (a^3 + b^3) \u2265 (a + b)^3 - 6 * a * b * (a - b)^2 \u2228 4 * (a^3 + b^3) < (a + b)^3 - 6 * a * b * (a - b)^2 \u2228 4 * (a^3 + b^3) < (a + b)^3 - 6 * a * b * (a - b)^2:= by", "target": "\n  by_cases h\u2080 : 4 * (a^3 + b^3) \u2265 (a + b)^3 - 6 * a * b * (a - b)^2 <;> simp_all\n  <;> nlinarith [sq_nonneg (a + b), sq_nonneg (a - b), mul_nonneg hab.1.le hab.2.le, mul_nonneg hab.1.le (sq_nonneg (a - b)), mul_nonneg hab.2.le (sq_nonneg (a + b))]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_44714_plus (n : \u2115) (hn : 1 < n) : \u2203 k : \u2115, 10 ^ k \u2264 n \u2227 n < 10 ^ (k + 1):= by", "target": "\n  use Nat.log 10 n\n  have h1 : 10 ^ Nat.log 10 n \u2264 n := by\n    apply Nat.pow_log_le_self 10 (by omega)\n  have h2 : n < 10 ^ (Nat.log 10 n + 1) := by\n    apply Nat.lt_pow_succ_log_self (by omega)\n  exact \u27e8h1, h2\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_50681_plus (n : \u2115) (hn : 1 < n) : \u2203 k : \u2115, 2 ^ n \u2265 (n * (n + k)) / (n + k) \u2227 (n * (n + k)) / (n + k) \u2265 1:= by", "target": "\n  use 1\n  have h1 : 2 ^ n \u2265 n := by\n    have h2 : n \u2264 2 ^ n := by\n      exact Nat.le_of_lt (Nat.lt_pow_self (by linarith) n)\n    have h3 : 2 ^ n \u2265 n := by\n      linarith\n    exact h3\n  have h2 : (n * (n + 1)) / (n + 1) \u2264 2 ^ n := by\n    have h3 : (n * (n + 1)) / (n + 1) \u2264 n := by\n      exact Nat.div_le_of_le_mul (by nlinarith)\n    linarith\n  have h3 : (n * (n + 1)) / (n + 1) \u2265 1 := by\n    have h4 : 0 < n + 1 := by linarith\n    have h5 : 0 < n * (n + 1) := by nlinarith\n    exact Nat.div_pos (by nlinarith) (by linarith)\n  exact \u27e8by linarith, by linarith\u27e9\n  <;> linarith\n  <;> linarith\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_3957_plus (x y : \u211d) (h : 0 < x \u2228 0 < y) : \u2203 c : \u211d, 0 < c \u2227 \u2200 a b : \u2124, a \u2260 0 \u2227 b \u2260 0 \u2192 |a * x - b * y| > c \u2228 |a * x - b * y| \u2264 c := by", "target": "\n  use 1\n  constructor\n  norm_num\n  intro a b hab\n  by_cases h\u2081 : |a * x - b * y| > 1\n  exact Or.inl h\u2081\n  exact Or.inr (by linarith)\n  <;> simp_all\n  <;> linarith\n  <;> simp_all\n  <;> linarith\n  <;> simp_all\n  <;> linarith\n  <;> simp_all\n  <;> linarith\n  <;> simp_all\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_19311_plus : \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a + b > c \u2227 b + c > a \u2227 a + c > b \u2227 a + b + c = 4 \u2192 a * b * c \u2264 1 \u2228 a^2 + b^2 + c^2 + a * b * c < 8 := by", "target": "\n  rintro a b c \u27e8h\u2081, h\u2082, h\u2083\u27e9 \u27e8h\u2084, h\u2085, h\u2086, h\u2087\u27e9\n  by_contra! h\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_pos (sub_pos.mpr h\u2084) (sub_pos.mpr h\u2085),\n    mul_pos (sub_pos.mpr h\u2085) (sub_pos.mpr h\u2086),\n    mul_pos (sub_pos.mpr h\u2086) (sub_pos.mpr h\u2084)]"}]