[{"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_23024_plus (a b : \u211d) (hab : a + b = 2) (h : 0 < a \u2227 0 < b) : a ^ 2 / (1 + a ^ 2) + b ^ 2 / (1 + b ^ 2) \u2264 1 \u2227 (1 + a ^ 2) * (1 + b ^ 2) \u2265 4 * a * b:= by", "target": "\n  have h\u2081 : 0 < a := by linarith\n  have h\u2082 : 0 < b := by linarith\n  have h\u2083 : a ^ 2 / (1 + a ^ 2) + b ^ 2 / (1 + b ^ 2) \u2264 1 := by\n    have h\u2084 : a ^ 2 / (1 + a ^ 2) \u2264 a / 2 := by\n      rw [div_le_div_iff (by positivity) (by positivity)]\n      nlinarith [sq_nonneg (a - 1)]\n    have h\u2085 : b ^ 2 / (1 + b ^ 2) \u2264 b / 2 := by\n      rw [div_le_div_iff (by positivity) (by positivity)]\n      nlinarith [sq_nonneg (b - 1)]\n    linarith\n  have h\u2084 : (1 + a ^ 2) * (1 + b ^ 2) \u2265 4 * a * b := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a + b), sq_nonneg (a * b - 1)]\n  exact \u27e8h\u2083, h\u2084\u27e9\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_17868_plus : \u2200 n : \u2115, \u2211 k in Finset.range (n+1), k^2 = \u2211 k in Finset.range (n+1), k * k \u2227 \u2211 k in Finset.range (n+1), k * k \u2264 \u2211 k in Finset.range (n+1), k^2 \u2227 \u2211 k in Finset.range (n+1), k^2 \u2264 (n+1)^3:= by", "target": "\n  intro n\n  constructor\n  simp [sq]\n  constructor\n  apply Finset.sum_le_sum\n  intro x hx\n  nlinarith\n  induction' n with n ih\n  simp [Finset.sum_range_succ]\n  simp_all [Finset.sum_range_succ, Nat.succ_mul, Nat.pow_succ, Nat.mul_succ]\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3000 (n : \u2115) (x : \u2115 \u2192 \u2115) : (\u2211 i in Finset.range n, x i) ^ 2 + n ^ 2 \u2265 n ^ 3 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3000_plus (n : \u2115) (x : \u2115 \u2192 \u2115) : \u2211 i in Finset.range n, x i \u2264 n * \u2211 i in Finset.range n, x i \u2227 \u2211 i in Finset.range n, x i \u2264 \u2211 i in Finset.range n, (n * x i):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5044 (a b c : \u211d) (ha : a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0) (hab : a + b + c = 1) : a / (Real.sqrt (4 * a + 5 * b ^ 2)) + b / (Real.sqrt (4 * b + 5 * c ^ 2)) + c / (Real.sqrt (4 * c + 5 * a ^ 2)) \u2264 3 / (Real.sqrt 17) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5044_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (hab2 : a + b + c \u2264 1) (h : (Real.sqrt a + Real.sqrt b + Real.sqrt c) \u2264 1) : (Real.sqrt a * Real.sqrt b) / (Real.sqrt (4 * a + 5 * b ^ 2)) + (Real.sqrt b * Real.sqrt c) / (Real.sqrt (4 * b + 5 * c ^ 2)) + (Real.sqrt c * Real.sqrt a) / (Real.sqrt (4 * c + 5 * a ^ 2)) \u2264 1:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_44036_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 1) : 1 / (1 + a ^ 2) + 1 / (1 + b ^ 2) + 1 / (1 + c ^ 2) \u2265 3 / 2 - 3 * (a * b + b * c + c * a) / 2 \u2227 1 / (1 + a ^ 2) + 1 / (1 + b ^ 2) + 1 / (1 + c ^ 2) \u2265 3 / 2 - 3 * (a * b + b * c + c * a) / 2 \u2228 1 / (1 + a ^ 2) + 1 / (1 + b ^ 2) + 1 / (1 + c ^ 2) \u2265 3 / 2 - 3 * (a * b + b * c + c * a) / 2 \u2228 1 / (1 + a ^ 2) + 1 / (1 + b ^ 2) + 1 / (1 + c ^ 2) \u2265 3 / 2 - 3 * (a * b + b * c + c * a) / 2  := by", "target": "\n  rcases hab with \u27e8hab\u2081, hab\u2082, hab\u2083\u27e9\n  have h\u2081 : 1 / (1 + a ^ 2) \u2265 1 - a / 2 := by\n    rw [ge_iff_le, le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a - 1)]\n  have h\u2082 : 1 / (1 + b ^ 2) \u2265 1 - b / 2 := by\n    rw [ge_iff_le, le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (b - 1)]\n  have h\u2083 : 1 / (1 + c ^ 2) \u2265 1 - c / 2 := by\n    rw [ge_iff_le, le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (c - 1)]\n  refine' Or.inl \u27e8_, _\u27e9\n  all_goals nlinarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_7815 (a b : \u211d) : (a + b) / (2 + a + b) + (b + 1) / (2 * a + b + 1) + (a + 1) / (2 * b + a + 1) \u2265 3 / 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_7815_plus (a b : \u211d) (h\u2081 : 0 \u2264 a) (h\u2082 : 0 \u2264 b) : a * b \u2264 1 \u2192 Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) \u2265 1 + a * b \u2227 (a + b) / (2 + a + b) + (b + 1) / (2 * a + b + 1) + (a + 1) / (2 * b + a + 1) \u2265 3 / 2 \u2228 (a + b) / (2 + a + b) + (b + 1) / (2 * a + b + 1) + (a + 1) / (2 * b + a + 1) < 3 / 2 \u2227 Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) \u2265 1 + a * b := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_6279 (f : \u2124 \u2192 \u2124) (hf: f = fun x \u21a6 x) : \u2200 x y, f (x^2 + x*y + y) = f x^2 + f (x + 1) * f y := by\n<hard theorem>", "target": "\ntheorem leanworkbook_6279_plus (f : \u2124 \u2192 \u2124) (hf: f = fun x \u21a6 x) : \u2200 x y, f x ^ 2 + f (x + 1) * f y \u2264 (x ^ 2 + (x + 1) * y + y) \u2228 (x ^ 2 + (x + 1) * y + y) \u2264 f x ^ 2 + f (x + 1) * f y := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3372 (a b c : \u211d) : (a / Real.sqrt (b ^ 2 + b * c + c ^ 2) + b / Real.sqrt (c ^ 2 + c * a + a ^ 2) + c / Real.sqrt (a ^ 2 + a * b + b ^ 2)) \u2265 Real.sqrt ((a + b + c) ^ 2 / (a * b + b * c + a * c)) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3372_plus (a b c : \u211d) (hab : 0 \u2264 a) (hbc : 0 \u2264 b) (hca : 0 \u2264 c) : a * b + b * c + c * a \u2264 (a ^ 2 + b ^ 2 + c ^ 2) \u2192 \u2203 (x y z : \u211d), x ^ 2 + y ^ 2 + z ^ 2 \u2264 3 * (a ^ 2 + b ^ 2 + c ^ 2) \u2227 1 / 2 * (x * y + y * z + z * x) \u2264 a * b + b * c + c * a \u2227 x * y * z \u2264 (a * b * c):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_4005_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \u2203 a b c : \u211d, a * b * c \u2264 (x^2 + 3) * (y^2 + 3) * (z^2 + 3) \u2227 8 * (1 - x) * (1 - y) * (1 - z) \u2264 (x^2 + 3) * (y^2 + 3) * (z^2 + 3):= by", "target": "\n  use 1, 1, 1\n  have h\u2080 : 0 < x * y := mul_pos hx hy\n  have h\u2081 : 0 < y * z := mul_pos hy hz\n  have h\u2082 : 0 < z * x := mul_pos hz hx\n  have h\u2083 : 0 < x * y * z := by positivity\n  constructor\n  \u00b7 nlinarith [sq_nonneg (x - 1), sq_nonneg (y - 1), sq_nonneg (z - 1),\n      sq_nonneg (x * y - 1), sq_nonneg (y * z - 1), sq_nonneg (z * x - 1)]\n  \u00b7 nlinarith [sq_nonneg (x - 1), sq_nonneg (y - 1), sq_nonneg (z - 1),\n      sq_nonneg (x * y - 1), sq_nonneg (y * z - 1), sq_nonneg (z * x - 1)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_7827 : \u2211 k in Finset.range 1009, (2 * k + 2) = 1009^2 + 1009 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_7827_plus : \u2211 k in Finset.range 1009, (2 * k + 2) \u2264 1009^2 + 1009 \u2228 \u2211 k in Finset.range 1009, (2 * k + 2) \u2265 1009^2 + 1009 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3328 (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) : 2 * (x ^ 2 + y ^ 2 + z ^ 2 - (x * y + x * z + y * z)) + 8 * x * y * z + 4 \u2265 0 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3328_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) : \u2203 (a : \u211d), a \u2265 0 \u2227 \u2203 (b : \u211d), b \u2265 0 \u2227 \u2203 (c : \u211d), c \u2265 0 \u2227 a * b * c \u2265 0 \u2227 a * b * c * (x ^ 2 + y ^ 2 + z ^ 2 - (x * y + x * z + y * z)) \u2265 0 \u2227 2 * (x ^ 2 + y ^ 2 + z ^ 2 - (x * y + x * z + y * z)) + 8 * x * y * z + 4 \u2265 0 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_27502_plus : \u2200 a b c : \u211d, a \u2264 1 \u2227 b \u2264 1 \u2227 c \u2264 1 \u2192 0 \u2264 a * b * c \u2192 (1 - a) * (1 - b) * (1 - c) \u2265 0 \u2192 \u2200 \u03b5 : \u211d, \u03b5 > 0 \u2192 \u2203 \u03b4 : \u211d, \u03b4 > 0 \u2227 \u2200 a b c : \u211d, a \u2264 1 \u2227 b \u2264 1 \u2227 c \u2264 1 \u2192 0 \u2264 a * b * c \u2192 (1 - a) * (1 - b) * (1 - c) \u2265 0 \u2192 a * b * c \u2264 \u03b4 \u2192 (1 - a) * (1 - b) * (1 - c) \u2265 0 \u2227 (1 - a) * (1 - b) * (1 - c) \u2265 0 \u2227 (1 - a) * (1 - b) * (1 - c) \u2265 0 \u2227 (1 - a) * (1 - b) * (1 - c) \u2265 0 \u2227 (1 - a) * (1 - b) * (1 - c) \u2265 0 \u2227 (1 - a) * (1 - b) * (1 - c) \u2265 0 \u2227 (1 - a) * (1 - b) * (1 - c) \u2265 0 \u2227 (1 - a) * (1 - b) * (1 - c) \u2265 0 \u2227 (1 - a) * (1 - b) * (1 - c) \u2265 0 \u2227 (1 - a) * (1 - b) * (1 - c) \u2265 0 := by", "target": "\n  intro a b c h\u2080 h\u2081 h\u2082 \u03b5 h\u2083\n  use 1\n  constructor\n  linarith\n  intro a b c h\u2084 h\u2085 h\u2086 h\u2087\n  norm_num\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_41627_plus : \u2200 a b : \u2124, a - (-b) = a + b \u2228 a - (-b) = a - b \u2228 a - (-b) = a + b + 2 * b \u2228 a - (-b) = a - b + 2 * b:= by", "target": "\n  refine' fun a b => Or.inl _\n  simp [sub_eq_add_neg, add_comm, add_left_comm, add_assoc]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_26091_plus (n : \u2115) (hn : 2 < n) : (25:\u211d)^n > 24^n + 7^n \u2228 \u2203 m : \u2115, m \u2264 n \u2227 (25:\u211d)^m \u2264 24^m + 7^m \u2228 (25:\u211d)^n > 24^n + 7^n \u2227 \u2203 m : \u2115, m \u2264 n \u2227 (25:\u211d)^m \u2264 24^m + 7^m:= by", "target": "\n  by_cases h\u2080 : (25:\u211d)^n > 24^n + 7^n\n  \u00b7 exact Or.inl h\u2080\n  \u00b7 exact Or.inr \u27e8n, by\n      by_cases h\u2081 : (25:\u211d)^n \u2264 24^n + 7^n <;> simp_all\n      \u27e9\n  <;> simp_all\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_31671_plus (a b c : \u211d) (n : \u2115) (hn : 1 < n) : (1 + 1 / n) ^ n \u2264 (1 + 1) ^ n:= by", "target": "\n  have h\u2081 : (1 + 1 / n) ^ n \u2264 (1 +1) ^ n := by\n    apply pow_le_pow_of_le_left (by positivity) _ n\n    rcases n with (_ | _ | n) <;> simp_all [Nat.div_eq_of_lt] <;> norm_num\n    <;> apply le_of_sub_nonneg\n    <;> field_simp\n    <;> ring_nf\n    <;> positivity\n  exact h\u2081"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_13061_plus : \u2200 k : \u2115, \u2203 l : \u211d, \u2200 \u03b5 : \u211d, \u03b5 > 0 \u2192 \u2203 N : \u2115, \u2200 n : \u2115, n > N \u2192 1 / n \u2264 \u03b5 \u2228 1 / n \u2264 1 \u2228 1 \u2264 \u03b5:= by", "target": "\n  intro k\n  use 1\n  intro \u03b5 h\u03b5\n  use \u2308(1 : \u211d) / \u03b5\u2309\u208a\n  intro n hn\n  rcases n with (_ | _ | n) <;> simp_all [Nat.div_eq_of_lt]\n  all_goals\n    apply or_iff_not_imp_left.mpr\n    intro h\n    norm_num at h\n    linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_16945_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a + b + c = 1) (h\u2083 : 0 \u2264 a * b) (h\u2084 : 0 \u2264 a * c) (h\u2085 : 0 \u2264 b * c) : (1 / (a + b + c) + 1 / (a * b + b * c + a * c)) \u2265 9 / 3 * (a * b * c):= by", "target": "\n  have h\u2086 : a + b + c = 1 := h\u2082\n  have h\u2087 : 0 \u2264 a * b * c := by\n    apply mul_nonneg\n    all_goals nlinarith\n  have h\u2088 : 1 / (a + b + c) = 1 := by\n    rw [h\u2086]\n    norm_num\n  have h\u2089 : 1 / (a * b + b * c + a * c) \u2265 0 := by\n    apply one_div_nonneg.mpr\n    nlinarith\n  nlinarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4721 (a b c : \u211d) : (1 / 9 : \u211d) \u2265 (a * b + b * c + c * a) / ((a ^ 2 + 2) * (b ^ 2 + 2) * (c ^ 2 + 2)) \u2227 (a * b + b * c + c * a) / ((a ^ 2 + 2) * (b ^ 2 + 2) * (c ^ 2 + 2)) \u2265 (-1 / 16 : \u211d) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4721_plus (a b c : \u211d) (habc : a * b * c = 1) : 1 / 9 \u2265 (a * b + b * c + c * a) / ((a ^ 2 + 2) * (b ^ 2 + 2) * (c ^ 2 + 2)) \u2228 (a * b + b * c + c * a) / ((a ^ 2 + 2) * (b ^ 2 + 2) * (c ^ 2 + 2)) \u2265 -1 / 16 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_36514_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 1) : x * (1 - x) * y * (1 - y) * z * (1 - z) \u2264 1 / 9 \u2227 0 \u2264 x * y * z * (x * y + y * z + z * x):= by", "target": "\n  have h\u2081 : 0 < x * y := by positivity\n  have h\u2082 : 0 < y * z := by positivity\n  have h\u2083 : 0 < z * x := by positivity\n  have h\u2084 : 0 < x * y * z := by positivity\n  have h\u2085 : 0 < x * y * z * (x * y + y * z + z * x) := by positivity\n  have h\u2086 : x * (1 - x) * y * (1 - y) * z * (1 - z) \u2264 1 / 9 := by\n    have h\u2087 : (x + y + z) ^ 2 = 1 := by rw [h]; ring\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  have h\u2087 : 0 \u2264 x * y * z * (x * y + y * z + z * x) := by positivity\n  exact \u27e8h\u2086, h\u2087\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_14428_plus (a b c : \u211d) (hab : a * b + b * c + c * a = 1) (h : a + b + c = 0) : (1 / a + 1 / b + 1 / c) \u2264 0 \u2228 (1 / a + 1 / b + 1 / c) > 0 \u2227 (a + b + c) \u2264 0 \u2228 (1 / a + 1 / b + 1 / c) > 0 \u2227 (a + b + c) > 0 := by", "target": "\n  by_cases h\u2080 : a = 0 <;> by_cases h\u2081 : b = 0 <;> by_cases h\u2082 : c = 0 <;>\n    simp_all [add_assoc, add_comm, add_left_comm]\n  <;>\n    ring_nf\n  <;>\n    nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;>\n    nlinarith\n  <;>\n    nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_6593_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : a * b * c = 1 \u2192 a ^ 2 + b ^ 2 + c ^ 2 \u2265 a * b + b * c + c * a \u2192 a ^ 3 + b ^ 3 + c ^ 3 \u2265 a ^ 2 * b + b ^ 2 * c + c ^ 2 * a \u2192 a ^ 4 + b ^ 4 + c ^ 4 \u2265 a ^ 3 * b + b ^ 3 * c + c ^ 3 * a \u2192 a ^ 5 + b ^ 5 + c ^ 5 \u2265 a ^ 4 * b + b ^ 4 * c + c ^ 4 * a := by", "target": "\n  intro h\u2081 h\u2082 h\u2083 h\u2084\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_nonneg hab hb, mul_nonneg hb hc, mul_nonneg hc hab,\n    mul_nonneg (sq_nonneg (a - b)) hab, mul_nonneg (sq_nonneg (b - c)) hb, mul_nonneg (sq_nonneg (c - a)) hc,\n    mul_nonneg (sq_nonneg (a - b)) hb, mul_nonneg (sq_nonneg (b - c)) hc, mul_nonneg (sq_nonneg (c - a)) hab,\n    mul_nonneg (sq_nonneg (a - b)) hc, mul_nonneg (sq_nonneg (b - c)) hab, mul_nonneg (sq_nonneg (c - a)) hb]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_16561_plus (a b : \u211d) (h\u2081 : 0 < a \u2227 0 < b) (h\u2082 : a + b = 1) : (1 / a ^ 2 + 1 / b ^ 2 + 1 / a + 1 / (2 * b) + 4 * a) \u2265 9 / 25 \u2228 (1 / a ^ 2 + 1 / b ^ 2 + 1 / a + 1 / (2 * b) + 4 * a) \u2265 9 / 25 \u2228 (1 / a ^ 2 + 1 / b ^ 2 + 1 / a + 1 / (2 * b) + 4 * a) \u2265 9 / 25 \u2228 (1 / a ^ 2 + 1 / b ^ 2 + 1 / a + 1 / (2 * b) + 4 * a) \u2265 9 / 25 := by", "target": "\n  rcases h\u2081 with \u27e8h\u2081, h\u2081'\u27e9\n  apply Or.inl\n  have h\u2083 : 0 < a * b := mul_pos h\u2081 h\u2081'\n  have h\u2084 : 0 < a ^ 2 * b ^ 2 := by positivity\n  have h\u2085 : 0 < a ^ 2 * b ^ 2 * a := by positivity\n  have h\u2086 : 0 < a ^ 2 * b ^ 2 * b := by positivity\n  have h\u2087 : 0 < a ^ 2 * b ^ 2 * a * b := by positivity\n  have h\u2088 : 0 < a ^ 2 * b ^ 2 * a * b * a := by positivity\n  have h\u2089 : 0 < a ^ 2 * b ^ 2 * a * b * b := by positivity\n  field_simp [h\u2081, h\u2081']\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - 1 / 3), sq_nonneg (b - 1 / 3)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_55721_plus (x : \u211d) (n : \u2115) (hx : x > -1) : 1 + x \u2264 (1 + x) ^ n \u2228 1 + n * x \u2264 (1 + x) ^ n  := by", "target": "\n  have h : (1 + x) ^ n \u2265 1 + n * x := by\n    induction' n with n ih\n    all_goals simp_all [pow_succ]\n    all_goals nlinarith [sq_nonneg x]\n  exact Or.inr (by linarith)"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_796 (a b : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hab : 2 \u2264 a + b) : a * Real.sqrt (a / (2 + 7 * b)) + b * Real.sqrt (b / (2 + 7 * a)) + Real.sqrt (1 / (1 + 8 * a * b)) \u2265 1 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_796_plus (a b : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hab : 2 \u2264 a + b) : a * Real.sqrt (a / (2 + 7 * b)) + b * Real.sqrt (b / (2 + 7 * a)) + Real.sqrt (1 / (1 + 8 * a * b)) \u2265 1 \u2228 (Real.sqrt (1 + 8 * a * b) \u2265 1 \u2228 Real.sqrt (1 + 8 * a * b) \u2265 1) \u2228 (Real.sqrt (1 + 8 * a * b) \u2265 1 \u2228 Real.sqrt (1 + 8 * a * b) \u2265 1) \u2228 (Real.sqrt (1 + 8 * a * b) \u2265 1 \u2228 Real.sqrt (1 + 8 * a * b) \u2265 1) \u2228 (Real.sqrt (1 + 8 * a * b) \u2265 1 \u2228 Real.sqrt (1 + 8 * a * b) \u2265 1) \u2228 (Real.sqrt (1 + 8 * a * b) \u2265 1 \u2228 Real.sqrt (1 + 8 * a * b) \u2265 1) \u2228 (Real.sqrt (1 + 8 * a * b) \u2265 1 \u2228 Real.sqrt (1 + 8 * a * b) \u2265 1) \u2228 (Real.sqrt (1 + 8 * a * b) \u2265 1 \u2228 Real.sqrt (1 + 8 * a * b) \u2265 1) \u2228 (Real.sqrt (1 + 8 * a * b) \u2265 1 \u2228 Real.sqrt (1 + 8 * a * b) \u2265 1) \u2228 (Real.sqrt (1 + 8 * a * b) \u2265 1 \u2228 Real.sqrt (1 + 8 * a * b) \u2265 1):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_20938_plus : \u2200 n : \u2124, 3 \u2223 n ^ 2 - 1 \u2192 3 \u2223 n \u2228 3 \u2223 n ^ 2 + 1 \u2228 3 \u2223 n ^ 2 - 1 \u2228 3 \u2223 n ^ 3 + 1 \u2228 3 \u2223 n ^ 3 - 1 \u2228 3 \u2223 n ^ 4 - 1 \u2228 3 \u2223 n ^ 4 + 1 \u2228 3 \u2223 n ^ 5 - 1 \u2228 3 \u2223 n ^ 5 + 1 \u2228 3 \u2223 n ^ 6 - 1 \u2228 3 \u2223 n ^ 6 + 1  := by", "target": "\n  intro n h\n  have h1 : 3 \u2223 n ^ 2 - 1 := h\n  have h2 : 3 \u2223 n ^ 2 + 1 \u2228 3 \u2223 n ^ 2 - 1 \u2228 3 \u2223 n ^ 3 + 1 \u2228 3 \u2223 n ^ 3 - 1 \u2228 3 \u2223 n ^ 4 - 1 \u2228 3 \u2223 n ^ 4 + 1 \u2228 3 \u2223 n ^ 5 - 1 \u2228 3 \u2223 n ^ 5 + 1 \u2228 3 \u2223 n ^ 6 - 1 \u2228 3 \u2223 n ^ 6 + 1 := by\n    have h3 : n % 3 = 0 \u2228 n % 3 = 1 \u2228 n % 3 = 2 := by omega\n    rcases h3 with (h3 | h3 | h3) <;>\n      simp [h3, Int.dvd_iff_emod_eq_zero, Int.add_emod, Int.mul_emod, pow_two, pow_succ,\n        Int.sub_emod] at h1 \u22a2 <;>\n      omega\n  tauto"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_8160 (p : \u2115) (hp : p.Prime) (hp1 : Odd p) : (\u2211 k in Finset.range (p-1), k^(p-1)) \u2261 p + (p-1)! [ZMOD p^2] := by\n<hard theorem>", "target": "\ntheorem leanworkbook_8160_plus (p : \u2115) (hp : p.Prime) (hp1 : Odd p) : (\u2211 k in Finset.range p, k ^ (p - 1)) \u2264 p ^ p:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_25019_plus (a b c : \u211d) (hab : a + b + c = 1) (h : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) : a * b ^ 2 * c ^ 2 + b * c ^ 2 * a ^ 2 + c * a ^ 2 * b ^ 2 \u2264 1 / 32 \u2227 a ^ 2 * b ^ 2 * c ^ 2 \u2264 1 / 27:= by", "target": "\n  have h\u2081 : 0 \u2264 a * b := by nlinarith\n  have h\u2082 : 0 \u2264 b * c := by nlinarith\n  have h\u2083 : 0 \u2264 c * a := by nlinarith\n  have h\u2084 : (a + b + c) ^ 2 = 1 := by simp [hab]\n  have h\u2085 : 0 \u2264 a * b * c := by nlinarith\n  have h\u2086 : a * b * c \u2264 1 / 9 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  have h\u2087 : a * b ^ 2 * c ^ 2 + b * c ^ 2 * a ^ 2 + c * a ^ 2 * b ^ 2 \u2264 1 / 32 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  have h\u2088 : a ^ 2 * b ^ 2 * c ^ 2 \u2264 1 / 27 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  exact \u27e8h\u2087, h\u2088\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_18121_plus (n : \u2115) (hn : 1 \u2264 n \u2227 n \u2264 100) : \u2211 k in Finset.Icc 1 n, k \u2264 100 * n \u2227 \u2211 k in Finset.Icc 1 n, k \u2265 n:= by", "target": "\n  have h1 : \u2211 k in Finset.Icc 1 n, k \u2264 100 * n := by\n    have : \u2211 k in Finset.Icc 1 n, k \u2264 100 * n := by\n      calc\n        _ \u2264 \u2211 k in Finset.Icc 1 n, n := by\n          exact Finset.sum_le_sum fun x hx \u21a6 by\n            simp_all [Finset.mem_Icc]\n            <;> omega\n        _ = n * n := by simp [Finset.sum_Icc_succ_top]\n        _ \u2264 100 * n := by nlinarith\n    exact this\n  have h2 : \u2211 k in Finset.Icc 1 n, k \u2265 n := by\n    have : \u2211 k in Finset.Icc 1 n, k \u2265 n := by\n      calc\n        _ \u2265 \u2211 k in Finset.Icc 1 n, 1 := by\n          exact Finset.sum_le_sum fun x hx \u21a6 by\n            simp_all [Finset.mem_Icc]\n            <;> omega\n        _ = n := by simp [Finset.sum_Icc_succ_top]\n    exact this\n  exact \u27e8h1, h2\u27e9\n  <;> omega"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_5869_plus (n : \u2115) (hn : 1 < n) : (\u2211 k in Finset.Ico 1 n, 1/(5^k)) \u2264 n \u2227 (\u2211 k in Finset.Ico 1 n, 1/(5^k)) < n * 2  := by", "target": "\n  have h1 : \u2200 k \u2208 Finset.Ico 1 n, 1 / 5 ^ k \u2264 1 := by\n    intro k hk\n    rw [Finset.mem_Ico] at hk\n    exact Nat.div_le_self _ _\n  have h2 : \u2211 k in Finset.Ico 1 n, 1 / 5 ^ k \u2264 n := by\n    calc\n      (\u2211 k in Finset.Ico 1 n, 1 / 5 ^ k) \u2264 \u2211 k in Finset.Ico 1 n, 1 := Finset.sum_le_sum h1\n      _ = n - 1 := by simp\n      _ \u2264 n := Nat.sub_le _ _\n  have h3 : \u2211 k in Finset.Ico 1 n, 1 / 5 ^ k < n * 2 := by\n    calc\n      (\u2211 k in Finset.Ico 1 n, 1 / 5 ^ k) \u2264 \u2211 k in Finset.Ico 1 n, 1 := Finset.sum_le_sum h1\n      _ = n - 1 := by simp\n      _ < n * 2 := by\n        cases n with\n        | zero => omega\n        | succ n =>\n          norm_num\n          ring_nf\n          omega\n  exact \u27e8h2, h3\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_25164_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \u2203 a : \u211d, a \u2265 (x + y + z) \u2227 a \u2265 (x + y + z) \u2227 a \u2265 (x + y + z) \u2227 a \u2265 (x + y + z) \u2227 a \u2265 (x + y + z) \u2227 a \u2265 (x + y + z) \u2227 a \u2265 (x + y + z) \u2227 a \u2265 (x + y + z) \u2227 a \u2265 (x + y + z) \u2227 a \u2265 (x + y + z) \u2227 a \u2265 (x + y + z) \u2227 a \u2265 (x + y + z) \u2227 a \u2265 (x + y + z) \u2227 a \u2265 (x + y + z) \u2227 a \u2265 (x + y + z) \u2227 a \u2265 (x + y + z) \u2227 a \u2265 (x + y + z) \u2227 a \u2265 (x + y + z) \u2227 a \u2265 (x + y + z) \u2227 a \u2265 (x + y + z) \u2227 a \u2265 (x + y + z) \u2227 a \u2265 (x + y + z):= by", "target": "\n  refine \u27e8x + y + z + 1, ?_, ?_, ?_, ?_, ?_, ?_, ?_, ?_, ?_, ?_, ?_, ?_, ?_, ?_, ?_, ?_, ?_, ?_, ?_, ?_, ?_\u27e9 <;> norm_num\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_12437_plus : \u2200 x y z : \u211d, \u2203 c : \u211d, c \u2265 0 \u2227 c \u2265 (x * y * (x - y) ^ 2 + y * z * (y - z) ^ 2 + z * x * (z - x) ^ 2) \u2227 c \u2265 (x * y * (x + y) ^ 2 + y * z * (y + z) ^ 2 + z * x * (z + x) ^ 2):= by", "target": "\n  intro x y z\n  use max 0 (max ((x * y * (x - y) ^ 2 + y * z * (y - z) ^ 2 + z * x * (z - x) ^ 2)) ((x * y * (x + y) ^ 2 + y * z * (y + z) ^ 2 + z * x * (z + x) ^ 2)))\n  constructor <;> simp [mul_nonneg, sub_nonneg, add_nonneg, sq_nonneg] <;> norm_num\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_10218 (a b c : \u211d) (habc : a * b * c = 1) : 2 * (a ^ 5 + b ^ 5 + c ^ 5) * (a + b + c) + 3 * (a ^ 3 + b ^ 3 + c ^ 3) ^ 2 + 6 * (a ^ 2 + b ^ 2 + c ^ 2) * (a + b + c) + 2 * ((a ^ 3 - 1) ^ 2 + (b ^ 3 - 1) ^ 2 + (c ^ 3 - 1) ^ 2) \u2265 6 * (a ^ 4 + b ^ 4 + c ^ 4) * (a ^ 2 + b ^ 2 + c ^ 2) + 17 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_10218_plus (a b c : \u211d) (habc : a * b * c = 1) (h : a \u2264 1 \u2227 b \u2264 1 \u2227 c \u2264 1 \u2228 a \u2265 1 \u2227 b \u2265 1 \u2227 c \u2265 1) : (1 + a ^ 2) * (1 + b ^ 2) * (1 + c ^ 2) * (1 + (a - b) ^ 2 * (a + b) ^ 2 * (b - c) ^ 2 * (b + c) ^ 2 * (c - a) ^ 2 * (c + a) ^ 2) \u2265 1:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_1475_plus (n : \u2115) (h\u2086 : 6 \u2264 n) : (\u2203 k : \u2115, n! \u2265 n^3 \u2228 k \u2264 6) \u2228 (\u2203 k : \u2115, k \u2264 6 \u2227 6 \u2264 n \u2227 n! \u2265 n^3):= by", "target": "\n  apply Or.inl\n  use 0\n  simp [h\u2086]\n  <;> omega\n  <;> simp [h\u2086]\n  <;> omega\n  <;> simp [h\u2086]\n  <;> omega\n  <;> simp [h\u2086]\n  <;> omega\n  <;> simp [h\u2086]\n  <;> omega"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_38939_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : a * b + b * c + c * a \u2264 a^2 + b^2 + c^2 \u2227 a * Real.sqrt (b^2 - b * c + c^2) + b * Real.sqrt (c^2 - c * a + a^2) + c * Real.sqrt (a^2 - a * b + b^2) \u2265 a * b + b * c + c * a \u2228 0 \u2264 Real.sqrt (b^2 - b * c + c^2) \u2227 0 \u2264 Real.sqrt (c^2 - c * a + a^2) \u2227 0 \u2264 Real.sqrt (a^2 - a * b + b^2):= by", "target": "\n  refine' or_iff_not_imp_left.mpr fun h => _\n  have h\u2080 : 0 \u2264 Real.sqrt (b^2 - b * c + c^2) := Real.sqrt_nonneg _\n  have h\u2081 : 0 \u2264 Real.sqrt (c^2 - c * a + a^2) := Real.sqrt_nonneg _\n  have h\u2082 : 0 \u2264 Real.sqrt (a^2 - a * b + b^2) := Real.sqrt_nonneg _\n  exact \u27e8h\u2080, h\u2081, h\u2082\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_44133_plus (a c : \u211d) (b d : \u211d) (hb : 0 < b) (hd : 0 < d) (hbc : 0 < c) (hcd : 0 < a) (h : b + c \u2265 a + d) : (1 / (a + b) + 1 / (b + c) + 1 / (c + d) + 1 / (d + a)) \u2265 2 / (a + b + c + d):= by", "target": "\n  field_simp\n  refine' le_of_sub_nonneg _\n  field_simp\n  ring_nf\n  positivity"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3046 (a b c : \u211d) (ha : 1 \u2264 a \u2227 a \u2264 3) (hb : 1 \u2264 b \u2227 b \u2264 3) (hc : 1 \u2264 c \u2227 c \u2264 3) (hab : a + b + c = 6) : (a^2 * b^2 + b^2 * c^2 + c^2 * a^2 + 12 * a * b * c + 72) / (a * b + b * c + c * a) - 1 / 2 * a * b * c \u2264 21 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3046_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 6) (h\u2082 : a * b + b * c + c * a \u2264 12) : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) * Real.sqrt (1 + c ^ 2) \u2265 2 * (a * b * c + 1) / 9 \u2227 Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) * Real.sqrt (1 + c ^ 2) \u2265 2 * (a * b * c + 1) / 9 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4951 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (1 / a + 2 / b + 2 / c) \u2265 (4 + Real.sqrt 7) / 4 * (1 / (a + b) + 4 / (b + c) + 1 / (c + a)) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4951_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) : \u2203 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 (1 / a + 2 / b + 2 / c) \u2265 (4 + Real.sqrt 7) / 4 * (1 / (a + b) + 4 / (b + c) + 1 / (c + a)) \u2227 (1 / a + 2 / b + 2 / c) \u2265 (4 + Real.sqrt 7) / 4 * (1 / (a + b) + 4 / (b + c) + 1 / (c + a)) \u2227 (1 / a + 2 / b + 2 / c) \u2265 (4 + Real.sqrt 7) / 4 * (1 / (a + b) + 4 / (b + c) + 1 / (c + a)) \u2227 (1 / a + 2 / b + 2 / c) \u2265 (4 + Real.sqrt 7) / 4 * (1 / (a + b) + 4 / (b + c) + 1 / (c + a)) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_21564_plus (x y z : \u211d) (h\u2081 : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z) (h\u2082 : x + y + z \u2264 1) (h\u2083 : x * y + x * z + y * z \u2264 1) : 3 * (Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) - (x * y + x * z + y * z)) \u2265 Real.sqrt (3 * (x ^ 2 + y ^ 2 + z ^ 2)) - 3 * (x * y + x * z + y * z):= by", "target": "\n  have h\u2084 : 0 \u2264 x * y + x * z + y * z := by nlinarith\n  have h\u2085 : Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) \u2265 (x + y + z) / 3 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  have h\u2086 : Real.sqrt (3 * (x ^ 2 + y ^ 2 + z ^ 2)) \u2264 3 * Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith [sq_sqrt (show 0 \u2264 x ^ 2 + y ^ 2 + z ^ 2 from by nlinarith)]\n  nlinarith [h\u2085, h\u2086]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_6306 (\u03b1 \u03b2 \u03b3 A B C : \u211d) (h\u2081 : \u03b1^3 - 2021 * \u03b1^2 + 2020 * \u03b1 + 2019 = 0) (h\u2082 : \u03b2^3 - 2021 * \u03b2^2 + 2020 * \u03b2 + 2019 = 0) (h\u2083 : \u03b3^3 - 2021 * \u03b3^2 + 2020 * \u03b3 + 2019 = 0) (h\u2084 : P = A * \u03b1^3 - B * \u03b1^2 + C * \u03b1 + 4036) (h\u2085 : P = A * \u03b2^3 - B * \u03b2^2 + C * \u03b2 + 4036) (h\u2086 : P = A * \u03b3^3 - B * \u03b3^2 + C * \u03b3 + 4036) : A + B - C = 8068 / 2019 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_6306_plus (\u03b1 \u03b2 \u03b3 A B C : \u211d) (h\u2081 : \u03b1^3 - 2021 * \u03b1^2 + 2020 * \u03b1 + 2019 = 0) (h\u2082 : \u03b2^3 - 2021 * \u03b2^2 + 2020 * \u03b2 + 2019 = 0) (h\u2083 : \u03b3^3 - 2021 * \u03b3^2 + 2020 * \u03b3 + 2019 = 0) (h\u2084 : P = A * \u03b1^3 - B * \u03b1^2 + C * \u03b1 + 4036) (h\u2085 : P = A * \u03b2^3 - B * \u03b2^2 + C * \u03b2 + 4036) (h\u2086 : P = A * \u03b3^3 - B * \u03b3^2 + C * \u03b3 + 4036) (h\u2087 : \u03b1 = 1 \u2228 \u03b1 = (2021 - Real.sqrt 161)/2 \u2228 \u03b1 = (2021 + Real.sqrt 161)/2) (h\u2088 : \u03b2 = 1 \u2228 \u03b2 = (2021 - Real.sqrt 161)/2 \u2228 \u03b2 = (2021 + Real.sqrt 161)/2) (h\u2089 : \u03b3 = 1 \u2228 \u03b3 = (2021 - Real.sqrt 161)/2 \u2228 \u03b3 = (2021 + Real.sqrt 161)/2) (h\u2081\u2080 : A = 1) (h\u2081\u2081 : B = 2021) (h\u2081\u2082 : C = 2019) : A * \u03b1^3 - B * \u03b1^2 + C * \u03b1 + 4036 = 0 \u2228 A * \u03b2^3 - B * \u03b2^2 + C * \u03b2 + 4036 = 0 \u2228 A * \u03b3^3 - B * \u03b3^2 + C * \u03b3 + 4036 = 0 \u2228 A + B - C = 8068 / 2019:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_549_plus : \u2211 m in Finset.Icc 1 100, \u2211 n in Finset.Icc 1 100, (n ^ 2 - m ^ 2) / (n ^ 2 + m ^ 2) ^ 2 \u2264 100 * 100 * 100 * 100 := by", "target": "\n  have : \u2200 m \u2208 Finset.Icc 1 100, \u2200 n \u2208 Finset.Icc 1 100, (n ^ 2 - m ^ 2) / (n ^ 2 + m ^ 2) ^ 2 \u2264 1 := by\n    intro m hm n hn\n    rw [Finset.mem_Icc] at hm hn\n    have : n ^ 2 - m ^ 2 \u2264 n ^ 2 + m ^ 2 := by\n      omega\n    have : 0 \u2264 n ^ 2 + m ^ 2 := by\n      positivity\n    apply Nat.div_le_of_le_mul\n    nlinarith\n  calc\n    (\u2211 m in Finset.Icc 1 100, \u2211 n in Finset.Icc 1 100, (n ^ 2 - m ^ 2) / (n ^ 2 + m ^ 2) ^ 2) \u2264\n       \u2211 m in Finset.Icc 1 100, \u2211 n in Finset.Icc 1 100, 1 := by\n      exact Finset.sum_le_sum fun m hm => Finset.sum_le_sum fun n hn => this m hm n hn\n    _ = 100 * 100 := by\n      simp [Finset.sum_Icc_succ_top]\n    _ \u2264 100 * 100 * 100 * 100 := by\n      norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_7246_plus (n : \u2115) (hn : 1 < n) : (\u2211 k in Finset.Ico 0 n, k) \u2264 n * (n - 1) / 2 \u2228 (\u2211 k in Finset.Ico 0 n, k) < n * (n - 1) / 2 \u2228 (\u2211 k in Finset.Ico 0 n, k) = n * (n - 1) / 2  := by", "target": "\n  apply Or.inl\n  cases n with\n  | zero => contradiction\n  | succ n =>\n    clear hn\n    induction' n with n ih\n    \u00b7 simp [Finset.sum_range_succ]\n    \u00b7 simp_all [Finset.sum_range_succ, Nat.succ_mul, Nat.mul_succ]\n      omega"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_49275_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : a ^ 2 + b ^ 2 + c ^ 2 + (1 / 3) * (a ^ 2 * b ^ 2 * c ^ 2) \u2265 a * b * c * (a * b * c) ^ (1 / 3) \u2227 a ^ 2 + b ^ 2 + c ^ 2 + (1 / 3) * (a ^ 2 * b ^ 2 * c ^ 2) \u2265 a * b * c * (a * b * c) ^ (1 / 3) \u2228 (a * b * c) ^ (1 / 3) \u2264 a ^ 2 + b ^ 2 + c ^ 2 + (1 / 3) * (a ^ 2 * b ^ 2 * c ^ 2) \u2227 (a * b * c) ^ (1 / 3) \u2264 a ^ 2 + b ^ 2 + c ^ 2 + (1 / 3) * (a ^ 2 * b ^ 2 * c ^ 2):= by", "target": "\n  constructor\n  <;> norm_num\n  <;>\n    nlinarith [sq_nonneg (a * b * c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      mul_nonneg hab hb, mul_nonneg hb hc, mul_nonneg hab hc,\n      mul_nonneg (mul_nonneg hab hb) hc, mul_nonneg (mul_nonneg hb hc) hab,\n      mul_nonneg (mul_nonneg hab hc) hb,\n      sq_nonneg (a * b - c), sq_nonneg (b * c - a), sq_nonneg (c * a - b)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_81891_plus (t : \u211d) (n : \u2115) (h\u2081 : t > 0) : (1 + 1/t)^n \u2265 1 + n/t - 1:= by", "target": "\n  have h\u2082 : (1 + 1/t)^n \u2265 1 + n/t - 1 := by\n    have h\u2083 : (1 + 1/t)^n \u2265 1 + n/t := by\n      induction' n with n hn\n      all_goals simp_all [pow_succ]\n      all_goals norm_num\n      all_goals\n        apply le_trans _ (mul_le_mul_of_nonneg_right hn (by positivity))\n        ring_nf\n        apply le_of_sub_nonneg\n        field_simp\n        ring_nf\n        positivity\n    linarith\n  exact h\u2082"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_15286  (a b : \u2115)\n  (h\u2080 : Nat.gcd a b = 1) :\n  Nat.gcd (a^3) (b^3) = 1 \u2228 (\u2203 p, Nat.Prime p \u2227 p \u2223 a \u2227 p \u2223 b):= by", "target": "\n  apply or_iff_not_imp_right.2\n  intro h\n  simp_all [Nat.gcd_eq_right]\n  <;> simp_all [Nat.Prime, Nat.succ_ne_zero]\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_8221_plus (p : \u2115) (hp : 0 < p) (k : \u2115) (hk : 0 < k) : \u2203 (a : \u2115), (\u2211 i in Finset.Ico 0 k, (i + p - 1).choose (p - 1)) \u2264 a * (k + 1) \u2227 a \u2264 (\u2211 i in Finset.Ico 0 k, (i + p - 1).choose (p - 1)) * (k + 1):= by", "target": "\n  refine' \u27e8(\u2211 i in Finset.Ico 0 k, (i + p - 1).choose (p - 1)), _, _\u27e9\n  \u00b7 exact Nat.le_mul_of_pos_right _ (by positivity)\n  \u00b7 exact Nat.le_mul_of_pos_right _ (by positivity)"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4749 (a b c d : \u211d) : (a^3 + b^3 + c^3 + d^3) * (a * b * c * d + a * b * d * c + a * c * d * b + b * c * d * a) - (1 / 3) * (a + b + c + d) * (a * b^3 * c + b * c^3 * d + a * d^3 * b + a^3 * b * d) - (1 / 3) * (a + b + c + d) * (a^3 * c * d + a * b * d^3 + b^3 * c * d + b * c^3 * a) - (1 / 3) * (a + b + c + d) * (a^3 * b * c + a * c^3 * d + b * d^3 * a + b^3 * d * c) \u2265 0 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4749_plus (a b c d : \u211d) (h\u2080 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 0 \u2264 d) (h\u2081 : a + b + c + d = 1) (h\u2082 : a * b + a * c + a * d + b * c + b * d + c * d \u2264 1) : (1 - a) * (1 - b) * (1 - c) * (1 - d) \u2265 0 \u2227 (1 - a) * (1 - b) * (1 - c) * (1 - d) * (a + b + c + d) \u2265 0 \u2227 (1 - a) * (1 - b) * (1 - c) * (1 - d) * (a + b + c + d) * (a + b + c + d) \u2265 0 \u2227 (1 - a) * (1 - b) * (1 - c) * (1 - d) * (a + b + c + d) * (a + b + c + d) * (a + b + c + d) \u2265 0 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_62604_plus : \u220f' n : \u2115, n \u2265 4 \u2192 (1 - (1:\u211d) / 3 ^ n) > exp (-3 / 160) \u2228 \u2211' n : \u2115, (1/ (n + 1)^2) \u2264 1 \u2228 \u2211' n : \u2115, (1/ (n + 1)^2) \u2265 1:= by", "target": "\n  intro h\n  by_cases h\u2081 : \u220f' n : \u2115, n \u2265 4\n  <;> by_cases h\u2082 : \u2211' n : \u2115, (1/ (n + 1)^2) \u2264 1\n  <;> by_cases h\u2083 : \u2211' n : \u2115, (1/ (n + 1)^2) \u2265 1\n  <;> simp_all\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_68820_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) : (x * y + y * z + z * x) ^ 3 \u2264 (x ^ 2 + y ^ 2 + z ^ 2) ^ 3 \u2228 (x * y + y * z + z * x) ^ 3 \u2264 (x ^ 2 + y ^ 2 + z ^ 2) ^ 3 \u2228 (x * y + y * z + z * x) ^ 3 \u2264 (x ^ 2 + y ^ 2 + z ^ 2) ^ 3 \u2228 (x * y + y * z + z * x) ^ 3 \u2264 (x ^ 2 + y ^ 2 + z ^ 2) ^ 3 \u2228 (x * y + y * z + z * x) ^ 3 \u2264 (x ^ 2 + y ^ 2 + z ^ 2) ^ 3 \u2228 (x * y + y * z + z * x) ^ 3 \u2264 (x ^ 2 + y ^ 2 + z ^ 2) ^ 3 := by", "target": "\n  have h\u2080 : (x * y + y * z + z * x) ^ 3 \u2264 (x ^ 2 + y ^ 2 + z ^ 2) ^ 3 := by\n    refine' pow_le_pow_of_le_left (by positivity) _ 3\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n      mul_self_nonneg (x ^ 2 - y ^ 2), mul_self_nonneg (y ^ 2 - z ^ 2),\n      mul_self_nonneg (z ^ 2 - x ^ 2), mul_self_nonneg (x * y - y * z),\n      mul_self_nonneg (y * z - z * x), mul_self_nonneg (z * x - x * y)]\n  tauto"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_47007_plus (a b : \u211d) (hab : a * b \u2264 1) (ha : 0 \u2264 a) (hb : 0 \u2264 b) :  Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) \u2265 1 + a * b - (1 + a * b) * (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) / 2  := by", "target": "\n  have h\u2080 : 0 \u2264 Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) := by positivity\n  have h\u2081 : 0 \u2264 Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) * (1 + a * b) := by positivity\n  nlinarith [sq_sqrt (show 0 \u2264 1 + a ^ 2 by positivity),\n    sq_sqrt (show 0 \u2264 1 + b ^ 2 by positivity),\n    mul_self_nonneg (a - b),\n    mul_self_nonneg (Real.sqrt (1 + a ^ 2) - Real.sqrt (1 + b ^ 2))]\n  <;> linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3845 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : (1 / (2 * a ^ 2 + b ^ 2 + c ^ 2) + 1 / (2 * b ^ 2 + c ^ 2 + a ^ 2) + 1 / (2 * c ^ 2 + a ^ 2 + b ^ 2)) \u2264 (3 / 4) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3845_plus (a b c : \u211d) (hab : 0 < a \u2227 0 < b \u2227 0 < c) (h : a + b + c = 3) (h' : a * b + b * c + c * a = 3 * Real.sqrt 3) : a ^ 2 / (b ^ 2 + c ^ 2 + a ^ 2) + b ^ 2 / (a ^ 2 + c ^ 2 + b ^ 2) + c ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) \u2265 3 / 5 \u2227 a ^ 2 / (b ^ 2 + c ^ 2 + a ^ 2) + b ^ 2 / (a ^ 2 + c ^ 2 + b ^ 2) + c ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) \u2264 3 / 2 \u2228 a ^ 2 / (b ^ 2 + c ^ 2 + a ^ 2) + b ^ 2 / (a ^ 2 + c ^ 2 + b ^ 2) + c ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) \u2265 3 / 2 \u2228 a ^ 2 / (b ^ 2 + c ^ 2 + a ^ 2) + b ^ 2 / (a ^ 2 + c ^ 2 + b ^ 2) + c ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) \u2264 3 / 5 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_9473_plus (x y : \u211d) (h\u2081 : x / y = 6.5 / 9.1) : y \u2260 0 \u2228 x = 0 \u2228 y = 9.1 / 6.5 * x  := by", "target": "\n  by_cases h : y = 0 <;> by_cases h' : x = 0 <;> simp_all [div_eq_iff, mul_comm]\n  <;> norm_num at h\u2081 <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_36557_plus (n : \u2115) (hn : 3 \u2264 n) : \u2211 k in Finset.Icc 1 n, k \u2265 n \u2227 \u2211 k in Finset.Icc 1 n, k \u2264 n * (n + 1) / 2:= by", "target": "\n  have h\u2081 : \u2211 k in Finset.Icc 1 n, k \u2265 n := by\n    have h\u2082 : \u2211 k in Finset.Icc 1 n, k \u2265 n := by\n      calc\n        \u2211 k in Finset.Icc 1 n, k \u2265 \u2211 k in Finset.Icc 1 n, 1 := by\n          exact Finset.sum_le_sum fun x hx \u21a6 by\n            simp_all [Finset.mem_Icc]\n            <;> omega\n        _ = n := by simp\n    exact h\u2082\n  have h\u2082 : \u2211 k in Finset.Icc 1 n, k \u2264 n * (n + 1) / 2 := by\n    have h\u2083 : \u2211 k in Finset.Icc 1 n, k \u2264 n * (n + 1) / 2 := by\n      calc\n        \u2211 k in Finset.Icc 1 n, k \u2264 \u2211 k in Finset.Icc 1 n, k := by rfl\n        _ = n * (n + 1) / 2 := by\n          clear hn h\u2081\n          induction' n with n ih\n          all_goals simp_all [Finset.sum_Icc_succ_top, Nat.succ_mul, Nat.mul_succ, Nat.mul_one, Nat.add_comm, Nat.add_left_comm]\n          all_goals ring_nf at *\n          all_goals omega\n    exact h\u2083\n  exact \u27e8h\u2081, h\u2082\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_50373_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) : x ^ 3 + y ^ 3 + z ^ 3 + 3 * x * y * z \u2265 x ^ 2 * y + x * y ^ 2 + y ^ 2 * z + y * z ^ 2 + z ^ 2 * x + z * x ^ 2 \u2227 (x * y * z * (x - y) ^ 2 * (y - z) ^ 2 * (z - x) ^ 2 \u2265 0):= by", "target": "\n  constructor\n  case left =>\n    cases' le_total x y with h h <;> cases' le_total y z with h' h' <;> cases' le_total z x with h'' h'' <;>\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x), mul_nonneg hx hy, mul_nonneg hy hz,\n      mul_nonneg hz hx, mul_nonneg (sq_nonneg (x - y)) hz, mul_nonneg (sq_nonneg (y - z)) hx,\n      mul_nonneg (sq_nonneg (z - x)) hy]\n  case right =>\n    have : 0 \u2264 x * y := by positivity\n    have : 0 \u2264 y * z := by positivity\n    have : 0 \u2264 z * x := by positivity\n    have : 0 \u2264 (x - y) ^ 2 := by positivity\n    have : 0 \u2264 (y - z) ^ 2 := by positivity\n    have : 0 \u2264 (z - x) ^ 2 := by positivity\n    have : 0 \u2264 x * y * z := by positivity\n    have : 0 \u2264 (x * y * z) * (x - y) ^ 2 := by positivity\n    have : 0 \u2264 (x * y * z) * (x - y) ^ 2 * (y - z) ^ 2 := by positivity\n    have : 0 \u2264 (x * y * z) * (x - y) ^ 2 * (y - z) ^ 2 * (z - x) ^ 2 := by positivity\n    linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_48519_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : x^((2:\u211d) * y) + y^((2:\u211d) * z) + z^((2:\u211d) * x) \u2265 3/ 4 \u2228 \u2203 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a * b * c \u2264 1 \u2227 a * b + b * c + c * a \u2264 3 \u2227 a * b * c * (a + b + c) \u2264 3  := by", "target": "\n  refine' or_iff_not_imp_left.2 fun h => _\n  use 1 / 2, 1 / 2, 1 / 2\n  norm_num\n  <;> norm_num\n  <;> ring_nf\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_26195_plus (x y z : \u211d) (h : 0 < x \u2227 0 < y \u2227 0 < z) (h' : x * y * z = 1) : (x * y + y * z + z * x) * (x * y + y * z + z * x) * (x * y + y * z + z * x) \u2265 27 * (x * y * z) * (x * y * z) * (x * y * z):= by", "target": "\n  obtain \u27e8h\u2081, h\u2082, h\u2083\u27e9 := h\n  have h\u2084 : 0 < x * y := by positivity\n  have h\u2085 : 0 < y * z := by positivity\n  have h\u2086 : 0 < z * x := by positivity\n  have h\u2087 : 0 < x * y * z := by positivity\n  have h\u2088 : 0 < x * y * z * (x * y + y * z + z * x) := by positivity\n  nlinarith [sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y),\n    mul_self_nonneg (x * y + y * z + z * x), mul_self_nonneg (x * y + y * z + z * x - 3 * (x * y * z))]\n  <;> assumption\n  <;> assumption\n  <;> assumption"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_17686_plus : \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a * b * c \u2264 1 \u2192 1 / (1 + a ^ 2) + 1 / (1 + b ^ 2) + 1 / (1 + c ^ 2) \u2265 3 / (3 + a * b * c):= by", "target": "\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have : 0 \u2264 a * b := by positivity\n  have : 0 \u2264 b * c := by positivity\n  have : 0 \u2264 a * c := by positivity\n  have : 0 \u2264 a * b * c := by positivity\n  field_simp\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n    mul_self_nonneg (a * b), mul_self_nonneg (b * c), mul_self_nonneg (a * c),\n    mul_self_nonneg (a * b * c)]\n  positivity\n  positivity"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2183 (x y z : \u211d) (hx : x > 0) (hy : y > 0) (hz : z > 0) (ha : \u03b1 > 0) (hb : \u03b2 > 0) : (x^(\u03b1 + \u03b2) / (y^\u03b1 + z^\u03b1) + y^(\u03b1 + \u03b2) / (z^\u03b1 + x^\u03b1) + z^(\u03b1 + \u03b2) / (x^\u03b1 + y^\u03b1) \u2265 1 / 2 * (y^(\u03b1 + \u03b2) + z^(\u03b1 + \u03b2)) / (y^\u03b1 + z^\u03b1) + 1 / 2 * (z^(\u03b1 + \u03b2) + x^(\u03b1 + \u03b2)) / (z^\u03b1 + x^\u03b1) + 1 / 2 * (x^(\u03b1 + \u03b2) + y^(\u03b1 + \u03b2)) / (x^\u03b1 + y^\u03b1) \u2227 1 / 2 * (y^(\u03b1 + \u03b2) + z^(\u03b1 + \u03b2)) / (y^\u03b1 + z^\u03b1) + 1 / 2 * (z^(\u03b1 + \u03b2) + x^(\u03b1 + \u03b2)) / (z^\u03b1 + x^\u03b1) + 1 / 2 * (x^(\u03b1 + \u03b2) + y^(\u03b1 + \u03b2)) / (x^\u03b1 + y^\u03b1) \u2265 (x^\u03b2 + y^\u03b2 + z^\u03b2) / 2) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2183_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) (h : 0 < x * y * z) : x ^ 2 * y ^ 2 * z ^ 2 * (x + y + z) ^ 2 / (x * y * z) \u2264 1:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4999 (a b : \u211d) (hab: a * b = 1) (ha : 0 < a) (hb : 0 < b) : (a / (1 - b) + b / (1 - a)) \u2265 3 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4999_plus (a b : \u211d) (hab : 0 < a \u2227 0 < b) (h : a * b \u2264 1) : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) \u2265 2 * a * b:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_22252_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 1) (h\u2082 : a * b + b * c + c * a \u2264 1) : 1 - (a * b) ^ 2 / (a + b) ^ 2 - (b * c) ^ 2 / (b + c) ^ 2 - (c * a) ^ 2 / (c + a) ^ 2 \u2265 0 \u2227  1 - (a * b) ^ 2 / (a + b) ^ 2 - (b * c) ^ 2 / (b + c) ^ 2 - (c * a) ^ 2 / (c + a) ^ 2 \u2265 0 \u2227  1 - (a * b) ^ 2 / (a + b) ^ 2 - (b * c) ^ 2 / (b + c) ^ 2 - (c * a) ^ 2 / (c + a) ^ 2 \u2265 0  := by", "target": "\n  have h\u2081 : 0 \u2264 a * b := by nlinarith\n  have h\u2083 : 0 \u2264 b * c := by nlinarith\n  have h\u2084 : 0 \u2264 c * a := by nlinarith\n  have h\u2085 : (a * b) ^ 2 / (a + b) ^ 2 \u2264 a * b := by\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (a - b)]\n  have h\u2086 : (b * c) ^ 2 / (b + c) ^ 2 \u2264 b * c := by\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (b - c)]\n  have h\u2087 : (c * a) ^ 2 / (c + a) ^ 2 \u2264 c * a := by\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (c - a)]\n  exact \u27e8by nlinarith, by nlinarith, by nlinarith\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_17064_plus (x y z : \u211d) (h\u2081 : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z \u2227 x + y + z \u2264 6) (h\u2082 : x * y + y * z + z * x \u2264 9) : x ^ 2 * y ^ 2 * z ^ 2 \u2264 (x + y + z) ^ 3:= by", "target": "\n  rcases h\u2081 with \u27e8hx, hy, hz, h\u27e9\n  have h\u2083 : 0 \u2264 x * y := by positivity\n  have h\u2084 : 0 \u2264 y * z := by positivity\n  have h\u2085 : 0 \u2264 z * x := by positivity\n  have h\u2086 : 0 \u2264 x * y * z := by positivity\n  have h\u2087 : x * y * z \u2264 x + y + z := by\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  nlinarith [mul_self_nonneg (x * y + y * z + z * x),\n    mul_self_nonneg (x * y - y * z), mul_self_nonneg (y * z - z * x),\n    mul_self_nonneg (z * x - x * y)]\n  <;> assumption\n  <;> assumption\n  <;> assumption"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_53943_plus : \u2200 a b c : \u211d, a * b > 0 \u2227 b * c > 0 \u2227 c * a > 0 \u2192  a ^ 6 + 4 * (a ^ 5 * b + a ^ 5 * c + b ^ 5 * a + b ^ 5 * c + c ^ 5 * a + c ^ 5 * b) + 4 * (a ^ 3 * b ^ 3 + a ^ 3 * c ^ 3 + b ^ 3 * c ^ 3 + b ^ 3 * a ^ 3 + c ^ 3 * b ^ 3 + c ^ 3 * a ^ 3) + 5 * (b ^ 4 * c ^ 2 + b ^ 4 * a ^ 2 + a ^ 4 * c ^ 2 + a ^ 4 * b ^ 2 + c ^ 4 * a ^ 2 + c ^ 4 * b ^ 2) \u2265 4 * (a ^ 3 * b * c ^ 2 + a ^ 3 * b ^ 2 * c + b ^ 3 * c * a ^ 2 + b ^ 3 * c ^ 2 * a + c ^ 3 * a * b ^ 2 + c ^ 3 * b ^ 2 * a) + 18 * (a ^ 2 * b ^ 2 * c ^ 2):= by", "target": "\n  rintro a b c \u27e8h\u2081, h\u2082, h\u2083\u27e9\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    mul_nonneg (sq_nonneg a) (sq_nonneg b), mul_nonneg (sq_nonneg b) (sq_nonneg c),\n    mul_nonneg (sq_nonneg c) (sq_nonneg a),\n    mul_nonneg (sq_nonneg (a - b)) (sq_nonneg (b - c)),\n    mul_nonneg (sq_nonneg (b - c)) (sq_nonneg (c - a)),\n    mul_nonneg (sq_nonneg (c - a)) (sq_nonneg (a - b))]\n  <;> nlinarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_1182_plus (a b c x y z : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b * c \u2264 1) (h : 1 / (a ^ 2 + 1) = x) (h' : 1 / (b ^ 2 + 1) = y) (h'' : 1 / (c ^ 2 + 1) = z) : (1 / (a * b + 1) + 1 / (b * c + 1) + 1 / (c * a + 1)) \u2265 (1 / 3) * (1 / 2):= by", "target": "\n  have h\u2081 : 0 \u2264 a * b := by positivity\n  have h\u2082 : 0 \u2264 b * c := by positivity\n  have h\u2083 : 0 \u2264 c * a := by positivity\n  have h\u2084 : 0 \u2264 a * b * c := by positivity\n  field_simp [h, h', h'']\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (a * b - 1), sq_nonneg (b * c - 1), sq_nonneg (c * a - 1),\n    sq_nonneg (a * b * c - 1)]\n  positivity\n  positivity"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_77793_plus (t : \u211d)\n  (z : \u211d)\n  (h\u2080 : z^2 = (125 - 100 * t)^2 + (50 * t)^2) :\n  20 \u2264 z \u2228 z \u2264 10 \u2228 10 \u2264 z \u2227 z \u2264 20 \u2228 20 \u2264 z \u2227 z \u2264 30 \u2228 30 \u2264 z \u2227 z \u2264 40 \u2228 40 \u2264 z \u2227 z \u2264 50 \u2228 50 \u2264 z \u2227 z \u2264 60 \u2228 60 \u2264 z \u2227 z \u2264 70 \u2228 70 \u2264 z \u2227 z \u2264 80 \u2228 80 \u2264 z \u2227 z \u2264 90 \u2228 90 \u2264 z \u2227 z \u2264 100 := by", "target": "\n  by_contra! h\u2081\n  cases' le_total 20 z with h\u2082 h\u2082 <;>\n    cases' le_total 10 z with h\u2083 h\u2083 <;>\n    simp_all [h\u2080, h\u2081, h\u2082, h\u2083, le_refl, le_of_lt, not_le, not_lt, le_of_lt]\n  all_goals nlinarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5715 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) : (1 / (a + b * c + 3 * a * b * c) + 1 / (b + c * a + 3 * b * c * a) + 1 / (c + a * b + 3 * c * a * b) \u2264 2 / (a * b + b * c + c * a + a * b * c)) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5715_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (hab2 : a + b + c \u2264 1) (h : 0 \u2264 a * b) (h2 : 0 \u2264 a * c) (h3 : 0 \u2264 b * c) : (1 - a) * (1 - b) * (1 - c) * (a * b + b * c + c * a) \u2265 0 \u2227 (1 - a) * (1 - b) * (1 - c) * (a * b + b * c + c * a + 3 * a * b * c) \u2265 0 \u2227 (1 - a) * (1 - b) * (1 - c) * (3 * a * b * c) \u2265 0 \u2227 (1 - a) * (1 - b) * (1 - c) \u2265 0:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_43017_plus (n : \u2115) (hn : 1 < n) : (\u2203 x y : \u211d, 1 < x \u2227 1 < y \u2227 (1 : \u211d) < (x ^ n + y ^ n)/(x ^ n + y ^ n - 1)) \u2228 (\u2200 x y : \u211d, 1 < x \u2228 1 < y \u2192 (x ^ n + y ^ n)/(x ^ n + y ^ n - 1) \u2264 1)  := by", "target": "\n  apply or_iff_not_imp_right.mpr\n  intro h\n  use 2\n  use 2\n  norm_num\n  have h1 : (2 : \u211d) ^ n \u2265 2 := by\n    have h1 : (2 : \u211d) ^ n \u2265 2 ^ 1 := by\n      apply pow_le_pow_right\n      norm_num\n      linarith\n    linarith\n  have h2 : (2 : \u211d) ^ n + 2 ^ n \u2265 2 + 2 := by\n    linarith\n  have h3 : (2 : \u211d) ^ n + 2 ^ n - 1 \u2265 1 := by\n    linarith\n  have h4 : (2 : \u211d) ^ n + 2 ^ n - 1 > 0 := by\n    linarith\n  field_simp [h4]\n  rw [lt_div_iff]\n  nlinarith\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_26422_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a + b + c = 1) : (1 - a ^ 2 - b ^ 2) * (1 - b ^ 2 - c ^ 2) * (1 - c ^ 2 - a ^ 2) \u2265 4 * a * b * c * (a * b + b * c + c * a):= by", "target": "\n  have h\u2083 : (a + b + c) ^ 2 = 1 := by simp [h\u2082]\n  have h\u2084 : 0 \u2264 a * b := by nlinarith\n  have h\u2085 : 0 \u2264 b * c := by nlinarith\n  have h\u2086 : 0 \u2264 c * a := by nlinarith\n  have h\u2087 : 0 \u2264 a * b * c := by nlinarith\n  have h\u2088 : (1 - a ^ 2 - b ^ 2) \u2265 0 := by nlinarith\n  have h\u2089 : (1 - b ^ 2 - c ^ 2) \u2265 0 := by nlinarith\n  have h\u2081\u2080 : (1 - c ^ 2 - a ^ 2) \u2265 0 := by nlinarith\n  have h\u2081\u2081 : (1 - a ^ 2 - b ^ 2) * (1 - b ^ 2 - c ^ 2) * (1 - c ^ 2 - a ^ 2) \u2265 0 := by positivity\n  nlinarith [mul_self_nonneg (a * b + b * c + c * a),\n    mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a),\n    mul_self_nonneg (c * a - a * b)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_50992_plus (a b : \u211d) (hab : 0 < a \u2227 0 < b) : Real.sqrt (a ^ 2 + b ^ 2) \u2265 (Real.sqrt 2 - 1) * (a + b) \u2227 (Real.sqrt 2 - 1) * (a + b) \u2264 Real.sqrt (a ^ 2 + b ^ 2):= by", "target": "\n  have h : 0 < a := hab.1\n  have hb : 0 < b := hab.2\n  have h\u2080 : 0 \u2264 Real.sqrt 2 - 1 := by\n    norm_num [Real.sqrt_nonneg, Real.sqrt_le_sqrt]\n  have h\u2081 : 0 \u2264 (a - b) ^ 2 := by nlinarith\n  have h\u2082 : 0 \u2264 (a + b) ^ 2 := by nlinarith\n  have h\u2083 : 0 \u2264 Real.sqrt (a ^ 2 + b ^ 2) := by positivity\n  have h\u2084 : 0 \u2264 Real.sqrt 2 * (a + b) := by positivity\n  have h\u2085 : 0 \u2264 Real.sqrt 2 * (a + b) ^ 2 := by positivity\n  have h\u2086 : (Real.sqrt 2 - 1) * (a + b) \u2264 Real.sqrt (a ^ 2 + b ^ 2) := by\n    nlinarith [sq_sqrt (show 0 \u2264 a ^ 2 + b ^ 2 by positivity),\n      sq_sqrt (show 0 \u2264 2 by positivity),\n      mul_self_nonneg (a - b),\n      mul_self_nonneg (Real.sqrt 2 - 1)]\n  have h\u2087 : Real.sqrt (a ^ 2 + b ^ 2) \u2265 (Real.sqrt 2 - 1) * (a + b) := by\n    nlinarith [sq_sqrt (show 0 \u2264 a ^ 2 + b ^ 2 by positivity),\n      sq_sqrt (show 0 \u2264 2 by positivity),\n      mul_self_nonneg (a - b),\n      mul_self_nonneg (Real.sqrt 2 - 1)]\n  exact \u27e8h\u2087, h\u2086\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_18205_plus (a b c : \u211d) (h\u2081 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2082 : a * b * c = 1) (h\u2083 : a + b + c \u2264 3) : 1 / a + 1 / b + 1 / c + 9 / (a + b + c) \u2265 6 \u2227 1 / a + 1 / b + 1 / c \u2265 9 / 3 \u2227 9 / (a + b + c) \u2265 3:= by", "target": "\n  rcases h\u2081 with \u27e8ha, hb, hc\u27e9\n  have h\u2084 : 0 < a * b := mul_pos ha hb\n  have h\u2085 : 0 < b * c := mul_pos hb hc\n  have h\u2086 : 0 < c * a := mul_pos hc ha\n  have h\u2087 : 0 < a * b * c := by positivity\n  have h\u2088 : 0 < a + b + c := by linarith\n  have h\u2089 : 0 < a * b * c * (a + b + c) := by positivity\n  have h\u2081\u2080 : 0 < a * b * c * (a + b + c) * (a + b + c) := by positivity\n  constructor\n  \u00b7 field_simp [h\u2087, h\u2088]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      sq_nonneg (a + b + c - 3)]\n  \u00b7 constructor\n    \u00b7 field_simp [h\u2087, h\u2088]\n      rw [le_div_iff (by positivity)]\n      nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n        sq_nonneg (a + b + c - 3)]\n    \u00b7 field_simp [h\u2088]\n      rw [le_div_iff (by positivity)]\n      nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n        sq_nonneg (a + b + c - 3)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_43135_plus (a b c d : \u211d) (hab : 0 \u2264 a \u2227 a \u2264 1) (hb : 0 \u2264 b \u2227 b \u2264 1) (hc : 0 \u2264 c \u2227 c \u2264 1) (hd : 0 \u2264 d \u2227 d \u2264 1) :\n  (1 - a) * (1 - b) * (1 - c) * (1 - d) \u2264 (1 - a * b * c * d) * (1 + a * b + b * c + c * d + d * a):= by", "target": "\n  have h1 : 0 \u2264 a * b := by nlinarith\n  have h2 : 0 \u2264 b * c := by nlinarith\n  have h3 : 0 \u2264 c * d := by nlinarith\n  have h4 : 0 \u2264 d * a := by nlinarith\n  have h5 : 0 \u2264 a * b * c := by nlinarith\n  have h6 : 0 \u2264 b * c * d := by nlinarith\n  have h7 : 0 \u2264 c * d * a := by nlinarith\n  have h8 : 0 \u2264 d * a * b := by nlinarith\n  have h9 : 0 \u2264 a * b * c * d := by nlinarith\n  nlinarith [mul_le_mul_of_nonneg_right hab.2 (sub_nonneg.mpr hb.1),\n    mul_le_mul_of_nonneg_right hb.2 (sub_nonneg.mpr hc.1),\n    mul_le_mul_of_nonneg_right hc.2 (sub_nonneg.mpr hd.1),\n    mul_le_mul_of_nonneg_right hd.2 (sub_nonneg.mpr h1),\n    mul_le_mul_of_nonneg_right h1 (sub_nonneg.mpr h2),\n    mul_le_mul_of_nonneg_right h2 (sub_nonneg.mpr h3),\n    mul_le_mul_of_nonneg_right h3 (sub_nonneg.mpr h4),\n    mul_le_mul_of_nonneg_right h4 (sub_nonneg.mpr h5),\n    mul_le_mul_of_nonneg_right h5 (sub_nonneg.mpr h6),\n    mul_le_mul_of_nonneg_right h6 (sub_nonneg.mpr h7),\n    mul_le_mul_of_nonneg_right h7 (sub_nonneg.mpr h8),\n    mul_le_mul_of_nonneg_right h8 (sub_nonneg.mpr h9)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1316 (x : \u211d) (h : x > 0) : 1 / (4 * x^2 + 1) \u2265 -8 * x / 25 + 13 / 25 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1316_plus (x : \u211d) (h : x > 0) : 1 / (4 * x^2 + 1) \u2265 -8 * x / 25 + 13 / 25 \u2228 (16 * x^2 - 24 * x + 9) \u2265 0 \u2228 (16 * x^2 - 24 * x + 9) \u2265 0 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_11635_plus : \u2200 \u03b8 : \u211d, Real.cos (\u03b8 + 45) \u2265 -1 \u2227 Real.cos (\u03b8 + 45) \u2264 1 \u2227 Real.cos (\u03b8 + 45) \u2264 1 + Real.sqrt 2 \u2227 Real.cos (\u03b8 + 45) \u2265 -1 - Real.sqrt 2 \u2227 Real.cos (\u03b8 + 45) \u2264 1 + Real.sqrt 2 \u2227 Real.cos (\u03b8 + 45) \u2265 -1 - Real.sqrt 2 \u2227 Real.cos (\u03b8 + 45) \u2264 1 + Real.sqrt 2 \u2227 Real.cos (\u03b8 + 45) \u2265 -1 - Real.sqrt 2 \u2227 Real.cos (\u03b8 + 45) \u2264 1 + Real.sqrt 2 \u2227 Real.cos (\u03b8 + 45) \u2265 -1 - Real.sqrt 2 := by", "target": "\n  intro \u03b8\n  have h\u2080 : Real.cos (\u03b8 + 45) \u2265 -1 := by\n    linarith [Real.neg_one_le_cos (\u03b8 + 45)]\n  have h\u2081 : Real.cos (\u03b8 + 45) \u2264 1 := by\n    linarith [Real.cos_le_one (\u03b8 + 45)]\n  have h\u2082 : Real.cos (\u03b8 + 45) \u2264 1 + Real.sqrt 2 := by\n    nlinarith [Real.sqrt_nonneg 2, Real.cos_sq_le_one (\u03b8 + 45)]\n  have h\u2083 : Real.cos (\u03b8 + 45) \u2265 -1 - Real.sqrt 2 := by\n    nlinarith [Real.sqrt_nonneg 2, Real.cos_sq_le_one (\u03b8 + 45)]\n  exact \u27e8h\u2080, h\u2081, h\u2082, h\u2083, h\u2082, h\u2083, h\u2082, h\u2083, h\u2082, h\u2083\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2501 (a b : \u211d) (ha : 1 < a) (hb : 1 < b) (hab : \u2200 n : \u2115, (Int.floor (a^n) = Int.floor (b^n))) : a = b := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2501_plus (a b : \u211d) (hab : \u2200 n : \u2115, (Real.sqrt n) \u2264 a ^ n \u2227 (Real.sqrt n) \u2264 b ^ n) : a \u2265 1 \u2227 b \u2265 1 \u2228 a \u2264 1 \u2227 b \u2264 1 \u2228 (1 < a \u2227 1 < b) \u2228 (a \u2264 1 \u2227 b \u2264 1) \u2228 (1 < a \u2227 1 < b):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_81578_plus (n : \u2115) (hn : 1 < n) : (\u2203 x y : \u211d, 1 < x \u2227 1 < y \u2227 y \u2260 x \u2227 (1 - x ^ 2) * (1 - y ^ 2) \u2264 1 ) \u2228 (\u2203 x : \u211d, 1 < x \u2227 \u2203 y : \u211d, 1 < y \u2227 y \u2260 x \u2227 (1 - x ^ 2) * (1 - y ^ 2) \u2264 1) := by", "target": "\n  apply Or.inl\n  use 1 + 1 / 2, 1 + 1 / 3\n  norm_num\n  <;>\n  aesop\n  <;>\n  aesop\n  <;>\n  aesop\n  <;>\n  aesop\n  <;>\n  aesop"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_69146_plus (a b c : \u211d) (k : \u2115) (h\u2081 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2082 : 0 \u2264 k) : (k + 2) ^ 2 / 9 * (a ^ 2 + b ^ 2 + c ^ 2) * (1 / a ^ 2 + 1 / b ^ 2 + 1 / c ^ 2) \u2265 (a / b + b / c + c / a + k - 1) ^ 2 \u2227 (a / b + b / c + c / a + k - 1) ^ 2 \u2265 (k + 2) ^ 2 / 9 * (a + b + c) * (1 / a + 1 / b + 1 / c) \u2228 (k + 2) ^ 2 / 9 * (a ^ 2 + b ^ 2 + c ^ 2) * (1 / a ^ 2 + 1 / b ^ 2 + 1 / c ^ 2) \u2265 0 \u2227 (a / b + b / c + c / a + k - 1) ^ 2 \u2265 0 := by", "target": "\n  rcases h\u2081 with \u27e8h\u2081_left, h\u2081_middle, h\u2081_right\u27e9\n  refine' Or.inr \u27e8by positivity, by positivity\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_37051_plus (a b c d : \u211d) (habc : a + b + c + d = 4) (h : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 0 \u2264 d) : Real.sqrt (a ^ 2 + b ^ 2) + Real.sqrt (c ^ 2 + d ^ 2) \u2265 Real.sqrt (2 * (a * c + b * d)) \u2227 Real.sqrt (a ^ 2 + b ^ 2) + Real.sqrt (c ^ 2 + d ^ 2) \u2265 Real.sqrt (2 * (a * d + b * c)) \u2227 Real.sqrt (a ^ 2 + b ^ 2) + Real.sqrt (c ^ 2 + d ^ 2) \u2265 Real.sqrt (2 * (a * b + c * d)) \u2227 Real.sqrt (a ^ 2 + b ^ 2) + Real.sqrt (c ^ 2 + d ^ 2) \u2265 Real.sqrt (2 * (a * c + b * d)) := by", "target": "\n  have h\u2080 : Real.sqrt (a ^ 2 + b ^ 2) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2081 : Real.sqrt (c ^ 2 + d ^ 2) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2082 : Real.sqrt (a ^ 2 + b ^ 2) + Real.sqrt (c ^ 2 + d ^ 2) \u2265 0 := add_nonneg h\u2080 h\u2081\n  have h\u2083 : Real.sqrt (2 * (a * c + b * d)) \u2264 Real.sqrt (a ^ 2 + b ^ 2) + Real.sqrt (c ^ 2 + d ^ 2) := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_sqrt (show 0 \u2264 a ^ 2 + b ^ 2 from by nlinarith),\n        sq_sqrt (show 0 \u2264 c ^ 2 + d ^ 2 from by nlinarith),\n        sq_nonneg (a - c), sq_nonneg (b - d), sq_nonneg (a + c), sq_nonneg (b + d)]\n  have h\u2084 : Real.sqrt (2 * (a * d + b * c)) \u2264 Real.sqrt (a ^ 2 + b ^ 2) + Real.sqrt (c ^ 2 + d ^ 2) := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_sqrt (show 0 \u2264 a ^ 2 + b ^ 2 from by nlinarith),\n        sq_sqrt (show 0 \u2264 c ^ 2 + d ^ 2 from by nlinarith),\n        sq_nonneg (a - d), sq_nonneg (b - c), sq_nonneg (a + d), sq_nonneg (b + c)]\n  have h\u2085 : Real.sqrt (2 * (a * b + c * d)) \u2264 Real.sqrt (a ^ 2 + b ^ 2) + Real.sqrt (c ^ 2 + d ^ 2) := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_sqrt (show 0 \u2264 a ^ 2 + b ^ 2 from by nlinarith),\n        sq_sqrt (show 0 \u2264 c ^ 2 + d ^ 2 from by nlinarith),\n        sq_nonneg (a - b), sq_nonneg (c - d), sq_nonneg (a + b), sq_nonneg (c + d)]\n  exact \u27e8h\u2083, h\u2084, h\u2085, h\u2083\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1392 (a b c : \u211d) (hab : a + b + c = 1) : 1 / (1 + a ^ 2) + 1 / (1 + b ^ 2) + 1 / (1 + c ^ 2) \u2264 27 / 10 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1392_plus (a b c : \u211d) (hab : a + b + c = 1) (h : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) : 1 / (1 + a ^ 2) + 1 / (1 + b ^ 2) + 1 / (1 + c ^ 2) \u2264 27 / 10 \u2228 (1 + a ^ 2)\u207b\u00b9 + (1 + b ^ 2)\u207b\u00b9 + (1 + c ^ 2)\u207b\u00b9 \u2264 27 / 10 \u2228 (1 + a ^ 2)\u207b\u00b9 + (1 + b ^ 2)\u207b\u00b9 + (1 + c ^ 2)\u207b\u00b9 \u2264 27 / 10 \u2228 (1 + a ^ 2)\u207b\u00b9 + (1 + b ^ 2)\u207b\u00b9 + (1 + c ^ 2)\u207b\u00b9 \u2264 27 / 10 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_16528_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a + b + c = 1) : (1 - a * b) * (1 - b * c) * (1 - a * c) \u2265 (1 - a - b - c) ^ 3 \u2227 (1 - a * b) * (1 - b * c) * (1 - a * c) \u2265 0 \u2227 (1 - a - b - c) ^ 3 \u2264 1:= by", "target": "\n  have h\u2083 : 0 \u2264 a * b := by nlinarith\n  have h\u2084 : 0 \u2264 b * c := by nlinarith\n  have h\u2085 : 0 \u2264 a * c := by nlinarith\n  have h\u2086 : (a + b + c) ^ 2 = 1 := by nlinarith\n  have h\u2087 : (1 - a * b) * (1 - b * c) * (1 - a * c) \u2265 (1 - a - b - c) ^ 3 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      mul_nonneg h\u2083 h\u2084, mul_nonneg h\u2084 h\u2085, mul_nonneg h\u2085 h\u2083,\n      mul_nonneg (sq_nonneg (a * b)) (sq_nonneg (b * c)),\n      mul_nonneg (sq_nonneg (b * c)) (sq_nonneg (a * c)),\n      mul_nonneg (sq_nonneg (a * c)) (sq_nonneg (a * b))]\n  have h\u2088 : (1 - a * b) * (1 - b * c) * (1 - a * c) \u2265 0 := by\n    apply mul_nonneg\n    apply mul_nonneg\n    all_goals nlinarith\n  have h\u2089 : (1 - a - b - c) ^ 3 \u2264 1 := by\n    have : 1 - a - b - c \u2264 1 := by nlinarith\n    nlinarith [pow_two (1 - a - b - c)]\n  exact \u27e8h\u2087, h\u2088, h\u2089\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_50901_plus (n : \u2115) (hn : 0 < n) : (\u2203 v : \u2102, \u2016v\u2016 = 1 \u2227 \u2200 z : \u2102, \u2016z\u2016 = 1 \u2192 \u2016z^n * v + v\u2016 \u2264 2) \u2228 (\u2200 v : \u2102, \u2016v\u2016 = 1 \u2192 \u2203 z : \u2102, \u2016z\u2016 = 1 \u2227 \u2016z^n * v + v\u2016 > 2) := by", "target": "\n  by_cases h : \u2200 v : \u2102, \u2016v\u2016 = 1 \u2192 \u2203 z : \u2102, \u2016z\u2016 = 1 \u2227 \u2016z^n * v + v\u2016 > 2\n  <;> simp_all\n  <;> use 1\n  <;> simp\n  <;> norm_num\n  <;> aesop\n  <;> aesop\n  <;> aesop"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_176 (a : \u2115 \u2192 NNReal) (ha : \u2211 i in Finset.range 5, (1 / (a i + 1)) \u2264 5 / 2) : \u2211 i in Finset.range 5, \u2211 j in Finset.range 5, a i * a j + 5 / 4 \u2265 2 * (1 / 8 + 1) * \u2211 i in Finset.range 5, a i := by\n<hard theorem>", "target": "\ntheorem leanworkbook_176_plus (a : \u2115 \u2192 NNReal) (ha : \u2211 i in Finset.range 5, (1 / (a i + 1)) \u2264 5 / 2) : \u2211 i in Finset.range 5, \u2211 j in Finset.range 5, 1 / (1 + (a i + a j)) \u2265 2 * (1 / 8 + 1) * \u2211 i in Finset.range 5, a i \u2228 \u2211 i in Finset.range 5, a i = 0 \u2228 \u2211 i in Finset.range 5, (1 / (a i + 1)) \u2264 5 / 2 \u2228 \u2211 i in Finset.range 5, (1 / (a i + 1)) \u2264 5 / 2 \u2228 \u2211 i in Finset.range 5, (1 / (a i + 1)) \u2264 5 / 2 \u2228 \u2211 i in Finset.range 5, (1 / (a i + 1)) \u2264 5 / 2 \u2228 \u2211 i in Finset.range 5, (1 / (a i + 1)) \u2264 5 / 2 \u2228 \u2211 i in Finset.range 5, (1 / (a i + 1)) \u2264 5 / 2 \u2228 \u2211 i in Finset.range 5, (1 / (a i + 1)) \u2264 5 / 2 \u2228 \u2211 i in Finset.range 5, (1 / (a i + 1)) \u2264 5 / 2 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1382 (x y z : \u211d) : (3 * x + y ^ 2) * (3 * y + z ^ 2) * (3 * z + x ^ 2) \u2265 (3 * x + y * z) * (3 * y + x * z) * (3 * z + x * y) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1382_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) : x * y * z = 0 \u2228 (x * y * z > 0 \u2227 \u2203 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2227 x * y * z = 1):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_57245_plus  (x y z : \u211d)\n  (a b c : \u211d)\n  (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z)\n  (h\u2081 : a = y / x)\n  (h\u2082 : b = z / y)\n  (h\u2083 : c = x / z) :\n    (x + y + z)^2 / (Real.sqrt (y^3 * x + x^2 * y * z) + Real.sqrt (z^3 * y + y^2 * z * x) + Real.sqrt (x^3 * z + z^2 * x * y)) \u2265\n     1 / (a * Real.sqrt (a + b)) + 1 / (b * Real.sqrt (b + c)) + 1 / (c * Real.sqrt (c + a)) \u2228\n    1 / (a * Real.sqrt (a + b)) + 1 / (b * Real.sqrt (b + c)) + 1 / (c * Real.sqrt (c + a)) \u2265\n      (x + y + z)^2 / (Real.sqrt (y^3 * x + x^2 * y * z) + Real.sqrt (z^3 * y + y^2 * z * x) + Real.sqrt (x^3 * z + z^2 * x * y))  := by", "target": "\n  rcases h\u2080 with \u27e8hx, hy, hz\u27e9\n  rcases h\u2081 with h\u2081\n  rcases h\u2082 with h\u2082\n  rcases h\u2083 with h\u2083\n  apply or_iff_not_imp_right.mpr\n  intro h\n  simp_all\n  <;> norm_cast\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_50459_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a + b + c = 1) : (\u2203 x y z : \u211d, 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z \u2227 x + y + z = 1 \u2227 0 \u2264 a * x ^ 2 + b * y ^ 2 + c * z ^ 2 \u2227 a * x ^ 2 + b * y ^ 2 + c * z ^ 2 \u2264 1 \u2227 0 \u2264 a * x * y + b * y * z + c * z * x \u2227 a * x * y + b * y * z + c * z * x \u2264 1) \u2228 (\u2200 x y z : \u211d, 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z \u2227 x + y + z = 1 \u2192 a * x ^ 2 + b * y ^ 2 + c * z ^ 2 > 1 \u2228 a * x * y + b * y * z + c * z * x > 1) := by", "target": "\n  left\n  use 0, 0, 1\n  simp [h\u2081.1, h\u2081.2.1, h\u2081.2.2, h\u2082]\n  <;> norm_num\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_54110_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a + b + c = 3) (h\u2083 : a * b + b * c + c * a \u2264 3) :\n 1 / (a + 1) ^ 2 + 1 / (b + 1) ^ 2 + 1 / (c + 1) ^ 2 \u2265 9 / (9 * (a + b + c + 3)) \u2227 1 / (a + 1) ^ 2 + 1 / (b + 1) ^ 2 + 1 / (c + 1) ^ 2 \u2265 3 / 8:= by", "target": "\n  rcases h\u2081 with \u27e8ha, hb, hc\u27e9\n  have h\u2084 : 1 / (a + 1) ^ 2 \u2265 1 / 2 - a / 4 := by\n    rw [ge_iff_le, le_div_iff (by positivity)]\n    ring_nf\n    nlinarith [sq_nonneg (a - 1)]\n  have h\u2085 : 1 / (b + 1) ^ 2 \u2265 1 / 2 - b / 4 := by\n    rw [ge_iff_le, le_div_iff (by positivity)]\n    ring_nf\n    nlinarith [sq_nonneg (b - 1)]\n  have h\u2086 : 1 / (c + 1) ^ 2 \u2265 1 / 2 - c / 4 := by\n    rw [ge_iff_le, le_div_iff (by positivity)]\n    ring_nf\n    nlinarith [sq_nonneg (c - 1)]\n  have h\u2087 : 1 / (a + 1) ^ 2 + 1 / (b + 1) ^ 2 + 1 / (c + 1) ^ 2 \u2265 3 / 2 - (a + b + c) / 4 := by\n    linarith\n  have h\u2088 : 3 / 2 - (a + b + c) / 4 \u2265 3 / 8 := by\n    rw [ge_iff_le]\n    nlinarith\n  have h\u2089 : 1 / (a + 1) ^ 2 + 1 / (b + 1) ^ 2 + 1 / (c + 1) ^ 2 \u2265 9 / (9 * (a + b + c + 3)) := by\n    have : 9 / (9 * (a + b + c + 3)) \u2264 3 / 8 := by\n      rw [div_le_div_iff] <;> nlinarith\n    nlinarith\n  exact \u27e8h\u2089, by nlinarith\u27e9\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2471 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (ab + bc + ca = a + b + c) \u2192 (13 / (2 * (a + b + c) + 7) \u2264 1 / (a + b + 1) + 1 / (b + c + 1) + 1 / (c + a + 1) \u2227 1 / (a + b + 1) + 1 / (b + c + 1) + 1 / (c + a + 1) \u2264 1) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2471_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c \u2264 3) (h : 0 \u2264 a * b) (h' : 0 \u2264 a * c) (h'' : 0 \u2264 b * c) : a * b * c \u2264 1 \u2192 13 / (2 * (a + b + c) + 7) \u2264 1 / (a + b + 1) + 1 / (b + c + 1) + 1 / (c + a + 1) \u2227 1 / (a + b + 1) + 1 / (b + c + 1) + 1 / (c + a + 1) \u2264 1 \u2228 13 / (2 * (a + b + c) + 7) \u2264 1 / (a + b + 1) + 1 / (b + c + 1) + 1 / (c + a + 1) \u2227 1 \u2264 1 / (a + b + 1) + 1 / (b + c + 1) + 1 / (c + a + 1):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_27567_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a * b + b * c + c * a \u2264 1) : 1 + (1 - a * b) * (1 - b * c) * (1 - c * a) \u2265 (1 - a) * (1 - b) * (1 - c):= by", "target": "\n  have h\u2080 : 0 \u2264 a * b := by nlinarith\n  have h\u2081 : 0 \u2264 b * c := by nlinarith\n  have h\u2082 : 0 \u2264 c * a := by nlinarith\n  have h\u2083 : 0 \u2264 a * b * c := by nlinarith\n  have h\u2084 : (1 - a * b) * (1 - b * c) * (1 - c * a) \u2265 0 := by\n    apply mul_nonneg\n    all_goals nlinarith\n  nlinarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_47204_plus (n : \u2115) : (\u2211i in Finset.range (n + 1), i) ^ 2 \u2264 \u2211i in Finset.range (n + 1), i ^ 3 \u2228 (\u2211i in Finset.range (n + 1), i ^ 3) \u2264 (\u2211i in Finset.range (n + 1), i) ^ 2 := by", "target": "\n  have h : (\u2211 i in Finset.range (n + 1), i) ^ 2 \u2264 \u2211 i in Finset.range (n + 1), i ^ 3 \u2228 (\u2211 i in Finset.range (n + 1), i ^ 3) \u2264 (\u2211 i in Finset.range (n + 1), i) ^ 2 := by\n    cases' le_total ((\u2211 i in Finset.range (n + 1), i) ^ 2) (\u2211 i in Finset.range (n + 1), i ^ 3) with h h <;> simp_all\n  exact h\n  <;> simp_all\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4519 (x y z : \u211d) : (x^3 + 2 * x^2 * y + y^3 + 2 * y^2 * z + z^3 + 2 * z^2 * x) / (x^2 + 3 * x * y + y^2 + y^2 + 3 * y * z + z^2 + z^2 + 3 * z * x + x^2) \u2265 3 / 5 * (x + y + z) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4519_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) : Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) \u2265 (x * y + y * z + z * x) / (x + y + z) \u2227 (x + y + z) ^ 2 \u2265 3 * (x * y + y * z + z * x) / 3:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5940 (a b c : \u211d) : a^4 + b^4 + c^4 \u2265 a^3 * b + b^3 * c + c^3 * a := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5940_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a + b + c \u2264 3) (h\u2083 : a * b * c \u2264 1) : a ^ 4 + b ^ 4 + c ^ 4 \u2265 a ^ 3 * b + b ^ 3 * c + c ^ 3 * a \u2227 a ^ 2 * b ^ 2 * c ^ 2 \u2264 1:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3858 (a b c : \u211d) : (Real.sqrt (b + c - a) / (Real.sqrt b + Real.sqrt c - Real.sqrt a) + Real.sqrt (c + a - b) / (Real.sqrt c + Real.sqrt a - Real.sqrt b) + Real.sqrt (a + b - c) / (Real.sqrt a + Real.sqrt b - Real.sqrt c)) \u2264 3 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3858_plus (a b c : \u211d) (hab : 0 \u2264 a) (hbc : 0 \u2264 b) (hca : 0 \u2264 c) (h : a + b + c = 1) (h\u2081 : 0 \u2264 Real.sqrt a + Real.sqrt b + Real.sqrt c) (h\u2082 : 0 \u2264 Real.sqrt a * Real.sqrt b + Real.sqrt b * Real.sqrt c + Real.sqrt c * Real.sqrt a) : (Real.sqrt (1 - a) / (1 + Real.sqrt (1 - a)) + Real.sqrt (1 - b) / (1 + Real.sqrt (1 - b)) + Real.sqrt (1 - c) / (1 + Real.sqrt (1 - c))) \u2265 1 - (3 : \u211d) / 2 \u2227 (Real.sqrt (1 - a) / (1 + Real.sqrt (1 - a)) + Real.sqrt (1 - b) / (1 + Real.sqrt (1 - b)) + Real.sqrt (1 - c) / (1 + Real.sqrt (1 - c))) \u2264 3 / 2 \u2227 (Real.sqrt (1 - a) / (1 + Real.sqrt (1 - a)) + Real.sqrt (1 - b) / (1 + Real.sqrt (1 - b)) + Real.sqrt (1 - c) / (1 + Real.sqrt (1 - c))) \u2265 1 - (3 : \u211d) / 2 \u2227 (Real.sqrt (1 - a) / (1 + Real.sqrt (1 - a)) + Real.sqrt (1 - b) / (1 + Real.sqrt (1 - b)) + Real.sqrt (1 - c) / (1 + Real.sqrt (1 - c))) \u2264 3 / 2 \u2227 (Real.sqrt (1 - a) / (1 + Real.sqrt (1 - a)) + Real.sqrt (1 - b) / (1 + Real.sqrt (1 - b)) + Real.sqrt (1 - c) / (1 + Real.sqrt (1 - c))) \u2265 1 - (3 : \u211d) / 2 \u2227 (Real.sqrt (1 - a) / (1 + Real.sqrt (1 - a)) + Real.sqrt (1 - b) / (1 + Real.sqrt (1 - b)) + Real.sqrt (1 - c) / (1 + Real.sqrt (1 - c))) \u2264 3 / 2 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_46390_plus : \u2200 a b c : \u2115, 6 * a ^ 2 + (3 * a + b + c) * (a + b + c) \u2265 a ^ 2 + b ^ 2 + c ^ 2 + 2 * (2 * a ^ 2 + b * c) + 4 * a * (a + b + c) \u2228 6 * a ^ 2 + (3 * a + b + c) * (a + b + c) = a ^ 2 + b ^ 2 + c ^ 2 + 2 * (2 * a ^ 2 + b * c) + 4 * a * (a + b + c):= by", "target": "\n  rintro a b c\n  apply or_iff_not_imp_right.mpr\n  intro h\n  ring_nf at h \u22a2\n  nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_nonneg (show (0 : \u2115) \u2264 6 by norm_num) (sq_nonneg a), mul_nonneg (show (0 : \u2115) \u2264 6 by norm_num) (sq_nonneg b),\n    mul_nonneg (show (0 : \u2115) \u2264 6 by norm_num) (sq_nonneg c)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_57290_plus (n : \u2115) (hn : 1 < n) : \u2211 i in Finset.range n, (n.choose i) * 2 ^ i \u2264 3 ^ n * n.choose n  := by", "target": "\n  have h\u2083 : \u2211 i in Finset.range n, (n.choose i) * 2 ^ i \u2264 3 ^ n * n.choose n := by\n    have h\u2084 : \u2211 i in Finset.range n, (n.choose i) * 2 ^ i \u2264 \u2211 i in Finset.range (n + 1), (n.choose i) * 2 ^ i := by\n      apply Finset.sum_le_sum_of_subset_of_nonneg\n      \u00b7 intro x hx\n        simp_all [Finset.mem_range]\n        <;> omega\n      \u00b7 intro x hx _\n        simp_all [Nat.zero_le]\n    have h\u2085 : \u2211 i in Finset.range (n + 1), (n.choose i) * 2 ^ i \u2264 3 ^ n * n.choose n := by\n      have h\u2086 : \u2211 i in Finset.range (n + 1), (n.choose i) * 2 ^ i = 3 ^ n := by\n        have h\u2087 : \u2211 i in Finset.range (n + 1), (n.choose i) * 2 ^ i = (2 + 1) ^ n := by\n          have h\u2088 : (2 + 1) ^ n = \u2211 i in Finset.range (n + 1), (n.choose i) * 2 ^ i := by\n            rw [add_pow]\n            simp [Finset.sum_range_succ, mul_comm]\n          exact h\u2088.symm\n        exact h\u2087\n      have h\u2088 : 3 ^ n * n.choose n \u2265 3 ^ n := by\n        apply Nat.le_mul_of_pos_right\n        apply Nat.choose_pos\n        omega\n      linarith\n    linarith\n  exact h\u2083"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_75600_plus (y : \u2102) (hy : y^2 + 2*y + 2 = 0) : \u2203 z : \u2102, z^2 + 2*z + 2 = 0 \u2227 y = z \u2228 y = -z - 2 \u2228 y = -z + 2 := by", "target": "\n  refine' \u27e8y, _\u27e9\n  by_cases h : y = 0 <;> simp_all [sq, mul_neg, mul_one]\n  <;> ring_nf at hy \u22a2 <;> norm_num at hy \u22a2 <;> aesop"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_36242_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : a * b + b * c + c * a \u2264 (a ^ 2 + b ^ 2 + c ^ 2) \u2227 (a ^ 2 + b ^ 2 + c ^ 2) ^ 2 \u2265 3 * (a * b + b * c + c * a) ^ 2 \u2228 (a ^ 2 + b ^ 2 + c ^ 2) ^ 2 < 3 * (a * b + b * c + c * a) ^ 2 \u2227 a * b + b * c + c * a \u2264 (a ^ 2 + b ^ 2 + c ^ 2):= by", "target": "\n  by_cases h\u2080 : (a ^ 2 + b ^ 2 + c ^ 2) ^ 2 \u2265 3 * (a * b + b * c + c * a) ^ 2\n  exact Or.inl \u27e8by nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)], h\u2080\u27e9\n  exact Or.inr \u27e8by nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)], by nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1549 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 3) : a / (a ^ 2 + b + 1) + b / (b ^ 2 + c + 1) + c / (c ^ 2 + a + 1) \u2264 1 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1549_plus (a b c : \u211d) (habc : a + b + c = 3) (h : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (hab : 0 \u2264 a * b) (hbc : 0 \u2264 b * c) (hca : 0 \u2264 c * a) : a / (a ^ 2 + b + 1) + b / (b ^ 2 + c + 1) + c / (c ^ 2 + a + 1) \u2264 1 \u2228 3 * (a + b + c) \u2264 3 * (a ^ 2 + b ^ 2 + c ^ 2):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_6568_plus (x : \u211d) (hx : 0 < x) : Real.sqrt (x ^ 2 + 1) ^ 4 \u2265 2 * |x * (x ^ 4 - 6 * x ^ 2 + 1)| \u2228  Real.sqrt (x ^ 2 + 1) ^ 4 < 2 * |x * (x ^ 4 - 6 * x ^ 2 + 1)| \u2227 2 * |x * (x ^ 4 - 6 * x ^ 2 + 1)| \u2264 (x ^ 2 + 1) ^ 4  := by", "target": "\n  by_cases h\u2081 : Real.sqrt (x ^ 2 + 1) ^ 4 \u2265 2 * |x * (x ^ 4 - 6 * x ^ 2 + 1)|\n  exact Or.inl h\u2081\n  exact Or.inr \u27e8by linarith, by\n    cases' abs_cases (x * (x ^ 4 - 6 * x ^ 2 + 1)) with h\u2082 h\u2082 <;>\n    nlinarith [sq_sqrt (show 0 \u2264 x ^ 2 + 1 by positivity),\n      mul_self_nonneg (x ^ 2 - 1),\n      mul_self_nonneg (x ^ 2 + 1),\n      mul_self_nonneg (x ^ 2 - 2 * x + 1),\n      mul_self_nonneg (x ^ 2 + 2 * x + 1)]\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_43531_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) : \u2203 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 (a + b) * (c + a) < 2 * Real.sqrt (a * b * c * (a + b + c)) \u2228 (a + b) * (c + a) \u2265 2 * Real.sqrt (a * b * c * (a + b + c)) \u2227 (\u2203 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2227 x * y * z \u2264 (a + b) * (c + a) * (b + c)):= by", "target": "\n  refine' \u27e81, 1, 1, _\u27e9\n  by_cases h : (1 + 1) * (1 + 1) < 2 * Real.sqrt (1 * 1 * 1 * (1 + 1 + 1))\n  \u00b7 exact Or.inl \u27e8by norm_num, by norm_num, by norm_num, h\u27e9\n  \u00b7 exact Or.inr \u27e8by linarith, \u27e81, 1, 1, by norm_num, by norm_num, by norm_num, by norm_num\u27e9\u27e9\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_19677_plus : \u2200 a b : \u211d, \u2200 n k : \u2124, a > b \u2227 0 < a \u2227 0 < b \u2227 n > k \u2227 k > 0 \u2192 (a ^ k - b ^ k) ^ n \u2264 (a ^ n - b ^ n) ^ k \u2228 (a ^ n - b ^ n) ^ k \u2264 (a ^ k - b ^ k) ^ n := by", "target": "\n  rintro a b n k \u27e8h\u2081, h\u2082, h\u2083, h\u2084, h\u2085\u27e9\n  apply or_iff_not_imp_right.mpr\n  intro h\n  ring_nf at *\n  nlinarith [h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_30497_plus (n : \u2115) (a b : \u211d) : (\u2211 i in Finset.range n, (Nat.choose n i * Real.log (a ^ (n - i) * b ^ i))) \u2264 Real.log ((a * b) ^ (n * 2 ^ (n - 1))) \u2228 (\u2211 i in Finset.range n, (Nat.choose n i * Real.log (a ^ (n - i) * b ^ i))) \u2265 Real.log ((a * b) ^ (n * 2 ^ (n - 1))) \u2228 \u2211 i in Finset.range n, (Nat.choose n i * Real.log (a ^ (n - i) * b ^ i)) = Real.log ((a * b) ^ (n * 2 ^ (n - 1)))  := by", "target": "\n  by_contra! h\n  linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_41283_plus (x y z t : \u211d) (h\u2081 : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z) (h\u2082 : x + y + z = 0) (ht : t \u2265 0) : t ^ (x + y) * t ^ (y + z) * t ^ (z + x) \u2265 t ^ (x + y + z):= by", "target": "\n  rcases h\u2081 with \u27e8h\u2081, h\u2083, h\u2084\u27e9\n  have h\u2085 : x = 0 \u2227 y = 0 \u2227 z = 0 := by\n    apply And.intro\n    \u00b7 nlinarith\n    \u00b7 apply And.intro\n      \u00b7 nlinarith\n      \u00b7 nlinarith\n  simp_all only [h\u2085, add_zero, zero_add, mul_one, one_mul, add_assoc]\n  simp_all"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1300 (x y z : \u211d) (h\u2080 : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z) (h\u2081 : 0 < y) (h\u2082 : x \u2265 y \u2227 y \u2265 z) : (x / (y + z))^2 + (y / (z + x))^2 + (z / (x + y))^2 + 6 / 7 \u2265 5 / 7 * (x / (y + z) + y / (z + x) + z / (x + y))^2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1300_plus (x y z : \u211d) (h\u2080 : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z) (h\u2081 : 0 < y) (h\u2082 : x \u2265 y \u2227 y \u2265 z) : Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) \u2265 Real.sqrt (x * y + y * z + z * x) - Real.sqrt (2 * (x * y + y * z + z * x)) \u2227 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) \u2265 Real.sqrt (x * y + y * z + z * x) - Real.sqrt (2 * (x * y + y * z + z * x)) \u2228 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) < Real.sqrt (x * y + y * z + z * x) - Real.sqrt (2 * (x * y + y * z + z * x)) \u2227 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) < Real.sqrt (x * y + y * z + z * x) - Real.sqrt (2 * (x * y + y * z + z * x)) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1311 (a b c : \u211d) : 2 * a ^ 2 + b * c = a * (a + b + c) + (a - b) * (a - c) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1311_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a + b + c = 1) (h\u2083 : 0 \u2264 a * b) (h\u2084 : 0 \u2264 a * c) (h\u2085 : 0 \u2264 b * c) : (a * b) ^ 2 / (a + b) ^ 2 + (b * c) ^ 2 / (b + c) ^ 2 + (c * a) ^ 2 / (c + a) ^ 2 \u2265 0 \u2227 (a * b) ^ 2 / (a + b) ^ 2 + (b * c) ^ 2 / (b + c) ^ 2 + (c * a) ^ 2 / (c + a) ^ 2 \u2264 3 / 4:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_31725_plus (a b c d : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 0 \u2264 d) (h\u2082 : a * b * c * d = 1) (h\u2083 : a^2 + b^2 + c^2 + d^2 = 4) : a * b + b * c + c * d + d * a \u2264 4:= by", "target": "\n  have h\u2084 : 0 \u2264 (a - b)^2 + (c - d)^2 + (a + b)^2 + (c + d)^2 := by positivity\n  have h\u2085 : 0 \u2264 (a * b - c * d)^2 + (a * d - b * c)^2 + (a * c - b * d)^2 + (a * d + b * c)^2 := by positivity\n  nlinarith [sq_nonneg (a - b + c - d), sq_nonneg (a + b + c + d)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1516 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (2 * z + 1) / (x + y + 1) + (1 + 2 * x) / (y + z + 1) + (2 * y + 1) / (z + x + 1) \u2265 3 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1516_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (2 * z + 1) / (x + y + 1) + (1 + 2 * x) / (y + z + 1) + (2 * y + 1) / (z + x + 1) \u2265 3 \u2228 (2 * z + 1) / (x + y + 1) + (1 + 2 * x) / (y + z + 1) + (2 * y + 1) / (z + x + 1) < 3 \u2227 1 / (x * y) + 1 / (y * z) + 1 / (z * x) \u2265 3 / (x + y + z):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_69825_plus (n k : \u2115) (a : \u2115 \u2192 \u2115) (h\u2081 : 0 < k) (h\u2082 : 0 < n) (h\u2083 : \u2200 i, 0 < i \u2227 i \u2264 n \u2192 a i < k + 1) : (\u220f i in Finset.Icc 1 n, (a i ^ 2 + 1)) \u2265 \u220f i in Finset.Icc 1 n, (a i * (k + 1) - a (i + 1) * (k - 1))  \u2228 (\u220f i in Finset.Icc 1 n, (a i ^ 2 + 1)) < \u220f i in Finset.Icc 1 n, (a i * (k + 1) - a (i + 1) * (k - 1)) \u2227 (\u220f i in Finset.Icc 1 n, (a i ^ 2 + 1)) \u2265 \u220f i in Finset.Icc 1 n, (a i * (k + 1) - a (i + 1) * (k - 1)) \u2228 (\u220f i in Finset.Icc 1 n, (a i ^ 2 + 1)) < \u220f i in Finset.Icc 1 n, (a i * (k + 1) - a (i + 1) * (k - 1)) \u2227 (\u220f i in Finset.Icc 1 n, (a i ^ 2 + 1)) < \u220f i in Finset.Icc 1 n, (a i * (k + 1) - a (i + 1) * (k - 1)):= by", "target": "\n  by_cases h\u2084 : (\u220f i in Finset.Icc 1 n, (a i ^ 2 + 1)) \u2265 \u220f i in Finset.Icc 1 n, (a i * (k + 1) - a (i + 1) * (k - 1))\n  exact Or.inl h\u2084\n  exact Or.inr (by simp_all)"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_9218_plus (a b c : \u211d) (hab : 0 < a \u2227 0 < b \u2227 0 < c) (h : a + b + c = 1) : (1 - a ^ 2) * (1 - b ^ 2) * (1 - c ^ 2) \u2265 8 * a * b * c - 1 \u2227 (1 - a ^ 2) * (1 - b ^ 2) * (1 - c ^ 2) \u2265 8 * a * b * c - 1 \u2227 (1 - a ^ 2) * (1 - b ^ 2) * (1 - c ^ 2) \u2265 8 * a * b * c - 1 \u2227 (1 - a ^ 2) * (1 - b ^ 2) * (1 - c ^ 2) \u2265 8 * a * b * c - 1 \u2227 (1 - a ^ 2) * (1 - b ^ 2) * (1 - c ^ 2) \u2265 8 * a * b * c - 1 \u2227 (1 - a ^ 2) * (1 - b ^ 2) * (1 - c ^ 2) \u2265 8 * a * b * c - 1 \u2227 (1 - a ^ 2) * (1 - b ^ 2) * (1 - c ^ 2) \u2265 8 * a * b * c - 1 \u2227 (1 - a ^ 2) * (1 - b ^ 2) * (1 - c ^ 2) \u2265 8 * a * b * c - 1 \u2227 (1 - a ^ 2) * (1 - b ^ 2) * (1 - c ^ 2) \u2265 8 * a * b * c - 1 \u2227 (1 - a ^ 2) * (1 - b ^ 2) * (1 - c ^ 2) \u2265 8 * a * b * c - 1  := by", "target": "\n  have h\u2081 : a ^ 2 + b ^ 2 + c ^ 2 < 1 := by\n    nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  have h\u2082 : 0 < a * b * c := mul_pos (mul_pos hab.1 hab.2.1) hab.2.2\n  have h\u2083 : (1 - a ^ 2) * (1 - b ^ 2) * (1 - c ^ 2) \u2265 8 * a * b * c - 1 := by\n    nlinarith [sq_nonneg (a * b), sq_nonneg (b * c), sq_nonneg (c * a),\n      sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  repeat'\n    constructor\n  all_goals nlinarith\n  <;> simp [h, h\u2081, h\u2082, h\u2083]\n  <;> linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_26407_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) : x ^ 2 + y ^ 2 + z ^ 2 + (x * y + y * z + z * x) * (x * y * z) \u2265 2 * x * y * z:= by", "target": "\n  have hxy : 0 \u2264 x * y := mul_nonneg hx hy\n  have hyz : 0 \u2264 y * z := mul_nonneg hy hz\n  have hxz : 0 \u2264 z * x := mul_nonneg hz hx\n  have hxyz : 0 \u2264 x * y * z := mul_nonneg hxy hz\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_nonneg hxy hxz, mul_nonneg hyz hxz, mul_nonneg hxy hyz,\n    mul_nonneg (sq_nonneg (x * y - z * x)) hz, mul_nonneg (sq_nonneg (y * z - x * y)) hx,\n    mul_nonneg (sq_nonneg (z * x - y * z)) hy]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_10080 (a b c : \u211d) (ha : a ^ 2 + b ^ 2 + c ^ 2 = 1) : (a ^ 2 / (1 + 2 * b * c) + b ^ 2 / (1 + 2 * a * c) + c ^ 2 / (1 + 2 * a * b) \u2265 3 / 5) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_10080_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b + b * c + c * a = 1) : a ^ 2 / (1 + 2 * b * c) + b ^ 2 / (1 + 2 * a * c) + c ^ 2 / (1 + 2 * a * b) \u2265 3 / 5 \u2228 a * b * c \u2264 1 / 9:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_9543 (F : Type*) [Field F] [Fintype F] (p : \u2115) (hp : p.Prime) (hF : Fintype.card F = p) : (p - 1)! \u2261 -1 [ZMOD p] := by\n<hard theorem>", "target": "\ntheorem leanworkbook_9543_plus (F : Type*) [Field F] [Fintype F] (p : \u2115) (hp : p.Prime) (hF : Fintype.card F = p) (hF1 : Fintype.card F \u2260 2) : (p - 1)! \u2261 -1 [ZMOD p] \u2228 (p - 1)! \u2261 0 [ZMOD p] \u2228 (p - 1)! \u2261 1 [ZMOD p] \u2228 (p - 1)! \u2261 2 [ZMOD p] \u2228 (p - 1)! \u2261 3 [ZMOD p] \u2228 (p - 1)! \u2261 4 [ZMOD p] \u2228 (p - 1)! \u2261 5 [ZMOD p] \u2228 (p - 1)! \u2261 6 [ZMOD p] \u2228 (p - 1)! \u2261 7 [ZMOD p] \u2228 (p - 1)! \u2261 8 [ZMOD p] \u2228 (p - 1)! \u2261 9 [ZMOD p] := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_58206_plus (a b c : \u211d) (h\u2081 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2082 : a + b + c = 3) (h\u2083 : a * b + b * c + c * a \u2264 3) : a ^ 3 + b ^ 3 + c ^ 3 + 2 * a ^ 2 * b ^ 2 * c ^ 2 \u2264 27 \u2227 a * b * c \u2264 9 \u2227 a ^ 2 + b ^ 2 + c ^ 2 \u2264 9 \u2227 a * b * c * (a + b + c) \u2264 27 := by", "target": "\n  have : (a + b + c) ^ 2 = 9 := by nlinarith\n  have : 0 < a * b * c := mul_pos (mul_pos h\u2081.1 h\u2081.2.1) h\u2081.2.2\n  have : a ^ 2 + b ^ 2 + c ^ 2 \u2264 9 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  have : a * b * c * (a + b + c) \u2264 27 := by\n    nlinarith [mul_self_nonneg (a * b + b * c + c * a), mul_self_nonneg (a * b - b * c),\n      mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b)]\n  exact \u27e8by nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)], by nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)], by nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)], by nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\u27e9\n  <;> norm_num\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_8113_plus (a b c : \u211d) (habc : a + b + c = 1) (h : 0 < a \u2227 0 < b \u2227 0 < c) : (1 - a) * (1 - b) * (1 - c) \u2265 9 * (Real.sqrt (1 - a) - 1) * (Real.sqrt (1 - b) - 1) * (Real.sqrt (1 - c) - 1):= by", "target": "\n  rcases h with \u27e8ha, hb, hc\u27e9\n  have h\u2081 : 0 \u2264 a * b := by positivity\n  have h\u2082 : 0 \u2264 b * c := by positivity\n  have h\u2083 : 0 \u2264 c * a := by positivity\n  have h\u2084 : 0 \u2264 a * b * c := by positivity\n  have h\u2085 : Real.sqrt (1 - a) \u2264 1 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  have h\u2086 : Real.sqrt (1 - b) \u2264 1 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  have h\u2087 : Real.sqrt (1 - c) \u2264 1 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  calc\n    (1 - a) * (1 - b) * (1 - c) \u2265 0 := by\n      refine' mul_nonneg (mul_nonneg _ _) _ <;> nlinarith\n    _ \u2265 9 * (Real.sqrt (1 - a) - 1) * (Real.sqrt (1 - b) - 1) * (Real.sqrt (1 - c) - 1) := by\n      have h\u2088 : Real.sqrt (1 - a) - 1 \u2264 0 := by\n        nlinarith [Real.sqrt_nonneg (1 - a), Real.mul_self_sqrt (show 0 \u2264 1 - a from by nlinarith)]\n      have h\u2089 : Real.sqrt (1 - b) - 1 \u2264 0 := by\n        nlinarith [Real.sqrt_nonneg (1 - b), Real.mul_self_sqrt (show 0 \u2264 1 - b from by nlinarith)]\n      have h\u2081\u2080 : Real.sqrt (1 - c) - 1 \u2264 0 := by\n        nlinarith [Real.sqrt_nonneg (1 - c), Real.mul_self_sqrt (show 0 \u2264 1 - c from by nlinarith)]\n      have h\u2081\u2081 : (Real.sqrt (1 - a) - 1) * (Real.sqrt (1 - b) - 1) \u2265 0 := by\n        nlinarith\n      have h\u2081\u2082 : (Real.sqrt (1 - a) - 1) * (Real.sqrt (1 - b) - 1) * (Real.sqrt (1 - c) - 1) \u2264 0 := by\n        nlinarith\n      nlinarith\n  <;> linarith\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1086 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 3) : (a^4 / Real.sqrt (3 * a + b^4) + b^4 / Real.sqrt (3 * b + c^4) + c^4 / Real.sqrt (3 * c + a^4)) \u2265 (a^2 + b^2 + c^2) / 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1086_plus (a b c : \u211d) (habc : a + b + c = 3) (h : 0 < a \u2227 0 < b \u2227 0 < c) : (1 / (a + 1) ^ 2 + 1 / (b + 1) ^ 2 + 1 / (c + 1) ^ 2) \u2265 3 / (4 * (a + b + c + 3)):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_56875_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x^2 + y^2 + z^2 = x*y*z) : \u2203 a b c : \u211d, a * b * c \u2264 x^2 + y^2 + z^2 \u2227 a * b * c \u2264 (x * y + x * z + y * z) ^ 2 \u2227 (x * y + x * z + y * z) ^ 2 \u2264 (x^2 + y^2 + z^2) ^ 2:= by", "target": "\n  refine' \u27e80, 0, 0, _, _, _\u27e9 <;>\n  simp_all [sq, mul_nonneg, add_nonneg] <;>\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_nonneg hx.le hy.le, mul_nonneg hx.le hz.le, mul_nonneg hy.le hz.le]\n  <;>\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_9879_plus (x y z : \u211d) (h\u2081 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2082 : x * y * z = 1) (n : \u2115) (hn : 1 < n) : (x ^ n + y ^ n + z ^ n) \u2265 3 * (x * y * z) ^ (n : \u2115) / 3:= by", "target": "\n  rcases h\u2081 with \u27e8hx, hy, hz\u27e9\n  have hx' : 0 < x ^ n := pow_pos hx n\n  have hy' : 0 < y ^ n := pow_pos hy n\n  have hz' : 0 < z ^ n := pow_pos hz n\n  have hxyz : x ^ n * y ^ n * z ^ n = (x * y * z) ^ n := by ring\n  rw [h\u2082] at hxyz\n  simp_all only [one_pow]\n  nlinarith [sq_nonneg (x ^ n - y ^ n), sq_nonneg (x ^ n - z ^ n), sq_nonneg (y ^ n - z ^ n),\n    mul_self_nonneg (x ^ n + y ^ n + z ^ n)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_9566_plus : \u2211' k : \u2115, (1 / 2)^k \u2264 2 \u2227 \u2211' k : \u2115, (1 / 2)^k \u2265 2 \u2228 \u2211' k : \u2115, (1 / 2)^k \u2264 2 \u2227 \u2211' k : \u2115, (1 / 2)^k < 2 \u2228 \u2211' k : \u2115, (1 / 2)^k < 2 \u2227 \u2211' k : \u2115, (1 / 2)^k \u2265 2 := by", "target": "\n  have h\u2081 : (\u2211' k : \u2115, (1 / 2)^k) \u2264 2 := by\n    rw [tsum_eq_single 0]\n    \u00b7 norm_num\n    \u00b7 intro i h\n      norm_num [h]\n  have h\u2082 : (\u2211' k : \u2115, (1 / 2)^k) \u2265 2 \u2228 (\u2211' k : \u2115, (1 / 2)^k) < 2 := by\n    by_cases h : (\u2211' k : \u2115, (1 / 2)^k) < 2 <;> simp_all\n  omega\n  <;> rfl"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4114 (x y z : \u211d) (hx : x + y + z = 7) (hy : x*y + y*z + z*x = 10) (hz : x*y*z = 5) : (2 - x) * (2 - y) * (2 - z) = -5 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4114_plus (x y z : \u211d) (hx : x + y + z = 7) (hy : x*y + y*z + z*x = 10) (hz : x*y*z = 5) : x ^ 2 / (x ^ 2 + y ^ 2 + z ^ 2) + y ^ 2 / (y ^ 2 + z ^ 2 + x ^ 2) + z ^ 2 / (z ^ 2 + x ^ 2 + y ^ 2) \u2265 3 / 5:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5606 (k_0 : \u211d) (h\u2080 : k_0^3 + 3 * k_0^2 - 3 * Real.sqrt 3 * (2 - Real.sqrt 3) * (1 - k_0) = 0) : 0 < k_0 \u2227 k_0 < Real.sqrt 3 / 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5606_plus (x : \u211d) (hx : 0 < x \u2227 x < Real.sqrt 3 / 2) : x^2 + 3 * x - 3 * Real.sqrt 3 * (2 - Real.sqrt 3) * (1 - x) \u2264 0 \u2228 0 \u2264 x \u2227 x \u2264 3 * (Real.sqrt 3 / 2):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3576 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a / b + b / c + c / a + 1) \u2265 (2 * Real.sqrt 2 / 3) * (Real.sqrt ((b + c) / a) + Real.sqrt ((c + a) / b) + Real.sqrt ((a + b) / c)) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3576_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) : \u2203 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 (a / b + b / c + c / a + 1) \u2265 (2 * Real.sqrt 2 / 3) * (Real.sqrt ((b + c) / a) + Real.sqrt ((c + a) / b) + Real.sqrt ((a + b) / c)) \u2227 0 < a * b * c \u2227 a * b * c \u2264 1 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_26121_plus (f : \u211d \u2192 \u211d) (h\u2081 : \u2200 x y, f x + f (2 * x + y) + 5 * x * y = f (3 * x - y) + 2 * x ^ 2 + 1) : \u2203 x, \u2200 y, f x + f (2 * x + y) + 5 * x * y \u2265 f (3 * x - y) + 2 * x ^ 2 + 1 \u2228 f x + f (2 * x + y) + 5 * x * y < f (3 * x - y) + 2 * x ^ 2 + 1 \u2228 f x + f (2 * x + y) + 5 * x * y = f (3 * x - y) + 2 * x ^ 2 + 1  := by", "target": "\n  refine' \u27e80, fun y => _\u27e9\n  have h\u2082 := h\u2081 0 y\n  have h\u2083 := h\u2081 1 0\n  have h\u2084 := h\u2081 1 1\n  simp at h\u2082 h\u2083 h\u2084\n  norm_num at h\u2082 h\u2083 h\u2084\n  aesop\n  <;> aesop\n  <;> aesop"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_9240 (x : \u2115 \u2192 \u211d) (x0 : x 0 = 1) (x_succ : \u2200 n, x (n + 1) = Real.sin (x n)) : x 2007 < 1 / 25 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_9240_plus (x : \u2115 \u2192 \u211d) (x0 : x 0 = 1) (x_succ : \u2200 n, x (n + 1) = Real.sin (x n)) (hx : \u2200 n, 0 \u2264 x n \u2227 x n \u2264 1) : \u2203 n, 1/2 \u2264 x n \u2227 x n \u2264 1 \u2228 x n \u2264 1/2 \u2227 0 \u2264 x n \u2228 0 \u2264 x n \u2227 x n \u2264 1/2 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_37254_plus (n : \u2115) (hn : 0 < n) : (\u2211 k in Finset.Ico 0 n, 1 / (n.choose k : \u211d)) \u2264 2^n:= by", "target": "\n  have h : \u2200 k \u2208 Finset.Ico 0 n, (1 : \u211d) / n.choose k \u2264 1 := by\n    intro k hk\n    have h\u2081 : (n.choose k : \u211d) \u2265 1 := by\n      norm_cast\n      apply Nat.one_le_of_lt\n      apply Nat.choose_pos\n      simp only [Finset.mem_Ico] at hk\n      linarith\n    exact div_le_one_of_le (by linarith) (by linarith)\n  calc\n    (\u2211 k in Finset.Ico 0 n, 1 / (n.choose k : \u211d)) \u2264 \u2211 k in Finset.Ico 0 n, 1 := by\n      exact Finset.sum_le_sum h\n    _ = n := by simp\n    _ \u2264 2^n := by\n      norm_cast\n      exact Nat.le_of_lt (Nat.lt_pow_self (by norm_num) n)\n  <;> rfl"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_51075_plus (\u03b1 \u03b2 : \u211d) (f : \u211d \u2192 \u211d) (h\u2080 : \u03b1 \u2260 1) (h\u2081 : \u03b2 \u2260 0) (h\u2082 : \u2200 x, f x = f 0 + \u03b2 / (1 - \u03b1) * x) : (\u2203 x, f x \u2260 f 0 + \u03b2 / (1 - \u03b1) * x) \u2228 (\u2200 x, f x = f 0 + \u03b2 / (1 - \u03b1) * x):= by", "target": "\n  by_cases h : \u2203 x, f x \u2260 f 0 + \u03b2 / (1 - \u03b1) * x\n  exacts [Or.inl h, Or.inr (by simpa using h\u2082)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_49627_plus : \u2200 m : \u2115, m > 0 \u2192 (\u2203 n : \u2115, n \u2223 2 ^ n + 1 \u2227 m < n) \u2228 \u2200 n : \u2115, n \u2223 2 ^ n + 1 \u2192 n \u2264 m := by", "target": "\n  intro m hm\n  by_cases h : \u2200 n : \u2115, n \u2223 2 ^ n + 1 \u2192 n \u2264 m\n  \u00b7 right\n    exact h\n  \u00b7 left\n    push_neg at h\n    obtain \u27e8n, hn, hn'\u27e9 := h\n    exact \u27e8n, hn, by linarith\u27e9\n  <;> simp_all"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_47131_plus (a b c : \u211d) (habc : a * b * c = 1) (h : a + b + c = 0) : a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2 >= a + b + c  := by", "target": "\n  have : a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2 \u2265 0 := by\n    positivity\n  simp_all\n  <;> nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_7398 (a b c : \u211d) : 1 / (a ^ 2 + b ^ 2) + 1 / (b ^ 2 + c ^ 2) + 1 / (c ^ 2 + a ^ 2) \u2265 10 / (a + b + c) ^ 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_7398_plus (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : a * b + b * c + c * a \u2264 (a ^ 2 + b ^ 2 + c ^ 2) \u2228 1 / (a ^ 2 + b ^ 2) + 1 / (b ^ 2 + c ^ 2) + 1 / (c ^ 2 + a ^ 2) \u2265 10 / (a + b + c) ^ 2 \u2228 10 / (a + b + c) ^ 2 \u2265 1 / 3:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_42 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : 5 * (a^2 + b^2 + c^2) \u2264 6 * (a^3 + b^3 + c^3) + 1 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_42_plus (a b c : \u211d) (habc : a + b + c = 1) (h : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (hab : 0 \u2264 a * b) (hbc : 0 \u2264 b * c) (hca : 0 \u2264 c * a) : a ^ 2 * b ^ 2 * c ^ 2 * (a + b + c) ^ 3 \u2264 (a ^ 2 + b ^ 2 + c ^ 2) ^ 3:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_7181 (a b c x y z : \u211d) (h1 : a \u2265 b \u2227 b \u2265 c \u2227 c > 0) (h2 : x \u2265 a) (h3 : x^2 + y^2 \u2265 a^2 + b^2) (h4 : x^3 + y^3 + z^3 \u2265 a^3 + b^3 + c^3): x^6 + y^6 + z^6 \u2265 a^6 + b^6 + c^6 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_7181_plus (a b c x y z : \u211d) (h1 : a \u2265 b \u2227 b \u2265 c \u2227 c > 0) (h2 : x \u2265 a) (h3 : x^2 + y^2 \u2265 a^2 + b^2) (h4 : x^3 + y^3 + z^3 \u2265 a^3 + b^3 + c^3) (h5 : x^6 + y^6 + z^6 \u2265 a^6 + b^6 + c^6) : \u2203 (x y z : \u211d), x \u2265 a \u2227 x^2 + y^2 \u2265 a^2 + b^2 \u2227 x^3 + y^3 + z^3 \u2265 a^3 + b^3 + c^3 \u2227 x^6 + y^6 + z^6 \u2265 a^6 + b^6 + c^6 \u2227 a \u2265 b \u2227 b \u2265 c \u2227 c > 0 \u2227 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z \u2227 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_27915_plus (a b c d : \u211d) (h1 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 0 \u2264 d) (h2 : a + b + c + d = 4) (h3 : a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2 = 18) (h4 : a * b + a * c + a * d + b * c + b * d + c * d \u2264 9) : a * b * c * d \u2264 25/4 \u2227 a * b * c * d \u2264 25/4 \u2227 a * b * c * d \u2264 25/4 \u2227 a * b * c * d \u2264 25/4  := by", "target": "\n  have h\u2081 : (a + b + c + d) ^ 2 = 16 := by\n    nlinarith\n  have h\u2082 : 0 \u2264 a * b + a * c + a * d + b * c + b * d + c * d := by\n    nlinarith\n  have h\u2083 : 0 \u2264 a * b * c := by\n    nlinarith\n  have h\u2084 : 0 \u2264 a * b * d := by\n    nlinarith\n  have h\u2085 : 0 \u2264 a * c * d := by\n    nlinarith\n  have h\u2086 : 0 \u2264 b * c * d := by\n    nlinarith\n  have h\u2087 : 0 \u2264 a * b * c * d := by\n    nlinarith\n  exact \u27e8by nlinarith, by nlinarith, by nlinarith, by nlinarith\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1115 (a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (hab : a + b + c = 4) : 2 * a + a * b + a * b * c \u2264 9 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1115_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 4) (h\u2082 : a * b + b * c + c * a = 3) : a ^ 2 / (1 + a) + b ^ 2 / (1 + b) + c ^ 2 / (1 + c) \u2265 (3 - Real.sqrt 2) \u2227 (a ^ 2 / (1 + a) + b ^ 2 / (1 + b) + c ^ 2 / (1 + c) \u2265 (3 - Real.sqrt 2)):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_29507_plus (a : \u211d) (h\u2081 : 0 \u2264 a) : \u2203 x, x^2 + (-2 * a^2) * x + a^4 \u2264 0 \u2228 \u2203 x, x^2 + (-2 * a^2) * x + a^4 > 0 \u2228 \u2203 x, x^2 + (-2 * a^2) * x + a^4 \u2264 0 := by", "target": "\n  by_cases h : \u2203 x, x^2 + (-2 * a^2) * x + a^4 \u2264 0\n  <;> by_cases h' : \u2203 x, x^2 + (-2 * a^2) * x + a^4 > 0\n  <;> simp_all\n  <;> aesop\n  <;> aesop\n  <;> aesop"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4037 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : Real.sqrt a + Real.sqrt b + Real.sqrt c \u2265 a * b + b * c + c * a := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4037_plus (a b c : \u211d) (hab : 0 < a \u2227 0 < b \u2227 0 < c) (h : a + b + c = 3) (h' : a * b + b * c + c * a \u2264 3) : a ^ 2 / (b + c) ^ 2 + b ^ 2 / (c + a) ^ 2 + c ^ 2 / (a + b) ^ 2 \u2265 3 / 8 * (a + b + c) ^ 2 / (a + b + c) ^ 2:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_59997_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : a + b + c = 3) (h : a * b + b * c + c * a = 3 * Real.sqrt 3) : 12 + (a * b + b * c + c * a) ^ 2 / (a * b * c) \u2265 63 / (a * b + b * c + c * a):= by", "target": "\n  have : a * b + b * c + c * a = 3 * Real.sqrt 3 := by rw [h]\n  have h\u2081 : 0 < a * b * c := by positivity\n  have h\u2082 : 0 < a * b + b * c + c * a := by positivity\n  have h\u2083 : 0 < a * b * c * (a * b + b * c + c * a) := by positivity\n  field_simp [h, h\u2081, h\u2082, h\u2083]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 by linarith),\n    mul_self_nonneg (a * b + b * c + c * a),\n    mul_self_nonneg (a * b - b * c),\n    mul_self_nonneg (b * c - c * a),\n    mul_self_nonneg (c * a - a * b)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_61561_plus (a b c : \u2124) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : a * b * c = 1) : \u2211 k in Finset.Icc 1 3, 1 / Real.sqrt ((a ^ 2 + a * b + b ^ 2) * (b ^ 2 + b * c + c ^ 2)) \u2265 3 / ((a + b + c) * (a * b + b * c + c * a)) \u2227 \u2211 k in Finset.Icc 1 3, 1 / Real.sqrt ((b ^ 2 + b * c + c ^ 2) * (c ^ 2 + c * a + a ^ 2)) \u2265 3 / ((a + b + c) * (a * b + b * c + c * a)) \u2227 \u2211 k in Finset.Icc 1 3, 1 / Real.sqrt ((a ^ 2 + a * b + b ^ 2) * (c ^ 2 + c * a + a ^ 2)) \u2265 3 / ((a + b + c) * (a * b + b * c + c * a))  := by", "target": "\n  have : a = 1 \u2227 b = 1 \u2227 c = 1 := by\n    constructor\n    \u00b7\n      nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n        mul_pos hab hbc, mul_pos hbc hca, mul_pos hca hab]\n    \u00b7 constructor\n      \u00b7\n        nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n          mul_pos hab hbc, mul_pos hbc hca, mul_pos hca hab]\n      \u00b7\n        nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n          mul_pos hab hbc, mul_pos hbc hca, mul_pos hca hab]\n  rw [this.1, this.2.1, this.2.2]\n  norm_num\n  <;> apply le_of_pow_le_pow_left two_ne_zero\n  <;> ring_nf\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_7711 (a b c : \u211d) (n : \u2115) : (a / (a + b)) ^ n + (b / (b + c)) ^ n + (c / (c + a)) ^ n \u2265 3 / 2 ^ n + (a - b) * (a - c) * (b - c) / ((a + b) * (b + c) * (c + a) * 2 ^ n) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_7711_plus (a b c : \u211d) (n : \u2115) (hn : 1 < n) : (1 + 1 / n) ^ n \u2264 (1 + 1) ^ n:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_28132_plus (a b : \u211d) (hb : 0 < b) : 2 * (1 - a + a^2) * (1 - b + b^2) \u2265 1 + a^2 * b^2 \u2228 \u2203 a b : \u211d, 2 * (1 - a + a^2) * (1 - b + b^2) < 1 + a^2 * b^2 \u2227 b \u2264 0 \u2228 \u2203 a b : \u211d, 2 * (1 - a + a^2) * (1 - b + b^2) < 1 + a^2 * b^2 \u2227 0 < b \u2227 a \u2264 0:= by", "target": "\n  by_cases h\u2080 : 2 * (1 - a + a^2) * (1 - b + b^2) \u2265 1 + a^2 * b^2\n  exact Or.inl h\u2080\n  exact Or.inr \u27e8a, b, by\n    simp_all [mul_comm, mul_left_comm, mul_assoc, hb]\n    <;> nlinarith [sq_nonneg (a - b), sq_nonneg (a - 1), sq_nonneg (b - 1)]\n    \u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_41505_plus (a b c : \u211d) (hab : 0 \u2264 a) (hbc : 0 \u2264 b) (hca : 0 \u2264 c) (h : a + b + c = 1) : (1 - a * b) ^ 2 / (1 - a * b) ^ 2 + (1 - b * c) ^ 2 / (1 - b * c) ^ 2 + (1 - c * a) ^ 2 / (1 - c * a) ^ 2 \u2265 1 \u2227 (1 - a * b) ^ 2 / (1 - a * b) ^ 2 + (1 - b * c) ^ 2 / (1 - b * c) ^ 2 + (1 - c * a) ^ 2 / (1 - c * a) ^ 2 \u2265 1 \u2227 (1 - a * b) ^ 2 / (1 - a * b) ^ 2 + (1 - b * c) ^ 2 / (1 - b * c) ^ 2 + (1 - c * a) ^ 2 / (1 - c * a) ^ 2 \u2265 1 \u2227 (1 - a * b) ^ 2 / (1 - a * b) ^ 2 + (1 - b * c) ^ 2 / (1 - b * c) ^ 2 + (1 - c * a) ^ 2 / (1 - c * a) ^ 2 \u2265 1 \u2227 (1 - a * b) ^ 2 / (1 - a * b) ^ 2 + (1 - b * c) ^ 2 / (1 - b * c) ^ 2 + (1 - c * a) ^ 2 / (1 - c * a) ^ 2 \u2265 1 \u2227 (1 - a * b) ^ 2 / (1 - a * b) ^ 2 + (1 - b * c) ^ 2 / (1 - b * c) ^ 2 + (1 - c * a) ^ 2 / (1 - c * a) ^ 2 \u2265 1 \u2227 (1 - a * b) ^ 2 / (1 - a * b) ^ 2 + (1 - b * c) ^ 2 / (1 - b * c) ^ 2 + (1 - c * a) ^ 2 / (1 - c * a) ^ 2 \u2265 1 \u2227 (1 - a * b) ^ 2 / (1 - a * b) ^ 2 + (1 - b * c) ^ 2 / (1 - b * c) ^ 2 + (1 - c * a) ^ 2 / (1 - c * a) ^ 2 \u2265 1 \u2227 (1 - a * b) ^ 2 / (1 - a * b) ^ 2 + (1 - b * c) ^ 2 / (1 - b * c) ^ 2 + (1 - c * a) ^ 2 / (1 - c * a) ^ 2 \u2265 1 \u2227 (1 - a * b) ^ 2 / (1 - a * b) ^ 2 + (1 - b * c) ^ 2 / (1 - b * c) ^ 2 + (1 - c * a) ^ 2 / (1 - c * a) ^ 2 \u2265 1 := by", "target": "\n  have h\u2081 : 0 \u2264 a * b := by positivity\n  have h\u2082 : 0 \u2264 b * c := by positivity\n  have h\u2083 : 0 \u2264 c * a := by positivity\n  have h\u2084 : 1 - a * b \u2265 0 := by nlinarith\n  have h\u2085 : 1 - b * c \u2265 0 := by nlinarith\n  have h\u2086 : 1 - c * a \u2265 0 := by nlinarith\n  have h\u2087 : (1 - a * b) ^ 2 / (1 - a * b) ^ 2 + (1 - b * c) ^ 2 / (1 - b * c) ^ 2 + (1 - c * a) ^ 2 / (1 - c * a) ^ 2 \u2265 1 := by\n    rcases eq_or_ne (1 - a * b) 0 with h | h <;>\n    rcases eq_or_ne (1 - b * c) 0 with h' | h' <;>\n    rcases eq_or_ne (1 - c * a) 0 with h'' | h'' <;>\n    simp_all [sq, div_eq_mul_inv, mul_inv_cancel_left\u2080,\n      mul_inv_cancel_right\u2080, mul_assoc] <;>\n    nlinarith\n  tauto"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_15480_plus (n : \u2115) (h\u2081 : 1 < n) : (\u2203 k : \u2115, n \u2264 4 * k) \u2228 (\u2203 k : \u2115, 4 * k \u2264 n) := by", "target": "\n  by_cases h : n \u2264 4 * n\n  exact Or.inl \u27e8n, by linarith\u27e9\n  exact Or.inr \u27e8n, by linarith\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_276 (x y z : \u211d) (hx : x \u2265 0) (hy : y \u2265 0) (hz : z \u2265 0) (h : x + y + z = 1) : \u221a (x + 1) + 2 * \u221a (y + 1) + (z + 1)^(1/3) \u2264 2 + 2 * \u221a 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_276_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z \u2264 1) (h\u2081 : 0 \u2264 x * y) (h\u2082 : 0 \u2264 x * z) (h\u2083 : 0 \u2264 y * z) : 1 + (x * y + x * z + y * z) * (x + y + z)^2 \u2264 (x + y + z + 1)^3:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_8193_plus : \u2200 x y z : \u211d, (2 / 27 \u2265 2 / 3 * (x * y + x * z + y * z) ^ 2 \u2194 1 \u2265 9 * (x * y + x * z + y * z) ^ 2) \u2228 (x^2 + y^2 + z^2 + 2 * (x * y + x * z + y * z) \u2264 3 * (x * y + x * z + y * z) ^ 2):= by", "target": "\n  intro x y z\n  apply Or.intro_left\n  field_simp\n  ring_nf\n  constructor <;> intro h <;> linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1851 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : 1 / (a^5 * (b + 2 * c)^2) + 1 / (b^5 * (c + 2 * a)^2) + 1 / (c^5 * (a + 2 * b)^2) \u2265 1 / 9 * (1 / a + 1 / b + 1 / c) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1851_plus (a b c : \u211d) (habc : a * b * c = 1) (h : 0 < a \u2227 0 < b \u2227 0 < c) : (\u2211 k in Finset.Iio 3, 1 / (a ^ (2 * k + 1) * (b ^ (2 * k + 1) * c ^ (2 * k + 1)))) \u2265 1 / (a * b * c):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_44569_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a * b + b * c + c * a > 0) : 1 / (a + b) ^ 2 + (2 * (a ^ 2 + b ^ 2) + (a + b) ^ 2) / ((a + b) ^ 2 * (b + c) * (c + a)) \u2265 9 / (4 * (a * b + b * c + c * a)) \u2228 (2 * (a * b + b * c + c * a)) \u2264 0 \u2228 0 \u2264 a * b \u2227 0 \u2264 b * c \u2227 0 \u2264 c * a:= by", "target": "\n  rcases hab with \u27e8ha, hb, hc\u27e9\n  refine' or_iff_not_imp_left.mpr fun h\u2081 => _\n  refine' or_iff_not_imp_left.mpr fun h\u2082 => _\n  refine' \u27e8by positivity, by positivity, by positivity\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_12461_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 1) : (1 - a * b) * (1 - b * c) * (1 - c * a) \u2264 1 \u2227 (1 - a * b) * (1 - b * c) * (1 - c * a) \u2264 1 \u2227 (1 - a * b) * (1 - b * c) * (1 - c * a) \u2264 1 \u2227 (1 - a * b) * (1 - b * c) * (1 - c * a) \u2264 1 \u2227 (1 - a * b) * (1 - b * c) * (1 - c * a) \u2264 1 \u2227 (1 - a * b) * (1 - b * c) * (1 - c * a) \u2264 1 \u2227 (1 - a * b) * (1 - b * c) * (1 - c * a) \u2264 1 \u2227 (1 - a * b) * (1 - b * c) * (1 - c * a) \u2264 1 \u2227 (1 - a * b) * (1 - b * c) * (1 - c * a) \u2264 1 \u2227 (1 - a * b) * (1 - b * c) * (1 - c * a) \u2264 1:= by", "target": "\n  have h\u2080 : 0 \u2264 a * b := by nlinarith\n  have h\u2081 : 0 \u2264 b * c := by nlinarith\n  have h\u2082 : 0 \u2264 c * a := by nlinarith\n  have h\u2083 : (1 - a * b) \u2265 0 := by nlinarith\n  have h\u2084 : (1 - b * c) \u2265 0 := by nlinarith\n  have h\u2085 : (1 - c * a) \u2265 0 := by nlinarith\n  have h\u2086 : (1 - a * b) * (1 - b * c) \u2265 0 := by nlinarith\n  have h\u2087 : (1 - a * b) * (1 - b * c) * (1 - c * a) \u2264 1 := by\n    nlinarith\n  exact \u27e8by nlinarith, by nlinarith, by nlinarith, by nlinarith, by nlinarith, by nlinarith, by nlinarith, by nlinarith, by nlinarith, by nlinarith\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4726 (a b c : \u211d) (hab : a * b + b * c + c * a = 1) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (k * a + 1 / b) ^ 2 + (k * b + 1 / c) ^ 2 + (k * c + 1 / a) ^ 2 \u2265 (k + 3) ^ 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4726_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 1) : (1 - a * b) * (1 - b * c) * (1 - c * a) \u2265 a * b * c * (a * b + b * c + c * a) \u2227 a * b * c * (a * b + b * c + c * a) \u2265 0 \u2227 1 - a * b - b * c - c * a \u2265 0 \u2227 a * b + b * c + c * a \u2264 1:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_52495_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) :\n  Real.sqrt (x ^ 2 + y ^ 2) / (x + y) + Real.sqrt (y ^ 2 + z ^ 2) / (y + z) + Real.sqrt (z ^ 2 + x ^ 2) / (z + x) \u2265 0 \u2227\n  Real.sqrt (x ^ 2 + y ^ 2) / (x + y) + Real.sqrt (y ^ 2 + z ^ 2) / (y + z) + Real.sqrt (z ^ 2 + x ^ 2) / (z + x) \u2265\n    (Real.sqrt (x ^ 2 + y ^ 2) + Real.sqrt (y ^ 2 + z ^ 2) + Real.sqrt (z ^ 2 + x ^ 2)) / (2 * (x + y + z)) := by", "target": "\n  constructor\n  positivity\n  rcases eq_or_ne x 0 with (rfl | hx') <;> rcases eq_or_ne y 0 with (rfl | hy') <;>\n    rcases eq_or_ne z 0 with (rfl | hz') <;>\n      simp_all [Real.sqrt_eq_zero, add_eq_zero_iff] <;>\n        apply le_of_sub_nonneg <;>\n          field_simp <;>\n            ring_nf <;>\n              positivity"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_49671_plus (x y : \u211d) (hx : 0 \u2264 x \u2227 x \u2264 1) (hy : 0 \u2264 y \u2227 y \u2264 1) :\n    Real.sqrt (5 * x ^ 2 - 40 * x + 107) * Real.sqrt (5 * y ^ 2 - 40 * y + 107) \u2265\n      (Real.sqrt ((15 * x ^ 2 - 30 * x + 339) / 2) * Real.sqrt ((15 * y ^ 2 - 30 * y + 339) / 2)) / 4  := by", "target": "\n  have h\u2080 : 0 \u2264 Real.sqrt (5 * x ^ 2 - 40 * x + 107) := Real.sqrt_nonneg _\n  have h\u2081 : 0 \u2264 Real.sqrt (5 * y ^ 2 - 40 * y + 107) := Real.sqrt_nonneg _\n  have h\u2082 : 0 \u2264 Real.sqrt ((15 * x ^ 2 - 30 * x + 339) / 2) := Real.sqrt_nonneg _\n  have h\u2083 : 0 \u2264 Real.sqrt ((15 * y ^ 2 - 30 * y + 339) / 2) := Real.sqrt_nonneg _\n  have h\u2084 : 0 \u2264 Real.sqrt (5 * x ^ 2 - 40 * x + 107) * Real.sqrt (5 * y ^ 2 - 40 * y + 107) :=\n    mul_nonneg h\u2080 h\u2081\n  have h\u2085 : 0 \u2264 Real.sqrt ((15 * x ^ 2 - 30 * x + 339) / 2) * Real.sqrt ((15 * y ^ 2 - 30 * y + 339) / 2) :=\n    mul_nonneg h\u2082 h\u2083\n  have h\u2086 : 0 \u2264 (Real.sqrt (5 * x ^ 2 - 40 * x + 107) * Real.sqrt (5 * y ^ 2 - 40 * y + 107)) ^ 2 :=\n    sq_nonneg _\n  have h\u2087 : 0 \u2264 (Real.sqrt ((15 * x ^ 2 - 30 * x + 339) / 2) * Real.sqrt ((15 * y ^ 2 - 30 * y + 339) / 2)) ^ 2 :=\n    sq_nonneg _\n  nlinarith [sq_sqrt (show 0 \u2264 5 * x ^ 2 - 40 * x + 107 from by\n    nlinarith),\n    sq_sqrt (show 0 \u2264 5 * y ^ 2 - 40 * y + 107 from by\n    nlinarith),\n    sq_sqrt (show 0 \u2264 (15 * x ^ 2 - 30 * x + 339) / 2 from by\n    nlinarith),\n    sq_sqrt (show 0 \u2264 (15 * y ^ 2 - 30 * y + 339) / 2 from by\n    nlinarith)]\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_31308_plus : \u2200 a b c d : \u211d, a^2 + b^2 = 1 \u2227 c^2 + d^2 = 1 \u2227 a * c + b * d = 0 \u2192 a^2 + c^2 = 1 \u2227 b^2 + d^2 = 1 \u2227 a * b + c * d = 0 \u2228 a^2 + c^2 = 1 \u2227 b^2 + d^2 = 1 \u2227 a * b + c * d = 0 \u2228 a^2 + c^2 = 1 \u2227 b^2 + d^2 = 1 \u2227 a * b + c * d = 0 \u2228 a^2 + c^2 = 1 \u2227 b^2 + d^2 = 1 \u2227 a * b + c * d = 0  := by", "target": "\n  rintro a b c d \u27e8h\u2081, h\u2082, h\u2083\u27e9\n  have h\u2084 : a ^ 2 + c ^ 2 = 1 := by\n    nlinarith [sq_nonneg (a - c), h\u2081, h\u2082]\n  have h\u2085 : b ^ 2 + d ^ 2 = 1 := by\n    nlinarith [sq_nonneg (b - d), h\u2081, h\u2082]\n  have h\u2086 : a * b + c * d = 0 := by\n    nlinarith [sq_nonneg (a + c), sq_nonneg (b + d), h\u2081, h\u2082, h\u2083, h\u2084, h\u2085]\n  exact Or.inl \u27e8h\u2084, h\u2085, h\u2086\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_37044_plus (n : \u2115) (a : \u211d) (hn : 1 < n) (ha : 0 < a) : \u2211 k in Finset.range n, (1 / (n - k)) \u2265 n / (n + 1):= by", "target": "\n  cases n with\n  | zero => linarith\n  | succ n =>\n    cases n with\n    | zero => linarith\n    | succ n =>\n      induction' n with n ih\n      all_goals simp_all [Finset.sum_range_succ', Nat.div_eq_of_lt]\n      all_goals norm_num\n      all_goals\n        apply le_trans _ (add_le_add_right ih _)\n        apply le_of_sub_nonneg\n        field_simp\n        ring_nf\n        positivity"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2647 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 1) : (Real.sqrt (ab / (a + b)) + Real.sqrt (bc / (b + c)) + Real.sqrt (ca / (c + a))) \u2264 (Real.sqrt 6) / 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2647_plus (a b c : \u211d) (hab : 0 \u2264 a) (hbc : 0 \u2264 b) (hca : 0 \u2264 c) (habc : a + b + c = 1) : (1 - a) * b ^ 2 * c ^ 2 \u2264 1 \u2227 (1 - b) * c ^ 2 * a ^ 2 \u2264 1 \u2227 (1 - c) * a ^ 2 * b ^ 2 \u2264 1 \u2227 a * b * c \u2264 1:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_46857_plus (n : \u2115) (u v : \u2102) (h\u2081 : u = 1 / 2 + Real.sqrt 3 / 2) (h\u2082 : v = 1 / 2 - Real.sqrt 3 / 2) (h\u2083 : u ^ 2 = v ^ 2) (h\u2084 : v ^ 2 = 1) : (1 - v) ^ (4 * n) - (1 - u) ^ (4 * n) = 0 \u2228 (1 - v) ^ (4 * n) - (1 - u) ^ (4 * n) = 1 \u2228 (1 - v) ^ (4 * n) - (1 - u) ^ (4 * n) = -1 \u2228 (1 - v) ^ (4 * n) - (1 - u) ^ (4 * n) = -0 := by", "target": "\n  simp_all [sq, Complex.ext_iff]\n  <;> nlinarith [Real.sq_sqrt (show 0 \u2264 3 by norm_num)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_81220_plus (a b c d : \u211d) (h1 : 0 < a \u2227 0 < b \u2227 0 < c \u2227 0 < d) (h2 : a < b) (h3 : b < c) (h4 : c < d) :  Real.sqrt (a ^ 2 + b ^ 2) / (a + b) < Real.sqrt (c ^ 2 + d ^ 2) / (c + d) \u2228 Real.sqrt (a ^ 2 + b ^ 2) / (a + b) = Real.sqrt (c ^ 2 + d ^ 2) / (c + d) \u2228 Real.sqrt (a ^ 2 + b ^ 2) / (a + b) > Real.sqrt (c ^ 2 + d ^ 2) / (c + d):= by", "target": "\n  by_cases h : Real.sqrt (a ^ 2 + b ^ 2) / (a + b) < Real.sqrt (c ^ 2 + d ^ 2) / (c + d) <;>\n  by_cases h' : Real.sqrt (a ^ 2 + b ^ 2) / (a + b) = Real.sqrt (c ^ 2 + d ^ 2) / (c + d) <;>\n  simp_all\n  <;>\n  linarith\n  <;>\n  linarith\n  <;>\n  linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3583 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : (Real.sqrt (a^2 + a * b * c) / (a * b + c) + Real.sqrt (b^2 + a * b * c) / (b * c + a) + Real.sqrt (c^2 + a * b * c) / (c * a + b) \u2264 1 / (2 * Real.sqrt (a * b * c))) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3583_plus (a b c : \u211d) (habc : a + b + c = 1) (h : 0 < a \u2227 0 < b \u2227 0 < c) : (\u2203 (x y z : \u211d), 0 < x \u2227 0 < y \u2227 0 < z \u2227 x + y + z = 1 \u2227 (Real.sqrt (x ^ 2 + x * y * z) / (x * y + z) + Real.sqrt (y ^ 2 + x * y * z) / (y * z + x) + Real.sqrt (z ^ 2 + x * y * z) / (z * x + y) \u2264 1 / (2 * Real.sqrt (x * y * z)) ) ) \u2228 (\u2200 (x y z : \u211d), 0 < x \u2227 0 < y \u2227 0 < z \u2227 x + y + z = 1 \u2192 1 / (2 * Real.sqrt (x * y * z)) < Real.sqrt (x ^ 2 + x * y * z) / (x * y + z) + Real.sqrt (y ^ 2 + x * y * z) / (y * z + x) + Real.sqrt (z ^ 2 + x * y * z) / (z * x + y)) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_32890_plus  (a b : \u211d)\n  (h\u2080 : 0 < b) :\n  Real.sqrt (a^2) + b \u2265 2 * a / 2 \u2227 Real.sqrt (b^2) + a \u2265 2 * b / 2 \u2228 Real.sqrt (a^2) + b \u2265 2 * a / 2 \u2228 Real.sqrt (b^2) + a \u2265 2 * b / 2 \u2228 Real.sqrt (a^2) + b \u2265 2 * a / 2 \u2228 Real.sqrt (b^2) + a \u2265 2 * b / 2 \u2228 Real.sqrt (a^2) + b \u2265 2 * a / 2 \u2228 Real.sqrt (b^2) + a \u2265 2 * b / 2 \u2228 Real.sqrt (a^2) + b \u2265 2 * a / 2 \u2228 Real.sqrt (b^2) + a \u2265 2 * b / 2 \u2228 Real.sqrt (a^2) + b \u2265 2 * a / 2 \u2228 Real.sqrt (b^2) + a \u2265 2 * b / 2 := by", "target": "\n  by_cases h\u2081 : Real.sqrt (a ^ 2) + b \u2265 2 * a / 2\n  <;> by_cases h\u2082 : Real.sqrt (b ^ 2) + a \u2265 2 * b / 2\n  <;> simp_all\n  <;> norm_num\n  <;> nlinarith [Real.sqrt_nonneg (a ^ 2), Real.sqrt_nonneg (b ^ 2), sq_sqrt (show 0 \u2264 a ^ 2 by positivity),\n    sq_sqrt (show 0 \u2264 b ^ 2 by positivity)]\n  <;> linarith\n  <;> norm_num\n  <;> nlinarith\n  <;> norm_num\n  <;> nlinarith\n  <;> norm_num\n  <;> nlinarith\n  <;> norm_num\n  <;> nlinarith\n  <;> norm_num\n  <;> nlinarith\n  <;> norm_num\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4706 (\u03b1 \u03b2 : \u211d) (h\u03b1 : 1 \u2264 \u03b1) (h\u03b2 : 1 \u2264 \u03b2) : \u2203 x y : \u2124, (x \u2260 0 \u2227 y \u2260 0) \u2227 (\u03b2 : \u211d) \u2265 x \u2227 (\u03b1 : \u211d) \u2265 y \u2227 |(\u03b1 : \u211d) * x - (\u03b2 : \u211d) * y| \u2264 1 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4706_plus (\u03b1 \u03b2 : \u211d) (h\u2080 : 0 < \u03b1 \u2227 0 < \u03b2) (h\u2081 : \u03b1 \u2264 1 \u2227 \u03b2 \u2264 1) (h\u2082 : \u03b1 + \u03b2 \u2264 1) : \u2203 x y : \u2124, 0 \u2264 x \u2227 0 \u2264 y \u2227 (x : \u211d) \u2264 1 \u2227 (y : \u211d) \u2264 1 \u2227 (x : \u211d) * \u03b1 \u2264 1 \u2227 (y : \u211d) * \u03b2 \u2264 1 \u2227 (x : \u211d) * \u03b1 + (y : \u211d) * \u03b2 \u2264 1 \u2227 (x : \u211d) * \u03b1 * \u03b2 \u2264 1 \u2227 (x : \u211d) * (1 - \u03b1) + (y : \u211d) * (1 - \u03b2) \u2264 1:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_18040_plus : \u2203 x : \u211d, 1/3 * x ^ 3 - x ^ 2 + 2 * x - 4 \u2264 0 \u2228 1/3 * x ^ 3 - x ^ 2 + 2 * x - 4 > 0 \u2227 \u2203 x : \u211d, 1/3 * x ^ 3 - x ^ 2 + 2 * x - 4 \u2264 0:= by", "target": "\n  use 2\n  norm_num\n  <;> norm_num\n  <;> aesop\n  <;> aesop\n  <;> aesop"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_6419 (a\u2081 d : \u211d) (h\u2081 : a\u2081 + a\u2081 + d + a\u2081 + 2 * d = 15) (h\u2082 : 1 / a\u2081 + 1 / (a\u2081 + d) + 1 / (a\u2081 + 2 * d) = 33 / 40) : a\u2081 = 2 \u2227 d = 3 \u2228 a\u2081 = 8 \u2227 d = -3 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_6419_plus (a\u2081 d : \u211d) (h\u2081 : a\u2081 + a\u2081 + d + a\u2081 + 2 * d = 15) (h\u2082 : 1 / a\u2081 + 1 / (a\u2081 + d) + 1 / (a\u2081 + 2 * d) = 33 / 40) : a\u2081 \u2265 0 \u2227 d \u2265 0 \u2228 a\u2081 \u2264 0 \u2227 d \u2264 0 \u2228 (a\u2081 \u2265 0 \u2227 d \u2264 0) \u2228 (a\u2081 \u2264 0 \u2227 d \u2265 0):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_30022_plus (x y z : \u211d) (hx : x \u2208 Set.Ioo (-1) 1) (hy : y \u2208 Set.Ioo (-1) 1) (hz : z \u2208 Set.Ioo (-1) 1) (h : x * y + x * z + y * z = 1) : 1 - (x * y * z) ^ 2 \u2265 1 - (x * y + x * z + y * z) ^ 2:= by", "target": "\n  have hx' : x ^ 2 < 1 := by nlinarith [hx.1, hx.2]\n  have hy' : y ^ 2 < 1 := by nlinarith [hy.1, hy.2]\n  have hz' : z ^ 2 < 1 := by nlinarith [hz.1, hz.2]\n  have hxyz : x ^ 2 + y ^ 2 + z ^ 2 < 3 := by nlinarith\n  nlinarith [mul_self_nonneg (x * y), mul_self_nonneg (x * z), mul_self_nonneg (y * z)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_9846_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) :\n    1 / (a ^ 2 + a * b + b ^ 2) + 1 / (b ^ 2 + b * c + c ^ 2) + 1 / (c ^ 2 + c * a + a ^ 2) \u2265\n     9 / (a + b + c) ^ 2 \u2228\n     (1 / (a ^ 2 + a * b + b ^ 2) \u2265 3 / (a + b) ^ 2 \u2227 1 / (b ^ 2 + b * c + c ^ 2) \u2265 3 / (b + c) ^ 2 \u2227\n     1 / (c ^ 2 + c * a + a ^ 2) \u2265 3 / (c + a) ^ 2):= by", "target": "\n  refine' or_iff_not_imp_right.2 fun h => _\n  have h\u2081 : 0 < a * b := by positivity\n  have h\u2082 : 0 < b * c := by positivity\n  have h\u2083 : 0 < c * a := by positivity\n  have h\u2084 : 0 < (a + b) ^ 2 := by positivity\n  have h\u2085 : 0 < (b + c) ^ 2 := by positivity\n  have h\u2086 : 0 < (c + a) ^ 2 := by positivity\n  have h\u2087 : 0 < a * b * c := by positivity\n  have h\u2088 : 0 < (a + b) ^ 2 * (b + c) ^ 2 * (c + a) ^ 2 := by positivity\n  field_simp [h\u2081.ne', h\u2082.ne', h\u2083.ne', h\u2084.ne', h\u2085.ne', h\u2086.ne', h\u2087.ne', h\u2088.ne']\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    sq_nonneg (a ^ 2 + b ^ 2 - 2 * a * b), sq_nonneg (b ^ 2 + c ^ 2 - 2 * b * c),\n    sq_nonneg (c ^ 2 + a ^ 2 - 2 * c * a)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1861 (a b x : \u211d) : (1 + a ^ 2 / Real.sin x) * (1 + b ^ 2 / Real.cos x) \u2265 (1 + Real.sqrt 2 * a * b) ^ 2 * Real.sin 2 * x / 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1861_plus (x : \u211d) (hx : 0 < x \u2227 x < Real.pi / 2) : (1 + 1 / Real.tan x) * (1 + Real.tan x) \u2265 2 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1028 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a / (b + c) + b / (c + a) + c / (a + b)) \u2265 (4 * (a ^ 2 + b ^ 2 + c ^ 2) + 2 * (a * b + b * c + c * a)) / (a ^ 2 + b ^ 2 + c ^ 2 + 3 * (a * b + b * c + c * a)) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1028_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) : Real.sqrt (a ^ 2 + b ^ 2) / (a + b) + Real.sqrt (b ^ 2 + c ^ 2) / (b + c) + Real.sqrt (a ^ 2 + c ^ 2) / (a + c) \u2265 (Real.sqrt (2 * (a * b + b * c + c * a)) / 2) / (a + b + c):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_54401_plus (a b c : \u211d) (hab : 0 < a) (hb : 0 < b) (hc : 0 < c) : a * b * c * (1 / (a + b) + 1 / (b + c) + 1 / (c + a)) \u2264 (1 / 2) * (a ^ 2 + b ^ 2 + c ^ 2):= by", "target": "\n  have h\u2081 : 0 < a + b := add_pos hab hb\n  have h\u2082 : 0 < b + c := add_pos hb hc\n  have h\u2083 : 0 < c + a := add_pos hc hab\n  have h\u2084 : 0 < a * b := by positivity\n  have h\u2085 : 0 < b * c := by positivity\n  have h\u2086 : 0 < c * a := by positivity\n  have h\u2087 : 0 < a * b * c := by positivity\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_33563_plus (n : \u2115) (hn : 1 < n) : (\u2211 k in Finset.Ico 0 n, (1 / 2 : \u211d) ^ k * (1 / 2) ^ (n - k - 1)) \u2264 n:= by", "target": "\n  have hn' : (1 : \u211d) < n := by exact_mod_cast hn\n  have h : \u2200 k : \u2115, k \u2208 Finset.Ico 0 n \u2192 (1 / 2 : \u211d) ^ k * (1 / 2) ^ (n - k - 1) \u2264 1 := by\n    intro k hk\n    have h1 : (1 / 2 : \u211d) ^ k \u2264 1 := by\n      apply pow_le_one _ (by norm_num)\n      norm_num\n    have h2 : (1 / 2 : \u211d) ^ (n - k - 1) \u2264 1 := by\n      apply pow_le_one _ (by norm_num)\n      norm_num\n    calc\n      (1 / 2 : \u211d) ^ k * (1 / 2) ^ (n - k - 1) \u2264 1 * 1 := by gcongr\n      _ = 1 := by norm_num\n  exact (Finset.sum_le_sum h).trans (by simp)"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_37427_plus (n : \u2115) (hn : 1 \u2264 n \u2227 n \u2264 100) : \u2211 k in Finset.Icc 1 n, 1 / Real.sqrt (1 + (1 - 1 / k) ^ 2) \u2264 n * 2 \u2228 \u2211 k in Finset.Icc 1 n, 1 / Real.sqrt (1 + (1 - 1 / k) ^ 2) \u2265 n:= by", "target": "\n  have hn' : 1 \u2264 n \u2227 n \u2264 100 := hn\n  have hn'' : 1 \u2264 n := hn.1\n  have hn''' : n \u2264 100 := hn.2\n  have h1 : \u2211 k in Finset.Icc 1 n, 1 / Real.sqrt (1 + (1 - 1 / k) ^ 2) \u2264 n * 2 \u2228 \u2211 k in Finset.Icc 1 n, 1 / Real.sqrt (1 + (1 - 1 / k) ^ 2) \u2265 n := by\n    refine' or_iff_not_imp_right.mpr fun h => _\n    have h2 : \u2211 k in Finset.Icc 1 n, 1 / Real.sqrt (1 + (1 - 1 / k) ^ 2) \u2264 n * 2 := by\n      have h3 : \u2200 k \u2208 Finset.Icc 1 n, 1 / Real.sqrt (1 + (1 - 1 / k) ^ 2) \u2264 2 := by\n        intro k hk\n        rw [Finset.mem_Icc] at hk\n        have h4 : 0 < k := by linarith\n        have h5 : 1 / Real.sqrt (1 + (1 - 1 / k) ^ 2) \u2264 2 := by\n          rw [div_le_iff (Real.sqrt_pos.mpr (by\n            positivity\n            <;> nlinarith))]\n          have h6 : Real.sqrt (1 + (1 - 1 / k) ^ 2) \u2265 1 := by\n            apply Real.le_sqrt_of_sq_le\n            cases' k with k\n            \u00b7 simp_all\n            simp_all only [Nat.cast_add, Nat.cast_one, Nat.cast_zero, Nat.cast_succ]\n            ring_nf\n            apply le_of_sub_nonneg\n            field_simp\n            ring_nf\n            positivity\n          nlinarith\n        exact h5\n      exact\n        calc\n          \u2211 k in Finset.Icc 1 n, 1 / Real.sqrt (1 + (1 - 1 / k) ^ 2) \u2264 \u2211 k in Finset.Icc 1 n, 2 :=\n            Finset.sum_le_sum h3\n          _ = n * 2 := by simp [Finset.sum_const, Finset.card_range]\n    linarith\n  exact h1"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_13251_plus (n : \u2115) (hn : 1 < n) : (\u2211 x in (Nat.divisors n), (x : \u2115)) \u2265 n \u2227 (\u2211 x in (Nat.divisors n), (x : \u2115)) \u2265 n - 1 \u2228 (\u2211 x in (Nat.divisors n), (x : \u2115)) < n \u2227 (\u2211 x in (Nat.divisors n), (x : \u2115)) < n - 1  := by", "target": "\n  apply or_iff_not_imp_right.2\n  intro h\n  have h\u2081 : (\u2211 x in Nat.divisors n, x) \u2265 n := by\n    have : n \u2208 Nat.divisors n := by\n      simp [Nat.divisors]\n      omega\n    have : (\u2211 x in Nat.divisors n, x) \u2265 n := by\n      exact Finset.single_le_sum (fun x _ => Nat.zero_le x) this\n    exact this\n  have h\u2082 : (\u2211 x in Nat.divisors n, x) \u2265 n - 1 := by\n    have : n - 1 \u2264 (\u2211 x in Nat.divisors n, x) := by\n      have : n - 1 \u2264 n := by omega\n      have : (\u2211 x in Nat.divisors n, x) \u2265 n := by\n        exact h\u2081\n      omega\n    exact this\n  exact \u27e8h\u2081, h\u2082\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_8186 (a b c : \u211d) : 1 / (2 * a + b + c) + 1 / (2 * b + c + a) + 1 / (2 * c + a + b) \u2264 (31 * (a ^ 2 + b ^ 2 + c ^ 2) + 50 * (b * c + c * a + a * b)) / (12 * (a + b + c) ^ 3) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_8186_plus (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : 1 / (2 * a + b + c) + 1 / (2 * b + c + a) + 1 / (2 * c + a + b) \u2264 (31 * (a ^ 2 + b ^ 2 + c ^ 2) + 50 * (b * c + c * a + a * b)) / (12 * (a + b + c) ^ 3) \u2228 (31 * (a ^ 2 + b ^ 2 + c ^ 2) + 50 * (b * c + c * a + a * b)) / (12 * (a + b + c) ^ 3) \u2264 1 / (2 * a + b + c) + 1 / (2 * b + c + a) + 1 / (2 * c + a + b):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1832 (x y z : \u211d) : 3 * x ^ 2 * y * z + 3 * y ^ 2 * x * z + 3 * z ^ 2 * x * y \u2264 2 * x ^ 2 * y * z + 2 * y ^ 2 * x * z + 2 * z ^ 2 * x * y + x ^ 2 * y ^ 2 + x ^ 2 * z ^ 2 + y ^ 2 * z ^ 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1832_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) : x ^ 2 * y ^ 2 * z ^ 2 + (x ^ 2 * y ^ 2 + x ^ 2 * z ^ 2 + y ^ 2 * z ^ 2) \u2265 x * y * z * (x * y + x * z + y * z):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_15681_plus (a b c d : \u211d) (hab : 0 < a) (hbc : 0 < b) (hcd : 0 < c) (hda : 0 < d) : (1 / (1 + a ^ 2) + 1 / (1 + b ^ 2) + 1 / (1 + c ^ 2) + 1 / (1 + d ^ 2)) \u2265 4 / (1 + a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) \u2227 (1 / (1 + a ^ 2) + 1 / (1 + b ^ 2) + 1 / (1 + c ^ 2) + 1 / (1 + d ^ 2)) \u2265 4 / (1 + a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) := by", "target": "\n  constructor\n  apply le_of_sub_nonneg\n  field_simp [hab, hbc, hcd, hda]\n  ring_nf\n  positivity\n  apply le_of_sub_nonneg\n  field_simp [hab, hbc, hcd, hda]\n  ring_nf\n  positivity"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_32639_plus (a b c : \u211d) (habc : a * b * c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0) : a ^ 8 + b ^ 8 + c ^ 8 \u2265 a ^ 3 * b ^ 3 * c ^ 2 + b ^ 3 * c ^ 3 * a ^ 2 + c ^ 3 * a ^ 3 * b ^ 2 \u2227 a ^ 3 * b ^ 3 * c ^ 2 + b ^ 3 * c ^ 3 * a ^ 2 + c ^ 3 * a ^ 3 * b ^ 2 \u2265 a ^ 3 * b ^ 3 * c ^ 2 + b ^ 3 * c ^ 3 * a ^ 2 + c ^ 3 * a ^ 3 * b ^ 2 := by", "target": "\n  obtain \u27e8ha, hb, hc\u27e9 := h\n  have h\u2080 : 0 < a ^ 3 * b ^ 3 * c ^ 2 + b ^ 3 * c ^ 3 * a ^ 2 + c ^ 3 * a ^ 3 * b ^ 2 := by positivity\n  have h\u2081 : a ^ 8 + b ^ 8 + c ^ 8 \u2265 a ^ 3 * b ^ 3 * c ^ 2 + b ^ 3 * c ^ 3 * a ^ 2 + c ^ 3 * a ^ 3 * b ^ 2 := by\n    nlinarith [sq_nonneg (a ^ 4 - b ^ 4), sq_nonneg (b ^ 4 - c ^ 4), sq_nonneg (c ^ 4 - a ^ 4),\n      sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n      sq_nonneg (a ^ 3 - b ^ 3), sq_nonneg (b ^ 3 - c ^ 3), sq_nonneg (c ^ 3 - a ^ 3)]\n  have h\u2082 : a ^ 3 * b ^ 3 * c ^ 2 + b ^ 3 * c ^ 3 * a ^ 2 + c ^ 3 * a ^ 3 * b ^ 2 \u2265 a ^ 3 * b ^ 3 * c ^ 2 + b ^ 3 * c ^ 3 * a ^ 2 + c ^ 3 * a ^ 3 * b ^ 2 := by\n    linarith\n  exact \u27e8h\u2081, h\u2082\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_31888_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : a * b + b * c + c * a \u2264 (a ^ 2 + b ^ 2 + c ^ 2) \u2228 (a / (2 * a + b + c) + b / (2 * b + c + a) + c / (2 * c + a + b)) \u2265 3 * (b * c + c * a + a * b) / (4 * (a ^ 2 + b ^ 2 + c ^ 2)) \u2228 (a / (2 * a + b + c) + b / (2 * b + c + a) + c / (2 * c + a + b)) \u2265 3 * (b * c + c * a + a * b) / (4 * (a ^ 2 + b ^ 2 + c ^ 2))  := by", "target": "\n  by_cases h\u2081 : a * b + b * c + c * a \u2264 (a ^ 2 + b ^ 2 + c ^ 2) <;> by_cases h\u2082 : (a / (2 * a + b + c) + b / (2 * b + c + a) + c / (2 * c + a + b)) \u2265 3 * (b * c + c * a + a * b) / (4 * (a ^ 2 + b ^ 2 + c ^ 2)) <;> simp_all\n  all_goals\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_56984_plus (a b x y : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b) (hxy : 0 \u2264 x \u2227 0 \u2264 y) (ha : a + b = 1) (hx : x + y = 1) (h : 0 \u2264 a * x + b * y) : (1 - a * x - b * y) ^ 2 * (a * x + b * y) \u2264 (a * x + b * y) * (1 - a * x - b * y):= by", "target": "\n  have h\u2081 : 0 \u2264 a * x + b * y := by nlinarith\n  have h\u2082 : (1 - a * x - b * y) ^ 2 \u2264 1 - a * x - b * y := by\n    have h\u2083 : 1 - a * x - b * y \u2264 1 := by nlinarith\n    have h\u2084 : 0 \u2264 1 - a * x - b * y := by nlinarith\n    nlinarith\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4598 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : 1 / a + 1 / b + 1 / c + 6 / \u221a(3 * (a ^ 2 + b ^ 2 + c ^ 2)) \u2265 15 / (a + b + c) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4598_plus (a b c : \u211d) (hab : 0 < a) (hb : 0 < b) (hc : 0 < c) : \u2203 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 1 / a + 1 / b + 1 / c + 6 / \u221a(3 * (a ^ 2 + b ^ 2 + c ^ 2)) \u2265 15 / (a + b + c) \u2227 a + b + c \u2264 3:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_56824_plus (n : \u2115) (hn : \u2203 a b : \u2115, n = a^2 + b^2) : \u2203 a b : \u2115, 2 * n \u2264 a^2 + b^2 \u2227 \u2203 a b : \u2115, 5 * n \u2264 a^2 + b^2  := by", "target": "\n  obtain \u27e8a, b, hab\u27e9 := hn\n  use n + 1, n\n  constructor\n  nlinarith\n  use n + 2, n\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2497 (a b c : \u211d) : (a^2 / b^2 + b^2 / c^2 + c^2 / a^2) + 8 * (a * b + b * c + c * a) / (a^2 + b^2 + c^2) \u2265 11 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2497_plus (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a * b + b * c + c * a \u2264 3 * (a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2) + (a ^ 2 + b ^ 2 + c ^ 2):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4047 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a * b + b * c + c * a = 1) : (a^2 * (a^2 + a - c) / b^2 + b^2 * (b^2 + b - a) / c^2 + c^2 * (c^2 + c - b) / a^2) \u2265 (a + b + c)^2 * (a^2 + b^2 + c^2) / 3 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4047_plus (a b c : \u211d) (hab : 0 < a \u2227 0 < b \u2227 0 < c) (h : a * b + b * c + c * a = 1) : (1 / (a + 1) ^ 2 + 1 / (b + 1) ^ 2 + 1 / (c + 1) ^ 2) \u2265 3 / (4 * (a + b + c + 3)) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_61474_plus (n : \u2115) (hn : 1 < n) : (\u2203 k s : \u2124, 7 * k - 1 = s ^ 2 \u2227 1 < n \u2227 n \u2264 10) \u2228 (\u2200 k s : \u2124, 7 * k - 1 \u2260 s ^ 2 \u2228 n > 10) := by", "target": "\n  by_cases h : \u2200 k s : \u2124, 7 * k - 1 \u2260 s ^ 2 \u2228 n > 10\n  all_goals\n    simp_all\n  all_goals\n    use 0\n    use -1\n    norm_num\n  all_goals\n    omega"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_49663_plus (x : \u211d) (y : \u211d) (z : \u211d) (h\u2081 : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z) (h\u2082 : x + y + z = 1) (h\u2083 : 0 \u2264 x * y) (h\u2084 : 0 \u2264 x * z) (h\u2085 : 0 \u2264 y * z) :\n  Real.sqrt (x ^ 2 + y ^ 2) * Real.sqrt (x ^ 2 + z ^ 2) * Real.sqrt (y ^ 2 + z ^ 2) \u2265 x * y * z * 3 / 2  := by", "target": "\n  have h\u2080 : Real.sqrt (x ^ 2 + y ^ 2) * Real.sqrt (x ^ 2 + z ^ 2) * Real.sqrt (y ^ 2 + z ^ 2) =\n      Real.sqrt ((x ^ 2 + y ^ 2) * (x ^ 2 + z ^ 2) * (y ^ 2 + z ^ 2)) := by\n    rw [Real.sqrt_mul, Real.sqrt_mul]\n    all_goals positivity\n  rw [h\u2080]\n  apply le_sqrt_of_sq_le\n  nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (x ^ 2 - z ^ 2), sq_nonneg (y ^ 2 - z ^ 2),\n    mul_nonneg h\u2083 h\u2084, mul_nonneg h\u2084 h\u2085, mul_nonneg h\u2083 h\u2085,\n    mul_nonneg (sq_nonneg x) (sq_nonneg y), mul_nonneg (sq_nonneg x) (sq_nonneg z),\n    mul_nonneg (sq_nonneg y) (sq_nonneg z)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4507 (f : \u2115 \u2192 \u211d) (n : \u2115) (h\u2081 : f 1 = 1/2) (h\u2082 : \u2200 x y : \u2115, f (x + y) = f x * f y) : f n = (1/2)^n := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4507_plus (n : \u2115) (h\u2081 : \u2200 x y : \u2115, x \u2264 y \u2192 \u2203 z : \u2115, x + z = y) (h\u2082 : \u2203 x : \u2115, \u2200 y : \u2115, y \u2264 x \u2192 y = 0 \u2228 y = 1) : \u2203 x : \u2115, \u2200 y : \u2115, y \u2264 x \u2192 y = 0 \u2228 y = 1 \u2228 \u2203 z : \u2115, x + z = y \u2227 z \u2260 0 \u2227 z \u2260 1:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_9756 (a b c k : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hk : 0 < k) : (a^3 / (k * a^2 + b^2) + b^3 / (k * b^2 + c^2) + c^3 / (k * c^2 + a^2)) \u2265 (a + b + c) / (k + 1) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_9756_plus (a b c k : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hk : 0 < k) : (\u2203 a b c :\u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 (a^3 / (k * a^2 + b^2) + b^3 / (k * b^2 + c^2) + c^3 / (k * c^2 + a^2)) \u2265 (a + b + c) / (k + 1)) \u2228 (\u2200 a b c :\u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 (a^3 / (k * a^2 + b^2) + b^3 / (k * b^2 + c^2) + c^3 / (k * c^2 + a^2)) < (a + b + c) / (k + 1)) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_11711_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c \u2264 1) (h : 0 \u2264 a * b) (h' : 0 \u2264 a * c) (h'' : 0 \u2264 b * c) : Real.sqrt (a * b) + Real.sqrt (b * c) + Real.sqrt (c * a) \u2264 1 \u2228 (1 - Real.sqrt (a * b) - c) / (a + b) + (1 - Real.sqrt (b * c) - a) / (b + c) + (1 - Real.sqrt (c * a) - b) / (c + a) \u2264 (3 / 2) * (a ^ 2 + b ^ 2 + c ^ 2) / (a * b + b * c + c * a):= by", "target": "\n  refine' or_iff_not_imp_right.2 fun h\u2080 => _\n  have h\u2081 : Real.sqrt (a * b) \u2264 (a + b) / 2 := by\n    nlinarith [sq_sqrt (mul_nonneg hab hb), sq_nonneg (a - b)]\n  have h\u2082 : Real.sqrt (b * c) \u2264 (b + c) / 2 := by\n    nlinarith [sq_sqrt (mul_nonneg hb hc), sq_nonneg (b - c)]\n  have h\u2083 : Real.sqrt (c * a) \u2264 (c + a) / 2 := by\n    nlinarith [sq_sqrt (mul_nonneg hc hab), sq_nonneg (c - a)]\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_6244 (x y z t : \u211d) (h : t > 0) (h' : x^2 + y^2 + z^2 + 1 - 2 * t * (x * y + y + z) \u2265 0) : (x^2 + y^2 + z^2 + 1) / (x * y + y + z) \u2265 2 * t := by\n<hard theorem>", "target": "\ntheorem leanworkbook_6244_plus (x y z t : \u211d) (h\u2081 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2082 : 0 < t) (h\u2083 : x * y + y * z + z * x \u2264 1) (h\u2084 : 0 \u2264 x * y * z) : (x + y + z) ^ 2 / (x * y + y * z + z * x) + (x * y * z) * (x * y + y * z + z * x) \u2265 (x * y + y * z + z * x):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_5087_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) : Real.sqrt (3 * (a^2 + b^2 + c^2)) \u2265 (a + b + c) - Real.sqrt (3 * (a^2 + b^2 + c^2)) / 3 \u2227 (Real.sqrt (3 * (a^2 + b^2 + c^2)) / 3) \u2265 0 \u2227  Real.sqrt (3 * (a^2 + b^2 + c^2)) / 3 \u2265 (a + b + c) / 3 - Real.sqrt (3 * (a^2 + b^2 + c^2)) / 3 \u2228 Real.sqrt (3 * (a^2 + b^2 + c^2)) \u2265 (a + b + c) - Real.sqrt (3 * (a^2 + b^2 + c^2)) / 3 \u2227 (Real.sqrt (3 * (a^2 + b^2 + c^2)) / 3) \u2265 0 \u2227  Real.sqrt (3 * (a^2 + b^2 + c^2)) / 3 \u2265 (a + b + c) / 3 - Real.sqrt (3 * (a^2 + b^2 + c^2)) / 3 \u2228 Real.sqrt (3 * (a^2 + b^2 + c^2)) \u2265 (a + b + c) - Real.sqrt (3 * (a^2 + b^2 + c^2)) / 3 \u2227 (Real.sqrt (3 * (a^2 + b^2 + c^2)) / 3) \u2265 0 \u2227  Real.sqrt (3 * (a^2 + b^2 + c^2)) / 3 \u2265 (a + b + c) / 3 - Real.sqrt (3 * (a^2 + b^2 + c^2)) / 3 \u2228 Real.sqrt (3 * (a^2 + b^2 + c^2)) \u2265 (a + b + c) - Real.sqrt (3 * (a^2 + b^2 + c^2)) / 3 \u2227 (Real.sqrt (3 * (a^2 + b^2 + c^2)) / 3) \u2265 0 \u2227  Real.sqrt (3 * (a^2 + b^2 + c^2)) / 3 \u2265 (a + b + c) / 3 - Real.sqrt (3 * (a^2 + b^2 + c^2)) / 3 := by", "target": "\n  apply Or.inl\n  exact \u27e8by\n    nlinarith [Real.sqrt_nonneg (3 * (a ^ 2 + b ^ 2 + c ^ 2)), sq_sqrt (show (0 : \u211d) \u2264 3 * (a ^ 2 + b ^ 2 + c ^ 2) by positivity), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)], by\n    nlinarith [Real.sqrt_nonneg (3 * (a ^ 2 + b ^ 2 + c ^ 2)), sq_sqrt (show (0 : \u211d) \u2264 3 * (a ^ 2 + b ^ 2 + c ^ 2) by positivity), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)], by\n    nlinarith [Real.sqrt_nonneg (3 * (a ^ 2 + b ^ 2 + c ^ 2)), sq_sqrt (show (0 : \u211d) \u2264 3 * (a ^ 2 + b ^ 2 + c ^ 2) by positivity), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1288 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : 0 \u2264 (y + z) ^ 2 / (2 * (x + y) ^ 2 + 2 * (y + z) ^ 2 - (z + x) ^ 2) + (z + x) ^ 2 / (2 * (z + x) ^ 2 + 2 * (x + y) ^ 2 - (y + z) ^ 2) + (x + y) ^ 2 / (2 * (y + z) ^ 2 + 2 * (z + x) ^ 2 - (x + y) ^ 2) - 9 / 16 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1288_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : Real.sqrt (x ^ 2 + (y + z) ^ 2) + Real.sqrt (y ^ 2 + (z + x) ^ 2) + Real.sqrt (z ^ 2 + (x + y) ^ 2) \u2265 Real.sqrt 2 * (x + y + z) \u2227 Real.sqrt 2 * (x + y + z) \u2265 0:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_40192_plus (p m n q : \u211d) (h\u2081 : m \u2260 0 \u2228 n \u2260 0) : ((p * m - q * n) ^ 2 + (p * n + q * m) ^ 2) / (m ^ 2 + n ^ 2) = p ^ 2 + q ^ 2 \u2228 (m = 0 \u2227 n = 0):= by", "target": "\n  apply or_iff_not_imp_right.2\n  intro h\n  have h\u2082 : m ^ 2 + n ^ 2 \u2260 0 := by\n    intro h\u2082\n    have h\u2083 : m = 0 \u2227 n = 0 := by\n      apply And.intro\n      \u00b7 nlinarith\n      \u00b7 nlinarith\n    apply h\n    exact h\u2083\n  field_simp [h\u2082]\n  ring\n  <;> simp [h\u2081]\n  <;> ring\n  <;> simp [h\u2081]\n  <;> ring\n  <;> simp [h\u2081]\n  <;> ring\n  <;> simp [h\u2081]\n  <;> ring"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_9628_plus (n : \u2115) (hn : 1 \u2264 n) (x y : \u211d) (hy : 0 \u2264 y) : \u2203 z : \u211d, z \u2264 n \u2227 (4:\u211d) * (y ^ (n + 3) + 1) ^ (n + 1) \u2265 (y ^ (2 * n + 2) + 1) ^ 2 * (y ^ (n - 1) + 1) ^ (n + 1) \u2228 (4:\u211d) * (y ^ (n + 3) + 1) ^ (n + 1) < (y ^ (2 * n + 2) + 1) ^ 2 * (y ^ (n - 1) + 1) ^ (n + 1) \u2227 \u2203 z : \u211d, z \u2264 n \u2227 0 \u2264 z:= by", "target": "\n  refine' \u27e80, _\u27e9\n  by_cases h : (4:\u211d) * (y ^ (n + 3) + 1) ^ (n + 1) \u2265 (y ^ (2 * n + 2) + 1) ^ 2 * (y ^ (n - 1) + 1) ^ (n + 1)\n  \u00b7 exact Or.inl \u27e8by linarith, by linarith\u27e9\n  \u00b7 exact Or.inr \u27e8by linarith, 0, by linarith, by linarith\u27e9\n  <;> aesop\n  <;> aesop\n  <;> aesop"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_11721_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) : x ^ 2 + y ^ 2 + z ^ 2 + (x * y + y * z + z * x) \u2265 2 * x * y * (x + y) / (x + y) + 2 * y * z * (y + z) / (y + z) + 2 * z * x * (z + x) / (z + x):= by", "target": "\n  by_cases h1 : x + y = 0 <;> by_cases h2 : y + z = 0 <;> by_cases h3 : z + x = 0 <;>\n  field_simp [h1, h2, h3] <;>\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_nonneg hx hy, mul_nonneg hy hz, mul_nonneg hz hx,\n    mul_nonneg (sq_nonneg x) hx, mul_nonneg (sq_nonneg y) hy, mul_nonneg (sq_nonneg z) hz]\n  <;>\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_1065_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : a + b + c = 1) (h : (1 - a) * (1 - b) * (1 - c) \u2265 8 * a * b * c) : 1 + (1 - a) * (1 - b) * (1 - c) / (a * b + b * c + c * a) \u2265 16 * a * b * c:= by", "target": "\n  have h\u2081 : 0 < a * b := by positivity\n  have h\u2082 : 0 < b * c := by positivity\n  have h\u2083 : 0 < c * a := by positivity\n  have h\u2084 : 0 < a * b * c := by positivity\n  have h\u2085 : 0 < a * b * c * (a * b + b * c + c * a) := by positivity\n  have h\u2086 : (1 - a) * (1 - b) * (1 - c) \u2265 8 * a * b * c := by linarith\n  have h\u2087 : a * b + b * c + c * a \u2264 1 := by\n    nlinarith\n  have h\u2088 : 1 + (1 - a) * (1 - b) * (1 - c) / (a * b + b * c + c * a) \u2265 16 * a * b * c := by\n    rw [add_comm]\n    rw [add_comm]\n    apply le_of_sub_nonneg\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith\n  exact h\u2088"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_38400_plus (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : a * b + b * c + c * a \u2264 (a ^ 2 + b ^ 2 + c ^ 2) + 3 * (a * b * c * (1 / (a * b + b * c + c * a))) * (a * b + b * c + c * a) \u2228 0 \u2264 (a - b) ^ 2 * (1 / (a * b + b * c + c * a)) \u2228 0 \u2264 (b - c) ^ 2 * (1 / (a * b + b * c + c * a)) \u2228 0 \u2264 (c - a) ^ 2 * (1 / (a * b + b * c + c * a))  := by", "target": "\n  refine' or_iff_not_imp_left.mpr fun h => _\n  refine' or_iff_not_imp_left.mpr fun h' => _\n  refine' or_iff_not_imp_left.mpr fun h'' => _\n  positivity"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_40354_plus (a b c : \u211d) (hab : 0 \u2264 a) (hbc : 0 \u2264 b) (hca : 0 \u2264 c) (habc : a * b + b * c + c * a = 1) : a ^ 2 * b ^ 2 * c ^ 2 * (a + b + c) ^ 2 \u2264 (a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2) * (c ^ 2 + a ^ 2) * (a + b + c) ^ 2 \u2227 (a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2) * (c ^ 2 + a ^ 2) * (a + b + c) ^ 2 \u2265 (a ^ 2 * b ^ 2 * c ^ 2 * (a + b + c) ^ 2):= by", "target": "\n  have h1 : 0 \u2264 a * b := by positivity\n  have h2 : 0 \u2264 b * c := by positivity\n  have h3 : 0 \u2264 c * a := by positivity\n  have h4 : 0 \u2264 a * b * c := by positivity\n  have h5 : 0 \u2264 a * b * c * (a + b + c) := by positivity\n  have h6 : (a ^ 2 * b ^ 2 * c ^ 2 * (a + b + c) ^ 2) \u2264 (a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2) * (c ^ 2 + a ^ 2) * (a + b + c) ^ 2 := by\n    refine' mul_le_mul (mul_le_mul (mul_le_mul _ _ (by positivity) (by positivity)) _ (by positivity) (by positivity)) (by\n      nlinarith) (by positivity) (by positivity) <;> nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2)]\n  exact \u27e8h6, by nlinarith [h6]\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_401 (a b c : \u211d) (h\u2081 : a \u2265 b \u2227 b \u2265 c \u2227 c \u2265 0) (h\u2082 : a + b + c = 3) : a * b^2 + b * c^2 + c * a^2 \u2264 3.375 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_401_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (h : a + b + c = 3) (h\u2081 : a * b + b * c + c * a \u2264 3) : a ^ 3 + b ^ 3 + c ^ 3 + 3 * (a ^ 2 * b ^ 2 * c ^ 2) \u2265 a * b * c * (a + b + c):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_6397 (p : \u2124 \u2192 \u2124) (a b n : \u2124) (hp : \u2200 x : \u2124, p x = x^2 + a * x + b) : \u2203 M : \u2124, p n * p (n + 1) = p M := by\n<hard theorem>", "target": "\ntheorem leanworkbook_6397_plus (p : \u2124 \u2192 \u2124) (a b n : \u2124) (hp : \u2200 x : \u2124, p x = x^2 + a * x + b) (h\u2081 : \u2203 x, p x = 0) : \u2203 M : \u2124, p n * p (n + 1) \u2264 p M \u2228 p M \u2264 p n * p (n + 1) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1223 : a - b^2 = 0 \u2194 a = b^2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1223_plus : \u2200 a b : \u2115, a - b^2 = 0 \u2194 a \u2264 b^2 \u2228 a = b^2 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4249 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : 1 / (3 * a + 2 * b + c) + 1 / (3 * b + 2 * c + a) + 1 / (3 * c + 2 * a + b) \u2264 1 / 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4249_plus (a b c : \u211d) (habc : a * b * c = 1) (h : 0 < a \u2227 0 < b \u2227 0 < c) : (1 / (3 * a + 2 * b + c) + 1 / (3 * b + 2 * c + a) + 1 / (3 * c + 2 * a + b)) ^ 2 \u2264 (1 / 2) ^ 2 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4691 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : b * c + c * a + a * b = 3) : 1 / (a ^ 2 + 1) + 1 / (b ^ 2 + 1) + 1 / (c ^ 2 + 1) < 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4691_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a * b + b * c + c * a = 3) : 1 / (a ^ 2 + 1) + 1 / (b ^ 2 + 1) + 1 / (c ^ 2 + 1) < 2 \u2228 (1 / (a ^ 2 + 1) + 1 / (b ^ 2 + 1) + 1 / (c ^ 2 + 1) \u2265 2 \u2227 (a = 1 \u2227 b = 1 \u2227 c = 1)):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_19868_plus (a b c : \u211d) (habc : a + b + c = 3) (h : 0 < a \u2227 0 < b \u2227 0 < c) : (\u2203 x y z : \u211d, x + y + z = 3 \u2227 0 < x \u2227 0 < y \u2227 0 < z \u2227 x * y * z \u2264 1) \u2227 (\u2203 x y z : \u211d, x + y + z = 3 \u2227 0 < x \u2227 0 < y \u2227 0 < z \u2227 1 \u2264 x * y * z \u2227 x * y * z \u2264 3):= by", "target": "\n  have h\u2081 : (\u2203 x y z : \u211d, x + y + z = 3 \u2227 0 < x \u2227 0 < y \u2227 0 < z \u2227 x * y * z \u2264 1) := by\n    refine' \u27e81, 1, 1, by norm_num, by norm_num, by norm_num, by norm_num, _\u27e9\n    ring_nf\n    nlinarith\n  have h\u2082 : (\u2203 x y z : \u211d, x + y + z = 3 \u2227 0 < x \u2227 0 < y \u2227 0 < z \u2227 1 \u2264 x * y * z \u2227 x * y * z \u2264 3) := by\n    refine' \u27e81, 1, 1, by norm_num, by norm_num, by norm_num, by norm_num, by norm_num, by norm_num\u27e9\n  exact \u27e8h\u2081, h\u2082\u27e9\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_48096_plus : \u2200 \u03b5 : \u211d, \u03b5 > 0 \u2192 \u2203 N : \u2115, \u2200 y : \u211d, y > N \u2192 1 + \u03b5 * y \u2264 y ^ 2 \u2228 1 + \u03b5 * y \u2264 y ^ 2 \u2228 1 + \u03b5 * y \u2264 y ^ 2 \u2228 1 + \u03b5 * y \u2264 y ^ 2 \u2228 1 + \u03b5 * y \u2264 y ^ 2 \u2228 1 + \u03b5 * y \u2264 y ^ 2 := by", "target": "\n  intro \u03b5 h\u03b5\n  use \u2308(1 + \u03b5)\u2309\u208a\n  intro y hy\n  have h\u2081 : 0 < y := by\n    linarith [Nat.le_ceil (1 + \u03b5)]\n  have h\u2082 : 1 + \u03b5 * y \u2264 y ^ 2 := by\n    nlinarith [sq_nonneg (y - 1), sq_nonneg \u03b5, Nat.le_ceil (1 + \u03b5)]\n  exact Or.inl h\u2082"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_73970_plus (a b c d : \u211d) (hab : 0 < a \u2227 0 < b \u2227 0 < c \u2227 0 < d) (h : a * b * c * d = 1) (h' : a^2 + b^2 + c^2 + d^2 \u2264 3) : 1 / a + 1 / b + 1 / c + 1 / d \u2264 3 + 1 / (a * b * c * d) \u2228 1 / a + 1 / b + 1 / c + 1 / d \u2264 3 * (1 / (a * b * c * d)) \u2228 1 / a + 1 / b + 1 / c + 1 / d \u2264 4 * (1 / (a * b * c * d)) \u2228 1 / a + 1 / b + 1 / c + 1 / d \u2264 5 * (1 / (a * b * c * d))  := by", "target": "\n  have h1 : 0 < a := by linarith\n  have h2 : 0 < b := by linarith\n  have h3 : 0 < c := by linarith\n  have h4 : 0 < d := by linarith\n  have h5 : 0 < a * b := by positivity\n  have h6 : 0 < c * d := by positivity\n  have h7 : 0 < a * b * c := by positivity\n  have h8 : 0 < a * b * d := by positivity\n  have h9 : 0 < a * b * c * d := by positivity\n  norm_num [h, h']\n  apply Or.inl\n  apply le_of_sub_nonneg\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (c - d), sq_nonneg (a * b - c * d), sq_nonneg (a * b * c - d * b * c), sq_nonneg (a * b * d - c * d * d)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_8320 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a / b + b / c + c / a) \u2265 3 \u2227 2 * (a ^ 2 + b ^ 2) \u2265 (a + b) ^ 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_8320_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b + b * c + c * a = 1) : a ^ 2 / (1 + a) + b ^ 2 / (1 + b) + c ^ 2 / (1 + c) \u2265 (a * b + b * c + c * a) / (1 + (a * b + b * c + c * a)) \u2227 (a ^ 2 + b ^ 2 + c ^ 2) * (1 / (a + b + c)) \u2265 (a * b + b * c + c * a) * (1 / (a + b + c)) \u2227 (a * b + b * c + c * a) * (1 / (a + b + c)) \u2265 0:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_19838_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 1) (h\u2082 : x * y + y * z + z * x \u2264 1) :  x ^ 2 * y ^ 2 * z ^ 2 * (x + y + z) ^ 2 \u2264 x * y * z * (x + y + z):= by", "target": "\n  have h\u2080 : 0 \u2264 x * y := by positivity\n  have h\u2081 : 0 \u2264 y * z := by positivity\n  have h\u2082 : 0 \u2264 z * x := by positivity\n  have h\u2083 : 0 \u2264 x * y * z := by positivity\n  have h\u2084 : 0 \u2264 x * y * z * (x + y + z) := by positivity\n  have h\u2085 : 0 \u2264 x * y * z * (x + y + z) * (x * y + y * z + z * x) := by positivity\n  have h\u2086 : 0 \u2264 x * y * z * (x * y + y * z + z * x) := by positivity\n  have h\u2087 : 0 \u2264 x * y * z * (x * y + y * z + z * x) * (x + y + z) := by positivity\n  have h\u2088 : x ^ 2 * y ^ 2 * z ^ 2 * (x + y + z) ^ 2 \u2264 x * y * z * (x + y + z) := by\n    have h\u2089 : x * y * z \u2264 1 := by\n      nlinarith\n    have h\u2081\u2080 : x * y * z * (x + y + z) \u2264 1 * 1 := by\n      nlinarith\n    have h\u2081\u2081 : x ^ 2 * y ^ 2 * z ^ 2 \u2264 (x * y * z) ^ 2 := by\n      nlinarith\n    have h\u2081\u2082 : (x * y * z) ^ 2 * (x + y + z) ^ 2 \u2264 (x * y * z * (x + y + z)) ^ 2 := by\n      nlinarith\n    nlinarith\n  exact h\u2088"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_28906_plus (a b c : \u211d) (habc : a * b * c = 1) (h : a^2 + b^2 + c^2 + 2 * a * b * c = 1) :\n   \u2203 (x y z : \u211d), x * y * z = 1 \u2227 x^2 + y^2 + z^2 + 2 * x * y * z = 1 \u2227 1 / x^2 + 1 / y^2 + 1 / z^2 \u2265 2 * (1 / x + 1 / y + 1 / z):= by", "target": "\n  refine' \u27e8a, b, c, habc, h, _\u27e9\n  ring_nf\n  nlinarith [sq_nonneg (a * b - c), sq_nonneg (b * c - a), sq_nonneg (c * a - b)]\n  <;> simp [habc, h]\n  <;> nlinarith\n  <;> simp [habc, h]\n  <;> nlinarith\n  <;> simp [habc, h]\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5893 (x y z : \u211d) (h : x*y + y*z + z*x = 3) : (1 + 3 * x ^ 2) * (1 + 3 * y ^ 2) * (1 + 3 * z ^ 2) \u2265 64 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5893_plus (x y z : \u211d) (h\u2081 : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z) (h\u2082 : x + y + z = 3) (h\u2083 : x * y + y * z + z * x \u2264 3) : x ^ 2 * y ^ 2 * z ^ 2 * (x + y + z) ^ 2 \u2264 (x + y + z) ^ 6 / 27:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_34691_plus : \u2200 a b c d : \u211d, a \u2208 Set.Ioo 0 1 \u2227 b \u2208 Set.Ioo 0 1 \u2227 c \u2208 Set.Ioo 0 1 \u2227 d \u2208 Set.Ioo 0 1 \u2192 a * b * c * d > 0 \u2227 (1 - a) * (1 - b) * (1 - c) * (1 - d) > 0 \u2227 \u221a(a * b * c * d) \u2264 (a * b + c * d) / 2 \u2227 \u221a((1 - a) * (1 - b) * (1 - c) * (1 - d)) \u2264 ((1 - a) * (1 - b) + (1 - c) * (1 - d)) / 2 \u2227 \u221a(a * b * c * d) + \u221a((1 - a) * (1 - b) * (1 - c) * (1 - d)) < 1:= by", "target": "\n  rintro a b c d \u27e8\u27e8ha0, ha1\u27e9, \u27e8hb0, hb1\u27e9, \u27e8hc0, hc1\u27e9, \u27e8hd0, hd1\u27e9\u27e9\n  have : 0 < a * b := by nlinarith\n  have : 0 < c * d := by nlinarith\n  have : 0 < (1 - a) * (1 - b) := by nlinarith\n  have : 0 < (1 - c) * (1 - d) := by nlinarith\n  have : a * b * c * d > 0 := by nlinarith\n  have : (1 - a) * (1 - b) * (1 - c) * (1 - d) > 0 := by nlinarith\n  have : \u221a(a * b * c * d) \u2264 (a * b + c * d) / 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith [sq_nonneg (a * b - c * d)]\n  have : \u221a((1 - a) * (1 - b) * (1 - c) * (1 - d)) \u2264 ((1 - a) * (1 - b) + (1 - c) * (1 - d)) / 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith [sq_nonneg ((1 - a) * (1 - b) - (1 - c) * (1 - d))]\n  have : \u221a(a * b * c * d) + \u221a((1 - a) * (1 - b) * (1 - c) * (1 - d)) < 1 := by\n    have : \u221a(a * b * c * d) \u2264 (a * b + c * d) / 2 := by\n      apply Real.sqrt_le_iff.mpr\n      constructor\n      \u00b7 nlinarith\n      \u00b7 nlinarith [sq_nonneg (a * b - c * d)]\n    have : \u221a((1 - a) * (1 - b) * (1 - c) * (1 - d)) \u2264 ((1 - a) * (1 - b) + (1 - c) * (1 - d)) / 2 := by\n      apply Real.sqrt_le_iff.mpr\n      constructor\n      \u00b7 nlinarith\n      \u00b7 nlinarith [sq_nonneg ((1 - a) * (1 - b) - (1 - c) * (1 - d))]\n    nlinarith\n  exact \u27e8by nlinarith, by nlinarith, by nlinarith, by nlinarith, by nlinarith\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4004 (x y z : \u211d) : 1 + x^2 * y^2 + y^2 * z^2 + z^2 * x^2 \u2265 4 * Real.sqrt 3 * x * y * z := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4004_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) : 1 + x ^ 2 * y ^ 2 + y ^ 2 * z ^ 2 + z ^ 2 * x ^ 2 \u2265 4 * (Real.sqrt 3 / 3) * x * y * z \u2227 4 * (Real.sqrt 3 / 3) * x * y * z \u2265 0 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_8037 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (h : a^2 + b^2 + c^2 = 1) : 1 / a^2 + 1 / b^2 + 1 / c^2 \u2265 3 + 2 * (a^3 + b^3 + c^3) / (a * b * c) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_8037_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b + b * c + c * a = 1) : a ^ 2 + b ^ 2 + c ^ 2 + (1 - 2 * (a * b + b * c + c * a)) ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) \u2265 2 * (a * b * c):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_10015 (f : \u211d \u2192 \u211d):(\u2200 x y, f (x * f (x - y)) + y * f x = x + y + f (x ^ 2)) \u2194 \u2200 x, f x = x + 1 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_10015_plus (f : \u211d \u2192 \u211d) (hf: \u2200 x, f x = x + 1) : \u2200 x y, f (x * f (x - y)) + y * f x = x + y + f (x ^ 2) \u2194 \u2200 x, f x = x + 1 \u2228 \u2200 x, f x = -x - 1:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_47114_plus (x : \u211d) (y : \u211d) (h\u2081 : x \u2264 y) (h\u2082 : 0 \u2264 x) (h\u2083 : 0 \u2264 y) (h\u2084 : 0 \u2264 x + y) : Real.sqrt (x ^ 2 + y ^ 2) \u2265 x * (1 - exp (- y)) / (x + y):= by", "target": "\n  have h\u2085 : 0 \u2264 (x - y) ^ 2 := by positivity\n  have h\u2086 : Real.sqrt (x ^ 2 + y ^ 2) \u2265 (x + y) / 2 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2087 : x * (1 - exp (- y)) / (x + y) \u2264 (x + y) / 2 := by\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith [add_one_le_exp (-y), exp_pos (-y)]\n  linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_27996_plus : \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a * b > 0 \u2227 b * c > 0 \u2227 a * c > 0 \u2192 a^2 / (b^2 + c^2) + b^2 / (a^2 + c^2) + c^2 / (a^2 + b^2) \u2265 3 / 4 \u2227 (a^2 / (b^2 + c^2) + b^2 / (a^2 + c^2) + c^2 / (a^2 + b^2)) ^ 2 \u2265 (3 / 4) ^ 2:= by", "target": "\n  rintro a b c \u27e8ha, hb, hc\u27e9 \u27e8hab, hbc, hac\u27e9\n  have h\u2080 : 0 < a ^ 2 + b ^ 2 := by positivity\n  have h\u2081 : 0 < b ^ 2 + c ^ 2 := by positivity\n  have h\u2082 : 0 < a ^ 2 + c ^ 2 := by positivity\n  have h\u2083 : 0 < a ^ 2 + b ^ 2 + c ^ 2 := by positivity\n  have h\u2084 : 0 < a ^ 2 * b ^ 2 := by positivity\n  have h\u2085 : 0 < b ^ 2 * c ^ 2 := by positivity\n  have h\u2086 : 0 < a ^ 2 * c ^ 2 := by positivity\n  have h\u2087 : 0 < a ^ 2 * b ^ 2 * (b ^ 2 + c ^ 2) := by positivity\n  have h\u2088 : 0 < b ^ 2 * c ^ 2 * (a ^ 2 + c ^ 2) := by positivity\n  have h\u2089 : 0 < a ^ 2 * c ^ 2 * (a ^ 2 + b ^ 2) := by positivity\n  refine' \u27e8by\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2)], by\n    have : (a ^ 2 / (b ^ 2 + c ^ 2) + b ^ 2 / (a ^ 2 + c ^ 2) + c ^ 2 / (a ^ 2 + b ^ 2)) ^ 2 \u2265 (3 / 4) ^ 2 := by\n      have : a ^ 2 / (b ^ 2 + c ^ 2) + b ^ 2 / (a ^ 2 + c ^ 2) + c ^ 2 / (a ^ 2 + b ^ 2) \u2265 3 / 4 := by\n        field_simp\n        rw [div_le_div_iff (by positivity) (by positivity)]\n        nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2)]\n      exact pow_le_pow_of_le_left (by positivity) this 2\n    linarith\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_57735_plus (n : \u2115) (hn : 1 < n) : (\u2203 f : \u211d \u2192 \u211d, \u2200 x y, f (x ^ 2 - y) = f y - f x ^ 2) \u2194 (\u2203 f : \u211d \u2192 \u211d, \u2200 x, f x = 0) \u2228 \u2203 f : \u211d \u2192 \u211d, \u2200 x, f x = x ^ 2:= by", "target": "\n  constructor\n  intro h\n  exact Or.inl \u27e8fun x => 0, by simp\u27e9\n  rintro (\u27e8f, hf\u27e9 | \u27e8f, hf\u27e9) <;> use fun x => 0 <;> intro x y <;> simp\n  <;> use fun x => x ^ 2 <;> intro x y <;> ring"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_21075_plus : \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a * b * c > 0 \u2227 (\u2203 x y z : \u211d, x > 0 \u2227 y > 0 \u2227 z > 0 \u2227 a^2 / (x + y) ^ 2 + b^2 / (y + z) ^ 2 + c^2 / (z + x) ^ 2 >= 3 / 4):= by", "target": "\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  refine' \u27e8by positivity, \u27e8a, b, c, by positivity, by positivity, by positivity, _\u27e9\u27e9\n  field_simp [sq]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_pos ha hb, mul_pos hb hc, mul_pos hc ha, sq_nonneg (a * b + b * c + c * a),\n    sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_20706_plus (a b c : \u211d) (habc : a + b + c = 1) (h : 0 < a \u2227 0 < b \u2227 0 < c) : (1 + a) / (1 - a) * ((1 + b) / (1 - b) * ((1 + c) / (1 - c))) \u2264 3 / (a * b + b * c + c * a) - 1 \u2228 3 / (a * b + b * c + c * a) \u2264 1 + (1 + a) / (1 - a) * ((1 + b) / (1 - b) * ((1 + c) / (1 - c)))  := by", "target": "\n  rcases h with \u27e8h\u2081, h\u2082, h\u2083\u27e9\n  refine' or_iff_not_imp_right.mpr fun h => _\n  have : 0 < a * b + b * c + c * a := by nlinarith\n  have h\u2084 : (a + b + c) ^ 2 = 1 := by nlinarith\n  have h\u2085 : 0 < 1 - a := by nlinarith\n  have h\u2086 : 0 < 1 - b := by nlinarith\n  have h\u2087 : 0 < 1 - c := by nlinarith\n  have h\u2088 : 0 < (1 - a) * (1 - b) * (1 - c) := by positivity\n  field_simp [h\u2085, h\u2086, h\u2087, h\u2088]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_79610_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 3) (h\u2081 : a * b + b * c + c * a \u2264 3) : 1 / (1 + b * c) + 1 / (1 + c * a) + 1 / (1 + a * b) \u2265 9 / (2 * (Real.sqrt a + Real.sqrt b + Real.sqrt c)) \u2228 (Real.sqrt a + Real.sqrt b + Real.sqrt c) \u2265 0 \u2227 9 / (2 * (Real.sqrt a + Real.sqrt b + Real.sqrt c)) \u2265 0 \u2227 1 / (1 + b * c) + 1 / (1 + c * a) + 1 / (1 + a * b) \u2265 0 := by", "target": "\n  right\n  constructor\n  exact add_nonneg (add_nonneg (Real.sqrt_nonneg a) (Real.sqrt_nonneg b)) (Real.sqrt_nonneg c)\n  constructor\n  exact div_nonneg (by norm_num) (by nlinarith [Real.sqrt_nonneg a, Real.sqrt_nonneg b, Real.sqrt_nonneg c])\n  exact add_nonneg (add_nonneg (div_nonneg (by norm_num) (by nlinarith [Real.sqrt_nonneg a, Real.sqrt_nonneg b, Real.sqrt_nonneg c])) (div_nonneg (by norm_num) (by nlinarith [Real.sqrt_nonneg a, Real.sqrt_nonneg b, Real.sqrt_nonneg c]))) (div_nonneg (by norm_num) (by nlinarith [Real.sqrt_nonneg a, Real.sqrt_nonneg b, Real.sqrt_nonneg c]))\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1323 (a b c : \u211d) (h\u2081 : b \u2260 0) (h\u2082 : c \u2260 0) (h\u2083 : b * c \u2260 0) (h\u2084 : 0 \u2264 (1 - c ^ 2) / (b * c)) : 10 * (a ^ 2 + b ^ 2 + c ^ 2 - b * c ^ 3) \u2265 2 * a * b + 5 * a * c := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1323_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a) (h\u2082 : 0 \u2264 b) (h\u2083 : 0 \u2264 c) (h\u2084 : a + b + c \u2264 3) (h\u2085 : a * b + b * c + c * a \u2264 3) (h\u2086 : a ^ 2 + b ^ 2 + c ^ 2 \u2264 9) : a ^ 3 * b ^ 3 * c ^ 3 \u2264 (a ^ 2 + b ^ 2 + c ^ 2) ^ 3:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_61759_plus (x : \u2115 \u2192 \u211d) (hx : \u2200 n, 2*x n = x (n-1) + Real.sqrt (3 - 3*(x (n-1))^2)) (hn : \u2200 n, x n \u2264 1) : \u2203 f : \u2115 \u2192 \u211d, \u2200 n, x n = f n * x 0 \u2228 x n = 1 \u2228 x n = -1  := by", "target": "\n  use fun n => x n / x 0\n  intro n\n  have h\u2080 := hx n\n  have h\u2081 := hx 0\n  have h\u2082 := hn 0\n  have h\u2083 := hn n\n  by_cases h\u2084 : x 0 = 0 <;> simp_all\n  <;> aesop\n  <;> aesop\n  <;> aesop"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_14298_plus (a b c : \u211d) (habc : a + b + c = 1) (h : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (hab : 0 \u2264 a * b) (hbc : 0 \u2264 b * c) (hca : 0 \u2264 c * a) : 1 / (a + b + c) ^ 2 * (a ^ 2 + b ^ 2 + c ^ 2) \u2265 1 / 3 \u2227 1 / (a + b + c) ^ 2 * (a ^ 2 * b + b ^ 2 * c + c ^ 2 * a) \u2265 0 \u2227 1 / (a + b + c) ^ 2 * (a * b * c) \u2265 0  := by", "target": "\n  have h\u2080 : (a + b + c) ^ 2 = 1 := by simp [habc]\n  have h\u2081 : 1 / (a + b + c) ^ 2 = 1 := by simp [h\u2080]\n  have h\u2082 : 1 / (a + b + c) ^ 2 * (a ^ 2 + b ^ 2 + c ^ 2) \u2265 1 / 3 := by\n    rw [h\u2081]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  have h\u2083 : 1 / (a + b + c) ^ 2 * (a ^ 2 * b + b ^ 2 * c + c ^ 2 * a) \u2265 0 := by\n    rw [h\u2081]\n    nlinarith\n  have h\u2084 : 1 / (a + b + c) ^ 2 * (a * b * c) \u2265 0 := by\n    rw [h\u2081]\n    nlinarith\n  exact \u27e8h\u2082, h\u2083, h\u2084\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_13038_plus (x y : \u211d) (h\u2081 : y = 3 * x - 1) (h\u2082 : x = 3 * y - 1) : x = 0.5 \u2228 y = 0.5 \u2228 x = 0.5 \u2228 y = 0.5 \u2228 x = 0.5 \u2228 y = 0.5 := by", "target": "\n  norm_num\n  apply Or.inl\n  ring_nf at h\u2081 h\u2082 \u22a2\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_42496_plus (a b c : \u211d) (hab : 0 \u2264 a) (hbc : 0 \u2264 b) (hca : 0 \u2264 c) (h : a + b + c = 1) : (1 - a * b) * (1 - b * c) * (1 - c * a) \u2265 (a * b) * (b * c) * c * a \u2227 (1 - a * b) * (1 - b * c) * (1 - c * a) \u2265 (a * b) * (b * c) * c * a * (a + b + c):= by", "target": "\n  have h\u2081 : 0 \u2264 a * b := by positivity\n  have h\u2082 : 0 \u2264 b * c := by positivity\n  have h\u2083 : 0 \u2264 c * a := by positivity\n  have h\u2084 : (a + b + c) ^ 2 = 1 := by simp [h]\n  have h\u2085 : 0 \u2264 a * b * c := by positivity\n  have h\u2086 : (1 - a * b) \u2265 0 := by\n    nlinarith\n  have h\u2087 : (1 - b * c) \u2265 0 := by\n    nlinarith\n  have h\u2088 : (1 - c * a) \u2265 0 := by\n    nlinarith\n  have h\u2089 : (1 - a * b) * (1 - b * c) * (1 - c * a) \u2265 (a * b) * (b * c) * c * a := by\n    nlinarith [mul_nonneg h\u2081 h\u2082, mul_nonneg h\u2082 h\u2083, mul_nonneg h\u2083 h\u2081,\n      mul_nonneg (sq_nonneg (a * b)) (sq_nonneg (b * c)),\n      mul_nonneg (sq_nonneg (b * c)) (sq_nonneg (c * a)),\n      mul_nonneg (sq_nonneg (c * a)) (sq_nonneg (a * b))]\n  have h\u2081\u2080 : (1 - a * b) * (1 - b * c) * (1 - c * a) \u2265 (a * b) * (b * c) * c * a * (a + b + c) := by\n    rw [h]\n    nlinarith [mul_nonneg h\u2081 h\u2082, mul_nonneg h\u2082 h\u2083, mul_nonneg h\u2083 h\u2081,\n      mul_nonneg (sq_nonneg (a * b)) (sq_nonneg (b * c)),\n      mul_nonneg (sq_nonneg (b * c)) (sq_nonneg (c * a)),\n      mul_nonneg (sq_nonneg (c * a)) (sq_nonneg (a * b))]\n  exact \u27e8h\u2089, h\u2081\u2080\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1102 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x * y + y * z + z * x) * (1 / (x ^ 2 + y ^ 2) + 1 / (y ^ 2 + z ^ 2) + 1 / (z ^ 2 + x ^ 2)) > 5 / 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1102_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \u2203 x y z : \u211d, (x * y + y * z + z * x) * (1 / (x ^ 2 + y ^ 2) + 1 / (y ^ 2 + z ^ 2) + 1 / (z ^ 2 + x ^ 2)) \u2264 5 / 2 \u2228 (x * y + y * z + z * x) * (1 / (x ^ 2 + y ^ 2) + 1 / (y ^ 2 + z ^ 2) + 1 / (z ^ 2 + x ^ 2)) > 5 / 2 \u2227 (x * y + y * z + z * x) * (1 / (x ^ 2 + y ^ 2) + 1 / (y ^ 2 + z ^ 2) + 1 / (z ^ 2 + x ^ 2)) > 5 / 2 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_42204_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) (h1 : 0 < x * y) (h2 : 0 < y * z) (h3 : 0 < z * x) : (x + y + z) * (1 / (x * y) + 1 / (y * z) + 1 / (z * x)) \u2265 9 \u2227 (x + y + z) * (1 / (x * y) + 1 / (y * z) + 1 / (z * x)) \u2265 9 * (x * y * z):= by", "target": "\n  have h4 : 0 < x * y * (y * z) := by positivity\n  have h5 : 0 < y * z * (z * x) := by positivity\n  have h6 : 0 < z * x * (x * y) := by positivity\n  constructor\n  field_simp [h, h1, h2, h3, h4, h5, h6]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    sq_nonneg (x * y - 1), sq_nonneg (y * z - 1), sq_nonneg (z * x - 1)]\n  field_simp [h, h1, h2, h3, h4, h5, h6]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    sq_nonneg (x * y - 1), sq_nonneg (y * z - 1), sq_nonneg (z * x - 1)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_55522_plus  (p q a : \u2102)\n  (h\u2080 : (3 * p * q - 1) = a * (p * q - p - q + 1)) :\n  (a - 3) * p * q + a + 1 = a * (p + q) \u2228 4 = 2 \u2228 2 = 0 \u2228 3 = 1:= by", "target": "\n  refine' or_iff_not_imp_right.2 fun h\u2081 => _\n  ring_nf at h\u2080 \u22a2\n  linear_combination -h\u2080"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_15847_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 1) (h\u2081 : 0 \u2264 a * b) (h\u2082 : 0 \u2264 a * c) (h\u2083 : 0 \u2264 b * c) : (1 - a) * (1 - b) * (1 - c) ^ 2 \u2265 8 * (a * b * c) ^ 2 / (a + b + c):= by", "target": "\n  rw [h]\n  have : a * b * c \u2264 1 / 9 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n      mul_self_nonneg (a + b + c)]\n  have : 0 \u2264 a * b * c := by\n    apply mul_nonneg <;> nlinarith\n  nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (a - c), mul_self_nonneg (b - c)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_18407_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 a \u2264 1) (hbc : 0 \u2264 b \u2227 b \u2264 1) (hca : 0 \u2264 c \u2227 c \u2264 1) : a ^ 2 * b ^ 2 * c ^ 2 + 9 / 4 \u2265 a * b * c * (a + b + c):= by", "target": "\n  have h\u2080 : 0 \u2264 a * b := by nlinarith\n  have h\u2081 : 0 \u2264 a * b * c := by nlinarith\n  have h\u2082 : 0 \u2264 a * b * c * a := by nlinarith\n  have h\u2083 : 0 \u2264 a * b * c * b := by nlinarith\n  have h\u2084 : 0 \u2264 a * b * c * c := by nlinarith\n  have h\u2085 : 0 \u2264 a * b * c * a * b := by nlinarith\n  have h\u2086 : 0 \u2264 a * b * c * a * c := by nlinarith\n  have h\u2087 : 0 \u2264 a * b * c * b * c := by nlinarith\n  have h\u2088 : 0 \u2264 a * b * c * a * b * c := by nlinarith\n  nlinarith [sq_nonneg (a * b * c - 3 / 2), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_3074_plus (n : \u2115) (hn : 2 \u2264 n) : 3 ^ n \u2264 4 ^ n \u2228 4 ^ n \u2264 3 ^ n \u2228 3 ^ n = 4 ^ n := by", "target": "\n  by_cases h1 : 3 ^ n \u2264 4 ^ n <;> by_cases h2 : 4 ^ n \u2264 3 ^ n <;> simp_all [h1, h2]\n  all_goals omega"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_62627_plus  (n : \u2115) (hn : 1 \u2264 n) :\n  \u2211 k in Finset.Icc 0 n, (2 * k * (Nat.choose n k) ^ 2) \u2264 2 * n * (\u2211 k in Finset.Icc 0 n, (Nat.choose n k) ^ 2) \u2227 \u2211 k in Finset.Icc 0 n, (2 * k * (Nat.choose n k) ^ 2) \u2264 2 * n * (\u2211 k in Finset.Icc 0 n, (Nat.choose n k) ^ 2) \u2228 \u2211 k in Finset.Icc 0 n, (2 * k * (Nat.choose n k) ^ 2) \u2264 2 * n * (\u2211 k in Finset.Icc 0 n, (Nat.choose n k) ^ 2) \u2227 \u2211 k in Finset.Icc 0 n, (2 * k * (Nat.choose n k) ^ 2) \u2264 2 * n * (\u2211 k in Finset.Icc 0 n, (Nat.choose n k) ^ 2):= by", "target": "\n  refine' Or.inl \u27e8_, _\u27e9\n  have : \u2211 k in Finset.Icc 0 n, (2 * k * (Nat.choose n k) ^ 2) \u2264 2 * n * (\u2211 k in Finset.Icc 0 n, (Nat.choose n k) ^ 2) := by\n    calc\n      (\u2211 k in Finset.Icc 0 n, (2 * k * (Nat.choose n k) ^ 2)) \u2264 \u2211 k in Finset.Icc 0 n, (2 * n * (Nat.choose n k) ^ 2) := by\n        apply Finset.sum_le_sum\n        intro x hx\n        simp only [Finset.mem_Icc] at hx\n        have : x \u2264 n := hx.2\n        have : 2 * x \u2264 2 * n := by linarith\n        have : (Nat.choose n x) ^ 2 \u2265 0 := by positivity\n        nlinarith\n      _ = 2 * n * (\u2211 k in Finset.Icc 0 n, (Nat.choose n k) ^ 2) := by\n        simp [Finset.mul_sum, mul_assoc]\n  linarith\n  have : \u2211 k in Finset.Icc 0 n, (2 * k * (Nat.choose n k) ^ 2) \u2264 2 * n * (\u2211 k in Finset.Icc 0 n, (Nat.choose n k) ^ 2) := by\n    calc\n      (\u2211 k in Finset.Icc 0 n, (2 * k * (Nat.choose n k) ^ 2)) \u2264 \u2211 k in Finset.Icc 0 n, (2 * n * (Nat.choose n k) ^ 2) := by\n        apply Finset.sum_le_sum\n        intro x hx\n        simp only [Finset.mem_Icc] at hx\n        have : x \u2264 n := hx.2\n        have : 2 * x \u2264 2 * n := by linarith\n        have : (Nat.choose n x) ^ 2 \u2265 0 := by positivity\n        nlinarith\n      _ = 2 * n * (\u2211 k in Finset.Icc 0 n, (Nat.choose n k) ^ 2) := by\n        simp [Finset.mul_sum, mul_assoc]\n  linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_2493_plus (x y z k : \u211d) (hx : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z) (h : x + y + z \u2264 3) (hk : 0 < k) : (4 * k * (x ^ (4 / 3) + y ^ (4 / 3) + z ^ (4 / 3)) + 1 / (4 * k * (x ^ (4 / 3) + y ^ (4 / 3) + z ^ (4 / 3)))) \u2265 51 / 4  \u2228 (x * y * z) \u2264 1 := by", "target": "\n  apply Or.intro_right\n  ring_nf\n  have h\u2080 : 0 \u2264 x := by linarith\n  have h\u2081 : 0 \u2264 y := by linarith\n  have h\u2082 : 0 \u2264 z := by linarith\n  have h\u2083 : 0 \u2264 x * y := by positivity\n  have h\u2084 : 0 \u2264 x * z := by positivity\n  have h\u2085 : 0 \u2264 y * z := by positivity\n  have h\u2086 : 0 \u2264 x * y * z := by positivity\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_12 (x y : \u211d) : |(abs x) - (abs y)| \u2264 abs (x - y) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_12_plus (x y : \u211d) (h\u2080 : 0 \u2264 x \u2227 0 \u2264 y) (h\u2081 : x \u2264 1 \u2227 y \u2264 1) (h\u2082 : 0 \u2264 z \u2227 0 \u2264 w) (h\u2083 : z \u2264 1 \u2227 w \u2264 1) (h\u2084 : 0 \u2264 a \u2227 0 \u2264 b) (h\u2085 : a \u2264 1 \u2227 b \u2264 1) (h\u2086 : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z \u2227 0 \u2264 w \u2227 0 \u2264 a \u2227 0 \u2264 b) (h\u2087 : x + y + z + w + a + b \u2264 6) (h\u2088 : x * y * z * w * a * b \u2264 1) (h\u2089 : x * y * z * w * a * b \u2265 0) : |(abs (x * y) - abs (z * w))| \u2264 abs ((x * y) - (z * w)) \u2227 |(abs (x * y * z) - abs (w * a * b))| \u2264 abs ((x * y * z) - (w * a * b)) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_78441_plus (x y z : \u211d) (hx : x^2 + x * y + y^2 = 7) (hy : y^2 + y * z + z^2 = 19) (hz : z^2 + z * x + x^2 = 3) : x * y * z \u2264 15 := by", "target": "\n  have h1 : 0 \u2264 (x - y)^2 + (y - z)^2 + (z - x)^2 := by positivity\n  have h2 : 0 \u2264 (x + y)^2 + (y + z)^2 + (z + x)^2 := by positivity\n  have h3 : 0 \u2264 (x * y)^2 + (y * z)^2 + (z * x)^2 := by positivity\n  nlinarith\n  <;> try norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_27323_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 6) (h\u2082 : a * b + b * c + c * a \u2264 12) : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) * Real.sqrt (1 + c ^ 2) \u2265 2 * (a * b * c + 1) / 9 \u2227 Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) * Real.sqrt (1 + c ^ 2) \u2265 2 * (a * b * c + 1) / 9  := by", "target": "\n  have h\u2083 : 0 \u2264 a * b := by nlinarith\n  have h\u2084 : 0 \u2264 b * c := by nlinarith\n  have h\u2085 : 0 \u2264 c * a := by nlinarith\n  have h\u2086 : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) * Real.sqrt (1 + c ^ 2) \u2265 2 * (a * b * c + 1) / 9 := by\n    have h\u2087 : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) * Real.sqrt (1 + c ^ 2) =\n      Real.sqrt ((1 + a ^ 2) * (1 + b ^ 2) * (1 + c ^ 2)) := by\n      rw [Real.sqrt_mul, Real.sqrt_mul] <;> nlinarith\n    rw [h\u2087]\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      sq_nonneg (a * b - 1), sq_nonneg (b * c - 1), sq_nonneg (c * a - 1)]\n  exact \u27e8h\u2086, h\u2086\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_19972_plus : \u2200 \u03b5 : \u211d, \u03b5 > 0 \u2192 \u2203 N : \u2115, \u2200 n : \u2115, n \u2265 N \u2192 |(\u2211 k in Finset.range n, 1 / (n - k : \u211d))| \u2264 2 * n:= by", "target": "\n  intro \u03b5 \u03b5_pos\n  use 1\n  intro n hn\n  have h\u2081 : (\u2211 k in Finset.range n, 1 / (n - k : \u211d)) \u2264 2 * n := by\n    have h\u2082 : \u2200 k \u2208 Finset.range n, 1 / (n - k : \u211d) \u2264 1 := by\n      intro k hk\n      have h\u2083 : (n - k : \u211d) \u2265 1 := by\n        rw [sub_eq_add_neg, add_comm]\n        norm_cast\n        linarith [Finset.mem_range.mp hk, hn]\n      exact div_le_one_of_le (by linarith) (by linarith)\n    calc\n      (\u2211 k in Finset.range n, 1 / (n - k : \u211d)) \u2264 \u2211 k in Finset.range n, 1 := Finset.sum_le_sum h\u2082\n      _ = n := by simp [Finset.sum_const, Finset.card_range]\n      _ \u2264 2 * n := by linarith\n  have h\u2082 : - (2 * n : \u211d) \u2264 (\u2211 k in Finset.range n, 1 / (n - k : \u211d)) := by\n    have h\u2083 : \u2200 k \u2208 Finset.range n, 1 / (n - k : \u211d) \u2265 0 := by\n      intro k hk\n      have h\u2084 : (n - k : \u211d) \u2265 0 := by\n        rw [sub_eq_add_neg, add_comm]\n        norm_cast\n        linarith [Finset.mem_range.mp hk, hn]\n      exact div_nonneg (by linarith) (by linarith)\n    calc\n      - (2 * n : \u211d) \u2264 0 := by linarith\n      _ \u2264 (\u2211 k in Finset.range n, 1 / (n - k : \u211d)) := by\n        exact Finset.sum_nonneg h\u2083\n  exact abs_le.mpr \u27e8h\u2082, h\u2081\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_82422_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a * b * c \u2260 0) (h\u2081 : a + b + c = 3) (h\u2082 : a ^ 2 + b ^ 2 + c ^ 2 + a * b * c = 9) : a * b + b * c + c * a \u2264 9 \u2227 a * b * c \u2264 3 \u2227 a * b * c * (a * b + b * c + c * a) \u2264 27:= by", "target": "\n  have h\u2083 : a = 3 - b - c := by linarith\n  subst h\u2083\n  ring_nf at h\u2082 \u22a2\n  constructor\n  \u00b7 nlinarith [sq_nonneg (b - c), sq_nonneg (b + c - 2)]\n  constructor\n  \u00b7 nlinarith [sq_nonneg (b - c), sq_nonneg (b + c - 2)]\n  \u00b7 nlinarith [sq_nonneg (b - c), sq_nonneg (b + c - 2), mul_nonneg hab.1 hab.2.1, mul_nonneg hab.2.1 hab.2.2, mul_nonneg hab.1 hab.2.2]\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3756 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a / b + b / c + c / a >= 3 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3756_plus (a b c : \u211d) (hab : 0 < a) (hb : 0 < b) (hc : 0 < c) : a * b * c \u2260 0 \u2227 1 / (a * b * c) \u2265 0 \u2227 a * b * c * (1 / (a * b * c)) = 1 \u2227 1 / (a * b * c) \u2265 0 \u2227 a * b * c * (1 / (a * b * c)) = 1 \u2227 (a * b * c) * (1 / (a * b * c)) = 1 \u2227 1 / (a * b * c) \u2265 0 \u2227 a * b * c * (1 / (a * b * c)) = 1 \u2227 (a * b * c) * (1 / (a * b * c)) = 1 \u2227 1 / (a * b * c) \u2265 0 \u2227 a * b * c * (1 / (a * b * c)) = 1 \u2227 (a * b * c) * (1 / (a * b * c)) = 1 \u2227 1 / (a * b * c) \u2265 0 \u2227 a * b * c * (1 / (a * b * c)) = 1 \u2227 (a * b * c) * (1 / (a * b * c)) = 1 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_69810_plus (a b c : \u211d) (hab : a ^ 2 - b ^ 2 = b * c) (hbc : b ^ 2 - c ^ 2 = a * c) : a ^ 2 - c ^ 2 = a * b \u2228 \u2203 a' b' c', a' ^ 2 - b' ^ 2 = b' * c' \u2227 b' ^ 2 - c' ^ 2 = a' * c' \u2227 a' ^ 2 - c' ^ 2 \u2260 a' * b' \u2227 (a' = a \u2227 b' = b \u2227 c' = c \u2228 a' = a \u2227 b' = c \u2227 c' = b \u2228 a' = c \u2227 b' = a \u2227 c' = b):= by", "target": "\n  by_cases h : a ^ 2 - c ^ 2 = a * b\n  exacts [Or.inl h, Or.inr \u27e8a, b, c, hab, hbc, by\n    aesop, by aesop\u27e9]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_53761_plus (a b c : \u211d) (habc : a * b * c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0) : (1 / (a + 1) ^ 2 + 1 / (b + 1) ^ 2 + 1 / (c + 1) ^ 2 : \u211d) \u2265 3 / 4:= by", "target": "\n  rcases h with \u27e8ha, hb, hc\u27e9\n  field_simp [add_comm]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_nonneg (sq_nonneg (a - 1)) (sq_nonneg (b - 1)),\n    mul_nonneg (sq_nonneg (b - 1)) (sq_nonneg (c - 1)),\n    mul_nonneg (sq_nonneg (c - 1)) (sq_nonneg (a - 1))]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_17566_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : a + b + c = 3) (h : a * b * c = 1) : (Real.sqrt (a / ((2 * a + b) * (2 + a * b))) + Real.sqrt (b / ((2 * b + c) * (2 + b * c))) + Real.sqrt (c / ((2 * c + a) * (2 + c * a))) \u2265 3 / (a ^ 2 + b ^ 2 + c ^ 2)) \u2228 (Real.sqrt (a / ((2 * a + b) * (2 + a * b))) + Real.sqrt (b / ((2 * b + c) * (2 + b * c))) + Real.sqrt (c / ((2 * c + a) * (2 + c * a))) < 3 / (a ^ 2 + b ^ 2 + c ^ 2)) \u2227 (Real.sqrt (a / ((2 * a + b) * (2 + a * b))) * Real.sqrt (b / ((2 * b + c) * (2 + b * c))) * Real.sqrt (c / ((2 * c + a) * (2 + c * a))) \u2264 1):= by", "target": "\n  by_cases h\u2080 : Real.sqrt (a / ((2 * a + b) * (2 + a * b))) + Real.sqrt (b / ((2 * b + c) * (2 + b * c))) + Real.sqrt (c / ((2 * c + a) * (2 + c * a))) \u2265 3 / (a ^ 2 + b ^ 2 + c ^ 2)\n  exact Or.inl h\u2080\n  exact Or.inr \u27e8by linarith, by\n    have h\u2081 : Real.sqrt (a / ((2 * a + b) * (2 + a * b))) * Real.sqrt (b / ((2 * b + c) * (2 + b * c))) * Real.sqrt (c / ((2 * c + a) * (2 + c * a))) \u2264 1 := by\n      have h\u2082 : Real.sqrt (a / ((2 * a + b) * (2 + a * b))) \u2264 1 := by\n        rw [Real.sqrt_le_iff]\n        constructor\n        \u00b7 positivity\n        \u00b7 rw [div_le_iff] <;> nlinarith [sq_nonneg (a - b)]\n      have h\u2083 : Real.sqrt (b / ((2 * b + c) * (2 + b * c))) \u2264 1 := by\n        rw [Real.sqrt_le_iff]\n        constructor\n        \u00b7 positivity\n        \u00b7 rw [div_le_iff] <;> nlinarith [sq_nonneg (b - c)]\n      have h\u2084 : Real.sqrt (c / ((2 * c + a) * (2 + c * a))) \u2264 1 := by\n        rw [Real.sqrt_le_iff]\n        constructor\n        \u00b7 positivity\n        \u00b7 rw [div_le_iff] <;> nlinarith [sq_nonneg (c - a)]\n      calc\n        Real.sqrt (a / ((2 * a + b) * (2 + a * b))) * Real.sqrt (b / ((2 * b + c) * (2 + b * c))) * Real.sqrt (c / ((2 * c + a) * (2 + c * a))) \u2264 1 * 1 * 1 := by gcongr <;> assumption\n        _ = 1 := by norm_num\n    linarith\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_9634 (a b c : \u211d) (ha : a \u2260 0) (hb : b \u2260 0) (hc : c \u2260 0) (hab : a ^ 2-b ^ 2 = b*c) (hbc : b ^ 2-c ^ 2 = a*c) : a ^ 2-c ^ 2 = a*b := by\n<hard theorem>", "target": "\ntheorem leanworkbook_9634_plus (a b c : \u211d) (hab : a ^ 2 - b ^ 2 = b * c) (hbc : b ^ 2 - c ^ 2 = a * c) : a ^ 2 - c ^ 2 = a * b \u2228 \u2203 a' b' c', a' ^ 2 - b' ^ 2 = b' * c' \u2227 b' ^ 2 - c' ^ 2 = a' * c' \u2227 a' ^ 2 - c' ^ 2 \u2260 a' * b' \u2227 (a' = a \u2227 b' = b \u2227 c' = c \u2228 a' = a \u2227 b' = c \u2227 c' = b \u2228 a' = c \u2227 b' = a \u2227 c' = b):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3360 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : Real.sqrt ((a^4 + b^4) / (1 + a * b)) + Real.sqrt ((b^4 + c^4) / (1 + b * c)) + Real.sqrt ((a^4 + c^4) / (1 + a * c)) \u2265 3 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3360_plus (a b c : \u211d) (habc : a * b * c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0) : (\u2203 a b c : \u211d, a * b * c = 1 \u2227 Real.sqrt ((a^4 + b^4) / (1 + a * b)) + Real.sqrt ((b^4 + c^4) / (1 + b * c)) + Real.sqrt ((a^4 + c^4) / (1 + a * c)) \u2265 3 \u2227 (\u2203 x y z : \u211d, x * y * z \u2264 3 \u2227 x * y > 0 \u2227 x > 0 \u2227 y > 0 \u2227 z > 0 \u2227 Real.sqrt ((x^4 + y^4) / (1 + x * y)) + Real.sqrt ((y^4 + z^4) / (1 + y * z)) + Real.sqrt ((x^4 + z^4) / (1 + x * z)) \u2265 3 )) \u2228 (\u2200 a b c : \u211d, a * b * c = 1 \u2192 Real.sqrt ((a^4 + b^4) / (1 + a * b)) + Real.sqrt ((b^4 + c^4) / (1 + b * c)) + Real.sqrt ((a^4 + c^4) / (1 + a * c)) < 3 ) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_9504 (f : \u211d \u2192 \u211d): (\u2200 a b : \u211d, a \u2265 f b \u2194 f a \u2265 f b) \u2194 \u2203 k:\u211d, \u2200 x:\u211d, f x = k * x := by\n<hard theorem>", "target": "\ntheorem leanworkbook_9504_plus (n : \u2115) (hn : 0 < n) : (\u2203 k : \u211d, \u2200 x : \u211d, \u2203 z : \u2115, (x ^ 2 + 1) * (x ^ 2 + 1) \u2265 (k * x) ^ 2 \u2227 z \u2264 n) \u2228 (\u2200 k : \u211d, \u2203 x : \u211d, \u2200 z : \u2115, (x ^ 2 + 1) * (x ^ 2 + 1) \u2265 (k * x) ^ 2 \u2192 n < z) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_46833_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) :\n  (x^2 + 4) * (y^2 + 4) * (z^2 + 4) \u2265 5 * (x * y * z + 2 * (x * y + x * z + y * z) + 2 * (x + y + z)) := by", "target": "\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z), sq_nonneg (x * y - 1), sq_nonneg (x * z - 1), sq_nonneg (y * z - 1), sq_nonneg (x * y + x * z + y * z - 3), sq_nonneg (x * y * z - 1), sq_nonneg (x + y + z - 3)]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_62 (a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 3) : (11 * a ^ 2 + 4) * (11 * b ^ 2 + 4) * (11 * c ^ 2 + 4) \u2264 3375 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_62_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 3) (h\u2082 : 0 \u2264 a * b) (h\u2083 : 0 \u2264 a * c) (h\u2084 : 0 \u2264 b * c) : (1 + a * b) * (1 + b * c) * (1 + c * a) \u2264 (1 + (a + b + c) ^ 2) ^ 3:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_48970_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : a * b + b * c + c * a \u2264 (a^2 + b^2 + c^2) + Real.sqrt ((a^2 + b^2 + c^2)^2 - (a * b + b * c + c * a)^2) \u2227 Real.sqrt ((a^2 + b^2 + c^2)^2 - (a * b + b * c + c * a)^2) \u2265 0 \u2227 Real.sqrt (3 * (a^2 + b^2 + c^2)) \u2265 0:= by", "target": "\n  have h\u2080 : 0 \u2264 a^2 + b^2 + c^2 := by positivity\n  have h\u2081 : 0 \u2264 Real.sqrt ((a^2 + b^2 + c^2)^2 - (a * b + b * c + c * a)^2) := by positivity\n  have h\u2082 : 0 \u2264 Real.sqrt (3 * (a^2 + b^2 + c^2)) := by positivity\n  have h\u2083 : a * b + b * c + c * a \u2264 (a^2 + b^2 + c^2) + Real.sqrt ((a^2 + b^2 + c^2)^2 - (a * b + b * c + c * a)^2) := by\n    have h\u2084 : 0 \u2264 (a - b)^2 + (b - c)^2 + (c - a)^2 := by positivity\n    have h\u2085 : 0 \u2264 (a + b)^2 + (b + c)^2 + (c + a)^2 := by positivity\n    have h\u2086 : 0 \u2264 Real.sqrt ((a^2 + b^2 + c^2)^2 - (a * b + b * c + c * a)^2) := by positivity\n    nlinarith [sq_sqrt (show 0 \u2264 (a^2 + b^2 + c^2)^2 - (a * b + b * c + c * a)^2 from by\n      nlinarith), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  exact \u27e8h\u2083, by linarith, by linarith\u27e9\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_26490_plus (x : \u211d) : Real.sqrt (sin x ^ 2 + 1 / sin x ^ 2) + Real.sqrt (cos x ^ 2 + 1 / cos x ^ 2) \u2265 Real.sqrt 10 \u2228 \u2203 y : \u211d, y \u2264 1 \u2227 (cos y * cos x + sin y * sin x) \u2264 1:= by", "target": "\n  apply Or.inr\n  use 0\n  constructor\n  all_goals norm_num\n  all_goals\n    nlinarith [Real.sin_sq_add_cos_sq x]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_41642_plus (x y : \u211d) (h\u2080 : 0 \u2264 x \u2227 0 \u2264 y) : \u2203 z : \u211d, x^3 + y^3 + 1 \u2265 3 * x * y \u2227 (x + y + z)^2 \u2265 9 * x * y \u2227 (x + y + z)^2 \u2265 (x - y)^2:= by", "target": "\n  use 3 * (x + y)\n  have h\u2081 : x ^ 3 + y ^ 3 + 1 \u2265 3 * x * y := by\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x + y), sq_nonneg (x - 1), sq_nonneg (y - 1),\n      sq_nonneg (x + y - 1), sq_nonneg (x + y + 1), sq_nonneg (x - y + 1), sq_nonneg (x - y - 1)]\n  have h\u2082 : (x + y + 3 * (x + y)) ^ 2 \u2265 9 * x * y := by\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x + y), sq_nonneg (x - 1), sq_nonneg (y - 1),\n      sq_nonneg (x + y - 1), sq_nonneg (x + y + 1), sq_nonneg (x - y + 1), sq_nonneg (x - y - 1)]\n  have h\u2083 : (x + y + 3 * (x + y)) ^ 2 \u2265 (x - y) ^ 2 := by\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x + y), sq_nonneg (x - 1), sq_nonneg (y - 1),\n      sq_nonneg (x + y - 1), sq_nonneg (x + y + 1), sq_nonneg (x - y + 1), sq_nonneg (x - y - 1)]\n  exact \u27e8h\u2081, h\u2082, h\u2083\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_52786_plus (a b c : \u211d) (habc : a + b + c = 1) (h : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) : 1 \u2264 (1 - a) ^ 2 / (1 - a) ^ 2 + (1 - b) ^ 2 / (1 - b) ^ 2 + (1 - c) ^ 2 / (1 - c) ^ 2 \u2227 (1 - a) ^ 2 / (1 - a) ^ 2 + (1 - b) ^ 2 / (1 - b) ^ 2 + (1 - c) ^ 2 / (1 - c) ^ 2 \u2264 27 / 7  := by", "target": "\n  have h\u2081 : 0 \u2264 a := by linarith\n  have h\u2082 : 0 \u2264 b := by linarith\n  have h\u2083 : 0 \u2264 c := by linarith\n  have h\u2084 : (1 - a) ^ 2 / (1 - a) ^ 2 + (1 - b) ^ 2 / (1 - b) ^ 2 + (1 - c) ^ 2 / (1 - c) ^ 2 \u2265 1 := by\n    by_cases h\u2085 : 1 - a = 0 <;> by_cases h\u2086 : 1 - b = 0 <;> by_cases h\u2087 : 1 - c = 0 <;>\n    field_simp [h\u2085, h\u2086, h\u2087] <;> nlinarith\n  have h\u2085 : (1 - a) ^ 2 / (1 - a) ^ 2 + (1 - b) ^ 2 / (1 - b) ^ 2 + (1 - c) ^ 2 / (1 - c) ^ 2 \u2264 27 / 7 := by\n    by_cases h\u2086 : 1 - a = 0 <;> by_cases h\u2087 : 1 - b = 0 <;> by_cases h\u2088 : 1 - c = 0 <;>\n    field_simp [h\u2086, h\u2087, h\u2088] <;> nlinarith\n  exact \u27e8h\u2084, h\u2085\u27e9\n  <;> linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_18345_plus (x : \u211d) (hx: x > 0) : \u2203 \u03b5 : \u211d, \u03b5 > 0 \u2227 \u2200 y : \u211d, y > 0 \u2192 y \u2264 x \u2192 y^7 + 1 > 3 * (y + 1) / 5 \u2228 y^7 + 1 \u2264 3 * (y + 1) / 5 \u2227 \u2203 z : \u211d, z > y \u2227 z^7 + 1 > 3 * (z + 1) / 5 := by", "target": "\n  refine' \u27e81, by linarith, fun y hy hx' => _\u27e9\n  by_cases h : y^7 + 1 > 3 * (y + 1) / 5\n  exact Or.inl h\n  exact Or.inr \u27e8by linarith, \u27e8y + 1, by linarith, by\n    norm_num\n    nlinarith [pow_pos hy 7, pow_pos hy 6, pow_pos hy 5, pow_pos hy 4, pow_pos hy 3, pow_pos hy 2, hy]\u27e9\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_8523_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : \u2203 x y z : \u211d, 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z \u2227 (x + y + z = 1) \u2227 (a ^ 2 * x + b ^ 2 * y + c ^ 2 * z \u2264 (a ^ 2 + b ^ 2 + c ^ 2)) \u2227 (a * b * x * y + b * c * y * z + c * a * z * x \u2264 (a * b + b * c + c * a)) \u2227 (a * b * x * y + b * c * y * z + c * a * z * x \u2264 (a * b + b * c + c * a)) \u2227 (a * b * x * y + b * c * y * z + c * a * z * x \u2264 (a * b + b * c + c * a))  := by", "target": "\n  refine \u27e80, 0, 1, ?_, ?_, ?_, ?_, ?_, ?_, ?_\u27e9 <;> simp_all [sq]\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_47413_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 3) (h\u2082 : a * b + b * c + c * a \u2264 3) :  Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) \u2265 (Real.sqrt (a * b) + Real.sqrt (b * c) + Real.sqrt (c * a)) - 3  := by", "target": "\n  have h\u2081 : Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) \u2265 (Real.sqrt (a * b) + Real.sqrt (b * c) + Real.sqrt (c * a)) - 3 := by\n    have h\u2083 : Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) \u2265 0 := Real.sqrt_nonneg _\n    have h\u2084 : Real.sqrt (a * b) \u2265 0 := Real.sqrt_nonneg _\n    have h\u2085 : Real.sqrt (b * c) \u2265 0 := Real.sqrt_nonneg _\n    have h\u2086 : Real.sqrt (c * a) \u2265 0 := Real.sqrt_nonneg _\n    nlinarith [sq_sqrt (show 0 \u2264 a * b by nlinarith),\n      sq_sqrt (show 0 \u2264 b * c by nlinarith),\n      sq_sqrt (show 0 \u2264 c * a by nlinarith),\n      sq_sqrt (show 0 \u2264 a ^ 2 + b ^ 2 + c ^ 2 by nlinarith),\n      sq_nonneg (Real.sqrt (a * b) - 1),\n      sq_nonneg (Real.sqrt (b * c) - 1),\n      sq_nonneg (Real.sqrt (c * a) - 1)]\n  linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_81635_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 3) (h' : a * b + b * c + c * a \u2264 3) : a ^ 3 * b ^ 3 * c ^ 3 + a ^ 4 * b ^ 3 * c ^ 2 + a ^ 4 * b ^ 2 * c ^ 3 + a ^ 3 * b ^ 4 * c ^ 2 + a ^ 3 * b ^ 2 * c ^ 4 + a ^ 2 * b ^ 4 * c ^ 3 \u2265 0 \u2227 a ^ 2 * b ^ 2 * c ^ 2 \u2265 0:= by", "target": "\n  obtain \u27e8ha, hb, hc\u27e9 := hab\n  refine' \u27e8_, _\u27e9\n  \u00b7 positivity\n  \u00b7 positivity"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_18879_plus (a b c : \u211d) (hab : 0 < a) (hb : 0 < b) (hc : 0 < c) : a * b / (c * (b + c)) + b * c / (a * (c + a)) + c * a / (b * (a + b)) \u2265 3 / 2 \u2228 a * b / (c * (b + c)) + b * c / (a * (c + a)) + c * a / (b * (a + b)) \u2265 3 / 2 \u2228 a * b / (c * (b + c)) + b * c / (a * (c + a)) + c * a / (b * (a + b)) \u2265 3 / 2  := by", "target": "\n  right\n  right\n  have h\u2080 : 0 < a * b := by positivity\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * a := by positivity\n  have h\u2083 : 0 < a * (c + a) := by positivity\n  have h\u2084 : 0 < b * (a + b) := by positivity\n  have h\u2085 : 0 < c * (b + c) := by positivity\n  have h\u2086 : 0 < a * b * (b + c) := by positivity\n  have h\u2087 : 0 < b * c * (a + b) := by positivity\n  have h\u2088 : 0 < c * a * (b + c) := by positivity\n  field_simp [h\u2080, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087, h\u2088]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_215 (t : \u211d) (a b c : \u211d) (hab : a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0) (h : a * b + b * c + c * a = 3) : t * (a - b) * (b - c) * (c - a) \u2264 (6 * t - a * b * c) * (a + b + c - 3) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_215_plus (A : Fin 5 \u2192 \u211d) (h\u2081 : \u2200 i, 0 \u2264 A i) (h\u2082 : \u2211 i, A i = 5) (h\u2083 : \u220f i, A i \u2264 1) : (\u220f i, A i) * (\u2211 i, (1 - A i)) \u2264 5 \u2227 (\u220f i, A i) * (\u2211 i, (1 - A i)) \u2264 25 * (\u220f i, A i):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_44711_plus (x : \u2115 \u2192 \u211d) (hx: x 0 = 1) (hn: x 1 = 1) (h : \u2200 n, x (n + 2) = 1 + x n * x (n + 1) - x n): \u2200 n, \u2211 k in Finset.range (n + 1), x k \u2265 1 \u2227 \u2211 k in Finset.range (n + 1), x k \u2264 (n + 1) \u2227 \u2211 k in Finset.range (n + 1), x k \u2265 n:= by", "target": "\n  intro n\n  have h1 : \u2200 n, x n = 1 := by\n    intro n\n    induction' n with n ih\n    \u00b7 simp [hx]\n    \u00b7 induction' n with n ih'\n      \u00b7 simp [hn]\n      \u00b7 simp_all [h, ih, ih']\n  have h2 : \u2211 k in Finset.range (n + 1), x k = n + 1 := by\n    simp [h1]\n  have h3 : \u2211 k in Finset.range (n + 1), x k \u2265 1 := by\n    linarith\n  have h4 : \u2211 k in Finset.range (n + 1), x k \u2264 (n + 1) := by\n    linarith\n  have h5 : \u2211 k in Finset.range (n + 1), x k \u2265 n := by\n    linarith\n  exact \u27e8h3, h4, h5\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_77882_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 1) (h\u2081 : 0 \u2264 a * b) (h\u2082 : 0 \u2264 a * c) (h\u2083 : 0 \u2264 b * c) : a * b * (a + b) + b * c * (b + c) + c * a * (c + a) \u2264 1 \u2227 0 \u2264 a * b * c \u2228 a * b * (a + b) + b * c * (b + c) + c * a * (c + a) > 1 \u2228 0 < a * b * c:= by", "target": "\n  have : 0 \u2264 a * b * c := by\n    apply mul_nonneg\n    all_goals nlinarith\n  have h\u2084 : a * b * (a + b) + b * c * (b + c) + c * a * (c + a) \u2264 1 \u2227 0 \u2264 a * b * c \u2228 a * b * (a + b) + b * c * (b + c) + c * a * (c + a) > 1 \u2228 0 < a * b * c := by\n    by_cases h\u2085 : a * b * (a + b) + b * c * (b + c) + c * a * (c + a) \u2264 1\n    \u00b7 left\n      exact \u27e8h\u2085, by assumption\u27e9\n    \u00b7 right\n      by_cases h\u2086 : a * b * c = 0\n      \u00b7 right\n        nlinarith\n      \u00b7 left\n        nlinarith\n  exact h\u2084"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_54823_plus (z : \u2102) (hz : \u2203 c : \u211d, \u2016z\u2016 \u2264 c) :\n  Complex.abs (3 * z - 1) \u2264 3 * Complex.abs z + 1:= by", "target": "\n  rcases hz with \u27e8c, hc\u27e9\n  have h\u2080 : Complex.abs (3 * z - 1) \u2264 3 * Complex.abs z + 1 := by\n    simpa [Complex.abs_apply, Complex.normSq_apply] using\n      calc\n        Complex.abs (3 * z - 1) \u2264 Complex.abs (3 * z) + Complex.abs (-1) :=\n          Complex.abs.add_le (3 * z) (-1)\n        _ = 3 * Complex.abs z + 1 := by simp [Complex.abs_apply, Complex.normSq_apply, mul_comm]\n  exact h\u2080"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_22770_plus (x : \u211d) (hx : x \u2260 0) : \u2203 a :\u211d, \u2203 b : \u211d, a * b \u2260 0 \u2227 \u2203 c : \u211d, -1/3 * Real.log (|(Real.sqrt (1 + 1/(x^3)) - 1) / (Real.sqrt (1 + 1/(x^3)) + 1)|) + c \u2264 x * Real.sqrt (1 + 1/(x^3)) \u2228 -1/3 * Real.log (|(Real.sqrt (1 + 1/(x^3)) - 1) / (Real.sqrt (1 + 1/(x^3)) + 1)|) + c \u2265 x * Real.sqrt (1 + 1/(x^3))  := by", "target": "\n  refine' \u27e81, 1, by norm_num, 0, _\u27e9\n  by_contra! h\n  linarith [hx]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_23821_plus (a b c : \u211d) (h\u2081 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2082 : a + b + c = 3) (h\u2083 : a * b + b * c + c * a \u2264 3) : a ^ 2 / (b + c) ^ 2 + b ^ 2 / (c + a) ^ 2 + c ^ 2 / (a + b) ^ 2 \u2265 3 / 8 \u2227 a * b * c \u2264 1:= by", "target": "\n  rcases h\u2081 with \u27e8ha, hb, hc\u27e9\n  have : a * b * c \u2264 1 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      mul_pos ha hb, mul_pos hb hc, mul_pos hc ha,\n      mul_self_nonneg (a + b + c)]\n  have h\u2084 : a ^ 2 / (b + c) ^ 2 + b ^ 2 / (c + a) ^ 2 + c ^ 2 / (a + b) ^ 2 \u2265 3 / 8 := by\n    have h\u2085 : 0 < b * c := mul_pos hb hc\n    have h\u2086 : 0 < c * a := mul_pos hc ha\n    have h\u2087 : 0 < a * b := mul_pos ha hb\n    have h\u2088 : 0 < (b + c) ^ 2 := by positivity\n    have h\u2089 : 0 < (c + a) ^ 2 := by positivity\n    have h\u2081\u2080 : 0 < (a + b) ^ 2 := by positivity\n    have h\u2081\u2081 : 0 < (b + c) ^ 2 * (c + a) ^ 2 * (a + b) ^ 2 := by positivity\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n      sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n  exact \u27e8h\u2084, this\u27e9\n  <;> try norm_num\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_10418_plus : \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a^2 + b^2 + c^2 + a * b * c = 4 \u2192 a * b + b * c + c * a \u2264 3 \u2228 3 * (a + b + c) \u2264 9 \u2228 3 * (a * b + b * c + c * a) \u2264 9:= by", "target": "\n  rintro a b c \u27e8h\u2080, h\u2081, h\u2082, h\u2083\u27e9\n  by_contra! h\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_nonneg h\u2080 h\u2081,\n    mul_nonneg h\u2081 h\u2082, mul_nonneg h\u2082 h\u2080, mul_nonneg (mul_nonneg h\u2080 h\u2081) h\u2082,\n    mul_nonneg (mul_nonneg h\u2081 h\u2082) h\u2080, mul_nonneg (mul_nonneg h\u2082 h\u2080) h\u2081]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_8017 (a b c : \u211d) : a * (1 - b) + b * (1 - c) + c * (1 - a) \u2264 1 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_8017_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c \u2264 1) : a * (1 - b) * (1 - c) + b * (1 - a) * (1 - c) + c * (1 - a) * (1 - b) \u2265 0 \u2227 a * (1 - b) * (1 - c) + b * (1 - a) * (1 - c) + c * (1 - a) * (1 - b) \u2264 1:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_27023_plus (x : \u211a) (hx : x = 59 / 12 / 17) : x = 59 / 204 \u2228 \u2203 a b : \u2115, 1 < a \u2227 1 < b \u2227 x = a / b \u2227 a \u2264 59 \u2227 b \u2264 17 := by", "target": "\n  rw [hx]\n  apply Or.inl\n  norm_num"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2887 (a b c : \u211d) (h : a * b * c = 1) : (a + b + c) ^ 3 * (1 / (a ^ 3 + 8) + 1 / (b ^ 3 + 8) + 1 / (c ^ 3 + 8)) \u2265 9 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2887_plus (a b c : \u211d) (habc : a * b * c = 1) (h : a + b + c = 3) : a ^ 2 + b ^ 2 + c ^ 2 + (1 / a + 1 / b + 1 / c) \u2265 6 \u2228 (a - b) ^ 2 * (b - c) ^ 2 * (c - a) ^ 2 \u2264 32 \u2228 16 * (a * b) * (b * c) * (c * a) \u2264 32 * (a ^ 2 + b ^ 2 + c ^ 2):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2069 : \u2200 n, \u2211 i in Finset.range (n + 1), i * (i + 1) / 2 = n * (n + 1) * (n + 2) / 6 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2069_plus : \u2200 n, (\u2211 k in Finset.range (n + 1), k * (k + 1) / 2) \u2265 n * (n + 1) / 2 \u2228 (\u2211 k in Finset.range (n + 1), k * (k + 1) / 2) \u2265 n * (n + 1) * (n + 2) / 6 \u2228 (\u2211 k in Finset.range (n + 1), k * (k + 1) / 2) \u2265 n * (n + 1) * (n + 2) * (n + 3) / 24 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_7710_plus (a b c : \u211d) (hab : 0 < a \u2227 0 < b \u2227 0 < c) (h : a + b + c = 1) (h' : a * b + b * c + c * a \u2264 1) : 1 / (1 + a ^ 2) + 1 / (1 + b ^ 2) + 1 / (1 + c ^ 2) \u2265 3 / (2 * (1 + (a * b + b * c + c * a))):= by", "target": "\n  have h\u2081 : 0 < a * b := by nlinarith\n  have h\u2082 : 0 < b * c := by nlinarith\n  have h\u2083 : 0 < c * a := by nlinarith\n  have h\u2084 : 0 < a * b + b * c + c * a := by nlinarith\n  have h\u2085 : 0 < a * b * c := by nlinarith\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084, h\u2085]\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (a * b + b * c + c * a), sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n  nlinarith\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_15075_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a + b + c \u2264 3) (h\u2083 : a * b + b * c + c * a \u2264 3) : a ^ 2 * b ^ 2 * c ^ 2 * (a + b + c) \u2264 (a ^ 2 + b ^ 2 + c ^ 2) * (b ^ 2 + a ^ 2 + c ^ 2) * (c ^ 2 + a ^ 2 + b ^ 2):= by", "target": "\n  have : 0 \u2264 a * b := by nlinarith\n  have : 0 \u2264 b * c := by nlinarith\n  have : 0 \u2264 c * a := by nlinarith\n  have : 0 \u2264 a * b * c := by nlinarith\n  have : 0 \u2264 a ^ 2 * b ^ 2 * c ^ 2 := by positivity\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    sq_nonneg (a ^ 2 + b ^ 2 + c ^ 2), sq_nonneg (a * b + b * c + c * a), sq_nonneg (a * b - b * c),\n    sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_64613_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b * c \u2264 1) (h : 0 \u2264 Real.sqrt (a + b + c - 2)) : (a * b + b * c + c * a) * (1 / (Real.sqrt (a + b + c - 2) + 1)) \u2264 (a * b + b * c + c * a) * 1 \u2227 (a * b + b * c + c * a) * (1 / (Real.sqrt (a + b + c - 2) + 1)) \u2264 (a * b + b * c + c * a):= by", "target": "\n  have h\u2080 : Real.sqrt (a + b + c - 2) \u2265 0 := by positivity\n  have h\u2081 : 1 / (Real.sqrt (a + b + c - 2) + 1) \u2264 1 := by\n    rw [div_le_iff (show (0 : \u211d) < Real.sqrt (a + b + c - 2) + 1 by positivity)]\n    nlinarith\n  have h\u2082 : 0 \u2264 a * b + b * c + c * a := by positivity\n  constructor <;> nlinarith\n  <;> assumption\n  <;> assumption\n  <;> assumption"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_70490_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 3) (h\u2081 : a * b + b * c + c * a \u2264 3) : 1 / (a + 1) ^ 2 + 1 / (b + 1) ^ 2 + 1 / (c + 1) ^ 2 \u2265 3 / (4 ^ 2) \u2227 1 / (a + 1) ^ 2 + 1 / (b + 1) ^ 2 + 1 / (c + 1) ^ 2 \u2265 9 / (16 ^ 2):= by", "target": "\n  have h\u2082 : a + b + c = 3 := h\n  have h\u2083 : a * b + b * c + c * a \u2264 3 := h\u2081\n  have h\u2084 : 1 / (a + 1) ^ 2 + 1 / (b + 1) ^ 2 + 1 / (c + 1) ^ 2 \u2265 3 / (4 ^ 2) := by\n    have h\u2085 : 1 / (a + 1) ^ 2 \u2265 1 / 16 := by\n      rw [ge_iff_le]\n      apply one_div_le_one_div_of_le\n      \u00b7 nlinarith\n      \u00b7 nlinarith\n    have h\u2086 : 1 / (b + 1) ^ 2 \u2265 1 / 16 := by\n      rw [ge_iff_le]\n      apply one_div_le_one_div_of_le\n      \u00b7 nlinarith\n      \u00b7 nlinarith\n    have h\u2087 : 1 / (c + 1) ^ 2 \u2265 1 / 16 := by\n      rw [ge_iff_le]\n      apply one_div_le_one_div_of_le\n      \u00b7 nlinarith\n      \u00b7 nlinarith\n    calc\n      1 / (a + 1) ^ 2 + 1 / (b + 1) ^ 2 + 1 / (c + 1) ^ 2 \u2265 1 / 16 + 1 / 16 + 1 / 16 := by\n        linarith\n      _ = 3 / 16 := by ring\n      _ \u2265 3 / (4 ^ 2) := by norm_num\n  have h\u2085 : 1 / (a + 1) ^ 2 + 1 / (b + 1) ^ 2 + 1 / (c + 1) ^ 2 \u2265 9 / (16 ^ 2) := by\n    have h\u2086 : 1 / (a + 1) ^ 2 \u2265 1 / 16 := by\n      rw [ge_iff_le]\n      apply one_div_le_one_div_of_le\n      \u00b7 nlinarith\n      \u00b7 nlinarith\n    have h\u2087 : 1 / (b + 1) ^ 2 \u2265 1 / 16 := by\n      rw [ge_iff_le]\n      apply one_div_le_one_div_of_le\n      \u00b7 nlinarith\n      \u00b7 nlinarith\n    have h\u2088 : 1 / (c + 1) ^ 2 \u2265 1 / 16 := by\n      rw [ge_iff_le]\n      apply one_div_le_one_div_of_le\n      \u00b7 nlinarith\n      \u00b7 nlinarith\n    calc\n      1 / (a + 1) ^ 2 + 1 / (b + 1) ^ 2 + 1 / (c + 1) ^ 2 \u2265 1 / 16 + 1 / 16 + 1 / 16 := by\n        linarith\n      _ = 3 / 16 := by ring\n      _ \u2265 9 / (16 ^ 2) := by norm_num\n  exact \u27e8h\u2084, h\u2085\u27e9\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2611 (a b c : \u211d) (habc : a * b * c = 1) : (a^(1/3:\u211d) + b^(1/3:\u211d) + c^(1/3:\u211d)) \u2264 (3 * (3 + a + b + c + a * b + b * c + c * a))^(1/3:\u211d) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2611_plus (a b c : \u211d) (habc : a * b * c = 1) (h : a + b + c \u2265 3) : a ^ 2 / (b ^ 2 + c ^ 2 + a ^ 2) + b ^ 2 / (c ^ 2 + a ^ 2 + b ^ 2) + c ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) \u2264 2 \u2227 a * b * c * (a ^ 2 / (b ^ 2 + c ^ 2 + a ^ 2) + b ^ 2 / (c ^ 2 + a ^ 2 + b ^ 2) + c ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2)) \u2264 2:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4144 (k : \u2115) : (Real.sqrt (k + 2 * Real.sqrt (k + 1))) < 2 * Real.sqrt k := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4144_plus (x : \u2115) (hx : 1 < x) : Real.sqrt (x + 2 * Real.sqrt (x + 1)) < 2 * Real.sqrt x \u2228 (Real.sqrt (x + 2 * Real.sqrt (x + 1)) \u2265 2 * Real.sqrt x \u2227 2 * Real.sqrt x \u2265 1):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_15581_plus : \u2200 \u03b5 : \u211d, \u03b5 > 0 \u2192 \u2203 N : \u2115, \u2200 x : \u211d, x > N \u2192 1 - (1 + 1 / (1 + x))^(\u230ax\u230b\u208a) \u2264 \u03b5 \u2227 1 - (1 + 1 / (1 + x))^(\u230ax\u230b\u208a) \u2265 -\u03b5 \u2228 1 - (1 + 1 / (1 + x))^(\u230ax\u230b\u208a) \u2264 0 \u2228 1 - (1 + 1 / (1 + x))^(\u230ax\u230b\u208a) \u2265 0 \u2228 \u03b5 \u2264 1:= by", "target": "\n  intro \u03b5 \u03b5_pos\n  use \u2308(1 + \u03b5)\u2309\u208a\n  intro x hx\n  have h\u2081 : 1 - (1 + 1 / (1 + x))^(\u230ax\u230b\u208a) \u2264 \u03b5 \u2227 1 - (1 + 1 / (1 + x))^(\u230ax\u230b\u208a) \u2265 -\u03b5 \u2228 1 - (1 + 1 / (1 + x))^(\u230ax\u230b\u208a) \u2264 0 \u2228 1 - (1 + 1 / (1 + x))^(\u230ax\u230b\u208a) \u2265 0 \u2228 \u03b5 \u2264 1 := by\n    by_cases h : 1 - (1 + 1 / (1 + x))^(\u230ax\u230b\u208a) \u2264 \u03b5 \u2227 1 - (1 + 1 / (1 + x))^(\u230ax\u230b\u208a) \u2265 -\u03b5\n    \u00b7 exact Or.inl h\n    \u00b7 by_cases h' : 1 - (1 + 1 / (1 + x))^(\u230ax\u230b\u208a) \u2264 0\n      \u00b7 exact Or.inr (Or.inl h')\n      \u00b7 by_cases h'' : 1 - (1 + 1 / (1 + x))^(\u230ax\u230b\u208a) \u2265 0\n        \u00b7 exact Or.inr (Or.inr (Or.inl h''))\n        \u00b7 exact Or.inr (Or.inr (Or.inr (by linarith [\u03b5_pos])))\n  exact h\u2081\n  <;> simp [h\u2081]\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_28987_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b + b * c + c * a = 1) : a ^ 2 / (1 + a ^ 2) + b ^ 2 / (1 + b ^ 2) + c ^ 2 / (1 + c ^ 2) \u2265 (a * b + b * c + c * a) / (1 + (a * b + b * c + c * a)) \u2227 a * b / (a + b) + b * c / (b + c) + c * a / (c + a) \u2264 3 / 2:= by", "target": "\n  have : 0 \u2264 a * b := by positivity\n  have : 0 \u2264 b * c := by positivity\n  have : 0 \u2264 c * a := by positivity\n  have : 0 \u2264 a * b * (a * b) := by positivity\n  have : 0 \u2264 b * c * (b * c) := by positivity\n  have : 0 \u2264 c * a * (c * a) := by positivity\n  constructor\n  \u00b7 field_simp [habc]\n    rw [div_le_div_iff]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      mul_self_nonneg (a * b), mul_self_nonneg (b * c), mul_self_nonneg (c * a)]\n    positivity\n    positivity\n  have : a * b / (a + b) \u2264 1 / 2 := by\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (a - b)]\n  have : b * c / (b + c) \u2264 1 / 2 := by\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (b - c)]\n  have : c * a / (c + a) \u2264 1 / 2 := by\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (c - a)]\n  linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_8136 {a b c : \u211d} (ha : a \u2260 0) (hb : b \u2260 0) (hc : c \u2260 0) (habc : a + b + c \u2260 0) : (2 * a ^ 2 + (b - c) ^ 2) / (b ^ 2 - b * c + c ^ 2) + (2 * b ^ 2 + (c - a) ^ 2) / (c ^ 2 - c * a + a ^ 2) + (2 * c ^ 2 + (a - b) ^ 2) / (a ^ 2 - a * b + b ^ 2) \u2265 4 * (2 * (a ^ 2 + b ^ 2 + c ^ 2) - (a * b + b * c + c * a)) ^ 2 / ((b ^ 2 - b * c + c ^ 2) * (2 * a ^ 2 + (b - c) ^ 2) + (c ^ 2 - c * a + a ^ 2) * (2 * b ^ 2 + (c - a) ^ 2) + (a ^ 2 - a * b + b ^ 2) * (2 * c ^ 2 + (a - b) ^ 2)) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_8136_plus : \u2200 a b c : \u211d, a \u2260 0 \u2227 b \u2260 0 \u2227 c \u2260 0 \u2227 a + b + c \u2260 0 \u2192 \u2203 d : \u211d, d \u2260 0 \u2227 d ^ 2 \u2264 (2 * a ^ 2 + (b - c) ^ 2) / (b ^ 2 - b * c + c ^ 2) + (2 * b ^ 2 + (c - a) ^ 2) / (c ^ 2 - c * a + a ^ 2) + (2 * c ^ 2 + (a - b) ^ 2) / (a ^ 2 - a * b + b ^ 2):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4965 (a : \u2115 \u2192 \u2115) (h\u2080 : a 1 = 1) (h\u2081 : a 2 = 1) (h\u2082 : a 3 = 2) (h\u2083 : a 4 = 4) (h\u2084 : \u2200 n \u2265 5, a n = a (n - 1) + a (n - 3) + a (n - 4)) : a 5 = 7 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4965_plus (n : \u2115) (hn : 1 < n) : \u2203 (m : \u2115), m \u2264 n \u2227 1 < m \u2227 \u2203 (k : \u2115), k \u2264 n \u2227 1 < k \u2227 1 < (n - k) \u2228 (n - k) \u2264 1 \u2227 k \u2264 n \u2227 1 < k \u2228 (n - k) \u2264 1 \u2227 k \u2264 n \u2227 1 < k \u2228 (n - k) \u2264 1 \u2227 k \u2264 n \u2227 1 < k \u2228 (n - k) \u2264 1 \u2227 k \u2264 n \u2227 1 < k \u2228 (n - k) \u2264 1 \u2227 k \u2264 n \u2227 1 < k \u2228 (n - k) \u2264 1 \u2227 k \u2264 n \u2227 1 < k \u2228 (n - k) \u2264 1 \u2227 k \u2264 n \u2227 1 < k \u2228 (n - k) \u2264 1 \u2227 k \u2264 n \u2227 1 < k \u2228 (n - k) \u2264 1 \u2227 k \u2264 n \u2227 1 < k := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_82447_plus (a b c : \u211d) (hab : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) (h : a * b * c \u2264 1 / 9) : a ^ 2 / (1 - a ^ 2) + b ^ 2 / (1 - b ^ 2) + c ^ 2 / (1 - c ^ 2) \u2265 1 / 3:= by", "target": "\n  have h\u2080 : 0 \u2264 a * b := by positivity\n  have h\u2081 : 0 \u2264 b * c := by positivity\n  have h\u2082 : 0 \u2264 c * a := by positivity\n  have h\u2083 : 0 \u2264 a * b * c := by positivity\n  have h\u2084 : a ^ 2 / (1 - a ^ 2) \u2265 a ^ 2 / 1 := by\n    apply div_le_div_of_le_left\n    all_goals nlinarith\n  have h\u2085 : b ^ 2 / (1 - b ^ 2) \u2265 b ^ 2 / 1 := by\n    apply div_le_div_of_le_left\n    all_goals nlinarith\n  have h\u2086 : c ^ 2 / (1 - c ^ 2) \u2265 c ^ 2 / 1 := by\n    apply div_le_div_of_le_left\n    all_goals nlinarith\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_43637_plus (x : \u211d) (h\u2081 : 0 \u2264 x) (h\u2082 : x \u2264 1) (h\u2083 : 0 < x) : \u2203 y, 0 \u2264 y \u2227 y \u2264 1 \u2227 x \u2264 y \u2227 1 - x \u2264 y \u2227 1 / (1 + x) \u2264 y \u2227 y \u2264 1 + 3 * x:= by", "target": "\n  refine' \u27e81, by linarith, by linarith, by linarith, by linarith, _, by linarith\u27e9\n  have h\u2084 : 0 < 1 + x := by linarith\n  rw [div_le_iff h\u2084]\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_23449_plus  (x t : \u211d)\n  (h\u2080 : 0 < t)\n  (h\u2081 : t \u2260 1)\n  (h\u2082 : t \u2260 -2)\n  (h\u2083 : 2^x = t) :\n  Real.logb 2 (t^2 - 1) \u2264 2 * x \u2228 2 * x < Real.logb 2 (t^2 - 1) \u2228 Real.logb 2 (t^2 - 1) = 2 * x := by", "target": "\n  by_cases h\u2084 : Real.logb 2 (t^2 - 1) \u2264 2 * x\n  <;> by_cases h\u2085 : 2 * x < Real.logb 2 (t^2 - 1)\n  <;> simp_all\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_47082_plus (x y z : \u211d) (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2081 : x + y + z = 1) (h\u2082 : 0 < x * y) (h\u2083 : 0 < x * z) (h\u2084 : 0 < y * z) (h\u2085 : x * y + y * z + z * x = 1 / 3) (h\u2086 : 0 < x * y * z)  : 1 / (x + y * z) + 1 / (y + z * x) + 1 / (z + x * y) \u2265 9 / 2  := by", "target": "\n  rcases h\u2080 with \u27e8h\u2080_left, h\u2080_middle, h\u2080_right\u27e9\n  have h\u2087 : 0 < x * y * z := by positivity\n  have h\u2088 : 0 < x * y + y * z + z * x := by positivity\n  have h\u2089 : 0 < x * y * z * (x * y + y * z + z * x) := by positivity\n  field_simp [h\u2081, h\u2085, h\u2087, h\u2088, h\u2089]\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_self_nonneg (x * y + y * z + z * x), mul_self_nonneg (x * y - y * z),\n    mul_self_nonneg (y * z - z * x), mul_self_nonneg (z * x - x * y)]\n  positivity\n  positivity"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_24010_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 1) (h\u2082 : a * b + b * c + c * a \u2264 1) : 1 / (1 - a * b) + 1 / (1 - b * c) + 1 / (1 - c * a) \u2265 9 / 2 \u2228 (1 - a * b) * (1 - b * c) * (1 - c * a) = 0 \u2228 0 \u2264 (1 - a * b) * (1 - b * c) * (1 - c * a):= by", "target": "\n  have h\u2081 : 0 \u2264 a * b := by nlinarith\n  have h\u2083 : 0 \u2264 b * c := by nlinarith\n  have h\u2084 : 0 \u2264 c * a := by nlinarith\n  have h\u2085 : (1 - a * b) * (1 - b * c) * (1 - c * a) \u2265 0 := by\n    apply mul_nonneg\n    all_goals\n      nlinarith\n  apply Or.inr\n  exact Or.inr h\u2085"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_51084_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : a * b + b * c + c * a \u2264 (a ^ 2 + b ^ 2 + c ^ 2) + 3 * a * b * c * (1 / a + 1 / b + 1 / c):= by", "target": "\n  have h\u2081 : 0 \u2264 a * b := mul_nonneg hab hb\n  have h\u2082 : 0 \u2264 b * c := mul_nonneg hb hc\n  have h\u2083 : 0 \u2264 c * a := mul_nonneg hc hab\n  have h\u2084 : 0 \u2264 a * b * c := by positivity\n  have h\u2085 : 0 \u2264 a * b * c * (1 / a + 1 / b + 1 / c) := by positivity\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_27561_plus (x y : \u211d) (h\u2081 : 0 \u2264 x \u2227 0 \u2264 y) (h\u2082 : x + y \u2264 1) (h\u2083 : 0 \u2264 3 * x * y) (h\u2084 : x * y \u2264 1) (h\u2085 : 0 \u2264 Real.sqrt 2) (h\u2086 : 0 \u2264 Real.sqrt 3) : (Real.sqrt 2 + Real.sqrt 3) * (x + y) ^ 2 \u2265 (Real.sqrt 2 * x + Real.sqrt 3 * y) * (x + y):= by", "target": "\n  have h\u2087 : 0 \u2264 Real.sqrt 2 * x := by nlinarith\n  have h\u2088 : 0 \u2264 Real.sqrt 3 * y := by nlinarith\n  have h\u2089 : 0 \u2264 Real.sqrt 2 * y := by nlinarith\n  have h\u2081\u2080 : 0 \u2264 Real.sqrt 3 * x := by nlinarith\n  nlinarith [sq_sqrt (show 0 \u2264 2 by norm_num), sq_sqrt (show 0 \u2264 3 by norm_num),\n    mul_self_nonneg (x - y), mul_self_nonneg (Real.sqrt 2 - Real.sqrt 3)]\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_66525_plus (n : \u2115) (hn : 0 < n) : (\u2203 x y : \u211d, 0 \u2264 x \u2227 0 \u2264 y \u2227 Real.sqrt x \u2264 n \u2227 Real.sqrt y \u2264 n \u2227 Real.sqrt (x + y) \u2265 n - 1) \u2228 (\u2203 x y : \u211d, 0 \u2264 x \u2227 0 \u2264 y \u2227 Real.sqrt x \u2264 n \u2227 Real.sqrt y \u2264 n \u2227 Real.sqrt (x + y) \u2265 n):= by", "target": "\n  refine' Or.inl \u27e8n ^ 2, 0, by positivity, by positivity, _, _, _\u27e9 <;>\n  field_simp [hn] <;>\n  nlinarith [Real.sqrt_nonneg (n ^ 2), Real.sqrt_nonneg 0, Real.sq_sqrt (show 0 \u2264 (n ^ 2 : \u211d) by positivity),\n    Real.sq_sqrt (show 0 \u2264 (0 : \u211d) by positivity), Real.sq_sqrt (show 0 \u2264 (n ^ 2 + 0 : \u211d) by positivity)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_36976_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a + b + c = 1) : (1 / 3 : \u211d) \u2264 (a + b + c)^2 / (a^2 + b^2 + c^2) \u2228 (1 / 3 : \u211d) \u2264 (a + b + c)^2 / (a^2 + b^2 + c^2) \u2228 (1 / 3 : \u211d) \u2264 (a + b + c)^2 / (a^2 + b^2 + c^2):= by", "target": "\n  have h\u2083 : 0 \u2264 a^2 + b^2 + c^2 := by nlinarith\n  have h\u2084 : (a + b + c)^2 / (a^2 + b^2 + c^2) \u2265 1 / 3 := by\n    rw [h\u2082]\n    field_simp\n    rw [le_div_iff] <;> nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  exact Or.inl h\u2084"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_57014_plus (a b c : \u211d) (habc : a * b * c = 1) (h : 0 < a \u2227 0 < b \u2227 0 < c) : (1 / (13 * a ^ 5 + 15 * a + 4) + 1 / (13 * b ^ 5 + 15 * b + 4) + 1 / (13 * c ^ 5 + 15 * c + 4)) + 29 / (4 * (1 + a) * (1 + b) * (1 + c)) \u2264 1 \u2228 (1 + 1 / a + 1 / b + 1 / c) \u2264 9 \u2228 5 / (1 + a ^ 2) + 5 / (1 + b ^ 2) + 5 / (1 + c ^ 2) \u2265 15 / 3:= by", "target": "\n  rcases h with \u27e8ha, hb, hc\u27e9\n  refine' or_iff_not_imp_left.mpr fun h\u2081 => _\n  refine' or_iff_not_imp_left.mpr fun h\u2082 => _\n  norm_num\n  apply le_of_sub_nonneg\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le,\n    mul_nonneg (sq_nonneg (a - 1)) (sq_nonneg (b - 1)),\n    mul_nonneg (sq_nonneg (b - 1)) (sq_nonneg (c - 1)),\n    mul_nonneg (sq_nonneg (c - 1)) (sq_nonneg (a - 1))]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_36632_plus (a b c : \u211d) (habc : a + b + c = 3) (h : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) : (1 + a ^ 2) * (1 + b ^ 2) * (1 + c ^ 2) \u2265 8 * (a * b * c) \u2227 (1 + a ^ 2) * (1 + b ^ 2) * (1 + c ^ 2) \u2265 8 * (a * b * c * (a * b * c)) / (a * b * c):= by", "target": "\n  have h\u2080 : 0 \u2264 a * b := by nlinarith\n  have h\u2081 : 0 \u2264 b * c := by nlinarith\n  have h\u2082 : 0 \u2264 c * a := by nlinarith\n  have h\u2083 : 0 \u2264 a * b * c := by nlinarith\n  have h\u2084 : a * b * c \u2264 1 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  have h\u2085 : 8 * (a * b * c * (a * b * c)) / (a * b * c) \u2264 8 * (a * b * c) := by\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith\n  constructor <;> nlinarith [sq_nonneg (a * b * c), sq_nonneg (a * b - c), sq_nonneg (b * c - a), sq_nonneg (c * a - b)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1266 : \u2200 n : \u2115, n \u2260 0 \u2192 (n - 1)! / n! = 1 / n := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1266_plus : \u2200 n : \u2115, 1 < n \u2192 1 < n ! \u2227 1 < n ! ^ 2 \u2227 1 < n ! ^ 3 \u2227 1 < n ! ^ 4 \u2227 1 < n ! ^ 5 \u2227 1 < n ! ^ 6 \u2227 1 < n ! ^ 7 \u2227 1 < n ! ^ 8 \u2227 1 < n ! ^ 9 \u2227 1 < n ! ^ 10 \u2227 1 < n ! ^ 11 \u2227 1 < n ! ^ 12 \u2227 1 < n ! ^ 13 \u2227 1 < n ! ^ 14 \u2227 1 < n ! ^ 15 \u2227 1 < n ! ^ 16 \u2227 1 < n ! ^ 17 \u2227 1 < n ! ^ 18 \u2227 1 < n ! ^ 19 \u2227 1 < n ! ^ 20 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_47667_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (h : a + b + c = 3) (h' : a * b + b * c + c * a \u2264 3) : 1 / (Real.sqrt (a + 1) + 1) ^ 2 + 1 / (Real.sqrt (b + 1) + 1) ^ 2 + 1 / (Real.sqrt (c + 1) + 1) ^ 2 \u2265 3 / 16 \u2227 1 / (Real.sqrt (a + 1) + 1) ^ 2 + 1 / (Real.sqrt (b + 1) + 1) ^ 2 + 1 / (Real.sqrt (c + 1) + 1) ^ 2 \u2265 3 / 16 \u2228 1 / (Real.sqrt (a + 1) + 1) ^ 2 + 1 / (Real.sqrt (b + 1) + 1) ^ 2 + 1 / (Real.sqrt (c + 1) + 1) ^ 2 \u2265 3 / 16 \u2227 1 / (Real.sqrt (a + 1) + 1) ^ 2 + 1 / (Real.sqrt (b + 1) + 1) ^ 2 + 1 / (Real.sqrt (c + 1) + 1) ^ 2 \u2265 3 / 16 := by", "target": "\n  have h\u2081 : 1 / (Real.sqrt (a + 1) + 1) ^ 2 \u2265 1 / 16 := by\n    rw [ge_iff_le]\n    rw [div_le_div_iff]\n    nlinarith [Real.sqrt_nonneg (a + 1), sq_sqrt (show 0 \u2264 a + 1 by linarith),\n      sq_nonneg (Real.sqrt (a + 1) - 1)]\n    positivity\n    positivity\n  have h\u2082 : 1 / (Real.sqrt (b + 1) + 1) ^ 2 \u2265 1 / 16 := by\n    rw [ge_iff_le]\n    rw [div_le_div_iff]\n    nlinarith [Real.sqrt_nonneg (b + 1), sq_sqrt (show 0 \u2264 b + 1 by linarith),\n      sq_nonneg (Real.sqrt (b + 1) - 1)]\n    positivity\n    positivity\n  have h\u2083 : 1 / (Real.sqrt (c + 1) + 1) ^ 2 \u2265 1 / 16 := by\n    rw [ge_iff_le]\n    rw [div_le_div_iff]\n    nlinarith [Real.sqrt_nonneg (c + 1), sq_sqrt (show 0 \u2264 c + 1 by linarith),\n      sq_nonneg (Real.sqrt (c + 1) - 1)]\n    positivity\n    positivity\n  exact Or.inl \u27e8by linarith, by linarith\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_29568_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c \u2260 0) (h : 0 \u2264 k) :  Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) \u2265 (Real.sqrt (3 * (a * b + b * c + c * a)) - (a + b + c)) / Real.sqrt 3 \u2227 (Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) \u2265 (Real.sqrt (3 * (a * b + b * c + c * a)) - (a + b + c)) / Real.sqrt 3) \u2228 (Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) \u2265 (Real.sqrt (3 * (a * b + b * c + c * a)) - (a + b + c)) / Real.sqrt 3 \u2227 (Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) \u2265 (Real.sqrt (3 * (a * b + b * c + c * a)) - (a + b + c)) / Real.sqrt 3)) \u2228 (Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) \u2265 (Real.sqrt (3 * (a * b + b * c + c * a)) - (a + b + c)) / Real.sqrt 3 \u2227 (Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) \u2265 (Real.sqrt (3 * (a * b + b * c + c * a)) - (a + b + c)) / Real.sqrt 3))  := by", "target": "\n  have h\u2080 : 0 \u2264 a * b + b * c + c * a := by positivity\n  have h\u2081 : 0 \u2264 Real.sqrt 3 := by positivity\n  have h\u2082 : 0 \u2264 Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) := by positivity\n  have h\u2083 : 0 \u2264 Real.sqrt (3 * (a * b + b * c + c * a)) := by positivity\n  have h\u2084 : (Real.sqrt (3 * (a * b + b * c + c * a)) - (a + b + c)) / Real.sqrt 3 \u2264 Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) := by\n    rw [div_le_iff (by positivity)]\n    have h\u2084\u2081 : Real.sqrt (3 * (a * b + b * c + c * a)) \u2264 Real.sqrt 3 * Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) := by\n      rw [\u2190 Real.sqrt_mul]\n      \u00b7 apply Real.sqrt_le_sqrt\n        nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n      \u00b7 positivity\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  exact Or.inl \u27e8h\u2084, h\u2084\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_57116_plus (a b : \u211d) (hab : a \u2260 b) (ha : a^2 + 8*a - 209 = 0) (hb : b^2 + 8*b - 209 = 0) : a * b / (a + b) \u2265 26.125 \u2228 a * b / (a + b) < 26.125  := by", "target": "\n  by_cases h : a * b / (a + b) \u2265 26.125\n  exact Or.inl h\n  exact Or.inr (by norm_num at h \u22a2; linarith)\n  <;> norm_num at ha hb \u22a2\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_5201_plus (a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : Real.sqrt (a ^ 2 + 1) * Real.sqrt (b ^ 2 + 1) * Real.sqrt (c ^ 2 + 1) * Real.sqrt (d ^ 2 + 1) \u2265 (a * b * c * d + 1) / (a * b + c * d + 1):= by", "target": "\n  have h\u2080 : Real.sqrt (a ^ 2 + 1) * Real.sqrt (b ^ 2 + 1) * Real.sqrt (c ^ 2 + 1) * Real.sqrt (d ^ 2 + 1) \u2265 (a * b * c * d + 1) / (a * b + c * d + 1) := by\n    have h\u2081 : Real.sqrt (a ^ 2 + 1) * Real.sqrt (b ^ 2 + 1) * Real.sqrt (c ^ 2 + 1) * Real.sqrt (d ^ 2 + 1) =\n        Real.sqrt ((a ^ 2 + 1) * (b ^ 2 + 1) * (c ^ 2 + 1) * (d ^ 2 + 1)) := by\n      rw [Real.sqrt_mul, Real.sqrt_mul, Real.sqrt_mul] <;> positivity\n    rw [h\u2081]\n    apply le_sqrt_of_sq_le\n    field_simp [ha, hb, hc, hd]\n    ring_nf\n    apply le_of_sub_nonneg\n    field_simp [ha, hb, hc, hd]\n    ring_nf\n    positivity\n  linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_40208_plus (n : \u2115) : \u2211 i in Finset.range (n+1), i ^ 3 \u2264 (\u2211 i in Finset.range (n+1), i) ^ 2 \u2228 (\u2211 i in Finset.range (n+1), i) ^ 2 \u2264 \u2211 i in Finset.range (n+1), i ^ 3 := by", "target": "\n  by_cases h\u2081 : \u2211 i in Finset.range (n + 1), i ^ 3 \u2264 (\u2211 i in Finset.range (n + 1), i) ^ 2\n  exact Or.inl h\u2081\n  right\n  exact by\n    cases n\n    all_goals simp_all [Finset.sum_range_succ, Nat.succ_eq_add_one, Nat.pow_succ, Nat.mul_comm, Nat.mul_left_comm]\n    all_goals nlinarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1059 (n : \u2115) (a : \u2115 \u2192 NNReal) (h\u2080 : 0 < n) (h\u2081 : \u2200 i \u2208 Finset.range n, 0 < a i) (h\u2082 : \u2200 i \u2208 Finset.range n, \u2200 j \u2208 Finset.range n, i \u2264 j \u2192 a i \u2264 a j) : 4 * (\u2211 i in Finset.range n, a i) / n * a n / n \u2264 ((a 0 + a n) ^ 2 / n) / (\u2211 i in Finset.range n, (1 : \u211d) / a i) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1059_plus (n : \u2115) (hn : 0 < n) (a : \u2115 \u2192 \u211d) (ha : \u2200 i \u2208 Finset.range n, 0 < a i) (hab : \u2200 i \u2208 Finset.range n, \u2200 j \u2208 Finset.range n, i \u2264 j \u2192 a i \u2264 a j) : \u2211 i in Finset.range n, (1 / a i) \u2265 (1 / \u2211 i in Finset.range n, a i) \u2228 \u2211 i in Finset.range n, a i = 0 \u2228 \u2211 i in Finset.range n, (1 / a i) = 0 \u2228 \u2211 i in Finset.range n, (1 / a i) = 0 \u2228 \u2211 i in Finset.range n, (1 / a i) = 0 \u2228 \u2211 i in Finset.range n, (1 / a i) = 0 \u2228 \u2211 i in Finset.range n, (1 / a i) = 0 \u2228 \u2211 i in Finset.range n, (1 / a i) = 0 \u2228 \u2211 i in Finset.range n, (1 / a i) = 0 \u2228 \u2211 i in Finset.range n, (1 / a i) = 0 \u2228 \u2211 i in Finset.range n, (1 / a i) = 0 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_2570_plus (a b c : \u211d) (habc : a * b * c = 1) (h : a^4 + b^4 + c^4 = 3) : a^2 / b + b^2 / c + c^2 / a \u2265 3 \u2228 (a^2 + b^2 + c^2) \u2265 3 \u2228 (a^2 * b^2 * c ^2) \u2265 1:= by", "target": "\n  apply Or.inr\n  apply Or.inl\n  nlinarith [sq_nonneg (a^2 - 1), sq_nonneg (b^2 - 1), sq_nonneg (c^2 - 1),\n    sq_nonneg (a^2 - b^2), sq_nonneg (b^2 - c^2), sq_nonneg (a^2 - c^2)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4150 (n : \u2115) (p : \u2115) (hp : p = n^2 + n + 1) : p + n = (n + 1)^2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4150_plus (n : \u2115) (hp : p = n^2 + n + 1) : \u2203 k : \u2115, p + n = (n + 1)^2 \u2228 \u2203 k : \u2115, p + n \u2260 (n + 1)^2 \u2227 n \u2264 k \u2228 \u2203 k : \u2115, p + n \u2260 (n + 1)^2 \u2227 k \u2264 n \u2228 \u2203 k : \u2115, p + n \u2260 (n + 1)^2 \u2227 n \u2264 k \u2228 \u2203 k : \u2115, p + n \u2260 (n + 1)^2 \u2227 k \u2264 n := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_47959_plus (a b c : \u211d) (habc : a * b + a * c + b * c = 3) : 8 * (a + b + c) ^ 2 \u2265 9 * (a + b) * (a + c) * (b + c) \u2228 0 \u2264 3 * (a - b) ^ 2 * (b - c) ^ 2 * (c - a) ^ 2:= by", "target": "\n  refine' or_iff_not_imp_left.mpr fun h => _\n  have : 0 \u2264 (a - b) ^ 2 * (b - c) ^ 2 * (c - a) ^ 2 := by positivity\n  linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_21988_plus (x : \u211d) (hx : \u2200 x, (x <= 2 \u2228 11/4 < x \u2227 x <= 4)) : \u2203 x, 11/4 < x \u2227 x <= 4 \u2228 \u2203 x, x <= 2 \u2228 11/4 < x \u2227 x <= 4 := by", "target": "\n  refine' \u27e84, _\u27e9\n  simpa using hx 4"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_8774 (a b c : \u211d) : (a^2 + b^2 + c^2) * (a + b + c) \u2264 3 * (a^3 + b^3 + c^3) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_8774_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b + b * c + c * a = 0) : a ^ 2 * b ^ 2 * c ^ 2 * (a + b + c) \u2264 (a ^ 3 + b ^ 3 + c ^ 3) * (a ^ 2 + b ^ 2 + c ^ 2):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_27690_plus (n : \u2115) (hn : 1 < n) : (1 : \u211d) \u2264 1 + 1 / (n : \u211d) ^ 2 \u2227 (1 : \u211d) + 1 / (n : \u211d) ^ 2 \u2264 2 \u2228 (1 : \u211d) + 1 / (n : \u211d) ^ 2 \u2264 1 \u2228 (2 : \u211d) \u2264 1 + 1 / (n : \u211d) ^ 2:= by", "target": "\n  refine' or_iff_not_imp_right.2 fun h => _\n  push_neg at h\n  constructor\n  \u00b7 linarith\n  \u00b7 have : (n : \u211d) ^ 2 \u2265 1 := by\n      norm_cast\n      nlinarith\n    have h\u2081 : (1 : \u211d) / (n : \u211d) ^ 2 \u2264 1 := by\n      rw [div_le_iff (by positivity)]\n      nlinarith\n    linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4633 (a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (hab : a + b + c + a * b * c = 2) (habc : a * b + b * c + c * a > 0) : 1 / (a^3 + b^3) + 1 / (b^3 + c^3) + 1 / (c^3 + a^3) \u2265 5 / 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4633_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 3) (h' : a * b + b * c + c * a \u2264 3) : 1 / (a + 2) ^ 2 + 1 / (b + 2) ^ 2 + 1 / (c + 2) ^ 2 \u2265 3 / (3 + 2) ^ 2 \u2227 1 / (a + 2) ^ 2 + 1 / (b + 2) ^ 2 + 1 / (c + 2) ^ 2 \u2264 9 / 4:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_10137 (x y : \u211d) (hx : 0 < x) (hy : 0 < y) : (x + 1) ^ (-2:\u2124) + (y + 1) ^ (-2:\u2124) \u2265 (xy + 1) ^ (-1:\u2124) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_10137_plus (x y : \u211d) (h\u2080 : 0 \u2264 x \u2227 0 \u2264 y) (h\u2081 : x \u2264 1 \u2227 y \u2264 1) (h\u2082 : 0 < x * y) : (x * y) ^ (-2:\u2124) \u2265 (x * y + 1) ^ (-1:\u2124):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_28920_plus : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 a * b + b * c + c * a \u2260 0 \u2192\n    Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) \u2265 (Real.sqrt (a * b + b * c + c * a)) * (Real.sqrt (2) - 1):= by", "target": "\n  rintro a b c \u27e8ha, hb, hc\u27e9 h\n  have h1 : 0 < Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) := by positivity\n  have h2 : 0 < Real.sqrt (a * b + b * c + c * a) := by positivity\n  have h3 : 0 < Real.sqrt 2 := by positivity\n  have h4 : 0 < Real.sqrt 2 * Real.sqrt (a * b + b * c + c * a) := by positivity\n  nlinarith [sq_sqrt (show 0 \u2264 a ^ 2 + b ^ 2 + c ^ 2 from by positivity),\n    sq_sqrt (show 0 \u2264 2 from by positivity),\n    sq_sqrt (show 0 \u2264 a * b + b * c + c * a from by positivity),\n    mul_self_nonneg (a - b),\n    mul_self_nonneg (b - c),\n    mul_self_nonneg (c - a)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1361 (a b c : \u211d) (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : \u221a((b + c - a) / a) + \u221a((c + a - b) / b) + \u221a((a + b - c) / c) \u2265 2 * Real.sqrt 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1361_plus (a b c : \u211d) (hab : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : Real.sqrt (1 - a) + Real.sqrt (1 - b) + Real.sqrt (1 - c) \u2265 Real.sqrt (2 * (1 - (a + b + c) / 3)) \u2227 Real.sqrt (1 - a) + Real.sqrt (1 - b) + Real.sqrt (1 - c) \u2265 3 * (1 - (a + b + c) / 3):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_47432_plus (a b c : \u211d) (hab : 0 < a \u2227 0 < b \u2227 0 < c) (habc : a + b + c = 1) (h : 0 < a * b * c) : 1 / (a^2 + b * c + a) + 1 / (b^2 + c * a + b) + 1 / (c^2 + a * b + c) \u2264 1 / (a * b * c * (27 * a * b * c + 4)) \u2228 1 / (a * b * c * (27 * a * b * c + 4)) \u2264 1 / (a^2 + b * c + a) + 1 / (b^2 + c * a + b) + 1 / (c^2 + a * b + c):= by", "target": "\n  by_contra! h\u2081\n  have h\u2082 : 0 < a := by linarith\n  have h\u2083 : 0 < b := by linarith\n  have h\u2084 : 0 < c := by linarith\n  have h\u2085 : 0 < a * b := by positivity\n  have h\u2086 : 0 < b * c := by positivity\n  have h\u2087 : 0 < c * a := by positivity\n  have h\u2088 : 0 < a * b * c := by positivity\n  have h\u2089 : 0 < a * b * c * (27 * a * b * c + 4) := by positivity\n  have h\u2081\u2080 : 1 / (a ^ 2 + b * c + a) + 1 / (b ^ 2 + c * a + b) + 1 / (c ^ 2 + a * b + c) > 1 / (a * b * c * (27 * a * b * c + 4)) := by\n    apply lt_of_sub_pos\n    field_simp\n    nlinarith [mul_self_nonneg (a * b * c), mul_self_nonneg (a * b * c * (27 * a * b * c + 4)),\n      mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b)]\n  linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3961 (a b c d : \u211d) (ha : a \u2208 Set.Icc 0 1) (hb : b \u2208 Set.Icc 0 1) (hc : c \u2208 Set.Icc 0 1) (hd : d \u2208 Set.Icc 0 1) : (a + b + c + d + 1) ^ 2 \u2265 4 * (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3961_plus (a b c d : \u211d) (hab : 0 \u2264 a \u2227 a \u2264 1) (hbc : 0 \u2264 b \u2227 b \u2264 1) (hcd : 0 \u2264 c \u2227 c \u2264 1) (hda : 0 \u2264 d \u2227 d \u2264 1) (habc : a + b + c + d \u2264 1) : (1 - a) * (1 - b) * (1 - c) * (1 - d) \u2265 0 \u2227 (1 - a) * (1 - b) * (1 - c) * (1 - d) \u2265 (1 - a - b - c - d) ^ 2:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_6724 (x y z : \u211d) (h : x * y + y * z + z * x = 1) : 18 * (x ^ 2 + y ^ 2 + z ^ 2) ^ 2 \u2265 (x + y + z) ^ 4 + 9 * x * y * z * (x + y + z) ^ 3 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_6724_plus (x y z : \u211d) (h\u2081 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2082 : x * y + y * z + z * x = 1) : 18 * (x ^ 2 + y ^ 2 + z ^ 2) ^ 2 \u2265 (x + y + z) ^ 4 + 9 * x * y * z * (x + y + z) ^ 3 \u2228 (x * y * z > 0 \u2227 (x * y * z) * (x + y + z) \u2264 (x * y + y * z + z * x) ^ 2):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_18415_plus : \u2200 (x : \u2115), x \u2264 12 \u2192 \u2211 k in Finset.Icc 1 12, k \u2264 \u2211 k in Finset.Icc 1 x, k + \u2211 k in Finset.Icc x 12, k := by", "target": "\n  rintro x hx\n  have : x \u2264 12 := hx\n  interval_cases x <;> simp_all [Finset.sum_Icc_succ_top]\n  <;> linarith\n  <;> linarith\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_27550_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) : x ^ 2 * y ^ 2 * z ^ 2 * (x + y + z + 3) \u2265 0 \u2227 x * y * z * (x + y + z) \u2265 0 \u2227 x * y * z \u2265 0 \u2227 x * y \u2265 0 \u2227 x * z \u2265 0 \u2227 y * z \u2265 0 := by", "target": "\n  have h\u2081 : 0 \u2264 x ^ 2 * y ^ 2 * z ^ 2 := by positivity\n  have h\u2082 : 0 \u2264 x * y * z := by positivity\n  have h\u2083 : 0 \u2264 x * y := by positivity\n  have h\u2084 : 0 \u2264 x * z := by positivity\n  have h\u2085 : 0 \u2264 y * z := by positivity\n  exact \u27e8by positivity, by positivity, by positivity, by positivity, by positivity, by positivity\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_16695_plus (x y z : \u211d) (h\u2081 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2082 : x * y * z = 1) : 3 + x/z + y/x + z/y \u2265 x + y + z + 1/x + 1/y + 1/z \u2228 3 + x/z + y/x + z/y < x + y + z + 1/x + 1/y + 1/z \u2228 3 + x/z + y/x + z/y = x + y + z + 1/x + 1/y + 1/z := by", "target": "\n  by_cases h\u2081 : 3 + x / z + y / x + z / y \u2265 x + y + z + 1 / x + 1 / y + 1 / z <;> simp_all\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_48879_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 a \u2264 1) (hbc : 0 \u2264 b \u2227 b \u2264 1) (hca : 0 \u2264 c \u2227 c \u2264 1) (h : a * b * c \u2264 1) : (1 + a * b) * (1 + b * c) * (1 + c * a) \u2265 (1 + a * b * c) * (a + b + c):= by", "target": "\n  nlinarith [mul_nonneg hab.1 hbc.1, mul_nonneg hbc.1 hca.1, mul_nonneg hca.1 hab.1,\n    mul_nonneg (sub_nonneg.mpr hab.2) (sub_nonneg.mpr hbc.2), mul_nonneg (sub_nonneg.mpr hbc.2) (sub_nonneg.mpr hca.2), mul_nonneg (sub_nonneg.mpr hca.2) (sub_nonneg.mpr hab.2),\n    mul_nonneg (sq_nonneg a) (sq_nonneg b), mul_nonneg (sq_nonneg b) (sq_nonneg c), mul_nonneg (sq_nonneg c) (sq_nonneg a)]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_49513_plus (x y z : \u211d) (hx : 0 < x \u2227 0 < y \u2227 0 < z) (hx' : x + y + z = 1) : (x * y) ^ 2 / (x ^ 2 * y ^ 2 + y ^ 2 * z ^ 2 + z ^ 2 * x ^ 2) + (y * z) ^ 2 / (y ^ 2 * z ^ 2 + z ^ 2 * x ^ 2 + x ^ 2 * y ^ 2) + (z * x) ^ 2 / (z ^ 2 * x ^ 2 + x ^ 2 * y ^ 2 + y ^ 2 * z ^ 2) \u2264 3 / 2 \u2227 (x * y) ^ 2 / (x ^ 2 * y ^ 2 + y ^ 2 * z ^ 2 + z ^ 2 * x ^ 2) + (y * z) ^ 2 / (y ^ 2 * z ^ 2 + z ^ 2 * x ^ 2 + x ^ 2 * y ^ 2) + (z * x) ^ 2 / (z ^ 2 * x ^ 2 + x ^ 2 * y ^ 2 + y ^ 2 * z ^ 2) \u2265 3 / 5 \u2228 (x * y) ^ 2 / (x ^ 2 * y ^ 2 + y ^ 2 * z ^ 2 + z ^ 2 * x ^ 2) + (y * z) ^ 2 / (y ^ 2 * z ^ 2 + z ^ 2 * x ^ 2 + x ^ 2 * y ^ 2) + (z * x) ^ 2 / (z ^ 2 * x ^ 2 + x ^ 2 * y ^ 2 + y ^ 2 * z ^ 2) \u2265 3 / 5 \u2227 (x * y) ^ 2 / (x ^ 2 * y ^ 2 + y ^ 2 * z ^ 2 + z ^ 2 * x ^ 2) + (y * z) ^ 2 / (y ^ 2 * z ^ 2 + z ^ 2 * x ^ 2 + x ^ 2 * y ^ 2) + (z * x) ^ 2 / (z ^ 2 * x ^ 2 + x ^ 2 * y ^ 2 + y ^ 2 * z ^ 2) \u2264 3 / 2  := by", "target": "\n  rcases hx with \u27e8hx\u2080, hy\u2080, hz\u2080\u27e9\n  have h\u2080 : x * y > 0 := mul_pos hx\u2080 hy\u2080\n  have h\u2081 : y * z > 0 := mul_pos hy\u2080 hz\u2080\n  have h\u2082 : z * x > 0 := mul_pos hz\u2080 hx\u2080\n  apply Or.inl\n  constructor\n  \u00b7 apply le_of_sub_nonneg\n    field_simp\n    ring_nf\n    positivity\n  \u00b7 apply le_of_sub_nonneg\n    field_simp\n    ring_nf\n    positivity"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_22161_plus (n : \u2115) (hn : 1 < n) : (\u2203 a b : \u211d, \u2200 x : \u2115, 1 \u2264 x \u2227 x \u2264 n \u2192  (1 : \u211d) \u2264 a * x + b * x ^ 2 \u2228 (1 : \u211d) \u2264 a * x ^ 2 + b * x):= by", "target": "\n  use 1, 0\n  intro x hx\n  cases' hx with hx\u2081 hx\u2082\n  simp [hx\u2081, hx\u2082]\n  <;> nlinarith\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1911 (x y z : \u211d) (h\u2080 : x + y / z = 2) (h\u2081 : y + z / x = 2) (h\u2082 : z + x / y = 2) : x = 1 \u2227 y = 1 \u2227 z = 1 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1911_plus (x y z : \u211d) (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2081 : x + y + z = 3) (h\u2082 : x * y + y * z + z * x \u2264 3) (h\u2083 : 1 / x + 1 / y + 1 / z \u2265 3) : x = 1 \u2227 y = 1 \u2227 z = 1 \u2228 x * y * z \u2264 1:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4405 (p n : \u2115) (hp : Nat.Prime p) (hpo : Odd p) : \u2200 a : \u2124, a \u2261 1 [ZMOD p^n] \u2194 a^p \u2261 1 [ZMOD p^(n+1)] := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4405_plus (n : \u2115) (hn : 1 < n) : \u2203 p : \u2115, Nat.Prime p \u2227 \u2203 a : \u2124, \u00ac (a \u2261 0 [ZMOD p] \u2228 a \u2261 1 [ZMOD p]) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1510 (a : \u2115 \u2192 NNReal) (n : \u2115) (h\u2080 : \u2211 x in Finset.range n, a x = n) (h\u2081 : \u220f x in Finset.range n, a x = 1) : n * (\u2211 x in Finset.range n, a x)^n * (\u2211 x in Finset.range n, a x^n)^(n - 1) \u2265 (\u2211 x in Finset.range n, a x^n + n * (n - 1) * \u220f x in Finset.range n, a x)^n := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1510_plus (a : \u2115 \u2192 NNReal) (n : \u2115) (h\u2080 : \u2211 x in Finset.range n, a x = n) (h\u2081 : \u220f x in Finset.range n, a x = 1) : (\u2211 x in Finset.range n, a x ^ n) \u2265 (\u2211 x in Finset.range n, a x) ^ n \u2228 (\u2211 x in Finset.range n, a x ^ n) < (\u2211 x in Finset.range n, a x) ^ n \u2227 (\u2211 x in Finset.range n, a x ^ n) \u2265 0 \u2227 (\u2211 x in Finset.range n, a x ^ n) \u2264 n * \u2211 x in Finset.range n, a x ^ n:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_52003_plus (a b : \u211d) (hab : 0 < a \u2227 0 < b) : Real.sqrt (a ^ 2 + b ^ 2) ^ 3 \u2265 (a * b * Real.sqrt (a ^ 2 + b ^ 2)) * (1 / Real.sqrt (a ^ 2 + b ^ 2)) \u2227 (Real.sqrt (a ^ 2 + b ^ 2)) ^ 3 \u2265 (a * b * Real.sqrt (a ^ 2 + b ^ 2)) * (1 / Real.sqrt (a ^ 2 + b ^ 2)) \u2228 (Real.sqrt (a ^ 2 + b ^ 2)) ^ 3 < (a * b * Real.sqrt (a ^ 2 + b ^ 2)) * (1 / Real.sqrt (a ^ 2 + b ^ 2)) \u2227 (Real.sqrt (a ^ 2 + b ^ 2)) ^ 3 < (a * b * Real.sqrt (a ^ 2 + b ^ 2)) * (1 / Real.sqrt (a ^ 2 + b ^ 2)) := by", "target": "\n  by_cases h\u2080 : Real.sqrt (a ^ 2 + b ^ 2) = 0 <;> simp_all [pow_three]\n  <;> norm_num\n  <;> apply le_or_lt\n  <;> norm_num\n  <;> ring_nf\n  <;> norm_num\n  <;> apply le_or_lt\n  <;> norm_num\n  <;> ring_nf\n  <;> norm_num\n  <;> apply le_or_lt\n  <;> norm_num\n  <;> ring_nf\n  <;> norm_num\n  <;> apply le_or_lt\n  <;> norm_num\n  <;> ring_nf\n  <;> norm_num\n  <;> apply le_or_lt\n  <;> norm_num\n  <;> ring_nf\n  <;> norm_num\n  <;> apply le_or_lt\n  <;> norm_num\n  <;> ring_nf\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4310 (p q r : \u211d) (h : {p,q,r} \u2286 Set.Ioi 0) (hpqr : p * q * r = 1) (hq2 : q^2 \u2265 p * r) (hr2 : r^2 \u2265 p * q) : \u221a(q * r) \u2265 p := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4310_plus (p q r : \u211d) (hp : 0 < p) (hq : 0 < q) (hr : 0 < r) (hpqr : p * q * r = 1) (hq2 : q^2 \u2265 p * r) (hr2 : r^2 \u2265 p * q) : \u221a(q * r) \u2265 p \u2227 r * \u221a(q * r) \u2265 p * q \u2228 r * \u221a(q * r) \u2265 p * q \u2227 \u221a(q * r) \u2265 p := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_7546_plus (a b c : \u211d) (hab : 0 < a \u2227 0 < b \u2227 0 < c) (h : a + b + c = 3) (h' : a * b * c = 1) : (1 + 1) * (1 + 1) * (1 + 1) \u2265 (1 - 1) * (1 - 1) * (1 - 1):= by", "target": "\n  norm_num [h, h']"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1329 (x y z : \u211d) (h : x * y + y * z + z * x = 1) : 3 \u2264 (x + y * z)\u207b\u00b9 + (y + z * x)\u207b\u00b9 + (z + x * y)\u207b\u00b9 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1329_plus (x y z : \u211d) (h\u2081 : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z) (h\u2082 : x + y + z = 1) (h\u2083 : x * y + x * z + y * z \u2264 1) : 1 \u2264 (x * y)\u207b\u00b9 + (x * z)\u207b\u00b9 + (y * z)\u207b\u00b9 \u2228 (x * y)\u207b\u00b9 + (x * z)\u207b\u00b9 + (y * z)\u207b\u00b9 \u2264 1:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3623 (a b c d : \u211d) (ha : 0 \u2264 a \u2227 a < 2^(1/4)) (hb : 0 \u2264 b \u2227 b < 2^(1/4)) (hc : 0 \u2264 c \u2227 c < 2^(1/4)) (hd : 0 \u2264 d \u2227 d < 2^(1/4)) (habc : a^3 + b^3 + c^3 + d^3 = 2) : 2 \u2264 a / (2 - a^4)^(1/2) + b / (2 - b^4)^(1/2) + c / (2 - c^4)^(1/2) + d / (2 - d^4)^(1/2) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3623_plus (a b c d : \u211d) (habc : a + b + c + d = 2) (h : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 0 \u2264 d) (h\u2081 : 0 \u2264 a^2 + b^2 + c^2 + d^2) (h\u2082 : 0 \u2264 a^3 + b^3 + c^3 + d^3) (h\u2083 : 0 \u2264 a^4 + b^4 + c^4 + d^4) : Real.sqrt (a^3 + b^3 + c^3 + d^3) \u2265 (a + b + c + d) / 4 \u2227 Real.sqrt (a^4 + b^4 + c^4 + d^4) \u2265 (a^2 + b^2 + c^2 + d^2) / 4:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_15488_plus (p : \u2115) (hp : 3 < p) (hp1 : Nat.Prime p) : (\u2203 x y z : \u2115, x^2 + y^2 + z^2 = 4 * p^2 + 1 \u2228 \u2203 x y z : \u2115, x^2 + y^2 + z^2 = 4 * p^2 + 1) \u2228 (\u2203 x y z : \u2115, x^2 + y^2 + z^2 = 4 * p^2 + 1 \u2228 \u2203 x y z : \u2115, x^2 + y^2 + z^2 = 4 * p^2 + 1):= by", "target": "\n  refine' Or.inl \u27e80, 1, (2 * p), _\u27e9\n  ring_nf\n  <;> simp [hp1, hp]\n  <;> omega\n  <;> omega\n  <;> omega"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_52698_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a + b + c = 1) : (1 - a ^ 2 - b ^ 2 - c ^ 2) ^ 2 * (a ^ 2 * b ^ 2 * c ^ 2) \u2265 0 \u2227 (1 - a ^ 2 - b ^ 2 - c ^ 2) ^ 2 * (a * b * c) \u2265 0 \u2227 (1 - a ^ 2 - b ^ 2 - c ^ 2) * (a * b * c) \u2265 0 := by", "target": "\n  have h\u2083 : a ^ 2 + b ^ 2 + c ^ 2 \u2264 1 := by\n    nlinarith\n  have h\u2084 : 0 \u2264 a * b * c := by\n    apply mul_nonneg\n    all_goals nlinarith\n  have h\u2085 : 0 \u2264 a ^ 2 * b ^ 2 * c ^ 2 := by\n    apply mul_nonneg\n    all_goals nlinarith\n  exact \u27e8by positivity, by positivity, by nlinarith\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_13041_plus (a b c : \u211d) (habc : a + b + c = a * b * c) (h : 0 < a \u2227 0 < b \u2227 0 < c) : 1 / (a * b) + 1 / (b * c) + 1 / (c * a) \u2265 3 / (a + b + c):= by", "target": "\n  have h\u2081 : 0 < a := h.1\n  have h\u2082 : 0 < b := h.2.1\n  have h\u2083 : 0 < c := h.2.2\n  have h\u2084 : 0 < a * b := by positivity\n  have h\u2085 : 0 < b * c := by positivity\n  have h\u2086 : 0 < c * a := by positivity\n  have h\u2087 : 0 < a * b * c := by positivity\n  have h\u2088 : 0 < a + b + c := by linarith\n  have h\u2089 : 0 < a * b * c * (a + b + c) := by positivity\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087, h\u2088, h\u2089]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a),\n    mul_self_nonneg (c * a - a * b)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_21625_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b + b * c + c * a = 1) : a ^ 2 * (1 - b ^ 2 - c ^ 2) ^ 2 / (1 - 2 * b * c) ^ 2 + b ^ 2 * (1 - a ^ 2 - c ^ 2) ^ 2 / (1 - 2 * a * c) ^ 2 + c ^ 2 * (1 - b ^ 2 - a ^ 2) ^ 2 / (1 - 2 * b * a) ^ 2 \u2265 0 \u2227 a * b * (a - b) ^ 2 / (1 - 2 * a * b) ^ 2 + b * c * (b - c) ^ 2 / (1 - 2 * b * c) ^ 2 + c * a * (c - a) ^ 2 / (1 - 2 * c * a) ^ 2 \u2265 0 \u2227 a * b * c * (a * b + b * c + c * a) \u2265 0 \u2227 a * b * c \u2265 0 \u2227 a * b * c * (a * b + b * c + c * a) \u2265 0 \u2227 a * b * c \u2265 0 \u2227 a * b * c * (a * b + b * c + c * a) \u2265 0 \u2227 a * b * c \u2265 0 \u2227 a * b * c * (a * b + b * c + c * a) \u2265 0 \u2227 a * b * c \u2265 0 \u2227 a * b * c * (a * b + b * c + c * a) \u2265 0 \u2227 a * b * c \u2265 0  := by", "target": "\n  have h\u2081 : 0 \u2264 a * b := by positivity\n  have h\u2082 : 0 \u2264 b * c := by positivity\n  have h\u2083 : 0 \u2264 c * a := by positivity\n  have h\u2084 : 0 \u2264 a * b * c := by positivity\n  have h\u2085 : 0 \u2264 a * b * c * (a * b + b * c + c * a) := by positivity\n  have h\u2086 : a ^ 2 * (1 - b ^ 2 - c ^ 2) ^ 2 / (1 - 2 * b * c) ^ 2 + b ^ 2 * (1 - a ^ 2 - c ^ 2) ^ 2 / (1 - 2 * a * c) ^ 2 + c ^ 2 * (1 - b ^ 2 - a ^ 2) ^ 2 / (1 - 2 * b * a) ^ 2 \u2265 0 := by positivity\n  have h\u2087 : a * b * (a - b) ^ 2 / (1 - 2 * a * b) ^ 2 + b * c * (b - c) ^ 2 / (1 - 2 * b * c) ^ 2 + c * a * (c - a) ^ 2 / (1 - 2 * c * a) ^ 2 \u2265 0 := by positivity\n  exact \u27e8h\u2086, h\u2087, by positivity, by positivity, by positivity, by positivity, by positivity, by positivity, by positivity, by positivity, by positivity, by positivity\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2361 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a * b + b * c + c * a = 3) : (a^2 / (c * (a + c)) + b^2 / (a * (b + a)) + c^2 / (b * (c + b))) \u2265 3 / (2 * Real.sqrt a * Real.sqrt b * Real.sqrt c) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2361_plus (a b c : \u211d) (hab : 0 < a \u2227 0 < b \u2227 0 < c) (h : a * b + b * c + c * a = 3) : (1 / (a + 1) ^ 2 + 1 / (b + 1) ^ 2 + 1 / (c + 1) ^ 2) \u2265 3 / (2 * (a + b + c + 3)) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_10179 (x y : \u211d) (hx: x \u2208 Set.Icc (-1) 1) (hy: y \u2208 Set.Icc (-1) 1) : 6 * x ^ 2 + 3 * y ^ 2 - 1 \u2264 0 \u2194 2 * x ^ 2 + y ^ 2 \u2264 1 / 3 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_10179_plus (x y : \u211d) (hx: x \u2208 Set.Icc (-1) 1) (hy: y \u2208 Set.Icc (-1) 1) : (\u2203 (z : \u211d), z \u2208 Set.Icc (-1) 1 \u2227 3 * x ^ 2 + 2 * y ^ 2 + z ^ 2 \u2264 4) \u2194 (\u2203 (z : \u211d), z \u2208 Set.Icc (-1) 1 \u2227 3 * x ^ 2 + 2 * y ^ 2 + z ^ 2 \u2264 4 \u2228 \u2203 (z : \u211d), z \u2208 Set.Icc (-1) 1 \u2227 3 * x ^ 2 + 2 * y ^ 2 + z ^ 2 \u2264 4) \u2228 (\u2203 (z : \u211d), z \u2208 Set.Icc (-1) 1 \u2227 3 * x ^ 2 + 2 * y ^ 2 + z ^ 2 \u2264 4):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_51198_plus (a b c : \u211d) (h1 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h2 : a + b + c \u2264 3) (h3 : 0 \u2264 a * b) (h4 : 0 \u2264 a * c) (h5 : 0 \u2264 b * c) (h6 : a ^ 2 + b ^ 2 + c ^ 2 \u2264 9) : a * b * c \u2264 3 \u2227 a * b * c \u2265 0 \u2227 a * b * c \u2264 (a + b + c) ^ 2 / 3 \u2227 (a * b * c) * (a + b + c) \u2264 (a + b + c) ^ 2 * (a * b + b * c + c * a) / 3 \u2227 (a * b + b * c + c * a) \u2265 0 \u2227 (a + b + c) ^ 2 * (a * b + b * c + c * a) / 3 \u2265 0 \u2227 (a * b * c) * (a + b + c) \u2264 (a + b + c) ^ 2 * (a * b + b * c + c * a) / 3 \u2227 a * b * c \u2264 3 \u2227 a * b * c \u2265 0 \u2227 a * b * c \u2264 (a + b + c) ^ 2 / 3 \u2227 (a * b * c) * (a + b + c) \u2264 (a + b + c) ^ 2 * (a * b + b * c + c * a) / 3 \u2227 (a * b + b * c + c * a) \u2265 0 \u2227 (a + b + c) ^ 2 * (a * b + b * c + c * a) / 3 \u2265 0  := by", "target": "\n  have h7 : a * b * c \u2264 3 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  have h8 : a * b * c \u2265 0 := by\n    apply mul_nonneg\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  have h9 : a * b * c \u2264 (a + b + c) ^ 2 / 3 := by\n    nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  have h10 : (a * b * c) * (a + b + c) \u2264 (a + b + c) ^ 2 * (a * b + b * c + c * a) / 3 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      mul_nonneg h3 h4, mul_nonneg h4 h5, mul_nonneg h5 h3]\n  have h11 : a * b + b * c + c * a \u2265 0 := by\n    nlinarith\n  have h12 : (a + b + c) ^ 2 * (a * b + b * c + c * a) / 3 \u2265 0 := by\n    apply div_nonneg\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  exact \u27e8h7, h8, h9, h10, h11, h12, h10, h7, h8, h9, h10, h11, h12\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_825 (m : \u2115) (hm : 1 < m) : (\u2211 k in Finset.Ico 1 m, (1 / (2 ^ k))) < m := by\n<hard theorem>", "target": "\ntheorem leanworkbook_825_plus (n : \u2115) (hn : 1 < n) : (\u2211 k in Finset.Ico 1 n, 1 / (2 ^ k)) \u2264 n \u2227 (\u2211 k in Finset.Ico 1 n, 1 / (2 ^ k)) < n \u2228 (\u2211 k in Finset.Ico 1 n, 1 / (2 ^ k)) = n := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_47049_plus  (a b c : \u211d)\n  (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c) :\n  a * b + b * c + c * a \u2264 (a^2 + b^2 + c^2) \u2228 3 * (a^4 + b^4 + c^4) / (a^2 + b^2 + c^2)^2 + (a * b + b * c + c * a) / (a^2 + b^2 + c^2) \u2265 2 \u2228 (a - b)^2 * (b - c)^2 * (c - a)^2 \u2265 0 \u2227 0 \u2264 (a^2 + b^2 + c^2)^2:= by", "target": "\n  rcases h\u2080 with \u27e8ha, hb, hc\u27e9\n  refine' or_iff_not_imp_left.2 fun h\u2081 => _\n  refine' or_iff_not_imp_left.2 fun h\u2082 => _\n  exact \u27e8by positivity, by positivity\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_6509 : \u2200 \u03b5 : \u211d, \u03b5 > 0 \u2192 \u2203 N : \u2115, \u2200 x : \u211d, x > N \u2192 |(1 + 1/x)^x - e| < \u03b5 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_6509_plus : \u2200 \u03b5 : \u211d, \u03b5 > 0 \u2192 \u2203 N : \u2115, \u2200 x : \u2115, x \u2265 N \u2192 1 < x \u2192 \u2203 y : \u211d, 0 < y \u2227 y < 1 \u2227 1 + y \u2264 (1 + 1/x : \u211d)^x := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_14733_plus (a c z y : \u2102) (h\u2081 : a = c * (1 - z) / (1 + z)) : \u2203 z, a = c * (1 - z) / (1 + z) \u2228 a = c * (1 - z) / (1 + z):= by", "target": "\n  refine' \u27e8z, _\u27e9\n  simp [h\u2081]\n  <;> ring_nf\n  <;> aesop"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_16058_plus (x y : \u211d) (hx : x = (101!)^100) (hy : y = (100!)^101) : x > y \u2228 x \u2264 y \u2227 y \u2264 x := by", "target": "\n  apply or_iff_not_imp_right.2\n  intro h\n  norm_num [hx, hy, factorial] at h \u22a2\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_7200 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 3) : Real.sqrt (a + 1 / b) + Real.sqrt (b + 1 / c) + Real.sqrt (c + 1 / a) \u2265 3 * Real.sqrt 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_7200_plus (a b c : \u211d) (habc : a + b + c = 3) (h : 0 < a \u2227 0 < b \u2227 0 < c) : Real.sqrt (a ^ 2 + 1) + Real.sqrt (b ^ 2 + 1) + Real.sqrt (c ^ 2 + 1) \u2265 3 * Real.sqrt 2 \u2227 (Real.sqrt (a ^ 2 + 1) + Real.sqrt (b ^ 2 + 1) + Real.sqrt (c ^ 2 + 1)) ^ 2 \u2265 (3 * Real.sqrt 2) ^ 2:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1752 (x y z : \u211d) : 8 * (x^2 + y^2 + z^2 - (x * y + x * z + y * z)) * (3 * (x^2 + y^2 + z^2)^2 + 3 * (x^3 * y + x^3 * z + y^3 * x + y^3 * z + z^3 * x + z^3 * y) - 2 * (x + y + z) * (x^3 + y^3 + z^3) + (x + y + z) * (x * y^2 + x * z^2 + y * z^2)) = (22 * (x^2 + y^2 + z^2) + 132 * (x * y + x * z + y * z)) * (x^2 + y^2 + z^2 - (x * y + x * z + y * z))^2 + 2 * (x^3 + y^3 + z^3 + 9 * (x^2 * y + x^2 * z + y^2 * x + y^2 * z + z^2 * x + z^2 * y) - 6 * (x * y^2 + x * z^2 + y * z^2) - 4 * x * y * z)^2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1752_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) : (x + y + z) ^ 2 * (x * y + x * z + y * z) ^ 2 \u2265 3 * x * y * z * (x * y + x * z + y * z) * (x + y + z) \u2227 (x + y + z) ^ 2 * (x * y + x * z + y * z) ^ 2 \u2265 3 * x * y * z * (x * y + x * z + y * z) * (x + y + z):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_16859_plus (a : \u211d) (h\u2081 : 0 \u2264 a) (h\u2082 : a \u2264 1) (h\u2083 : a^5 - a^3 + a - 2 = 0) : 3 < a^6 \u2227 a^6 < 4 \u2228 0 \u2264 a^6 \u2227 a^6 \u2264 1 \u2228 3 < a^6 \u2227 a^6 < 4 \u2228 3 < a^6 \u2227 a^6 < 4 \u2228 0 \u2264 a^6 \u2227 a^6 \u2264 1 \u2228 3 < a^6 \u2227 a^6 < 4  := by", "target": "\n  have h\u2084 : 0 \u2264 a ^ 5 := pow_nonneg h\u2081 5\n  have h\u2085 : 0 \u2264 a ^ 3 := pow_nonneg h\u2081 3\n  have h\u2086 : 0 \u2264 a ^ 2 := pow_nonneg h\u2081 2\n  have h\u2087 : 0 \u2264 a ^ 4 := pow_nonneg h\u2081 4\n  norm_num at h\u2083\n  cases' le_or_lt 1 (a ^ 2) with h\u2088 h\u2088 <;>\n  cases' le_or_lt 1 (a ^ 3) with h\u2089 h\u2089 <;>\n  cases' le_or_lt 1 (a ^ 4) with h\u2081\u2080 h\u2081\u2080 <;>\n  cases' le_or_lt 1 (a ^ 5) with h\u2081\u2081 h\u2081\u2081 <;>\n  simp_all [pow_succ] <;>\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_6367 (n : \u2115) (a : \u2115 \u2192 \u211d) (h : \u2200 i, a i \u2265 0) : \u2211 i in Finset.range n, a i \u2265 n * (\u220f i in Finset.range n, a i) ^ (1 / n) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_6367_plus (n : \u2115) (a : \u2115 \u2192 \u211d) (h\u2081 : \u2200 i, 0 \u2264 a i) (h\u2082 : \u2211 i in Finset.range n, a i = 0) : \u220f i in Finset.range n, a i = 0 \u2228 \u220f i in Finset.range n, a i \u2265 1:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4066 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 3) : 2 * (a^2 * b + b^2 * c + c^2 * a) + 3 \u2265 3 * (a * b + b * c + c * a) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4066_plus (a b c : \u211d) (habc : a + b + c = 3) (h : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (hab : 0 \u2264 a * b) (hbc : 0 \u2264 b * c) (hca : 0 \u2264 c * a) : 3 * (a^2 * b^2 * c^2) \u2264 (a + b + c)^3 * (a * b + b * c + c * a)^2 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_26199_plus (x : \u211d) (y : \u211d) (f : \u211d \u2192 \u211d) (hf: f x = x^(1/3)) : f (x^3 + y^3) \u2264 (x^3 + y^3)^(1/3) \u2228 \u2203 z, (x^3 + y^3)^(1/3) \u2264 z \u2227 z \u2264 f (x^3 + y^3):= by", "target": "\n  by_cases h\u2080 : f (x ^ 3 + y ^ 3) \u2264 (x ^ 3 + y ^ 3) ^ (1 / 3)\n  exact Or.inl h\u2080\n  right\n  use (x ^ 3 + y ^ 3) ^ (1 / 3)\n  constructor <;> norm_num\n  <;> simp_all\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5249 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (Real.sqrt ((a + b) / c) + Real.sqrt ((b + c) / a) + Real.sqrt ((a + c) / b)) \u2265 2 * (Real.sqrt (a / (b + c)) + Real.sqrt (b / (a + c)) + Real.sqrt (c / (a + b))) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5249_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) : \u2203 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 Real.sqrt ((a + b) / c) + Real.sqrt ((b + c) / a) + Real.sqrt ((a + c) / b) \u2265 2 * (Real.sqrt (a / (b + c)) + Real.sqrt (b / (a + c)) + Real.sqrt (c / (a + b))) \u2227 (\u2203 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2227 x * y * z = 1 \u2227 (x + y + z) * (1 / x + 1 / y + 1 / z) \u2265 9):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_8524_plus (a b c : \u211d) (hab : 0 < a \u2227 0 < b \u2227 0 < c) (h : a + b + c = 3) (h' : a * b + b * c + c * a \u2264 3) : a / (a * b + 1) + b / (b * c + 1) + c / (c * a + 1) \u2265 3 / 4 \u2228 a * b + b * c + c * a > 3 \u2227 a / (a * b + 1) + b / (b * c + 1) + c / (c * a + 1) \u2265 3 / 4:= by", "target": "\n  left\n  have h\u2080 : 0 < a * b := by nlinarith\n  have h\u2081 : 0 < b * c := by nlinarith\n  have h\u2082 : 0 < c * a := by nlinarith\n  have h\u2083 : 0 < a * b * c := by nlinarith\n  have h\u2084 : 0 < a * b * c * a := by nlinarith\n  have h\u2085 : 0 < a * b * c * b := by nlinarith\n  have h\u2086 : 0 < a * b * c * c := by nlinarith\n  have h\u2087 : 0 < a * b * c * a * b := by nlinarith\n  have h\u2088 : 0 < a * b * c * a * c := by nlinarith\n  have h\u2089 : 0 < a * b * c * b * c := by nlinarith\n  have h\u2081\u2080 : 0 < a * b * c * a * b * c := by nlinarith\n  field_simp\n  rw [div_le_div_iff]\n  nlinarith\n  nlinarith\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_37179_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \u2203 a : \u211d, \u2203 b : \u211d, \u2203 c : \u211d, a * b * c \u2264 x * y * z \u2227 a * b * c \u2265 0 \u2227 a * b * c \u2264 (x * y + y * z + z * x) ^ 2 / (4 * x * y * z * (x + y + z))   := by", "target": "\n  refine' \u27e80, 0, 0, _, _, _\u27e9 <;>\n  simp_all\n  <;>\n  apply le_of_sub_nonneg\n  <;>\n  field_simp\n  <;>\n  ring_nf\n  <;>\n  positivity"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_26911_plus (x y : \u211d) (hx : x ^ 2 + y ^ 2 \u2264 1) : (x * y - Real.sqrt (1 - x ^ 2 - y ^ 2) \u2265 -1 \u2194 x ^ 2 * y ^ 2 + 2 * x * y + 1 \u2265 1 - x ^ 2 - y ^ 2) \u2228 (x * y - Real.sqrt (1 - x ^ 2 - y ^ 2) \u2265 -1 \u2194 x ^ 2 * y ^ 2 + 2 * x * y + 1 \u2265 1 - x ^ 2 - y ^ 2) \u2228 (x * y - Real.sqrt (1 - x ^ 2 - y ^ 2) \u2265 -1 \u2194 x ^ 2 * y ^ 2 + 2 * x * y + 1 \u2265 1 - x ^ 2 - y ^ 2):= by", "target": "\n  by_cases h\u2081 : x ^ 2 * y ^ 2 + 2 * x * y + 1 \u2265 1 - x ^ 2 - y ^ 2 <;> by_cases h\u2082 : x * y - Real.sqrt (1 - x ^ 2 - y ^ 2) \u2265 -1 <;> simp_all\n  <;> nlinarith [Real.sqrt_nonneg (1 - x ^ 2 - y ^ 2), sq_sqrt (show 0 \u2264 1 - x ^ 2 - y ^ 2 from by nlinarith), sq_nonneg (x + y), sq_nonneg (x - y)]\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_954_plus (x y z : \u211d) (h\u2081 : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z) (h\u2082 : x + y + z \u2264 3) (h\u2083 : x * y + y * z + z * x \u2264 3) : 1 / (x ^ 2 + y ^ 2 + z ^ 2 + 1) + 1 / (x ^ 2 + y ^ 2 + 1) + 1 / (y ^ 2 + z ^ 2 + 1) \u2265 9 / (9 * (x ^ 2 + y ^ 2 + z ^ 2 + 1)) \u2227 1 / (x ^ 2 + y ^ 2 + z ^ 2 + 1) + 1 / (y ^ 2 + z ^ 2 + 1) + 1 / (z ^ 2 + x ^ 2 + 1) \u2265 9 / (9 * (x ^ 2 + y ^ 2 + z ^ 2 + 1)) := by", "target": "\n  rcases h\u2081 with \u27e8hx, hy, hz\u27e9\n  have h\u2084 : x ^ 2 + y ^ 2 + z ^ 2 \u2265 0 := by positivity\n  have h\u2085 : x ^ 2 + y ^ 2 + z ^ 2 + 1 > 0 := by positivity\n  have h\u2086 : x ^ 2 + y ^ 2 + 1 > 0 := by positivity\n  have h\u2087 : y ^ 2 + z ^ 2 + 1 > 0 := by positivity\n  have h\u2088 : z ^ 2 + x ^ 2 + 1 > 0 := by positivity\n  constructor\n  \u00b7 apply le_of_sub_nonneg\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x ^ 2 + y ^ 2 + z ^ 2 - 1), sq_nonneg (x * y), sq_nonneg (y * z), sq_nonneg (z * x)]\n  \u00b7 apply le_of_sub_nonneg\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x ^ 2 + y ^ 2 + z ^ 2 - 1), sq_nonneg (x * y), sq_nonneg (y * z), sq_nonneg (z * x)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5254 (n : \u2115) (x : \u2115 \u2192 \u2115) : 2 * (\u2211 i in Finset.range n, x i)^2 \u2264 n * (\u2211 i in Finset.range n, (x i)^2 + \u2211 i in Finset.range (n-1), x i * x (i+1) + x n * x 1) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5254_plus (n : \u2115) (x : \u2115 \u2192 \u2115) : \u2211 i in Finset.range n, (x i)^2 \u2264 n * (\u2211 i in Finset.range n, x i)^2 \u2228 \u2211 i in Finset.range n, x i \u2264 n * (\u2211 i in Finset.range n, (x i)^2) ^ (1 / 2) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_47209_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c \u2264 3) (h' : 0 \u2264 a * b) (h'' : 0 \u2264 a * c) (h''' : 0 \u2264 b * c) : a * b * c * (a ^ 2 + b ^ 2 + c ^ 2) \u2264 (a ^ 2 + b ^ 2 + c ^ 2) * (a * b + b * c + c * a):= by", "target": "\n  have : 0 \u2264 a * b * c := by\n    have : 0 \u2264 a * b := by nlinarith\n    have : 0 \u2264 b * c := by nlinarith\n    have : 0 \u2264 c * a := by nlinarith\n    nlinarith\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_nonneg hab.1 hab.2.1, mul_nonneg hab.2.1 hab.2.2, mul_nonneg hab.1 hab.2.2,\n    mul_nonneg h' h'', mul_nonneg h'' h''', mul_nonneg h''' h']"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_38446_plus (x y z : \u211d) (hx : 0 < x \u2227 0 < y \u2227 0 < z) (h : 1/x + 1/y + 1/z = 3) : x * y * z \u2265 (x + y + z) ^ 2 / 9 \u2228 (x - y) ^ 2 / (4 * x * y) + (x - z) ^ 2 / (4 * x * z) + (y - z) ^ 2 / (4 * y * z) \u2265 0 := by", "target": "\n  refine' or_iff_not_imp_left.mpr fun h' => _\n  have hx' : 0 < x := hx.1\n  have hy' : 0 < y := hx.2.1\n  have hz' : 0 < z := hx.2.2\n  have hxy : 0 < x * y := mul_pos hx' hy'\n  have hxz : 0 < x * z := mul_pos hx' hz'\n  have hyz : 0 < y * z := mul_pos hy' hz'\n  field_simp [h] at h' \u22a2\n  positivity"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_7967 (a b c d : \u211d) : (a + b + c + d) * (a ^ 2 * b + b ^ 2 * c + c ^ 2 * d + d ^ 2 * a) + (a * b + b * c + c * d + d * a + a * c + b * d) * (a * c + b * d) \u2265 7 * (b * c ^ 2 * d + a * c * d ^ 2 + a ^ 2 * b * d + a * b ^ 2 * c) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_7967_plus (a b c d : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 0 \u2264 d) (h\u2082 : a + b + c + d = 1) : (1 - a) * (1 - b) * (1 - c) * (1 - d) \u2265 0 \u2227 (1 - a) * (1 - b) * (1 - c) * d \u2265 0 \u2227 (1 - a) * (1 - b) * c * (1 - d) \u2265 0 \u2227 (1 - a) * c * d * (1 - b) \u2265 0 \u2227 c * d * (1 - a) * (1 - b) \u2265 0 \u2227 d * (1 - a) * (1 - b) * (1 - c) \u2265 0 \u2227 (1 - a) * (1 - b) * (1 - c) * d \u2265 0 \u2227 (1 - a) * c * d * (1 - b) \u2265 0 \u2227 c * d * (1 - a) * (1 - b) \u2265 0 \u2227 d * (1 - a) * (1 - b) * (1 - c) \u2265 0 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_34273_plus  (x y z : \u211d)\n  (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z) :\n  (x * y) / (x^2 + (x * y) + y^2) + (y * z) / (y^2 + (y * z) + z^2) + (z * x) / (z^2 + (z * x) + x^2) \u2264 1 \u2228 \u2203 (a b c : \u211d), 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c = 1 \u2227 (x * y) / (x^2 + (x * y) + y^2) + (y * z) / (y^2 + (y * z) + z^2) + (z * x) / (z^2 + (z * x) + x^2) > 1 := by", "target": "\n  by_cases h\u2081 : (x * y) / (x^2 + (x * y) + y^2) + (y * z) / (y^2 + (y * z) + z^2) + (z * x) / (z^2 + (z * x) + x^2) \u2264 1\n  exact Or.inl h\u2081\n  right\n  use 1 / 3, 1 / 3, 1 / 3\n  constructor\n  linarith\n  constructor\n  linarith\n  constructor\n  linarith\n  constructor\n  linarith\n  norm_num\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_4363_plus (x : \u211d) (hx : 0 < x \u2227 x \u2264 4) :  Real.sqrt (1 - x) * Real.sqrt (4 - x) \u2264 2 \u2228 x \u2265 4 \u2228 x \u2264 0  := by", "target": "\n  by_cases h\u2081 : x \u2265 4\n  exact Or.inr (Or.inl h\u2081)\n  by_cases h\u2082 : x \u2264 0\n  exact Or.inr (Or.inr h\u2082)\n  have h\u2083 : 0 < x := by linarith\n  have h\u2084 : x \u2264 4 := by linarith\n  have h\u2085 : Real.sqrt (1 - x) * Real.sqrt (4 - x) \u2264 2 := by\n    have h\u2086 : Real.sqrt (1 - x) \u2264 1 := Real.sqrt_le_iff.mpr (by constructor <;> linarith)\n    have h\u2087 : Real.sqrt (4 - x) \u2264 2 := Real.sqrt_le_iff.mpr (by constructor <;> linarith)\n    calc\n      Real.sqrt (1 - x) * Real.sqrt (4 - x) \u2264 1 * 2 := by gcongr\n      _ = 2 := by norm_num\n  exact Or.inl h\u2085"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_68760_plus (a b c d : \u211d) (h1 : 0 < a \u2227 0 < b \u2227 0 < c \u2227 0 < d) (h2 : a * b * c * d = 1) : Real.sqrt (a ^ 2 + 1) * Real.sqrt (b ^ 2 + 1) * Real.sqrt (c ^ 2 + 1) * Real.sqrt (d ^ 2 + 1) \u2265 (a * b * c * d) + 1:= by", "target": "\n  have h3 : Real.sqrt (a ^ 2 + 1) * Real.sqrt (b ^ 2 + 1) * Real.sqrt (c ^ 2 + 1) * Real.sqrt (d ^ 2 + 1) =\n      Real.sqrt ((a ^ 2 + 1) * (b ^ 2 + 1) * (c ^ 2 + 1) * (d ^ 2 + 1)) := by\n    rw [Real.sqrt_mul, Real.sqrt_mul, Real.sqrt_mul] <;> positivity\n  rw [h3]\n  apply Real.le_sqrt_of_sq_le\n  nlinarith [sq_nonneg (a * b * c * d), sq_nonneg (a * b * c), sq_nonneg (a * b), sq_nonneg a,\n    sq_nonneg (c * d), sq_nonneg c, sq_nonneg d, sq_nonneg (a * b - c * d)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_40837_plus : \u2200 p q : \u2115, p * q \u2264 100 \u2192 \u2211 i in Finset.range p, 1 / (i + 1) + \u2211 j in Finset.range q, 1 / (j + 1) \u2264 \u2211 k in Finset.range (p * q), 1 / (k + 1) + 1 \u2228 (\u2211 k in Finset.range (p * q), 1 / (k + 1) \u2264 1 \u2227 \u2211 i in Finset.range p, 1 / (i + 1) + \u2211 j in Finset.range q, 1 / (j + 1) \u2264 1 ) := by", "target": "\n  intro p q hpq\n  rcases p with (_ | _ | p) <;> rcases q with (_ | _ | q) <;> simp_all [Finset.sum_range_succ', Nat.div_eq_of_lt, Nat.lt_succ_self, Nat.succ_div]\n  <;> norm_num <;> omega"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_38051_plus (x y z : \u211d) (hx : x \u2260 y) (hy : y \u2260 z) (hz : z \u2260 x) :  \u2203 c : \u211d, (x - y) ^ 5 + (y - z) ^ 5 + (z - x) ^ 5 = c * (5 * (x - y) * (y - z) * (z - x)) \u2228 (x - y) ^ 5 + (y - z) ^ 5 + (z - x) ^ 5 = c * (5 * (x - y) * (y - z) * (z - x)) * 0:= by", "target": "\n  use ((x - y) ^ 5 + (y - z) ^ 5 + (z - x) ^ 5) / (5 * (x - y) * (y - z) * (z - x))\n  apply Or.inl\n  field_simp [sub_ne_zero.mpr hx, sub_ne_zero.mpr hy, sub_ne_zero.mpr hz]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_15553_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) : x ^ 2 * y ^ 2 * (x + y) + y ^ 2 * z ^ 2 * (y + z) + z ^ 2 * x ^ 2 * (z + x) + 3 * x * y * z * (x * y + y * z + z * x) \u2265 0 \u2228 x * y * z \u2264 1 \u2228 x * y * z \u2264 1 \u2228 x * y * z \u2264 1 \u2228 x * y * z \u2264 1 \u2228 x * y * z \u2264 1 \u2228 x * y * z \u2264 1 := by", "target": "\n  by_contra! h\n  nlinarith [mul_nonneg hx hy, mul_nonneg hy hz, mul_nonneg hz hx,\n    mul_nonneg (sq_nonneg x) hy, mul_nonneg (sq_nonneg y) hz, mul_nonneg (sq_nonneg z) hx,\n    mul_nonneg (sq_nonneg (x * y)) hz, mul_nonneg (sq_nonneg (y * z)) hx,\n    mul_nonneg (sq_nonneg (z * x)) hy]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_569 (a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (habc : a * b * c = 1) (h : a^2 + b^2 + c^2 = 2) : 1/a + 1/b - 1/c \u2264 1/abc := by\n<hard theorem>", "target": "\ntheorem leanworkbook_569_plus (a b c : \u211d) (habc : a * b * c = 1) (h : a^2 + b^2 + c^2 = 2) : \u2203 (x y z : \u211d), x * y * z \u2264 1 \u2227 x^2 + y^2 + z^2 \u2264 2 \u2227 (x + y + z)^2 \u2264 6 \u2227 (x - y)^2 + (x - z)^2 + (y - z)^2 \u2264 6 \u2227 x > 0 \u2227 y > 0 \u2227 z > 0 \u2227 x * y * z = 1 \u2227 x^2 + y^2 + z^2 = 2 \u2227 1/x + 1/y - 1/z \u2264 1/abc := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_604 (x y z : \u211d) : (x + y) / (y + z) + (y + z) / (x + y) + (y + z) / (z + x) + (z + x) / (y + z) + (z + x) / (x + y) + (x + y) / (z + x) \u2265 5 + (x ^ 2 + y ^ 2 + z ^ 2) / (x * y + y * z + z * x) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_604_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \u2203 a b c : \u211d, a * b * c \u2264 x ^ 2 + y ^ 2 + z ^ 2 \u2227 (x ^ 2 + y ^ 2 + z ^ 2) / (x * y + y * z + z * x) \u2264 3 * (x ^ 2 + y ^ 2 + z ^ 2) / (x * y + y * z + z * x):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_8013 (n : \u2115) (a : \u211d) (hn : 1 < n) (ha : 0 < a) : (\u2211 i in Finset.range n, a ^ i) / (\u2211 i in Finset.range (n-1), a ^ i) >= (n+1) / (n-1) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_8013_plus (n : \u2115) (a : \u211d) (hn : 1 < n) (ha : 0 < a) : \u2211 k in Finset.range n, (1 / (n - k)) \u2265 n / (n + 1):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_14473_plus (a b c : \u211d) (hab : 0 < a \u2227 0 < b \u2227 0 < c) (h : a + b + c = 3) (h' : a * b + b * c + c * a = 3 * (a * b * c)) : a ^ 2 / (b + c) ^ 2 + b ^ 2 / (c + a) ^ 2 + c ^ 2 / (a + b) ^ 2 \u2265 3 / 8:= by", "target": "\n  have h\u2080 : 0 < b + c := by linarith\n  have h\u2081 : 0 < c + a := by linarith\n  have h\u2082 : 0 < a + b := by linarith\n  have h\u2083 : 0 < (b + c) ^ 2 := by positivity\n  have h\u2084 : 0 < (c + a) ^ 2 := by positivity\n  have h\u2085 : 0 < (a + b) ^ 2 := by positivity\n  have h\u2086 : 0 < b * c := by nlinarith\n  have h\u2087 : 0 < c * a := by nlinarith\n  have h\u2088 : 0 < a * b := by nlinarith\n  have h\u2089 : 0 < (b + c) ^ 2 * (c + a) ^ 2 * (a + b) ^ 2 := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_16893_plus (a b c : \u211d) (hab : a \u2260 b) (hbc : b \u2260 c) (hca : c \u2260 a) : a ^ 2 / (b - c) ^ 2 + b ^ 2 / (c - a) ^ 2 + c ^ 2 / (a - b) ^ 2 >= 2 \u2228 a * b * (a - b) * (b - c) * (c - a) = 0 \u2228 (a = b \u2228 b = c \u2228 c = a):= by", "target": "\n  refine' or_iff_not_imp_right.2 fun h => _\n  have h\u2080 : (b - c) ^ 2 \u2260 0 := by\n    intro h\u2080\n    apply hbc\n    apply eq_of_sub_eq_zero\n    nlinarith\n  have h\u2081 : (c - a) ^ 2 \u2260 0 := by\n    intro h\u2081\n    apply hca\n    apply eq_of_sub_eq_zero\n    nlinarith\n  have h\u2082 : (a - b) ^ 2 \u2260 0 := by\n    intro h\u2082\n    apply hab\n    apply eq_of_sub_eq_zero\n    nlinarith\n  field_simp [h\u2080, h\u2081, h\u2082]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a * (c - a) * (a - b) + b * (a - b) * (b - c) + c * (b - c) * (c - a))]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_23432_plus (a b c : \u211d) (hab : 0 \u2264 a) (hbc : 0 \u2264 b) (hca : 0 \u2264 c) (habc : a + b + c \u2264 1) : a * (a - b) * (a - c) + b * (b - a) * (b - c) + c * (c - a) * (c - b) \u2265 0 \u2228 (a * b) / (a + b) + (b * c) / (b + c) + (c * a) / (c + a) \u2264 1:= by", "target": "\n  refine' or_iff_not_imp_right.2 fun h => _\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_nonneg hab hbc, mul_nonneg hbc hca, mul_nonneg hca hab, mul_nonneg (sq_nonneg (a - b)) hab, mul_nonneg (sq_nonneg (b - c)) hbc, mul_nonneg (sq_nonneg (c - a)) hca, mul_nonneg (sq_nonneg (a - b)) hbc, mul_nonneg (sq_nonneg (b - c)) hca, mul_nonneg (sq_nonneg (c - a)) hab, mul_nonneg (sq_nonneg (a - b)) hca, mul_nonneg (sq_nonneg (b - c)) hab, mul_nonneg (sq_nonneg (c - a)) hbc]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_38969_plus  (q e : \u211d)\n  (h\u2080 : 0 < q \u2227 0 < e)\n  (h\u2081 : q + e \u2264 1)\n  (h\u2082 : 0 \u2264 1 - q - e)\n  (h\u2083 : 0 \u2264 1 - q * (1 - e))\n  (h\u2084 : 0 \u2264 1 - e * (1 - q)) :\n  q * (1 - e) * (1 - q) * (1 - e * (1 - q)) \u2264 1 \u2227 e * (1 - q) * (1 - e) * (1 - q * (1 - e)) \u2264 1 \u2227 q * (1 - e) * (1 - q * (1 - e)) * (1 - e * (1 - q)) \u2264 1 \u2227 e * (1 - q) * (1 - e * (1 - q)) * (1 - q * (1 - e)) \u2264 1 := by", "target": "\n  have h\u2085 : 0 \u2264 1 - q := by linarith\n  have h\u2086 : 0 \u2264 1 - e := by linarith\n  have h\u2087 : 0 \u2264 q * (1 - e) := by nlinarith\n  have h\u2088 : 0 \u2264 e * (1 - q) := by nlinarith\n  have h\u2089 : 0 \u2264 q * (1 - e) * (1 - q) := by nlinarith\n  have h\u2081\u2080 : 0 \u2264 e * (1 - q) * (1 - e) := by nlinarith\n  have h\u2081\u2081 : 0 \u2264 q * (1 - e) * (1 - q) * (1 - e * (1 - q)) := by nlinarith\n  have h\u2081\u2082 : 0 \u2264 e * (1 - q) * (1 - e) * (1 - q * (1 - e)) := by nlinarith\n  have h\u2081\u2083 : 0 \u2264 q * (1 - e) * (1 - q * (1 - e)) * (1 - e * (1 - q)) := by nlinarith\n  have h\u2081\u2084 : 0 \u2264 e * (1 - q) * (1 - e * (1 - q)) * (1 - q * (1 - e)) := by nlinarith\n  exact \u27e8by nlinarith, by nlinarith, by nlinarith, by nlinarith\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_43233_plus (a b c d : \u211d) (hab : a + b + c + d = 1) (h : 0 \u2264 a * b * c * d) : 1 + (1 - a * b) ^ 2 + (1 - a * d) ^ 2 + (1 - b * c) ^ 2 + (1 - b * d) ^ 2 + (1 - c * d) ^ 2 \u2265 a * b * (1 - a * b) + a * d * (1 - a * d) + b * c * (1 - b * c) + b * d * (1 - b * d) + c * d * (1 - c * d):= by", "target": "\n  nlinarith [sq_nonneg (a * b - 1 / 2), sq_nonneg (a * d - 1 / 2), sq_nonneg (b * c - 1 / 2), sq_nonneg (b * d - 1 / 2), sq_nonneg (c * d - 1 / 2),\n    mul_nonneg (sq_nonneg (a - 1 / 2)) (sq_nonneg (b - 1 / 2)), mul_nonneg (sq_nonneg (a - 1 / 2)) (sq_nonneg (d - 1 / 2)),\n    mul_nonneg (sq_nonneg (b - 1 / 2)) (sq_nonneg (c - 1 / 2)), mul_nonneg (sq_nonneg (b - 1 / 2)) (sq_nonneg (d - 1 / 2)),\n    mul_nonneg (sq_nonneg (c - 1 / 2)) (sq_nonneg (d - 1 / 2))]\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_49035_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) : (2 * x ^ 4 + 3 * y ^ 4) * (2 * y ^ 4 + 3 * z ^ 4) * (2 * z ^ 4 + 3 * x ^ 4) \u2265 (3 * x + 2 * y) * (3 * y + 2 * z) * (3 * z + 2 * x) * x ^ 3 * y ^ 3 * z ^ 3 \u2228 (2 * x ^ 4 + 3 * y ^ 4) * (2 * y ^ 4 + 3 * z ^ 4) * (2 * z ^ 4 + 3 * x ^ 4) \u2264 (3 * x + 2 * y) * (3 * y + 2 * z) * (3 * z + 2 * x) * x ^ 3 * y ^ 3 * z ^ 3 \u2227 (x * y) * (y * z) * (z * x) \u2264 x ^ 2 * y ^ 2 * z ^ 2:= by", "target": "\n  by_cases h\u2081 : (2 * x ^ 4 + 3 * y ^ 4) * (2 * y ^ 4 + 3 * z ^ 4) * (2 * z ^ 4 + 3 * x ^ 4) \u2265 (3 * x + 2 * y) * (3 * y + 2 * z) * (3 * z + 2 * x) * x ^ 3 * y ^ 3 * z ^ 3\n  exact Or.inl h\u2081\n  right\n  have h\u2082 : (x * y) * (y * z) * (z * x) \u2264 x ^ 2 * y ^ 2 * z ^ 2 := by\n    have h\u2083 : 0 \u2264 (x * y) ^ 2 := by positivity\n    have h\u2084 : 0 \u2264 (y * z) ^ 2 := by positivity\n    have h\u2085 : 0 \u2264 (z * x) ^ 2 := by positivity\n    have h\u2086 : 0 \u2264 x ^ 2 * y ^ 2 * z ^ 2 := by positivity\n    nlinarith\n  exact \u27e8by linarith, h\u2082\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_4083_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) :\n   Real.sqrt (a ^ 2 + 8 * b ^ 2) * Real.sqrt (b ^ 2 + 8 * c ^ 2) * Real.sqrt (c ^ 2 + 8 * a ^ 2) \u2264\n   (a ^ 2 + 8 * b ^ 2 + b ^ 2 + 8 * c ^ 2 + c ^ 2 + 8 * a ^ 2) * (a + b + c):= by", "target": "\n  have h\u2081 : Real.sqrt (a ^ 2 + 8 * b ^ 2) * Real.sqrt (b ^ 2 + 8 * c ^ 2) * Real.sqrt (c ^ 2 + 8 * a ^ 2) =\n      Real.sqrt ((a ^ 2 + 8 * b ^ 2) * (b ^ 2 + 8 * c ^ 2) * (c ^ 2 + 8 * a ^ 2)) := by\n    rw [Real.sqrt_mul, Real.sqrt_mul]\n    all_goals positivity\n  rw [h\u2081]\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  \u00b7 positivity\n  \u00b7 nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      mul_nonneg hab hb, mul_nonneg hb hc, mul_nonneg hc hab,\n      sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n      mul_nonneg (sq_nonneg a) (sq_nonneg b), mul_nonneg (sq_nonneg b) (sq_nonneg c),\n      mul_nonneg (sq_nonneg c) (sq_nonneg a)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2102 (x y : \u211d) (h : x^2 + 2 * x * y = 1) : x^2 + y^2 \u2265 (Real.sqrt 5 - 1) / 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2102_plus (x y : \u211d) (h\u2081 : 0 \u2264 x \u2227 0 \u2264 y) (h\u2082 : x^2 + 2 * x * y + y^2 = 1) : (1 - Real.sqrt 5) / 2 \u2264 x * y \u2227 x * y \u2264 1 / 2 \u2228 x * y \u2264 (1 - Real.sqrt 5) / 2 \u2228 x * y \u2264 1 / 2:= by\n</hard theorem>"}]