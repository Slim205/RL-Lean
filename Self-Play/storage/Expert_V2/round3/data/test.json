[{"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_24144_plus : \u2200 a b c : \u211d, a * b > 0 \u2227 b * c > 0 \u2227 c * a > 0 \u2192 \u2203 x y z : \u211d, x * y > 0 \u2227 y * z > 0 \u2227 z * x > 0 \u2227 (x / (y + z) + y / (z + x) + z / (x + y) + (1 / 2) * (Real.sqrt (13 + 16 * Real.sqrt 2) * (x - y) * (y - z) * (z - x)) / ((x + y) * (y + z) * (z + x))) \u2265 3 / 2  := by", "target": "\n  intro a b c h\u2080\n  use 1, 1, 1\n  norm_num\n  <;> nlinarith [Real.sqrt_nonneg 2, Real.sqrt_nonneg 13,\n    Real.sqrt_nonneg 16, sq_sqrt (show (0 : \u211d) \u2264 13 + 16 * Real.sqrt 2 by positivity),\n    mul_self_nonneg (1 - Real.sqrt 2)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_5869_plus (A : Fin 5 \u2192 \u211d) (h\u2081 : \u2200 i, A i \u2265 0) (h\u2082 : \u2211 i, A i = 1) (h\u2083 : \u2203 i, A i > 0) : \u2203 i, A i < 1 := by", "target": "\n  by_contra! h\n  have h' : \u2200 i, A i = 1 := by\n    intro i\n    have h\u2084 : A i \u2264 1 := by\n      have h\u2085 : \u2211 j, A j \u2265 A i := by\n        exact Finset.single_le_sum (fun j _ => h\u2081 j) (by simp)\n      linarith [h\u2082, h i]\n    have h\u2085 : A i \u2265 1 := by\n      have h\u2086 : \u2211 j, A j \u2265 A i := by\n        exact Finset.single_le_sum (fun j _ => h\u2081 j) (by simp)\n      linarith [h\u2082, h i]\n    linarith\n  have h'' : \u2211 i, A i = 5 := by\n    simp_all [Fin.sum_univ_succ]\n  linarith\n  <;> simp_all\n  <;> linarith\n  <;> simp_all\n  <;> linarith\n  <;> simp_all\n  <;> linarith\n  <;> simp_all\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_33771_plus (n : \u2115) (hn : 1 < n) : (\u2203 k : \u211d, \u2200 x : \u211d, \u2211 i in Finset.range n, (x - (2 * i + 1)) ^ 2 \u2265 k * x ^ 2) \u2227 (\u2203 k : \u211d, \u2200 x : \u211d, \u2211 i in Finset.range n, (x - (2 * i + 1)) ^ 2 \u2265 k * x ^ 2):= by", "target": "\n  have h1 : (\u2203 k : \u211d, \u2200 x : \u211d, \u2211 i in Finset.range n, (x - (2 * i + 1)) ^ 2 \u2265 k * x ^ 2) := by\n    refine' \u27e80, fun x => _\u27e9\n    simp [Finset.sum_range_succ, add_sq, mul_self_nonneg, Finset.sum_nonneg, sq_nonneg]\n  have h2 : (\u2203 k : \u211d, \u2200 x : \u211d, \u2211 i in Finset.range n, (x - (2 * i + 1)) ^ 2 \u2265 k * x ^ 2) := by\n    refine' \u27e80, fun x => _\u27e9\n    simp [Finset.sum_range_succ, add_sq, mul_self_nonneg, Finset.sum_nonneg, sq_nonneg]\n  exact \u27e8h1, h2\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_52063_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) : (1 - a * b) * (1 - b * c) * (1 - a * c) \u2264 1 \u2227 (1 - a * b) * (1 - b * c) * (1 - a * c) \u2265 (1 - a * b) * (1 - b * c) * (1 - a * c) \u2227 (1 - a * b) * (1 - b * c) * (1 - a * c) \u2265 0:= by", "target": "\n  have h\u2081 : (1 - a * b) * (1 - b * c) * (1 - a * c) \u2264 1 := by\n    nlinarith [mul_nonneg hab hb, mul_nonneg hb hc, mul_nonneg hab hc,\n      mul_nonneg (mul_nonneg hab hb) hc, mul_nonneg (mul_nonneg hb hc) hab,\n      mul_nonneg (mul_nonneg hab hc) hb]\n  have h\u2082 : (1 - a * b) * (1 - b * c) * (1 - a * c) \u2265 (1 - a * b) * (1 - b * c) * (1 - a * c) := by\n    nlinarith\n  have h\u2083 : (1 - a * b) * (1 - b * c) * (1 - a * c) \u2265 0 := by\n    apply mul_nonneg\n    \u00b7 apply mul_nonneg\n      \u00b7 nlinarith\n      \u00b7 nlinarith\n    \u00b7 nlinarith\n  exact \u27e8h\u2081, h\u2082, h\u2083\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_7132_plus (x y z : \u211d)\n  (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z)\n  (h\u2081 : x + y + z = 1)\n  (h\u2082 : 1 / x + 1 / y + 1 / z \u2264 9) :\n   x ^ 2 / (x + y + z) + y ^ 2 / (x + y + z) + z ^ 2 / (x + y + z) \u2264 3 \u2227 x ^ 2 / (x + y + z) + y ^ 2 / (x + y + z) + z ^ 2 / (x + y + z) \u2265 1 / 3:= by", "target": "\n  have h\u2083 : 0 < x := (h\u2080.1)\n  have h\u2084 : 0 < y := (h\u2080.2).1\n  have h\u2085 : 0 < z := (h\u2080.2).2\n  constructor\n  case left =>\n    field_simp [h\u2081] at h\u2082 \u22a2\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n      mul_self_nonneg (x + y + z)]\n  case right =>\n    field_simp [h\u2081] at h\u2082 \u22a2\n    apply le_of_sub_nonneg\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n      mul_self_nonneg (x + y + z)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_651_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) : Real.sqrt (3 * (3 + x * y + y * z + z * x)) \u2265 Real.sqrt (1 + x * y) + Real.sqrt (1 + y * z) + Real.sqrt (1 + z * x) - 3:= by", "target": "\n  have h\u2080 : Real.sqrt (1 + x * y) \u2265 0 := Real.sqrt_nonneg (1 + x * y)\n  have h\u2081 : Real.sqrt (1 + y * z) \u2265 0 := Real.sqrt_nonneg (1 + y * z)\n  have h\u2082 : Real.sqrt (1 + z * x) \u2265 0 := Real.sqrt_nonneg (1 + z * x)\n  have h\u2083 : Real.sqrt (3 * (3 + x * y + y * z + z * x)) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2084 : Real.sqrt (1 + x * y) + Real.sqrt (1 + y * z) + Real.sqrt (1 + z * x) \u2264 Real.sqrt (3 * (3 + x * y + y * z + z * x)) := by\n    apply le_sqrt_of_sq_le\n    nlinarith [sq_sqrt (show (0 : \u211d) \u2264 1 + x * y from by nlinarith),\n      sq_sqrt (show (0 : \u211d) \u2264 1 + y * z from by nlinarith),\n      sq_sqrt (show (0 : \u211d) \u2264 1 + z * x from by nlinarith),\n      sq_nonneg (Real.sqrt (1 + x * y) - Real.sqrt (1 + y * z)),\n      sq_nonneg (Real.sqrt (1 + y * z) - Real.sqrt (1 + z * x)),\n      sq_nonneg (Real.sqrt (1 + z * x) - Real.sqrt (1 + x * y))]\n  linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_23080_plus : \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 1 \u2192 (1 / (6 * a ^ 2 + 1) + 1 / (6 * b ^ 2 + 1) + 1 / (6 * c ^ 2 + 1)) \u2265 9 / 5 \u2228 (1 / (6 * a ^ 2 + 1) * (1 / (6 * b ^ 2 + 1)) * (1 / (6 * c ^ 2 + 1)) \u2264 1):= by", "target": "\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  apply Or.inr\n  have h\u2080 : 0 \u2264 a * b := by nlinarith\n  have h\u2081 : 0 \u2264 b * c := by nlinarith\n  have h\u2082 : 0 \u2264 c * a := by nlinarith\n  have h\u2083 : 0 \u2264 a * b * c := by nlinarith\n  have h\u2084 : 1 / (6 * a ^ 2 + 1) * (1 / (6 * b ^ 2 + 1)) * (1 / (6 * c ^ 2 + 1)) \u2264 1 := by\n    rw [mul_comm]\n    have h\u2085 : 0 < 6 * a ^ 2 + 1 := by nlinarith\n    have h\u2086 : 0 < 6 * b ^ 2 + 1 := by nlinarith\n    have h\u2087 : 0 < 6 * c ^ 2 + 1 := by nlinarith\n    field_simp\n    rw [div_le_iff (by positivity)]\n    nlinarith [mul_self_nonneg (a * b * c), mul_self_nonneg (a * b), mul_self_nonneg (b * c),\n      mul_self_nonneg (c * a)]\n  exact h\u2084"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5507 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a * b + a * c + b * c \u2260 0) : (a ^ 2 / (b + c) + b ^ 2 / (a + c) + c ^ 2 / (a + b)) \u2265 (3 * (a ^ 2 + b ^ 2 + c ^ 2)) / (2 * (a + b + c)) + (5 * (a - b) ^ 2) / (4 * (a + b + c)) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5507_plus (a b c : \u211d) (hab : 0 \u2264 a) (hbc : 0 \u2264 b) (hca : 0 \u2264 c) (h : a + b + c = 1) : \u2200 a b c : \u211d, a + b + c = 1 \u2227 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2192 a * b + b * c + c * a \u2264 1 \u2192 a ^ 2 / (b + c) + b ^ 2 / (a + c) + c ^ 2 / (a + b) \u2265 (3 * (a ^ 2 + b ^ 2 + c ^ 2)) / (2 * (a + b + c)) + (5 * (a - b) ^ 2) / (4 * (a + b + c)) \u2228 \u2203 a b c : \u211d, a + b + c = 1 \u2227 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 a * b + b * c + c * a \u2264 1 \u2227 a ^ 2 / (b + c) + b ^ 2 / (a + c) + c ^ 2 / (a + b) < (3 * (a ^ 2 + b ^ 2 + c ^ 2)) / (2 * (a + b + c)) + (5 * (a - b) ^ 2) / (4 * (a + b + c)) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_24305_plus : \u2200 a b c : \u211d, 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 a * b * c \u2264 1 \u2192 (a + b + c) ^ 2 * (a ^ 2 + b ^ 2 + c ^ 2) ^ 2 \u2265 3 * a * b * c * (a ^ 3 + b ^ 3 + c ^ 3):= by", "target": "\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  simp only [sq]\n  nlinarith [sq_nonneg (a ^ 2 + b ^ 2 + c ^ 2), sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2),\n    sq_nonneg (c ^ 2 - a ^ 2), mul_nonneg ha hb, mul_nonneg hb hc, mul_nonneg hc ha,\n    mul_nonneg (sq_nonneg a) (sq_nonneg b), mul_nonneg (sq_nonneg b) (sq_nonneg c),\n    mul_nonneg (sq_nonneg c) (sq_nonneg a), mul_nonneg (sq_nonneg (a - b)) (sq_nonneg (b - c)),\n    mul_nonneg (sq_nonneg (b - c)) (sq_nonneg (c - a))]\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5194 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : 2 * a + 4 * b + 7 * c \u2264 2 * a * b * c) : a + b + c \u2265 15 / 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5194_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : a + b + c = 3) (h : 0 \u2264 a * b * c) : a ^ 2 / (b + c) ^ 2 + b ^ 2 / (c + a) ^ 2 + c ^ 2 / (a + b) ^ 2 \u2265 3 / 8 * (a + b + c) ^ 2 / 36:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_24533_plus (a b c : \u211d) (h\u2081 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2082 : a + b + c = 3) : (a^2 + b^2 + c^2) / (a * b + b * c + c * a) + (3 * a * b * c) / (a^3 + b^3 + c^3) \u2264 2 \u2228 (a^2 + b^2 + c^2) / (a * b + b * c + c * a) + (3 * a * b * c) / (a^3 + b^3 + c^3) \u2265 2  := by", "target": "\n  cases' le_total ((a^2 + b^2 + c^2) / (a * b + b * c + c * a) + (3 * a * b * c) / (a^3 + b^3 + c^3)) 2 with h h <;> simp_all\n  <;> linarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_pos (h\u2081.2.1) (h\u2081.2.2), mul_pos (h\u2081.2.2) (h\u2081.1), mul_pos (h\u2081.1) (h\u2081.2.1)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_2043_plus (A : Fin 5 \u2192 \u211d) (h\u2080 : \u2200 i, 0 \u2264 A i) (h\u2081 : \u2211 i, A i = 1) :\n    Real.sqrt (1 + A 0) + Real.sqrt (1 + A 1) + Real.sqrt (1 + A 2) + Real.sqrt (1 + A 3) + Real.sqrt (1 + A 4) \u2265\n    Real.sqrt (1 + \u2211 i, A i)  := by", "target": "\n  have h\u2082 : Real.sqrt (1 + \u2211 i, A i) = Real.sqrt (1 + 1) := by\n    simp [h\u2081]\n  rw [h\u2082]\n  have h\u2083 : Real.sqrt (1 + A 0) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [h\u2080 0]\n  have h\u2084 : Real.sqrt (1 + A 1) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [h\u2080 1]\n  have h\u2085 : Real.sqrt (1 + A 2) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [h\u2080 2]\n  have h\u2086 : Real.sqrt (1 + A 3) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [h\u2080 3]\n  have h\u2087 : Real.sqrt (1 + A 4) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [h\u2080 4]\n  nlinarith [Real.sqrt_nonneg (1 + 1), Real.mul_self_sqrt (show 0 \u2264 1 + 1 by linarith)]\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_37373_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a + b + c = 3) (h\u2083 : a * b + b * c + c * a \u2264 3) :\n  a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2 \u2265 1 \u2228 a * b * c = 0 \u2228 a ^ 2 + b ^ 2 + c ^ 2 \u2264 3:= by", "target": "\n  by_cases h\u2084 : a * b * c = 0\n  exact Or.inr (Or.inl h\u2084)\n  by_cases h\u2085 : a ^ 2 + b ^ 2 + c ^ 2 \u2264 3\n  exact Or.inr (Or.inr h\u2085)\n  have h\u2086 : 0 < a := lt_of_le_of_ne h\u2081.1 (by rintro rfl; simp_all)\n  have h\u2087 : 0 < b := lt_of_le_of_ne h\u2081.2.1 (by rintro rfl; simp_all)\n  have h\u2088 : 0 < c := lt_of_le_of_ne h\u2081.2.2 (by rintro rfl; simp_all)\n  have h\u2089 : 0 < a * b := mul_pos h\u2086 h\u2087\n  have h\u2081\u2080 : 0 < b * c := mul_pos h\u2087 h\u2088\n  have h\u2081\u2081 : 0 < c * a := mul_pos h\u2088 h\u2086\n  have h\u2081\u2082 : 0 < a * b * c := by positivity\n  have h\u2081\u2083 : a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2 \u2265 1 := by\n    rw [add_comm]\n    have : 0 < b ^ 2 := by positivity\n    have : 0 < c ^ 2 := by positivity\n    have : 0 < a ^ 2 := by positivity\n    have : 0 < a ^ 2 * b ^ 2 := by positivity\n    have : 0 < b ^ 2 * c ^ 2 := by positivity\n    have : 0 < c ^ 2 * a ^ 2 := by positivity\n    field_simp [h\u2081\u2082]\n    rw [le_div_iff (by positivity)]\n    nlinarith [mul_self_nonneg (a ^ 2 - b ^ 2), mul_self_nonneg (b ^ 2 - c ^ 2),\n      mul_self_nonneg (c ^ 2 - a ^ 2)]\n  exact Or.inl h\u2081\u2083\n  <;> simp_all"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_6404_plus (A : Fin 5 \u2192 \u211d) (hA : \u2200 i, 0 \u2264 A i \u2227 A i \u2264 1) (hA_sum : \u2211 i, A i = 5) : \u2211 i, (A i) ^ 2 \u2264 5 \u2227 \u2211 i, (A i) ^ 3 \u2264 5 := by", "target": "\n  have h\u2081 : \u2211 i, (A i) ^ 2 \u2264 \u2211 i, A i := by\n    apply Finset.sum_le_sum\n    intro x hx\n    have hx' := hA x\n    nlinarith\n  have h\u2082 : \u2211 i, (A i) ^ 3 \u2264 \u2211 i, A i := by\n    apply Finset.sum_le_sum\n    intro x hx\n    have hx' := hA x\n    nlinarith [pow_two (A x), pow_two (A x - 1)]\n  exact \u27e8by linarith, by linarith\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_23641_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a + b + c \u2264 1) (h\u2083 : a * b + b * c + c * a \u2264 1) : a ^ 2 * b ^ 2 * c ^ 2 \u2264 (a + b + c) ^ 3 \u2227 a ^ 2 * b ^ 2 * c ^ 2 \u2264 (a * b + b * c + c * a) ^ 2:= by", "target": "\n  have h\u2084 : 0 \u2264 a * b := by nlinarith\n  have h\u2085 : 0 \u2264 b * c := by nlinarith\n  have h\u2086 : 0 \u2264 c * a := by nlinarith\n  have h\u2087 : 0 \u2264 a * b * c := by nlinarith\n  have h\u2088 : 0 \u2264 a * b * c * (a * b + b * c + c * a) := by nlinarith\n  have h\u2089 : 0 \u2264 (a + b + c) ^ 2 := by nlinarith\n  constructor <;> nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_26296_plus : \u2200 a b c : \u211d, a \u2264 b \u2192 b \u2264 c \u2192 c \u2264 a \u2192  Real.sqrt (b + c) * (b + c) \u2265 Real.sqrt (b + c) * (2 * b) \u2227 Real.sqrt (a + c) * (a + c) \u2265 Real.sqrt (a + c) * (2 * b):= by", "target": "\n  intro a b c hab hbc hca\n  have h\u2081 : Real.sqrt (b + c) * (b + c) \u2265 Real.sqrt (b + c) * (2 * b) := by\n    apply mul_le_mul_of_nonneg_left\n    \u00b7 nlinarith\n    \u00b7 exact Real.sqrt_nonneg (b + c)\n  have h\u2082 : Real.sqrt (a + c) * (a + c) \u2265 Real.sqrt (a + c) * (2 * b) := by\n    apply mul_le_mul_of_nonneg_left\n    \u00b7 nlinarith\n    \u00b7 exact Real.sqrt_nonneg (a + c)\n  exact \u27e8h\u2081, h\u2082\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1137 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : 1 / (a * (b + c)) + 1 / (b * (c + a)) + 1 / (c * (a + b)) \u2265 9 / (2 * (a * b + b * c + c * a)) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1137_plus : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 a * b * c > 0 \u2227 (\u2203 x y z : \u211d, x * y * z > 0 \u2227 x + y + z = a * b * c \u2227 1 / x + 1 / y + 1 / z \u2265 9 / (x + y + z)):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_52553_plus (a b c : \u211d) (hab : 0 \u2264 a) (hbc : 0 \u2264 b) (hca : 0 \u2264 c) :\n  (a^3 + b^3 + c^3 + a * b * c)^2 \u2264 (a^2 + b^2 + c^2)^3 \u2227 a * b + b * c + c * a \u2264 Real.sqrt 3 * (a^2 + b^2 + c^2):= by", "target": "\n  constructor\n  \u00b7\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_nonneg hab hbc,\n      mul_nonneg hbc hca, mul_nonneg hca hab, sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2),\n      sq_nonneg (c ^ 2 - a ^ 2), sq_nonneg (a * b + b * c + c * a), sq_nonneg (a * b - b * c),\n      sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n  \u00b7\n    have : a * b + b * c + c * a \u2264 Real.sqrt 3 * (a ^ 2 + b ^ 2 + c ^ 2) := by\n      have h\u2080 : a * b + b * c + c * a \u2264 a ^ 2 + b ^ 2 + c ^ 2 := by\n        nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n      have h\u2081 : Real.sqrt 3 \u2265 1 := by norm_num [Real.sqrt_le_sqrt]\n      nlinarith [sq_sqrt (show 0 \u2264 3 by norm_num), h\u2081]\n    linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_8245_plus (a b c : \u211d) (hab : a \u2260 0) (hb : b \u2260 0) (hc : c \u2260 0) (h : a + b + c = 0) : a * b + b * c + c * a = 0 \u2227 a ^ 2 + b ^ 2 + c ^ 2 = 0 \u2194 a = 0 \u2227 b = 0 \u2227 c = 0 := by", "target": "\n  have : a + b + c = 0 := h\n  constructor\n  next =>\n    intro h\u2080\n    have h\u2081 : a = 0 \u2227 b = 0 \u2227 c = 0 := by\n      apply And.intro\n      \u00b7 nlinarith\n      apply And.intro\n      \u00b7 nlinarith\n      nlinarith\n    exact h\u2081\n  next =>\n    rintro \u27e8h\u2080, h\u2081, h\u2082\u27e9\n    have h\u2083 : a * b + b * c + c * a = 0 \u2227 a ^ 2 + b ^ 2 + c ^ 2 = 0 := by\n      apply And.intro\n      \u00b7 nlinarith\n      nlinarith\n    exact h\u2083"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_50923_plus : \u2200 a b c : \u211d, a * b > 0 \u2227 b * c > 0 \u2227 c * a > 0 \u2192 \u2203 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2227 (11 / 3) * Real.sqrt 3 / Real.sqrt (48 * x ^ 2 + 73 * x * y + 73 * x * z + 48 * y ^ 2 + 73 * y * z + 48 * z ^ 2) \u2265 x / ((2 * x + y) * (2 * x + z)) + y / ((2 * y + z) * (2 * y + x)) + z / ((2 * z + x) * (2 * z + y)) := by", "target": "\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  refine' \u27e81, 1, 1, by norm_num, by norm_num, by norm_num, _\u27e9\n  norm_num\n  apply le_of_pow_le_pow_left two_ne_zero (by positivity)\n  ring_nf\n  apply le_of_sub_nonneg\n  field_simp\n  ring_nf\n  positivity"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_41969_plus : \u2200 a b c : \u211d, (a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a \u2260 1 \u2227 b \u2260 1 \u2227 c \u2260 1) \u2192 (Real.log b / Real.log a) * (Real.log c / Real.log b) \u2265 (Real.log c / Real.log a) - 1 := by", "target": "\n  rintro a b c \u27e8ha, hb, hc, ha1, hb1, hc1\u27e9\n  have h\u2081 : Real.log a \u2260 0 := Real.log_ne_zero_of_pos_of_ne_one ha ha1\n  have h\u2082 : Real.log b \u2260 0 := Real.log_ne_zero_of_pos_of_ne_one hb hb1\n  have h\u2083 : Real.log c \u2260 0 := Real.log_ne_zero_of_pos_of_ne_one hc hc1\n  have h\u2084 : (Real.log b / Real.log a) * (Real.log c / Real.log b) = Real.log c / Real.log a := by\n    field_simp [h\u2081, h\u2082]  <;> ring\n  rw [h\u2084]\n  have h\u2085 : Real.log c / Real.log a \u2265 Real.log c / Real.log a - 1 := by\n    linarith\n  linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_82636_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (h : a + b + c = 1) : a ^ 2 * b ^ 2 * (a + b) ^ 2 + b ^ 2 * c ^ 2 * (b + c) ^ 2 + c ^ 2 * a ^ 2 * (c + a) ^ 2 + 4 * a * b * c * (a + b) * (b + c) * (c + a) \u2264 16 * (a + b + c) ^ 2 * (b + c + a) ^ 2 * (c + a + b) ^ 2:= by", "target": "\n  refine' le_of_sub_nonneg _\n  ring_nf\n  positivity\n  <;> try linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_43006_plus (a b c : \u211d) (h\u2081 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2082 : a + b + c = 3) : (3 : \u211d) ^ 2 / (a * b + b * c + c * a) \u2265 3 / 2 \u2227 (3 : \u211d) ^ 2 / (a * b + b * c + c * a) \u2265 2 * Real.sqrt (3) / 3 \u2227 (3 : \u211d) ^ 2 / (a * b + b * c + c * a) \u2265 Real.sqrt (3) / 3:= by", "target": "\n  obtain \u27e8ha, hb, hc\u27e9 := h\u2081\n  have hab : 0 < a * b := by positivity\n  have hbc : 0 < b * c := by positivity\n  have hca : 0 < c * a := by positivity\n  have h\u2081 : a * b + b * c + c * a \u2264 9 := by\n    nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  have h\u2082 : (3 : \u211d) ^ 2 / (a * b + b * c + c * a) \u2265 3 / 2 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith\n  have h\u2083 : (3 : \u211d) ^ 2 / (a * b + b * c + c * a) \u2265 2 * Real.sqrt (3) / 3 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith [Real.sqrt_nonneg 3, Real.mul_self_sqrt (show 0 \u2264 3 from by linarith)]\n  have h\u2084 : (3 : \u211d) ^ 2 / (a * b + b * c + c * a) \u2265 Real.sqrt (3) / 3 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith [Real.sqrt_nonneg 3, Real.mul_self_sqrt (show 0 \u2264 3 from by linarith)]\n  exact \u27e8h\u2082, h\u2083, h\u2084\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3743 (a b c x y z : \u211d) : (a^2 * x + b^2 * y + c^2 * z) * (y * z + z * x + x * y) \u2265 x * y * z * (a + b + c)^2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3743_plus (a b c x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (hab : 0 \u2264 a + b + c) (h : 0 \u2264 a * b + b * c + c * a) : (a^2 * x + b^2 * y + c^2 * z) * (y * z + z * x + x * y) \u2265 x * y * z * (a + b + c)^2 \u2227 (a * b + b * c + c * a) * (y * z + z * x + x * y) \u2265 0:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_33572_plus : \u2200 a b : \u211d, 0 \u2264 a \u2227 0 \u2264 b \u2227 a + b = 2 \u2192 Real.sqrt (a^2 + 2 * b^2) + Real.sqrt (b^2 + 2 * a^2) \u2265 2 * a * b := by", "target": "\n  intro a b h\n  have h\u2080 : 0 \u2264 a * b := by nlinarith\n  have h\u2081 : Real.sqrt (a^2 + 2 * b^2) \u2265 a := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (a - b), h.2.1]\n  have h\u2082 : Real.sqrt (b^2 + 2 * a^2) \u2265 b := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (b - a), h.1]\n  nlinarith [sq_nonneg (a - b), h\u2081, h\u2082, h\u2080]\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_53472_plus (n : \u2115) (hn : 1 < n) : (\u2203 f : \u211d \u2192 \u211d, \u2200 x y, f (x + y) + f (x * y) + f x * f y = 2 * f x * f y + 3 * x * y) \u2194 \u2203 k : \u211d, \u2200 x : \u211d, x \u2260 0 \u2192 (x + 1 / x) * (x ^ 2 + 1 / x ^ 2) = k * (x ^ 2 + 1 / x ^ 2):= by", "target": "\n  constructor\n  intro h\n  rcases h with \u27e8f, hf\u27e9\n  use 1\n  intro x hx\n  have h1 := hf 0 0\n  have h2 := hf 0 1\n  have h3 := hf 1 0\n  have h4 := hf 1 1\n  have h5 := hf (-1) 1\n  have h6 := hf 1 (-1)\n  have h7 := hf 0 2\n  have h8 := hf 2 0\n  have h9 := hf 2 1\n  have h10 := hf 1 2\n  ring_nf at h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 \u22a2\n  nlinarith\n  intro h\n  rcases h with \u27e8k, hk\u27e9\n  use fun x => x + 1\n  intro x y\n  have h1 := hk 1\n  have h2 := hk 2\n  have h3 := hk 3\n  have h4 := hk 4\n  have h5 := hk 5\n  have h6 := hk 6\n  norm_num at h1 h2 h3 h4 h5 h6\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_20917_plus : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 a * b^2 / (c * (a + c)) + b * c^2 / (a * (a + b)) + c * a^2 / (b * (b + c)) \u2265 (3 / 2 * (a^2 + b^2 + c^2) / (a + b + c) + (a - b)^2 + (b - c)^2 + (c - a)^2) / (4 * (a + b + c)) \u2228 a * b^2 / (c * (a + c)) + b * c^2 / (a * (a + b)) + c * a^2 / (b * (b + c)) < (3 / 2 * (a^2 + b^2 + c^2) / (a + b + c) + (a - b)^2 + (b - c)^2 + (c - a)^2) / (4 * (a + b + c)):= by", "target": "\n  rintro a b c \u27e8a0, b0, c0\u27e9\n  refine' or_iff_not_imp_right.2 fun h => _\n  have h\u2080 : 0 < a * b ^ 2 / (c * (a + c)) + b * c ^ 2 / (a * (a + b)) + c * a ^ 2 / (b * (b + c)) := by positivity\n  have h\u2081 : 0 < (3 / 2 * (a ^ 2 + b ^ 2 + c ^ 2) / (a + b + c) + (a - b) ^ 2 + (b - c) ^ 2 + (c - a) ^ 2) / (4 * (a + b + c)) := by positivity\n  nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n  <;> linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_47732_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z \u2264 3) :\n    Real.sqrt (1 - x) * Real.sqrt (1 - y) * Real.sqrt (1 - z) \u2265 (Real.sqrt (1 - (x + y + z)) : \u211d) - 3 := by", "target": "\n  have h\u2082 : 0 \u2264 x + y + z := by linarith\n  have h\u2083 : Real.sqrt (1 - (x + y + z)) \u2264 1 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  have h\u2084 : Real.sqrt (1 - x) * Real.sqrt (1 - y) * Real.sqrt (1 - z) \u2265 0 := by positivity\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_57365_plus (a b c : \u211d) (habc : a * b * c = 1) (h : a \u2264 1 \u2228 b \u2264 1 \u2228 c \u2264 1) : a ^ 3 / (a ^ 3 + 2 * a * b * c) \u2265 1 \u2228 a * b \u2264 1 \u2228 a * c \u2264 1 \u2228 b * c \u2264 1 := by", "target": "\n  by_contra! h'\n  have ha : 0 < a := by\n    nlinarith [mul_self_nonneg a, mul_self_nonneg b, mul_self_nonneg c,\n      mul_self_nonneg (a - b * c), mul_self_nonneg (a * b - c), mul_self_nonneg (b * c - a)]\n  have hb : 0 < b := by\n    nlinarith [mul_self_nonneg a, mul_self_nonneg b, mul_self_nonneg c,\n      mul_self_nonneg (a - b * c), mul_self_nonneg (a * b - c), mul_self_nonneg (b * c - a)]\n  have hc : 0 < c := by\n    nlinarith [mul_self_nonneg a, mul_self_nonneg b, mul_self_nonneg c,\n      mul_self_nonneg (a - b * c), mul_self_nonneg (a * b - c), mul_self_nonneg (b * c - a)]\n  nlinarith [mul_self_nonneg a, mul_self_nonneg b, mul_self_nonneg c,\n    mul_self_nonneg (a - b * c), mul_self_nonneg (a * b - c), mul_self_nonneg (b * c - a)]\n  <;> linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_63425_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 3) (h\u2081 : 0 \u2264 a * b) (h\u2082 : 0 \u2264 a * c) (h\u2083 : 0 \u2264 b * c) : a * b * c * (a ^ 2 + b ^ 2 + c ^ 2) \u2264 3 * (a ^ 2 + b ^ 2 + c ^ 2) * (a * b + a * c + b * c):= by", "target": "\n  have : 0 \u2264 a * b + a * c + b * c := by nlinarith\n  have : 0 \u2264 a * b * c := by\n    have : 0 \u2264 a * b := by nlinarith\n    have : 0 \u2264 a * c := by nlinarith\n    have : 0 \u2264 b * c := by nlinarith\n    nlinarith\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n    mul_self_nonneg (a * b + a * c + b * c), mul_self_nonneg (a * b - a * c),\n    mul_self_nonneg (b * c - a * b), mul_self_nonneg (a * c - b * c)]\n  <;> try norm_num\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_13157_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b * c \u2264 1) :  Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) * Real.sqrt (1 + c ^ 2) \u2265 1 + a * b * c:= by", "target": "\n  have : 0 \u2264 a * b := by positivity\n  have : 0 \u2264 b * c := by positivity\n  have : 0 \u2264 a * c := by positivity\n  have h\u2080 : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) * Real.sqrt (1 + c ^ 2) =\n      Real.sqrt ((1 + a ^ 2) * (1 + b ^ 2) * (1 + c ^ 2)) := by\n    rw [Real.sqrt_mul, Real.sqrt_mul]\n    all_goals positivity\n  rw [h\u2080]\n  apply Real.le_sqrt_of_sq_le\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    sq_nonneg (a * b), sq_nonneg (b * c), sq_nonneg (c * a)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1981 : \u2200 x y z : \u211d, x + y + z = 2 \u2192 x \u2265 0 \u2227 y \u2265 0 \u2227 z \u2265 0 \u2192 x^2*y^2 + y^2*z^2 + z^2*x^2 + x*y*z \u2264 1 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1981_plus : \u2200 a b c : \u211d, a + b + c = 2 \u2227 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2192 a * b + b * c + c * a \u2264 1 + a * b * c \u2227 a * b * c \u2264 1 \u2192 a * b * c * (a + b + c) \u2264 1:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_48645_plus (a b c : \u211d) (hab : a + b + c = 1) (h : a * b + b * c + c * a \u2264 1 / 3) : a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + b ^ 2 * c ^ 2 \u2265 4 * a * b * c * (a + b + c) / 9:= by", "target": "\n  have h\u2080 : 0 \u2264 (a * b) ^ 2 + (b * c) ^ 2 + (c * a) ^ 2 := by positivity\n  have h\u2081 : 0 \u2264 a ^ 2 * b ^ 2 * c ^ 2 := by positivity\n  nlinarith [sq_nonneg (a * b + b * c + c * a), sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_28555_plus (x y : \u211d) (h\u2080 : 2*x^2 + 5*y^2 + 6*x*y - 2*x - 4*y + 1 = 0) (h\u2081 : 0 < x \u2227 0 < y) : x = -1 \u2227 y = 1:= by", "target": "\n  constructor <;>\n  nlinarith [sq_nonneg (x + 3 * y - 1), sq_nonneg (x - y - 1), sq_nonneg (x - y + 1), sq_nonneg (x + y - 1), sq_nonneg (x + y + 1)]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_10659_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : a + b + c = 3) (h : Real.sqrt (a + 1) + Real.sqrt (b + 1) + Real.sqrt (c + 1) \u2265 2 * Real.sqrt 2) : (Real.sqrt (a + 1) * Real.sqrt (b + 1) * Real.sqrt (c + 1)) \u2265 Real.sqrt 2:= by", "target": "\n  have : Real.sqrt (a + 1) * Real.sqrt (b + 1) * Real.sqrt (c + 1) = Real.sqrt ((a + 1) * (b + 1) * (c + 1)) := by\n    rw [Real.sqrt_mul, Real.sqrt_mul]\n    all_goals positivity\n  rw [this]\n  have h\u2082 : (a + 1) * (b + 1) * (c + 1) \u2265 2 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c), mul_pos hab hbc, mul_pos hab hca, mul_pos hbc hca]\n  apply Real.le_sqrt_of_sq_le\n  nlinarith [sq_sqrt (by positivity : (0 : \u211d) \u2264 2), h\u2082]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_28384_plus (n : \u2115) (h\u2081 : 1 \u2264 n) (h\u2082 : 1 \u2264 n) : \u2211 i in Finset.Icc 1 n, i * (i^2 - 1) \u2264 n^4:= by", "target": "\n  cases n with\n  | zero => linarith\n  | succ n =>\n    clear h\u2081 h\u2082\n    induction' n with n ih\n    norm_num\n    simp_all [Finset.sum_Icc_succ_top, Nat.succ_le_succ, Nat.pow_succ, Nat.mul_succ]\n    nlinarith [Nat.mul_le_mul_right (n + 1) (Nat.le_add_left n 1), Nat.mul_le_mul_right (n + 1) (Nat.le_add_right n 1)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_16740_plus (n : \u2115) (hn : 1 < n) : \u2211 k in Finset.Icc 1 n, Int.floor (Real.sqrt k) \u2264 n ^ 2:= by", "target": "\n  have hn' : 1 < (n : \u211d) := by exact_mod_cast hn\n  have hn'' : 0 < (n : \u211d) := by linarith\n  have hn''' : 0 < (n : \u2124) := by exact_mod_cast hn''\n  have hn'''' : 0 < (n : \u2124) ^ 2 := by positivity\n  have hn''''' : \u2200 k : \u2115, k \u2208 Finset.Icc 1 n \u2192 Int.floor (Real.sqrt k) \u2264 n := by\n    intro k hk\n    rw [Finset.mem_Icc] at hk\n    have hk' : (k : \u211d) \u2264 n := by exact_mod_cast hk.2\n    have hk'' : Real.sqrt (k : \u211d) \u2264 Real.sqrt n := Real.sqrt_le_sqrt hk'\n    have hk''' : Int.floor (Real.sqrt k) \u2264 Int.floor (Real.sqrt n) := Int.floor_mono hk''\n    have hk'''' : Int.floor (Real.sqrt n) \u2264 n := by\n      apply Int.le_of_lt_add_one\n      apply Int.floor_lt.mpr\n      norm_num\n      nlinarith [Real.sqrt_nonneg (n : \u211d), Real.mul_self_sqrt (by positivity : 0 \u2264 (n : \u211d))]\n    linarith\n  calc\n    \u2211 k in Finset.Icc 1 n, Int.floor (Real.sqrt k) \u2264 \u2211 k in Finset.Icc 1 n, (n : \u2124) := Finset.sum_le_sum hn'''''\n    _ = (n : \u2124) * n := by simp [Finset.sum_Icc_succ_top]\n    _ = n ^ 2 := by ring\n  <;> norm_cast\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_15952_plus (n : \u2115) (hn : 0 < n) : (\u2203 k \u2265 0, \u2200 x \u2265 0, (x ^ 2 + 1) ^ n \u2265 k * x ^ n) \u2228 (\u2203 k \u2265 0, \u2200 x \u2265 0, (x ^ 2 + 1) ^ n \u2265 x ^ n + k * x) := by", "target": "\n  refine' or_iff_not_imp_right.2 fun h => _\n  use 0, by norm_num\n  intro x hx\n  cases' n with n\n  all_goals simp_all [pow_succ]\n  all_goals nlinarith\n  <;> linarith\n  <;> linarith\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_55940_plus (a b : \u211d) (hab : 0 < a \u2227 0 < b) : Real.sqrt (a ^ 2 + b ^ 2) \u2265 (a + b) / Real.sqrt 2 \u2194 (Real.sqrt 2 * (a + b)) ^ 2 \u2265 (a + b) ^ 2:= by", "target": "\n  have h\u2081 : 0 < a := hab.1\n  have h\u2082 : 0 < b := hab.2\n  have h\u2083 : 0 < Real.sqrt 2 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2084 : 0 < a + b := by linarith\n  have h\u2085 : 0 < Real.sqrt 2 * (a + b) := by positivity\n  constructor\n  intro h\n  field_simp [h\u2085] at h \u22a2\n  rw [div_le_iff (by positivity)] at h\n  nlinarith [sq_sqrt (show 0 \u2264 2 by norm_num), sq_nonneg (a - b), h]\n  intro h\n  apply le_sqrt_of_sq_le\n  field_simp [h\u2085]\n  rw [div_le_iff (by positivity)]\n  nlinarith [sq_sqrt (show 0 \u2264 2 by norm_num), sq_nonneg (a - b), h]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_6180 (n : \u2115) (x : Fin n \u2192 \u211d) (hx1 : \u2211 i, x i = 0) (hx2 : \u2211 i, (x i)^2 = 1) : \u2203 i j, x i * x j \u2264 (-1 / (n * (n - 1))) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_6180_plus (n : \u2115) (x : Fin n \u2192 \u211d) (hx1 : \u2211 i, x i = 0) (hx2 : \u2211 i, (x i)^2 = 1) : \u2200 i, x i ^ 2 \u2264 1 \u2228 \u2203 j, x j ^ 2 \u2265 1:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_13002_plus : \u2200 a b : \u211d, (\u2203 x, 2 * Real.sqrt 2 * x - (a ^ 2 + b ^ 2) \u2264 0) \u2228 (\u2203 x, (a ^ 2 + b ^ 2) - 2 * Real.sqrt 2 * x \u2264 0) := by", "target": "\n  intro a b\n  by_cases h\u2081 : \u2203 x : \u211d, 2 * Real.sqrt 2 * x - (a ^ 2 + b ^ 2) \u2264 0\n  \u00b7 exact Or.inl h\u2081\n  \u00b7 apply Or.inr\n    exact \u27e8(a ^ 2 + b ^ 2) / (2 * Real.sqrt 2), by\n      field_simp\n      <;> nlinarith [Real.sqrt_nonneg 2, Real.mul_self_sqrt (show 0 \u2264 2 from by norm_num)]\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_12726_plus : \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a * (b + c) / (b * b + b * c + c * c) + b * (c + a) / (c * c + c * a + a * a) + c * (a + b) / (a * a + a * b + b * b) >= 3 / 2:= by", "target": "\n  rintro a b c \u27e8h\u2081, h\u2082, h\u2083\u27e9\n  have h\u2084 : 0 < b * b + b * c + c * c := by positivity\n  have h\u2085 : 0 < c * c + c * a + a * a := by positivity\n  have h\u2086 : 0 < a * a + a * b + b * b := by positivity\n  have h\u2087 : 0 < b * c := by positivity\n  have h\u2088 : 0 < c * a := by positivity\n  have h\u2089 : 0 < a * b := by positivity\n  have h\u2081\u2080 : 0 < b * c * (b * b + b * c + c * c) := by positivity\n  have h\u2081\u2081 : 0 < c * a * (c * c + c * a + a * a) := by positivity\n  have h\u2081\u2082 : 0 < a * b * (a * a + a * b + b * b) := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * (b + c) - b * (c + a)),\n    mul_self_nonneg (b * (c + a) - c * (a + b)),\n    mul_self_nonneg (c * (a + b) - a * (b + c))]\n  <;> assumption"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_7162 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : (a^4 + 1) * (b^4 + 1) * (c^4 + 1) \u2265 8 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_7162_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 3) (h' : a * b + a * c + b * c \u2264 3) : a ^ 2 * b ^ 2 * c ^ 2 * (a ^ 2 + b ^ 2 + c ^ 2 + 3) \u2264 3 ^ 3 * (3 ^ 2 + 3):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_11689_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a * b * c \u2264 1) (h' : a ^ 2 + b ^ 2 + c ^ 2 = 3) : a * b + b * c + c * a \u2264 3 * Real.sqrt 3:= by", "target": "\n  have : a * b + b * c + c * a \u2264 3 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), sq_nonneg (a + b + c),\n      sq_nonneg (a + b + c - 2), sq_nonneg (a + b + c - 2 * Real.sqrt 3)]\n  nlinarith [sq_sqrt (show 0 \u2264 3 from by norm_num), Real.sqrt_nonneg 3]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_64697_plus (a b c d e : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hd : 0 \u2264 d) (he : 0 \u2264 e) : Real.sqrt a + Real.sqrt b + Real.sqrt c + Real.sqrt d + Real.sqrt e \u2265 Real.sqrt (a + b + c + d + e) \u2227 Real.sqrt (a + b + c + d + e) \u2265 0 \u2227 Real.sqrt a \u2265 0 \u2227 Real.sqrt b \u2265 0 \u2227 Real.sqrt c \u2265 0 \u2227 Real.sqrt d \u2265 0 \u2227 Real.sqrt e \u2265 0 := by", "target": "\n  have h\u2081 : Real.sqrt a \u2265 0 := Real.sqrt_nonneg a\n  have h\u2082 : Real.sqrt b \u2265 0 := Real.sqrt_nonneg b\n  have h\u2083 : Real.sqrt c \u2265 0 := Real.sqrt_nonneg c\n  have h\u2084 : Real.sqrt d \u2265 0 := Real.sqrt_nonneg d\n  have h\u2085 : Real.sqrt e \u2265 0 := Real.sqrt_nonneg e\n  have h\u2086 : Real.sqrt (a + b + c + d + e) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2087 : Real.sqrt a + Real.sqrt b + Real.sqrt c + Real.sqrt d + Real.sqrt e \u2265 Real.sqrt (a + b + c + d + e) := by\n    apply le_of_sub_nonneg\n    have h\u2083\u2080 : 0 \u2264 Real.sqrt a := Real.sqrt_nonneg a\n    have h\u2083\u2081 : 0 \u2264 Real.sqrt b := Real.sqrt_nonneg b\n    have h\u2083\u2082 : 0 \u2264 Real.sqrt c := Real.sqrt_nonneg c\n    have h\u2083\u2083 : 0 \u2264 Real.sqrt d := Real.sqrt_nonneg d\n    have h\u2083\u2084 : 0 \u2264 Real.sqrt e := Real.sqrt_nonneg e\n    nlinarith [sq_sqrt (show 0 \u2264 a from ha), sq_sqrt (show 0 \u2264 b from hb), sq_sqrt (show 0 \u2264 c from hc),\n      sq_sqrt (show 0 \u2264 d from hd), sq_sqrt (show 0 \u2264 e from he),\n      sq_sqrt (show 0 \u2264 a + b + c + d + e from by positivity)]\n  exact \u27e8h\u2087, h\u2086, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_653 (a b : \u211d) : (a^2 - b)^2 * (a^2 + b)^2 \u2265 0 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_653_plus (a b : \u211d) (h\u2081 : 0 \u2264 a^2 - b) (h\u2082 : 0 \u2264 a^2 + b) : a^4 + (2 * a^2 - 1)^2 * b^2 + b^4 \u2265 a^2 * b^2 - a^2 - b^2:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_78441_plus (x y z : \u211d) (hx : x^2 + x * y + y^2 = 7) (hy : y^2 + y * z + z^2 = 19) (hz : z^2 + z * x + x^2 = 3) : x * y * z \u2264 15 := by", "target": "\n  nlinarith [sq_nonneg (x + y + z), sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    sq_nonneg (x * y - z), sq_nonneg (y * z - x), sq_nonneg (z * x - y)]\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_359_plus : \u2200 x : \u2115, (2 ^ (3 * x) - 3 ^ x \u2264 2 ^ (3 * x) + 2 ^ x * 3 ^ x - 3 ^ (3 * (x - 1))) \u2228 (2 ^ (3 * x) - 3 ^ x > 2 ^ (3 * x) + 2 ^ x * 3 ^ x - 3 ^ (3 * (x - 1))) := by", "target": "\n  intro x; apply or_iff_not_imp_right.2; intro h; omega"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_57732_plus : \u2200 x : \u211d, x \u2208 Set.Ioo 0 1 \u2192 Real.sqrt x > x \u2228 Real.sqrt (1 - x) \u2264 1 - x  := by", "target": "\n  rintro x \u27e8hx : 0 < x, hx' : x < 1\u27e9\n  apply or_iff_not_imp_right.mpr\n  intro h\n  have h\u2082 : x < 1 := hx'\n  have h\u2083 : 0 < Real.sqrt x := Real.sqrt_pos.mpr hx\n  nlinarith [sq_sqrt (show 0 \u2264 x from by linarith), h, h\u2082]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_8578_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) : Real.sqrt (a ^ 2 + 1) * Real.sqrt (b ^ 2 + 1) * Real.sqrt (c ^ 2 + 1) \u2265 (a * b * c + 1) / (a + b + c + 1):= by", "target": "\n  have : 0 \u2264 a * b := by positivity\n  have : 0 \u2264 b * c := by positivity\n  have : 0 \u2264 c * a := by positivity\n  have h\u2081 : Real.sqrt (a ^ 2 + 1) * Real.sqrt (b ^ 2 + 1) * Real.sqrt (c ^ 2 + 1) = Real.sqrt ((a ^ 2 + 1) * (b ^ 2 + 1) * (c ^ 2 + 1)) := by\n    rw [Real.sqrt_mul, Real.sqrt_mul] <;> positivity\n  rw [h\u2081]\n  apply le_sqrt_of_sq_le\n  field_simp [hab, hbc, hca]\n  rw [div_le_iff, mul_comm]\n  nlinarith [sq_nonneg (a * b * c), sq_nonneg (a * b), sq_nonneg (b * c), sq_nonneg (c * a),\n    sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  positivity"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_7844_plus (A : Fin 5 \u2192 \u211d) (h\u2081 : \u2211 i, A i = 4) (h\u2082 : \u2211 i, (A i)^2 = 10) : \u2211 i, (A i)^4 \u2264 160  := by", "target": "\n  simp_all [Fin.sum_univ_succ, add_comm, add_left_comm, add_assoc]\n  nlinarith [sq_nonneg (A 0 - 1), sq_nonneg (A 0 + 1), sq_nonneg (A 1 - 1), sq_nonneg (A 1 + 1), sq_nonneg (A 2 - 1), sq_nonneg (A 2 + 1), sq_nonneg (A 3 - 1), sq_nonneg (A 3 + 1), sq_nonneg (A 4 - 1), sq_nonneg (A 4 + 1)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5318 (c : \u211d) : (x^2 - 5*x + 3*c) % (x-3) = -12 \u2192 c = -2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5318_plus (x : \u211d) (hx : x \u2260 3) : \u00ac(\u2203 c : \u211d, \u2200 x : \u211d, (x^2 - 5*x + 3*c) % (x-3) = -12) \u2228 \u2203! c : \u211d, \u2200 x : \u211d, (x^2 - 5*x + 3*c) % (x-3) = -12:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_25562_plus : \u2200 a b c : \u211d, 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 a + b + c \u2264 3 \u2192 1 / (a + 2) + 2 / (b + 4) + 2 / (c + 6) \u2265 1 / 2 + (2 * Real.sqrt 2) / 9 \u2228 (Real.sqrt 2 \u2265 0 \u2227 Real.sqrt 3 \u2265 0 \u2227 Real.sqrt 5 \u2265 0):= by", "target": "\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  apply or_iff_not_imp_right.mpr\n  intro h\n  have h\u2080 : 0 < a + 2 := by linarith\n  have h\u2081 : 0 < b + 4 := by linarith\n  have h\u2082 : 0 < c + 6 := by linarith\n  have h\u2083 : 0 < (a + 2) * (b + 4) := by positivity\n  have h\u2084 : 0 < (a + 2) * (b + 4) * (c + 6) := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_sqrt (show 0 \u2264 2 by norm_num),\n    mul_self_nonneg (a - 1), mul_self_nonneg (b - 1), mul_self_nonneg (c - 1),\n    mul_self_nonneg (Real.sqrt 2 - 1)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_549 (x y z : \u211d) (h : x*y*z \u2265 1) : (x^2 / (y + z) + y^2 / (z + x) + z^2 / (x + y)) \u2265 3/2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_549_plus (x y z : \u211d) (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2081 : x * y * z = 1) : (x^2 / (y + z) + y^2 / (z + x) + z^2 / (x + y)) \u2265 3/2 - 1/ (x * y + y * z + z * x):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_25384_plus : \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192 (1 / (a * b) + 1 / (b * c) + 1 / (a * c)) \u2265 3 / 1:= by", "target": "\n  rintro a b c \u27e8h\u2080, h\u2081, h\u2082, h\u2083\u27e9\n  have h\u2084 : 0 < a * b := by nlinarith\n  have h\u2085 : 0 < b * c := by nlinarith\n  have h\u2086 : 0 < a * c := by nlinarith\n  have h\u2087 : 0 < a * b * (b * c) := by nlinarith\n  have h\u2088 : 0 < a * b * (a * c) := by nlinarith\n  have h\u2089 : 0 < b * c * (a * c) := by nlinarith\n  field_simp [h\u2080.ne', h\u2081.ne', h\u2082.ne', h\u2083]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1),\n    sq_nonneg (a * b - 1), sq_nonneg (b * c - 1), sq_nonneg (a * c - 1)]\n  <;> linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2877 : b \u2265 c \u2227 c \u2265 0) (a : \u211d) : (b^3 + c^3 \u2264 (b + c/2)^3) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2877_plus : \u2200 a b c : \u211d, (a \u2264 3 \u2227 b \u2264 3 \u2227 c \u2264 3) \u2227 (a + b + c = 3) \u2192 (a ^ 2 + b ^ 2 + c ^ 2) ^ 2 \u2265 3 * (a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_76358_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 1) : (x * y) ^ 2 / (x ^ 2 + y ^ 2) + (y * z) ^ 2 / (y ^ 2 + z ^ 2) + (z * x) ^ 2 / (z ^ 2 + x ^ 2) \u2264 1 \u2227 3 * (x * y) * (y * z) * z \u2264 1:= by", "target": "\n  have h\u2080 : 0 \u2264 x * y := mul_nonneg hx hy\n  have h\u2081 : 0 \u2264 y * z := mul_nonneg hy hz\n  have h\u2082 : 0 \u2264 z * x := mul_nonneg hz hx\n  have h\u2083 : (x * y) ^ 2 / (x ^ 2 + y ^ 2) \u2264 x * y := by\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (x - y)]\n  have h\u2084 : (y * z) ^ 2 / (y ^ 2 + z ^ 2) \u2264 y * z := by\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (y - z)]\n  have h\u2085 : (z * x) ^ 2 / (z ^ 2 + x ^ 2) \u2264 z * x := by\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (z - x)]\n  have h\u2086 : x * y + y * z + z * x \u2264 1 := by\n    nlinarith\n  have h\u2087 : (x * y) ^ 2 / (x ^ 2 + y ^ 2) + (y * z) ^ 2 / (y ^ 2 + z ^ 2) + (z * x) ^ 2 / (z ^ 2 + x ^ 2) \u2264 1 := by\n    nlinarith\n  have h\u2088 : 3 * (x * y) * (y * z) * z \u2264 1 := by\n    nlinarith [sq_nonneg (x * y), sq_nonneg (y * z), sq_nonneg (z * x)]\n  exact \u27e8h\u2087, h\u2088\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_40450_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) :\n  Real.sqrt (x^2 / (4 * y^2 + y * z + 4 * z^2)) *\n  Real.sqrt (y^2 / (4 * z^2 + z * x + 4 * x^2)) *\n  Real.sqrt (z^2 / (4 * x^2 + x * y + 4 * y^2)) \u2264 1 := by", "target": "\n  have h\u2081 : 0 < 4 * y^2 + y * z + 4 * z^2 := by positivity\n  have h\u2082 : 0 < 4 * z^2 + z * x + 4 * x^2 := by positivity\n  have h\u2083 : 0 < 4 * x^2 + x * y + 4 * y^2 := by positivity\n  have h\u2084 : Real.sqrt (x^2 / (4 * y^2 + y * z + 4 * z^2)) *\n    Real.sqrt (y^2 / (4 * z^2 + z * x + 4 * x^2)) *\n    Real.sqrt (z^2 / (4 * x^2 + x * y + 4 * y^2)) \u2264 1 := by\n    rw [\u2190 Real.sqrt_mul, \u2190 Real.sqrt_mul]\n    \u00b7 apply Real.sqrt_le_iff.mpr\n      constructor\n      \u00b7 positivity\n      \u00b7 rw [mul_comm]\n        apply le_of_sub_nonneg\n        field_simp\n        ring_nf\n        positivity\n    \u00b7 positivity\n    \u00b7 positivity\n  exact h\u2084"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_11098_plus : \u2200 a b : \u211d, a > 0 \u2227 b > 0 \u2227 a + b \u2264 1 \u2192 a * b * (a + b) ^ 2 \u2264 1 / 4:= by", "target": "\n  rintro a b \u27e8ha, hb, hab\u27e9\n  have h1 : 0 < a * b := mul_pos ha hb\n  have h2 : a + b \u2264 1 := hab\n  have h3 : a * b * (a + b) ^ 2 \u2264 a * b * 1 ^ 2 := by gcongr <;> nlinarith\n  nlinarith [sq_nonneg (a - b)]\n  <;> linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_1839_plus (n : \u2115) (hn : 1 < n) :\n    \u2211 k in Finset.Icc 1 n, (k + 1) * 2 ^ (k - 1) \u2264 \u2211 k in Finset.Icc 1 n, k * 2 ^ k:= by", "target": "\n  have : \u2200 k \u2208 Finset.Icc 1 n, (k + 1) * 2 ^ (k - 1) \u2264 k * 2 ^ k := by\n    intro k hk\n    have hk' : 0 < k := by\n      simp only [Finset.mem_Icc] at hk\n      linarith\n    have h1 : 2 ^ (k - 1) \u2264 2 ^ k := by\n      apply Nat.pow_le_pow_of_le_right\n      linarith\n      omega\n    have h2 : k + 1 \u2264 k * 2 := by\n      omega\n    calc\n      (k + 1) * 2 ^ (k - 1) \u2264 k * 2 * 2 ^ (k - 1) := by gcongr\n      _ = k * 2 ^ (k - 1 + 1) := by ring\n      _ \u2264 k * 2 ^ k := by\n        gcongr\n        <;> omega\n      _ \u2264 k * 2 ^ k := by linarith\n  exact Finset.sum_le_sum this\n  <;> simp [Nat.succ_eq_add_one, Nat.add_comm, Nat.add_left_comm]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_947_plus : \u2200 a b c : \u211d, a + b + c = 1 \u2227 a \u2265 b \u2227 b \u2265 c \u2192 3 * a ^ 2 + 3 * a + 3 \u2265 b ^ 3 + c ^ 3 + b ^ 2 + c ^ 2 + b + c \u2228 (\u2203 a b c : \u211d, a + b + c = 1 \u2227 a < b \u2227 b < c) := by", "target": "\n  intro a b c h\n  by_cases h\u2080 : 3 * a ^ 2 + 3 * a + 3 \u2265 b ^ 3 + c ^ 3 + b ^ 2 + c ^ 2 + b + c\n  \u00b7 left\n    exact h\u2080\n  \u00b7 right\n    use 0, 1 / 3, 2 / 3\n    norm_num\n    <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_35276_plus : \u2200 a b : \u211d, a > 0 \u2227 b > 0 \u2192 a + b = 1 \u2192 4 * Real.sqrt 2 \u2264 (1 / b ^ 2 + a) + (1 / a ^ 2 + b):= by", "target": "\n  rintro a b \u27e8ha, hb\u27e9 hab\n  have h\u2081 : 0 < a * b := by nlinarith\n  have h\u2082 : 0 < a * b * (a + b) := by nlinarith\n  have h\u2083 : 0 < Real.sqrt 2 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2084 : 0 < a ^ 2 * b ^ 2 := by positivity\n  have h\u2085 : 0 < a ^ 2 * b ^ 2 * (a + b) := by positivity\n  field_simp [ha.ne', hb.ne', h\u2084.ne', h\u2085.ne']\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_sqrt (by positivity : 0 \u2264 (2 : \u211d)),\n    mul_self_nonneg (a - b),\n    mul_self_nonneg (Real.sqrt 2 - a - b)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_26710_plus (a b c : \u211d) (n : \u2115) (hn : 2 \u2264 n) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) : (a ^ n + b ^ n + c ^ n) / (a ^ n + b ^ n + c ^ n) + (a ^ n + b ^ n + c ^ n) / (b ^ n + c ^ n + a ^ n) + (a ^ n + b ^ n + c ^ n) / (c ^ n + a ^ n + b ^ n) \u2265 2 * Real.sqrt (2 / 3):= by", "target": "\n  have h\u2081 : Real.sqrt (2 / 3) \u2264 1 := by\n    rw [Real.sqrt_le_iff]\n    norm_num\n  have h\u2082 : 0 < a ^ n + b ^ n + c ^ n := by positivity\n  have h\u2083 : 0 < b ^ n + c ^ n + a ^ n := by positivity\n  have h\u2084 : 0 < c ^ n + a ^ n + b ^ n := by positivity\n  have h\u2085 : (a ^ n + b ^ n + c ^ n) / (a ^ n + b ^ n + c ^ n) = 1 := by\n    rw [div_self (by positivity)]\n  have h\u2086 : (a ^ n + b ^ n + c ^ n) / (b ^ n + c ^ n + a ^ n) = 1 := by\n    rw [div_eq_iff (by positivity)]\n    ring\n  have h\u2087 : (a ^ n + b ^ n + c ^ n) / (c ^ n + a ^ n + b ^ n) = 1 := by\n    rw [div_eq_iff (by positivity)]\n    ring\n  nlinarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_58_plus (a b c : \u211d) (hab : a \u2265 b) (hbc : b \u2265 c) (hca : c \u2265 0) (h : a^2 + b^2 + c^2 = 3) : (1 - a * b * c) * (a * b + b * c + c * a) \u2264 3:= by", "target": "\n  have : 0 \u2264 a * b := by nlinarith\n  have : 0 \u2264 b * c := by nlinarith\n  have : 0 \u2264 c * a := by nlinarith\n  have : 0 \u2264 a * b * c := by nlinarith\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b + b * c + c * a),\n    mul_self_nonneg (a * b - b * c),\n    mul_self_nonneg (b * c - c * a),\n    mul_self_nonneg (c * a - a * b)]\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_11203_plus (x y z : \u211d) (h\u2081 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2082 : x + y + z = 1) :\n     x ^ 2 / (2 * x ^ 2 + y * z) + y ^ 2 / (2 * y ^ 2 + z * x) + z ^ 2 / (2 * z ^ 2 + x * y) \u2264 1 \u2227\n     x ^ 2 / (2 * x ^ 2 + y * z) + y ^ 2 / (2 * y ^ 2 + z * x) + z ^ 2 / (2 * z ^ 2 + x * y) \u2265 1/3:= by", "target": "\n  rcases h\u2081 with \u27e8hx, hy, hz\u27e9\n  have h\u2083 : 0 < x * y := mul_pos hx hy\n  have h\u2084 : 0 < y * z := mul_pos hy hz\n  have h\u2085 : 0 < z * x := mul_pos hz hx\n  have h\u2086 : 0 < x * y * (y * z) := by positivity\n  have h\u2087 : 0 < y * z * (z * x) := by positivity\n  have h\u2088 : 0 < z * x * (x * y) := by positivity\n  have h\u2089 : 0 < x * y * z := by positivity\n  field_simp\n  constructor\n  \u00b7 rw [div_le_one (by positivity)]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n      mul_self_nonneg (x * y - y * z), mul_self_nonneg (y * z - z * x),\n      mul_self_nonneg (z * x - x * y)]\n  \u00b7 rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n      mul_self_nonneg (x * y - y * z), mul_self_nonneg (y * z - z * x),\n      mul_self_nonneg (z * x - x * y)]\n  <;> linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_69312_plus (n : \u2115) (hn : 0 < n) : (\u2211 k in Finset.range n, 2 ^ k * (Nat.choose (2 * n) (2 * k + 1))) \u2264 (\u2211 k in Finset.range (n + 1), 2 ^ k * (Nat.choose (2 * n) (2 * k))) \u2228 (\u2211 k in Finset.range n, 2 ^ k * (Nat.choose (2 * n) (2 * k + 1))) > (\u2211 k in Finset.range (n + 1), 2 ^ k * (Nat.choose (2 * n) (2 * k))):= by", "target": " apply or_iff_not_imp_right.2; intro h; linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_13215_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) (h : 0 < a * b + b * c + c * a) : \u2203 (x y z : \u211d), x + y + z = 1 \u2227 0 < x * y + y * z + z * x \u2227 x * Real.sqrt (y ^ 2 + z ^ 2 + (2 : \u211d) * y * z) + y * Real.sqrt (z ^ 2 + x ^ 2 + (2 : \u211d) * z * x) + z * Real.sqrt (x ^ 2 + y ^ 2 + (2 : \u211d) * x * y) \u2264 9 * Real.sqrt (1):= by", "target": "\n  refine' \u27e81 / 3, 1 / 3, 1 / 3, by linarith, by linarith, _\u27e9\n  have h\u2080 : Real.sqrt ( (1 / 3) ^ 2 + (1 / 3) ^ 2 + (2 : \u211d) * (1 / 3) * (1 / 3) ) \u2264 4 / 3 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 norm_num\n  have h\u2081 : Real.sqrt ( (1 / 3) ^ 2 + (1 / 3) ^ 2 + (2 : \u211d) * (1 / 3) * (1 / 3) ) \u2265 0 := by positivity\n  have h\u2082 : Real.sqrt ( (1 / 3) ^ 2 + (1 / 3) ^ 2 + (2 : \u211d) * (1 / 3) * (1 / 3) ) \u2264 4 / 3 := by\n    linarith\n  have h\u2083 : Real.sqrt (1) = 1 := by norm_num\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 1 by norm_num), h\u2080, h\u2081, h\u2082, h\u2083]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_16410_plus (x y z : \u211d) (h\u2081 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2082 : x * y + y * z + z * x + 2 * x * y * z = 1) : 1 / x + 1 / y - 4 * x - 4 * y + 4 / z - z \u2265 4:= by", "target": "\n  rcases h\u2081 with \u27e8hx, hy, hz\u27e9\n  have h\u2083 : 0 < x * y := by positivity\n  have h\u2084 : 0 < y * z := by positivity\n  have h\u2085 : 0 < z * x := by positivity\n  have h\u2086 : 0 < x * y * z := by positivity\n  have h\u2087 : 0 < x * y * z * z := by positivity\n  have h\u2088 : 0 < x * y * z * z * y := by positivity\n  have h\u2089 : 0 < x * y * z * z * y * x := by positivity\n  field_simp [hx, hy, hz, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087, h\u2088, h\u2089]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y),\n    sq_nonneg (x * y * z - 1)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_65155_plus (a b c x y z : \u211d) (h\u2081 : a \u2265 b \u2227 b \u2265 c) (h\u2082 : x \u2265 y \u2227 y \u2265 z \u2228 x \u2264 y \u2227 y \u2264 z) (h\u2083 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2084 : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z) (h\u2085 : a + b + c = 1 \u2227 x + y + z = 1) : (a * x + b * y + c * z) * (a * y + b * z + c * x) * (a * z + b * x + c * y) \u2264 1:= by", "target": "\n  have h\u2086 : a * x + b * y + c * z \u2264 1 := by\n    nlinarith\n  have h\u2087 : a * y + b * z + c * x \u2264 1 := by\n    nlinarith\n  have h\u2088 : a * z + b * x + c * y \u2264 1 := by\n    nlinarith\n  have h\u2089 : (a * x + b * y + c * z) * (a * y + b * z + c * x) * (a * z + b * x + c * y) \u2264 1 := by\n    calc\n      (a * x + b * y + c * z) * (a * y + b * z + c * x) * (a * z + b * x + c * y) \u2264 1 * 1 * 1 := by\n        gcongr <;> nlinarith\n      _ = 1 := by norm_num\n  exact h\u2089"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_42059_plus (f : \u2115 \u2192 \u2115) (h\u2081 : f 1 = 0) (h\u2082 : \u2200 n, f (n + 1) = 2 * f n) : \u2200 n, f n = 0 \u2228 \u2203 m, f n = 2 ^ m:= by", "target": "\n  intro n\n  induction' n with n ih\n  left\n  simp_all\n  rcases ih with (h | \u27e8m, h\u27e9) <;> simp_all [Nat.mul_comm, Nat.pow_succ]\n  <;> use m + 1 <;> simp_all [Nat.mul_comm, Nat.pow_succ]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_81621_plus (G E B A : \u2115) : (G * E)/(E * B) \u2264 (E * C)/(A * E) \u2228 (G * E)/(E * B) \u2265 (E * C)/(A * E)  := by", "target": "\n  apply or_iff_not_imp_right.mpr\n  intro h\n  simp_all [Nat.div_le_iff_le_mul_add_pred, Nat.div_eq_of_lt, Nat.mul_le_mul_left]\n  <;> omega"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_20689_plus : \u2200 a b c : \u211d, a * (a - b) * (a - c) + b * (b - c) * (b - a) + c * (c - a) * (c - b) \u2265 0 \u2228 \u2203 a b c : \u211d, a * (a - b) * (a - c) + b * (b - c) * (b - a) + c * (c - a) * (c - b) < 0:= by", "target": "\n  intro a b c\n  by_cases h : a * (a - b) * (a - c) + b * (b - c) * (b - a) + c * (c - a) * (c - b) \u2265 0\n  \u00b7 left\n    exact h\n  \u00b7 right\n    exact \u27e8a, b, c, by linarith\u27e9\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_29051_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 3) : (Real.sqrt (2 * (a + b + c)) - 2) ^ 2 \u2264 4 * (a + b + c):= by", "target": "\n  have H\u2081 : Real.sqrt (2 * (a + b + c)) \u2265 0 := Real.sqrt_nonneg _\n  have H\u2082 : Real.sqrt (2 * (a + b + c)) ^ 2 = 2 * (a + b + c) := Real.sq_sqrt (by linarith)\n  nlinarith [sq_nonneg (Real.sqrt (2 * (a + b + c)) - 2), H\u2082]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_7742 (a b c : \u211d) : (1 / (3 * (a * b * c)^(1 / 3))) * (1 / a + 1 / b + 1 / c) \u2265 1 / (a + a * b + a * b * c) + 1 / (b + b * c + a * b * c) + 1 / (c + c * a + a * b * c) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_7742_plus (a b c : \u211d) (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2081 : a * b * c \u2260 0) : (1 / (3 * (a * b * c)^(1 / 3))) * (1 / a + 1 / b + 1 / c) \u2265 1 / (a + a * b + a * b * c) + 1 / (b + b * c + a * b * c) + 1 / (c + c * a + a * b * c) \u2194 1 / a + 1 / b + 1 / c \u2265 3 * (1 / (a + a * b + a * b * c) + 1 / (b + b * c + a * b * c) + 1 / (c + c * a + a * b * c)):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_35093_plus (a b c : \u211d) (h\u2081 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2082 : a + b + c = 3)  : (1 / (a + 1) ^ 2 + 1 / (b + 1) ^ 2 + 1 / (c + 1) ^ 2) \u2265 3 / 4:= by", "target": "\n  have h\u2083 : \u2200 x : \u211d, 0 < x \u2192 1 / (x + 1) ^ 2 \u2265 1 / 2 - x / 4 := by\n    intro x hx\n    rw [ge_iff_le, le_div_iff (by positivity)]\n    ring_nf\n    nlinarith [mul_self_nonneg (x - 1)]\n  nlinarith [h\u2083 a h\u2081.1, h\u2083 b h\u2081.2.1, h\u2083 c h\u2081.2.2]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_32071_plus (a b : \u211d) (hab : a + b = a * b) (ha : 0 < a) (hb : 0 < b) : \u2203 a b : \u211d, a + b = a * b \u2227 0 < a \u2227 0 < b \u2227 (1 / (a ^ 4 + b ^ 2 + 1) + 1 / (b ^ 2 + a + 1)) < 1 / 5 := by", "target": "\n  refine' \u27e82, 2, by linarith, by linarith, by linarith, _\u27e9\n  norm_num\n  <;> apply lt_of_sub_pos\n  <;> field_simp\n  <;> ring_nf\n  <;> norm_num\n  <;> nlinarith\n  <;> linarith\n  <;> linarith\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_32215_plus (x : \u211d) (hx : x^3 - 2 * x + 1 = 0) : x^3 + 1 = 2 * x \u2228 x^2 + 1 = 2 * x:= by", "target": "\n  apply or_iff_not_imp_left.2\n  intro h\n  apply mul_left_cancel\u2080 (sub_ne_zero.2 h)\n  nlinarith [sq_nonneg (x - 1), hx]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_10660_plus : \u2200 a b c d : \u211d, 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 0 \u2264 d \u2227 0 < a + b + c + d \u2227 a * b + a * c + a * d + b * c + b * d + c * d \u2264 1 \u2192 (a * b) ^ 2 / (a * b + c * d) ^ 2 + (a * c) ^ 2 / (a * c + b * d) ^ 2 + (a * d) ^ 2 / (a * d + b * c) ^ 2 + (b * c) ^ 2 / (b * c + a * d) ^ 2 + (b * d) ^ 2 / (b * d + a * c) ^ 2 + (c * d) ^ 2 / (c * d + a * b) ^ 2 \u2264 6:= by", "target": "\n  rintro a b c d \u27e8ha, hb, hc, hd, habc, habc_1\u27e9\n  have h1 : (a * b) ^ 2 / (a * b + c * d) ^ 2 \u2264 1 := by\n    apply div_le_one_of_le\n    \u00b7 nlinarith [mul_nonneg ha hb, mul_nonneg hc hd]\n    \u00b7 nlinarith [mul_nonneg ha hb, mul_nonneg hc hd]\n  have h2 : (a * c) ^ 2 / (a * c + b * d) ^ 2 \u2264 1 := by\n    apply div_le_one_of_le\n    \u00b7 nlinarith [mul_nonneg ha hc, mul_nonneg hb hd]\n    \u00b7 nlinarith [mul_nonneg ha hc, mul_nonneg hb hd]\n  have h3 : (a * d) ^ 2 / (a * d + b * c) ^ 2 \u2264 1 := by\n    apply div_le_one_of_le\n    \u00b7 nlinarith [mul_nonneg ha hd, mul_nonneg hb hc]\n    \u00b7 nlinarith [mul_nonneg ha hd, mul_nonneg hb hc]\n  have h4 : (b * c) ^ 2 / (b * c + a * d) ^ 2 \u2264 1 := by\n    apply div_le_one_of_le\n    \u00b7 nlinarith [mul_nonneg hb hc, mul_nonneg ha hd]\n    \u00b7 nlinarith [mul_nonneg hb hc, mul_nonneg ha hd]\n  have h5 : (b * d) ^ 2 / (b * d + a * c) ^ 2 \u2264 1 := by\n    apply div_le_one_of_le\n    \u00b7 nlinarith [mul_nonneg hb hd, mul_nonneg ha hc]\n    \u00b7 nlinarith [mul_nonneg hb hd, mul_nonneg ha hc]\n  have h6 : (c * d) ^ 2 / (c * d + a * b) ^ 2 \u2264 1 := by\n    apply div_le_one_of_le\n    \u00b7 nlinarith [mul_nonneg hc hd, mul_nonneg ha hb]\n    \u00b7 nlinarith [mul_nonneg hc hd, mul_nonneg ha hb]\n  linarith\n  <;> assumption\n  <;> try norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_5632_plus : \u2200 a : \u2115, \u2211' i : \u2115, (1/(2^i)) \u2265 1 - a := by", "target": "\n  intro a\n  have h : \u2211' i : \u2115, (1/(2^i)) \u2265 1 - a := by\n    rw [tsum_eq_single 0]\n    \u00b7 norm_num\n      <;> omega\n    \u00b7 intro i\n      norm_num\n      <;> cases i <;> simp_all [Nat.div_eq_of_lt]\n  exact h"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_18422_plus : \u2200 a b c : \u211d, 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 a + b + c = 3 \u2192 (Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + b ^ 2) + Real.sqrt (1 + c ^ 2)) * (1 / Real.sqrt (1 + a ^ 2) + 1 / Real.sqrt (1 + b ^ 2) + 1 / Real.sqrt (1 + c ^ 2)) \u2265 9:= by", "target": "\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have h\u2081 : 0 \u2264 Real.sqrt (1 + a ^ 2) := Real.sqrt_nonneg (1 + a ^ 2)\n  have h\u2082 : 0 \u2264 Real.sqrt (1 + b ^ 2) := Real.sqrt_nonneg (1 + b ^ 2)\n  have h\u2083 : 0 \u2264 Real.sqrt (1 + c ^ 2) := Real.sqrt_nonneg (1 + c ^ 2)\n  have h\u2084 : 0 \u2264 Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) := by positivity\n  have h\u2085 : 0 \u2264 Real.sqrt (1 + b ^ 2) * Real.sqrt (1 + c ^ 2) := by positivity\n  have h\u2086 : 0 \u2264 Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + c ^ 2) := by positivity\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_sqrt (by positivity : 0 \u2264 1 + a ^ 2),\n    sq_sqrt (by positivity : 0 \u2264 1 + b ^ 2),\n    sq_sqrt (by positivity : 0 \u2264 1 + c ^ 2),\n    mul_self_nonneg (Real.sqrt (1 + a ^ 2) - Real.sqrt (1 + b ^ 2)),\n    mul_self_nonneg (Real.sqrt (1 + b ^ 2) - Real.sqrt (1 + c ^ 2)),\n    mul_self_nonneg (Real.sqrt (1 + a ^ 2) - Real.sqrt (1 + c ^ 2))]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_65127_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 3) : (3 * (a * b) ^ 2 + 3 * (b * c) ^ 2 + 3 * (c * a) ^ 2) / (a + b + c) ^ 2 \u2264 9 * (a ^ 2 + b ^ 2 + c ^ 2):= by", "target": "\n  have : (a + b + c) ^ 2 = 9 := by rw [habc]; norm_num\n  rw [this]\n  have : 0 \u2264 a * b := by positivity\n  have : 0 \u2264 b * c := by positivity\n  have : 0 \u2264 c * a := by positivity\n  have : 0 \u2264 (a * b) ^ 2 + (b * c) ^ 2 + (c * a) ^ 2 := by positivity\n  apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4687 (p : \u2115) (hp : p.Prime) : \u00ac (\u2203 k : \u2115, 7 * p + 3 ^ p - 4 = k ^ 2) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4687_plus (p : \u2115) (hp : p.Prime) (h : \u2203 k : \u2115, 7 * p + 3 ^ p - 4 = k ^ 2) : \u2203 k : \u2115, 7 * p + 3 ^ p - 4 = k ^ 2 \u2227 (p \u2264 7 \u2228 3 \u2223 p) \u2228 (3 \u2223 p \u2192 p \u2264 7):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_28179_plus (n : \u2115) (h\u2081 : 1 \u2264 n \u2227 n \u2264 1000) :  (Nat.digits 10 (5 * n)).sum \u2265 (Nat.digits 10 n).sum \u2228 (Nat.digits 10 (5 * n)).sum < (Nat.digits 10 n).sum:= by", "target": "\n  cases' le_or_lt (Nat.digits 10 (5 * n)).sum (Nat.digits 10 n).sum with h h <;> simp_all\n  <;> omega"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_54759_plus (a b c : \u211d) (h\u2081 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2082 : a + b + c = 1) :  (1 / (b + c) + 1 / (c + a) + 1 / (a + b)) \u2265 27 / 2 * (a * b + b * c + c * a):= by", "target": "\n  rcases h\u2081 with \u27e8ha, hb, hc\u27e9\n  have hab : 0 < a * b := by positivity\n  have hbc : 0 < b * c := by positivity\n  have hac : 0 < a * c := by positivity\n  have h\u2081 : 0 < a * b + b * c + c * a := by positivity\n  have h\u2082 : 0 < a * b * (a + b) + b * c * (b + c) + c * a * (c + a) := by positivity\n  have h\u2083 : 0 < a * b * c * (a + b + c) := by positivity\n  have h\u2084 : 0 < a * b * c := by positivity\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b + b * c + c * a), mul_self_nonneg (a * b - b * c),\n    mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_6753 (x : \u2115 \u2192 \u211d) : x 1 + 4 * x 2 + 9 * x 3 + 16 * x 4 + 25 * x 5 + 36 * x 6 + 49 * x 7 = 1 \u2227 4 * x 1 + 9 * x 2 + 16 * x 3 + 25 * x 4 + 36 * x 5 + 49 * x 6 + 64 * x 7 = 12 \u2227 9 * x 1 + 16 * x 2 + 25 * x 3 + 36 * x 4 + 49 * x 5 + 64 * x 6 + 81 * x 7 = 123 \u2192 16 * x 1 + 25 * x 2 + 36 * x 3 + 49 * x 4 + 64 * x 5 + 81 * x 6 + 100 * x 7 = 334 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_6753_plus (x : \u2115 \u2192 \u211d) : (\u2200 n, 0 < n \u2192 x n \u2265 0) \u2227 x 1 + 4 * x 2 + 9 * x 3 + 16 * x 4 + 25 * x 5 + 36 * x 6 + 49 * x 7 = 1 \u2227 4 * x 1 + 9 * x 2 + 16 * x 3 + 25 * x 4 + 36 * x 5 + 49 * x 6 + 64 * x 7 = 12 \u2227 9 * x 1 + 16 * x 2 + 25 * x 3 + 36 * x 4 + 49 * x 5 + 64 * x 6 + 81 * x 7 = 123 \u2192 16 * x 1 + 25 * x 2 + 36 * x 3 + 49 * x 4 + 64 * x 5 + 81 * x 6 + 100 * x 7 = 334 \u2227 (\u2200 n, 0 < n \u2192 \u2203 m, m > n \u2227 x m \u2265 1) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_271_plus (n : \u2115)\n  (h\u2080 : 5 < n)\n  (h\u2081 : (n - 5) * (n - 4) + 10 = 5 * (n - 3) + 3 * (n - 5)) :\n  n = 12 \u2228 n = 13 \u2228 n = 14 \u2228 n = 15 \u2228 n = 16 \u2228 n = 17 \u2228 n = 18 \u2228 n = 19 \u2228 n = 20:= by", "target": "\n  have h\u2081 : n \u2264 20 := by\n    rcases n with (_ | _ | _ | _ | _ | _ | _ | _ | _ | _ | n) <;> simp_all\n    <;> nlinarith\n  interval_cases n <;> simp_all\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_52920_plus : \u2200 a b : \u211d, 0 < a \u2227 0 < b \u2192 a * b * (Real.log a + Real.log b) \u2264 a + b + (a * b) * (1 + Real.log a + Real.log b):= by", "target": "\n  rintro a b \u27e8ha, hb\u27e9\n  have h\u2080 : 0 < a * b := mul_pos ha hb\n  have h\u2081 : 0 < a * b * (a * b) := by positivity\n  nlinarith [Real.log_le_sub_one_of_pos ha, Real.log_le_sub_one_of_pos hb,\n    Real.log_le_sub_one_of_pos h\u2080]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1479 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a / b + b / c + c / a) \u2265 3 * (9 * (a ^ 3 + b ^ 3 + c ^ 3) / (a + b + c) ^ 3) ^ (1 / 3) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1479_plus : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 a * b * c > 0 \u2227 (\u2203 x y z : \u211d, x * y * z > 0 \u2227 x + y + z = a + b + c \u2227 (x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2) \u2265 3) \u2228 a + b + c > 0 \u2227 (\u2203 x y z : \u211d, x * y * z > 0 \u2227 x + y + z = a + b + c \u2227 (x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2) \u2265 3):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_50580_plus (x y z : \u211d) (h\u2081 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2082 : x * y + x * z + y * z \u2264 1) :\n    x / (x + y + z) + y / (x + y + z) + z / (x + y + z) \u2265 (x + y + z) / (x + y + z + x * y + x * z + y * z):= by", "target": "\n  have x_pos : 0 < x := (h\u2081.1)\n  have y_pos : 0 < y := (h\u2081.2).1\n  have z_pos : 0 < z := (h\u2081.2).2\n  apply le_of_sub_nonneg\n  field_simp [add_comm]\n  ring_nf\n  positivity"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_31522_plus : \u2200 n : \u2115, 1 \u2264 n \u2192  fib (2 * n - 1) * fib (2 * n - 3) \u2264 fib (2 * n - 2)^2 + 1  := by", "target": "\n  rintro n (hn : 1 \u2264 n)\n  cases n with\n  | zero => exfalso; linarith\n  | succ n =>\n    cases n with\n    | zero => norm_num [fib_one, fib_two, fib_add_two]\n    | succ n =>\n      induction' n with n hn'\n      all_goals simp_all [fib_add_two, mul_succ, Nat.succ_mul]\n      all_goals nlinarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1049 : \u2200 a b c : \u211d, 4 * (a ^ 4 + b ^ 4 + c ^ 4) \u2265 4 / 3 * (a ^ 2 + b ^ 2 + c ^ 2) ^ 2 \u2227 4 / 3 * (a * b + b * c + c * a) ^ 2 \u2265 0 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1049_plus : \u2200 a b c : \u211d, \u2203 d : \u211d, d \u2265 0 \u2227 d \u2264 3 * Real.sqrt 3 \u2227 \u2203 e : \u211d, e \u2265 0 \u2227 e \u2264 3 * Real.sqrt 3 \u2227 (Real.sqrt (12 * (a ^ 2 + b ^ 2 + c ^ 2)) \u2265 Real.sqrt (8 * (a * b + b * c + c * a))) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_37556_plus (n : \u2115) (hn : 1 < n) : \u2211 i in Finset.range n, (1 : \u211d) / i \u2265 0 \u2227 \u2211 i in Finset.range n, (1 : \u211d) / i < n:= by", "target": "\n  constructor\n  exact Finset.sum_nonneg (by simp)\n  cases n with\n  | zero => linarith\n  | succ n =>\n    cases n with\n    | zero => linarith\n    | succ n =>\n      induction' n with n ih\n      all_goals simp_all [Finset.sum_range_succ, Nat.cast_add, Nat.cast_succ]\n      norm_num\n      apply lt_trans (add_lt_add_right ih _)\n      norm_num\n      apply lt_of_sub_pos\n      field_simp\n      ring_nf\n      norm_num\n      nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_35402_plus (x z : \u211d) (h\u2080 : 0 < x \u2227 0 < z) (h\u2081 : x \u2260 z) : (1 / (3 * x ^ 2) + 3 / z ^ 2) \u2265 2 / (x * z) \u2228 (1 / (3 * x ^ 2) + 3 / z ^ 2) < 2 / (x * z) := by", "target": "\n  by_cases h : 1 / (3 * x ^ 2) + 3 / z ^ 2 \u2265 2 / (x * z)\n  exact Or.inl h\n  exact Or.inr (by linarith)"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_66777_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) :\n   \u2200 k : \u211d, 0 \u2264 k \u2227 k \u2264 1 \u2192 a * b * c * (a + b + c) * (a * b + b * c + c * a) * (a * b * c * (a + b + c)) \u2264 1:= by", "target": "\n  rintro k \u27e8hk_nonneg, hk_le_one\u27e9\n  have h\u2080 : 0 \u2264 a * b := by positivity\n  have h\u2081 : 0 \u2264 b * c := by positivity\n  have h\u2082 : 0 \u2264 c * a := by positivity\n  have h\u2083 : 0 \u2264 a * b * c := by positivity\n  have h\u2084 : 0 \u2264 a * b * c * (a + b + c) := by positivity\n  have h\u2085 : 0 \u2264 a * b * c * (a + b + c) * (a * b + b * c + c * a) := by positivity\n  have h\u2086 : 0 \u2264 a * b * c * (a + b + c) * (a * b + b * c + c * a) * (a * b * c * (a + b + c)) := by positivity\n  have h\u2087 : a * b * c * (a + b + c) * (a * b + b * c + c * a) * (a * b * c * (a + b + c)) \u2264 1 := by\n    calc\n      a * b * c * (a + b + c) * (a * b + b * c + c * a) * (a * b * c * (a + b + c)) \u2264\n          1 * 1 * 1 * 1 * 1 * 1 := by gcongr <;> nlinarith\n      _ = 1 := by norm_num\n  exact h\u2087"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_28641_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : a + b + c = 3) (h : a ^ 2 + b ^ 2 + c ^ 2 = 3) :\n  a ^ 3 / (a ^ 2 + b ^ 2 + c ^ 2) + b ^ 3 / (b ^ 2 + c ^ 2 + a ^ 2) + c ^ 3 / (c ^ 2 + a ^ 2 + b ^ 2) \u2264 3 * Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2):= by", "target": "\n  norm_num\n  have : a = 1 \u2227 b = 1 \u2227 c = 1 := by\n    have : (a - 1) ^ 2 + (b - 1) ^ 2 + (c - 1) ^ 2 = 0 := by nlinarith\n    constructor\n    \u00b7 nlinarith\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  rw [this.1, this.2.1, this.2.2]\n  norm_num\n  <;> nlinarith [Real.sqrt_nonneg 3, Real.mul_self_sqrt (show 0 \u2264 3 from by norm_num)]\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_62489_plus (i : \u2115) (hi : 1 < i) : (\u2211 k in Finset.Ico 1 i, (k * k) ) \u2264 (\u2211 k in Finset.Ico 1 i, k) * i  := by", "target": "\n  have : \u2200 k \u2208 Finset.Ico 1 i, k * k \u2264 k * i := by\n    intro k hk\n    have : k \u2264 i := by\n      simp only [Finset.mem_Ico] at hk\n      linarith\n    exact Nat.mul_le_mul_left k this\n  exact\n    calc\n      (\u2211 k in Finset.Ico 1 i, k * k) \u2264 \u2211 k in Finset.Ico 1 i, k * i := Finset.sum_le_sum this\n      _ = (\u2211 k in Finset.Ico 1 i, k) * i := by simp [Finset.sum_mul]\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_12632_plus (x y z : \u211d)\n  (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z)\n  (h\u2081 : x + y + z = 1) :\n  (x * y) ^ 2 / (x * y) ^ 2 + (y * z) ^ 2 / (y * z) ^ 2 + (z * x) ^ 2 / (z * x) ^ 2 \u2265 3 * (x * y * z * (x * y + y * z + z * x)) / (x * y * z * (x + y + z)):= by", "target": "\n  rcases h\u2080 with \u27e8hx, hy, hz\u27e9\n  have hxy : 0 < x * y := by positivity\n  have hyz : 0 < y * z := by positivity\n  have hxz : 0 < z * x := by positivity\n  have h : x * y * z > 0 := by positivity\n  have h\u2081' : x * y * z * (x + y + z) = x * y * z := by simp [h\u2081]\n  have h\u2082 : (x * y) ^ 2 / (x * y) ^ 2 + (y * z) ^ 2 / (y * z) ^ 2 + (z * x) ^ 2 / (z * x) ^ 2 = 3 := by\n    field_simp [hxy, hyz, hxz]\n    ring\n  have h\u2083 : 3 * (x * y * z * (x * y + y * z + z * x)) / (x * y * z * (x + y + z)) \u2264 3 := by\n    rw [h\u2081']\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith\n  linarith\n  <;> assumption"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_45428_plus (a b c d : \u211d) (h\u2081 : 0 < a) (h\u2082 : 0 < b) (h\u2083 : 0 < c) (h\u2084 : 0 < d) (h\u2085 : 0 < a + b + c + d) : (Real.sqrt (a / b) + Real.sqrt (b / c + c / d + d / a)) > 5 / 2 \u2228 Real.sqrt (a / b) \u2264 5 / 2 \u2227 Real.sqrt (b / c + c / d + d / a) \u2264 5 / 2:= by", "target": "\n  by_cases h\u2086 : (Real.sqrt (a / b) + Real.sqrt (b / c + c / d + d / a)) > 5 / 2\n  exact Or.inl h\u2086\n  exact Or.inr \u27e8by linarith [Real.sqrt_nonneg (a / b), Real.sqrt_nonneg (b / c + c / d + d / a)], by linarith [Real.sqrt_nonneg (b / c + c / d + d / a), Real.sqrt_nonneg (a / b)]\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_11287_plus : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 a * b * c > 0 \u2227 (\u2203 x y z : \u211d, x > 0 \u2227 y > 0 \u2227 z > 0 \u2227 a^3 * b^2 + b^3 * c^2 + c^3 * a^2 + a^3 + b^3 + c^3 + 6 * (a * b + b * c + c * a) + 2 * (a^2 + b^2 + c^2) + 6 \u2265 2 * (a^3 * b + b^3 * c + c^3 * a) + 3 * (a * b^2 + b * c^2 + c * a^2) + 7 * (a + b + c)) := by", "target": "\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  constructor\n  \u00b7 positivity\n  refine' \u27e81, 1, 1, by norm_num, by norm_num, by norm_num, _\u27e9\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le, mul_nonneg (sq_nonneg (a - 1)) ha.le, mul_nonneg (sq_nonneg (b - 1)) hb.le, mul_nonneg (sq_nonneg (c - 1)) hc.le]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_6741 (a b c : \u211d) (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : (a^2 / (b + c)^2 + b^2 / (c + a)^2 + c^2 / (a + b)^2 + (17 / 36) * (b + c - a) * (a + c - b) * (a + b - c) / (a * b * c)) \u2265 11 / 9 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_6741_plus (a b c : \u211d) (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) / (a + b + c) \u2265 Real.sqrt (3) / 3 - (2 * (Real.sqrt (3) / 3) * (a + b + c)) / 3:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_45064_plus (n : \u2115) (hn : 1 < n) : (\u2211 i in Finset.range n, (1/i : \u211d)) \u2264 n * (1 + \u2211 i in Finset.range n, (1/i : \u211d)):= by", "target": "\n  have h : (\u2211 i in Finset.range n, (1/i : \u211d)) \u2265 0 := by\n    apply Finset.sum_nonneg\n    intro x hx\n    exact by positivity\n  have h\u2081 : (\u2211 i in Finset.range n, (1/i : \u211d)) \u2264 n * (\u2211 i in Finset.range n, (1/i : \u211d)) := by\n    cases n with\n    | zero => linarith\n    | succ n =>\n      apply le_mul_of_one_le_left h\n      simp\n      <;> norm_num\n      <;> linarith\n  nlinarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_965_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : a * b * c = 1) : (1 + 1 / a) * (1 + 1 / b) * (1 + 1 / c) \u2265 8 * (1 - 1 / 3) \u2228 (1 + 1 / a) * (1 + 1 / b) * (1 + 1 / c) \u2265 8 * (1 - 1 / 3):= by", "target": "\n  apply Or.intro_left\n  have h\u2080 : 0 < a * b := mul_pos hab hbc\n  have h\u2081 : 0 < b * c := mul_pos hbc hca\n  have h\u2082 : 0 < a * c := mul_pos hab hca\n  field_simp [habc]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n    sq_nonneg (a * b - 1), sq_nonneg (b * c - 1), sq_nonneg (a * c - 1)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_16514_plus : \u2200 a b : \u211d, a > 0 \u2227 b > 0 \u2192 (a * b) ^ (Real.sqrt 6) \u2264 (a ^ (Real.sqrt 6) * b ^ (Real.sqrt 6))  := by", "target": "\n  intro a b h\n  simp [mul_rpow, h.1.le, h.2.le]\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_26622_plus : \u2200 a b : \u211d, Real.cos (a - b) * Real.cos a * Real.cos b + Real.sin (a - b) * Real.sin a * Real.sin b \u2264 1 := by", "target": "\n  intro a b\n  have h : Real.cos (a - b) * Real.cos a * Real.cos b + Real.sin (a - b) * Real.sin a * Real.sin b \u2264 1 := by\n    nlinarith [Real.cos_sq_add_sin_sq (a - b), Real.cos_sq_add_sin_sq a,\n      Real.cos_sq_add_sin_sq b, sq_nonneg (Real.cos a * Real.cos b - Real.cos (a - b)),\n      sq_nonneg (Real.sin a * Real.sin b - Real.sin (a - b))]\n  exact h\n  <;> simp [Real.cos_sub, Real.sin_sub, mul_comm, mul_left_comm, mul_assoc]\n  <;> nlinarith\n  <;> simp [Real.cos_sub, Real.sin_sub, mul_comm, mul_left_comm, mul_assoc]\n  <;> nlinarith\n  <;> simp [Real.cos_sub, Real.sin_sub, mul_comm, mul_left_comm, mul_assoc]\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_10880_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 a \u2264 1) (hbc : 0 \u2264 b \u2227 b \u2264 1) (hca : 0 \u2264 c \u2227 c \u2264 1) (h : a * b * c \u2264 1) : a / (a * b + 1) + b / (b * c + 1) + c / (c * a + 1) \u2264 3 / 2 \u2228 \u2203 a b c : \u211d, (0 \u2264 a \u2227 a \u2264 1) \u2227 (0 \u2264 b \u2227 b \u2264 1) \u2227 (0 \u2264 c \u2227 c \u2264 1) \u2227 a * b * c \u2264 1 \u2227 a / (a * b + 1) + b / (b * c + 1) + c / (c * a + 1) > 3 / 2 := by", "target": "\n  by_cases h\u2080 : a / (a * b + 1) + b / (b * c + 1) + c / (c * a + 1) \u2264 3 / 2\n  exact Or.inl h\u2080\n  exact Or.inr \u27e8a, b, c, hab, hbc, hca, h, by linarith\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_54805_plus (a b c d : \u211d) (hab : 0 < a) (hbc : 0 < b) (hcd : 0 < c) (hda : 0 < d) (habc : 0 < a + b + c) (habd : 0 < a + b + d) (hcdab : 0 < c + d + a + b) (hcdda : 0 < c + d + a + d) : 1 + 6 / (a * b + a * c + a * d + b * c + b * d + c * d) \u2265 8 / (a + b + c + d) \u2227 1 + 6 / (a * b + a * c + a * d + b * c + b * d + c * d) \u2265 8 / (a + b + c + d):= by", "target": "\n  have h\u2081 : 0 < a * b + a * c + a * d + b * c + b * d + c * d := by positivity\n  have h\u2082 : 0 < a + b + c + d := by positivity\n  have h\u2083 : 0 < a * b + a * c + a * d + b * c + b * d + c * d + 1 := by positivity\n  have h\u2084 : 0 < a + b + c + d + 1 := by positivity\n  have h\u2085 : 0 < a * b + a * c + a * d + b * c + b * d + c * d + 1 + (a + b + c + d) := by positivity\n  refine' \u27e8_, _\u27e9\n  field_simp [h\u2081, h\u2082]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a + b + c + d - 4), sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (a - d), sq_nonneg (b - c), sq_nonneg (b - d), sq_nonneg (c - d)]\n  field_simp [h\u2081, h\u2082]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a + b + c + d - 4), sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (a - d), sq_nonneg (b - c), sq_nonneg (b - d), sq_nonneg (c - d)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_26070_plus (n : \u2115) (hn : 1 < n) : (\u2211 i in Finset.range n, (1/(i^2))) \u2264 1 + (1/2) + (1/5) - (1/(n+1)):= by", "target": "\n  rcases n with (_ | _ | _ | _ | _ | _ | _ | _ | _ | n) <;> norm_num at hn \u22a2 <;> simp_all [Finset.sum_range_succ', Nat.div_eq_of_lt]\n  all_goals norm_num\n  all_goals linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_43040_plus : \u2200 a b : \u211d, 0 \u2264 a \u2227 0 \u2264 b \u2192 a * b ^ 2 \u2264 1 \u2227 b * a ^ 2 \u2264 1 \u2192 a ^ 2 * b ^ 2 * (a + b) ^ 2 \u2264 16 * (a + b) ^ 2:= by", "target": "\n  rintro a b \u27e8ha, hb\u27e9 \u27e8hab, hba\u27e9\n  have h\u2080 : 0 \u2264 a * b := mul_nonneg ha hb\n  have h\u2081 : 0 \u2264 a ^ 2 * b ^ 2 := by positivity\n  have h\u2082 : 0 \u2264 (a + b) ^ 2 := by positivity\n  have h\u2083 : 0 \u2264 a * b * (a + b) := by positivity\n  have h\u2084 : 0 \u2264 a ^ 2 * b ^ 2 * (a + b) := by positivity\n  nlinarith [sq_nonneg (a * b - 1 / 2), sq_nonneg (a + b - 2)]\n  <;> linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_43326_plus (n : \u2115) (hn : 0 < n) (h : Even n) : \u2203 m : \u2115, m \u2260 0 \u2227 (m : \u2115) \u2264 n \u2227 Even m \u2227 m \u2264 n:= by", "target": "\n  refine' \u27e8n, _, le_rfl, h, le_rfl\u27e9\n  aesop\n  <;> aesop"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_603 {a b c x y : \u211d} (hx: x = a^2 + b^2 + c^2) (hy: y = a * b + b * c + c * a) : x \u2265 y := by\n<hard theorem>", "target": "\ntheorem leanworkbook_603_plus (A : Fin 5 \u2192 \u211d) (h\u2081 : \u2200 i, A i \u2265 0) (h\u2082 : \u2211 i, A i = 1) : (\u2211 i, (1 + A i) ^ 2) \u2265 4 * (\u2211 i, A i) - 3:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_26110_plus (x y : \u211d) (h\u2080 : 0 \u2264 x \u2227 0 \u2264 y) (h\u2081 : x ^ 2 + y ^ 2 \u2264 1) (h\u2082 : 0 \u2264 z \u2227 z \u2264 1) (h\u2083 : 0 \u2264 a \u2227 a \u2264 1) (h\u2084 : 0 \u2264 b \u2227 b \u2264 1) (h\u2085 : 0 \u2264 c \u2227 c \u2264 1) (h\u2086 : a + b + c = 1) : (x ^ 2 * z * a + y ^ 2 * z * b + z * (1 - x ^ 2) * c) ^ 2 \u2264 1:= by", "target": "\n  have h\u2087 : x ^ 2 \u2264 1 := by nlinarith\n  have h\u2088 : y ^ 2 \u2264 1 := by nlinarith\n  have h\u2089 : z \u2264 1 := by nlinarith\n  have h\u2081\u2080 : 0 \u2264 x ^ 2 * z := by nlinarith\n  have h\u2081\u2081 : 0 \u2264 y ^ 2 * z := by nlinarith\n  have h\u2081\u2082 : 0 \u2264 z * (1 - x ^ 2) := by nlinarith\n  have h\u2081\u2083 : 0 \u2264 z * (1 - y ^ 2) := by nlinarith\n  have h\u2081\u2084 : x ^ 2 * z * a + y ^ 2 * z * b + z * (1 - x ^ 2) * c \u2264 1 := by nlinarith\n  have h\u2081\u2085 : 0 \u2264 x ^ 2 * z * a + y ^ 2 * z * b + z * (1 - x ^ 2) * c := by nlinarith\n  nlinarith\n  <;> assumption\n  <;> simp_all only [add_assoc, add_left_comm, add_comm]\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3960 (a b c : \u211d) (habc : a + b + c = 0) : (a^2 + 2 * a) / (2 * a^2 + 1) + (b^2 + 2 * b) / (2 * b^2 + 1) + (c^2 + 2 * c) / (2 * c^2 + 1) \u2265 0 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3960_plus (a b c : \u211d) (habc : a + b + c = 0) (h : a * b * c \u2265 0) : Real.sqrt (a ^ 2 + 2 * a) + Real.sqrt (b ^ 2 + 2 * b) + Real.sqrt (c ^ 2 + 2 * c) \u2265 0 \u2227 Real.sqrt (a ^ 2 + 2 * a) * Real.sqrt (b ^ 2 + 2 * b) * Real.sqrt (c ^ 2 + 2 * c) \u2265 0:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_45191_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 3) : x ^ 3 * y * (y - z) + y ^ 3 * z * (z - x) + z ^ 3 * x * (x - y) \u2265 0 \u2228 (x * y * z * (x * y + y * z + z * x) \u2265 0 \u2227 x * y * z \u2264 3):= by", "target": "\n  refine' or_iff_not_imp_left.2 fun h\u2081 => _\n  refine' \u27e8_, _\u27e9\n  \u00b7 positivity\n  \u00b7 have : x * y \u2265 0 := by positivity\n    have : y * z \u2265 0 := by positivity\n    have : z * x \u2265 0 := by positivity\n    have : x * y * z \u2265 0 := by positivity\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n      mul_self_nonneg (x * y + y * z + z * x), mul_self_nonneg (x * y - y * z),\n      mul_self_nonneg (y * z - z * x), mul_self_nonneg (z * x - x * y)]\n    <;> linarith\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_72614_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 a \u2264 1) (hbc : 0 \u2264 b \u2227 b \u2264 1) (hca : 0 \u2264 c \u2227 c \u2264 1) (h : 0 \u2264 a * b \u2227 a * b \u2264 1) (h' : 0 \u2264 b * c \u2227 b * c \u2264 1) (h'' : 0 \u2264 c * a \u2227 c * a \u2264 1) : a^2 * b + b^2 * c + c^2 * a + 1 \u2265 a^2 + b^2 + c^2 + a * b * c  := by", "target": "\n  nlinarith [mul_nonneg (sub_nonneg.mpr hab.2) (sub_nonneg.mpr hbc.2),\n    mul_nonneg (sub_nonneg.mpr hbc.2) (sub_nonneg.mpr hca.2),\n    mul_nonneg (sub_nonneg.mpr hca.2) (sub_nonneg.mpr hab.2),\n    mul_nonneg (sub_nonneg.mpr hab.1) (sub_nonneg.mpr hbc.1),\n    mul_nonneg (sub_nonneg.mpr hbc.1) (sub_nonneg.mpr hca.1),\n    mul_nonneg (sub_nonneg.mpr hca.1) (sub_nonneg.mpr hab.1)]\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1495 (a b c : \u211d) (h1 : a>0 \u2227 b>0 \u2227 c>0 \u2227 a * b * c = 1): a ^ 3 + b ^ 3 + c ^ 3 >= a * b + b * c + c * a := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1495_plus (a b c : \u211d) (h1 : a>0 \u2227 b>0 \u2227 c>0 \u2227 a * b * c = 1): (a ^ 2 + b ^ 2 + c ^ 2) ^ 2 >= 9 * a ^ 2 * b ^ 2 * c ^ 2 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_32761_plus (a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : (Real.sqrt ((a * (b + c)) / (a ^ 2 + b * c)) + Real.sqrt ((b * (c + d)) / (b ^ 2 + c * d)) + Real.sqrt ((a * (b + c)) / (a ^ 2 + b * c)) + Real.sqrt ((b * (c + d)) / (b ^ 2 + c * d))) > 3 \u2228 (Real.sqrt ((a * (b + c)) / (a ^ 2 + b * c)) + Real.sqrt ((b * (c + d)) / (b ^ 2 + c * d)) + Real.sqrt ((a * (b + c)) / (a ^ 2 + b * c)) + Real.sqrt ((b * (c + d)) / (b ^ 2 + c * d))) \u2264 3 := by", "target": "\n  refine' or_iff_not_imp_right.mpr fun h => _\n  nlinarith [Real.sqrt_nonneg ((a * (b + c)) / (a ^ 2 + b * c)),\n    Real.sqrt_nonneg ((b * (c + d)) / (b ^ 2 + c * d)), h]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1432 (a b : \u211d) (hab : a * b \u2265 3 / 2) : 3 * (2 * b + a - 3) * (2 * a + b - 3) \u2265 (a - b) ^ 2 + 21 / 20 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1432_plus : \u2200 a b : \u211d, a * b \u2265 3 / 2 \u2192 3 * (2 * b + a - 3) * (2 * a + b - 3) \u2265 (a - b) ^ 2 + 21 / 20 \u2228 3 * (2 * b + a - 3) * (2 * a + b - 3) < (a - b) ^ 2 + 21 / 20 \u2227 3 * (2 * b + a - 3) * (2 * a + b - 3) + (a - b) ^ 2 \u2265 21 / 20:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_10940_plus : \u2200 a b c : \u211d, a * b > 0 \u2227 b * c > 0 \u2227 c * a > 0 \u2227 a + b + c = 3 \u2192 a ^ 2 * b ^ 2 * c ^ 2 \u2264 3 \u2227 a ^ 2 * b ^ 2 * c ^ 2 \u2264 (a ^ 2 + b ^ 2 + c ^ 2) ^ 2:= by", "target": "\n  rintro a b c \u27e8hab, hbc, hac, h\u27e9\n  have : a ^ 2 + b ^ 2 + c ^ 2 = (a + b + c) ^ 2 - 2 * (a * b + b * c + c * a) := by ring\n  simp_all only [mul_assoc]\n  constructor\n  nlinarith [sq_nonneg (a * b + b * c + c * a), sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a),\n    sq_nonneg (c * a - a * b)]\n  nlinarith [sq_nonneg (a * b + b * c + c * a), sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a),\n    sq_nonneg (c * a - a * b)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_4760_plus (A : Fin 5 \u2192 \u211d) (h\u2081 : \u2200 i, 0 \u2264 A i) (h\u2082 : \u2211 i, A i = 1) (h\u2083 : \u220f i, A i \u2264 1) : \u2211 i, (1 / (1 + A i)) \u2265 1:= by", "target": "\n  have h\u2084 : \u2200 i, 0 < 1 + A i := fun i \u21a6 by linarith [h\u2081 i]\n  have h\u2085 : \u220f i, A i \u2264 1 := h\u2083\n  have h\u2086 : \u2211 i, (1 / (1 + A i)) \u2265 1 := by\n    have h\u2087 : \u2200 i, 1 / (1 + A i) \u2265 1 / 2 := fun i \u21a6 by\n      have h\u2088 : 0 \u2264 A i := h\u2081 i\n      have h\u2089 : A i \u2264 1 := by\n        calc\n          A i \u2264 \u2211 i, A i := by exact Finset.single_le_sum (fun i _ \u21a6 h\u2081 i) (by simp)\n          _ = 1 := h\u2082\n      rw [ge_iff_le, le_div_iff (by linarith [h\u2081 i])]\n      nlinarith\n    calc\n      \u2211 i, (1 / (1 + A i)) \u2265 \u2211 i, (1 / 2) := by\n        exact Finset.sum_le_sum (fun i _ \u21a6 h\u2087 i)\n      _ = 5 * (1 / 2) := by simp\n      _ = 5 / 2 := by ring\n      _ \u2265 1 := by norm_num\n  exact h\u2086"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_63454_plus (a b c : \u211d) (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2081 : a + b + c = 1) : (4 * Real.sqrt (a ^ 3 * b ^ 3) + 4 * Real.sqrt (b ^ 3 * c ^ 3) + 4 * Real.sqrt (c ^ 3 * a ^ 3)) \u2264 4 * (a + b + c) ^ 3:= by", "target": "\n  have h\u2082 : 0 < a := by linarith\n  have h\u2083 : 0 < b := by linarith\n  have h\u2084 : 0 < c := by linarith\n  have h\u2085 : 0 < a * b := by positivity\n  have h\u2086 : 0 < b * c := by positivity\n  have h\u2087 : 0 < c * a := by positivity\n  have h\u2088 : Real.sqrt (a ^ 3 * b ^ 3) \u2264 (a * b) * (a + b) := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (a * b)]\n  have h\u2089 : Real.sqrt (b ^ 3 * c ^ 3) \u2264 (b * c) * (b + c) := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (b * c)]\n  have h\u2081\u2080 : Real.sqrt (c ^ 3 * a ^ 3) \u2264 (c * a) * (c + a) := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (c ^ 2 - a ^ 2), sq_nonneg (c * a)]\n  nlinarith [h\u2088, h\u2089, h\u2081\u2080, mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_9035_plus (A : Fin 5 \u2192 \u211d) (h\u2081 : \u2200 i, 0 \u2264 A i) (h\u2082 : \u2211 i, A i = 1) :\n \u2211 i, (1 - A i) ^ 2 \u2265 1 - 2 * \u2211 i, A i := by", "target": "\n  have h\u2083 : \u2211 i : Fin 5, (1 - A i) ^ 2 \u2265 1 - 2 * \u2211 i : Fin 5, A i := by\n    simp_all [sq, Fin.sum_univ_succ]\n    nlinarith [h\u2081 0, h\u2081 1, h\u2081 2, h\u2081 3, h\u2081 4, h\u2082]\n  exact h\u2083"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_2213_plus (a b c: \u211d) (h\u2080 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2081 : a + b + c = 1) : (1 - a) * (1 - b) * (1 - c) \u2265 0 \u2227 (1 - a) * (1 - b) * (1 - c) \u2265 a * b * c * (a + b + c):= by", "target": "\n  have h\u2082 : 0 \u2264 a * b := by nlinarith\n  have h\u2083 : 0 \u2264 b * c := by nlinarith\n  have h\u2084 : 0 \u2264 a * c := by nlinarith\n  have h\u2085 : 0 \u2264 a * b * c := by nlinarith\n  have h\u2086 : (1 - a) * (1 - b) * (1 - c) \u2265 0 := by\n    apply mul_nonneg\n    all_goals nlinarith\n  have h\u2087 : (1 - a) * (1 - b) * (1 - c) \u2265 a * b * c * (a + b + c) := by\n    nlinarith\n  exact \u27e8h\u2086, h\u2087\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_6240_plus : \u2200 a b c : \u211d, 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2192 a * b * c + Real.sqrt (3 * (a ^ 2 + b ^ 2 + c ^ 2) * (a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2) - 2 * a ^ 2 * b ^ 2 * c ^ 2) \u2265 (a + b) * (b + c) * (c + a) / 4:= by", "target": "\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  have h\u2080 : 0 \u2264 a * b := by positivity\n  have h\u2081 : 0 \u2264 b * c := by positivity\n  have h\u2082 : 0 \u2264 c * a := by positivity\n  have h\u2083 : 0 \u2264 a * b * c := by positivity\n  have h\u2084 : (a + b) * (b + c) * (c + a) / 4 \u2264 a * b * c + Real.sqrt (3 * (a ^ 2 + b ^ 2 + c ^ 2) * (a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2) - 2 * a ^ 2 * b ^ 2 * c ^ 2) := by\n    have h\u2084\u2081 : 0 \u2264 (a - b) ^ 2 * (b - c) ^ 2 * (c - a) ^ 2 := by positivity\n    have h\u2084\u2082 : 0 \u2264 Real.sqrt (3 * (a ^ 2 + b ^ 2 + c ^ 2) * (a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2) - 2 * a ^ 2 * b ^ 2 * c ^ 2) := by\n      apply Real.sqrt_nonneg\n    nlinarith [sq_sqrt (show 0 \u2264 3 * (a ^ 2 + b ^ 2 + c ^ 2) * (a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2) - 2 * a ^ 2 * b ^ 2 * c ^ 2 from by\n        nlinarith [sq_nonneg (a * b), sq_nonneg (b * c), sq_nonneg (c * a)]), sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n  linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1298 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : a + b + c + 1 = 4 * a * b * c \u2192 a^2 * b / (b + 2 * c) + b^2 * c / (c + 2 * a) + c^2 * a / (a + 2 * b) \u2265 1 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1298_plus : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a * b * c = 1 \u2192 a + b + c \u2264 3 \u2192 a^2 * b / (b + 2 * c) + b^2 * c / (c + 2 * a) + c^2 * a / (a + 2 * b) \u2265 1:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_22978_plus : \u2200 a b c : \u211d, a * b > 0 \u2227 b * c > 0 \u2227 c * a > 0 \u2192 (a^2 + b * c) / (b + c) ^ 2 + (b^2 + c * a) / (c + a) ^ 2 + (c^2 + a * b) / (a + b) ^ 2 \u2265 3 / 4 * (1 + (a ^ 2 + b ^ 2 + c ^ 2) / (a * b + b * c + c * a)) \u2228 \u2203 a b c : \u211d, a * b > 0 \u2227 b * c > 0 \u2227 c * a > 0 \u2227 (a^2 + b * c) / (b + c) ^ 2 + (b^2 + c * a) / (c + a) ^ 2 + (c^2 + a * b) / (a + b) ^ 2 < 3 / 4 * (1 + (a ^ 2 + b ^ 2 + c ^ 2) / (a * b + b * c + c * a)) := by", "target": "\n  rintro a b c \u27e8hab, hbc, hca\u27e9\n  by_cases h\u2081 : (a^2 + b * c) / (b + c) ^ 2 + (b^2 + c * a) / (c + a) ^ 2 + (c^2 + a * b) / (a + b) ^ 2 \u2265 3 / 4 * (1 + (a ^ 2 + b ^ 2 + c ^ 2) / (a * b + b * c + c * a))\n  left\n  linarith\n  right\n  exact \u27e8a, b, c, hab, hbc, hca, by linarith\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_40313_plus (a b c : \u211d) (habc : a * b * c = 1) (h : a + b + c = 3) : a ^ 2 / (b ^ 2 + c ^ 2) + b ^ 2 / (a ^ 2 + c ^ 2) + c ^ 2 / (b ^ 2 + a ^ 2) \u2265 3 / 4:= by", "target": "\n  have h1 : a ^ 2 / (b ^ 2 + c ^ 2) + b ^ 2 / (a ^ 2 + c ^ 2) + c ^ 2 / (b ^ 2 + a ^ 2) \u2265 3 / 4 := by\n    rcases eq_or_ne a 0 with (rfl | ha') <;> rcases eq_or_ne b 0 with (rfl | hb') <;> rcases eq_or_ne c 0 with (rfl | hc')\n    all_goals simp_all\n    all_goals\n      apply le_of_sub_nonneg\n      field_simp\n      ring_nf\n      positivity\n  linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_45402_plus (n : \u2115) (h\u2081 : \u2203 k, n < 2 ^ k) : \u2203 k, 2 ^ k > n := by", "target": "\n  cases' h\u2081 with k hk\n  exact \u27e8k, by linarith [pow_pos (by norm_num : (0 : \u2115) < 2) k]\u27e9\n  <;> assumption\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_23356_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) : 3 * (x ^ 3 * y ^ 3 * z ^ 3) \u2264 (x * y + y * z + z * x) ^ 3:= by", "target": "\n  have h1 : 0 < x * y := mul_pos hx hy\n  have h2 : 0 < y * z := mul_pos hy hz\n  have h3 : 0 < z * x := mul_pos hz hx\n  have h4 : 0 < x * y * z := by positivity\n  have h5 : (x * y + y * z + z * x) ^ 3 \u2265 3 * (x ^ 3 * y ^ 3 * z ^ 3) := by\n    nlinarith [sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y),\n      mul_self_nonneg (x * y * z), mul_self_nonneg (x * y * z * (x * y - y * z)),\n      mul_self_nonneg (x * y * z * (y * z - z * x)), mul_self_nonneg (x * y * z * (z * x - x * y))]\n  linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_49461_plus (x y : \u211d) (h\u2081 : 0 < x \u2227 0 < y) (h\u2082 : x \u2260 y) :  Real.sqrt (x ^ 2 + y ^ 2) + Real.sqrt (2 * (x ^ 2 + y ^ 2)) \u2265 Real.sqrt (3 * (x ^ 2 - y ^ 2)):= by", "target": "\n  have h\u2083 : 0 \u2264 x ^ 2 + y ^ 2 := by nlinarith\n  have h\u2084 : 0 \u2264 Real.sqrt (x ^ 2 + y ^ 2) := Real.sqrt_nonneg (x ^ 2 + y ^ 2)\n  have h\u2085 : 0 \u2264 Real.sqrt (2 * (x ^ 2 + y ^ 2)) := Real.sqrt_nonneg (2 * (x ^ 2 + y ^ 2))\n  have h\u2086 : 0 \u2264 Real.sqrt (3 * (x ^ 2 - y ^ 2)) := Real.sqrt_nonneg (3 * (x ^ 2 - y ^ 2))\n  have h\u2087 : Real.sqrt (3 * (x ^ 2 - y ^ 2)) \u2264 Real.sqrt (x ^ 2 + y ^ 2) + Real.sqrt (2 * (x ^ 2 + y ^ 2)) := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_sqrt (show 0 \u2264 x ^ 2 + y ^ 2 from h\u2083), sq_sqrt (show 0 \u2264 2 * (x ^ 2 + y ^ 2) from by positivity),\n        sq_nonneg (Real.sqrt (x ^ 2 + y ^ 2) - Real.sqrt (2 * (x ^ 2 + y ^ 2)))]\n  linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_23553_plus : \u2203 (x : \u2115), \u2203 (y : \u2115), 1/x + 1/y < 1 \u2227 \u2203 (z : \u2115), 1/x + 1/y + 1/z < 1 \u2227 1/x + 1/y + 1/z + 1/(x * y) < 1:= by", "target": "\n  use 2, 2\n  constructor <;> simp <;> use 2 <;> simp"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_61390_plus : \u2200 a b c : \u211d, 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 a * b + b * c + c * a \u2264 1 \u2192 Real.sqrt (a * b) + Real.sqrt (b * c) + Real.sqrt (c * a) \u2264 1 + Real.sqrt (1 + a * b + b * c + c * a):= by", "target": "\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have h\u2080 : 0 \u2264 Real.sqrt (a * b) := Real.sqrt_nonneg (a * b)\n  have h\u2081 : 0 \u2264 Real.sqrt (b * c) := Real.sqrt_nonneg (b * c)\n  have h\u2082 : 0 \u2264 Real.sqrt (c * a) := Real.sqrt_nonneg (c * a)\n  have h\u2083 : 0 \u2264 1 + a * b + b * c + c * a := by positivity\n  have h\u2084 : 0 \u2264 Real.sqrt (1 + a * b + b * c + c * a) := Real.sqrt_nonneg _\n  nlinarith [sq_sqrt (show 0 \u2264 a * b from by positivity),\n    sq_sqrt (show 0 \u2264 b * c from by positivity),\n    sq_sqrt (show 0 \u2264 c * a from by positivity),\n    sq_sqrt (show 0 \u2264 1 + a * b + b * c + c * a from h\u2083),\n    sq_nonneg (Real.sqrt (a * b) - Real.sqrt (b * c)),\n    sq_nonneg (Real.sqrt (b * c) - Real.sqrt (c * a)),\n    sq_nonneg (Real.sqrt (c * a) - Real.sqrt (a * b))]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_28138_plus : \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a * b * c > 0 \u2227 (\u2203 x y z : \u211d, x > 0 \u2227 y > 0 \u2227 z > 0 \u2227 a^2 / (a^2 + b * c) + b^2 / (b^2 + a * c) + c^2 / (c^2 + a * b) \u2264 2 \u2227 x * y * z \u2264 a * b * c \u2227 0 < a * b * c):= by", "target": "\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  have h\u2080 : 0 < a * b := by positivity\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * a := by positivity\n  have h\u2083 : 0 < a * b * c := by positivity\n  have h\u2084 : a ^ 2 / (a ^ 2 + b * c) + b ^ 2 / (b ^ 2 + a * c) + c ^ 2 / (c ^ 2 + a * b) \u2264 2 := by\n    field_simp [ha, hb, hc, h\u2080, h\u2081, h\u2082, h\u2083]\n    apply le_of_sub_nonneg\n    field_simp [ha, hb, hc, h\u2080, h\u2081, h\u2082, h\u2083]\n    ring_nf\n    positivity\n  exact \u27e8by positivity, \u27e8a, b, c, by positivity, by positivity, by positivity, h\u2084, by nlinarith, by positivity\u27e9\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_13081_plus (n : \u2115) (hn : 1 < n) : (\u2203 k : \u2115, n \u2223 k + 1) \u2228 (\u2203 k : \u2115, n \u2223 k - 1):= by", "target": "\n  refine' Or.inl \u27e8n - 1, _\u27e9\n  cases n with\n  | zero => contradiction\n  | succ n =>\n    simp [Nat.dvd_iff_mod_eq_zero, Nat.mod_eq_of_lt, hn]\n  <;> omega\n  <;> simp_all\n  <;> omega\n  <;> simp_all\n  <;> omega\n  <;> simp_all\n  <;> omega\n  <;> simp_all\n  <;> omega"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5261 (a b c : \u211d) : (2 * a ^ 2 + 5 * b * c) / (b + c) ^ 2 + (2 * b ^ 2 + 5 * a * c) / (a + c) ^ 2 + (2 * c ^ 2 + 5 * a * b) / (a + b) ^ 2 >= 21 / 4 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5261_plus (a b c : \u211d) (h\u2081 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2082 : a + b + c = 1) : 1 / (a + b) ^ 2 + 1 / (b + c) ^ 2 + 1 / (c + a) ^ 2 >= 9 / 4 \u2227 1 / (a * b) + 1 / (b * c) + 1 / (c * a) >= 9 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_60931_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : 0 < x * y * z) (hxy : x * y * z = 1) (hxz : x * z * y = 1) (hyz : y * z * x = 1) : (x ^ 2 + y ^ 2 + z ^ 2) * (x ^ 2 + y ^ 2 + z ^ 2) \u2265 9 * x * y * z * (x * y * z):= by", "target": "\n  have : x * y * z = 1 := by rw [hxy]\n  have : x ^ 2 + y ^ 2 + z ^ 2 \u2265 3 * (x * y * z) := by\n    nlinarith [sq_nonneg (x - y * z), sq_nonneg (y - z * x), sq_nonneg (z - x * y)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  <;> simp [*]\n  <;> linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_26183_plus (x y z : \u211d) (h\u2080 : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z) (h\u2081 : x + y + z = 1) (h\u2082 : x * y + x * z + y * z = 1 / 3) : x ^ 2 * y ^ 2 * z ^ 2 * (x * y + x * z + y * z) + x ^ 2 * y ^ 2 * (x * y) * z + x ^ 2 * z ^ 2 * (x * z) * y + y ^ 2 * z ^ 2 * (y * z) * x + x ^ 2 * y ^ 2 * z ^ 2 \u2265 0 \u2227 x ^ 2 * y ^ 2 * z ^ 2 * (x * y + x * z + y * z) + x ^ 2 * y ^ 2 * (x * y) * z + x ^ 2 * z ^ 2 * (x * z) * y + y ^ 2 * z ^ 2 * (y * z) * x + x ^ 2 *y ^ 2 * z ^ 2 \u2265 0 \u2227 x ^ 2 * y ^ 2 * z ^ 2 * (x * y + x * z + y * z) + x ^ 2 *y ^ 2 * (x * y) * z + x ^ 2 * z ^ 2 * (x * z) * y + y ^ 2 * z ^ 2 * (y * z) * x + x ^ 2 *y ^ 2 * z ^ 2 \u2265 0 \u2227 x ^ 2 * y ^ 2 * z ^ 2 * (x * y + x * z + y * z) + x ^ 2 *y ^ 2 * (x * y) * z + x ^ 2 *z ^ 2 * (x * z) * y + y ^ 2 *z ^ 2 * (y * z) * x + x ^ 2 *y ^ 2 * z ^ 2 \u2265 0 := by", "target": "\n  have h\u2083 : 0 \u2264 x * y := by nlinarith\n  have h\u2084 : 0 \u2264 x * z := by nlinarith\n  have h\u2085 : 0 \u2264 y * z := by nlinarith\n  have h\u2086 : 0 \u2264 x * y * z := by nlinarith\n  have h\u2087 : 0 \u2264 x * y * z * (x * y + x * z + y * z) := by nlinarith\n  have h\u2088 : 0 \u2264 x * y * (x * y) * z := by nlinarith\n  have h\u2089 : 0 \u2264 x * z * (x * z) * y := by nlinarith\n  have h\u2081\u2080 : 0 \u2264 y * z * (y * z) * x := by nlinarith\n  have h\u2081\u2081 : 0 \u2264 x * y * z * (x * y + x * z + y * z) + x * y * (x * y) * z + x * z * (x * z) * y + y * z * (y * z) * x := by nlinarith\n  exact \u27e8by nlinarith, by nlinarith, by nlinarith, by nlinarith\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_14099_plus : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 a * b * c > 0 \u2227 (\u2203 x y z : \u211d, x * y * z > 0 \u2227 x ^ 2 + y ^ 2 + z ^ 2 = 1)  := by", "target": "\n  intro a b c h\u2080\n  rcases h\u2080 with \u27e8h\u2080, h\u2081, h\u2082\u27e9\n  have : a * b * c > 0 := by positivity\n  have : \u2203 x y z : \u211d, x * y * z > 0 \u2227 x ^ 2 + y ^ 2 + z ^ 2 = 1 := by\n    use 1 / 3, 2 / 3, 2 / 3\n    constructor\n    \u00b7 positivity\n    \u00b7 ring_nf\n  tauto"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2475 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a^2 + b^2 + c^2 \u2265 1 \u2192 a^2 / (b + c) + b^2 / (a + c) + c^2 / (a + b) \u2265 Real.sqrt 3 / 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2475_plus (a b c : \u211d) (hab : 0 < a) (hb : 0 < b) (hc : 0 < c) : a^2 + b^2 + c^2 \u2265 1 \u2192 a * b * c \u2265 1 / 9 \u2192 a * b + b * c + c * a \u2265 3 / 9:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_14466_plus : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c = a * b * c \u2192 a / b ^ 3 + b / c ^ 3 + c / a ^ 3 \u2265 1 \u2228 (a + b + c) ^ 2 / (a ^ 2 * b ^ 2 * c ^ 2) \u2264 3 := by", "target": "\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  apply or_iff_not_imp_right.2\n  intro h\n  have h1 : 0 < a ^ 3 := pow_pos ha 3\n  have h2 : 0 < b ^ 3 := pow_pos hb 3\n  have h3 : 0 < c ^ 3 := pow_pos hc 3\n  have h4 : 0 < a * b ^ 2 := by positivity\n  have h5 : 0 < b * c ^ 2 := by positivity\n  have h6 : 0 < c * a ^ 2 := by positivity\n  have h7 : 0 < a * b * c := by positivity\n  have h8 : 0 < a * b * c ^ 2 := by positivity\n  have h9 : 0 < b * c * a ^ 2 := by positivity\n  have h10 : 0 < c * a * b ^ 2 := by positivity\n  field_simp [ha, hb, hc, habc]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b),\n    mul_self_nonneg (a * b * c), mul_self_nonneg (a * b * c - a * b),\n    mul_self_nonneg (a * b * c - b * c), mul_self_nonneg (a * b * c - c * a)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4301 (a b : \u211d) (ha : 0 < a) (hb : 0 < b) : (1 / (a + Real.sqrt (a * b)) - 1 / Real.sqrt (a + b)) \u2265 (- (1 + Real.sqrt 2) / 8) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4301_plus (a b : \u211d) (ha : 0 < a) (hb : 0 < b) : (Real.sqrt (a ^ 2 + b ^ 2) + Real.sqrt (b ^ 2 + a ^ 2)) / (Real.sqrt (a * b) + Real.sqrt (b * a)) \u2265 1:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_35892_plus : \u2200 k i : \u2115, k \u2264 i \u2192 (k + i).choose k / (k + i) \u2265 1 / k * (k + i - 1).choose (k - 1) \u2227 (k + i).choose k / (k + i - 1) \u2265 1 / k * (k + i - 1).choose (k - 1) + 1 / k * ((k + i - 1).choose (k - 1) / (k + i - 1))  := by", "target": "\n  rintro k i h\n  constructor\n  rcases k with (_ | _ | k) <;> rcases i with (_ | _ | i) <;> norm_num <;>\n    simp_all [Nat.choose, Nat.div_eq_of_lt, Nat.succ_le_succ] <;>\n    ring_nf <;>\n    nlinarith\n  rcases k with (_ | _ | k) <;> rcases i with (_ | _ | i) <;> norm_num <;>\n    simp_all [Nat.choose, Nat.div_eq_of_lt, Nat.succ_le_succ] <;>\n    ring_nf <;>\n    nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_44807_plus : \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a + b > c \u2227 b + c > a \u2227 a + c > b \u2192  (1 / a + 1 / b) ^ 2 \u2265 4 * (1 / a * (1 / b)) \u2227 (1 / b + 1 / c) ^ 2 \u2265 4 * (1 / b * (1 / c)) \u2227 (1 / c + 1 / a) ^ 2 \u2265 4 * (1 / c * (1 / a))  := by", "target": "\n  rintro a b c \u27e8ha, hb, hc\u27e9 habc\n  have h\u2081 : 0 < a * b := by positivity\n  have h\u2082 : 0 < b * c := by positivity\n  have h\u2083 : 0 < c * a := by positivity\n  have h\u2084 : 0 < a * b * (b * c) := by positivity\n  have h\u2085 : 0 < b * c * (c * a) := by positivity\n  have h\u2086 : 0 < c * a * (a * b) := by positivity\n  refine' \u27e8_, _, _\u27e9 <;>\n    field_simp <;>\n    rw [div_le_div_iff (by positivity) (by positivity)] <;>\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_3603_plus : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 \u2203 x y z : \u211d, x * y * z \u2264 1 \u2227 (x ^ 2 + y ^ 2 + z ^ 2) ^ 2 \u2265 9 * (x * y + y * z + z * x) * (x * y * z) \u2227 x ^ 2 + y ^ 2 + z ^ 2 \u2265 3 * (x * y * z):= by", "target": "\n  intro a b c h\n  use 0, 0, 0\n  norm_num\n  <;> linarith [mul_pos (h.2.1) (h.2.2), mul_pos (h.1) (h.2.2), mul_pos (h.1) (h.2.1)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_38886_plus (x y t : \u211d) (h\u2081 : t \u2260 9) (h\u2082 : x = t - 2) (h\u2083 : y = t - 1) (h\u2084 : 0 < (t - 9) ^ 2) :  y = -(t - 5) / (t - 9) * (x - t + 2) + t - 1  \u2228 \u2203 a b : \u211d, a * x + b * y = a * (t - 2) + b * (t - 1) \u2227 a * (t - 2) + b * (t - 1) = 0:= by", "target": "\n  refine' or_iff_not_imp_right.mpr fun h => _\n  subst_vars\n  linarith\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_22342_plus (a b : \u211d) (hab : 0 < a \u2227 0 < b) : (1 - a) * (1 - b) \u2265 0 \u2194 (a + b) / (1 + a * b) \u2264 1 := by", "target": "\n  have h\u2081 : 0 < a := hab.1\n  have h\u2082 : 0 < b := hab.2\n  have h\u2083 : 0 < a * b := mul_pos h\u2081 h\u2082\n  have h\u2084 : 0 < 1 + a * b := by nlinarith\n  have h\u2085 : (1 - a) * (1 - b) \u2265 0 \u2194 (a + b) / (1 + a * b) \u2264 1 := by\n    constructor\n    \u00b7 intro h\n      rw [div_le_one (by positivity)]\n      nlinarith\n    \u00b7 intro h\n      rw [div_le_one (by positivity)] at h\n      nlinarith\n  exact h\u2085"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2943 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : (a * b / (a * b + 2 * a + b) + b * c / (b * c + 2 * b + c) + c * a / (c * a + 2 * c + a) \u2264 9 / 10 * (a ^ 2 + b ^ 2 + c ^ 2)) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2943_plus : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c = 1 \u2192 a * b / (a * b + 2 * a + b) + b * c / (b * c + 2 * b + c) + c * a / (c * a + 2 * c + a) \u2264 9 / 10 * (a ^ 2 + b ^ 2 + c ^ 2) \u2228 (\u2203 x y z : \u211d, x + y + z = 1 \u2227 0 < x \u2227 0 < y \u2227 0 < z \u2227 a * b / (a * b + 2 * a + b) + b * c / (b * c + 2 * b + c) + c * a / (c * a + 2 * c + a) > 9 / 10 * (a ^ 2 + b ^ 2 + c ^ 2)):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_54289_plus (a b : \u211d) (h\u2080 : 0 < a \u2227 0 < b) (h\u2081 : a \u2260 b) : a / (a + b) + b / (a + b) \u2265 1 / 2 \u2227 a / (a + b) + b / (a + b) \u2264 1:= by", "target": "\n  have h\u2082 : 0 < a + b := add_pos h\u2080.1 h\u2080.2\n  have h\u2083 : a / (a + b) + b / (a + b) = (a + b) / (a + b) := by field_simp [h\u2082.ne']\n  have h\u2084 : (a + b) / (a + b) = 1 := by field_simp [h\u2082.ne']\n  exact \u27e8by linarith, by linarith\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_19809_plus (x y : \u211d) (h\u2080 : 0 \u2264 x \u2227 0 \u2264 y) :\n  |x+y| = |x| + |y| \u2192 \u2200 \u03b1 : \u211d, 0 \u2264 \u03b1 \u2227 \u03b1 \u2264 1 \u2192 |x+\u03b1*y| = |x| + \u03b1*|y| \u2228 |x+\u03b1*y| = |x| + \u03b1*|y| * (1 - \u03b1):= by", "target": "\n  intro h\u2081 \u03b1 h\u2082\n  have h\u2083 : |x + \u03b1 * y| = |x| + \u03b1 * |y| := by\n    cases' le_total 0 (x + \u03b1 * y) with h\u2083 h\u2083 <;>\n    cases' le_total 0 x with h\u2084 h\u2084 <;>\n    cases' le_total 0 y with h\u2085 h\u2085 <;>\n    cases' le_total 0 (x + y) with h\u2086 h\u2086 <;>\n    simp_all only [abs_of_nonneg, abs_of_nonpos, add_left_neg, add_right_neg, mul_neg, neg_mul,\n      neg_neg, neg_zero] <;>\n    nlinarith\n  exact Or.inl h\u2083"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_22154_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a * b * c = 1) :\n    (a * b + b * c + c * a) ^ 2 \u2265 3 * (a * b * c) * (b + c + a):= by", "target": "\n  have h\u2083 : 0 \u2264 a * b := by nlinarith\n  have h\u2084 : 0 \u2264 b * c := by nlinarith\n  have h\u2085 : 0 \u2264 c * a := by nlinarith\n  nlinarith [sq_nonneg (a * b - 1), sq_nonneg (b * c - 1), sq_nonneg (c * a - 1),\n    sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n  <;> aesop\n  <;> aesop\n  <;> aesop"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_6648_plus (a b c : \u211d) (hab : 0 \u2264 a) (hbc : 0 \u2264 b) (hca : 0 \u2264 c) :  a * b ^ 2 * c ^ 2 + b * c ^ 2 * a ^ 2 + c * a ^ 2 * b ^ 2 \u2264 3 * (a + b + c) * (b + c + a) * (c + a + b) * (a * b + b * c + c * a):= by", "target": "\n  refine' le_of_sub_nonneg _\n  ring_nf\n  positivity\n  <;> simp only [sq]\n  <;> positivity"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_28783_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : a + b + c = 3) (h : a * b * c = 1) : (a ^ 2 / (b ^ 2 + c ^ 2 + a ^ 2) + b ^ 2 / (c ^ 2 + a ^ 2 + b ^ 2) + c ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2)) \u2264 1 \u2228 (a ^ 2 / (b ^ 2 + c ^ 2 + a ^ 2) + b ^ 2 / (c ^ 2 + a ^ 2 + b ^ 2) + c ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2)) > 1 \u2227 (a ^ 2 / (b ^ 2 + c ^ 2 + a ^ 2) + b ^ 2 / (c ^ 2 + a ^ 2 + b ^ 2) + c ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2)) \u2264 3:= by", "target": "\n  refine' or_iff_not_imp_right.mpr fun h\u2081 => _\n  have h\u2082 : a = 1 \u2227 b = 1 \u2227 c = 1 := by\n    apply And.intro\n    \u00b7 nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n    \u00b7 apply And.intro\n      \u00b7 nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n      \u00b7 nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  rw [h\u2082.left, h\u2082.right.left, h\u2082.right.right]\n  norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_45589_plus (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a * b * c \u2264 1 \u2192 (a + b) ^ 2 * (b + c) ^ 2 * (c + a) ^ 2 \u2264 (a + b + c) ^ 2 * (a + b + c) ^ 2 * (a + b + c) ^ 2:= by", "target": "\n  intro h\u2080\n  apply le_of_sub_nonneg\n  ring_nf\n  positivity"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_34187_plus : \u2200 a b c d : \u211d, 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 0 \u2264 d \u2227 a + b + c + d = 4 \u2192 (1 + a ^ 2) * (1 + b ^ 2) * (1 + c ^ 2) * (1 + d ^ 2) \u2265 (1 + a) * (1 + b) * (1 + c) * (1 + d) \u2228 \u2203 a b c d : \u211d, 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 0 \u2264 d \u2227 a + b + c + d = 4 \u2227 (1 + a ^ 2) * (1 + b ^ 2) * (1 + c ^ 2) * (1 + d ^ 2) < (1 + a) * (1 + b) * (1 + c) * (1 + d):= by", "target": "\n  intro a b c d h\n  by_cases h\u2081 : (1 + a ^ 2) * (1 + b ^ 2) * (1 + c ^ 2) * (1 + d ^ 2) \u2265 (1 + a) * (1 + b) * (1 + c) * (1 + d)\n  exact Or.inl h\u2081\n  exact Or.inr \u27e8a, b, c, d, h.1, h.2.1, h.2.2.1, h.2.2.2.1, h.2.2.2.2, by linarith\u27e9\n  <;> norm_num\n  <;> aesop"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_75737_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : a + b + c = 1) (h : 0 \u2264 a * b * c) : a ^ 2 / (1 - a) ^ 2 + b ^ 2 / (1 - b) ^ 2 + c ^ 2 / (1 - c) ^ 2 \u2265 a * b + b * c + c * a := by", "target": "\n  have h\u2081 : a ^ 2 / (1 - a) ^ 2 \u2265 a ^ 2 / 1 := by\n    exact div_le_div_of_le_left (by positivity) (by nlinarith) (by nlinarith)\n  have h\u2082 : b ^ 2 / (1 - b) ^ 2 \u2265 b ^ 2 / 1 := by\n    exact div_le_div_of_le_left (by positivity) (by nlinarith) (by nlinarith)\n  have h\u2083 : c ^ 2 / (1 - c) ^ 2 \u2265 c ^ 2 / 1 := by\n    exact div_le_div_of_le_left (by positivity) (by nlinarith) (by nlinarith)\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> assumption\n  <;> try norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_3182_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) : (x ^ 2 + y ^ 2 + z ^ 2) ^ 2 \u2265 3 * x ^ 2 * y ^ 2 * z ^ 2:= by", "target": "\n  have hxy : 0 < x * y := mul_pos hx hy\n  have hxz : 0 < x * z := mul_pos hx hz\n  have hyz : 0 < y * z := mul_pos hy hz\n  nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (x ^ 2 - z ^ 2), sq_nonneg (y ^ 2 - z ^ 2),\n    mul_self_nonneg (x * y - z), mul_self_nonneg (x * z - y), mul_self_nonneg (y * z - x)]\n  <;> simp [h, mul_comm, mul_assoc, mul_left_comm]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_79995_plus (n : \u2115) (x : Fin n \u2192 \u211d) :\n  Real.sqrt ((\u2211 i, x i ^ 2) / n) \u2265 (\u2211 i, x i) / n  \u2228 (\u2211 i, x i) / n = 0  := by", "target": "\n  apply or_iff_not_imp_right.mpr\n  intro h\n  have h\u2081 : (\u2211 i : Fin n, x i) / n = (\u2211 i : Fin n, x i) / n := rfl\n  rw [h\u2081]\n  apply Real.le_sqrt_of_sq_le\n  have h\u2082 : ((\u2211 i : Fin n, x i) / n) ^ 2 \u2264 (\u2211 i, x i ^ 2) / n := by\n    cases n with\n    | zero => simp_all\n    | succ n =>\n      field_simp\n      rw [div_le_div_iff (by positivity) (by positivity)]\n      have h\u2083 : (\u2211 i : Fin (n + 1), x i) ^ 2 \u2264 (\u2211 i : Fin (n + 1), x i ^ 2) * (n + 1):= by\n        calc\n          (\u2211 i : Fin (n + 1), x i) ^ 2 = (\u2211 i : Fin (n + 1), x i * 1) ^ 2 := by simp\n          _ \u2264 (\u2211 i : Fin (n + 1), x i ^ 2) * (\u2211 i : Fin (n + 1), 1 ^ 2) := by\n            apply?\n          _ = (\u2211 i : Fin (n + 1), x i ^ 2) * (n + 1) := by simp\n      nlinarith\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_24162_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 3) (h' : x * y + y * z + z * x \u2264 3)  : (x * y) ^ 2 * z ^ 2 + (y * z) ^ 2 * x ^ 2 + (z * x) ^ 2 * y ^ 2 \u2264 3^4 \u2227 3 * (x * y) * (y * z) * z * x \u2264 3 * 3^2:= by", "target": "\n  have h\u2081 : (x + y + z) ^ 2 = 9 := by nlinarith\n  have h\u2082 : 0 \u2264 x * y := by nlinarith\n  have h\u2083 : 0 \u2264 y * z := by nlinarith\n  have h\u2084 : 0 \u2264 z * x := by nlinarith\n  have h\u2085 : (x * y) ^ 2 * z ^ 2 + (y * z) ^ 2 * x ^ 2 + (z * x) ^ 2 * y ^ 2 \u2264 3 ^ 4 := by\n    nlinarith [sq_nonneg (x * y + y * z + z * x), sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x),\n      sq_nonneg (z * x - x * y)]\n  have h\u2086 : 3 * (x * y) * (y * z) * z * x \u2264 3 * 3 ^ 2 := by\n    nlinarith [sq_nonneg (x * y + y * z + z * x), sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x),\n      sq_nonneg (z * x - x * y)]\n  exact \u27e8h\u2085, h\u2086\u27e9\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_5558_plus (x y z : \u211d) (hx : x > 0) (hy : y > 0) (hz : z > 0) (h : x * y * z = 1) : (x ^ 6 + 2) / x ^ 3 + (y ^ 6 + 2) / y ^ 3 + (z ^ 6 + 2) / z ^ 3 + 15 \u2265 8 * (x / y + y / z + z / x) \u2228 (x - y) ^ 2 * (y - z) ^ 2 * (z - x) ^ 2 \u2265 0 := by", "target": "\n  right\n  positivity"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_68381_plus (n : \u2115) (hn : 1 < n) : (\u2203 k : \u2115, n \u2223 k^3) \u2228 (\u2203 k : \u2115, n \u2223 k^2 - k) \u2228 (\u2203 k : \u2115, n \u2223 k^3 + k)  := by", "target": "\n  refine' Or.inl \u27e8n, _\u27e9\n  simp [Nat.dvd_iff_mod_eq_zero, Nat.pow_mod, Nat.mod_eq_of_lt hn]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_66725_plus (a b c : \u211d) (habc : a * b * c = 1) (h : a * b > 0 \u2227 b * c > 0 \u2227 c * a > 0) :  Real.sqrt (3 * (a^2 + b^2 + c^2)) \u2265 (a + b + c) - 3 / 2:= by", "target": "\n  have h\u2080 : 0 \u2264 Real.sqrt (3 * (a ^ 2 + b ^ 2 + c ^ 2)) := Real.sqrt_nonneg _\n  have h\u2081 : Real.sqrt (3 * (a ^ 2 + b ^ 2 + c ^ 2)) ^ 2 = 3 * (a ^ 2 + b ^ 2 + c ^ 2) := by\n    rw [Real.sq_sqrt (by nlinarith)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a + b + c - 3 / 2)]\n  <;> linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3035 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : (a^2 / Real.sqrt (a^4 + 4 * (b + c)) + b^2 / Real.sqrt (b^4 + 4 * (c + a)) + c^2 / Real.sqrt (c^4 + 4 * (a + b))) \u2265 1 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3035_plus : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a * b * c = 1 \u2192 (\u2203 x y z : \u211d, x * y * z = 1 \u2227 x ^ 2 / Real.sqrt (x ^ 4 + 4 * (y + z)) + y ^ 2 / Real.sqrt (y ^ 4 + 4 * (z + x)) + z ^ 2 / Real.sqrt (z ^ 4 + 4 * (x + y)) \u2265 1):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_46290_plus (t : \u211d) (a b c : \u211d) (h\u2081 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2082 : a + b + c = 1) : (1 + Real.sqrt (1 + a ^ 2) * (1 + Real.sqrt (1 + b ^ 2)) * (1 + Real.sqrt (1 + c ^ 2))) * (a + b + c) \u2265 1 * (a + b + c):= by", "target": "\n  have h\u2083 : Real.sqrt (1 + a ^ 2) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2084 : Real.sqrt (1 + b ^ 2) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2085 : Real.sqrt (1 + c ^ 2) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2086 : (1 + Real.sqrt (1 + a ^ 2) * (1 + Real.sqrt (1 + b ^ 2)) * (1 + Real.sqrt (1 + c ^ 2))) * (a + b + c) \u2265 1 * (a + b + c) := by\n    apply mul_le_mul_of_nonneg_right\n    \u00b7 nlinarith [mul_nonneg (Real.sqrt_nonneg (1 + a ^ 2)) (Real.sqrt_nonneg (1 + b ^ 2)),\n      mul_nonneg (Real.sqrt_nonneg (1 + b ^ 2)) (Real.sqrt_nonneg (1 + c ^ 2)),\n      Real.sqrt_nonneg (1 + a ^ 2), Real.sqrt_nonneg (1 + b ^ 2), Real.sqrt_nonneg (1 + c ^ 2)]\n    \u00b7 linarith\n  linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_22988_plus (a b c d : \u2115) (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c \u2227 0 < d) (h\u2081 : a + b + c + d = 6) : a * b * c * d \u2264 256 \u2227 4 * a * b * c * d \u2264 1024 := by", "target": "\n  have h\u2082 : 0 < a * b := by nlinarith\n  have h\u2083 : 0 < c * d := by nlinarith\n  have h\u2084 : 0 < a * b * c := by nlinarith\n  have h\u2085 : 0 < a * b * d := by nlinarith\n  have h\u2086 : 0 < a * c * d := by nlinarith\n  have h\u2087 : 0 < b * c * d := by nlinarith\n  have h\u2088 : 0 < a * b * c * d := by nlinarith\n  have h\u2089 : a * b * c * d \u2264 256 := by nlinarith\n  have h\u2081\u2080 : 4 * a * b * c * d \u2264 1024 := by nlinarith\n  exact \u27e8h\u2089, h\u2081\u2080\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_17210_plus (p : \u2115) (hp : p.Prime) : \u2203 k : \u2115, (\u220f k in Finset.Ico 1 (p-1), k ^ (2 * k - p - 1) : \u211a) = k  \u2228 (\u220f k in Finset.Ico 1 (p-1), k ^ (2 * k - p - 1) : \u211a) > k:= by", "target": "\n  use \u220f k in Finset.Ico 1 (p-1), k ^ (2 * k - p - 1)\n  cases' le_or_lt (\u220f k in Finset.Ico 1 (p-1), k ^ (2 * k - p - 1)) 0 with h h <;> simp_all [hp.ne_zero]\n  all_goals\n    norm_cast\n    all_goals\n      omega\n  <;> aesop\n  <;> aesop\n  <;> aesop"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_47302_plus (a b : \u211d) (h\u2080 : 0 < a \u2227 0 < b) (h\u2081 : a \u2264 b) : \u2203 c : \u211d, c \u2264 a + b \u2227 |c| \u2264 |a| + |b| \u2227 \u2203 d : \u211d, d \u2264 a + b \u2227 |d| \u2264 |a| + |b|:= by", "target": "\n  exact \u27e8a, by linarith [abs_nonneg a, abs_nonneg b], by linarith [abs_nonneg a, abs_nonneg b], a, by linarith [abs_nonneg a, abs_nonneg b], by linarith [abs_nonneg a, abs_nonneg b]\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5994 (f : \u2124 \u2192 \u2124): (\u2200 x y z:\u2124, f (x^3 + y^3 + z^3) = f x^3 + f y^3 + f z^3) \u2194 \u2203 a:\u2124, \u2200 x:\u2124, f x = a * x := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5994_plus (n : \u2115) (hn : 1 < n) : (\u2203 a : \u2115, a \u2223 n \u2227 1 < a \u2227 a \u2223 n^2) \u2194 \u2203 a : \u2115, a \u2223 n \u2227 1 < a \u2227 a \u2223 n^2 \u2227 a \u2223 n^3 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_29043_plus (x y z : \u211d) (hx : x > 0) (hy : y > 0) (hz : z > 0) (hab : x * y * z = 1) : (x * y + y * z + z * x) ^ 2 \u2265 9 * x * y * z * (x * y + y * z + z * x) / (x + y + z):= by", "target": "\n  have h\u2080 : 0 < x * y := by positivity\n  have h\u2081 : 0 < y * z := by positivity\n  have h\u2082 : 0 < z * x := by positivity\n  have h\u2083 : 0 < x * y * z := by positivity\n  have h\u2084 : 0 < x * y * z * (x + y + z) := by positivity\n  field_simp [h\u2080, h\u2081, h\u2082, h\u2083, h\u2084]\n  rw [div_le_iff (by positivity)]\n  nlinarith [sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y), sq_nonneg (x * y + y * z + z * x - 3 * z * x), sq_nonneg (x * y + y * z + z * x - 3 * x * y), sq_nonneg (x * y + y * z + z * x - 3 * y * z)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_42736_plus (a b c d : \u211d) (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c \u2227 0 < d) (h\u2081 : a * b * c * d = 1) :\n      Real.sqrt (a^3 + 1) * Real.sqrt (b^3 + 1) * Real.sqrt (c^3 + 1) * Real.sqrt (d^3 + 1) \u2265 (2 / 3)^4 := by", "target": "\n  have : 0 < a := h\u2080.1\n  have : 0 < b := h\u2080.2.1\n  have : 0 < c := h\u2080.2.2.1\n  have : 0 < d := h\u2080.2.2.2\n  have : Real.sqrt (a^3 + 1) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg a]\n  have : Real.sqrt (b^3 + 1) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg b]\n  have : Real.sqrt (c^3 + 1) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg c]\n  have : Real.sqrt (d^3 + 1) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg d]\n  calc\n    Real.sqrt (a^3 + 1) * Real.sqrt (b^3 + 1) * Real.sqrt (c^3 + 1) * Real.sqrt (d^3 + 1) \u2265\n        1 * 1 * 1 * 1 := by gcongr <;> assumption\n    _ = 1 := by norm_num\n    _ \u2265 (2 / 3)^4 := by norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_53878_plus (a b c d : \u211d) (hab : 0 \u2264 a) (hbc : 0 \u2264 b) (hcd : 0 \u2264 c) (hda : 0 \u2264 d) (h : a + b + c + d = 1) : a * b * c * d \u2264 1 / 16 * (a + b + c + d) * (b + c + d + a) * (c + d + a + b) * (d + a + b + c):= by", "target": "\n  rw [h]\n  have h1 : 0 \u2264 a * b := by positivity\n  have h2 : 0 \u2264 a * b * c := by positivity\n  have h3 : 0 \u2264 a * b * c * d := by positivity\n  have h4 : 0 \u2264 a * b * d := by positivity\n  have h5 : 0 \u2264 a * c := by positivity\n  have h6 : 0 \u2264 a * d := by positivity\n  have h7 : 0 \u2264 b * c := by positivity\n  have h8 : 0 \u2264 b * d := by positivity\n  have h9 : 0 \u2264 c * d := by positivity\n  nlinarith [mul_self_nonneg (a - 1 / 4), mul_self_nonneg (b - 1 / 4), mul_self_nonneg (c - 1 / 4), mul_self_nonneg (d - 1 / 4)]\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_16619_plus : \u2200 a b : \u211d, a \u2208 Set.Ioo 0 1 \u2227 b \u2208 Set.Ioo 0 1 \u2192 logb a (logb b x) \u2264 0 \u2228 logb a (logb b x) \u2265 0 := by", "target": "\n  rintro a b \u27e8ha, hb\u27e9\n  by_cases h : logb a (logb b x) \u2264 0 <;> by_cases h' : logb a (logb b x) \u2265 0 <;> simp_all\n  <;> linarith [ha.2, ha.1, hb.2, hb.1]\n  <;> linarith [ha.2, ha.1, hb.2, hb.1]\n  <;> linarith [ha.2, ha.1, hb.2, hb.1]\n  <;> linarith [ha.2, ha.1, hb.2, hb.1]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_26014_plus : \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 3 \u2192 Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) * Real.sqrt (1 + c ^ 2) \u2265 1 + a * b * c := by", "target": "\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) * Real.sqrt (1 + c ^ 2) =\n      Real.sqrt ((1 + a ^ 2) * (1 + b ^ 2) * (1 + c ^ 2)) := by\n    rw [Real.sqrt_mul, Real.sqrt_mul] <;> positivity\n  rw [this]\n  apply le_sqrt_of_sq_le\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b), mul_self_nonneg (b * c), mul_self_nonneg (c * a)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_57161_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 3) (h : a * b + b * c + c * a = 3 * Real.sqrt 19 - 3): a ^ 2 / (a + b) ^ 2 + b ^ 2 / (b + c) ^ 2 + c ^ 2 / (c + a) ^ 2 \u2265 3 / 6:= by", "target": "\n  have h\u2081 : Real.sqrt 19 \u2265 4 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (19 - 4)]\n  have h\u2082 : a ^ 2 / (a + b) ^ 2 + b ^ 2 / (b + c) ^ 2 + c ^ 2 / (c + a) ^ 2 \u2265 3 / 6 := by\n    have h\u2083 : a ^ 2 / (a + b) ^ 2 + b ^ 2 / (b + c) ^ 2 + c ^ 2 / (c + a) ^ 2 \u2265 0 := by positivity\n    nlinarith\n  linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_11890_plus (n : \u2115) (hn : 1 < n) : (\u2203 k : \u2115, n \u2264 2^k) \u2228 (\u2203 k : \u2115, 2^k \u2264 n) := by", "target": "\n  by_cases h : n \u2264 2^n\n  left\n  exact \u27e8n, h\u27e9\n  right\n  use 0\n  omega\n  <;> omega"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_17570_plus : \u2200 a b c : \u211d, a + b + c = 1 \u2227 a ^ 2 + b ^ 2 + c ^ 2 = 4 \u2192 (b - c) * (a - b) \u2264 11 / 6 := by", "target": "\n  rintro a b c \u27e8habc, habs\u27e9\n  nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    sq_nonneg (a + b - 2 * c), sq_nonneg (b + c - 2 * a), sq_nonneg (c + a - 2 * b)]\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5946 (n : \u2115) : (4^n * Real.sqrt n) / (2 * n) < (2 * n).choose n \u2227 (2 * n).choose n < (4^n * Real.sqrt (3 * n + 1)) / (3 * n + 1) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5946_plus (n : \u2115) (hn : 1 < n) : (\u2211 k in Finset.Ico 1 n, (1 : \u211d) / k) \u2264 n - 1 \u2227 (\u2211 k in Finset.Ico 1 n, (1 : \u211d) / k) \u2264 (n : \u211d) * (1 + 1 / n):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_29215_plus : \u2200 a b : \u211d, a \u2264 3 \u2227 b \u2264 3 \u2192 a^2 + b^2 \u2265 2 * a * b \u2227 (a \u2264 3 \u2228 b \u2264 3) \u2228 a^2 + b^2 \u2265 2 * a * b \u2227 a \u2264 3 \u2227 b \u2264 3:= by", "target": "\n  intro a b h\u2080\n  rcases h\u2080 with \u27e8h\u2080_left, h\u2080_right\u27e9\n  by_cases h\u2081 : a \u2264 3\n  <;> by_cases h\u2082 : b \u2264 3\n  <;> simp_all\n  <;> nlinarith [sq_nonneg (a - b), sq_nonneg (a + b)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_672 (a b c : \u211d) (ha : a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0) (hab : a + b + c = 3) : a + a * b + a * b * c \u2264 4 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_672_plus (A : Fin 5 \u2192 \u211d) (hA : \u2200 i, 0 \u2264 A i) (hA_sum : \u2211 i, A i = 3) : \u2211 i, (A i * (A (i + 1) + 1)) \u2264 12 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_36878_plus (n : \u2115) (h\u2081 : \u2200 n, 1 < n \u2192 \u2211 k in Finset.Ico 1 n, (k + 1) ^ 2 \u2264 n ^ 2 * \u2211 k in Finset.Ico 1 n, k ^ 2) (h\u2082 : \u2211 k in Finset.Ico 1 4, (k + 1) ^ 2 \u2264 4 ^ 2 * \u2211 k in Finset.Ico 1 4, k ^ 2) : \u2211 k in Finset.Ico 1 (n + 1), (k + 1) ^ 2 \u2264 (n + 1) ^ 2 * \u2211 k in Finset.Ico 1 (n + 1), k ^ 2  := by", "target": "\n  have h\u2083 : \u2211 k in Finset.Ico 1 (n + 1), (k + 1) ^ 2 \u2264 (n + 1) ^ 2 * \u2211 k in Finset.Ico 1 (n + 1), k ^ 2 := by\n    have h\u2084 : \u2200 n, 1 < n \u2192 \u2211 k in Finset.Ico 1 n, (k + 1) ^ 2 \u2264 n ^ 2 * \u2211 k in Finset.Ico 1 n, k ^ 2 := by\n      intro n hn\n      exact h\u2081 n hn\n    cases n with\n    | zero => simp_all\n    | succ n =>\n      exact\n        calc\n          \u2211 k in Finset.Ico 1 (n + 1 + 1), (k + 1) ^ 2 \u2264 (n + 1 + 1) ^ 2 * \u2211 k in Finset.Ico 1 (n + 1 + 1), k ^ 2 := by\n            apply h\u2081\n            linarith\n          _ = (n + 1 + 1) ^ 2 * \u2211 k in Finset.Ico 1 (n + 1 + 1), k ^ 2 := by rfl\n  exact h\u2083\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_6401 (h : \u211d) (hh : 0 < h) (hh2 : (h / Real.sqrt 3 + 4 + h * Real.sqrt 3) = 16) : h = 3 * Real.sqrt 3 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_6401_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) (h2 : x ^ 2 + y ^ 2 + z ^ 2 + 3 * (x * y + y * z + z * x) = 40) (h3 : (x * y + y * z + z * x) ^ 2 + 3 * x * y * z * (x + y + z) = 300) (h4 : 0 < x + y + z) : x + y + z = 6 \u2228 x * y + y * z + z * x \u2264 5 * 3 * Real.sqrt 3:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_6570 (f : \u211d \u2192 \u211d): (\u2200 x y, f (y^2 + 2*x * f y + f x^2) = (y + f x) * (x + f y)) \u2194 \u2200 x, f x = x := by\n<hard theorem>", "target": "\ntheorem leanworkbook_6570_plus (n : \u2115) (hn : 0 < n) : (\u2203 f : \u211d \u2192 \u211d, \u2200 x y, f (x + y) + f (x - y) = 2 * f x * f y \u2227 \u2203 x, f x \u2260 0) \u2194 \u2203 f : \u211d \u2192 \u211d, \u2200 x, f x = x:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_28686_plus (x y : \u2124) (h\u2081 : (x - y) ^ 2 \u2223 x ^ 2 + y ^ 2) (h\u2082 : (x - y) ^ 2 \u2223 2 * x * y) : \u2203 k : \u2124, k \u2260 0 \u2227 (x - y) ^ 2 \u2223 k * x * y := by", "target": "\n  refine \u27e82, by norm_num, ?_\u27e9\n  simp only [mul_assoc] at h\u2081 h\u2082 \u22a2\n  ring_nf at h\u2081 h\u2082 \u22a2\n  simp_all"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_42626_plus (a b c d : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hd : 0 \u2264 d) (hab : 0 \u2264 a * b) (hcd : 0 \u2264 c * d) (habcd : 0 \u2264 a * b * c * d) : (a + b) ^ 2 * (c + d) ^ 2 \u2265 (a * c + b * d) ^ 2:= by", "target": "\n  simp only [sq, add_mul, mul_add, add_assoc, add_left_comm]\n  nlinarith [sq_nonneg (a * d - b * c), mul_nonneg ha hc, mul_nonneg hb hd, mul_nonneg hab hcd, mul_nonneg hb hc, mul_nonneg ha hd, mul_nonneg hab hcd, mul_nonneg ha hc, mul_nonneg hb hd, mul_nonneg hab hcd, mul_nonneg ha hd, mul_nonneg hb hc, mul_nonneg hab hcd]\n  <;> simp_all\n  <;> nlinarith\n  <;> simp_all\n  <;> nlinarith\n  <;> simp_all\n  <;> nlinarith\n  <;> simp_all\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_21944_plus : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c = 1 \u2192 (\u2203 x y z : \u211d, x + y + z = 1 \u2227 0 < x \u2227 0 < y \u2227 0 < z \u2227 x * y * z > 0 \u2227 (x^2 / (x^2 + a) + y^2 / (y^2 + b) + z^2 / (z^2 + c) \u2265 3 / 4)) := by", "target": "\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  use 1 / 3, 1 / 3, 1 / 3\n  constructor\n  linarith\n  constructor\n  linarith\n  constructor\n  linarith\n  constructor\n  linarith\n  constructor\n  norm_num\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n    mul_self_nonneg (a + b + c)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_39485_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : a + b + c = 1) (h : a ^ 2 + b ^ 2 + c ^ 2 = 3 * a * b * c) : 3 * (Real.sqrt 3 - 1) / 2 \u2264 (a / (a + 3) + b / (b + 3) + c / (c + 3)) \u2227 (a * b + b * c + c * a) \u2264 1:= by", "target": "\n  constructor\n  case left =>\n    have : 0 < a + b + c := by linarith\n    have : 0 < a * b := by nlinarith\n    have : 0 < b * c := by nlinarith\n    have : 0 < c * a := by nlinarith\n    have : Real.sqrt 3 \u2265 1 := by norm_num [Real.sqrt_le_sqrt]\n    field_simp\n    rw [div_le_div_iff]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n    positivity\n    positivity\n  case right =>\n    have : 0 < a * b := by nlinarith\n    have : 0 < b * c := by nlinarith\n    have : 0 < c * a := by nlinarith\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_41425_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 a \u2264 1) (hbc : 0 \u2264 b \u2227 b \u2264 1) (hca : 0 \u2264 c \u2227 c \u2264 1) (habc : a + b + c = 2) : 52 / 27 \u2264 a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2 + a ^ 2 + b ^ 2 + c ^ 2 \u2228 (a ^ 2 + b ^ 2 + c ^ 2 + 2 * (a * b + b * c + c * a)) * (1 / (a + b + c)) \u2264 16 * (a * b + b * c + c * a):= by", "target": "\n  rw [habc]\n  apply or_iff_not_imp_right.2\n  intro h\n  have h\u2081 : a ^ 2 + b ^ 2 + c ^ 2 \u2264 4 := by nlinarith\n  have h\u2082 : a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2 \u2264 4 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  nlinarith\n  <;> linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1522 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : a^2 * (b + c) + b^2 * (c + a) + c^2 * (a + b) \u2265 1 / 3 * (1 - a^2 - b^2 - c^2) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1522_plus : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c = 1 \u2192 a * (1 - b) ^ 2 * (1 - c) ^ 2 + b * (1 - a) ^ 2 * (1 - c) ^ 2 + c * (1 - a) ^ 2 * (1 - b) ^ 2 \u2265 0 \u2227 a * (1 - b) ^ 2 * (1 - c) ^ 2 + b * (1 - a) ^ 2 * (1 - c) ^ 2 + c * (1 - a) ^ 2 * (1 - b) ^ 2 \u2265 a * b * c:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_40677_plus : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c = 3 \u2192 a * (b + c) ^ 2 / (b + c + a) ^ 2 + b * (c + a) ^ 2 / (c + a + b) ^ 2 + c * (a + b) ^ 2 / (a + b + c) ^ 2 \u2265 3 * (a * b + b * c + c * a) / 12:= by", "target": "\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have h\u2081 : 0 < b + c := by linarith\n  have h\u2082 : 0 < c + a := by linarith\n  have h\u2083 : 0 < a + b := by linarith\n  have h\u2084 : 0 < b * c := by positivity\n  have h\u2085 : 0 < c * a := by positivity\n  have h\u2086 : 0 < a * b := by positivity\n  have h\u2087 : 0 < (b + c) ^ 2 := by positivity\n  have h\u2088 : 0 < (c + a) ^ 2 := by positivity\n  have h\u2089 : 0 < (a + b) ^ 2 := by positivity\n  have h\u2081\u2080 : 0 < (b + c + a) ^ 2 := by positivity\n  have h\u2081\u2081 : 0 < (c + a + b) ^ 2 := by positivity\n  have h\u2081\u2082 : 0 < (a + b + c) ^ 2 := by positivity\n  have h\u2081\u2083 : a * (b + c) ^ 2 / (b + c + a) ^ 2 \u2265 a * (b + c) ^ 2 / (3 : \u211d) ^ 2 := by\n    gcongr\n    nlinarith\n  have h\u2081\u2084 : b * (c + a) ^ 2 / (c + a + b) ^ 2 \u2265 b * (c + a) ^ 2 / (3 : \u211d) ^ 2 := by\n    gcongr\n    nlinarith\n  have h\u2081\u2085 : c * (a + b) ^ 2 / (a + b + c) ^ 2 \u2265 c * (a + b) ^ 2 / (3 : \u211d) ^ 2 := by\n    gcongr\n    nlinarith\n  have h\u2081\u2086 : a * (b + c) ^ 2 / (3 : \u211d) ^ 2 + b * (c + a) ^ 2 / (3 : \u211d) ^ 2 + c * (a + b) ^ 2 / (3 : \u211d) ^ 2 \u2265 3 * (a * b + b * c + c * a) / 12 := by\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_34522_plus (a b c x y : \u211d) (hab : 0 < a \u2227 0 < b \u2227 0 < c) (h : a + b + c = 1) (hx : 0 < x) (hy : 0 < y) : a * x * (a * y) + b * x * (b * y) + c * x * (c * y) \u2265 a * b * x * y:= by", "target": "\n  have h\u2080 : 0 < a * y := by nlinarith\n  have h\u2081 : 0 < b * x := by nlinarith\n  have h\u2082 : 0 < c * y := by nlinarith\n  have h\u2083 : 0 < a * x := by nlinarith\n  have h\u2084 : 0 < b * y := by nlinarith\n  have h\u2085 : 0 < c * x := by nlinarith\n  have h\u2086 : 0 < a * x * y := by nlinarith\n  have h\u2087 : 0 < b * x * y := by nlinarith\n  have h\u2088 : 0 < c * x * y := by nlinarith\n  nlinarith [sq_nonneg (a * y - b * y), sq_nonneg (b * x - c * x), sq_nonneg (c * y - a * y),\n    sq_nonneg (a * x - b * x), sq_nonneg (b * y - c * y), sq_nonneg (c * x - a * x)]\n  <;> simp_all\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_52867_plus (a b c : \u211d) (hab : 0 \u2264 a) (hbc : 0 \u2264 b) (hca : 0 \u2264 c) (habc : a + b + c = 1) : (1/3 : \u211d) \u2265 a ^ 2 * b ^ 2 * c ^ 2 * (a + b + c):= by", "target": "\n  rw [habc]\n  have h\u2080 : 0 \u2264 a * b := by positivity\n  have h\u2081 : 0 \u2264 a * b * c := by positivity\n  have h\u2082 : 0 \u2264 a * b * c * c := by positivity\n  have h\u2083 : 0 \u2264 a * b * c * c * a := by positivity\n  have h\u2084 : 0 \u2264 a * b * c * c * a * b := by positivity\n  have h\u2085 : 0 \u2264 a * b * c * c * a * b * a := by positivity\n  have h\u2086 : 0 \u2264 a * b * c * c * a * b * a * b := by positivity\n  have h\u2087 : 0 \u2264 a * b * c * c * a * b * a * b * c := by positivity\n  nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (b - c),\n    mul_self_nonneg (c - a)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2601 (a b c d : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hd : 0 \u2264 d) : (a + b + c + d) * (a * b + a * c + b * c + a * d + b * d + c * d) \u2265 12 * Real.sqrt ((a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) * a * b * c * d) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2601_plus : \u2200 a b c d : \u211d, 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 0 \u2264 d \u2192 (a + b + c + d) * (a * b + a * c + b * c + a * d + b * d + c * d) \u2265 12 * Real.sqrt ((a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) * a * b * c * d) \u2228 (\u2203 a b c d : \u211d, (0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 0 \u2264 d) \u2227 (a + b + c + d) * (a * b + a * c + b * c + a * d + b * d + c * d) < 12 * Real.sqrt ((a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) * a * b * c * d)) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_42834_plus : \u2200 a b : \u211d, a * b \u2264 1 \u2192 \u2203 g : \u211d \u2192 \u211d, Continuous g \u2227 \u2200 x : \u211d, 0 \u2264 x \u2227 x \u2264 1 \u2192 \u2211' n : \u2115, ((-1:\u211d)^(n+1))/(3*n-2) \u2264 g x:= by", "target": "\n  intro a b hab\n  use fun x => \u2211' n : \u2115, ((-1:\u211d)^(n+1))/(3*n-2)\n  exact \u27e8by continuity, fun x hx => le_rfl\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_10114_plus  (x y z : \u211d)\n  (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z)\n  (h\u2081 : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z)\n  (h\u2082 : 3 * (Real.sqrt x)^2 + (Real.sqrt y)^2 + (Real.sqrt z)^2 = 3 * x + y + z)\n  (h\u2083 : Real.sqrt (x * y) = 0 \u2228 Real.sqrt (x * z) = 0 \u2228 Real.sqrt (y * z) = 0) :\n   Real.sqrt x + Real.sqrt y + Real.sqrt z \u2265 Real.sqrt (3 * (x + y + z))  / 3  := by", "target": "\n  have h\u2084 : 0 \u2264 Real.sqrt x := Real.sqrt_nonneg x\n  have h\u2085 : 0 \u2264 Real.sqrt y := Real.sqrt_nonneg y\n  have h\u2086 : 0 \u2264 Real.sqrt z := Real.sqrt_nonneg z\n  have h\u2087 : Real.sqrt x + Real.sqrt y + Real.sqrt z \u2265 0 := by linarith\n  have h\u2088 : Real.sqrt (3 * (x + y + z)) \u2264 3 * (Real.sqrt x + Real.sqrt y + Real.sqrt z) := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith [sq_sqrt (show 0 \u2264 x from h\u2081.1), sq_sqrt (show 0 \u2264 y from h\u2081.2.1),\n        sq_sqrt (show 0 \u2264 z from h\u2081.2.2), sq_nonneg (Real.sqrt x - Real.sqrt y),\n        sq_nonneg (Real.sqrt x - Real.sqrt z), sq_nonneg (Real.sqrt y - Real.sqrt z)]\n  linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_24605_plus : \u2200 a b c R : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a + b > c \u2227 b + c > a \u2227 a + c > b \u2192 R > 0 \u2192 9 * R^2 \u2265 a^2 + b^2 + c^2 + (a - b)^2 + (b - c)^2 + (c - a)^2 \u2228  a + b + c \u2264 3 * R \u2228 3 * R \u2264 a + b + c:= by", "target": "\n  intro a b c R habc habR hR\n  refine' or_iff_not_imp_left.mpr fun h => _\n  apply or_iff_not_imp_left.mpr\n  intro h'\n  nlinarith [h, h', hR]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_7921_plus (A : Fin 5 \u2192 \u211d) (h\u2081 : \u2200 i, 0 \u2264 A i) (h\u2082 : \u2211 i, A i = 1) (h\u2083 : \u2211 i, (A i) ^ 2 = 1) : \u2211 i, (A i) ^ 3 \u2264 1 \u2227 \u2211 i, (A i) ^ 4 \u2264 1:= by", "target": "\n  have h\u2084 : \u2211 i, (A i) ^ 3 \u2264 1 := by\n    have h\u2084\u2081 : \u2211 i, (A i) ^ 3 \u2264 \u2211 i, A i := by\n      apply Finset.sum_le_sum\n      intro i _\n      have h\u2084\u2081\u2081 : 0 \u2264 A i := h\u2081 i\n      have h\u2084\u2081\u2082 : A i \u2264 1 := by\n        have h\u2084\u2081\u2083 : \u2211 i, A i = 1 := h\u2082\n        have h\u2084\u2081\u2084 : A i \u2264 \u2211 i, A i := by\n          apply Finset.single_le_sum\n          \u00b7 intro i _\n            exact h\u2081 i\n          \u00b7 simp [h\u2082]\n        linarith\n      nlinarith [pow_le_pow_of_le_left h\u2084\u2081\u2081 h\u2084\u2081\u2082 2]\n    simp [h\u2082] at h\u2084\u2081\n    linarith\n  have h\u2085 : \u2211 i, (A i) ^ 4 \u2264 1 := by\n    have h\u2085\u2081 : \u2211 i, (A i) ^ 4 \u2264 \u2211 i, A i := by\n      apply Finset.sum_le_sum\n      intro i _\n      have h\u2085\u2081\u2081 : 0 \u2264 A i := h\u2081 i\n      have h\u2085\u2081\u2082 : A i \u2264 1 := by\n        have h\u2085\u2081\u2083 : \u2211 i, A i = 1 := h\u2082\n        have h\u2085\u2081\u2084 : A i \u2264 \u2211 i, A i := by\n          apply Finset.single_le_sum\n          \u00b7 intro i _\n            exact h\u2081 i\n          \u00b7 simp [h\u2082]\n        linarith\n      nlinarith [pow_le_pow_of_le_left h\u2085\u2081\u2081 h\u2085\u2081\u2082 3]\n    simp [h\u2082] at h\u2085\u2081\n    linarith\n  exact \u27e8h\u2084, h\u2085\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_31112_plus : \u2200 a b c : \u211d, 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 a^2 + b^2 + c^2 + a * b * c = 4 \u2192 (a + b + c + 1)^2 \u2265 16 * Real.sqrt ((a + b + c)^3 / 27) \u2227 (a + b + c + 1)^2 \u2265 4 * (a * b + b * c + c * a) / 3:= by", "target": "\n  rintro a b c \u27e8ha, hb, hc, h\u27e9\n  have h\u2081 : 0 \u2264 a * b * c := by positivity\n  have h\u2082 : 0 \u2264 a * b + b * c + c * a := by positivity\n  have h\u2083 : 0 \u2264 (a + b + c)^2 := by positivity\n  have h\u2084 : 0 \u2264 (a + b + c)^3 := by positivity\n  have h\u2085 : 0 \u2264 Real.sqrt ((a + b + c)^3 / 27) := by positivity\n  have h\u2086 : (a + b + c + 1)^2 \u2265 16 * Real.sqrt ((a + b + c)^3 / 27) := by\n    nlinarith [sq_sqrt (show 0 \u2264 (a + b + c)^3 / 27 from by positivity),\n      mul_self_nonneg (a + b + c - 3)]\n  have h\u2087 : (a + b + c + 1)^2 \u2265 4 * (a * b + b * c + c * a) / 3 := by\n    nlinarith [mul_self_nonneg (a + b + c - 3), mul_self_nonneg (a - b),\n      mul_self_nonneg (b - c), mul_self_nonneg (c - a)]\n  exact \u27e8h\u2086, h\u2087\u27e9\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_67741_plus : \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b + b * c + c * a = 3 \u2192 a ^ 2 / (b + c) + b ^ 2 / (a + c) + c ^ 2 / (a + b) \u2265 (a * b + b * c + c * a) / 2:= by", "target": "\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have h\u2081 : 0 < b + c := by linarith\n  have h\u2082 : 0 < a + c := by linarith\n  have h\u2083 : 0 < a + b := by linarith\n  have h\u2084 : 0 < b * c := by positivity\n  have h\u2085 : 0 < a * c := by positivity\n  have h\u2086 : 0 < a * b := by positivity\n  have h\u2087 : 0 < (b + c) * (a + c) * (a + b) := by positivity\n  have h\u2088 : 0 < (b + c) * (a + c) * (a + b) * (b + c) * (a + c) * (a + b) := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n  <;> linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_24013_plus : \u2200 a b c d : \u211d, a^2 + b^2 + c^2 + d^2 = 1 \u2192 \u2203 x : \u211d, x \u2208 Set.Icc 0 1 \u2227 a * b * c * d \u2264 (1 - x) * x:= by", "target": "\n  rintro a b c d h\n  refine' \u27e81 / 2, by norm_num, _\u27e9\n  nlinarith [sq_nonneg (a - b), sq_nonneg (c - d), sq_nonneg (a + b), sq_nonneg (c + d),\n    sq_nonneg (a * b - c * d), sq_nonneg (a * b + c * d)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_40382_plus : \u2200 x : \u211d, 3 * x^2 - 18 * x + 52 > 0 \u2227 (\u2200 x : \u211d, 2 * x^2 - 12 * x + 162 > 0) \u2227 (\u2200 x : \u211d, -x^2 + 6 * x + 28 >= 0 \u2192 3 - Real.sqrt 37 <= x \u2227 x <= 3 + Real.sqrt 37) \u2228 \u2203 x : \u211d, 3 * x^2 - 18 * x + 52 <= 0 \u2228 \u2203 x : \u211d, 2 * x^2 - 12 * x + 162 <= 0 \u2228 \u2203 x : \u211d, -x^2 + 6 * x + 28 < 0 \u2227 (3 - Real.sqrt 37 > x \u2228 x > 3 + Real.sqrt 37):= by", "target": "\n  exact fun x => by\n    apply Or.inl\n    constructor\n    \u00b7\n      nlinarith [sq_nonneg (x - 3), sq_nonneg (x - 4)]\n    \u00b7\n      constructor\n      \u00b7\n        intro x\n        nlinarith [sq_nonneg (x - 3)]\n      \u00b7\n        intro x hx\n        constructor\n        \u00b7\n          nlinarith [sq_sqrt (show 0 \u2264 37 by norm_num),\n            Real.sqrt_nonneg 37,\n            hx]\n        \u00b7\n          nlinarith [sq_sqrt (show 0 \u2264 37 by norm_num),\n            Real.sqrt_nonneg 37,\n            hx]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_4663_plus (x y : \u211d) (h\u2081 : 0 \u2264 x \u2227 0 \u2264 y) (h\u2082 : 0 \u2264 x + y) :\n   Real.sqrt (x * y) + Real.sqrt ((x^2 + y^2) / 2) \u2264 Real.sqrt 3 * (x + y):= by", "target": "\n  have h\u2083 : 0 \u2264 x * y := by nlinarith\n  have h\u2084 : 0 \u2264 (x^2 + y^2) / 2 := by nlinarith\n  have h\u2085 : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg 3\n  have h\u2086 : 0 \u2264 x + y := by nlinarith\n  have h\u2087 : 0 \u2264 Real.sqrt (x * y) := Real.sqrt_nonneg (x * y)\n  have h\u2088 : 0 \u2264 Real.sqrt ((x^2 + y^2) / 2) := Real.sqrt_nonneg ((x^2 + y^2) / 2)\n  have h\u2089 : 0 \u2264 Real.sqrt 3 * (x + y) := by nlinarith\n  nlinarith [sq_sqrt (show 0 \u2264 x * y from h\u2083),\n    sq_sqrt (show 0 \u2264 (x^2 + y^2) / 2 from h\u2084),\n    sq_sqrt (show 0 \u2264 3 from by norm_num),\n    sq_nonneg (x - y),\n    sq_nonneg (Real.sqrt (x * y) - Real.sqrt ((x^2 + y^2) / 2))]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_656 : \u2200 a b c : \u211d, 4 * (a * b + b * c + c * a) * (a^2 * b + a * b^2 + b^2 * c + b * c^2 + c^2 * a + c * a^2) \u2264 (a + b + c)^2 * (a + b) * (b + c) * (c + a) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_656_plus : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 a * b * c > 0 \u2192 Real.sqrt (a^2 + b^2 + c^2) \u2265 (Real.sqrt (2 * (a * b + b * c + c * a)) - (a + b + c)):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_51271_plus (n : \u2115) (hn : 1 < n) : fib (2 * n - 1) * fib (2 * n + 1) \u2264 (fib (2 * n)) ^ 2 + 1 := by", "target": "\n  cases n with\n  | zero => contradiction\n  | succ n =>\n    cases n with\n    | zero => contradiction\n    | succ n =>\n      induction' n with n ih\n      all_goals simp_all [fib_add_two, fib_two_mul_add_one, pow_two, mul_add]\n      all_goals nlinarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1796 (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b + b * c + c * a > 0) : (a^2 + b * c) / (b^2 + b * c + c^2) + (b^2 + c * a) / (c^2 + c * a + a^2) + (c^2 + a * b) / (a^2 + a * b + b^2) \u2265 2 * (a^2 + b^2 + c^2) / (a + b + c)^2 + 4 / 3 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1796_plus : \u2200 a b c : \u211d, 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 a * b + b * c + c * a > 0 \u2192 (a^2 + b * c) / (b^2 + b * c + c^2) + (b^2 + c * a) / (c^2 + c * a + a^2) + (c^2 + a * b) / (a^2 + a * b + b^2) \u2265 2 * (a^2 + b^2 + c^2) / (a + b + c)^2 + 4 / 3 \u2228 (a^2 + b * c) / (b^2 + b * c + c^2) + (b^2 + c * a) / (c^2 + c * a + a^2) + (c^2 + a * b) / (a^2 + a * b + b^2) < 2 * (a^2 + b^2 + c^2) / (a + b + c)^2 + 4 / 3:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_22172_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (h : a + b + c = 1) : (a * b) ^ 2 / (a + b) ^ 2 + (b * c) ^ 2 / (b + c) ^ 2 + (c * a) ^ 2 / (c + a) ^ 2 \u2264 1:= by", "target": "\n  have h\u2080 : a * b \u2265 0 \u2227 b * c \u2265 0 \u2227 c * a \u2265 0 := by\n    exact \u27e8mul_nonneg hab hb, mul_nonneg hb hc, mul_nonneg hc hab\u27e9\n  have h\u2081 : a * b \u2264 a + b := by\n    nlinarith [sq_nonneg (a - b), h]\n  have h\u2082 : b * c \u2264 b + c := by\n    nlinarith [sq_nonneg (b - c), h]\n  have h\u2083 : c * a \u2264 c + a := by\n    nlinarith [sq_nonneg (c - a), h]\n  have h\u2084 : (a * b) ^ 2 / (a + b) ^ 2 \u2264 1 / 4 := by\n    exact div_le_of_nonneg_of_le_mul (sq_nonneg (a + b)) (by nlinarith) (by nlinarith [sq_nonneg (a - b)])\n  have h\u2085 : (b * c) ^ 2 / (b + c) ^ 2 \u2264 1 / 4 := by\n    exact div_le_of_nonneg_of_le_mul (sq_nonneg (b + c)) (by nlinarith) (by nlinarith [sq_nonneg (b - c)])\n  have h\u2086 : (c * a) ^ 2 / (c + a) ^ 2 \u2264 1 / 4 := by\n    exact div_le_of_nonneg_of_le_mul (sq_nonneg (c + a)) (by nlinarith) (by nlinarith [sq_nonneg (c - a)])\n  nlinarith [h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_40289_plus (n : \u2115) (hn : 1 < n) : \u2203 a b : \u2115, a * b \u2223 a * n + b * n \u2227 a * b \u2264 n * n:= by", "target": "\n  refine' \u27e8n, 1, _, _\u27e9 <;> simp [mul_one, mul_comm, mul_add, add_mul, Nat.mul_le_mul_left, hn]\n  <;> nlinarith\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_30901_plus (a b c k : \u211d) (h\u2081 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2082 : 0 < k + 2) (h\u2083 : 0 < a + b + c) (h\u2084 : 0 < a * b * c) (h\u2085 : 0 < a + b + b + c + c + a) (h\u2086 : 0 < a * b * c * (a + b + b + c + c + a)) : 2 / (k + 2) = a / (a + b + c) \u2194 k + 2 = 2 * (a + b + c) / a := by", "target": "\n  constructor <;> intro h\n  field_simp [h\u2081.1.ne', h\u2081.2.1.ne', h\u2081.2.2.ne', h\u2082.ne', h\u2083.ne', h\u2084.ne', h\u2085.ne', h\u2086.ne'] at h \u22a2\n  ring_nf at h \u22a2\n  nlinarith\n  field_simp [h\u2081.1.ne', h\u2081.2.1.ne', h\u2081.2.2.ne', h\u2082.ne', h\u2083.ne', h\u2084.ne', h\u2085.ne', h\u2086.ne'] at h \u22a2\n  ring_nf at h \u22a2\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_33063_plus (a b c k : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (\u2203 (x y z : \u211d), 0 < x \u2227 0 < y \u2227 0 < z \u2227 (x * y / Real.sqrt (x * y + k * z ^ 2) + y * z / Real.sqrt (y * z + k * x ^ 2) + z * x / Real.sqrt (z * x + k * y ^ 2) \u2265 Real.sqrt 3 * Real.sqrt (x * y + y * z + z * x) / Real.sqrt (k + 1))):= by", "target": "\n  use 1, 1, 1\n  constructor\n  <;> norm_num\n  <;>\n  apply le_of_pow_le_pow_left two_ne_zero (by positivity)\n  <;>\n  field_simp [ha, hb, hc]\n  <;>\n  ring_nf\n  <;>\n  norm_num\n  <;>\n  linarith\n  <;>\n  linarith\n  <;>\n  linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_81546_plus : \u2200 \u03b5 : \u211d, \u03b5 > 0 \u2192 \u2203 N : \u2115, \u2200 n : \u2115, n \u2265 N \u2192 |(\u220f i in Finset.Icc 1 n, (Real.sqrt (1 + 1 / i) / (1 + 1 / (2 * i)))) - (Real.sqrt (n + 1) * (2 * n)!! / (2 * n + 1)!!)| < \u03b5 \u2228 |(\u220f i in Finset.Icc 1 n, (Real.sqrt (1 + 1 / i) / (1 + 1 / (2 * i)))) - (Real.sqrt (n + 1) * (2 * n)!! / (2 * n + 1)!!)| \u2265 \u03b5  := by", "target": "\n  intro \u03b5 h\u03b5\n  use 1\n  intro n hn\n  by_cases h : |(\u220f i in Finset.Icc 1 n, (Real.sqrt (1 + 1 / i) / (1 + 1 / (2 * i)))) - (Real.sqrt (n + 1) * (2 * n)!! / (2 * n + 1)!!)| < \u03b5\n  exact Or.inl h\n  exact Or.inr (by simpa [h] using h)\n  <;> norm_num\n  <;> aesop\n  <;> aesop\n  <;> aesop"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2742 (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (h : (x + 2 / y) * (y / x + 2) = 10) : 2 \u2264 2 * x + y \u2227 2 * x + y \u2264 8 \u2227 2 \u2264 2 / x + y \u2227 2 / x + y \u2264 8 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2742_plus (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (h : (x + 2 / y) * (y / x + 2) = 10) : (x - 2 / y) ^ 2 + (y / x - 2) ^ 2 \u2265 0 \u2227 (x + 2 / y) ^ 2 + (y / x + 2) ^ 2 \u2265 4 * x * y / (x * y) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_16195_plus (a b c : \u211d) (hab : 0 < a) (hb : 0 < b) (hc : 0 < c) : a / (b ^ 2 + c ^ 2) + b / (c ^ 2 + a ^ 2) + c / (a ^ 2 + b ^ 2) \u2265 3 * (3 : \u211d) ^ (1 / 4) / (2 * (a ^ 4 + b ^ 4 + c ^ 4) ^ (1 / 4)) \u2228 \u2203 x y z : \u211d, x \u2264 y \u2227 y \u2264 z \u2227 a / (b ^ 2 + c ^ 2) + b / (c ^ 2 + a ^ 2) + c / (a ^ 2 + b ^ 2) < 3 * (3 : \u211d) ^ (1 / 4) / (2 * (a ^ 4 + b ^ 4 + c ^ 4) ^ (1 / 4)):= by", "target": "\n  by_cases h : a / (b ^ 2 + c ^ 2) + b / (c ^ 2 + a ^ 2) + c / (a ^ 2 + b ^ 2) \u2265 3 * (3 : \u211d) ^ (1 / 4) / (2 * (a ^ 4 + b ^ 4 + c ^ 4) ^ (1 / 4))\n  exact Or.inl h\n  exact Or.inr \u27e80, 0, 0, by norm_num, by norm_num, by linarith\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_7844_plus (A : Fin 5 \u2192 \u211d) (h\u2081 : \u2211 i, A i = 4) (h\u2082 : \u2211 i, (A i)^2 = 10) : \u2211 i, (A i)^4 \u2264 160  := by", "target": "\n  have : (\u2211 i : Fin 5, A i ^ 2) ^ 2 \u2264 (\u2211 i : Fin 5, A i ^ 2) * (\u2211 i : Fin 5, A i ^ 2) := by\n    nlinarith\n  simp_all [Fin.sum_univ_succ]\n  nlinarith [sq_nonneg (A 0 ^ 2 - A 1 ^ 2), sq_nonneg (A 0 ^ 2 - A 2 ^ 2), sq_nonneg (A 0 ^ 2 - A 3 ^ 2),\n    sq_nonneg (A 0 ^ 2 - A 4 ^ 2), sq_nonneg (A 1 ^ 2 - A 2 ^ 2), sq_nonneg (A 1 ^ 2 - A 3 ^ 2),\n    sq_nonneg (A 1 ^ 2 - A 4 ^ 2), sq_nonneg (A 2 ^ 2 - A 3 ^ 2), sq_nonneg (A 2 ^ 2 - A 4 ^ 2),\n    sq_nonneg (A 3 ^ 2 - A 4 ^ 2)]\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_42601_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) : \u2203 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 (a^2 + b^2) / (a + b) + (b^2 + c^2) / (b + c) + (c^2 + a^2) / (c + a) < a + b + c \u2228 (a^2 + b^2) / (a + b) + (b^2 + c^2) / (b + c) + (c^2 + a^2) / (c + a) \u2265 a + b + c \u2227 (a^2 + b^2) / (a + b) + (b^2 + c^2) / (b + c) + (c^2 + a^2) / (c + a) \u2265 a + b + c \u2227 (a^2 + b^2) / (a + b) + (b^2 + c^2) / (b + c) + (c^2 + a^2) / (c + a) \u2265 a + b + c \u2228 (a^2 + b^2) / (a + b) + (b^2 + c^2) / (b + c) + (c^2 + a^2) / (c + a) \u2265 a + b + c \u2227 (a^2 + b^2) / (a + b) + (b^2 + c^2) / (b + c) + (c^2 + a^2) / (c + a) \u2265 a + b + c \u2227 (a^2 + b^2) / (a + b) + (b^2 + c^2) / (b + c) + (c^2 + a^2) / (c + a) \u2265 a + b + c:= by", "target": "\n  refine' \u27e81, 1, 1, _\u27e9\n  simp only [add_assoc, add_right_comm, add_left_comm, add_comm]\n  norm_num\n  <;>\n    exact\n      Or.inl\n        (by norm_num)"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1172 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a + b + c) * (1 / a + 1 / b + 1 / c) \u2265 9 * Real.sqrt ((a ^ 2 + b ^ 2 + c ^ 2) / (a * b + b * c + a * c)) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1172_plus : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 a * b * c > 0 \u2227 (\u2203 x y z : \u211d, x * y * z > 0 \u2227 x ^ 2 + y ^ 2 + z ^ 2 = a ^ 2 + b ^ 2 + c ^ 2 \u2227 (x / y + y / z + z / x) ^ 2 \u2265 3) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5032 (k : \u2115) (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 3) : k * a ^ 2 + k * b ^ 2 + c ^ 2 + a * b + b * c + c * a \u2265 18 * k / (2 * k + 1) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5032_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 3) (h' : x * y + y * z + z * x = 3 * k) : x ^ 2 + y ^ 2 + z ^ 2 + (x * y + y * z + z * x) * (x * z + y * x + z * y) / (x * z + y * x + z * y) \u2265 3 * (x * y + y * z + z * x) / 3:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_53656_plus : \u2200 a b c : \u211d, a + b + c = 1 \u2192 0 < a \u2227 0 < b \u2227 0 < c \u2192 a * b * c \u2260 0 \u2192 (a + 2 * b * c) / (a ^ 2 + 1) + (b + 2 * c * a) / (b ^ 2 + 1) + (c + 2 * a * b) / (c ^ 2 + 1) \u2264 3 / 2  := by", "target": "\n  rintro a b c h\u2080 h\u2081 h\u2082\n  have : 0 < a * b := by nlinarith\n  have : 0 < b * c := by nlinarith\n  have : 0 < c * a := by nlinarith\n  have : (a + 2 * b * c) / (a ^ 2 + 1) \u2264 1 / 2 := by\n    rw [div_le_iff (by nlinarith)]\n    nlinarith [sq_nonneg (a - 1), sq_nonneg (b - c)]\n  have : (b + 2 * c * a) / (b ^ 2 + 1) \u2264 1 / 2 := by\n    rw [div_le_iff (by nlinarith)]\n    nlinarith [sq_nonneg (b - 1), sq_nonneg (c - a)]\n  have : (c + 2 * a * b) / (c ^ 2 + 1) \u2264 1 / 2 := by\n    rw [div_le_iff (by nlinarith)]\n    nlinarith [sq_nonneg (c - 1), sq_nonneg (a - b)]\n  linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_57344_plus (a b c x y z : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : a * b + b * c + c * a >= x * y + y * z + z * x) (h : a * b * c > 0) : (x / a) ^ 2 * (b * c - y * z) + (y / b) ^ 2 * (c * a - z * x) + (z / c) ^ 2 * (a * b - x * y) \u2265 0 \u2228 (x / a) ^ 2 * (b * c - y * z) + (y / b) ^ 2 * (c * a - z * x) + (z / c) ^ 2 * (a * b - x * y) < 0 \u2227 a * b + b * c + c * a >= x * y + y * z + z * x:= by", "target": "\n  by_cases h1 : (x / a) ^ 2 * (b * c - y * z) + (y / b) ^ 2 * (c * a - z * x) + (z / c) ^ 2 * (a * b - x * y) \u2265 0\n  exact Or.inl h1\n  exact Or.inr \u27e8by linarith, by linarith\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_4484_plus (a b c : \u211d) (hab : a > 0 \u2227 b > 0 \u2227 c > 0) (h : a * b * c = 1) : (1 / a + 1 / b + 1 / c) ^ 2 \u2265 1 / a ^ 2 + 4 / (b ^ 2 + c ^ 2) + 18 / (a ^ 2 + b ^ 2 + c ^ 2) \u2228 (1 / a + 1 / b + 1 / c) ^ 2 < 1 / a ^ 2 + 4 / (b ^ 2 + c ^ 2) + 18 / (a ^ 2 + b ^ 2 + c ^ 2) := by", "target": "\n  by_cases h\u2080 : (1 / a + 1 / b + 1 / c) ^ 2 \u2265 1 / a ^ 2 + 4 / (b ^ 2 + c ^ 2) + 18 / (a ^ 2 + b ^ 2 + c ^ 2)\n  exact Or.inl h\u2080\n  exact Or.inr (by linarith)"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_76397_plus (n : \u2115) (hn : 0 < n) (a : \u2115 \u2192 \u211d) (ha : \u2200 i, a i \u2260 0) (hab : \u2200 i, a i \u2260 a (i + 1)) (h : \u2200 i, r * a i = a (i + 1)) : \u2211 i in Finset.range n, (1 / (a i ^ 2 - a (i + 1) ^ 2)) \u2265 0 \u2228 \u2211 i in Finset.range n, (1 / (a i ^ 2 - a (i + 1) ^ 2)) < 0 := by", "target": "\n  by_cases h\u2081 : \u2211 i in Finset.range n, (1 / (a i ^ 2 - a (i + 1) ^ 2)) \u2265 0\n  exacts [Or.inl h\u2081, Or.inr (by linarith)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_28271_plus : \u2200 a b : \u211d, a \u2264 1 \u2227 1 \u2264 b \u2192 a * b \u2264 max 1 b := by", "target": "\n  intro a b h\n  rcases le_total a 1 with (h\u2081 | h\u2081) <;> rcases le_total b 1 with (h\u2082 | h\u2082) <;>\n    simp_all [mul_comm, mul_left_comm, mul_assoc]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5654 (a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (hab : a * b + b * c + c * a > 0) : 2 * ((a - b) ^ 2 * (a + b - c) ^ 2 * (b + c) * (c + a) + (b - c) ^ 2 * (b + c - a) ^ 2 * (c + a) * (a + b) + (c - a) ^ 2 * (c + a - b) ^ 2 * (a + b) * (b + c)) \u2265 3 * ((a - b) ^ 2 * (b - c) ^ 2 * (c - a) ^ 2) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5654_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) : (1 - a * b) ^ 2 * (1 - b * c) ^ 2 * (1 - c * a) ^ 2 \u2264 1:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_38008_plus : \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 1 \u2192\n      Real.sqrt (3 * (a ^ 2 * b + b ^ 2 * c + c ^ 2 * a)) \u2265\n     2 * (Real.sqrt (a * b ^ 2 + b * c ^ 2 + c * a ^ 2) - Real.sqrt (b * c ^ 2 + c * a ^ 2 + a * b ^ 2)):= by", "target": "\n  intro a b c h\n  have h\u2081 : 0 \u2264 a * b := by nlinarith\n  have h\u2082 : 0 \u2264 b * c := by nlinarith\n  have h\u2083 : 0 \u2264 c * a := by nlinarith\n  have h\u2084 : 0 \u2264 Real.sqrt (a * b ^ 2 + b * c ^ 2 + c * a ^ 2) := by positivity\n  have h\u2085 : 0 \u2264 Real.sqrt (b * c ^ 2 + c * a ^ 2 + a * b ^ 2) := by positivity\n  have h\u2086 : 0 \u2264 Real.sqrt (3 * (a ^ 2 * b + b ^ 2 * c + c ^ 2 * a)) := by positivity\n  nlinarith [sq_sqrt (show 0 \u2264 a * b ^ 2 + b * c ^ 2 + c * a ^ 2 by nlinarith),\n    sq_sqrt (show 0 \u2264 b * c ^ 2 + c * a ^ 2 + a * b ^ 2 by nlinarith),\n    sq_sqrt (show 0 \u2264 3 * (a ^ 2 * b + b ^ 2 * c + c ^ 2 * a) by nlinarith),\n    sq_nonneg (Real.sqrt (a * b ^ 2 + b * c ^ 2 + c * a ^ 2) - Real.sqrt (b * c ^ 2 + c * a ^ 2 + a * b ^ 2))]\n  <;> linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_39977_plus : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a * b * c = 1 \u2192 \u2211 k in Finset.Icc 1 3, 1 / (a * b) + 1 / (b * c) + 1 / (c * a) \u2265 3:= by", "target": "\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have : 0 < a * b := by positivity\n  have : 0 < b * c := by positivity\n  have : 0 < c * a := by positivity\n  have : 0 < a * b * (b * c) := by positivity\n  have : 0 < b * c * (c * a) := by positivity\n  have : 0 < c * a * (a * b) := by positivity\n  field_simp [habc]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_self_nonneg (a * b - 1), mul_self_nonneg (b * c - 1), mul_self_nonneg (c * a - 1)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_913 (a b c : \u211d) : (1 + a + b) / 3 \u2265 (a * b)^(1/3) \u2227 (1 + b + c) / 3 \u2265 (b * c)^(1/3) \u2227 (1 + c + a) / 3 \u2265 (c * a)^(1/3) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_913_plus (A : Fin 5 \u2192 \u211d) (h\u2081 : \u2200 i, 0 \u2264 A i) (h\u2082 : \u2211 i, A i = 1) : (1 / 5) * (\u2211 i, (1 + A i) ^ 2) \u2265 1 / 3:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_42830_plus (x : \u211d) (hx : 0 \u2264 x) :  Real.sqrt (x ^ 2 - 1) \u2264 x * Real.sqrt (1 + (x ^ 2 - 1))  := by", "target": "\n  have h\u2081 : 0 \u2264 x ^ 2 - 1 \u2228 x ^ 2 - 1 < 0 := by\n    by_cases h : x ^ 2 - 1 \u2265 0\n    \u00b7 exact Or.inl h\n    \u00b7 exact Or.inr (by linarith)\n  cases' h\u2081 with h\u2081 h\u2081\n  \u00b7 have h\u2082 : 0 \u2264 Real.sqrt (1 + (x ^ 2 - 1)) := Real.sqrt_nonneg _\n    have h\u2083 : Real.sqrt (x ^ 2 - 1) \u2264 x := by\n      rw [Real.sqrt_le_iff]\n      constructor\n      \u00b7 nlinarith\n      \u00b7 nlinarith\n    have h\u2084 : x * Real.sqrt (1 + (x ^ 2 - 1)) \u2265 x * 1 := by\n      apply mul_le_mul_of_nonneg_left\n      \u00b7 apply Real.le_sqrt_of_sq_le\n        nlinarith\n      \u00b7 nlinarith\n    nlinarith\n  \u00b7 have h\u2082 : Real.sqrt (x ^ 2 - 1) = 0 := by\n      apply Real.sqrt_eq_zero_of_nonpos\n      nlinarith\n    rw [h\u2082]\n    have h\u2083 : x * Real.sqrt (1 + (x ^ 2 - 1)) \u2265 0 := by\n      apply mul_nonneg\n      \u00b7 nlinarith\n      \u00b7 apply Real.sqrt_nonneg\n    nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_9216_plus (A : Fin 5 \u2192 \u211d) (hA : \u2200 i, 0 \u2264 A i) (hA_sum : \u2211 i, A i = 3) : \u2211 i, (A i * (\u2211 j, A j)) \u2264 9:= by", "target": "\n  have hA_sum' : \u2211 i : Fin 5, A i = 3 := hA_sum\n  have hA_sum'' : \u2211 i : Fin 5, A i = 3 := hA_sum\n  have h1 : \u2211 i : Fin 5, (A i * (\u2211 j : Fin 5, A j)) = (\u2211 i : Fin 5, A i) * (\u2211 j : Fin 5, A j) := by\n    simp [Finset.sum_mul, Finset.mul_sum, mul_comm]\n  rw [h1]\n  nlinarith [sq_nonneg (\u2211 i : Fin 5, A i)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_10188_plus : \u2200 a b c : \u211d, a + b + c = 2 \u2227 0 < a * b * c \u2192 (a + b - a * b) * (b + c - b * c) * (c + a - c * a) \u2264 1 - a * b * c := by", "target": "\n  rintro a b c \u27e8h\u2081, h\u2082\u27e9\n  nlinarith [sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1),\n    mul_nonneg (sq_nonneg (a - 1)) (sq_nonneg (b - 1)),\n    mul_nonneg (sq_nonneg (b - 1)) (sq_nonneg (c - 1)),\n    mul_nonneg (sq_nonneg (c - 1)) (sq_nonneg (a - 1)),\n    mul_nonneg (sq_nonneg (a - b)) (sq_nonneg (b - c)),\n    mul_nonneg (sq_nonneg (b - c)) (sq_nonneg (c - a)),\n    mul_nonneg (sq_nonneg (c - a)) (sq_nonneg (a - b))]\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_37180_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) (h1 : 0 < x * y + x * z + y * z) (h2 : 0 < x * y * (x + y) + x * z * (x + z) + y * z * (y + z)) : Real.sqrt (x * y * (x + y)) * Real.sqrt (x * z * (x + z)) * Real.sqrt (y * z * (y + z)) \u2264 Real.sqrt ((x + y) * (x + z) * (y + z)) * Real.sqrt ((x * y) * (x * z) * (y * z)):= by", "target": "\n  have h3 : Real.sqrt (x * y * (x + y)) * Real.sqrt (x * z * (x + z)) * Real.sqrt (y * z * (y + z)) = Real.sqrt (x * y * (x + y) * (x * z * (x + z)) * (y * z * (y + z))) := by\n    rw [\u2190 Real.sqrt_mul, \u2190 Real.sqrt_mul]\n    all_goals positivity\n  rw [h3]\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  \u00b7 positivity\n  \u00b7 have h4 : x * y * (x + y) * (x * z * (x + z)) * (y * z * (y + z)) \u2264 (x + y) * (x + z) * (y + z) * ((x * y) * (x * z) * (y * z)) := by\n      refine' le_of_sub_nonneg _\n      ring_nf\n      positivity\n    nlinarith [sq_sqrt (by positivity : 0 \u2264 (x + y) * (x + z) * (y + z)),\n      sq_sqrt (by positivity : 0 \u2264 (x * y) * (x * z) * (y * z))]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_65500_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : a + b + c = 3) (h : 3 * (1 + 1 / a + 1 / b + 1 / c) \u2265 3 * (1 + 1 / 3 + 1 / 3 + 1 / 3)) : 1 / a + 1 / b + 1 / c \u2265 1 / 3:= by", "target": "\n  rw [add_assoc] at habc\n  have ha : 0 < a := by linarith\n  have hb : 0 < b := by linarith\n  have hc : 0 < c := by linarith\n  have ha' : 0 < a * b := by positivity\n  have hb' : 0 < b * c := by positivity\n  have hc' : 0 < c * a := by positivity\n  field_simp at h \u22a2\n  rw [div_le_div_iff (by positivity) (by positivity)] at *\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_22590_plus : \u2200 a b c x y z : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 x = a + 2 \u2227 y = b + 2 \u2227 z = c + 2 \u2227 a ^ 2 + b ^ 2 + c ^ 2 = 4 \u2192 7 * (x + y + z) \u2265 36 + x * y + x * z + y * z := by", "target": "\n  rintro a b c x y z \u27e8h\u2080, h\u2081, h\u2082, rfl, rfl, rfl, h\u2083\u27e9\n  simp only [mul_add, add_mul, mul_comm, mul_left_comm]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n    sq_nonneg (a - 2), sq_nonneg (b - 2), sq_nonneg (c - 2)]\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_15814_plus  (x : \u211d)\n  (h\u2080 : 12 * x^2 - 17 * x + 5 = 0)\n  (h\u2081 : x \u2260 1) :\n  x = 5 / 12 \u2228 x = 1 \u2228 x = 5 / 12 := by", "target": "\n  have h\u2082 : 12 * x^2 - 17 * x + 5 = 0 := h\u2080\n  have h\u2083 : x = 5 / 12 \u2228 x = 1 := by\n    apply or_iff_not_imp_right.mpr\n    intro h\n    apply mul_left_cancel\u2080 (sub_ne_zero_of_ne h)\n    nlinarith\n  tauto\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2600 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c \u2265 1) : 1 / (a ^ 3 + 2 * b ^ 3 + 6) + 1 / (b ^ 3 + 2 * c ^ 3 + 6) + 1 / (c ^ 3 + 2 * a ^ 3 + 6) \u2264 1 / 3 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2600_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : a * b * c \u2265 1) : (1 + 1 / (a + b + c) ^ 2) * (1 + 1 / (b + c + a) ^ 2) * (1 + 1 / (c + a + b) ^ 2) \u2265 4 / 9:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_37571_plus : \u2200 a b : \u211d, a \u2264 b \u2192 0 \u2264 a \u2192 0 \u2264 b \u2192 (1 + b) / (1 + a) + (1 + a) / (1 + b) \u2264 2 + (b - a) ^ 2 / (1 + a) ^ 2 \u2228 (1 + b) / (1 + a) + (1 + a) / (1 + b) \u2264 2 \u2228 (1 + b) / (1 + a) \u2264 2 \u2227 (1 + a) / (1 + b) \u2264 2:= by", "target": "\n  rintro a b hab ha hb\n  refine' or_iff_not_imp_right.2 fun h\u2081 => _\n  refine' le_of_sub_nonneg _\n  field_simp\n  rw [le_div_iff (by positivity), mul_comm]\n  ring_nf\n  nlinarith [sq_nonneg (a - b), mul_nonneg ha hb, mul_nonneg (sub_nonneg.mpr hab) (sub_nonneg.mpr ha),\n    mul_nonneg (sub_nonneg.mpr hab) (sub_nonneg.mpr hb)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_48582_plus (a b c d : \u211d) (h\u2080 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 0 \u2264 d) (h\u2081 : a + b + c + d = 4) (h\u2082 : a * b * c * d \u2265 0) : a^2 * b + b^2 * c + c^2 * d + d^2 * a + 3 * a * b * c * d \u2264 16 * (a + b + c + d):= by", "target": "\n  have h\u2083 : 0 \u2264 a * b := by nlinarith\n  have h\u2084 : 0 \u2264 c * d := by nlinarith\n  have h\u2085 : 0 \u2264 a * b * c := by nlinarith\n  have h\u2086 : 0 \u2264 a * b * d := by nlinarith\n  have h\u2087 : 0 \u2264 a * c * d := by nlinarith\n  have h\u2088 : 0 \u2264 b * c * d := by nlinarith\n  have h\u2089 : 0 \u2264 a * b * c * d := by nlinarith\n  nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (c - d)]\n  <;> linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_49776_plus (x y : \u211d) (h\u2080 : 0 < x \u2227 0 < y) (h\u2081 : x \u2260 y) (h\u2082 : x + y \u2264 1) :  (x * y) ^ 2 / (x + y) ^ 2 \u2264 1/4:= by", "target": "\n  have h\u2083 : 0 < x * y := mul_pos h\u2080.1 h\u2080.2\n  have h\u2084 : x * y \u2264 1 / 4 := by\n    nlinarith [sq_pos_of_ne_zero (sub_ne_zero.2 h\u2081),\n      mul_self_nonneg (x - y)]\n  have h\u2085 : 0 < (x + y) ^ 2 := pow_pos (add_pos h\u2080.1 h\u2080.2) 2\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1492 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b * c \u2260 0) (h : 1 / (a + b) + 2 / (b + c) + 1 / (c + a) = 1) : a * b + b * c + c * a \u2265 9 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1492_plus (a b c : \u211d) (hab : 0 \u2264 a) (hbc : 0 \u2264 b) (hca : 0 \u2264 c) (h\u2081 : 0 \u2264 a * b) (h\u2082 : 0 \u2264 b * c) (h\u2083 : 0 \u2264 c * a) (h\u2084 : 0 \u2264 a * b * c) (h\u2085 : 0 \u2264 a * b + b * c + c * a) (h\u2086 : 1 / (a + b) + 2 / (b + c) + 1 / (c + a) = 1) : a * b + b * c + c * a \u2265 9 \u2228 a * b * c \u2264 1 \u2228 a * b * c \u2265 1:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_7533 : \u2200 n : \u2115, (\u220f k in Finset.Icc 1 n, (1 - 1 / k ^ 2)) > 1 / 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_7533_plus : \u2200 n : \u2115, (\u220f k in Finset.Icc 1 n, (1 - 1 / k ^ 2)) > 0 \u2228 (\u220f k in Finset.Icc 1 n, (1 - 1 / k ^ 2)) \u2264 0 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_64267_plus (a b c d : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hd : 0 \u2264 d) (hab : a + b + c + d = 4) :  a^2 / b + b^2 / c + c^2 / d + d^2 / a >= 4 + (17 / 25) * ((a - b)^2 + (b - c)^2 + (c - d)^2 + (d - a)^2) \u2228 \u2203 a b c d : \u211d, 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 0 \u2264 d \u2227 a + b + c + d = 4 \u2227 a^2 / b + b^2 / c + c^2 / d + d^2 / a < 4 + (17 / 25) * ((a - b)^2 + (b - c)^2 + (c - d)^2 + (d - a)^2):= by", "target": "\n  right\n  refine' \u27e80, 0, 0, 4, by norm_num, by norm_num, by norm_num, by norm_num, by norm_num, _\u27e9\n  norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_587_plus (x y z : \u211d) (h\u2080 : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z) (h\u2081 : x + y + z = 3) (h\u2082 : x * y + x * z + y * z \u2264 3) : x ^ 2 * y ^ 2 * z ^ 2 \u2264 16:= by", "target": "\n  have h\u2083 : 0 \u2264 x * y := by nlinarith\n  have h\u2084 : 0 \u2264 x * z := by nlinarith\n  have h\u2085 : 0 \u2264 y * z := by nlinarith\n  have h\u2086 : 0 \u2264 x * y * z := by nlinarith\n  have h\u2087 : x * y * z \u2264 3 := by nlinarith\n  have h\u2088 : x ^ 2 * y ^ 2 * z ^ 2 \u2264 16 := by\n    nlinarith [sq_nonneg (x * y * z), sq_nonneg (x * y - z), sq_nonneg (x * z - y),\n      sq_nonneg (y * z - x)]\n  exact h\u2088"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_76941_plus (n : \u2115) (hn : 1 < n) : (\u2203 x y : \u2115, 1 < x \u2227 1 < y \u2227 x \u2223 y \u2227 y \u2223 x \u2227 x \u2260 y) \u2228 (\u2200 x y : \u2115, 1 < x \u2227 1 < y \u2192 (x \u2223 y \u2192 y \u2223 x \u2192 x = y)):= by", "target": "\n  apply Or.intro_right\n  intro x y hxy hx hy\n  have hxy' : x \u2223 y \u2227 y \u2223 x \u2192 x = y := by\n    rintro \u27e8h1, h2\u27e9\n    exact dvd_antisymm h1 h2\n  apply hxy'\n  exact \u27e8hx, hy\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_29999_plus : \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192 (2 * (a * (3 * a + 1) / (a + 1) ^ 2 + b * (3 * b + 1) / (b + 1) ^ 2 + c * (3 * c + 1) / (c + 1) ^ 2)) * (a * (a + 1) ^ 2 / a + b * (b + 1) ^ 2 / b + c * (c + 1) ^ 2 / c) \u2265 9 * (a + b + c + 1) ^ 2 \u2228 (2 * (a * (3 * a + 1) / (a + 1) ^ 2 + b * (3 * b + 1) / (b + 1) ^ 2 + c * (3 * c + 1) / (c + 1) ^ 2)) * (a * (a + 1) ^ 2 / a + b * (b + 1) ^ 2 / b + c * (c + 1) ^ 2 / c) < 9 * (a + b + c + 1) ^ 2 \u2227 a * b * c = 1:= by", "target": "\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  refine' or_iff_not_imp_right.2 fun h => _\n  have h\u2080 : 0 < a * b := mul_pos ha hb\n  have h\u2081 : 0 < b * c := mul_pos hb hc\n  have h\u2082 : 0 < a * c := mul_pos ha hc\n  field_simp [habc] at h \u22a2\n  nlinarith [sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1),\n    mul_self_nonneg (a * b - 1), mul_self_nonneg (b * c - 1), mul_self_nonneg (a * c - 1),\n    mul_self_nonneg (a * b * c - 1)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5515 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : (a / (a + 26))^(1 / 3) + (b / (b + 26))^(1 / 3) + (c / (c + 26))^(1 / 3) \u2265 1 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5515_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) : (1 - a) ^ 2 * (1 - b) ^ 2 * (1 - c) ^ 2 * (a + b + b + c + c + a) ^ 2 \u2265 (1 - a) ^ 2 * (1 - b) ^ 2 * (1 - c) ^ 2:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_52270_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : a * b * c = 1) (h : a \u2264 b \u2228 b \u2264 c \u2228 c \u2264 a) : a / b + b / c + c / a \u2265 1 / a + 1 / b + 1 / c \u2228 a * b * c \u2264 1:= by", "target": "\n  right\n  linarith [hab, hbc, hca, habc]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_23126_plus (x : \u2115 \u2192 \u211d) (n : \u2115) (hn : 1 < n) : \u2211 i in Finset.range n, (x i)^2 / ((n - 1) + (x i)^2) \u2265 (\u2211 i in Finset.range n, x i)^2 / (n * (n - 1) + \u2211 i in Finset.range n, (x i)^2)  \u2228 \u2211 i in Finset.range n, (x i)^2 / ((n - 1) + (x i)^2) < (\u2211 i in Finset.range n, x i)^2 / (n * (n - 1) + \u2211 i in Finset.range n, (x i)^2) := by", "target": "\n  by_cases h : \u2211 i in Finset.range n, (x i)^2 / ((n - 1) + (x i)^2) \u2265 (\u2211 i in Finset.range n, x i)^2 / (n * (n - 1) + \u2211 i in Finset.range n, (x i)^2)\n  exact Or.inl h\n  exact Or.inr (by linarith)"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3937 (x y : \u211d) (h : x^2 + y^2 \u2260 0) : -2 \u2264 (x + y) * (x^3 + y^3 - 3 * x * y * (x + y)) / (x^2 + y^2)^2 \u2227 (x + y) * (x^3 + y^3 - 3 * x * y * (x + y)) / (x^2 + y^2)^2 \u2264 9 / 8 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3937_plus (x y : \u211d) (h\u2080 : 0 \u2264 x \u2227 0 \u2264 y) (h\u2081 : x \u2264 1 \u2227 y \u2264 1) (h\u2082 : x + y \u2264 1) : Real.sqrt (1 + x ^ 2) * Real.sqrt (1 + y ^ 2) \u2265 2 * x * y:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5112 (a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) : (a + b + c) * (b ^ 3 + 9 * a * b * c + c ^ 3 + a ^ 3) \u2265 4 * (a * b + b * c + a * c) ^ 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5112_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b + b * c + c * a = 1) : a ^ 2 * b ^ 2 * c ^ 2 * (a + b + c) \u2264 (a * b + b * c + c * a) ^ 2 * (a + b + c) \u2227 (a * b + b * c + c * a) ^ 2 * (a + b + c) \u2264 4 * (a + b + c) * (a ^ 2 + b ^ 2 + c ^ 2):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_50601_plus (a b : \u211d) (h\u2080 : 0 < a \u2227 0 < b) (h\u2081 : a + b \u2264 1) :  |a * b| / (1 + |a * b|) \u2264 |a| / (1 + |a|) + |b| / (1 + |b|)  := by", "target": "\n  rcases h\u2080 with \u27e8ha, hb\u27e9\n  have h : 0 < a * b := mul_pos ha hb\n  have h\u2081' : 0 < 1 + |a * b| := by positivity\n  have h\u2082 : 0 < 1 + |a| := by positivity\n  have h\u2083 : 0 < 1 + |b| := by positivity\n  have h\u2084 : 0 \u2264 |a| + |b| := by positivity\n  have h\u2085 : 0 \u2264 |a| * |b| := by positivity\n  field_simp [h\u2081', h\u2082, h\u2083]\n  rw [div_le_div_iff]\n  nlinarith [abs_mul a b, abs_of_pos ha, abs_of_pos hb]\n  positivity\n  positivity"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_37448_plus (a b c : \u211d) (h\u2081 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2082 : a + b + c = 1) : 4 * (1 / (a + b) ^ 2 + 1 / (b + c) ^ 2 + 1 / (c + a) ^ 2) \u2265 9 / (a + b + c) ^ 2:= by", "target": "\n  have : 0 < a + b + c := by linarith\n  have : (a + b) ^ 2 > 0 := by nlinarith\n  have : (b + c) ^ 2 > 0 := by nlinarith\n  have : (c + a) ^ 2 > 0 := by nlinarith\n  have : 1 / (a + b) ^ 2 \u2265 1 / 1 := by apply one_div_le_one_div_of_le <;> nlinarith\n  have : 1 / (b + c) ^ 2 \u2265 1 / 1 := by apply one_div_le_one_div_of_le <;> nlinarith\n  have : 1 / (c + a) ^ 2 \u2265 1 / 1 := by apply one_div_le_one_div_of_le <;> nlinarith\n  have : 4 * (1 / (a + b) ^ 2 + 1 / (b + c) ^ 2 + 1 / (c + a) ^ 2) \u2265 4 * (1 / 1 + 1 / 1 + 1 / 1) := by\n    linarith\n  have : 4 * (1 / 1 + 1 / 1 + 1 / 1) = 12 := by norm_num\n  have : 9 / (a + b + c) ^ 2 = 9 / 1 := by rw [h\u2082] <;> norm_num\n  have : 9 / 1 = 9 := by norm_num\n  linarith\n  <;> norm_num\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_54048_plus (a b c d : \u211d) (h\u2081 : 0 < a \u2227 0 < b \u2227 0 < c \u2227 0 < d) (h\u2082 : a * b * c * d = 1) : a / b + b / c + c / d + d / a \u2265 4 := by", "target": "\n  rcases h\u2081 with \u27e8ha, hb, hc, hd\u27e9\n  have h\u2083 : 0 < a * b := by positivity\n  have h\u2084 : 0 < b * c := by positivity\n  have h\u2085 : 0 < c * d := by positivity\n  have h\u2086 : 0 < d * a := by positivity\n  have h\u2087 : 0 < a * b * c := by positivity\n  have h\u2088 : 0 < b * c * d := by positivity\n  have h\u2089 : 0 < c * d * a := by positivity\n  have h\u2081\u2080 : 0 < d * a * b := by positivity\n  have h\u2081\u2081 : 0 < a * b * c * d := by positivity\n  field_simp [h\u2082]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - d), sq_nonneg (d - a),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le hd.le, mul_nonneg hd.le ha.le,\n    mul_nonneg (sq_nonneg (a - b)) hd.le, mul_nonneg (sq_nonneg (b - c)) ha.le,\n    mul_nonneg (sq_nonneg (c - d)) hb.le, mul_nonneg (sq_nonneg (d - a)) hc.le]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1860 (a b : \u211d) (ha : 0 < a) (hb : 0 < b) (hab : a + b = 1) : (Real.sqrt (a + b^2) / (a^2 + b) + Real.sqrt (a^2 + b) / (a + b^2)) \u2264 4 / Real.sqrt 3 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1860_plus : \u2200 a b : \u211d, 0 < a \u2227 0 < b \u2227 a + b = 1 \u2192 \u2203 x : \u211d, x \u2208 Set.Ioo 0 1 \u2227 Real.sqrt (a + b ^ 2) / (a ^ 2 + b) + Real.sqrt (a ^ 2 + b) / (a + b ^ 2) \u2264 4 / Real.sqrt 3 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5259 : \u00ac \u2203 (a b : \u2124), (a : \u211a) / b = Real.sqrt 5 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5259_plus : \u2200 (x : \u2115), x \u2264 100 \u2192 \u2203 (y : \u2115), y \u2264 100 \u2227 y \u2264 x + 10 \u2227 x \u2264 y + 10 \u2227 (x : \u211a) / y \u2264 1.1:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_2530_plus (x : \u211d) (hx : 0 < x) : Real.sqrt (1 + x ^ 2) + 2 * Real.sqrt (1 + (Real.sqrt (1 + x ^ 2) - x) ^ 2) + 2 * Real.sqrt (1 + x ^ 2) \u2265 2 * (Real.sqrt 3 + x) / 2:= by", "target": "\n  have : Real.sqrt (1 + x ^ 2) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2080 : Real.sqrt (1 + (Real.sqrt (1 + x ^ 2) - x) ^ 2) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2081 : Real.sqrt 3 \u2265 0 := Real.sqrt_nonneg _\n  have h\u2082 : Real.sqrt (1 + x ^ 2) + 2 * Real.sqrt (1 + (Real.sqrt (1 + x ^ 2) - x) ^ 2) + 2 * Real.sqrt (1 + x ^ 2) \u2265 2 * (Real.sqrt 3 + x) / 2 := by\n    nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 from by linarith),\n      sq_sqrt (show (0 : \u211d) \u2264 1 + x ^ 2 from by positivity),\n      sq_sqrt (show (0 : \u211d) \u2264 1 + (Real.sqrt (1 + x ^ 2) - x) ^ 2 from by positivity),\n      sq_nonneg (Real.sqrt (1 + x ^ 2) - Real.sqrt 3),\n      sq_nonneg (x - Real.sqrt 3),\n      sq_nonneg (Real.sqrt (1 + x ^ 2) - x),\n      h\u2080]\n  linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_27311_plus (a : \u211d) (ha : 1 < a) : \u2203 N : \u2115, \u2200 x : \u2115, x > N \u2192 1 < (x : \u211d)^a := by", "target": "\n  use 1\n  intro x hx\n  have h : (x : \u211d) > 1 := by exact_mod_cast hx\n  exact one_lt_rpow h (by linarith)"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_4852_plus (n : \u2115) (hn : n \u2260 0) : \u2203 a b : \u211d, (4 * n) / ((2 * n ^ 2 + 2 * n + 1) * (2 * n ^ 2 - 2 * n + 1)) \u2264 a / (2 * n ^ 2 + 2 * n + 1) + b / (2 * n ^ 2 - 2 * n + 1)   := by", "target": "\n  use (4 * n) / (2 * n ^ 2 - 2 * n + 1), 0\n  norm_num [hn, Nat.cast_eq_zero]\n  <;> apply le_of_sub_nonneg\n  <;> field_simp\n  <;> ring_nf\n  <;> norm_cast\n  <;> positivity"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_24590_plus (n : \u2115) : (\u2211 k in Finset.Ico 0 (n + 1), ( choose (2 * n + 1) k)) \u2265 \u2211 k in Finset.Ico 0 (n + 1), (2 * (n + 1) / (n + 2) * ( choose (2 * n + 1) k)):= by", "target": "\n  apply Finset.sum_le_sum\n  intro k hk\n  simp only [Finset.mem_Ico] at hk\n  have : choose (2 * n + 1) k \u2265 2 * (n + 1) / (n + 2) * choose (2 * n + 1) k := by\n    have : 2 * (n + 1) / (n + 2) \u2264 1 := by\n      rw [Nat.div_le_iff_le_mul_add_pred (by omega)]\n      ring_nf\n      omega\n    have : choose (2 * n + 1) k \u2265 0 := by\n      apply Nat.zero_le\n    nlinarith\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_22905_plus (x : \u2115 \u2192 \u211d) (hx : \u2200 i, 0 \u2264 x i) (hx' : \u2211 i in Finset.range 2007, x i \u2264 2007) : \u2211 i in Finset.range 2007, x i \u2264 2007 * (\u2211 i in Finset.range 2007, Real.sqrt (x i)) := by", "target": "\n  have h\u2080 : \u2200 i \u2208 Finset.range 2007, Real.sqrt (x i) \u2265 0 := fun i _ \u21a6 Real.sqrt_nonneg (x i)\n  have h\u2081 : \u2211 i in Finset.range 2007, Real.sqrt (x i) \u2265 0 := Finset.sum_nonneg h\u2080\n  have h\u2082 : \u2211 i in Finset.range 2007, x i \u2264 2007 * \u2211 i in Finset.range 2007, Real.sqrt (x i) := by\n    have h\u2083 : \u2211 i in Finset.range 2007, x i \u2264 2007 * \u2211 i in Finset.range 2007, Real.sqrt (x i) := by\n      have h\u2084 : \u2200 i \u2208 Finset.range 2007, x i \u2264 Real.sqrt (x i) * 2007 := by\n        intro i hi\n        have h\u2085 : 0 \u2264 x i := hx i\n        have h\u2086 : x i \u2264 2007 := by\n          calc\n            x i \u2264 \u2211 i in Finset.range 2007, x i := by\n              exact Finset.single_le_sum (fun j hj \u21a6 hx j) hi\n            _ \u2264 2007 := hx'\n        have h\u2087 : 0 \u2264 Real.sqrt (x i) := Real.sqrt_nonneg (x i)\n        have h\u2088 : Real.sqrt (x i) \u2265 0 := h\u2087\n        nlinarith [sq_sqrt (h\u2085), h\u2086, h\u2088]\n      exact\n        calc\n          \u2211 i in Finset.range 2007, x i \u2264 \u2211 i in Finset.range 2007, Real.sqrt (x i) * 2007 := by\n            exact Finset.sum_le_sum h\u2084\n          _ = (\u2211 i in Finset.range 2007, Real.sqrt (x i)) * 2007 := by\n            simp [Finset.sum_mul]\n          _ = 2007 * \u2211 i in Finset.range 2007, Real.sqrt (x i) := by ring\n    linarith\n  linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_9303_plus (x y z : \u2124) (hx : x > 0 \u2227 y > 0 \u2227 z > 0) (hx1 : x^2 + y^2 + z^2 + x * y + x * z + y * z \u2264 360) (hx2 : 9 * (x + y + z) ^2 \u2264 360 * (x + y + z)) : x + y + z \u2264 360 / 9:= by", "target": "\n  rcases hx with \u27e8h1, h2, h3\u27e9\n  norm_num at hx1 hx2 \u22a2\n  nlinarith [mul_pos h1 h2, mul_pos h1 h3, mul_pos h2 h3]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_2873_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \u2203 a : \u211d, a \u2208 Set.Ioo 0 1 \u2227 a \u2264 (x^3 + y^3 + z^3) / (x * y * z) \u2227 (x^3 + y^3 + z^3) / (x * y * z) \u2265 3 * (x^6 + y^6 + z^6 / (x^3 * y^3 + y^3 * z^3 + z^3 * x^3))^(25/81):= by", "target": "\n  use 1/2\n  constructor\n  exact \u27e8by norm_num, by norm_num\u27e9\n  constructor\n  apply le_of_sub_nonneg\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_pos hx hy, mul_pos hx hz, mul_pos hy hz]\n  apply le_of_sub_nonneg\n  field_simp\n  rw [le_div_iff (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_pos hx hy, mul_pos hx hz, mul_pos hy hz]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_307 (a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (habc : a + b + c + a * b + b * c + c * a = 6) : 4 * (a + b + c) + a * b * c \u2265 13 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_307_plus (A : Fin 5 \u2192 \u211d) (hA : \u2200 i, 0 \u2264 A i) (hA_sum : \u2211 i, A i = 6) : \u2211 i, (A i ^ 2) \u2264 36 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_48526_plus : \u2200 a b c : \u211d, (a^2 * (a - b) * (a - c)) / (a + b) / (a + c) / (a^2 + b * c) + (b^2 * (b - c) * (b - a)) / (b + c) / (b + a) / (b^2 + c * a) + (c^2 * (c - a) * (c - b)) / (c + a) / (c + b) / (c^2 + a * b) \u2265 0 \u2228 \u2203 a b c : \u211d, (a^2 * (a - b) * (a - c)) / (a + b) / (a + c) / (a^2 + b * c) + (b^2 * (b - c) * (b - a)) / (b + c) / (b + a) / (b^2 + c * a) + (c^2 * (c - a) * (c - b)) / (c + a) / (c + b) / (c^2 + a * b) < 0 := by", "target": "\n  intro a b c\n  by_cases h\u2080 : 0 \u2264 (a^2 * (a - b) * (a - c)) / (a + b) / (a + c) / (a^2 + b * c) + (b^2 * (b - c) * (b - a)) / (b + c) / (b + a) / (b^2 + c * a) + (c^2 * (c - a) * (c - b)) / (c + a) / (c + b) / (c^2 + a * b)\n  exact Or.inl h\u2080\n  exact Or.inr \u27e8a, b, c, by linarith\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_25144_plus (a b c : \u211d) (habc : a * b * c = 1) (h : a \u2264 1 \u2227 b \u2264 1 \u2227 c \u2264 1) : (a + 1) / (7 * a ^ 2 + 6 * a + 7) + (b + 1) / (7 * b ^ 2 + 6 * b + 7) + (c + 1) / (7 * c ^ 2 + 6 * c + 7) \u2264 1:= by", "target": "\n  rcases h with \u27e8h\u2081, h\u2082, h\u2083\u27e9\n  have h\u2081 : a \u2264 1 := h\u2081\n  have h\u2082 : b \u2264 1 := h\u2082\n  have h\u2083 : c \u2264 1 := h\u2083\n  have h\u2084 : 0 < 7 * a ^ 2 + 6 * a + 7 := by nlinarith\n  have h\u2085 : 0 < 7 * b ^ 2 + 6 * b + 7 := by nlinarith\n  have h\u2086 : 0 < 7 * c ^ 2 + 6 * c + 7 := by nlinarith\n  have h\u2087 : (a + 1) / (7 * a ^ 2 + 6 * a + 7) \u2264 1 / 4 := by\n    rw [div_le_iff h\u2084]\n    nlinarith\n  have h\u2088 : (b + 1) / (7 * b ^ 2 + 6 * b + 7) \u2264 1 / 4 := by\n    rw [div_le_iff h\u2085]\n    nlinarith\n  have h\u2089 : (c + 1) / (7 * c ^ 2 + 6 * c + 7) \u2264 1 / 4 := by\n    rw [div_le_iff h\u2086]\n    nlinarith\n  linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_8733_plus (A : Fin 5 \u2192 \u2115) (h\u2080 : \u2200 i, A i \u2264 4) (h\u2081 : \u2200 i, 0 < A i) (h\u2082 : \u2211 i, A i = 10) : \u220f i, A i \u2264 1024 := by", "target": "\n  have h\u2083 : \u220f i, A i \u2264 1024 := by\n    have : \u220f i : Fin 5, A i \u2264 1024 := by\n      calc\n        _ = \u220f i : Fin 5, A i := rfl\n        _ \u2264 \u220f i : Fin 5, 4 := by\n          apply Finset.prod_le_prod\n          \u00b7 intro i _\n            exact Nat.zero_le _\n          \u00b7 intro i _\n            exact h\u2080 i\n        _ = 4 ^ 5 := by simp [Finset.prod_const]\n        _ \u2264 1024 := by norm_num\n    exact this\n  exact h\u2083"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_14652_plus :\n  \u2200 n : \u2115, ((n + 1)^2 / 4^n) \u2264 20 / 27 \u2228 \u2203 n : \u2115, ((n + 1)^2 / 4^n) > 20 / 27  := by", "target": "\n  intro n\n  by_cases h : ((n + 1)^2 / 4^n) \u2264 20 / 27\n  \u00b7 left\n    exact h\n  \u00b7 right\n    use n\n    norm_num\n    <;>\n    contrapose! h\n    <;>\n    omega"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_60039_plus (a b c : \u211d) (h\u2081 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2082 : a + b + c = 1) :  (1 / (a + b + c) ^ 2 + 1 / (a ^ 2 + b ^ 2 + c ^ 2) + 1 / (a ^ 2 + b ^ 2 + c ^ 2)) \u2265 9 * (1 / 3 * (a + b + c)) / (a + b + c + 1):= by", "target": "\n  rw [h\u2082]\n  norm_num\n  have h\u2083 : 0 < a ^ 2 + b ^ 2 + c ^ 2 := by\n    nlinarith [sq_pos_of_pos h\u2081.1, sq_pos_of_pos h\u2081.2.1, sq_pos_of_pos h\u2081.2.2]\n  have h\u2084 : 0 < a ^ 2 + b ^ 2 + c ^ 2 + 1 := by nlinarith\n  have h\u2085 : 0 < a ^ 2 + b ^ 2 + c ^ 2 + 1 + 1 := by nlinarith\n  field_simp\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  nlinarith\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_44210_plus (n : \u2115) (hn : 0 < n) : (\u2203 a b : \u211d, \u2200 x : \u211d, (Real.sqrt x + 1) ^ 2 \u2264 a * x + b) \u2194 \u2203 a b : \u211d, \u2200 x : \u211d, (Real.sqrt x + 1) ^ 2 \u2264 a * x + b \u2227 a * x + b \u2265 0:= by", "target": "\n  constructor\n  intro h\n  obtain \u27e8a, b, h\u2081\u27e9 := h\n  refine' \u27e8a, b, fun x => \u27e8h\u2081 x, _\u27e9\u27e9\n  nlinarith [h\u2081 x]\n  rintro \u27e8a, b, h\u2081\u27e9\n  refine' \u27e8a, b, fun x => _\u27e9\n  nlinarith [h\u2081 x]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_10197_plus : \u2200 a b c : \u211d, a + b + c = 3 \u2227 0 < a \u2227 0 < b \u2227 0 < c \u2192 (1 + a ^ 2) * (1 + b ^ 2) * (1 + c ^ 2) \u2265 8 * (1 + a * b * c) / 3:= by", "target": "\n  rintro a b c \u27e8habc, ha, hb, hc\u27e9\n  have : 0 < a * b * c := by positivity\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n    mul_self_nonneg (a * b - 1), mul_self_nonneg (a * c - 1), mul_self_nonneg (b * c - 1),\n    mul_self_nonneg (a * b * c - 1)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_58933_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) : (1 - a * b) * (1 - b * c) * (1 - a * c) \u2264 1 \u2227 (a + b - c) * (a + c - b) * (b + c - a) \u2264 1:= by", "target": "\n  have : (a + b + c) ^ 2 = 1 := by simp [habc]\n  have h\u2080 : 0 \u2264 a * b := by nlinarith\n  have h\u2081 : 0 \u2264 b * c := by nlinarith\n  have h\u2082 : 0 \u2264 a * c := by nlinarith\n  have h\u2083 : (1 - a * b) * (1 - b * c) * (1 - a * c) \u2264 1 := by\n    nlinarith [mul_self_nonneg (a * b), mul_self_nonneg (b * c), mul_self_nonneg (a * c),\n      mul_self_nonneg (a * b * c)]\n  have h\u2084 : (a + b - c) * (a + c - b) * (b + c - a) \u2264 1 := by\n    nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a),\n      mul_self_nonneg (a * b), mul_self_nonneg (b * c), mul_self_nonneg (a * c),\n      mul_self_nonneg (a * b * c)]\n  exact \u27e8h\u2083, h\u2084\u27e9\n  <;> linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1308 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a + 2 * b + c) ^ 2 + a * b + b * c + 2 * c * a \u2265 Real.sqrt ((47 + 13 * Real.sqrt 13) * a * b * c * (a + 2 * b + c)) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1308_plus : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 a * b + b * c + c * a \u2264 (a ^ 2 + b ^ 2 + c ^ 2) + Real.sqrt ((a ^ 2 + b ^ 2 + c ^ 2) ^ 2 - (a * b + b * c + c * a) ^ 2):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_23486_plus (a b c : \u211d) (hab : 0 \u2264 a) (hbc : 0 \u2264 b) (hca : 0 \u2264 c) (h : a + b + c = 3) (h' : a * b * c = 1) : a ^ 2 / (3 * a + b) + b ^ 2 / (3 * b + c) + c ^ 2 / (3 * c + a) \u2265 1 / 4 \u2227 a ^ 2 / (3 * a + b) + b ^ 2 / (3 * b + c) + c ^ 2 / (3 * c + a) \u2264 3 / 2:= by", "target": "\n  have : a = 1 \u2227 b = 1 \u2227 c = 1 := by\n    constructor\n    \u00b7 nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c)]\n    \u00b7 constructor\n      \u00b7 nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c)]\n      \u00b7 nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c)]\n  rw [this.1, this.2.1, this.2.2]\n  norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_26023_plus (a b c : \u211d) (hab : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) :  Real.sqrt (1 - a) + Real.sqrt (1 - b) + Real.sqrt (1 - c) \u2264 3 * Real.sqrt (1 - (a + b + c) / 3):= by", "target": "\n  have : 0 \u2264 Real.sqrt (1 - a) := Real.sqrt_nonneg (1 - a)\n  have : 0 \u2264 Real.sqrt (1 - b) := Real.sqrt_nonneg (1 - b)\n  have : 0 \u2264 Real.sqrt (1 - c) := Real.sqrt_nonneg (1 - c)\n  have : 0 \u2264 3 * Real.sqrt (1 - (a + b + c) / 3) := by positivity\n  nlinarith [sq_sqrt (show 0 \u2264 1 - a by linarith), sq_sqrt (show 0 \u2264 1 - b by linarith),\n    sq_sqrt (show 0 \u2264 1 - c by linarith), sq_sqrt (show 0 \u2264 1 - (a + b + c) / 3 by linarith),\n    sq_nonneg (Real.sqrt (1 - a) - Real.sqrt (1 - b)),\n    sq_nonneg (Real.sqrt (1 - b) - Real.sqrt (1 - c)),\n    sq_nonneg (Real.sqrt (1 - a) - Real.sqrt (1 - c))]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2571 (a b c : \u211d) (h : (a + b) * (b + c) * (a + c) = 1) : a * b + b * c + a * c \u2264 3 / 4 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2571_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a + b + c = 1) : (1 - a * b) * (1 - b * c) * (1 - a * c) \u2265 (1 - a) * (1 - b) * (1 - c):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_60242_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 1) (h' : 0 < a * b + b * c + c * a) : Real.sqrt ((a ^ 2 + b ^ 2 + c ^ 2) / 3) \u2265 (1 / 3) * (a + b + c) - (1 / 3) * Real.sqrt ((a ^ 2 + b ^ 2 + c ^ 2)):= by", "target": "\n  have h\u2081 : 0 \u2264 a ^ 2 + b ^ 2 + c ^ 2 := by nlinarith\n  have h\u2082 : 0 \u2264 Real.sqrt ((a ^ 2 + b ^ 2 + c ^ 2) / 3) := Real.sqrt_nonneg _\n  have h\u2083 : 0 \u2264 Real.sqrt ((a ^ 2 + b ^ 2 + c ^ 2)) := Real.sqrt_nonneg _\n  nlinarith [sq_sqrt (by nlinarith : 0 \u2264 (a ^ 2 + b ^ 2 + c ^ 2) / 3),\n    sq_sqrt (by nlinarith : 0 \u2264 a ^ 2 + b ^ 2 + c ^ 2),\n    sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> nlinarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_2405_plus (x y z : \u211d) (hx : x > 0) (hy : y > 0) (hz : z > 0) : \u2203 a b c : \u211d, a * b * c \u2264 1 \u2227 a * b > 0 \u2227 b * c > 0 \u2227 a * c > 0 \u2227 x ^ 4 + y ^ 4 + z ^ 4 + x * y * z * (x + y + z) \u2265 2 * (x ^ 2 * y ^ 2 + y ^ 2 * z ^ 2 + z ^ 2 * x ^ 2):= by", "target": "\n  use 1, 1, 1\n  simp\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x), mul_pos hx hy, mul_pos hy hz, mul_pos hz hx, sq_nonneg (x + y + z), sq_nonneg (x + y - z), sq_nonneg (x - y + z), sq_nonneg (x - y - z), sq_nonneg (y + z - x), sq_nonneg (y - z + x), sq_nonneg (z + x - y), sq_nonneg (z - x + y)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_11049_plus : \u2200 a b : \u211d, 0 < a \u2227 0 < b \u2192 \u2203 x : \u211d, 0 \u2264 x \u2227 x \u2264 1 \u2227 Real.sqrt (1 - x ^ 2) \u2264 1 \u2227  Real.sqrt (1 - x ^ 2) \u2265 1 - 2 * (a ^ 2 + b ^ 2) / (a ^ 2 + b ^ 2):= by", "target": "\n  rintro a b \u27e8h\u2081, h\u2082\u27e9\n  use 1\n  have h\u2083 : Real.sqrt (1 - 1 ^ 2) = 0 := by simp\n  have h\u2084 : 1 - 2 * (a ^ 2 + b ^ 2) / (a ^ 2 + b ^ 2) \u2264 0 := by\n    rw [sub_nonpos]\n    apply le_of_sub_nonneg\n    field_simp\n    <;> nlinarith\n  constructor\n  <;> norm_num\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5989 (a b c : \u211d) (habc : a * b * c = 1) : 1 / (a ^ 3 + b ^ 3 + c ^ 3) + 1 / (a ^ 2 + b ^ 2 + c ^ 2) \u2265 6 / (a ^ 2 + b ^ 2 + c ^ 2) ^ 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5989_plus (a b c : \u211d) (habc : a * b * c = 1) : 1 / (a ^ 3 + b ^ 3 + c ^ 3) + 1 / (a ^ 2 + b ^ 2 + c ^ 2) \u2265 6 / (a ^ 2 + b ^ 2 + c ^ 2) ^ 2 \u2228 (\u2203 x y z : \u211d, x * y * z = 1 \u2227 1 / (x ^ 3 + y ^ 3 + z ^ 3) + 1 / (x ^ 2 + y ^ 2 + z ^ 2) < 6 / (x ^ 2 + y ^ 2 + z ^ 2) ^ 2):= by\n</hard theorem>"}]