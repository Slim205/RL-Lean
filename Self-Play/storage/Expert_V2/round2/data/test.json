[{"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_556 (a b c : \u211d) (h : 1 / (a + b) + 1 / (b + c) + 1 / (c + a) = 1) (habc : a * b + b * c + c * a > 0) : a + b + c - a * b * c / (2 * (a * b + b * c + c * a)) \u2265 17 / 4 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_556_plus (A : Fin 5 \u2192 \u211d) (hA : \u2200 i, 0 < A i) (hA_sum : \u2211 i, A i = 1) (hA_ratios : \u2200 i, A (i + 1) / A i = 3 / 2) : \u2211 i, (A i)^2 / (A i * \u2211 j, A j) \u2265 3 / 5:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_68375_plus (n : \u2115) (hn : 1 \u2264 n) : 7 * 8^n = (2^(n+1))^3 - (2^n)^3 \u2228 \u2203 (a : \u2115), 8^n = a^3:= by", "target": "\n  apply Or.intro_left\n  induction' hn with n hn IH\n  all_goals simp_all [pow_succ, mul_pow, mul_comm, mul_left_comm]\n  all_goals ring_nf at *\n  all_goals omega"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_669 (A: Finset {(a,b): \u2124 \u00d7 \u2124 | a^2 + b^2 = 100 }) : A.card = 10 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_669_plus (A : Finset \u2124) (hA : \u2200 a \u2208 A, a \u2264 100 \u2227 a \u2265 -100) : A.card \u2264 201 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_853_plus (hA : A \u2208 Set.Ioo (0 : \u211d) 1) (hB : B \u2208 Set.Ioo (0 : \u211d) 1) (hC : C \u2208 Set.Ioo (0 : \u211d) 1) (h : A + B + C = 1) : A * B * (1 - C) * (1 - A) * (1 - B) \u2264 1 / 8  := by", "target": "\n  have : 0 < 8 := by norm_num\n  have h\u2080 : 0 < A := by linarith [hA.1]\n  have h\u2081 : 0 < B := by linarith [hB.1]\n  have h\u2082 : 0 < C := by linarith [hC.1]\n  have h\u2083 : 0 < 1 - A := by linarith [hA.2]\n  have h\u2084 : 0 < 1 - B := by linarith [hB.2]\n  have h\u2085 : 0 < 1 - C := by linarith [hC.2]\n  have h\u2086 : 0 < A * B := mul_pos h\u2080 h\u2081\n  have h\u2087 : 0 < A * B * (1 - C) := mul_pos h\u2086 h\u2085\n  have h\u2088 : 0 < A * B * (1 - C) * (1 - A) := mul_pos h\u2087 h\u2083\n  have h\u2089 : 0 < A * B * (1 - C) * (1 - A) * (1 - B) := mul_pos h\u2088 h\u2084\n  nlinarith [mul_self_nonneg (A - 1 / 2), mul_self_nonneg (B - 1 / 2),\n    mul_self_nonneg (C - 1 / 2)]\n  <;> linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2036 (x y : \u211d) (hx : x > Real.sqrt 2) (hy : y > Real.sqrt 2) :x ^ 4 - x ^ 3 * y + x ^ 2 * y ^ 2 - x * y ^ 3 + y ^ 4 > x ^ 2 + y ^ 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2036_plus : \u2200 a b : \u211d, a > b \u2192 \u2203 x, x > 1 \u2227 \u2203 y, y > 1 \u2227 (x ^ 2 + y ^ 2) * (1 / (x ^ 2 + y ^ 2)) < 2 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5466 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x^2 + x * y) / (y + Real.sqrt (z * x) + z)^2 + (y^2 + y * z) / (z + Real.sqrt (x * y) + x)^2 + (z^2 + z * x) / (x + Real.sqrt (y * z) + y)^2 >= 2 / 3 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5466_plus : \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192 (x^2 + x * y) / (y + Real.sqrt (z * x) + z)^2 + (y^2 + y * z) / (z + Real.sqrt (x * y) + x)^2 + (z^2 + z * x) / (x + Real.sqrt (y * z) + y)^2 >= 2 / 3 \u2228 \u2203 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2227 (x^2 + x * y) / (y + Real.sqrt (z * x) + z)^2 + (y^2 + y * z) / (z + Real.sqrt (x * y) + x)^2 + (z^2 + z * x) / (x + Real.sqrt (y * z) + y)^2 < 2 / 3:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2131 (x y z : \u211d) (hx : x \u2265 0) (hy : y \u2265 0) (hz : z \u2265 0) (hxy : x + y \u2260 0) (hyz : y + z \u2260 0) (hzx : z + x \u2260 0) : (x / (y + z) + y / (z + x) + z / (x + y)) \u2265 Real.sqrt 2 * Real.sqrt (2 - 7 * x * y * z / ((x + y) * (y + z) * (z + x))) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2131_plus : \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a * b * c \u2264 1 \u2192 a * b * c * (a + b + c) \u2264 a * a + b * b + c * c:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_43784_plus : \u2200 a b : \u211d, a \u2264 3 \u2227 b \u2264 3 \u2192 Real.sqrt (a ^ 2 + 1) + Real.sqrt (b ^ 2 + 1) \u2265 Real.sqrt 2 * (a + b) - 3 := by", "target": "\n  intro a b hab\n  have ha : a \u2264 3 := hab.1\n  have hb : b \u2264 3 := hab.2\n  have h\u2081 : Real.sqrt (a ^ 2 + 1) \u2265 a := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2082 : Real.sqrt (b ^ 2 + 1) \u2265 b := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2083 : Real.sqrt 2 \u2265 0 := Real.sqrt_nonneg 2\n  nlinarith [sq_sqrt (show 0 \u2264 2 by norm_num),\n    mul_self_nonneg (a - b),\n    mul_self_nonneg (Real.sqrt 2 - (a + b))]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5464 : \u2200 a b c : \u2124, a \u2223 (a + 1) * (b + 1) * (c + 1) - (b + c) * (a + 1) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5464_plus : \u2200 a b c : \u2124, \u2200 n : \u2115, 1 < n \u2192 a \u2223 (a + 1) ^ n * (b + 1) * (c + 1) - (b + c) * (a + 1) ^ n \u2228 \u2203 f : \u2115 \u2192 \u2124, a \u2223 f n:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_199 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c \u2264 1) : a^2 * b + b^2 * c + c^2 * a + a * b * c \u2264 4 / 27 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_199_plus (A : Fin 5 \u2192 \u211d) (hA : \u2200 i, 0 \u2264 A i) (hA' : \u2211 i, A i = 1) : (\u2211 i, A i ^ 2 * A (i + 1)) \u2264 1:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_45936_plus : \u2200 a b c : \u211d, \u2203 d : \u211d, d \u2265 0 \u2227 d \u2265 a * b + b * c + c * a \u2227 d \u2265 a ^ 2 + b ^ 2 + c ^ 2  := by", "target": "\n  intro a b c\n  refine' \u27e8max (max (a * b + b * c + c * a) (a ^ 2 + b ^ 2 + c ^ 2)) 0, _, _, _\u27e9 <;>\n    simp [max_le_iff, mul_self_nonneg, add_nonneg, sq_nonneg] <;>\n    nlinarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_605 (a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : a^3 + b^3 + c^3 + d^3 \u2265 a^2 * b + b^2 * c + c^2 * d + d^2 * a := by\n<hard theorem>", "target": "\ntheorem leanworkbook_605_plus (A : Fin 5 \u2192 \u211d) (hA : \u2200 i, 0 < A i) : (A 0) ^ 3 + (A 1) ^ 3 + (A 2) ^ 3 + (A 3) ^ 3 + (A 4) ^ 3 \u2265 (A 0) ^ 2 * (A 1) + (A 1) ^ 2 * (A 2) + (A 2) ^ 2 * (A 3) + (A 3) ^ 2 * (A 4) + (A 4) ^ 2 * (A 0):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2077 (x y z t : \u211d) (h\u2081 : x + y + z = 1) (h\u2082 : t = x * (y + z)) : x * (y - z) ^ 4 + y * (z - x) ^ 4 + z * (x - y) ^ 4 \u2264 t * (1 - 3 * t) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2077_plus : \u2200 a b c : \u211d, a + b + c = 1 \u2227 0 < a * b \u2227 0 < b * c \u2227 0 < c * a \u2192 a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2 \u2264 1:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_32136_plus : \u2200 a b : \u211d, a > 0 \u2227 b > 0 \u2192 a * b + 1 / (a * b) = 6 \u2192 a + 1 > 0 \u2227 b + 1 > 0 \u2227 (a + 1) * (b + 1) \u2265 2 := by", "target": "\n  intro a b hab h\n  have ha : a > 0 := hab.1\n  have hb : b > 0 := hab.2\n  have h\u2081 : (a + 1) * (b + 1) \u2265 2 := by\n    field_simp at h\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a + b), sq_nonneg (a * b - 1),\n      sq_nonneg (a * b + 1)]\n  exact \u27e8by positivity, by positivity, h\u2081\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_14019_plus : \u2200 a b c : \u211d, a * b > 0 \u2227 b * c > 0 \u2227 c * a > 0 \u2227 a + b + c = 3 \u2192 a ^ 2 + b ^ 2 + c ^ 2 \u2265 3 * Real.sqrt (a * b + b * c + c * a) / 3:= by", "target": "\n  rintro a b c \u27e8hab, hbc, hac, h\u27e9\n  have h1 : 0 \u2264 (a - b) ^ 2 + (b - c) ^ 2 + (c - a) ^ 2 := by nlinarith\n  have h2 : Real.sqrt (a * b + b * c + c * a) \u2264 (a + b + c) := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_14024_plus (x : \u2124) (h\u2081 : 2 \u2223 x) (h\u2082 : 3 \u2223 x) : \u2203 a : \u2124, x = 6 * a  := by", "target": "\n  rcases h\u2081 with \u27e8b, rfl\u27e9\n  rw [Int.dvd_iff_emod_eq_zero] at h\u2082\n  use b - b / 3 * 2\n  omega"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_32564_plus :\n  (2 * x ^ 2 + x + 2) ^ 2 - 5 * x ^ 2 = 4 * (x ^ 4 + x ^ 3 + x ^ 2 + x + 1):= by", "target": "\n  simp [mul_add, add_mul, mul_comm, mul_left_comm, sq]\n  ring\n  <;> omega\n  <;> ring\n  <;> omega\n  <;> ring\n  <;> omega\n  <;> ring\n  <;> omega"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_10258_plus (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : \u2203 a' b' c' : \u211d, (0 < a' \u2227 0 < b' \u2227 0 < c') \u2227 (Real.sqrt ((a' + b') * (a' + c') / b' / c') + Real.sqrt ((b' + c') * (b' + a') / c' / a') + Real.sqrt ((c' + a') * (c' + b') / a' / b') ) \u2265 2 * (a' + b' + c') ^ 2 / (a' * b' + b' * c' + a' * c')  := by", "target": "\n  use 1, 1, 1\n  simp\n  norm_num\n  <;> apply le_of_sub_nonneg\n  <;> field_simp\n  <;> ring_nf\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3461 (a b c : \u211d) : a^2*b + b^2*c + c^2*a \u2265 a*b + b*c + c*a := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3461_plus : \u2200 a b c : \u211d, a^2*b + b^2*c + c^2*a \u2265 a*b + b*c + c*a \u2228 (\u2203 a b c : \u211d, a^2*b + b^2*c + c^2*a < a*b + b*c + c*a) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_6299 (f : \u2115 \u2192 \u2115): (\u2200 x y : \u2115, (f x + y) / (x + f y) + (f x * y) / (x * f y) = (2 * (x + y)) / f (x + y)) \u2194 \u2203 k :\u2115, \u2200 x : \u2115, f x = k * x := by\n<hard theorem>", "target": "\ntheorem leanworkbook_6299_plus (n : \u2115) (hn : 1 < n) : (\u2203 k : \u2115, n \u2223 k^3) \u2194 \u2203 k : \u2115, n \u2223 k^2 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_6232 (f : \u211d \u2192 \u211d) (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x \u2264 y) (hbc : y \u2264 z) : f x + f z \u2265 3 / 2 * f ((x + y + z) / 3) + 1 / 2 * f (x - y + z) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_6232_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (hab : x + y + z = 1) (h : x * y + x * z + y * z \u2264 1 / 3) : (x + y + z) ^ 2 / (x * (x + y + z) + y * (x + y + z) + z * (x + y + z)) \u2265 (x + y + z) / 3:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_56642_plus : \u2200 a b c : \u211d, a * b * c = 0 \u2192  a ^ 2 * b ^ 4 + b ^ 2 * c ^ 4 + c ^ 2 * a ^ 4 + a ^ 3 * b * c ^ 2 + b ^ 3 * c * a ^ 2 + c ^ 3 * a * b ^ 2 \u2265\n   2 * (a ^ 3 * b ^ 2 * c + b ^ 3 * c ^ 2 * a + c ^ 3 * a ^ 2 * b):= by", "target": "\n  intro a b c habc\n  have h1 : a ^ 2 * b ^ 4 + b ^ 2 * c ^ 4 + c ^ 2 * a ^ 4 + a ^ 3 * b * c ^ 2 + b ^ 3 * c * a ^ 2 + c ^ 3 * a * b ^ 2 \u2265\n    2 * (a ^ 3 * b ^ 2 * c + b ^ 3 * c ^ 2 * a + c ^ 3 * a ^ 2 * b) := by\n    cases' eq_or_ne a 0 with ha ha <;> cases' eq_or_ne b 0 with hb hb <;> cases' eq_or_ne c 0 with hc hc <;>\n    simp_all [mul_zero, zero_add]\n    all_goals\n      nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n        mul_self_nonneg (a ^ 2 - b ^ 2), mul_self_nonneg (b ^ 2 - c ^ 2), mul_self_nonneg (c ^ 2 - a ^ 2),\n        mul_self_nonneg (a * b), mul_self_nonneg (b * c), mul_self_nonneg (c * a)]\n  linarith\n  <;> aesop"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_41715_plus : \u2200 a b c : \u211d, a * b * (a + b) = c \u2192 \u2203 k : \u211d, a = k * c \u2228 b = k * c \u2228 c = k * a \u2228 c = k * b \u2228 a = k * b \u2228 b = k * a:= by", "target": "\n  rintro a b c habc\n  use a / c\n  by_cases h : c = 0 <;> field_simp [h] at habc \u22a2 <;>\n  by_cases h' : a = 0 <;> simp_all\n  <;> by_cases h'' : b = 0 <;> simp_all\n  <;> ring_nf\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_24947_plus  (x y : \u211d)\n  (h\u2080 : 0 < x \u2227 0 < y)\n  (h\u2081 : y \u2264 x)\n  (h\u2082 : x \u2260 0)\n  (h\u2083 : y \u2260 0)\n  (h\u2084 : x + 2 * y \u2260 0)\n  (h\u2085 : 3 * x + y \u2260 0)\n  (h\u2086 : x * y \u2260 0) :\n  x * y * ((x + 2 * y) ^ 2 / (x * y)) \u2265 (x + 2 * y) ^ 2 / 3:= by", "target": "\n  have h\u2087 : x * y \u2260 0 := by aesop\n  have h\u2088 : (x * y) * ((x + 2 * y) ^ 2 / (x * y)) = (x + 2 * y) ^ 2 := by\n    field_simp [h\u2087, h\u2082, h\u2083, h\u2084, h\u2085]\n  have h\u2089 : (x + 2 * y) ^ 2 / 3 \u2264 (x + 2 * y) ^ 2 := by\n    rw [div_le_iff (by positivity)]\n    nlinarith\n  nlinarith\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5013 (a b c : \u211d) : 8 * (a + b + c) ^ 3 \u2265 27 * (a + b) * (b + c) * (c + a) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5013_plus (a b c : \u211d) (h\u2081 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2082 : a + b + c = 1) : (1 / (a + b)) ^ 2 + (1 / (b + c)) ^ 2 + (1 / (c + a)) ^ 2 \u2265 (a + b + c) ^ 2 / (a * b + b * c + c * a):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1958 (a b c: \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (habc : a * b * c = 1) : (a + b) / (a + b + 1) + (b + c) / (b + c + 1) + (c + a) / (c + a + 1) \u2265 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1958_plus : \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192 (a + b) / (a + b + 1) + (b + c) / (b + c + 1) + (c + a) / (c + a + 1) \u2265 2 \u2227 (a * b) / (a * b + 1) + (b * c) / (b * c + 1) + (c * a) / (c * a + 1) \u2264 9 / 2:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_5601_plus : \u2200 a b : \u211d, a^2 - 7*a + 10 = 0 \u2227 b^2 - 7*b + 10 = 0 \u2192 a = b \u2228 a = 2 \u2228 a = 5 \u2228 b = 2 \u2228 b = 5:= by", "target": "\n  intro a b h\n  have h\u2081 : a^2 - 7*a + 10 = 0 := h.1\n  have h\u2082 : b^2 - 7*b + 10 = 0 := h.2\n  have h\u2083 : (a - 2) * (a - 5) = 0 := by linarith\n  have h\u2084 : (b - 2) * (b - 5) = 0 := by linarith\n  have h\u2085 : a = 2 \u2228 a = 5 := by\n    cases' eq_zero_or_eq_zero_of_mul_eq_zero h\u2083 with h\u2083 h\u2083 <;>\n    first\n    | exact Or.inl (by linarith)\n    | exact Or.inr (by linarith)\n  have h\u2086 : b = 2 \u2228 b = 5 := by\n    cases' eq_zero_or_eq_zero_of_mul_eq_zero h\u2084 with h\u2084 h\u2084 <;>\n    first\n    | exact Or.inl (by linarith)\n    | exact Or.inr (by linarith)\n  tauto"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_61473_plus (n : \u2115) (hn : 0 < n) : (\u220f k in Finset.range n, (1 - 3 * k * k)) \u2264 1:= by", "target": "\n  rcases n with (_ | _ | n) <;> simp_all [Finset.prod_range_succ',\n    Nat.mul_add, Nat.add_mul, Nat.mul_one, Nat.mul_zero, Nat.zero_add, Nat.add_zero]\n  all_goals nlinarith\n  <;> nlinarith\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_35631_plus : \u2200 (x : \u211d), x \u2208 {x : \u211d | x^2 = 2*x} \u2194 x = 0 \u2228 x = 2:= by", "target": "\n  intro x\n  constructor\n  \u00b7 intro h\n    have h' : x^2 = 2 * x := h\n    have h'' : x * (x - 2) = 0 := by linarith\n    have h''' : x = 0 \u2228 x - 2 = 0 := mul_eq_zero.mp h''\n    cases' h''' with h''' h'''\n    \u00b7 exact Or.inl h'''\n    \u00b7 exact Or.inr (by linarith)\n  \u00b7 intro h\n    cases' h with h h\n    \u00b7 subst h\n      norm_num\n    \u00b7 subst h\n      norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_34536_plus : \u2200 a b c : \u211d, 3 * (a ^ 5 + b ^ 5 + c ^ 5) \u2265 (a ^ 2 + b ^ 2 + c ^ 2) * (a ^ 3 + b ^ 3 + c ^ 3) \u2227 3 * (a ^ 5 + b ^ 5 + c ^ 5) \u2265 (a ^ 2 + b ^ 2 + c ^ 2) * (a ^ 3 + b ^ 3 + c ^ 3) \u2194 3 * (a ^ 5 + b ^ 5 + c ^ 5) \u2265 (a ^ 2 + b ^ 2 + c ^ 2) * (a ^ 3 + b ^ 3 + c ^ 3):= by", "target": "\n  intro a b c\n  constructor <;> intro h\n  linarith [h]\n  constructor <;> linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1535 (x y z : \u211d) (hx : x \u2265 0) (hy : y \u2265 0) (hz : z \u2265 0) (h : x * y * z = 1) : (1 / (x^3 * (x + y^2)))^(1 / 2) + (1 / (y^3 * (y + z^2)))^(1 / 2) + (1 / (z^3 * (z + x^2)))^(1 / 2) \u2265 3 / 2 * Real.sqrt 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1535_plus : \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a * b * c = 1 \u2192 (1 / (a^3 * (a + b^2)))^(1 / 2) + (1 / (b^3 * (b + c^2)))^(1 / 2) + (1 / (c^3 * (c + a^2)))^(1 / 2) \u2265 Real.sqrt 2 \u2227 (Real.sqrt 2 \u2265 1):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_42294_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) : 1 / x ^ 3 + 1 / y ^ 3 + 1 / z ^ 3 \u2265 3  := by", "target": "\n  have h\u2080 : 0 < x * y := by positivity\n  have h\u2081 : 0 < y * z := by positivity\n  have h\u2082 : 0 < z * x := by positivity\n  have h\u2083 : 0 < x * y * z := by positivity\n  field_simp [h]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y),\n    mul_self_nonneg (x * y * z), mul_self_nonneg (x * y * z - x * y),\n    mul_self_nonneg (x * y * z - y * z), mul_self_nonneg (x * y * z - z * x)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_20812_plus  (n : \u2115)\n  (a : \u211d)\n  (h\u2080 : 0 < n)\n  (h\u2081 : 0 < a)\n  (h\u2082 : a \u2264 1) :\n  1 - (1 + a) ^ (1 / n) \u2264 (n - 1) / n * (1 / n) * a:= by", "target": "\n  rcases n with (_ | _ | _ | n) <;>\n    simp_all [Nat.div_eq_of_lt, Nat.div_eq_of_lt, Nat.div_eq_of_lt, Nat.div_eq_of_lt] <;>\n      norm_num <;>\n        ring_nf <;>\n          nlinarith [sq_nonneg a]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_6121 (x\u2081 x\u2082 x\u2083 : \u211d) (hx\u2081 : x\u2081 * x\u2082 = 1 - x\u2083) (hx\u2082 : x\u2082 * x\u2083 = 1 - x\u2081) (hx\u2083 : x\u2083 * x\u2081 = 1 - x\u2082) : x\u2081 = 1 \u2227 x\u2082 = 1 \u2227 x\u2083 = 1 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_6121_plus (x\u2081 x\u2082 x\u2083 : \u211d) (h\u2081 : x\u2081 \u2265 0) (h\u2082 : x\u2082 \u2265 0) (h\u2083 : x\u2083 \u2265 0) (hx\u2081 : x\u2081 + x\u2082 + x\u2083 = 1) (hx\u2082 : x\u2081 * x\u2082 * x\u2083 = 0) : x\u2081 = 0 \u2228 x\u2082 = 0 \u2228 x\u2083 = 0 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_15236_plus : \u2200 a\u2081 a\u2082 a\u2083 S : \u211d, 1 < a\u2081 \u2192 1 < a\u2082 \u2192 1 < a\u2083 \u2192 S = a\u2081 + a\u2082 + a\u2083 \u2192 a\u2081^2 / (a\u2081 - 1) > S \u2192 a\u2082^2 / (a\u2082 - 1) > S \u2192 a\u2083^2 / (a\u2083 - 1) > S \u2192 1 / (a\u2081 + a\u2082) + 1 / (a\u2082 + a\u2083) + 1 / (a\u2083 + a\u2081) > 1:= by", "target": "\n  rintro a\u2081 a\u2082 a\u2083 S h\u2081 h\u2082 h\u2083 h\u2084 h\u2085 h\u2086 h\u2087\n  have h\u2088 : 0 < a\u2081 - 1 := by linarith\n  have h\u2089 : 0 < a\u2082 - 1 := by linarith\n  have h\u2081\u2080 : 0 < a\u2083 - 1 := by linarith\n  have h\u2081\u2081 : 0 < (a\u2081 - 1) * (a\u2082 - 1) := by nlinarith\n  have h\u2081\u2082 : 0 < (a\u2082 - 1) * (a\u2083 - 1) := by nlinarith\n  have h\u2081\u2083 : 0 < (a\u2083 - 1) * (a\u2081 - 1) := by nlinarith\n  have h\u2081\u2084 : 0 < (a\u2081 - 1) * (a\u2082 - 1) * (a\u2083 - 1) := by nlinarith\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084] at h\u2085 h\u2086 h\u2087 \u22a2\n  rw [lt_div_iff (by positivity)] at *\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_14823_plus : \u2200 a : \u2115, \u2211' i : \u2115, (1 / (2 ^ i)) \u2264 1 + \u2211' i : \u2115, (1 / (2 ^ i)) + a:= by", "target": "\n  intro a\n  have h : (\u2211' i : \u2115, 1 / (2 ^ i)) \u2264 (\u2211' i : \u2115, 1 / (2 ^ i)) + a := by\n    omega\n  omega\n  <;> rfl"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4955 : x^4 + 22*x^3 + 172*x^2 + 552*x + 576 = 0 \u2194 x = -2 \u2228 x = -6 \u2228 x = -8 \u2228 x = -12 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4955_plus : \u2200 (x : \u2115), x \u2264 37276 \u2192 x^4 + 22*x^3 + 172*x^2 + 552*x + 576 = 0 \u2192 x = 0 \u2228 x = 1 \u2228 x = 2 \u2228 x = 3 \u2228 x = 4 \u2228 x = 6 \u2228 x = 8 \u2228 x = 12:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_653 (x y z : \u211d) : x / (1 + y * z) + y / (1 + z * x) + z / (1 + x * y) - (x + y + z - x * y * z) = 0 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_653_plus (x y z : \u211d) : x / (1 + y * z) + y / (1 + z * x) + z / (1 + x * y) - (x + y + z - x * y * z) = 0 \u2228 x / (1 + y * z) + y / (1 + z * x) + z / (1 + x * y) - (x + y + z - x * y * z) > 0 \u2228 x / (1 + y * z) + y / (1 + z * x) + z / (1 + x * y) - (x + y + z - x * y * z) < 0 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_23389_plus (n : \u2115) (hn : 1 < n) : (\u2203 k : \u211d, \u2200 x : \u211d, \u2203 y : \u211d, (x ^ 2 + y ^ 2) ^ n = x ^ (2 * n) + y ^ (2 * n)) \u2194 True := by", "target": "\n  constructor\n  intro h\n  trivial\n  intro h\n  use 0\n  intro x\n  use 0\n  ring_nf\n  <;> simp [zero_lt_one, hn]\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_9272_plus (A : Fin 5 \u2192 \u211d) (hA : \u2200 i, A i > 0) (hA_sum : \u2211 i, A i = 1) (hA_prod : \u220f i, A i = 1) : \u220f i, (A i ^ 2 + 1) \u2265 2^5 := by", "target": "\n  have h1 : \u2200 i, A i ^ 2 + 1 \u2265 2 * A i := by\n    intro i\n    nlinarith [sq_nonneg (A i - 1), hA i]\n  have h2 : \u220f i, (A i ^ 2 + 1) \u2265 \u220f i, (2 * A i) := by\n    apply Finset.prod_le_prod\n    \u00b7 intro i _\n      nlinarith [hA i]\n    \u00b7 intro i _\n      exact h1 i\n  calc\n    \u220f i, (A i ^ 2 + 1) \u2265 \u220f i, (2 * A i) := h2\n    _ = 2 ^ 5 * \u220f i, A i := by\n      simp [Finset.prod_mul_distrib, mul_comm]\n    _ = 2 ^ 5 * 1 := by rw [hA_prod]\n    _ = 2 ^ 5 := by simp"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_742 (a b c d e f: \u211d) (h1 : a^2 + b^2 + c^2 + d^2 + e^2 + f^2 = 6) (h2 : a + b + c + d + e + f = 0): a * b * c * d * e * f \u2264 1 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_742_plus (A : Fin 5 \u2192 \u211d) (h1 : \u2211 i, A i ^ 2 = 1) (h2 : \u2211 i, A i = 0) : \u220f i, A i ^ 2 \u2264 1 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_47612_plus (a b c : \u211d) (hab : 0 < a) (h : 0 < b) (hc : 0 < c) (h1 : a + b + c = 1) (h2 : a * b + b * c + c * a = 1 / 3) : a ^ 2 * b ^ 2 * c ^ 2 \u2264 (a * b + b * c + c * a) ^ 3:= by", "target": "\n  simp only [h2, pow_three]\n  have h3 : 0 < a * b := by nlinarith\n  have h4 : 0 < b * c := by nlinarith\n  have h5 : 0 < c * a := by nlinarith\n  have h6 : 0 < a * b * (b * c) := by nlinarith\n  have h7 : 0 < b * c * (c * a) := by nlinarith\n  have h8 : 0 < c * a * (a * b) := by nlinarith\n  nlinarith [sq_nonneg (a * b + b * c + c * a), sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n  <;> assumption\n  <;> assumption\n  <;> assumption"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_30941_plus : \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192 (2 * Real.sqrt 5 + 1) * (a + b + (Real.sqrt 5 + 1) * c) * (b + c + (Real.sqrt 5 + 1) * a) * (c + a + (Real.sqrt 5 + 1) * b) \u2265 (a + b) * (b + c) * (c + a):= by", "target": "\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  refine' le_of_sub_nonneg _\n  ring_nf\n  field_simp\n  ring_nf\n  positivity"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_547 (a b c : \u211d) (p q r : \u211d) (hp : p = a + b + c) (hq : q = a * b + b * c + a * c) (hr : r = a * b * c) (h : p^2 - 2 * q = 3) : 13 - 2 * p^2 - r^2 + 2 * p * r \u2265 0 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_547_plus (A : Fin 5 \u2192 \u211d) (h\u2081 : \u2200 i, A i \u2265 0) (h\u2082 : \u2211 i, A i = 1) (h\u2083 : \u2211 i, (A i)^2 = 1/2) : \u2211 i, (A i)^3 \u2264 1/2 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_30820_plus (x : \u2102) (hx : \u2016x\u2016 = 1) : \u2016x^2019 - 1\u2016 \u2264 2:= by", "target": "\n  have h : \u2016x^2019\u2016 = 1 := by\n    simp [norm_pow, hx]\n  calc\n    \u2016x^2019 - 1\u2016 \u2264 \u2016x^2019\u2016 + \u2016(1 : \u2102)\u2016 := by\n      apply norm_sub_le\n    _ = 1 + 1 := by simp [h]\n    _ = 2 := by ring\n  <;> rfl"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_41037_plus : \u2200 a b c : \u211d, (a * Real.sqrt (a ^ 2 + b ^ 2) + b * Real.sqrt (b ^ 2 + c ^ 2) + c * Real.sqrt (c ^ 2 + a ^ 2)) \u2264 (Real.sqrt 2) * (a ^ 2 + b ^ 2 + c ^ 2 + (a ^ 2 + b ^ 2 + c ^ 2)):= by", "target": "\n  intro a b c\n  have h\u2080 : Real.sqrt 2 \u2265 0 := Real.sqrt_nonneg 2\n  have h\u2081 : a * Real.sqrt (a ^ 2 + b ^ 2) \u2264 Real.sqrt 2 * (a ^ 2 + b ^ 2) := by\n    apply le_of_pow_le_pow_left two_ne_zero (by positivity)\n    nlinarith [sq_sqrt (show 0 \u2264 2 by norm_num),\n      Real.sq_sqrt (show 0 \u2264 a ^ 2 + b ^ 2 by positivity),\n      mul_self_nonneg (a ^ 2 + b ^ 2),\n      mul_self_nonneg (a * Real.sqrt (a ^ 2 + b ^ 2) - Real.sqrt 2 * (a ^ 2 + b ^ 2))]\n  have h\u2082 : b * Real.sqrt (b ^ 2 + c ^ 2) \u2264 Real.sqrt 2 * (b ^ 2 + c ^ 2) := by\n    apply le_of_pow_le_pow_left two_ne_zero (by positivity)\n    nlinarith [sq_sqrt (show 0 \u2264 2 by norm_num),\n      Real.sq_sqrt (show 0 \u2264 b ^ 2 + c ^ 2 by positivity),\n      mul_self_nonneg (b ^ 2 + c ^ 2),\n      mul_self_nonneg (b * Real.sqrt (b ^ 2 + c ^ 2) - Real.sqrt 2 * (b ^ 2 + c ^ 2))]\n  have h\u2083 : c * Real.sqrt (c ^ 2 + a ^ 2) \u2264 Real.sqrt 2 * (c ^ 2 + a ^ 2) := by\n    apply le_of_pow_le_pow_left two_ne_zero (by positivity)\n    nlinarith [sq_sqrt (show 0 \u2264 2 by norm_num),\n      Real.sq_sqrt (show 0 \u2264 c ^ 2 + a ^ 2 by positivity),\n      mul_self_nonneg (c ^ 2 + a ^ 2),\n      mul_self_nonneg (c * Real.sqrt (c ^ 2 + a ^ 2) - Real.sqrt 2 * (c ^ 2 + a ^ 2))]\n  nlinarith [h\u2080, h\u2081, h\u2082, h\u2083]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_50382_plus : \u2200 z : \u2102, (1 + z) ^ 3 - (1 - z) ^ 3 = 3 * z * (2 + z ^ 2) \u2192 z.im = 0 \u2228 z.re = 0 \u2228 z.re = -1 \u2228 z.re = 1  := by", "target": "\n  intro z hz\n  rw [pow_three, pow_three] at hz\n  simp [sub_eq_add_neg, add_assoc, mul_add, mul_comm, mul_left_comm] at hz\n  ring_nf at hz\n  norm_num at hz\n  left\n  aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_12794_plus : \u2200 a b c : \u211d, 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 a + b + c \u2264 2 \u2192 9 * a * b * c \u2265 8 * (a * b + b * c + c * a - 1):= by", "target": "\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  cases' le_total a b with hab hab <;>\n  cases' le_total b c with hbc hbc <;>\n  cases' le_total c a with hca hca <;>\n  nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a),\n    mul_self_nonneg (a + b + c - 2)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_185 : (2:\u211d) * (Real.log 2 / Real.log 3.1)^(Real.sqrt 2) > 1 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_185_plus : \u2203 x y : \u211d, Real.sqrt x * Real.sqrt y > 1 \u2227 x < 10 \u2227 y < 10:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_24217_plus (x y z : \u211d) (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2081 : x + y + z = 1) : (1 / (1 + x ^ 2) + 1 / (1 + y ^ 2) + 1 / (1 + z ^ 2)) * (1 + x * y + y * z + z * x) \u2264 25 / 4   := by", "target": "\n  have h\u2082 : 0 < x * y := by nlinarith\n  have h\u2083 : 0 < y * z := by nlinarith\n  have h\u2084 : 0 < z * x := by nlinarith\n  have h\u2085 : 0 < x * y * z := by nlinarith\n  have h\u2086 : 1 / (1 + x ^ 2) \u2264 1 := by\n    rw [div_le_iff (show (0 : \u211d) < 1 + x ^ 2 by nlinarith)]\n    nlinarith\n  have h\u2087 : 1 / (1 + y ^ 2) \u2264 1 := by\n    rw [div_le_iff (show (0 : \u211d) < 1 + y ^ 2 by nlinarith)]\n    nlinarith\n  have h\u2088 : 1 / (1 + z ^ 2) \u2264 1 := by\n    rw [div_le_iff (show (0 : \u211d) < 1 + z ^ 2 by nlinarith)]\n    nlinarith\n  calc\n    (1 / (1 + x ^ 2) + 1 / (1 + y ^ 2) + 1 / (1 + z ^ 2)) * (1 + x * y + y * z + z * x) \u2264\n        (1 + 1 + 1) * (1 + x * y + y * z + z * x) := by\n      gcongr <;> nlinarith\n    _ \u2264 25 / 4 := by\n      nlinarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_43605_plus : \u2200 a b c : \u211d, (a^2 * (b + c) / (b^2 + c^2) + b^2 * (c + a) / (c^2 + a^2) + c^2 * (a + b) / (a^2 + b^2)) \u2265 a + b + c \u2228 (a^2 * (b + c) / (b^2 + c^2) + b^2 * (c + a) / (c^2 + a^2) + c^2 * (a + b) / (a^2 + b^2)) < a + b + c := by", "target": "\n  intro a b c\n  by_cases h : a + b + c \u2264 a^2 * (b + c) / (b^2 + c^2) + b^2 * (c + a) / (c^2 + a^2) + c^2 * (a + b) / (a^2 + b^2)\n  exact Or.inl (by linarith)\n  exact Or.inr (by linarith)"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_58594_plus (a b c d : \u211d) (h\u2081 : 0 < a \u2227 0 < b \u2227 0 < c \u2227 0 < d) (h\u2082 : a * b * c * d = 1) : a + b + c + d \u2265 4 * (1 / (a + b + c + d)):= by", "target": "\n  have h\u2083 : a + b + c + d > 0 := by linarith\n  field_simp [h\u2083]\n  rw [div_le_iff h\u2083]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (a - d), sq_nonneg (b - c), sq_nonneg (b - d), sq_nonneg (c - d), mul_pos h\u2081.1 h\u2081.2.1, mul_pos h\u2081.1 h\u2081.2.2.1, mul_pos h\u2081.1 h\u2081.2.2.2, mul_pos h\u2081.2.1 h\u2081.2.2.1, mul_pos h\u2081.2.1 h\u2081.2.2.2, mul_pos h\u2081.2.2.1 h\u2081.2.2.2]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_105_plus (h\u2080 : 0 \u2264 x) (h\u2081 : 0 \u2264 y) (h\u2082 : 0 \u2264 z) (h\u2083 : x + y + z = 1) (h\u2084 : x * y + x * z + y * z = 0) :\n    x ^ 2 * y ^ 2 * (x + y) + y ^ 2 * z ^ 2 * (y + z) + z ^ 2 * x ^ 2 * (z + x) \u2264 1:= by", "target": "\n  have h\u2085 : x * y = 0 := by\n    nlinarith\n  have h\u2086 : x * z = 0 := by\n    nlinarith\n  have h\u2087 : y * z = 0 := by\n    nlinarith\n  have h\u2088 : x ^ 2 * y ^ 2 * (x + y) \u2264 0 := by\n    calc\n      x ^ 2 * y ^ 2 * (x + y) \u2264 0 * (x + y) := by gcongr <;> nlinarith\n      _ = 0 := by simp\n  have h\u2089 : y ^ 2 * z ^ 2 * (y + z) \u2264 0 := by\n    calc\n      y ^ 2 * z ^ 2 * (y + z) \u2264 0 * (y + z) := by gcongr <;> nlinarith\n      _ = 0 := by simp\n  have h\u2081\u2080 : z ^ 2 * x ^ 2 * (z + x) \u2264 0 := by\n    calc\n      z ^ 2 * x ^ 2 * (z + x) \u2264 0 * (z + x) := by gcongr <;> nlinarith\n      _ = 0 := by simp\n  linarith\n  <;> simp [h\u2085, h\u2086, h\u2087]\n  <;> linarith\n  <;> linarith\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_36633_plus (x y z : \u211d) (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2081 : x + y + z = 1) (h\u2082 : x * y + x * z + y * z = 1 / 3) : x ^ 2 * y ^ 2 * z ^ 2 \u2264 9 / 81 := by", "target": "\n  have : x ^ 2 + y ^ 2 + z ^ 2 = (x + y + z) ^ 2 - 2 * (x * y + x * z + y * z) := by ring\n  simp only [h\u2081, h\u2082, mul_one, mul_div_cancel_left, pow_two] at this\n  norm_num at this\n  have : x ^ 2 * y ^ 2 * z ^ 2 \u2264 9 / 81 := by\n    nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (x ^ 2 - z ^ 2), sq_nonneg (y ^ 2 - z ^ 2),\n      mul_self_nonneg (x * y), mul_self_nonneg (x * z), mul_self_nonneg (y * z)]\n  linarith\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5014 (x y z : \u211d) : 9 * (x ^ 2 + y ^ 2 + z ^ 2) * (x ^ 4 + 2 * y ^ 2 * x ^ 2 + 2 * x ^ 2 * z ^ 2 + y ^ 4 + 2 * y ^ 2 * z ^ 2 + z ^ 4 - 3 * y * z ^ 2 * x - 3 * y * z * x ^ 2 - 3 * y ^ 2 * z * x) \u2265 0 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5014_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x * y + x * z + y * z = 0) : x ^ 2 * y ^ 2 * z ^ 2 * (x + y + z) \u2264 x ^ 2 * (x * y) ^ 2 + x ^ 2 * (x * z) ^ 2 + x ^ 2 * (y * z) ^ 2:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1503 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a / (b + c) + b / (a + c) + c / (a + b) : \u211d) \u2265 (a ^ 2 / (a ^ 2 + b * c) + b ^ 2 / (b ^ 2 + a * c) + c ^ 2 / (c ^ 2 + a * b) : \u211d) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1503_plus : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 a * b * c > 0 \u2227 (\u2203 x y z : \u211d, x * y * z > 0 \u2227 x ^ 2 / (x ^ 2 + y * z) + y ^ 2 / (y ^ 2 + z * x) + z ^ 2 / (z ^ 2 + x * y) \u2264 a / (b + c) + b / (a + c) + c / (a + b)) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_52136_plus : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 a * b * c > 0 \u2227 (\u2203 x y z : \u211d, x > 0 \u2227 y > 0 \u2227 z > 0 \u2227 a * b * c = x * y * z) \u2227 (\u2203 x y z : \u211d, x > 0 \u2227 y > 0 \u2227 z > 0 \u2227 9 * a * b * c = x * y * z) := by", "target": "\n  rintro a b c \u27e8a0, b0, c0\u27e9\n  have abc0 : a * b * c > 0 := mul_pos (mul_pos a0 b0) c0\n  have abc1 : \u2203 x y z : \u211d, x > 0 \u2227 y > 0 \u2227 z > 0 \u2227 a * b * c = x * y * z :=\n    \u27e8a, b, c, by linarith, by linarith, by linarith, by linarith\u27e9\n  have abc2 : \u2203 x y z : \u211d, x > 0 \u2227 y > 0 \u2227 z > 0 \u2227 9 * a * b * c = x * y * z :=\n    \u27e89 * a, b, c, by positivity, by linarith, by linarith, by linarith\u27e9\n  exact \u27e8abc0, abc1, abc2\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_81702_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (h\u2080 : 0 \u2264 a + b + c) (h\u2081 : a + b + c \u2264 1) (h\u2082 : a * b + b * c + c * a \u2264 1) : (a + b + c) * (a + b + c + 1) * (a + b + c + 1) * (a + b + c + 1) * (a + b + c + 1) * (a + b + c + 1) \u2264 16 * (a + b + c + 1) ^ 5:= by", "target": "\n  have : a + b + c \u2264 1 := by linarith\n  have : 0 \u2264 a + b + c := by linarith\n  have : 0 \u2264 a * b + b * c + c * a := by nlinarith\n  have : 0 \u2264 (a + b + c) ^ 2 := by nlinarith\n  have : 0 \u2264 (a + b + c) ^ 3 := by nlinarith\n  have : 0 \u2264 (a + b + c) ^ 4 := by nlinarith\n  have : 0 \u2264 (a + b + c) ^ 5 := by nlinarith\n  nlinarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_24648_plus : \u2200 a b c d : \u2115, a \u2264 b \u2192 c \u2264 d \u2192 a + b \u2264 c + d \u2192 Real.sqrt ((a + b) * (c + d)) \u2264 (a + b + c + d) / 2  := by", "target": "\n  intro a b c d hab hcd habc\n  have h : 0 \u2264 (a + b : \u211d) := by positivity\n  have h' : 0 \u2264 (c + d : \u211d) := by positivity\n  have h'' : (a + b : \u211d) + (c + d) = (a + c + b + d) := by ring\n  have h''' : Real.sqrt ((a + b : \u211d) * (c + d)) \u2264 ((a + b) + (c + d)) / 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    positivity\n    linarith [sq_nonneg ((a + b : \u211d) - (c + d))]\n  linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_62125_plus (a b c : \u211d) (h\u2081 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2082 : a + b + c = 1) :  (1 / (a + b) + 1 / (b + c) + 1 / (c + a)) \u2265 27 / 4 * (a * b + b * c + c * a):= by", "target": "\n  have h\u2083 : 0 < a + b := by linarith\n  have h\u2084 : 0 < b + c := by linarith\n  have h\u2085 : 0 < c + a := by linarith\n  have h\u2086 : 0 < a * b := by nlinarith\n  have h\u2087 : 0 < b * c := by nlinarith\n  have h\u2088 : 0 < c * a := by nlinarith\n  have h\u2089 : 0 < (a + b) * (b + c) * (c + a) := by positivity\n  have h\u2081\u2080 : 0 < (a + b) * (b + c) * (c + a) * (a + b + c) := by positivity\n  field_simp [h\u2083, h\u2084, h\u2085, h\u2086, h\u2087, h\u2088, h\u2089, h\u2081\u2080]\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b + b * c + c * a), mul_self_nonneg (a * b - b * c),\n    mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b)]\n  positivity\n  positivity"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_81380_plus : \u2200 a b c d : \u211d, (a + b) ^ 2 / (b + c) ^ 2 + (b + c) ^ 2 / (c + d) ^ 2 + (c + d) ^ 2 / (d + a) ^ 2 + (d + a) ^ 2 / (a + b) ^ 2 \u2265 2 - 2 * (2 : \u211d) ^ (3 / 2) := by", "target": "\n  intro a b c d\n  norm_num\n  have h\u2080 : (a + b) ^ 2 / (b + c) ^ 2 + (b + c) ^ 2 / (c + d) ^ 2 + (c + d) ^ 2 / (d + a) ^ 2 + (d + a) ^ 2 / (a + b) ^ 2 \u2265 0 := by\n    positivity\n  have h\u2081 : (2 : \u211d) ^ (3 / 2) \u2265 1 := by\n    norm_num\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5930 (a b c : \u211d) : Real.sqrt (a * b * (a + b)) + Real.sqrt (b * c * (b + c)) + Real.sqrt (c * a * (c + a)) \u2265 (2^(1/3) * (a * b + b * c + c * a)^(1/2) * ((a + b) * (b + c) * (c + a))^(1/6)) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5930_plus (a b c : \u211d) (hab : 0 \u2264 a) (hbc : 0 \u2264 b) (hca : 0 \u2264 c) : (\u2211 k in Finset.Icc 1 3, Real.sqrt (a + b) + Real.sqrt (b + c) + Real.sqrt (c + a)) \u2265 3 * (Real.sqrt (2 * (a + b + c)) - Real.sqrt (a + b + b + c + c + a)) / 3:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2759 (a b : \u211d) (ha : 0 < a) (hb : 0 < b) : (a / Real.sqrt (a ^ 2 + b ^ 2) + (2 : \u211d) * b / Real.sqrt ((2 : \u211d) * b ^ 2 + a * b)) \u2264 Real.sqrt ((5 + Real.sqrt 5) / 2) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2759_plus : \u2200 a b : \u211d, 0 < a \u2227 0 < b \u2192 Real.sqrt (a ^ 2 + b ^ 2) \u2264 (a + b) * Real.sqrt 2:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_67024_plus (p : \u2115) (hp : p.Prime) : \u2203 k : \u2124, (p : \u2124) \u2223 k^2 - 4 \u2228 (p : \u2124) \u2223 k^2 - 9 \u2228 (p : \u2124) \u2223 k^2 - 25:= by", "target": "\n  use 5\n  norm_num [hp.ne_zero]\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_12027_plus : \u2200 a b c : \u211d, a * b + b * c + c * a \u2264 max (a ^ 2 + b ^ 2) (b ^ 2 + c ^ 2) \u2228 max (b ^ 2 + c ^ 2) (c ^ 2 + a ^ 2) \u2264 3 * (a ^ 2 + b ^ 2 + c ^ 2):= by", "target": "\n  intro a b c\n  by_cases h\u2080 : a * b + b * c + c * a \u2264 max (a ^ 2 + b ^ 2) (b ^ 2 + c ^ 2)\n  \u00b7 left\n    exact h\u2080\n  \u00b7 right\n    cases' le_total (b ^ 2 + c ^ 2) (c ^ 2 + a ^ 2) with h\u2081 h\u2081 <;>\n      cases' le_total (a ^ 2 + b ^ 2) (b ^ 2 + c ^ 2) with h\u2082 h\u2082 <;>\n        simp_all [add_assoc, add_left_comm, add_comm, max_comm, max_left_comm, max_assoc]\n    all_goals nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4718 (f : \u211d \u2192 \u211d) : (\u2200 x y, f x = (f (x + y) + f (x - y)) / 2) \u2194 \u2203 k, \u2200 x, f x = k * x := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4718_plus (n : \u2115) (hn : 0 < n) : (\u2203 k : \u211d, \u2200 x : \u211d, \u2203 y : \u211d, (x^2 - k^2) * (y^2 - k^2) \u2264 k * (x * y) + k * (x * y) + (x^2 + y^2) + k * (x * y) + k * (x * y)) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_21860_plus : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 a * b * c = 1 \u2192 3 / 4 \u2264 1 / (3 * a + 1) + 1 / (3 * b + 1) + 1 / (3 * c + 1) \u2228 (a - b) ^ 2 / (a + b) ^ 2 \u2264 1:= by", "target": "\n  rintro a b c \u27e8ha, hb, hc\u27e9 h\n  right\n  apply div_le_one_of_le\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a + b)]\n  nlinarith [ha, hb, hc, h]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_27562_plus : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 a + b + c = 1 \u2192 (2 * a * b) * (2 * b * c) * (2 * c * a) \u2264 1/32 := by", "target": "\n  rintro a b c \u27e8ha, hb, hc\u27e9 h\n  have h1 : 0 < a * b := by positivity\n  have h2 : 0 < b * c := by positivity\n  have h3 : 0 < c * a := by positivity\n  have h4 : (a + b + c)^2 = 1 := by rw [h]; ring\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b + b * c + c * a), mul_self_nonneg (a * b - b * c),\n    mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_34389_plus : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 a * b * c > 0 \u2227 (\u2203 x y z : \u211d, x * y * z > 0 \u2227 x + y + z = a + b + c \u2227 1 / x + 1 / y + 1 / z \u2265 3 / (x + y + z)):= by", "target": "\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  refine' \u27e8mul_pos (mul_pos ha hb) hc, _\u27e9\n  refine' \u27e8a, b, c, mul_pos (mul_pos ha hb) hc, by ring, _\u27e9\n  refine' le_of_sub_nonneg _\n  field_simp\n  rw [le_div_iff (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> assumption\n  <;> try norm_num\n  <;> linarith\n  <;> try norm_num\n  <;> linarith\n  <;> try norm_num\n  <;> linarith\n  <;> try norm_num\n  <;> linarith\n  <;> try norm_num\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_395_plus :\n \u2200 x : \u211d, (196 + 64 * (Real.cos x)^2 + 36 * (Real.sin x)^2 + (Real.cos (2 * x))^2 + 64 * (Real.sin (2 * x))^2 - 16 * Real.cos (2 * x) * Real.cos x - 12 * Real.cos (2 * x) * Real.sin x + 28 * Real.cos (2 * x) + 96 * Real.cos x * Real.sin x - 224 * Real.cos x - 168 * Real.sin x + (Real.sin (2 * x))^2 + 64 * (Real.sin x)^2 + 36 * (Real.cos x)^2 + 2304 - 16 * Real.sin (2 * x) * Real.sin x + 12 * Real.sin (2 * x) * Real.cos x - 96 * Real.sin (2 * x) - 96 * Real.sin x * Real.cos x + 768 * Real.sin x - 576 * Real.cos x) \u2265 0  := by", "target": "\n  intro x; nlinarith [Real.cos_sq_add_sin_sq x, Real.cos_two_mul x, Real.sin_two_mul x, sq_nonneg (Real.cos x - 3 / 4), sq_nonneg (Real.sin x - 3 / 4), sq_nonneg (Real.cos x + 3 / 4), sq_nonneg (Real.sin x + 3 / 4), Real.cos_sq_add_sin_sq (2 * x)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_14710_plus : \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a + b > c \u2192 b + c > a \u2192 a + c > b \u2192  Real.sqrt (2 * b ^ 2 + 2 * c ^ 2 - a ^ 2) > 0 \u2227 Real.sqrt (2 * c ^ 2 + 2 * a ^ 2 - b ^ 2) > 0 \u2227 Real.sqrt (2 * a ^ 2 + 2 * b ^ 2 - c ^ 2) > 0:= by", "target": "\n  rintro a b c \u27e8ha, hb, hc\u27e9 hab hbc hac\n  have h\u2081 : 0 < Real.sqrt (2 * b ^ 2 + 2 * c ^ 2 - a ^ 2) := by\n    apply Real.sqrt_pos.mpr\n    nlinarith [sq_nonneg (b + c), sq_nonneg (b - c), ha, hb, hc]\n  have h\u2082 : 0 < Real.sqrt (2 * c ^ 2 + 2 * a ^ 2 - b ^ 2) := by\n    apply Real.sqrt_pos.mpr\n    nlinarith [sq_nonneg (c + a), sq_nonneg (c - a), ha, hb, hc]\n  have h\u2083 : 0 < Real.sqrt (2 * a ^ 2 + 2 * b ^ 2 - c ^ 2) := by\n    apply Real.sqrt_pos.mpr\n    nlinarith [sq_nonneg (a + b), sq_nonneg (a - b), ha, hb, hc]\n  exact \u27e8h\u2081, h\u2082, h\u2083\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_19232_plus : \u2200 n : \u2115, (\u220f k in Finset.Icc 1 n, k^2) \u2265 1^2:= by", "target": "\n  intro n\n  apply Nat.succ_le_of_lt\n  cases n with\n  | zero => simp\n  | succ n =>\n    induction' n with n ih\n    all_goals simp_all [Finset.prod_Icc_succ_top, Nat.succ_le_succ_iff]\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4033 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1 \u2228 a + b + c = 3) : (b ^ 2 * c + a ^ 2 * c) / (a ^ 2 * b + 2 * b ^ 2 * c + 2 * a ^ 2 * c) + (b ^ 2 * a + c ^ 2 * a) / (c ^ 2 * b + 2 * b ^ 2 * a + 2 * c ^ 2 * a) + (a ^ 2 * b + b ^ 2 * c) / (b ^ 2 * a + 2 * a ^ 2 * b + 2 * b ^ 2 * c) \u2264 (2 * (a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + a ^ 2 * c ^ 2)) / (5 / 3 * (a + b + c)) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4033_plus : \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 3 \u2192 (b ^ 2 * c + a ^ 2 * c) / (a ^ 2 * b + 2 * b ^ 2 * c + 2 * a ^ 2 * c) + (b ^ 2 * a + c ^ 2 * a) / (c ^ 2 * b + 2 * b ^ 2 * a + 2 * c ^ 2 * a) + (a ^ 2 * b + b ^ 2 * c) / (b ^ 2 * a + 2 * a ^ 2 * b + 2 * b ^ 2 * c) \u2264 2 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_39072_plus : \u2200 a b c : \u211d, \u2203 d : \u211d, d \u2265 a * b * c \u2227 a * b * c \u2264 a * b * c + (a ^ 2 + b ^ 2 + c ^ 2) / 3:= by", "target": "\n  intro a b c\n  refine' \u27e8a * b * c, le_refl _, _\u27e9\n  ring_nf\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c), sq_nonneg (a + b),\n    sq_nonneg (a + c), sq_nonneg (b + c)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_12766_plus : \u2200 a b c d : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 d \u2265 0 \u2192 a * b * c + b * c * d + c * d * a + d * a * b = 4 \u2192 a * b + b * c + c * d + d * a \u2264 4 \u2192 a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2 \u2264 4 \u2192 a * b * c * d \u2264 1:= by", "target": "\n  rintro a b c d \u27e8ha, hb, hc, hd\u27e9 habc habc' habc''\n  have h\u2081 : 0 \u2264 a * b := by positivity\n  have h\u2082 : 0 \u2264 b * c := by positivity\n  have h\u2083 : 0 \u2264 c * d := by positivity\n  have h\u2084 : 0 \u2264 d * a := by positivity\n  have h\u2085 : 0 \u2264 a * b * c := by positivity\n  have h\u2086 : 0 \u2264 b * c * d := by positivity\n  have h\u2087 : 0 \u2264 c * d * a := by positivity\n  have h\u2088 : 0 \u2264 d * a * b := by positivity\n  nlinarith [sq_nonneg (a - b), sq_nonneg (c - d), sq_nonneg (a * b - c * d), sq_nonneg (b * c - d * a)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_46331_plus : \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a * b + b * c + c * a = 1 \u2192 a ^ 3 * b ^ 3 + b ^ 3 * c ^ 3 + c ^ 3 * a ^ 3 + 3 * a * b * c * (a * b + b * c + c * a) \u2265 a ^ 3 * b ^ 3 * c + b ^ 3 * c ^ 3 * a + c ^ 3 * a ^ 3 * b := by", "target": "\n  rintro a b c \u27e8ha, hb, hc, h\u27e9\n  have : 0 \u2264 a * b := by positivity\n  have : 0 \u2264 b * c := by positivity\n  have : 0 \u2264 c * a := by positivity\n  have : 0 \u2264 a * b * (a * b + b * c + c * a) := by positivity\n  have : 0 \u2264 b * c * (a * b + b * c + c * a) := by positivity\n  have : 0 \u2264 c * a * (a * b + b * c + c * a) := by positivity\n  have : 0 \u2264 a ^ 3 * b ^ 3 := by positivity\n  have : 0 \u2264 b ^ 3 * c ^ 3 := by positivity\n  have : 0 \u2264 c ^ 3 * a ^ 3 := by positivity\n  nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b),\n    mul_self_nonneg (a * b * c), mul_self_nonneg (a * b * c * (a - b)),\n    mul_self_nonneg (a * b * c * (b - c)), mul_self_nonneg (a * b * c * (c - a))]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_71300_plus :\n  Finset.card (Finset.filter (\u03bb k : \u2115 => 1 < k \u2227 k \u2264 300 \u2227 (Nat.gcd k 300) \u2264 6) (Finset.Icc 1 300)) \u2265 197 := by", "target": "\n  simp only [Finset.card, Finset.filter, Finset.Icc, Nat.gcd_comm]\n  apply Nat.le_of_sub_eq_zero\n  rfl"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_34819_plus : \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a * b * c > 0 \u2227 (\u2203 x y z : \u211d, x > 0 \u2227 y > 0 \u2227 z > 0 \u2227 a^2 / x + b^2 / y + c^2 / z >= a + b + c) := by", "target": "\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  constructor\n  \u00b7 positivity\n  use a, b, c\n  constructor\n  \u00b7 positivity\n  constructor\n  \u00b7 positivity\n  constructor\n  \u00b7 positivity\n  rw [add_comm]\n  rw [add_comm]\n  apply le_of_sub_nonneg\n  field_simp\n  ring_nf\n  positivity"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4991 : \u2200 n : \u2115, n \u2265 2 \u2192 0 < ((Real.log n)^2)/(n^2) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4991_plus : \u2200 (x : \u2115), x \u2265 2 \u2192 \u2203 y, y > x \u2227 y \u2265 2 \u2227 0 < ((Real.log y)^2)/(y^2):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1071 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (h : a^2 + b^2 + c^2 = 3) : (a + b) ^ 2 / (2 * a + a * b + 2 * b) + (b + c) ^ 2 / (2 * b + b * c + 2 * c) + (c + a) ^ 2 / (2 * c + c * a + 2 * a) \u2264 36 / (5 * (a + b + c)) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1071_plus : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 a * b * c = 1 \u2192 a ^ 2 + b ^ 2 + c ^ 2 = 3 \u2192 (a + b) ^ 2 / (2 * a + a * b + 2 * b) + (b + c) ^ 2 / (2 * b + b * c + 2 * c) + (c + a) ^ 2 / (2 * c + c * a + 2 * a) \u2264 36 / (5 * (a + b + c)) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_1236_plus (x : \u211d) (h\u2081 : 0 < x) (h\u2082 : x \u2264 1) :\n  x ^ 5 * (x ^ 2 - 4 * x + 3) \u2264 1:= by", "target": "\n  have h\u2083 : 0 \u2264 x ^ 2 := by positivity\n  have h\u2084 : x ^ 2 \u2264 1 := by\n    nlinarith\n  have h\u2085 : 0 \u2264 x ^ 3 := by positivity\n  have h\u2086 : x ^ 3 \u2264 1 := by\n    nlinarith\n  have h\u2087 : 0 \u2264 x ^ 4 := by positivity\n  have h\u2088 : x ^ 4 \u2264 1 := by\n    nlinarith\n  have h\u2089 : 0 \u2264 x ^ 5 := by positivity\n  have h\u2081\u2080 : x ^ 5 \u2264 1 := by\n    nlinarith\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5139 (a b c : \u211d) : 2 * (a * b + b * c + c * a) \u2264 (2 / 3) * (a + b + c) ^ 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5139_plus (a b c : \u211d) (h\u2081 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2082 : a + b + c = 3) : (a ^ 2 / (b + c) + b ^ 2 / (a + c) + c ^ 2 / (a + b) \u2265 3 / 2) \u2227 (2 * (a * b + b * c + c * a) \u2264 (2 / 3) * (a + b + c) ^ 2):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_32533_plus : \u2200 a b : \u211d, 0 < a \u2227 0 < b \u2192 Real.sqrt (a ^ 2 + b ^ 2) \u2264 (a ^ 2 + b ^ 2) / (2 * Real.sqrt (a ^ 2 + b ^ 2)) + (2 * (a ^ 2 + b ^ 2)) / (a + b) + (a + b) / 2:= by", "target": "\n  rintro a b \u27e8ha, hb\u27e9\n  have h1 : 0 < Real.sqrt (a ^ 2 + b ^ 2) := Real.sqrt_pos.mpr (by positivity)\n  have h2 : 0 < a ^ 2 + b ^ 2 := by positivity\n  have h3 : 0 < a + b := by positivity\n  have h4 : 0 < 2 * Real.sqrt (a ^ 2 + b ^ 2) := by positivity\n  have h5 : 0 < a ^ 2 + b ^ 2 + (a + b) ^ 2 := by positivity\n  have h6 : 0 < Real.sqrt (a ^ 2 + b ^ 2) * (a + b) := by positivity\n  field_simp [h1, h2, h3, h4, h5, h6]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_sqrt (show 0 \u2264 a ^ 2 + b ^ 2 from by positivity),\n    mul_self_nonneg (a - b),\n    mul_self_nonneg (Real.sqrt (a ^ 2 + b ^ 2) - a - b)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_36369_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) :\n  8 * (x^3 + y^3 + z^3)^2 \u2265 9 * (x^2 + y * z) * (y^2 + z * x) * (z^2 + x * y)   \u2227\n  (x^3 + y^3 + z^3)^2 \u2265 (x * y * z)^2 \u2227 (x^2 + y * z) * (y^2 + z * x) * (z^2 + x * y) \u2265 0:= by", "target": "\n  have hxy : 0 \u2264 x * y := mul_nonneg hx hy\n  have hyz : 0 \u2264 y * z := mul_nonneg hy hz\n  have hxz : 0 \u2264 x * z := mul_nonneg hx hz\n  have hxyz : 0 \u2264 x * y * z := by positivity\n  refine' \u27e8_, _, _\u27e9\n  \u00b7 nlinarith [sq_nonneg (x ^ 2 - y * z), sq_nonneg (y ^ 2 - z * x), sq_nonneg (z ^ 2 - x * y),\n      mul_self_nonneg (x * y + y * z + z * x), mul_self_nonneg (x * y - y * z),\n      mul_self_nonneg (y * z - z * x), mul_self_nonneg (z * x - x * y)]\n  \u00b7 nlinarith [sq_nonneg (x ^ 2 - y * z), sq_nonneg (y ^ 2 - z * x), sq_nonneg (z ^ 2 - x * y),\n      mul_self_nonneg (x * y + y * z + z * x), mul_self_nonneg (x * y - y * z),\n      mul_self_nonneg (y * z - z * x), mul_self_nonneg (z * x - x * y)]\n  \u00b7 positivity"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_18688_plus (n : \u2115) (hn : 0 < n) : (\u2203 (f : \u2115 \u2192 \u211d), \u2200 m > 0, f m = 2 * a * f (m - 1) - b ^ 2 * f (m - 2)) \u2192 \u2203 (f : \u2115 \u2192 \u211d), f n = 2 * a * f (n - 1) - b ^ 2 * f (n - 2):= by", "target": "\n  intro h\n  let a := 1\n  let b := 1\n  let a := 0\n  let b := 0\n  exact \u27e8fun _ => 0, by simp\u27e9\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5533 : \u2211' k : \u2115, (1 : \u211d) / k^6 = \u03c0^6 / 945 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5533_plus : \u2211' k : \u2115, ((1 : \u211d) / k^6) * k = \u2211' k : \u2115, (1 : \u211d) / k^5 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3540 (a b c : \u211d) (ha : a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0) (hab : a + b + c = 2) : a ^ 3 + b ^ 3 + c ^ 3 + 4 * a * b * c \u2265 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3540_plus : \u2200 a b c : \u211d, a + b + c = 2 \u2227 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2192 a ^ 3 + b ^ 3 + c ^ 3 + 4 * a * b * c \u2265 2:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_54246_plus : \u2200 a b : \u211d, (a + b) ^ 2 + (a - b) ^ 2 \u2265 2 * a * b * 2 * (a ^ 2 + b ^ 2) / (a ^ 2 + b ^ 2):= by", "target": "\n  intro a b\n  by_cases h : a ^ 2 + b ^ 2 = 0 <;>\n    field_simp [h]\n  all_goals\n    ring_nf\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a + b), sq_nonneg (a ^ 2 - b ^ 2),\n      sq_nonneg (a ^ 2 + b ^ 2), sq_nonneg (a ^ 2 + b ^ 2 - 2 * a * b),\n      sq_nonneg (a ^ 2 + b ^ 2 + 2 * a * b)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_6624_plus (A : Fin 5 \u2192 \u211d) (hA : \u2200 i, 0 < A i) : (A 0 * A 1) / (A 0 ^ 2 + A 1 ^ 2 + A 2 ^ 2 + A 3 ^ 2 + A 4 ^ 2) + (A 1 * A 2) / (A 1 ^ 2 + A 2 ^ 2 + A 3 ^ 2 + A 4 ^ 2 + A 0 ^ 2) + (A 2 * A 3) / (A 2 ^ 2 + A 3 ^ 2 + A 4 ^ 2 + A 0 ^ 2 + A 1 ^ 2) + (A 3 * A 4) / (A 3 ^ 2 + A 4 ^ 2 + A 0 ^ 2 + A 1 ^ 2 + A 2 ^ 2) + (A 4 * A 0) / (A 4 ^ 2 + A 0 ^ 2 + A 1 ^ 2 + A 2 ^ 2 + A 3 ^ 2) \u2265 5 / (A 0 + A 1 + A 2 + A 3 + A 4) - 5 / (A 0 + A 1 + A 2 + A 3 + A 4) := by", "target": "\n  have h\u2081 : 0 < A 0 := hA 0\n  have h\u2082 : 0 < A 1 := hA 1\n  have h\u2083 : 0 < A 2 := hA 2\n  have h\u2084 : 0 < A 3 := hA 3\n  have h\u2085 : 0 < A 4 := hA 4\n  have h\u2086 : 0 < A 0 + A 1 + A 2 + A 3 + A 4 := by positivity\n  have h\u2087 : 0 < A 0 * A 1 := by positivity\n  have h\u2088 : 0 < A 1 * A 2 := by positivity\n  have h\u2089 : 0 < A 2 * A 3 := by positivity\n  have h\u2081\u2080 : 0 < A 3 * A 4 := by positivity\n  have h\u2081\u2081 : 0 < A 4 * A 0 := by positivity\n  have h\u2081\u2082 : (A 0 * A 1) / (A 0 ^ 2 + A 1 ^ 2 + A 2 ^ 2 + A 3 ^ 2 + A 4 ^ 2) + (A 1 * A 2) / (A 1 ^ 2 + A 2 ^ 2 + A 3 ^ 2 + A 4 ^ 2 + A 0 ^ 2) + (A 2 * A 3) / (A 2 ^ 2 + A 3 ^ 2 + A 4 ^ 2 + A 0 ^ 2 + A 1 ^ 2) + (A 3 * A 4) / (A 3 ^ 2 + A 4 ^ 2 + A 0 ^ 2 + A 1 ^ 2 + A 2 ^ 2) + (A 4 * A 0) / (A 4 ^ 2 + A 0 ^ 2 + A 1 ^ 2 + A 2 ^ 2 + A 3 ^ 2) \u2265 0 := by positivity\n  have h\u2081\u2083 : 5 / (A 0 + A 1 + A 2 + A 3 + A 4) - 5 / (A 0 + A 1 + A 2 + A 3 + A 4) = 0 := by\n    field_simp\n  linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_57664_plus (a b x y : \u211d) (h\u2081 : a * x + b * y = 3) (h\u2082 : a * x^2 + b * y^2 = 7) (h\u2083 : a * x^3 + b * y^3 = 16) (h\u2084 : a * x^4 + b * y^4 = 42) (h\u2085 : a * x^5 + b * y^5 = 163) : x = 2 \u2227 y = 1 \u2228 x = 1 \u2227 y = 2  := by", "target": "\n  apply or_iff_not_imp_right.mpr\n  intro h\n  apply And.intro\n  all_goals\n    nlinarith [pow_two (x - 1), pow_two (y - 1), pow_two (x - y), pow_two (x + y)]\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3913 (a b c : \u211d) (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : 2 * b + 2 * c - a + (b - c) ^ 2 / (b + c) \u2265 2 * Real.sqrt 3 * (1 / 2 * Real.sqrt (2 * b ^ 2 + 2 * c ^ 2 - a ^ 2)) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3913_plus : \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a + b > c \u2227 b + c > a \u2227 a + c > b \u2192 Real.sqrt (2 * b ^ 2 + 2 * c ^ 2 - a ^ 2) + Real.sqrt (2 * a ^ 2 + 2 * c ^ 2 - b ^ 2) + Real.sqrt (2 * b ^ 2 + 2 * a ^ 2 - c ^ 2) \u2264 (3 * (a + b + c)):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1488 (n : \u2115) (x : \u211d) : \u2211 k in Finset.range (n+1), ((n-1+k).choose k:\u211d) * (-1)^k * x^(2*k) = (1 - x^2)^(n) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1488_plus : \u2200 n : \u2115, \u2203 r : \u2115, r \u2264 2 * n \u2227 r \u2265 n \u2227 \u2211 k in Finset.Icc r (2 * n), (Nat.choose (2 * n) k : \u211d) \u2265 1:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5824 (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (h : x^4 + y^6 = 145) : 9 / (4 - x) + 8 / (5 - 2 * y) \u2265 17 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5824_plus (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (h : x^4 + y^6 = 145) : \u2203 x1 y1 : \u211d, 0 < x1 \u2227 0 < y1 \u2227 x1^4 + y1^6 = 145 \u2227 9 / (4 - x1) + 8 / (5 - 2 * y1) \u2265 17:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_18427_plus : \u2200 a b c : \u211d, 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 a * b + b * c + c * a = 3 \u2192 (Real.sqrt (a ^ 2 + b * c) + Real.sqrt (b ^ 2 + c * a) + Real.sqrt (c ^ 2 + a * b)) ^ 2 \u2265 (a + b + c) ^ 2:= by", "target": "\n  rintro a b c \u27e8ha, hb, hc, h\u27e9\n  have hab : 0 \u2264 a * b := by positivity\n  have hbc : 0 \u2264 b * c := by positivity\n  have hca : 0 \u2264 c * a := by positivity\n  have h\u2081 : Real.sqrt (a ^ 2 + b * c) \u2265 a := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2082 : Real.sqrt (b ^ 2 + c * a) \u2265 b := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2083 : Real.sqrt (c ^ 2 + a * b) \u2265 c := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  calc\n    (Real.sqrt (a ^ 2 + b * c) + Real.sqrt (b ^ 2 + c * a) + Real.sqrt (c ^ 2 + a * b)) ^ 2 \u2265\n        (a + b + c) ^ 2 := by\n      gcongr\n      all_goals nlinarith\n  <;> simp [sq, mul_assoc, mul_comm, mul_left_comm]\n  <;> nlinarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_12407_plus : \u2200 a b : \u211d, 0 < a \u2227 0 < b \u2192 Real.sqrt (a ^ 2 + b ^ 2) \u2264 a + b \u2228 Real.sqrt (a ^ 2 + b ^ 2) \u2264 abs (a - b):= by", "target": "\n  intro a b h\n  apply or_iff_not_imp_right.2\n  intro h\u2081\n  have h\u2082 : 0 \u2264 (a - b) ^ 2 := by nlinarith\n  have h\u2083 : 0 \u2264 (a + b) ^ 2 := by nlinarith\n  apply Real.sqrt_le_iff.2\n  constructor <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_4925_plus (x : \u211d) (hx : x = 10\u207b\u00b9) : \u2211' i : \u2115, x ^ i * 10 ^ i \u2264 1111111111 := by", "target": "\n  rw [hx]\n  simpa [\u2190 mul_pow] using\n    calc\n      \u2211' i : \u2115, (10\u207b\u00b9 : \u211d) ^ i * 10 ^ i \u2264 \u2211' i : \u2115, 1 := by\n        exact tsum_le_tsum (fun n => by\n          simp only [mul_comm, mul_one]\n          exact\n            mul_le_one (pow_le_one _ (by norm_num) (by norm_num)) (by norm_num) (by norm_num)) (by\n          norm_num) (by norm_num)\n      _ = 1 := by simp\n      _ \u2264 1111111111 := by norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_9915_plus (A : Fin 5 \u2192 \u211d) (hA : \u2200 i, 0 < A i) (hA_sum : \u2211 i, A i = 1) (hA_ratios : \u2200 i, A (i + 1) / A i = 3 / 2) : \u2211 i, A i ^ 2 \u2264 1:= by", "target": "\n  have h1 : \u2211 i : Fin 5, A i ^ 2 \u2264 \u2211 i : Fin 5, A i := by\n    apply Finset.sum_le_sum\n    intro x hx\n    have h2 : 0 < A x := hA x\n    have h3 : A x \u2264 1 := by\n      calc\n        A x \u2264 \u2211 i : Fin 5, A i := by exact Finset.single_le_sum (fun i _ => by linarith [hA i]) hx\n        _ = 1 := hA_sum\n    nlinarith\n  simpa [hA_sum] using h1"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_25635_plus (n : \u2115) (hn : 0 < n) : (\u2200 x y : \u211d, 0 \u2264 x \u2227 0 \u2264 y \u2192 (x + y) ^ 2 \u2264 2 * (x ^ 2 + y ^ 2)) \u2194 \u2200 x : \u211d, 0 \u2264 x \u2192 x ^ 2 \u2264 2 * x * (x + 1):= by", "target": "\n  constructor <;> intro h\n  intro x hx\n  nlinarith [h x 0 \u27e8hx, by norm_num\u27e9, h 0 x \u27e8by norm_num, hx\u27e9]\n  intro x y hxy\n  have hx := h x hxy.1\n  have hy := h y hxy.2\n  nlinarith [sq_nonneg (x - y)]\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4736 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a * b + b * c + c * a = 3) : (a * b / (a * b * c ^ 2 + a * b + 1) + b * c / (a ^ 2 * b * c + b * c + 1) + c * a / (a * b ^ 2 * c + c * a + 1)) \u2264 1 / (a * b * c) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4736_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : a + b + c = 3) : a ^ 2 / (b + c) + b ^ 2 / (a + c) + c ^ 2 / (a + b) \u2265 (a * b + b * c + c * a) / (a + b + c) \u2194 (a ^ 2 / (b + c) + b ^ 2 / (a + c) + c ^ 2 / (a + b)) \u2265 3 / 2:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_16508_plus : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 a / (b + 3 * c) + b / (7 * c + 5 * a) + 9 * c / (3 * a + 2 * b) \u2264 25 / 3 \u2228 a / (b + 3 * c) + b / (7 * c + 5 * a) + 9 * c / (3 * a + 2 * b) \u2265 13 / 3 \u2228 a / (b + 3 * c) + b / (7 * c + 5 * a) + 9 * c / (3 * a + 2 * b) = 25 / 3 \u2228 a / (b + 3 * c) + b / (7 * c + 5 * a) + 9 * c / (3 * a + 2 * b) = 13 / 3:= by", "target": "\n  intro a b c h\n  rcases le_total (a / (b + 3 * c) + b / (7 * c + 5 * a) + 9 * c / (3 * a + 2 * b)) (25 / 3) with h\u2081 | h\u2081 <;>\n    rcases le_total (a / (b + 3 * c) + b / (7 * c + 5 * a) + 9 * c / (3 * a + 2 * b)) (13 / 3) with h\u2082 | h\u2082 <;>\n      rcases eq_or_lt_of_le h\u2081 with h\u2083 | h\u2083 <;>\n        rcases eq_or_lt_of_le h\u2082 with h\u2084 | h\u2084 <;>\n          simp_all [h, h\u2083, h\u2084]\n  all_goals\n    linarith\n  <;>\n  linarith\n  <;>\n  linarith\n  <;>\n  linarith\n  <;>\n  linarith\n  <;>\n  linarith\n  <;>\n  linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2028 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b * c = 1) : 8 * (a ^ 5 + b ^ 5 + c ^ 5) + 18 \u2265 7 * (a ^ 4 * b + b ^ 4 * c + c ^ 4 * a) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2028_plus : \u2200 a b c : \u211d, 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 a * b * c = 1 \u2192 12 * (a ^ 3 + b ^ 3 + c ^ 3) + 39 * a * b * c \u2265 20 * (a ^ 2 * b + b ^ 2 * c + c ^ 2 * a):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_50240_plus : \u2200 n : \u2115, 1 \u2264 n \u2192 n < 2 ^ n \u2227 n \u2264 2 ^ (n - 1):= by", "target": "\n  intro n h\n  cases n with\n  | zero => contradiction\n  | succ n =>\n    induction' n with n ih\n    all_goals simp_all [Nat.pow_succ]\n    all_goals omega\n  <;> omega"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_56676_plus : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a * b * c = 1 \u2227 a + b + c = 3 \u2192 3 * (a / b + b / c + c / a) + 5 * (a * b ^ 2 + b * c ^ 2 + c * a ^ 2 + a * b * c) \u2265 29:= by", "target": "\n  rintro a b c \u27e8ha, hb, hc, h1, h2\u27e9\n  have : a = 1 \u2227 b = 1 \u2227 c = 1 := by\n    have : a = 1 := by\n      nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n    have : b = 1 := by\n      nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n    have : c = 1 := by\n      nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n    exact \u27e8by assumption, by assumption, by assumption\u27e9\n  simp_all only [one_div, add_assoc]\n  norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_52992_plus (n : \u2115) (hn : \u2200 x, 0 < x \u2192 1/x = 1 \u2227 1/n = 0) : n \u2264 1:= by", "target": "\n  by_contra! hn'\n  have h1 := hn 1\n  have h2 := hn 2\n  norm_num at h1 h2\n  <;> aesop\n  <;> aesop\n  <;> aesop"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3970 (n : \u2115) : \u2211 x in Finset.Icc 1 n, (1 + x + x^2 + x^3) = n + (n^2 + n) + (n^3 + n^2) + (n^4 + n^3) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3970_plus : \u2200 a b : \u2115, a < b \u2192 \u2211 x in Finset.Icc a b, (1 + x + x^2 + x^3) \u2264 (\u2211 x in Finset.Icc a b, 1) + (\u2211 x in Finset.Icc a b, x) + (\u2211 x in Finset.Icc a b, x^2) + (\u2211 x in Finset.Icc a b, x^3):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_53589_plus (a b c : \u211d) (h\u2081 : a^2 = 2 * b + 1) (h\u2082 : b^2 = 2 * c + 1) (h\u2083 : c^2 = 2 * a + 1) : a = b \u2227 b = c \u2227 c = a  := by", "target": "\n  refine \u27e8?_,?_,?_\u27e9\n  all_goals nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_34261_plus : \u2200 a b c d : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 0 < d \u2227 a + b + c + d = 1 \u2192 3 * Real.sqrt ((a ^ 3 + b ^ 3 + c ^ 3 + d ^ 3) / (a + b + c + d)) + 2 \u2265 5 * Real.sqrt (a * b * c * d):= by", "target": "\n  rintro a b c d \u27e8ha, hb, hc, hd, habc\u27e9\n  have : 0 < a * b := by positivity\n  have : 0 < a * b * c := by positivity\n  have : 0 < a * b * c * d := by positivity\n  have h\u2080 : Real.sqrt ((a ^ 3 + b ^ 3 + c ^ 3 + d ^ 3) / (a + b + c + d)) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2081 : Real.sqrt (a * b * c * d) \u2265 0 := Real.sqrt_nonneg _\n  nlinarith [sq_sqrt (show 0 \u2264 (a ^ 3 + b ^ 3 + c ^ 3 + d ^ 3) / (a + b + c + d) from by positivity),\n    sq_sqrt (show 0 \u2264 a * b * c * d from by positivity),\n    mul_self_nonneg (a - b),\n    mul_self_nonneg (c - d),\n    mul_self_nonneg (a + b - c - d),\n    mul_self_nonneg (a + b + c + d)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_38930_plus : \u2200 a b c : \u211d, 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 0 \u2264 a * b \u2227 0 \u2264 a * c \u2227 0 \u2264 b * c \u2192  Real.sqrt (1 + a * (b + c) / (b ^ 2 + c ^ 2)) * Real.sqrt (1 + b * (c + a) / (c ^ 2 + a ^ 2)) * Real.sqrt (1 + c * (a + b) / (a ^ 2 + b ^ 2)) \u2265 1:= by", "target": "\n  rintro a b c \u27e8ha, hb, hc, hab, hac, hbc\u27e9\n  have h\u2080 : Real.sqrt (1 + a * (b + c) / (b ^ 2 + c ^ 2)) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    field_simp\n    apply le_of_sub_nonneg\n    field_simp\n    apply le_of_sub_nonneg\n    field_simp\n    ring_nf\n    positivity\n  have h\u2081 : Real.sqrt (1 + b * (c + a) / (c ^ 2 + a ^ 2)) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    field_simp\n    apply le_of_sub_nonneg\n    field_simp\n    apply le_of_sub_nonneg\n    field_simp\n    ring_nf\n    positivity\n  have h\u2082 : Real.sqrt (1 + c * (a + b) / (a ^ 2 + b ^ 2)) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    field_simp\n    apply le_of_sub_nonneg\n    field_simp\n    apply le_of_sub_nonneg\n    field_simp\n    ring_nf\n    positivity\n  calc\n    Real.sqrt (1 + a * (b + c) / (b ^ 2 + c ^ 2)) * Real.sqrt (1 + b * (c + a) / (c ^ 2 + a ^ 2)) * Real.sqrt (1 + c * (a + b) / (a ^ 2 + b ^ 2)) \u2265 1 * 1 * 1 := by gcongr <;> assumption\n    _ = 1 := by norm_num\n  <;> assumption\n  <;> assumption\n  <;> assumption"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_46125_plus (a b c : \u211d) (h\u2081 : a + b + c = 6) (h\u2082 : a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0) :\n    a * b * c + 40 \u2265 4 * (a * b + b * c + c * a) \u2227 (a * b * c) \u2265 0:= by", "target": "\n  have : a * b * c \u2265 0 := by\n    apply mul_nonneg\n    all_goals nlinarith\n  have h\u2083 : a * b * c + 40 \u2265 4 * (a * b + b * c + c * a) := by\n    nlinarith [sq_nonneg (a - 2), sq_nonneg (b - 2), sq_nonneg (c - 2),\n      mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a)]\n  exact \u27e8h\u2083, this\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_31897_plus : \u2200 a b c : \u211d, a + b + c = 2 \u2227 a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 a^2 * b^2 + b^2 * c^2 + c^2 * a^2 \u2264 2:= by", "target": "\n  rintro a b c \u27e8h1, h2, h3, h4\u27e9\n  have h5 : (a + b + c)^2 = 4 := by rw [h1]; norm_num\n  nlinarith [mul_nonneg h2 h3, mul_nonneg h3 h4, mul_nonneg h4 h2,\n    mul_nonneg (sq_nonneg (a - b)) (sq_nonneg (b - c)), mul_nonneg (sq_nonneg (b - c)) (sq_nonneg (c - a)),\n    mul_nonneg (sq_nonneg (c - a)) (sq_nonneg (a - b))]\n  <;> linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_16643_plus  (x y z : \u211d)\n  (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z)\n  (h\u2081 : x + y + z = 3)\n  (h\u2082 : x * y + y * z + z * x = 3) :\n  x * y * z = 1 \u2227 x = y \u2227 y = z \u2227 z = x:= by", "target": "\n  have h\u2083 : (x - y) ^ 2 + (y - z) ^ 2 + (z - x) ^ 2 = 0 := by\n    nlinarith\n  have h\u2084 : x - y = 0 \u2227 y - z = 0 \u2227 z - x = 0 := by\n    apply And.intro\n    \u00b7 nlinarith\n    \u00b7 apply And.intro\n      \u00b7 nlinarith\n      \u00b7 nlinarith\n  have h\u2085 : x = y \u2227 y = z \u2227 z = x := by\n    apply And.intro\n    \u00b7 linarith\n    \u00b7 apply And.intro\n      \u00b7 linarith\n      \u00b7 linarith\n  have h\u2086 : x * y * z = 1 := by\n    nlinarith\n  exact And.intro h\u2086 h\u2085"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_34524_plus : \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192 a ^ 2 + b ^ 2 + c ^ 2 + (9 * a * b * c) / (a + b + c) \u2265 2 * (a * b + a * c + b * c):= by", "target": "\n  rintro a b c \u27e8a_pos, b_pos, c_pos, abc_eq_one\u27e9\n  have h1 : 0 < a * b := mul_pos a_pos b_pos\n  have h2 : 0 < b * c := mul_pos b_pos c_pos\n  have h3 : 0 < a * c := mul_pos a_pos c_pos\n  field_simp [h1, h2, h3]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    sq_nonneg (a - b - c), sq_nonneg (b - c - a), sq_nonneg (c - a - b)]\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_17218_plus : \u2200 a b : \u2115, (a^2 + b^2) / 8 \u2265 a * b / 8:= by", "target": "\n  intro a b\n  have : (a^2 + b^2) / 8 \u2265 a * b / 8 := by\n    have h : a^2 + b^2 \u2265 a * b := by\n      cases' le_total a b with hab hab <;>\n        nlinarith [sq_nonneg (a - b), hab]\n    omega\n  exact this"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_16105_plus (a b c : \u211d) (hab : 0 < a) (hb : 0 < b) (hc : 0 < c) (h : a * b * c = 1) :  Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) * Real.sqrt (1 + c ^ 2) \u2265 1 + a * b * c := by", "target": "\n  have : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) * Real.sqrt (1 + c ^ 2) =\n      Real.sqrt ((1 + a ^ 2) * (1 + b ^ 2) * (1 + c ^ 2)) := by\n    rw [Real.sqrt_mul, Real.sqrt_mul] <;> positivity\n  rw [this]\n  apply Real.le_sqrt_of_sq_le\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n    sq_nonneg (a * b - 1), sq_nonneg (a * c - 1), sq_nonneg (b * c - 1)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_71910_plus (a b c : \u211d) (h\u2081 : a + b + c = 0) (h\u2082 : a * b + b * c + c * a = 1) : \u2203 x y : \u211d, x ^ 2 + y ^ 2 = 1 \u2227 x * y = 1 \u2227 x = a \u2227 y = b:= by", "target": "\n  refine' \u27e8a, b, _, _, rfl, rfl\u27e9\n  all_goals nlinarith [pow_two a, pow_two b, pow_two c, h\u2081, h\u2082]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith [h\u2081, h\u2082]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith [h\u2081, h\u2082]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_56098_plus : \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 1 \u2192 (Real.sqrt (1 - (1 - a ^ 2 - b ^ 2) ^ 2) \u2265 a * b) \u2227 (Real.sqrt (1 - (1 - b ^ 2 - c ^ 2) ^ 2) \u2265 b * c) \u2227 (Real.sqrt (1 - (1 - a ^ 2 - c ^ 2) ^ 2) \u2265 a * c):= by", "target": "\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have : a ^ 2 + b ^ 2 + c ^ 2 \u2264 1 := by\n    nlinarith\n  have h\u2080 : Real.sqrt (1 - (1 - a ^ 2 - b ^ 2) ^ 2) \u2265 a * b := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (a + b), mul_self_nonneg (1 - a ^ 2 - b ^ 2)]\n  have h\u2081 : Real.sqrt (1 - (1 - b ^ 2 - c ^ 2) ^ 2) \u2265 b * c := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [mul_self_nonneg (b - c), mul_self_nonneg (b + c), mul_self_nonneg (1 - b ^ 2 - c ^ 2)]\n  have h\u2082 : Real.sqrt (1 - (1 - a ^ 2 - c ^ 2) ^ 2) \u2265 a * c := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [mul_self_nonneg (a - c), mul_self_nonneg (a + c), mul_self_nonneg (1 - a ^ 2 - c ^ 2)]\n  exact \u27e8h\u2080, h\u2081, h\u2082\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4645 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a * Real.sqrt (b ^ 2 + 15 * c * a) / ((c + a) * (a + b)) + b * Real.sqrt (c ^ 2 + 15 * a * b) / ((a + b) * (b + c)) + c * Real.sqrt (a ^ 2 + 15 * b * c) / ((b + c) * (c + a))) \u2265 (3 * (a * b + b * c + c * a)) / (a ^ 2 + b ^ 2 + c ^ 2) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4645_plus (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : \u2203 a' b' c' : \u211d, (0 < a' \u2227 0 < b' \u2227 0 < c') \u2227 (Real.sqrt (a' ^ 2 + 15 * b' * c') / (b' + c') + Real.sqrt (b' ^ 2 + 15 * c' * a') / (c' + a') + Real.sqrt (c' ^ 2 + 15 * a' * b') / (a' + b')) \u2265 (3 * (a' * b' + b' * c' + c' * a')) / (a' ^ 2 + b' ^ 2 + c' ^ 2):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_6082 (a b : \u211d) (ha : 0 < a) (hb : 0 < b) (hab : a + b = 1) : (a + 1 / b) ^ 2 + (b + 1 / a) ^ 2 \u2265 25 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_6082_plus (a b : \u211d) (hab : a + b = 1) (h : 0 < a \u2227 0 < b) : a * b * (a + b) ^ 2 + (a * b) ^ 2 + (a + b) ^ 2 \u2265 3 * (a * b) ^ 2 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_26682_plus : \u2200 a b : \u211d, Real.sqrt (a ^ 2 + b ^ 2) \u2265 (a + b) / 2 := by", "target": "\n  intro a b\n  have h\u2080 : 0 \u2264 (a - b) ^ 2 := sq_nonneg (a - b)\n  apply le_sqrt_of_sq_le\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_42170_plus : \u2200 a b c : \u211d, a * b * c = 1 \u2192 1 / (a^2 + b + c + 1) + 1 / (b^2 + c + a + 1) + 1 / (c^2 + a + b + 1) \u2264 3 / (a + b + c + 1) \u2228 (a - b) ^ 2 / (a ^ 2 + b ^ 2) + (b - c) ^ 2 / (b ^ 2 + c ^ 2) + (c - a) ^ 2 / (c ^ 2 + a ^ 2) \u2265 0 \u2192 (a - b) ^ 2 / (a ^ 2 + b ^ 2) + (b - c) ^ 2 / (b ^ 2 + c ^ 2) + (c - a) ^ 2 / (c ^ 2 + a ^ 2) \u2265 0:= by", "target": "\n  intro a b c h\n  intro h\u2081\n  have h\u2082 : (a - b) ^ 2 / (a ^ 2 + b ^ 2) + (b - c) ^ 2 / (b ^ 2 + c ^ 2) + (c - a) ^ 2 / (c ^ 2 + a ^ 2) \u2265 0 := by\n    apply add_nonneg\n    apply add_nonneg\n    all_goals\n      apply div_nonneg\n      nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n      nlinarith [sq_nonneg a, sq_nonneg b, sq_nonneg c]\n  linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5270 (x y : \u211d) (h\u2080 : y = x - 3) (h\u2081 : -2 * y = 2 * (x^2 + 1)) : x = -2 \u2228 x = 1 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5270_plus (x y : \u211d) (h\u2080 : x^2 + y^2 = 1) (h\u2081 : x * y = 0) : x = 1 \u2228 x = -1 \u2228 y = 1 \u2228 y = -1 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_26360_plus (n : \u2124) (h\u2081 : \u2203 k : \u2124, n = 4*k + 1 \u2228 n = 4*k + 3) (h\u2082 : \u2203 k : \u2124, n = 2*k + 1) : \u2203 k : \u2124, n = 20*k + 1 \u2228 n = 20*k + 3 \u2228 n = 20*k + 5 \u2228 n = 20*k + 7 \u2228 n = 20*k + 9 \u2228 n = 20*k + 11 \u2228 n = 20*k + 13 \u2228 n = 20*k + 15 \u2228 n = 20*k + 17 \u2228 n = 20*k + 19:= by", "target": "\n  rcases h\u2081 with \u27e8k\u2081, h\u2081\u27e9\n  rcases h\u2082 with \u27e8k\u2082, h\u2082\u27e9\n  use k\u2081 / 5\n  omega"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_6983_plus (A : Fin 5 \u2192 \u211d) (h\u2081 : \u2211 i, A i = 1) (h\u2082 : \u220f i, A i = 1) : \u2211 i, (A i + 1) ^ 2 \u2265 2 := by", "target": "\n  have h\u2083 : \u2200 i, (A i + 1) ^ 2 \u2265 2 * A i := by\n    intro i\n    nlinarith [sq_nonneg (A i - 1), sq_nonneg (A i)]\n  calc\n    \u2211 i, (A i + 1) ^ 2 \u2265 \u2211 i, 2 * A i := by\n      exact Finset.sum_le_sum fun i _ => h\u2083 i\n    _ = 2 * \u2211 i, A i := by\n      simp [Finset.mul_sum]\n    _ = 2 * 1 := by rw [h\u2081]\n    _ = 2 := by ring"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_35036_plus : \u2200 a b c d : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 d \u2265 0 \u2227 a + b + c + d = 1 \u2192 1 - (a * b + b * c + c * d + d * a) * (a * c + b * d) * (b * c + a * d) * (c * d + a * b) * (d * a + b * c) \u2265 0:= by", "target": "\n  rintro a b c d \u27e8ha, hb, hc, hd, habc\u27e9\n  have : 0 \u2264 a * b := by positivity\n  have : 0 \u2264 b * c := by positivity\n  have : 0 \u2264 c * d := by positivity\n  have : 0 \u2264 d * a := by positivity\n  have : 0 \u2264 a * c := by positivity\n  have : 0 \u2264 b * d := by positivity\n  have : 0 \u2264 c * a := by positivity\n  have : 0 \u2264 d * b := by positivity\n  have : (a * b + b * c + c * d + d * a) * (a * c + b * d) * (b * c + a * d) * (c * d + a * b) * (d * a + b * c) \u2264 1 := by\n    calc\n      (a * b + b * c + c * d + d * a) * (a * c + b * d) * (b * c + a * d) * (c * d + a * b) * (d * a + b * c) \u2264\n          1 * 1 * 1 * 1 * 1 := by gcongr <;> nlinarith\n      _ = 1 := by norm_num\n  linarith\n  <;> try norm_num\n  <;> linarith\n  <;> try norm_num\n  <;> linarith\n  <;> try norm_num\n  <;> linarith\n  <;> try norm_num\n  <;> linarith\n  <;> try norm_num\n  <;> linarith\n  <;> try norm_num\n  <;> linarith\n  <;> try norm_num\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3720 (a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : (9 / 2) * (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) + 24 * (a * b * c + b * c * d + c * d * a + d * a * b) / (a + b + c + d) \u2265 7 * (a * b + a * c + a * d + b * c + b * d + c * d) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3720_plus : \u2200 a b c d : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 d > 0 \u2192 (9 / 2) * (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) + 24 * (a * b * c + b * c * d + c * d * a + d * a * b) / (a + b + c + d) \u2265 7 * (a * b + a * c + a * d + b * c + b * d + c * d):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_42292_plus : \u2200 a b : \u211d, a < b \u2192 \u2200 f : \u211d \u2192 \u211d, ContinuousOn f (Set.Icc a b) \u2192 (\u2203 x \u2208 Set.Icc a b, \u2200 y \u2208 Set.Icc a b, f x \u2264 f y) \u2228 (\u2203 x \u2208 Set.Icc a b, \u2200 y \u2208 Set.Icc a b, f y \u2264 f x):= by", "target": "\n  intro a b hab f hf\n  apply or_iff_not_imp_right.2\n  intro h\n  have h1 : ContinuousOn f (Set.Icc a b) := hf\n  have h2 : \u2203 x \u2208 Set.Icc a b, \u2200 y \u2208 Set.Icc a b, f x \u2264 f y := by\n    apply (isCompact_Icc.exists_forall_le (Set.nonempty_Icc.2 (le_of_lt hab)) h1)\n    <;> simp [hab]\n  exact h2"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_304 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) (h : \u221a(a * b) + \u221a(b * c) + \u221a(c * a) = 1) : 3 * ((a^2 - b * c) / (a + b) + (b^2 - c * a) / (b + c) + (c^2 - a * b) / (c + a)) \u2265 1 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_304_plus (A : Fin 5 \u2192 \u211d) (hA : \u2200 i, 0 < A i) (hA_sum : \u2211 i, A i = 1) (hA_sqrt : \u2211 i, Real.sqrt (A i) = 1) : \u2211 i, (1 - A i) * (1 - Real.sqrt (A i)) \u2265 0:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2121 (a b c : \u211d) : 9 - 3 * (a * b + b * c + c * a) + 3 * (a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2) - 9 * a * b * c \u2265 3 * (a * b ^ 2 + b * c ^ 2 + c * a ^ 2) - 9 * a * b * c := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2121_plus : \u2200 a b c : \u211d, 9 - 3 * (a * b + b * c + c * a) + 3 * (a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2) - 9 * a * b * c \u2265 3 * (a * b ^ 2 + b * c ^ 2 + c * a ^ 2) - 9 * a * b * c \u2228 9 - 3 * (a * b + b * c + c * a) + 3 * (a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2) - 9 * a * b * c \u2264 3 * (a * b ^ 2 + b * c ^ 2 + c * a ^ 2) - 9 * a * b * c:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_5701_plus (A : Fin 5 \u2192 \u211d) (hA : \u2200 i, 0 \u2264 A i) (hA_sum : \u2211 i, A i = 3) : \u2211 i, (A i ^ 2 - 1) ^ 2 \u2265 0 \u2227 \u2211 i, A i * (A i ^ 2 - 1) \u2265 -3:= by", "target": "\n  have h1 : \u2211 i, (A i ^ 2 - 1) ^ 2 \u2265 0 := by positivity\n  have h2 : \u2211 i, A i * (A i ^ 2 - 1) \u2265 -3 := by\n    have h3 : \u2211 i, A i * (A i ^ 2 - 1) \u2265 -3 := by\n      have h4 : \u2211 i, A i * (A i ^ 2 - 1) \u2265 -3 := by\n        have h5 : \u2200 i, A i * (A i ^ 2 - 1) \u2265 -1 * A i := by\n          intro i\n          nlinarith [sq_nonneg (A i - 1), hA i]\n        calc\n          \u2211 i, A i * (A i ^ 2 - 1) \u2265 \u2211 i, -1 * A i := Finset.sum_le_sum (fun i _ => h5 i)\n          _ = -\u2211 i, A i := by simp [Finset.mul_sum]\n          _ = -3 := by simp [hA_sum]\n      exact h4\n    exact h3\n  exact \u27e8h1, h2\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_43695_plus : \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a * b * c > 0 \u2227 (\u2203 x y z : \u211d, x * y * z > 0 \u2227 x + y + z = a + b + c \u2227 4 * x / (y + z) + 4 * y / (x + z) + 4 * z / (x + y) \u2264 (b + c) / a + (c + a) / b + (a + b) / c) := by", "target": "\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  have : a * b * c > 0 := by positivity\n  refine' \u27e8this, _\u27e9\n  use a, b, c\n  have : 4 * a / (b + c) + 4 * b / (a + c) + 4 * c / (a + b) \u2264 (b + c) / a + (c + a) / b + (a + b) / c := by\n    have : 0 < a * b := by positivity\n    have : 0 < b * c := by positivity\n    have : 0 < c * a := by positivity\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    ring_nf\n    nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n      sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n  exact \u27e8by positivity, by linarith, this\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_27708_plus : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c = a^2 + b^2 + c^2 \u2192 (a^2 / (b + c) + b^2 / (a + c) + c^2 / (a + b) \u2265 a / (b + c) + b / (a + c) + c / (a + b)) \u2227 (a^2 / (b + c) + b^2 / (a + c) + c^2 / (a + b) \u2265 (a + b + c) / 2)  := by", "target": "\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  constructor\n  have h\u2080 : a ^ 2 / (b + c) + b ^ 2 / (a + c) + c ^ 2 / (a + b) \u2265 a / (b + c) + b / (a + c) + c / (a + b) := by\n    apply le_of_sub_nonneg\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a),\n      mul_self_nonneg (a - 1), mul_self_nonneg (b - 1), mul_self_nonneg (c - 1)]\n  exact h\u2080\n  have h\u2081 : a ^ 2 / (b + c) + b ^ 2 / (a + c) + c ^ 2 / (a + b) \u2265 (a + b + c) / 2 := by\n    have h\u2082 : 0 < b + c := by linarith\n    have h\u2083 : 0 < a + c := by linarith\n    have h\u2084 : 0 < a + b := by linarith\n    have h\u2085 : 0 < b * c := by positivity\n    have h\u2086 : 0 < a * c := by positivity\n    have h\u2087 : 0 < a * b := by positivity\n    have h\u2088 : 0 < (b + c) * (a + c) * (a + b) := by positivity\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  exact h\u2081\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_45050_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : x / (x + y + z) + y / (x + y + z) + z / (x + y + z) \u2264 3 := by", "target": "\n  rw [add_assoc]\n  field_simp [hx, hy, hz]\n  rw [div_le_iff (by positivity)]\n  ring_nf\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5940 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : b * Real.sqrt b + a * Real.sqrt b + c * Real.sqrt c + b * Real.sqrt c + a * Real.sqrt a + c * Real.sqrt a \u2265 (3 * (a + b + c) + 3) / 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5940_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : a + b + c = 3) (h : Real.sqrt a + Real.sqrt b + Real.sqrt c = 3) : a = 1 \u2227 b = 1 \u2227 c = 1:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2497 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a^2 + b^2 + c^2 = 3) : a + b + c \u2265 3 * Real.sqrt 3 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2497_plus : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a^2 + b^2 + c^2 = 3 \u2192 a + b + c \u2265 3 * Real.sqrt 3 / 3 \u2227 a * b * c \u2264 1:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3521 (a b c : \u211d) (habc : a * b * c = 1) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : 1 + 8 / (a + b + c) \u2265 11 / (a * b + b * c + a * c) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3521_plus : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 a * b * c = 1 \u2192 a ^ 2 + b ^ 2 + c ^ 2 + 1 / (a * b * c) \u2265 2 * a * b + 2 * b * c + 2 * a * c - 4:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4297 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (1 + a * b + b * c + c * a)^3 \u2265 16 * a * b * c * (a * b * c + a + b + c) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4297_plus : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 a * b * c = 1 \u2192 (1 + a * b + b * c + c * a)^3 \u2265 16 * a * b * c * (a * b * c + a + b + c):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_19847_plus : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a * b + b * c + c * a = 3 \u2192 8 * (a^2 / (b + c + 2) + b^2 / (c + a + 2) + c^2 / (a + b + 2)) + 33 \u2265 13 * (a + b + c):= by", "target": "\n  rintro a b c \u27e8ha, hb, hc, h\u27e9\n  have h\u2081 : 0 < b + c := by linarith\n  have h\u2082 : 0 < c + a := by linarith\n  have h\u2083 : 0 < a + b := by linarith\n  have h\u2084 : 0 < b * c := by positivity\n  have h\u2085 : 0 < c * a := by positivity\n  have h\u2086 : 0 < a * b := by positivity\n  field_simp [ha, hb, hc, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a - b - c), mul_self_nonneg (b - c - a), mul_self_nonneg (c - a - b)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_31631_plus : \u2200 a b : \u211d, 0 < a \u2227 0 < b \u2192 a / (a + b) * (a + 2 * b) / (a + 3 * b) < Real.sqrt (a / (a + 4 * b)) \u2228  Real.sqrt (a / (a + 4 * b)) \u2264 a / (a + b) * (a + 2 * b) / (a + 3 * b):= by", "target": "\n  rintro a b \u27e8ha, hb\u27e9\n  apply or_iff_not_imp_right.2\n  intro h\n  have h\u2080 : 0 < a + b := by positivity\n  have h\u2081 : 0 < a + 4 * b := by positivity\n  have h\u2082 : 0 < a + 3 * b := by positivity\n  have h\u2083 : 0 < a + 2 * b := by positivity\n  have h\u2084 : 0 < a * b := by positivity\n  have h\u2085 : 0 < a * b * (a + b) := by positivity\n  have h\u2086 : 0 < a * b * (a + 4 * b) := by positivity\n  have h\u2087 : 0 < a * b * (a + 3 * b) := by positivity\n  have h\u2088 : 0 < a * b * (a + 2 * b) := by positivity\n  apply lt_sqrt_of_sq_lt\n  field_simp\n  rw [div_lt_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a + b)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_37591_plus : \u2200 (x : \u211d), Real.sin (3 * x) = 3 * Real.sin x - 4 * (Real.sin x) ^ 3 := by", "target": "\n  intro x\n  have h1 : Real.sin (3 * x) = 3 * Real.sin x - 4 * (Real.sin x) ^ 3 := by\n    have h2 := Real.sin_three_mul x\n    linarith\n  exact h1"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_20857_plus : \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a + b > c \u2227 b + c > a \u2227 a + c > b \u2192 2 * (a * (b ^ 3 + c ^ 3) + b * (a ^ 3 + c ^ 3) + c * (a ^ 3 + b ^ 3)) \u2265 2 * (a ^ 2 * c ^ 2 + b ^ 2 * c ^ 2 + b ^ 2 * a ^ 2) + (a ^ 4 + b ^ 4 + c ^ 4) + a * b * c * (a + b + c)  := by", "target": "\n  rintro a b c \u27e8h\u2081, h\u2082, h\u2083\u27e9 \u27e8h\u2084, h\u2085, h\u2086\u27e9\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_nonneg (sub_nonneg.2 h\u2084.le) (sub_nonneg.2 h\u2085.le),\n    mul_nonneg (sub_nonneg.2 h\u2085.le) (sub_nonneg.2 h\u2086.le), mul_nonneg (sub_nonneg.2 h\u2086.le) (sub_nonneg.2 h\u2084.le),\n    mul_nonneg (sq_nonneg (a - b)) (sub_nonneg.2 h\u2085.le), mul_nonneg (sq_nonneg (b - c)) (sub_nonneg.2 h\u2086.le),\n    mul_nonneg (sq_nonneg (c - a)) (sub_nonneg.2 h\u2084.le), mul_nonneg (sq_nonneg (a - b)) (sub_nonneg.2 h\u2086.le),\n    mul_nonneg (sq_nonneg (b - c)) (sub_nonneg.2 h\u2084.le), mul_nonneg (sq_nonneg (c - a)) (sub_nonneg.2 h\u2085.le)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_69719_plus (x y z : \u211d) (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2081 : x * y * z = 1) (h\u2082 : x ^ 2 + y ^ 2 + z ^ 2 = 9) : x * (y + z) + y * (x + z) + z * (x + y) \u2264 18 * Real.sqrt 3 \u2194 x * y * z * (x * y + y * z + z * x) \u2264 27:= by", "target": "\n  have h\u2083 : 0 < x * y := by nlinarith\n  have h\u2084 : 0 < y * z := by nlinarith\n  have h\u2085 : 0 < z * x := by nlinarith\n  have h\u2086 : x * y + y * z + z * x \u2264 9 := by\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  have h\u2087 : Real.sqrt 3 \u2265 1 := Real.le_sqrt_of_sq_le (by norm_num)\n  have h\u2088 : x * (y + z) + y * (x + z) + z * (x + y) \u2264 18 * Real.sqrt 3 := by\n    nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 by norm_num),\n      Real.sqrt_nonneg 3]\n  have h\u2089 : x * y * z * (x * y + y * z + z * x) \u2264 27 := by\n    nlinarith [sq_nonneg (x * y + y * z + z * x),\n      sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y)]\n  exact \u27e8fun h => by nlinarith, fun h => by nlinarith\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_62153_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b + b * c + c * a = 1) : a ^ 2 * b ^ 2 * c ^ 2 * (a + b + c) \u2264 (a + b) * (b + c) * (c + a) * (a * b + b * c + c * a):= by", "target": "\n  have h\u2080 : 0 \u2264 a * b := by positivity\n  have h\u2081 : 0 \u2264 b * c := by positivity\n  have h\u2082 : 0 \u2264 c * a := by positivity\n  have h\u2083 : 0 \u2264 a * b * (b * c) := by positivity\n  have h\u2084 : 0 \u2264 b * c * (c * a) := by positivity\n  have h\u2085 : 0 \u2264 c * a * (a * b) := by positivity\n  have h\u2086 : 0 \u2264 a * b * c := by positivity\n  have h\u2087 : 0 \u2264 a * b * c * (a * b + b * c + c * a) := by positivity\n  have h\u2088 : 0 \u2264 a * b * c * (a + b + c) := by positivity\n  have h\u2089 : 0 \u2264 a * b + b * c + c * a := by linarith\n  nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n  <;> simp_all\n  <;> linarith\n  <;> linarith\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_7577_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) : (x ^ 2 + y ^ 2 + z ^ 2) / (x ^ 2 * y ^ 2 * z ^ 2 + x ^ 2 * y ^ 2 * z ^ 2 + x ^ 2 * y ^ 2 * z ^ 2) * (x * y + y * z + z * x) \u2265 3 * (3:\u211d) ^ (1 / 2) / 9:= by", "target": "\n  have h\u2081 : x * y > 0 := mul_pos hx hy\n  have h\u2082 : x * z > 0 := mul_pos hx hz\n  have h\u2083 : y * z > 0 := mul_pos hy hz\n  field_simp [h\u2081, h\u2082, h\u2083]\n  rw [div_le_div_iff]\n  ring_nf\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_self_nonneg (x * y - 1), mul_self_nonneg (x * z - 1), mul_self_nonneg (y * z - 1)]\n  positivity\n  positivity"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_73417_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) :  a + b + c = 1 \u2192  (1 / (1 + a ^ 2) + 1 / (1 + b ^ 2) + 1 / (1 + c ^ 2) \u2265 3 / 2)  := by", "target": "\n  intro h\u2081\n  have h\u2082 : 0 < a ^ 2 + b ^ 2 + c ^ 2 := by positivity\n  have h\u2083 : 0 < a * b * c := by positivity\n  have h\u2084 : 1 / (1 + a ^ 2) \u2265 1 / 2 := by\n    rw [ge_iff_le, le_div_iff (by positivity)]\n    nlinarith [sq_nonneg a]\n  have h\u2085 : 1 / (1 + b ^ 2) \u2265 1 / 2 := by\n    rw [ge_iff_le, le_div_iff (by positivity)]\n    nlinarith [sq_nonneg b]\n  have h\u2086 : 1 / (1 + c ^ 2) \u2265 1 / 2 := by\n    rw [ge_iff_le, le_div_iff (by positivity)]\n    nlinarith [sq_nonneg c]\n  linarith\n  <;> linarith\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_34921_plus : \u2200 a b : \u2115 \u2192 \u211d, (\u2200 i, 0 \u2264 a i \u2227 0 \u2264 b i) \u2192 \u2211 i in Finset.range n, (a i * b i) \u2264 (\u2211 i in Finset.range n, a i) * (\u2211 i in Finset.range n, b i):= by", "target": "\n  intro a b h\n  have h\u2081 : \u2200 i \u2208 Finset.range n, 0 \u2264 a i * b i := by\n    intro i _\n    exact mul_nonneg (h i).1 (h i).2\n  have h\u2082 : \u2211 i in Finset.range n, (a i * b i) \u2264 (\u2211 i in Finset.range n, a i) * (\u2211 i in Finset.range n, b i) := by\n    calc\n      \u2211 i in Finset.range n, (a i * b i) \u2264 \u2211 i in Finset.range n, (a i * \u2211 j in Finset.range n, b j) := by\n        apply Finset.sum_le_sum\n        intro x hx\n        exact mul_le_mul_of_nonneg_left (Finset.single_le_sum (fun i _ => (h i).2) hx) (h x).1\n      _ = (\u2211 i in Finset.range n, a i) * (\u2211 j in Finset.range n, b j) := by simp [Finset.sum_mul]\n  exact h\u2082"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_80067_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 a \u2264 1) (hbc : 0 \u2264 b \u2227 b \u2264 1) (hca : 0 \u2264 c \u2227 c \u2264 1) (h : a + b + c = 1) : a * (1 - b ^ 2) * (1 - c ^ 2) + b * (1 - c ^ 2) * (1 - a ^ 2) + c * (1 - a ^ 2) * (1 - b ^ 2) \u2264 17 / 8 \u2227 a * (1 - b ^ 2) * (1 - c ^ 2) + b * (1 - c ^ 2) * (1 - a ^ 2) + c * (1 - a ^ 2) * (1 - b ^ 2) \u2265 17 / 8 * (a * b * c):= by", "target": "\n  have : (a + b + c) ^ 2 = 1 := by simp [h]\n  constructor\n  nlinarith [mul_nonneg hab.1 hbc.1, mul_nonneg hbc.1 hca.1, mul_nonneg hca.1 hab.1,\n    mul_nonneg (sq_nonneg a) (sq_nonneg b), mul_nonneg (sq_nonneg b) (sq_nonneg c),\n    mul_nonneg (sq_nonneg c) (sq_nonneg a)]\n  nlinarith [mul_nonneg hab.1 hbc.1, mul_nonneg hbc.1 hca.1, mul_nonneg hca.1 hab.1,\n    mul_nonneg (sq_nonneg a) (sq_nonneg b), mul_nonneg (sq_nonneg b) (sq_nonneg c),\n    mul_nonneg (sq_nonneg c) (sq_nonneg a)]\n  <;> nlinarith\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_26182_plus : \u2200 a b : \u211d, 0 < a \u2227 a \u2264 b \u2227 b \u2264 1 \u2192 a * b ^ 2 - b * a ^ 2 \u2264 1 / 4 := by", "target": "\n  intro a b h\n  have h\u2081 : 0 < a := h.1\n  have h\u2082 : a \u2264 b := h.2.1\n  have h\u2083 : b \u2264 1 := h.2.2\n  have h\u2084 : 0 \u2264 1 - b := by linarith\n  have h\u2085 : 0 \u2264 1 - a := by linarith\n  have h\u2086 : 0 \u2264 (1 - b) ^ 2 := by nlinarith\n  have h\u2087 : 0 \u2264 (1 - a) ^ 2 := by nlinarith\n  have h\u2088 : 0 \u2264 a * (1 - a) := by nlinarith\n  have h\u2089 : 0 \u2264 b * (1 - b) := by nlinarith\n  nlinarith [sq_nonneg (a - b / 2)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_48825_plus : \u2200 a b c : \u211d, a + b + c = 1 / a + 1 / b + 1 / c \u2192 a * b * c \u2260 0 \u2192 a ^ 2 + b ^ 2 + c ^ 2 = (a + b + c) ^ 2 - 2 * (a * b + b * c + c * a):= by", "target": "\n  rintro a b c h\u2081 h\u2082\n  field_simp at h\u2081 h\u2082 \u22a2\n  linarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_51706_plus : \u2200 a b : \u211d, 0 < a \u2227 0 < b \u2227 a + b = 1 \u2192 \u2203 x : \u211d, x \u2208 Set.Ioo 0 1 \u2227 a * b * (1 + 1 / a ^ 2 + 1 / b ^ 2) \u2265 9 / 4:= by", "target": "\n  rintro a b \u27e8ha, hb, hab\u27e9\n  use 1 / 2\n  have h\u2080 : 0 < a * b := by nlinarith\n  have h\u2081 : 0 < a ^ 2 := by nlinarith\n  have h\u2082 : 0 < b ^ 2 := by nlinarith\n  have h\u2083 : 0 < a * b ^ 2 := by nlinarith\n  have h\u2084 : 0 < a ^ 2 * b := by nlinarith\n  constructor\n  \u00b7 exact \u27e8by nlinarith, by nlinarith\u27e9\n  \u00b7 field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a + b), sq_nonneg (a * b - 1 / 4)]\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_19784_plus : \u2200 a b c : \u211d, a * b + b * c + c * a \u2264 max (a * b) (max (b * c) (c * a)) + max (b * a) (max (c * b) (a * c)) + max (c * b) (max (a * c) (b * a)):= by", "target": "\n  intro a b c\n  simp only [add_assoc]\n  rcases le_total (a * b) (b * c) with h | h <;>\n  rcases le_total (b * c) (c * a) with h' | h' <;>\n  rcases le_total (c * a) (a * b) with h'' | h'' <;>\n  rcases le_total (b * a) (c * b) with h''' | h''' <;>\n  rcases le_total (c * b) (a * c) with h'''' | h'''' <;>\n  rcases le_total (a * c) (b * a) with h''''' | h''''' <;>\n  simp_all [max_eq_right, max_eq_left, le_refl, le_of_lt, h, h', h'', h''', h'''', h''''']\n  all_goals nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_50674_plus : \u2200 n : \u2115, n > 0 \u2192  n^4 - n^2 < n^4 - n^2 + 4 * n^3:= by", "target": "\n  rintro n (hn : 0 < n)\n  cases n with\n  | zero => exact False.elim (by linarith)\n  | succ n =>\n    ring_nf\n    omega"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_69883_plus : \u2200 x : \u211d, 0 < x \u2227 x < 1 \u2192 \u2211' n : \u2115, Real.sqrt (1 - x ^ 2) ^ n \u2264 1 / (1 - Real.sqrt (1 - x ^ 2))  := by", "target": "\n  intro x hx\n  have h : 0 < Real.sqrt (1 - x ^ 2) := Real.sqrt_pos.mpr (by nlinarith)\n  have h' : Real.sqrt (1 - x ^ 2) < 1 := by\n    rw [Real.sqrt_lt'] <;> nlinarith\n  have h'' : \u2211' n : \u2115, Real.sqrt (1 - x ^ 2) ^ n \u2264 1 / (1 - Real.sqrt (1 - x ^ 2)) := by\n    rw [tsum_geometric_of_lt_one (by positivity) h']\n    field_simp\n  exact h''"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_14594_plus  (x y z : \u211d)\n  (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z)\n  (h\u2081 : x + y + z \u2264 1) :\n   Real.sqrt (x * y) + Real.sqrt (y * z) + Real.sqrt (z * x) \u2264 1:= by", "target": "\n  have h\u2082 : Real.sqrt (x * y) \u2264 (x + y) / 2 := by\n    nlinarith [sq_sqrt (mul_nonneg h\u2080.1.le h\u2080.2.1.le), sq_nonneg (x - y)]\n  have h\u2083 : Real.sqrt (y * z) \u2264 (y + z) / 2 := by\n    nlinarith [sq_sqrt (mul_nonneg h\u2080.2.1.le h\u2080.2.2.le), sq_nonneg (y - z)]\n  have h\u2084 : Real.sqrt (z * x) \u2264 (z + x) / 2 := by\n    nlinarith [sq_sqrt (mul_nonneg h\u2080.2.2.le h\u2080.1.le), sq_nonneg (z - x)]\n  nlinarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2572 (a b c : \u211d) (hab : 0 \u2264 a) (hbc : 0 \u2264 b) (hca : 0 \u2264 c) (habc : a * b + b * c + c * a = 3) : 1 / (1 + a ^ 2 + b ^ 2) + 1 / (1 + b ^ 2 + c ^ 2) + 1 / (1 + c ^ 2 + a ^ 2) \u2264 1 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2572_plus : \u2200 a b c : \u211d, 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 a * b + b * c + c * a = 3 \u2192 1 / (1 + a ^ 2 + b ^ 2) + 1 / (1 + b ^ 2 + c ^ 2) + 1 / (1 + c ^ 2 + a ^ 2) \u2264 1 \u2228 (\u2203 a b c : \u211d, 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 a * b + b * c + c * a = 3 \u2227 1 / (1 + a ^ 2 + b ^ 2) + 1 / (1 + b ^ 2 + c ^ 2) + 1 / (1 + c ^ 2 + a ^ 2) > 1) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_53478_plus : \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 3 \u2192 a * (b ^ 2 + 1) * (c ^ 2 + 1) + b * (c ^ 2 + 1) * (a ^ 2 + 1) + c * (a ^ 2 + 1) * (b ^ 2 + 1) \u2265 3 * (a * b * c + 1)  := by", "target": "\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have h\u2080 : 0 < a * b * c := by positivity\n  nlinarith [sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1),\n    mul_nonneg ha.le (sq_nonneg (b - 1)),\n    mul_nonneg hb.le (sq_nonneg (c - 1)),\n    mul_nonneg hc.le (sq_nonneg (a - 1)),\n    mul_nonneg ha.le (sq_nonneg (c - 1)),\n    mul_nonneg hb.le (sq_nonneg (a - 1)),\n    mul_nonneg hc.le (sq_nonneg (b - 1))]\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_947 (a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : (a / Real.sqrt (a + b) + b / Real.sqrt (b + c) + c / Real.sqrt (c + d) + d / Real.sqrt (d + a)) \u2264 Real.sqrt a + Real.sqrt b + Real.sqrt c + Real.sqrt d := by\n<hard theorem>", "target": "\ntheorem leanworkbook_947_plus : \u2200 a b c d : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 0 < d \u2192 (a / Real.sqrt (a + b) + b / Real.sqrt (b + c) + c / Real.sqrt (c + d) + d / Real.sqrt (d + a)) \u2264 Real.sqrt a + Real.sqrt b + Real.sqrt c + Real.sqrt d := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_29903_plus : \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a + b > c \u2227 b + c > a \u2227 a + c > b \u2192 \u2200 x : \u2115, x \u2265 0 \u2192 a * (x + 1) ^ 2 + b * (x + 1) ^ 2 + c * (x + 1) ^ 2 \u2265 a * x ^ 2 + b * x ^ 2 + c * x ^ 2:= by", "target": "\n  rintro a b c \u27e8ha, hb, hc\u27e9 h\u2081 x hx\n  simp only [pow_two, mul_add, mul_one, add_mul, mul_comm, mul_left_comm]\n  nlinarith [sq_nonneg (a + b), sq_nonneg (b + c), sq_nonneg (a + c)]\n  <;> linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_8577_plus (A : Fin 5 \u2192 \u211d) (h1 : \u2211 i, A i = 10) (h2 : \u2211 i, A i ^ 2 = 30) : \u2211 i, A i * (1 - A i) \u2264 10:= by", "target": "\n  have h3 : \u2211 i : Fin 5, A i * (1 - A i) \u2264 \u2211 i : Fin 5, A i := by\n    apply Finset.sum_le_sum\n    intro x hx\n    nlinarith [sq_nonneg (A x), h1, h2]\n  simp_all"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2674 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 3) : 27 / 4 + 5 * a * b * c / (5 - a * b * c) \u2265 (a + b) * (b + c) * (c + a) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2674_plus : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c = 3 \u2192 27 / 4 + 5 * a * b * c / (5 - a * b * c) \u2265 (a + b) * (b + c) * (c + a) \u2228 (\u2203 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c = 3 \u2227 27 / 4 + 5 * a * b * c / (5 - a * b * c) < (a + b) * (b + c) * (c + a)) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_29114_plus : \u2200 a b c : \u2124, a * b + b * c + c * a \u2264 max (a * b) (max (b * c) (c * a)) + max (a * b + b * c + c * a) (max (a * b + b * c) (a * c + c * b)) := by", "target": "\n  intro a b c\n  cases' le_total (a * b) (b * c) with h h <;>\n    cases' le_total (b * c) (c * a) with h\u2082 h\u2082 <;>\n    cases' le_total (c * a) (a * b) with h\u2083 h\u2083 <;>\n    cases' le_total (a * b + b * c + c * a) (a * b + b * c) with h\u2084 h\u2084 <;>\n    cases' le_total (a * b + b * c) (a * c + c * b) with h\u2085 h\u2085 <;>\n    cases' le_total (a * c + c * b) (a * b + b * c + c * a) with h\u2086 h\u2086 <;>\n    simp [h, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, max_eq_right] <;>\n    omega\n  <;>\n    omega\n  <;>\n    omega\n  <;>\n    omega\n  <;>\n    omega\n  <;>\n    omega"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_6135 (x : \u211d) (hx : 0 < x \u2227 x < 90) (h : sin x < cos x) : (sin x / cos x) ^ ((sin x - cos x) / 2) > 1 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_6135_plus (x : \u211d) (hx : 0 < x \u2227 x < 90) (h : sin x < cos x) : Real.sqrt (Real.sqrt (1 + (sin x + cos x) ^ 2) + Real.sqrt (1 + (sin x - cos x) ^ 2)) \u2265 1:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_4807_plus (A : Fin 5 \u2192 \u2115) (hA : \u2200 i, A i > 0) : (\u2211 i, A i) \u2264 5 * (\u2211 i, A i ^ 2) + 10 := by", "target": "\n  have h\u2081 : (\u2211 i, A i) \u2264 5 * (\u2211 i, A i ^ 2) + 10 := by\n    have h\u2082 : (\u2211 i, A i) \u2264 5 * (\u2211 i, A i ^ 2) + 10 := by\n      have h\u2083 : (\u2211 i, A i) \u2264 5 * (\u2211 i, A i ^ 2) := by\n        exact\n          calc\n            (\u2211 i, A i) \u2264 \u2211 i, 5 * A i ^ 2 := by\n              exact Finset.sum_le_sum fun i _ => by nlinarith [hA i]\n            _ = 5 * \u2211 i, A i ^ 2 := by simp [Finset.mul_sum]\n      exact le_trans h\u2083 (by linarith)\n    exact h\u2082\n  exact h\u2081"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_7377_plus (A : Fin 5 \u2192 \u211d) (hA : \u2200 i, 0 \u2264 A i) (hA_sum : \u2211 i, A i = 1) : \u2211 i, (A i)^2 + 3 * Real.sqrt 3 * (\u220f i, A i) \u2265 2 * (\u220f i, A i) := by", "target": "\n  have hA_prod : \u220f i, A i \u2265 0 := by\n    apply Finset.prod_nonneg\n    intro i _\n    exact hA i\n  have hA_sq_sum : \u2211 i, (A i)^2 \u2265 0 := by\n    apply Finset.sum_nonneg\n    intro i _\n    exact sq_nonneg (A i)\n  have hA_ineq : \u2211 i, (A i)^2 + 3 * Real.sqrt 3 * (\u220f i, A i) \u2265 2 * (\u220f i, A i) := by\n    have hA_sqrt : Real.sqrt 3 \u2265 0 := Real.sqrt_nonneg 3\n    nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 by norm_num),\n      mul_self_nonneg (\u220f i, A i),\n      mul_self_nonneg (Real.sqrt 3 - 1),\n      mul_self_nonneg (1 - Real.sqrt 3)]\n  exact hA_ineq"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_23658_plus : \u2200 a b c : \u211d, \u2203 d : \u211d, d \u2265 1 \u2227 d \u2264 3 \u2227 20 * Real.sqrt (3 * (a ^ 2 + b ^ 2 + c ^ 2)) \u2264 10 * (a ^ 2 + b ^ 2 + c ^ 2 + 3 * d) := by", "target": "\n  intro a b c\n  use 3\n  constructor\n  norm_num\n  constructor\n  norm_num\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 * (a ^ 2 + b ^ 2 + c ^ 2) by positivity), mul_self_nonneg (a ^ 2 + b ^ 2 + c ^ 2 - 3 * (a ^ 2 + b ^ 2 + c ^ 2))]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5365 (a b c : \u211d) (ha : cos a + cos b + cos c = 0) (hb : sin a + sin b + sin c = 0) : cos 2*a + cos 2*b + cos 2*c = 0 \u2227 sin 2*a + sin 2*b + sin 2*c = 0 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5365_plus (a b c : \u211d) (hab : a + b + c = 0) : cos a * cos b * cos c + sin a * sin b * sin c + cos (a + b) * cos (b + c) * cos (c + a) + sin (a + b) * sin (b + c) * sin (c + a) \u2265 -3:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_50154_plus : \u2200 a b : \u211d, (a - 1) \u2260 0 \u2227 (b - 1) \u2260 0 \u2227 a \u2260 0 \u2227 b \u2260 0 \u2192  Real.sqrt ((16^2 * a^4 * b^4)/(a-1) / (b-1) / a^4 / b^4) = Real.sqrt ((16^2)/(a-1) / (b-1))  := by", "target": "\n  rintro a b \u27e8h1, h2, h3, h4\u27e9\n  field_simp [h1, h2, h3, h4, mul_comm]\n  <;> ring\n  <;> norm_num\n  <;> field_simp [h1, h2, h3, h4]\n  <;> ring\n  <;> norm_num\n  <;> field_simp [h1, h2, h3, h4]\n  <;> ring\n  <;> norm_num\n  <;> field_simp [h1, h2, h3, h4]\n  <;> ring\n  <;> norm_num\n  <;> field_simp [h1, h2, h3, h4]\n  <;> ring\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_65113_plus (a b c s p : \u211d) (habc : a + b + c = 3 * s) (h : a * b + b * c + c * a = 3 * p^2) (h\u2081 : 0 \u2264 Real.sqrt 3) (h\u2082 : 0 \u2264 (3 - Real.sqrt 3)) (h\u2083 : 0 \u2264 (3 + Real.sqrt 3)) : Real.sqrt (3 * a^2 + 3 * b^2 + 3 * c^2) \u2265 Real.sqrt 3 * Real.sqrt (a^2 + b^2 + c^2) + 3 * Real.sqrt (3 * (a * b + b * c + c * a)) - 3 * Real.sqrt (3 * (a * b + b * c + c * a)):= by", "target": "\n  have h\u2084 : Real.sqrt 3 * Real.sqrt (a^2 + b^2 + c^2) \u2264 Real.sqrt (3 * (a^2 + b^2 + c^2)) := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_sqrt (show 0 \u2264 3 from by linarith),\n      sq_sqrt (show 0 \u2264 a^2 + b^2 + c^2 from by nlinarith),\n      Real.sqrt_nonneg 3,\n      Real.sqrt_nonneg (a^2 + b^2 + c^2)]\n  have h\u2085 : Real.sqrt (3 * a^2 + 3 * b^2 + 3 * c^2) \u2265 Real.sqrt (3 * (a^2 + b^2 + c^2)) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith\n  nlinarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_67934_plus (a b c : \u211d) (h\u2081 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2082 : a + b + c = 1) : Real.sqrt (1 / (a + b + c)) + Real.sqrt (1 / (b + c + a)) + Real.sqrt (1 / (c + a + b)) \u2265 3 := by", "target": "\n  have h\u2083 : 0 < a + b + c := by linarith\n  have h\u2084 : Real.sqrt (1 / (a + b + c)) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    field_simp [h\u2083]\n    rw [le_div_iff, one_mul] <;> linarith\n  have h\u2085 : Real.sqrt (1 / (b + c + a)) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    field_simp [h\u2083]\n    rw [le_div_iff, one_mul] <;> linarith\n  have h\u2086 : Real.sqrt (1 / (c + a + b)) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    field_simp [h\u2083]\n    rw [le_div_iff, one_mul] <;> linarith\n  linarith\n  <;> assumption\n  <;> try norm_num\n  <;> linarith\n  <;> try norm_num\n  <;> linarith\n  <;> try norm_num\n  <;> linarith\n  <;> try norm_num\n  <;> linarith\n  <;> try norm_num\n  <;> linarith\n  <;> try norm_num\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_39022_plus : \u2200 a b c : \u211d, a \u2264 b \u2227 b \u2264 c \u2227 c \u2264 a \u2192 a * b \u2264 b * c \u2227 b * c \u2264 c * a \u2227 c * a \u2264 a * b \u2192 a = b \u2227 b = c \u2227 c = a \u2192 a * b + b * c + c * a = 0 \u2192 a * b * c * (a + b + c) = 0:= by", "target": "\n  rintro a b c \u27e8hab, hbc, hac\u27e9 \u27e8habc, hbca, hc\u27e9 \u27e8h1, h2, h3\u27e9 h4\n  have h5 : a = 0 \u2227 b = 0 \u2227 c = 0 := by\n    apply And.intro\n    \u00b7 nlinarith\n    \u00b7 apply And.intro\n      \u00b7 nlinarith\n      \u00b7 nlinarith\n  have h6 : a * b * c * (a + b + c) = 0 := by\n    simp [h5]\n  exact h6"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5129 (a b c : \u211d) : (b * c) / (b + c + 2 * a) + (c * a) / (c + a + 2 * b) + (a * b) / (a + b + 2 * c) \u2264 (a + b + c) / 4 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5129_plus (a b c : \u211d) (h\u2081 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2082 : a + b + c = 1) : (a * b) / (1 - a) + (b * c) / (1 - b) + (c * a) / (1 - c) \u2265 a * b + b * c + c * a:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_8469_plus (A : Fin 5 \u2192 \u211d) (hA : \u2200 i, 0 < A i) (hA_sum : \u2211 i, A i = 1) (hA_five : \u2200 i, A i \u2264 1/4) : \u2211 i, 1 / A i \u2265 20 := by", "target": "\n  have h\u2081 : \u2200 i, 0 < A i := hA\n  have h\u2082 : \u2211 i, A i = 1 := hA_sum\n  have h\u2083 : \u2200 i, A i \u2264 1/4 := hA_five\n  have h\u2084 : \u2211 i, 1 / A i \u2265 20 := by\n    have : \u2211 i, 1 / A i \u2265 20 := by\n      have : \u2200 i, 1 / A i \u2265 4 := by\n        intro i\n        have : 0 < A i := h\u2081 i\n        have : A i \u2264 1/4 := h\u2083 i\n        have : 1 / A i \u2265 4 := by\n          rw [ge_iff_le, le_div_iff (by linarith)]\n          nlinarith\n        exact this\n      exact calc\n        \u2211 i, 1 / A i \u2265 \u2211 i : Fin 5, 4 := by\n          exact Finset.sum_le_sum fun i _ => this i\n        _ = 5 * 4 := by simp\n        _ = 20 := by ring\n    exact this\n  exact h\u2084"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_53157_plus : \u2200 a b c : \u211d, 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 a + b + c = 1 \u2192 (a * b) ^ 2 + (b * c) ^ 2 + (a * c) ^ 2 \u2264 (a ^ 2 + b ^ 2 + c ^ 2) * (b ^ 2 + a ^ 2 + c ^ 2) + 16 * a * b * c * (a ^ 2 + b ^ 2 + c ^ 2):= by", "target": "\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have : 0 \u2264 a * b := by positivity\n  have : 0 \u2264 b * c := by positivity\n  have : 0 \u2264 a * c := by positivity\n  have : 0 \u2264 a * b * c := by positivity\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_nonneg ha hb, mul_nonneg hb hc, mul_nonneg ha hc, sq_nonneg (a * b + b * c + a * c), sq_nonneg (a * b - b * c), sq_nonneg (b * c - a * c), sq_nonneg (c * a - a * b)]\n  <;> linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_14694_plus : \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 3 \u2192 a * (b ^ 2) * (c ^ 2) + b * (a ^ 2) * (c ^ 2) + c * (a ^ 2) * (b ^ 2) \u2264 3 * (a ^ 3 + b ^ 3 + c ^ 3):= by", "target": "\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have : 0 < a * b := by positivity\n  have : 0 < b * c := by positivity\n  have : 0 < c * a := by positivity\n  have : 0 < a * b * c := by positivity\n  nlinarith [pow_two_nonneg (a - b), pow_two_nonneg (b - c), pow_two_nonneg (c - a),\n    mul_self_nonneg (a * b + b * c + c * a), mul_self_nonneg (a * b - b * c),\n    mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b)]\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_38239_plus : \u2200 n : \u2115, 3 \u2223 n \u2192 3 \u2223 n^4 - n  := by", "target": "\n  rintro n \u27e8k, rfl\u27e9\n  rw [pow_succ]\n  ring_nf\n  omega\n  <;> omega"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4268 (n : \u2115) (k\u2081 k\u2082 k\u2083 : \u2115) (x : Fin n \u2192 NNReal) : (n - 2) * (n + 1) * (\u2211 i, (x i) ^ (k\u2081 + k\u2082) + \u2211 i, (x i) ^ (k\u2082 + k\u2083) + \u2211 i, (x i) ^ (k\u2083 + k\u2081)) - 2 * (n - 2) * (\u2211 i, (x i) ^ k\u2081 * \u2211 i, (x i) ^ k\u2082 + \u2211 i, (x i) ^ k\u2082 * \u2211 i, (x i) ^ k\u2083 + \u2211 i, (x i) ^ k\u2083 * \u2211 i, (x i) ^ k\u2081) + 3 * \u2211 i, (x i) ^ (k\u2081 + k\u2082 + k\u2083) + 6 * (\u2211 i, (x i) ^ k\u2081) * (\u2211 i, (x i) ^ k\u2082) * (\u2211 i, (x i) ^ k\u2083) - 3 * (\u2211 i, (x i) ^ (k\u2081 + k\u2082)) * (\u2211 i, (x i) ^ k\u2083) - 3 * (\u2211 i, (x i) ^ (k\u2082 + k\u2083)) * (\u2211 i, (x i) ^ k\u2081) - 3 * (\u2211 i, (x i) ^ (k\u2083 + k\u2081)) * (\u2211 i, (x i) ^ k\u2082) + 3 * (n - 1) * (n - 2) \u2265 0 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4268_plus (n : \u2115) (k\u2081 k\u2082 k\u2083 : \u2115) (x : Fin n \u2192 NNReal) : \u2211 i : Fin n, (x i) ^ k\u2081 * (1 - x i) ^ k\u2082 \u2264 \u2211 i : Fin n, (x i) ^ k\u2081 * 1 ^ k\u2082:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_414 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a + b + c) ^ 3 \u2265 (27 / 4) * (a ^ 2 * b + b ^ 2 * c + c ^ 2 * a + a * b * c) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_414_plus (A : Fin 5 \u2192 \u211d) (hA : \u2200 i, 0 < A i) : (A 0 + A 1 + A 2 + A 3 + A 4) ^ 5 \u2265 5 * (A 0 * A 1 * A 2 * A 3 * A 4):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2449 {a n k y : \u2115} (h : a ^ k \u2261 a ^ y [ZMOD n]) (hab : Nat.Coprime a n) : k + y \u2261 0 [ZMOD Nat.totient n] := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2449_plus : \u2200 a n : \u2115, a ^ n \u2261 1 [ZMOD n] \u2192 a.Coprime n \u2192 \u2200 k : \u2115, a ^ (k * n) \u2261 1 [ZMOD n] := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_60693_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 1) (h\u2081 : 0 \u2264 x * y) (h\u2082 : 0 \u2264 y * z) (h\u2083 : 0 \u2264 z * x) (h\u2084 : 0 \u2264 x * y * z) : 3 - 2 * x * y * (x + y) * (x * y + 1) * (y * x + 1) * (x + y) * (x * y + 1) * (y * x + 1) \u2264 3:= by", "target": "\n  have h\u2085 : x * y * (x + y) * (x * y + 1) * (y * x + 1) \u2265 0 := by positivity\n  have h\u2086 : x * y * (x + y) * (x * y + 1) * (y * x + 1) * (x + y) \u2265 0 := by positivity\n  have h\u2087 : x * y * (x + y) * (x * y + 1) * (y * x + 1) * (x + y) * (x * y + 1) \u2265 0 := by positivity\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_47043_plus : \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a + b > c \u2227 b + c > a \u2227 a + c > b \u2192 \u2203 r : \u211d, r > 0 \u2227 \u2200 s : \u211d, s > 0 \u2192 r * s \u2264 a ^ 2 + b ^ 2 + c ^ 2 \u2192 s * (a ^ 2 + b ^ 2 + c ^ 2) \u2264 (a + b + c) ^ 2 * (a ^ 2 + b ^ 2 + c ^ 2):= by", "target": "\n  rintro a b c \u27e8ha, hb, hc\u27e9 \u27e8hab, hbc, hac\u27e9\n  use 1\n  refine' \u27e8by linarith, fun s hs h => _\u27e9\n  nlinarith [mul_pos ha hb, mul_pos hb hc, mul_pos ha hc,\n    mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (a - c)]\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3324 (x y z u v w : \u211d) (h\u2080 : x + y + z = 3 * u) (h\u2081 : x * y + x * z + y * z = 3 * v^2) (h\u2082 : x * y * z = w^3) : 2 * (x^3 * y + x^3 * z + y^3 * x + y^3 * z + z^3 * x + z^3 * y + 2 * (x^2 * y^2 + x^2 * z^2 + y^2 * z^2)) \u2265 Real.sqrt 27 * (x^2 * y + x^2 * z + y^2 * x + y^2 * z + z^2 * x + z^2 * y + (2 / 3) * (x * y * z)) * Real.sqrt ((x * y * z) / (x + y + z)) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3324_plus (x y z : \u211d) (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2081 : x + y + z = 3 * (x * y + x * z + y * z) / 3) : x ^ 2 + y ^ 2 + z ^ 2 + (x * y + x * z + y * z) * Real.sqrt 3 \u2265 x * y * Real.sqrt 3 \u2227 x ^ 2 + y ^ 2 + z ^ 2 + (x * y + x * z + y * z) * Real.sqrt 3 \u2265 y * z * Real.sqrt 3 \u2227 x ^ 2 + y ^ 2 + z ^ 2 + (x * y + x * z + y * z) * Real.sqrt 3 \u2265 z * x * Real.sqrt 3 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_10485_plus : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 a * b * c > 0 \u2227 (Real.sqrt (a^2 + b^2 - a * b) + Real.sqrt (b^2 + c^2 - b * c) + Real.sqrt (c^2 + a^2 - c * a) \u2265 Real.sqrt (a^2 + b^2 + c^2)) := by", "target": "\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  constructor\n  \u00b7 positivity\n  have hab : 0 \u2264 (a - b)^2 := sq_nonneg (a - b)\n  have hbc : 0 \u2264 (b - c)^2 := sq_nonneg (b - c)\n  have hac : 0 \u2264 (a - c)^2 := sq_nonneg (a - c)\n  have h\u2081 : Real.sqrt (a^2 + b^2 - a * b) \u2265 (a + b) / 2 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (a - b)]\n  have h\u2082 : Real.sqrt (b^2 + c^2 - b * c) \u2265 (b + c) / 2 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (b - c)]\n  have h\u2083 : Real.sqrt (c^2 + a^2 - c * a) \u2265 (c + a) / 2 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (c - a)]\n  nlinarith [sq_sqrt (show 0 \u2264 a^2 + b^2 + c^2 from by positivity),\n    Real.sqrt_nonneg (a^2 + b^2 + c^2), sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_53456_plus : \u2200 a b c : \u2115, 1 / 6 + 1 / 10 + 1 / 8 \u2265 1 / 2 \u2228 (\u2211 k in Finset.Icc 1 10, k) \u2264 10 \u2228 (\u2211 k in Finset.Icc 1 10, k) \u2264 10 := by", "target": "\n  norm_num [Finset.sum_range_succ]\n  <;> decide"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_10085_plus : \u2200 n : \u2115, 1 < n \u2192 \u2211 k in Finset.range (n-1), (n - k) \u2264 n ^ 2 - n \u2227 n ^ 2 - n \u2264 (n ^ 2 - n) * 2:= by", "target": "\n  rintro n (hn : 1 < n)\n  have : 0 < n - 1 := by omega\n  have h\u2081 : \u2211 k in Finset.range (n - 1), (n - k) \u2264 n ^ 2 - n := by\n    calc\n      (\u2211 k in Finset.range (n - 1), (n - k)) \u2264 \u2211 k in Finset.range (n - 1), n := Finset.sum_le_sum fun x hx \u21a6 Nat.sub_le _ _\n      _ = (n - 1) * n := by simp [Finset.sum_const, Finset.card_range]\n      _ \u2264 n ^ 2 - n := by cases n <;> simp_all [Nat.succ_mul, Nat.mul_succ, Nat.add_comm, Nat.add_left_comm]\n      <;> ring_nf <;> omega\n  have h\u2082 : n ^ 2 - n \u2264 (n ^ 2 - n) * 2 := by\n    have : n ^ 2 - n \u2264 (n ^ 2 - n) * 2 := by\n      nlinarith\n    linarith\n  exact \u27e8h\u2081, h\u2082\u27e9\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_11333_plus : \u2200 a b c : \u211d, \u2203 d : \u211d, d \u2264 a^2 + b^2 + c^2 \u2227 \u2200 x y : \u211d, 0 \u2264 (x - a)^2 + (y - b)^2 \u2192 0 \u2264 (x - a)^2 + (y - b)^2 + c^2:= by", "target": "\n  intro a b c\n  use a^2 + b^2 + c^2\n  constructor\n  exact le_refl _\n  intro x y h\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_45765_plus (n : \u2115) : exp (\u2211 k in Finset.Ico 1 (n + 1), (1 : \u211d) / k) \u2265 \u220f k in Finset.Ico 1 (n + 1), (1 : \u211d) / k:= by", "target": "\n  have h\u2081 : \u220f k in Finset.Ico 1 (n + 1), (1 : \u211d) / k \u2264 exp (\u2211 k in Finset.Ico 1 (n + 1), (1 : \u211d) / k) := by\n    have h\u2082 : \u220f k in Finset.Ico 1 (n + 1), (1 : \u211d) / k \u2264 1 := by\n      have h\u2083 : \u220f k in Finset.Ico 1 (n + 1), (1 : \u211d) / k \u2264 1 := by\n        calc\n          \u220f k in Finset.Ico 1 (n + 1), (1 : \u211d) / k \u2264 \u220f k in Finset.Ico 1 (n + 1), 1 := by\n            apply Finset.prod_le_prod\n            \u00b7 intro i hi\n              exact div_nonneg (by norm_num) (by aesop)\n            \u00b7 intro i hi\n              have : (1 : \u211d) / i \u2264 1 := by\n                exact div_le_one_of_le (by aesop) (by aesop)\n              exact this\n          _ = 1 := by simp\n      exact h\u2083\n    have h\u2083 : 1 \u2264 exp (\u2211 k in Finset.Ico 1 (n + 1), (1 : \u211d) / k) := by\n      exact one_le_exp (by exact Finset.sum_nonneg (by intro x hx; exact div_nonneg (by norm_num) (by aesop)))\n    linarith\n  exact le_trans h\u2081 (by simp [exp_le_exp])"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_27093_plus : \u2200 a b c : \u211d, a \u2208 Set.Icc (0 : \u211d) 1 \u2227 b \u2208 Set.Icc (0 : \u211d) 1 \u2227 c \u2208 Set.Icc (0 : \u211d) 1 \u2192 a * b * c \u2264 1 \u2227 a * b * (1 - c) \u2264 1 \u2227 a * (1 - b) * c \u2264 1 \u2227 (1 - a) * b * c \u2264 1 \u2192 (3 * (1 + a) * (1 - 2 * b) ^ 2 * b ^ 2) / (1 + 2 * b) / (1 - b) + (3 * (1 + b) * (1 - 2 * a) ^ 2 * a ^ 2) / (1 + 2 * a) / (1 - a) + (3 * (1 + c) * (1 - 2 * a) ^ 2 * a ^ 2) / (1 + 2 * a) / (1 - a) + (3 * (1 + a) * (1 - 2 * c) ^ 2 * c ^ 2) / (1 + 2 * c) / (1 - c) \u2265 0 := by", "target": "\n  rintro a b c \u27e8\u27e8ha0, ha1\u27e9, \u27e8hb0, hb1\u27e9, \u27e8hc0, hc1\u27e9\u27e9\n  rintro \u27e8habc, hab1, hac1, hba1\u27e9\n  have h\u2080 : 0 \u2264 a * b := by nlinarith\n  have h\u2081 : 0 \u2264 a * c := by nlinarith\n  have h\u2082 : 0 \u2264 b * c := by nlinarith\n  have h\u2083 : 0 \u2264 1 - a := by nlinarith\n  have h\u2084 : 0 \u2264 1 - b := by nlinarith\n  have h\u2085 : 0 \u2264 1 - c := by nlinarith\n  have h\u2086 : 0 \u2264 a * b * (1 - c) := by nlinarith\n  have h\u2087 : 0 \u2264 a * c * (1 - b) := by nlinarith\n  have h\u2088 : 0 \u2264 b * c * (1 - a) := by nlinarith\n  have h\u2089 : 0 \u2264 (1 - a) * b * c := by nlinarith\n  positivity\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_18902_plus  (a b c : \u211d)\n  (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c)\n  (h\u2081 : a + b + c = 400)\n  (h\u2082 : 2 * a + b = 2 * b + c)\n  (h\u2083 : a + b + c = 400)\n  (h\u2084 : 2 * a + b = 2 * b + c)\n  (h\u2085 : a + b + c = 400)\n  (h\u2086 : 2 * a + b = 2 * b + c)\n  (h\u2087 : a + b + c = 400)\n  (h\u2088 : 2 * a + b = 2 * b + c)\n  (h\u2089 : a + b + c = 400)\n  (h\u2081\u2080 : 2 * a + b = 2 * b + c) :\n  Real.sqrt (2 * a + b) + Real.sqrt (2 * b + c) + Real.sqrt (2 * c + a) \u2264 60  := by", "target": "\n  nlinarith [sq_sqrt (show (2 * a + b) \u2265 0 by nlinarith),\n    sq_sqrt (show (2 * b + c) \u2265 0 by nlinarith),\n    sq_sqrt (show (2 * c + a) \u2265 0 by nlinarith),\n    sq_nonneg (Real.sqrt (2 * a + b) - Real.sqrt (2 * b + c)),\n    sq_nonneg (Real.sqrt (2 * b + c) - Real.sqrt (2 * c + a)),\n    sq_nonneg (Real.sqrt (2 * c + a) - Real.sqrt (2 * a + b)),\n    sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_36447_plus : \u2200 a b c : \u211d, 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 a * b + b * c + c * a = 3 \u2192 1 / (1 + a ^ 2 + b ^ 2) + 1 / (1 + b ^ 2 + c ^ 2) + 1 / (1 + c ^ 2 + a ^ 2) \u2264 1 \u2228 (\u2203 a b c : \u211d, 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 a * b + b * c + c * a = 3 \u2227 1 / (1 + a ^ 2 + b ^ 2) + 1 / (1 + b ^ 2 + c ^ 2) + 1 / (1 + c ^ 2 + a ^ 2) > 1) := by", "target": "\n  rintro a b c \u27e8h\u2080, h\u2081, h\u2082, h\u2083\u27e9\n  by_cases h\u2084 : 1 / (1 + a ^ 2 + b ^ 2) + 1 / (1 + b ^ 2 + c ^ 2) + 1 / (1 + c ^ 2 + a ^ 2) \u2264 1\n  \u00b7 left\n    exact h\u2084\n  \u00b7 right\n    refine' \u27e8a, b, c, h\u2080, h\u2081, h\u2082, h\u2083, _\u27e9\n    contrapose! h\u2084\n    linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_46355_plus : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 a * b / (a ^ 2 + b ^ 2 + c ^ 2) + b * c / (b ^ 2 + c ^ 2 + a ^ 2) + c * a / (c ^ 2 + a ^ 2 + b ^ 2) \u2264 1:= by", "target": "\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  field_simp [add_comm, add_left_comm, add_assoc]\n  rw [div_le_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b + b * c + c * a), mul_self_nonneg (a * b - b * c),\n    mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3917 (n : \u2115) (x : \u211d) (P : \u2115 \u2192 \u211d \u2192 \u211d) (h : P 0 x = 0 \u2227 P 1 x = x \u2227 \u2200 n \u2265 2, P n x = x * P (n - 1) x + (1 - x) * P (n - 2) x) : P n x = x * (\u2211 i in Finset.range n, (x - 1) ^ i) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3917_plus : \u2200 a b : \u2115, a < b \u2192 \u2203 c : \u2115, a * c < b * c \u2227 \u2203 d : \u2115, b * d \u2264 a * d + (b - a) * d:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_19424_plus : \u2200 a b : \u211d, 0 < a \u2227 0 < b \u2192 a + b = 1 \u2192 \u2200 n : \u2115, 1 \u2264 n \u2192 \u2211 k in Finset.Ico 1 (n + 1), (a ^ k * b ^ (n - k)) \u2264 n:= by", "target": "\n  rintro a b \u27e8ha, hb\u27e9 hab n hn\n  have : \u2200 k \u2208 Finset.Ico 1 (n + 1), a ^ k * b ^ (n - k) \u2264 1 := by\n    intro k hk\n    calc\n      a ^ k * b ^ (n - k) \u2264 1 ^ k * 1 ^ (n - k) := by gcongr <;> nlinarith [ha, hb, hab]\n      _ = 1 := by simp\n  exact (Finset.sum_le_sum this).trans (by simp)\n  <;> assumption\n  <;> simp_all"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_763_plus (x : \u2115 \u2192 \u211d) (hx : \u2200 i, x i \u2265 0) (h1 : \u2211 i in Finset.range 3, x i = 1) (h2 : \u2211 i in Finset.range 4, x i = 2) : \u2211 i in Finset.range 4, x i ^ 2 \u2265 (\u2211 i in Finset.range 3, x i ^ 2) + x 3 ^ 2:= by", "target": "\n  simp only [Finset.sum_range_succ, Finset.sum_range_zero] at h1 h2 \u22a2\n  nlinarith [hx 0, hx 1, hx 2, hx 3]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2574 (x y z : \u211d) : -(x*y + x*z + y*z)^2 + (x + y + z)*(x*y^2 + y*z^2 + x^2*z) \u2265 0 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2574_plus : \u2200 a b c : \u211d, a * b * c * (a + b + c) * (a + b + c) \u2265 0 \u2194 a * b * c \u2265 0 \u2227 a + b + c = 0 \u2228 a * b * c = 0 \u2228 a + b + c = 0 \u2228 a * b * c * (a + b + c) * (a + b + c) \u2265 0:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_55560_plus (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : \u2203 a' b' c' : \u211d, (a' + 1) ^ 7 * (b' + 1) ^ 7 * (c' + 1) ^ 7 > 7 ^ 7 * a' ^ 4 * b' ^ 4 * c' ^ 4 \u2227 a' < a \u2227 b' < b \u2227 c' < c:= by", "target": "\n  use 0, 0, 0\n  constructor\n  \u00b7 norm_num\n  constructor\n  \u00b7 linarith\n  constructor\n  \u00b7 linarith\n  \u00b7 linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_13252_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x ^ 2 + y ^ 2 + z ^ 2 = 1) : (Real.sqrt (1 - x ^ 2) * x) + (Real.sqrt (1 - y ^ 2) * y) + (Real.sqrt (1 - z ^ 2) * z) \u2264 (2 * Real.sqrt 3) / 2 \u2227 (Real.sqrt (1 - x ^ 2) * x) + (Real.sqrt (1 - y ^ 2) * y) + (Real.sqrt (1 - z ^ 2) * z) \u2265 0:= by", "target": "\n  have h\u2080 : Real.sqrt 3 \u2265 0 := Real.sqrt_nonneg 3\n  have h\u2081 : Real.sqrt (1 - x ^ 2) * x \u2264 (1 : \u211d) / 2 := by\n    nlinarith [sq_sqrt (show 0 \u2264 1 - x ^ 2 by nlinarith),\n      sq_nonneg (x - Real.sqrt (1 - x ^ 2))]\n  have h\u2082 : Real.sqrt (1 - y ^ 2) * y \u2264 (1 : \u211d) / 2 := by\n    nlinarith [sq_sqrt (show 0 \u2264 1 - y ^ 2 by nlinarith),\n      sq_nonneg (y - Real.sqrt (1 - y ^ 2))]\n  have h\u2083 : Real.sqrt (1 - z ^ 2) * z \u2264 (1 : \u211d) / 2 := by\n    nlinarith [sq_sqrt (show 0 \u2264 1 - z ^ 2 by nlinarith),\n      sq_nonneg (z - Real.sqrt (1 - z ^ 2))]\n  have h\u2084 : Real.sqrt (1 - x ^ 2) * x + Real.sqrt (1 - y ^ 2) * y + Real.sqrt (1 - z ^ 2) * z \u2264 3 / 2 := by\n    linarith\n  have h\u2085 : Real.sqrt (1 - x ^ 2) * x + Real.sqrt (1 - y ^ 2) * y + Real.sqrt (1 - z ^ 2) * z \u2265 0 := by\n    nlinarith [Real.sqrt_nonneg (1 - x ^ 2), Real.sqrt_nonneg (1 - y ^ 2), Real.sqrt_nonneg (1 - z ^ 2)]\n  constructor\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 by norm_num),\n    sq_sqrt (show (0 : \u211d) \u2264 3 by norm_num),\n    sq_sqrt (show (0 : \u211d) \u2264 3 by norm_num)]\n  assumption"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_27921_plus : \u2200 a b c d : \u211d, 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 0 \u2264 d \u2227 a + b + c + d = 4 \u2227 a * b + b * c + c * d + d * a = 6 \u2192 (2 * a ^ 2 + b ^ 2) * (2 * c ^ 2 + d ^ 2) \u2264 116 \u2227 (2 * a ^ 2 + b ^ 2) * (2 * c ^ 2 + d ^ 2) * (a + c) \u2264 348 \u2227 (2 * a ^ 2 + b ^ 2) * (2 * c ^ 2 + d ^ 2) * (b + d) \u2264 416:= by", "target": "\n  rintro a b c d \u27e8ha, hb, hc, hd, habc, habd\u27e9\n  have : (a + b + c + d) ^ 2 = 16 := by rw [habc]; norm_num\n  have : 0 \u2264 a * b := by positivity\n  have : 0 \u2264 b * c := by positivity\n  have : 0 \u2264 c * d := by positivity\n  have : 0 \u2264 d * a := by positivity\n  have : 0 \u2264 a * c := by positivity\n  have : 0 \u2264 b * d := by positivity\n  refine' \u27e8by nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (c - d)], by nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (c - d)], by nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (c - d)]\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_4717_plus : \u2200 a b c : \u211d, a \u2264 3 \u2227 b \u2264 3 \u2227 c \u2264 3 \u2192 a + b + c = 3 \u2192 Real.sqrt (3 - a) * Real.sqrt (3 - b) * Real.sqrt (3 - c) \u2265 1 \u2192 Real.sqrt (3 - a) * Real.sqrt (3 - b) * Real.sqrt (3 - c) \u2264 9:= by", "target": "\n  rintro a b c \u27e8h\u2081, h\u2082, h\u2083\u27e9 h\u2084 h\u2085\n  have h\u2086 : 0 \u2264 Real.sqrt (3 - a) := Real.sqrt_nonneg (3 - a)\n  have h\u2087 : 0 \u2264 Real.sqrt (3 - b) := Real.sqrt_nonneg (3 - b)\n  have h\u2088 : 0 \u2264 Real.sqrt (3 - c) := Real.sqrt_nonneg (3 - c)\n  have h\u2089 : 0 \u2264 Real.sqrt (3 - a) * Real.sqrt (3 - b) := mul_nonneg h\u2086 h\u2087\n  have h\u2081\u2080 : 0 \u2264 Real.sqrt (3 - a) * Real.sqrt (3 - b) * Real.sqrt (3 - c) := mul_nonneg h\u2089 h\u2088\n  nlinarith [sq_sqrt (show 0 \u2264 3 - a by linarith), sq_sqrt (show 0 \u2264 3 - b by linarith),\n    sq_sqrt (show 0 \u2264 3 - c by linarith),\n    mul_self_nonneg (Real.sqrt (3 - a) * Real.sqrt (3 - b) - Real.sqrt (3 - c))]\n  <;> linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_40956_plus (n : \u2115) (hn : 2 \u2264 n) : \u2211 i in Finset.range (n+1), \u2211 j in Finset.range (n+1), (1 / (i+j)) \u2265 1:= by", "target": "\n  rcases n with (_ | _ | n) <;>\n  simp_all [Finset.sum_range_succ', Nat.div_eq_of_lt, Nat.div_eq_of_lt]\n  all_goals\n    norm_num\n    apply Nat.le_of_sub_eq_zero\n    ring_nf\n    omega"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_6028 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (Real.sqrt ((xy + xz + yz) / (x ^ 2 + y ^ 2 + z ^ 2)) * (2 + Real.sqrt 2) + 6 * Real.sqrt ((x ^ 3 + y ^ 3 + z ^ 3) / (x + y + z) ^ 3)) \u2265 Real.sqrt 2 + 4 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_6028_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \u2203 a b c : \u211d, a * b * c = 1 \u2227 a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 (x + y + z) * (x ^ 2 + y ^ 2 + z ^ 2) * (x ^ 3 + y ^ 3 + z ^ 3) \u2265 3 * x * y * z * (x * y * z):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_24637_plus : \u2200 a b c : \u211d, a * b * c \u2265 0 \u2192 \u2200 x y z : \u211d, (x * y * z \u2265 0 \u2227 \u2203 x : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2227 y * z = x) \u2192 Real.sqrt (x * y) * Real.sqrt (y * z) * Real.sqrt (z * x) \u2264 (x * y * z + 1) * Real.sqrt (x * y * z):= by", "target": "\n  rintro a b c hab x y z \u27e8h\u2081, h\u2082\u27e9\n  obtain \u27e8x\u2080, hx\u2080, hy\u2080, hz\u2080, h\u27e9 := h\u2082\n  have h\u2083 : Real.sqrt (x * y) * Real.sqrt (y * z) * Real.sqrt (z * x) \u2264 (x * y * z + 1) * Real.sqrt (x * y * z) := by\n    have h\u2084 : Real.sqrt (x * y) * Real.sqrt (y * z) * Real.sqrt (z * x) \u2264 (x * y * z + 1) * Real.sqrt (x * y * z) := by\n      have h\u2085 : Real.sqrt (x * y) * Real.sqrt (y * z) * Real.sqrt (z * x) = Real.sqrt (x * y * (y * z) * (z * x)) := by\n        rw [\u2190 Real.sqrt_mul, \u2190 Real.sqrt_mul] <;> nlinarith\n      rw [h\u2085]\n      apply Real.sqrt_le_iff.mpr\n      constructor\n      \u00b7 positivity\n      \u00b7 nlinarith [sq_sqrt (by positivity : 0 \u2264 x * y * z), sq_nonneg (x * y * z)]\n    linarith\n  linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5214 (a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (habc : a \u2265 b + c) : (2 * a + b + c) * (1 / a + 1 / b + 1 / c) \u2265 15 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5214_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : a + b + c = 1) : a ^ 2 / (1 + b) + b ^ 2 / (1 + c) + c ^ 2 / (1 + a) \u2265 (a * b + b * c + c * a) / 2:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_2763_plus (A : Fin 5 \u2192 \u211d) (h\u2080 : \u2200 i, 0 \u2264 A i) (h\u2081 : \u2211 i, A i = 1) : \u2211 i, (A i * (A (i + 1) + 1)) \u2265 1:= by", "target": "\n  have h\u2082 : \u2211 i, (A i * (A (i + 1) + 1)) \u2265 1 := by\n    have h\u2083 : \u2211 i, (A i * (A (i + 1) + 1)) \u2265 \u2211 i, A i := by\n      apply Finset.sum_le_sum\n      intro x _\n      nlinarith [h\u2080 x, h\u2080 (x + 1)]\n    simp_all\n  exact h\u2082"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_59948_plus (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : \u2203 a' b' c' : \u211d, (0 < a' \u2227 0 < b' \u2227 0 < c') \u2227 (a' * b' / (a' + 3 * b' + 2 * c') + b' * c' / (b' + 3 * c' + 2 * a') + c' * a' / (c' + 3 * a' + 2 * b') \u2264 (a' + b' + c') / 6) \u2227 (a' * b' * c' > 0) \u2227 (a' * b' * c' \u2264 a * b * c)  := by", "target": "\n  use a, b, c\n  exact \u27e8\u27e8ha, hb, hc\u27e9, by\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le,\n      mul_nonneg (sq_nonneg a) hb.le, mul_nonneg (sq_nonneg b) hc.le, mul_nonneg (sq_nonneg c) ha.le]\n    , by positivity, by\n      nlinarith [mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le,\n        mul_nonneg (sq_nonneg a) hb.le, mul_nonneg (sq_nonneg b) hc.le, mul_nonneg (sq_nonneg c) ha.le]\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_28575_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a * b + a * c + b * c = 3) :  Real.sqrt (a + b) * Real.sqrt (b + c) * Real.sqrt (c + a) \u2265 1:= by", "target": "\n  have h\u2081 : 0 \u2264 a := hab.1\n  have h\u2082 : 0 \u2264 b := hab.2.1\n  have h\u2083 : 0 \u2264 c := hab.2.2\n  have h\u2084 : 0 \u2264 a * b := mul_nonneg h\u2081 h\u2082\n  have h\u2085 : 0 \u2264 a * c := mul_nonneg h\u2081 h\u2083\n  have h\u2086 : 0 \u2264 b * c := mul_nonneg h\u2082 h\u2083\n  have h\u2087 : Real.sqrt (a + b) \u2265 0 := Real.sqrt_nonneg (a + b)\n  have h\u2088 : Real.sqrt (b + c) \u2265 0 := Real.sqrt_nonneg (b + c)\n  have h\u2089 : Real.sqrt (c + a) \u2265 0 := Real.sqrt_nonneg (c + a)\n  have h\u2081\u2080 : Real.sqrt (a + b) * Real.sqrt (b + c) * Real.sqrt (c + a) \u2265 0 := by positivity\n  have h\u2081\u2081 : Real.sqrt (a + b) * Real.sqrt (b + c) * Real.sqrt (c + a) \u2265 1 := by\n    have h\u2081\u2082 : Real.sqrt (a + b) * Real.sqrt (b + c) * Real.sqrt (c + a) =\n      Real.sqrt ((a + b) * (b + c) * (c + a)) := by\n      rw [Real.sqrt_mul, Real.sqrt_mul] <;> positivity\n    rw [h\u2081\u2082]\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2153 (a b : \u211d) : Real.sqrt ((a - 1) ^ 2 + a ^ 2) * Real.sqrt ((b - 1) ^ 2 + b ^ 2) \u2265 a * b + (a - 1) * (1 - b) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2153_plus : \u2200 a b : \u211d, Real.sqrt ((a - 1) ^ 2 + a ^ 2) * Real.sqrt ((b - 1) ^ 2 + b ^ 2) \u2265 a * b + (a - 1) * (1 - b) \u2227 Real.sqrt ((a - 1) ^ 2 + a ^ 2) * Real.sqrt ((b - 1) ^ 2 + b ^ 2) \u2264 (a ^ 2 + (a - 1) ^ 2 + b ^ 2 + (b - 1) ^ 2):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_27604_plus : \u2200 n : \u2115, (n^3)! \u2223 (n^6)!  := by", "target": "\n  intro n\n  have h\u2081 : n ^ 3 \u2264 n ^ 6 := by\n    cases n with\n    | zero => simp\n    | succ n =>\n      exact Nat.pow_le_pow_of_le_right (by norm_num) (by linarith)\n  have h\u2082 : (n ^ 3)! \u2223 (n ^ 6)! := by\n    apply Nat.factorial_dvd_factorial\n    linarith\n  exact h\u2082"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_10133_plus : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c = 1 \u2192 \u2203 x y z : \u211d, x + y + z = 1 \u2227 0 < x \u2227 0 < y \u2227 0 < z \u2227 x * y * z \u2264 a * b * c \u2227 y * z * x \u2264 b * c * a \u2227 z * x * y \u2264 c * a * b := by", "target": "\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  refine' \u27e8a / (a + b + c), b / (a + b + c), c / (a + b + c), _, by positivity, by positivity, by positivity, _, _, _\u27e9 <;> field_simp [habc] <;> ring_nf <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_3090_plus (A : Fin 5 \u2192 \u211d) (hA : \u2200 i, 0 < A i) (hA_sum : \u2211 i, A i = 1) : (\u2211 i, (A i ^ 2 / (A i + (\u2211 j in Finset.univ.erase i, A j)))) \u2264 1:= by", "target": "\n  have h1 : \u2200 i \u2208 Finset.univ, A i ^ 2 / (A i + (\u2211 j in Finset.univ.erase i, A j)) \u2264 A i := by\n    intro i hi\n    have h2 : 0 < A i := hA i\n    have h3 : A i + (\u2211 j in Finset.univ.erase i, A j) \u2265 A i := by\n      exact le_add_of_nonneg_right (Finset.sum_nonneg (fun j hj => by exact le_of_lt (hA j)))\n    exact div_le_of_nonneg_of_le_mul (by linarith) (by linarith) (by\n      nlinarith [hA_sum, Finset.single_le_sum (fun j hj => le_of_lt (hA j)) hi])\n  exact\n    calc\n      (\u2211 i in Finset.univ, (A i ^ 2 / (A i + (\u2211 j in Finset.univ.erase i, A j)))) \u2264\n          \u2211 i in Finset.univ, A i := Finset.sum_le_sum h1\n      _ = 1 := hA_sum\n  <;> rfl\n  <;> rfl\n  <;> rfl"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_3294_plus (x y : \u211d) (h\u2081 : x^3 - 3 * x * y^2 = 11) (h\u2082 : y^3 - 3 * x^2 * y = 2) : x^2 * y^2 \u2264 21 := by", "target": "\n  nlinarith [sq_nonneg (x * y - 1), sq_nonneg (x^2 - y^2), sq_nonneg (x - y),\n    sq_nonneg (x + y), sq_nonneg (x * y - 2), sq_nonneg (x * y + 2)]\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3911 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x / (y + z) + y / (z + x) + z / (x + y)) + (2 * (x + y + z) / (Real.sqrt (x * (y + z)) + Real.sqrt (y * (z + x)) + Real.sqrt (z * (x + y)))) * Real.sqrt ((x * y * z) / ((x + y) * (y + z) * (z + x))) \u2265 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3911_plus : \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 \u2203 x : \u211d, x > 0 \u2227 (1 / Real.sqrt (x + a) + 1 / Real.sqrt (x + b) + 1 / Real.sqrt (x + c)) \u2265 3 / Real.sqrt (x + (a + b + c)):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_56024_plus (n : \u2115) (z : \u2102) (hz : \u2016z\u2016 = 1) : \u2016(z - 1) ^ (n + 1)\u2016 \u2264 (n + 1) * \u2016(z - 1)\u2016 ^ (n + 1)  := by", "target": "\n  have h : \u2016(z - 1) ^ (n + 1)\u2016 \u2264 (n + 1) * \u2016(z - 1)\u2016 ^ (n + 1) := by\n    have h\u2081 : \u2016(z - 1) ^ (n + 1)\u2016 = \u2016z - 1\u2016 ^ (n + 1) := by\n      simp [norm_pow]\n    rw [h\u2081]\n    simpa using\n      calc\n        \u2016z - 1\u2016 ^ (n + 1) \u2264 (n + 1) * \u2016z - 1\u2016 ^ (n + 1) := by\n          exact le_mul_of_one_le_left (by positivity) (by simp [Nat.one_le_cast])\n        _ = (n + 1) * \u2016z - 1\u2016 ^ (n + 1) := by rfl\n  exact h"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_9374_plus (A : Fin 5 \u2192 \u211d) (hA : \u2200 i, 0 < A i) (hA_sum : \u2211 i, A i = 3) (hA_ineq : \u2200 i, A i \u2264 3 / 5) (hA_ineq_2 : \u2200 i, A i \u2265 0) : \u2211 i, (A i) ^ 2 \u2264 9:= by", "target": "\n  have : \u2200 i, (A i) ^ 2 \u2264 9 / 25 := by\n    intro i\n    have h\u2081 : 0 \u2264 A i := by linarith [hA_ineq_2 i]\n    have h\u2082 : A i \u2264 3 / 5 := by linarith [hA_ineq i]\n    nlinarith\n  have : (\u2211 i : Fin 5, (A i) ^ 2) \u2264 \u2211 i : Fin 5, (9 / 25 : \u211d) := by\n    apply Finset.sum_le_sum\n    intro x hx\n    exact this x\n  simp only [Finset.sum_const, Finset.card_fin, nsmul_eq_mul] at this\n  norm_num at this\n  linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5070 (a b : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hab : a + b = 3) : (a^3 + 2) / (b^2 + 2) + (b^3 + 2) / (a^2 + 2) + 5 * a * b \u2265 937 / 68 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5070_plus : \u2200 a b : \u211d, 0 \u2264 a \u2227 0 \u2264 b \u2227 a + b = 3 \u2192 (a^3 + 2) / (b^2 + 2) + (b^3 + 2) / (a^2 + 2) + 5 * a * b \u2265 937 / 68 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_81845_plus (x : \u211d) (hx : 0 < x \u2227 x \u2264 1) (h : 0 \u2264 y \u2227 y \u2264 1) : \u2203 y', 0 \u2264 y' \u2227 y' \u2264 1 \u2227 y' ^ 2 \u2264 y \u2227 y ^ 2 \u2264 y' := by", "target": "\n  use y\n  have h\u2080 := hx.1\n  have h\u2081 := hx.2\n  have h\u2082 := h.1\n  have h\u2083 := h.2\n  have h\u2084 : y ^ 2 \u2264 y := by nlinarith\n  have h\u2085 : 0 \u2264 y := by nlinarith\n  have h\u2086 : y \u2264 1 := by nlinarith\n  have h\u2087 : y ^ 2 \u2264 y := by nlinarith\n  have h\u2088 : 0 \u2264 y := by nlinarith\n  have h\u2089 : y \u2264 1 := by nlinarith\n  exact \u27e8h\u2082, h\u2083, by nlinarith, by nlinarith\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_11394_plus : \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a * b * c = 1 \u2192 a ^ 2 + b ^ 2 + c ^ 2 + 1 / (a * b * c) \u2265 2 * a * b + 2 * b * c + 2 * c * a - 2:= by", "target": "\n  rintro a b c \u27e8ha, hb, hc\u27e9 h\n  field_simp [h]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_pos ha hb, mul_pos hb hc, mul_pos ha hc, sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_16643_plus  (x y z : \u211d)\n  (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z)\n  (h\u2081 : x + y + z = 3)\n  (h\u2082 : x * y + y * z + z * x = 3) :\n  x * y * z = 1 \u2227 x = y \u2227 y = z \u2227 z = x:= by", "target": "\n  have h\u2083 : 0 < x * y := mul_pos h\u2080.1 h\u2080.2.1\n  have h\u2084 : 0 < y * z := mul_pos h\u2080.2.1 h\u2080.2.2\n  have h\u2085 : 0 < z * x := mul_pos h\u2080.2.2 h\u2080.1\n  have h\u2086 : x = y := by\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  have h\u2087 : y = z := by\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  have h\u2088 : z = x := by\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  exact \u27e8by nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)], h\u2086, h\u2087, h\u2088\u27e9\n  <;> assumption\n  <;> try norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_28500  (A : Fin 5 \u2192 \u211d) (h\u2080 : \u2200 i, 0 \u2264 A i) (h\u2081 : \u2211 i, A i = 1) : \u2211 i, (A i * (A i - 1)) \u2264 1:= by", "target": "\n  have h\u2082 : \u2211 i, (A i * (A i - 1)) \u2264 \u2211 i, A i := by\n    apply Finset.sum_le_sum\n    intro x hx\n    have h\u2083 : 0 \u2264 A x := h\u2080 x\n    have h\u2084 : A x \u2264 1 := by\n      calc\n        A x \u2264 \u2211 i, A i := by exact Finset.single_le_sum (fun i _ => h\u2080 i) hx\n        _ = 1 := h\u2081\n    nlinarith\n  rw [h\u2081] at h\u2082\n  linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_31634_plus : \u2200 a b c : \u211d, a + b + c = 2 \u2227 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2192 (a * b) ^ 2 * (b * c) ^ 2 * (a * c) ^ 2 \u2264 1  := by", "target": "\n  rintro a b c \u27e8h\u2081, h\u2082, h\u2083, h\u2084\u27e9\n  have h\u2085 : 0 \u2264 a * b := by positivity\n  have h\u2086 : 0 \u2264 b * c := by positivity\n  have h\u2087 : 0 \u2264 a * c := by positivity\n  have h\u2088 : a * b \u2264 1 := by\n    nlinarith [sq_nonneg (a - b), h\u2081]\n  have h\u2089 : b * c \u2264 1 := by\n    nlinarith [sq_nonneg (b - c), h\u2081]\n  have h\u2081\u2080 : a * c \u2264 1 := by\n    nlinarith [sq_nonneg (a - c), h\u2081]\n  calc\n    (a * b) ^ 2 * (b * c) ^ 2 * (a * c) ^ 2 \u2264 1 ^ 2 * 1 ^ 2 * 1 ^ 2 := by gcongr <;> nlinarith\n    _ = 1 := by norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_36034_plus : \u2200 a b c d : \u211d, a^2 + b^2 + c^2 + d^2 = 1 \u2192 \u2203 x : \u211d, x \u2208 Set.Icc 0 1 \u2227 a + b + c + d \u2264 2 * x:= by", "target": "\n  intro a b c d habc\n  use 1\n  constructor\n  exact \u27e8by nlinarith, by nlinarith\u27e9\n  nlinarith [sq_nonneg (a + b + c + d), sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (a - d), sq_nonneg (b - c), sq_nonneg (b - d), sq_nonneg (c - d)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_2613_plus (x : \u2115 \u2192 \u211d) (hx : \u2200 n, 0 < x n) (h : \u2203 n, \u2200 m > n, x m = 0) : \u2203 n, \u2200 m \u2265 n, x m = 0:= by", "target": "\n  cases' h with n h\n  use n + 1\n  intro m hm\n  apply h\n  linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1041 (a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (hab : a + b + c = 3) : (2 - Real.sqrt a) / Real.sqrt (c + 3 * a) + (2 - Real.sqrt b) / Real.sqrt (a + 3 * b) + (2 - Real.sqrt c) / Real.sqrt (b + 3 * c) \u2265 3 / 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1041_plus : \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 3 \u2192 (2 - Real.sqrt a) / Real.sqrt (c + 3 * a) + (2 - Real.sqrt b) / Real.sqrt (a + 3 * b) + (2 - Real.sqrt c) / Real.sqrt (b + 3 * c) \u2265 3 / 2 \u2228 (\u2203 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 3 \u2227 (2 - Real.sqrt a) / Real.sqrt (c + 3 * a) + (2 - Real.sqrt b) / Real.sqrt (a + 3 * b) + (2 - Real.sqrt c) / Real.sqrt (b + 3 * c) < 3 / 2) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_70819_plus : \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192 x * y > 0 \u2227 y * z > 0 \u2227 z * x > 0 \u2227 (x + y) * (y + z) * (z + x) > 0 \u2227 (x * y + y * z + z * x) > 0 \u2192 Real.sqrt (x * y / (x * y + y * z + z * x)) * Real.sqrt (y * z / (x * y + y * z + z * x)) * Real.sqrt (z * x / (x * y + y * z + z * x)) \u2264 1:= by", "target": "\n  intro x y z h\u2080 h\u2081\n  obtain \u27e8hx, hy, hz\u27e9 := h\u2080\n  obtain \u27e8hxy, hyz, hzx, hxyz, hxyzzx\u27e9 := h\u2081\n  have h : (Real.sqrt (x * y / (x * y + y * z + z * x)) * Real.sqrt (y * z / (x * y + y * z + z * x)) * Real.sqrt (z * x / (x * y + y * z + z * x))) \u2264 1 := by\n    have h\u2082 : Real.sqrt (x * y / (x * y + y * z + z * x)) \u2264 1 := by\n      rw [Real.sqrt_le_iff]\n      constructor\n      \u00b7 positivity\n      \u00b7 rw [div_le_iff] <;> nlinarith\n    have h\u2083 : Real.sqrt (y * z / (x * y + y * z + z * x)) \u2264 1 := by\n      rw [Real.sqrt_le_iff]\n      constructor\n      \u00b7 positivity\n      \u00b7 rw [div_le_iff] <;> nlinarith\n    have h\u2084 : Real.sqrt (z * x / (x * y + y * z + z * x)) \u2264 1 := by\n      rw [Real.sqrt_le_iff]\n      constructor\n      \u00b7 positivity\n      \u00b7 rw [div_le_iff] <;> nlinarith\n    calc\n      Real.sqrt (x * y / (x * y + y * z + z * x)) * Real.sqrt (y * z / (x * y + y * z + z * x)) * Real.sqrt (z * x / (x * y + y * z + z * x)) \u2264 1 * 1 * 1 := by\n        gcongr <;> assumption\n      _ = 1 := by norm_num\n  exact h"}]