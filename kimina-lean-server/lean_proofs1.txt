===== Proof 1 =====

import Mathlib.Tactic

theorem mathlib_200000_test (x y : ℤ) : y^2 - 3 * x ≠ 11 := by
  intro h
  -- Show that y² ≡ 2 mod 3
  have h_mod : y^2 % 3 = 2 := by
    rw [← h, sub_eq_add_neg, add_comm, add_assoc, neg_mul, add_zero]
    rw [Int.add_emod]
    simp only [Int.mul_emod, Int.emod_emod, zero_add]
    norm_num
  
  -- Show squares mod 3 can only be 0 or 1
  have square_mod3 : y^2 % 3 = 0 ∨ y^2 % 3 = 1 := by
    have h_range : -3 < y % 3 ∧ y % 3 < 3 := by
      exact Int.emod_lt_of_pos y (by decide : (0 : ℤ) < 3)
    interval_cases (y % 3)
    · left  -- case 0
      simp [sq]
    · right  -- case 1
      rfl
    · right  -- case 2
      simp [sq, show (2 * 2) % 3 = 1 by rfl]
    · right  -- case -1
      simp [sq, show ((-1) * (-1)) % 3 = 1 by rfl]
    · right  -- case -2
      simp [sq, show ((-2) * (-2)) % 3 = 1 by rfl]
  
  -- Obtain contradiction
  cases square_mod3 with
  | inl h0 => rw [h0] at h_mod; norm_num at h_mod
  | inr h1 => rw [h1] at h_mod; norm_num at h_mod  

