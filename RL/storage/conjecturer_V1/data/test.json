[
 {
  "old": "(x : \u211d) : (Real.log (e^(e^(Real.log 100))) / (Real.log (e^(9/2)) + Real.log (e^(11/2)))) = 10 := by",
  "new": "(x : \u211d) : log (exp x) = x := by",
  "step": 1,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_exp_eq_exp_log (x : \u211d) : log (exp x) = x := by\n  simp [log_exp]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_exp_eq_exp_log (x : \u211d) : log (exp x) = x := by\n  apply Eq.symm\n  apply Eq.symm\n  rw [\u2190 exp_log (exp_pos x)]\n  simp [exp_log (exp_pos x)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_exp_eq_exp_log (x : \u211d) : log (exp x) = x := by\n  by_cases h : x = 0\n  all_goals simp_all [Real.log_exp]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_exp_eq_exp_log (x : \u211d) : log (exp x) = x := by\n  rw [Real.log_exp]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_exp_eq_exp_log (x : \u211d) : log (exp x) = x := by\n  simp",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_exp_eq_exp_log (x : \u211d) : log (exp x) = x := by\n  rw [\u2190 exp_log (exp_pos x)]\n  simp [exp_log (exp_pos x)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_exp_eq_exp_log (x : \u211d) : log (exp x) = x := by\n  apply log_exp"
  ]
 },
 {
  "old": "(a b c : \u211d) : sin (2 * b - 2 * c) * cos a + sin (b - c) * cos (a - b - c) = sin (2 * b - 2 * c) * cos a + sin (b - c) * cos (a - b - c) := by",
  "new": ": sin x - sin y = 2 * sin ((x - y) / 2) * cos ((x + y) / 2) := by",
  "step": 1,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_sub_sin : sin x - sin y = 2 * sin ((x - y) / 2) * cos ((x + y) / 2) := by\n  have h\u2081 : x = (x - y) / 2 + (x + y) / 2 := by ring\n  have h\u2082 : y = (x + y) / 2 - (x - y) / 2 := by ring\n  rw [h\u2081, h\u2082]\n  simp [sin_add, sin_sub, cos_add, cos_sub]\n  ring",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_sub_sin : sin x - sin y = 2 * sin ((x - y) / 2) * cos ((x + y) / 2) := by\n  have h\u2081 : x = (x + y) / 2 + (x - y) / 2 := by ring\n  have h\u2082 : y = (x + y) / 2 - (x - y) / 2 := by ring\n  rw [h\u2081, h\u2082]\n  simp [sin_add, sin_sub, cos_add, cos_sub]\n  ring",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_sub_sin : sin x - sin y = 2 * sin ((x - y) / 2) * cos ((x + y) / 2) := by\n  have h\u2080 : x = (x - y) / 2 + (x + y) / 2 := by ring\n  have h\u2081 : y = (x + y) / 2 - (x - y) / 2 := by ring\n  rw [h\u2080, h\u2081]\n  simp [sin_add, sin_sub, cos_add, cos_sub]\n  ring",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_sub_sin : sin x - sin y = 2 * sin ((x - y) / 2) * cos ((x + y) / 2) := by\n  have h1 : x = (x - y) / 2 + (x + y) / 2 := by ring\n  have h2 : y = (x + y) / 2 - (x - y) / 2 := by ring\n  rw [h1, h2]\n  simp [sin_add, sin_sub, cos_add, cos_sub]\n  ring",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_sub_sin : sin x - sin y = 2 * sin ((x - y) / 2) * cos ((x + y) / 2) := by\n  have h\u2081 : x = (x - y) / 2 + (x + y) / 2 := by ring\n  have h\u2082 : y = (x + y) / 2 - (x - y) / 2 := by ring\n  rw [h\u2081, h\u2082] at *\n  simp [sin_add, sin_sub, cos_add, cos_sub]\n  ring"
  ]
 },
 {
  "old": ": \u2200 x : \u211d, sin 3*x - sin x = 2*cos 2*x * sin x := by",
  "new": ": sin (3 * x) = 3 * sin x - 4 * sin x ^ 3 := by",
  "step": 1,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_three_mul : sin (3 * x) = 3 * sin x - 4 * sin x ^ 3 := by\n  rw [\u2190 mul_right_inj' (two_ne_zero' \u211d)]\n  rw [\u2190 Complex.ofReal_inj]\n  simp [Complex.sin_three_mul, Complex.sin_ofReal_re, Complex.mul_re, Complex.sub_re, Complex.ofReal_re]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_three_mul : sin (3 * x) = 3 * sin x - 4 * sin x ^ 3 := by\n  rw [\u2190 Complex.ofReal_inj]\n  simp [Complex.sin_three_mul, Complex.sin_ofReal_re, Complex.mul_re, Complex.sub_re]"
  ]
 },
 {
  "old": "(m n : \u2115) (k : \u2115) : m = fib k \u2227 n = fib (k + 1) \u2194 m = 2 \u2227 n = 1 \u2228 m = 1 \u2227 n = 1 := by",
  "new": "(n : \u2115) : fib (2 * n + 1) = fib n ^ 2 + fib (n + 1) ^ 2 := by",
  "step": 1,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem fib_two_mul_add_one (n : \u2115) : fib (2 * n + 1) = fib n ^ 2 + fib (n + 1) ^ 2 := by\n  rw [two_mul, fib_add]\n  ring"
  ]
 },
 {
  "old": ": \u00ac\u2203 S : Set \u2115, \u2200 n : \u2115, n \u2208 S \u2228 (\u2200 m : \u2115, m \u2208 S \u2192 Nat.Coprime n m) := by",
  "new": "{m n : \u2115} (h : m \u2264 n) : Coprime n (n - m) \u2194 Coprime n m := by",
  "step": 1,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_self_sub_right {m n : \u2115} (h : m \u2264 n) : Coprime n (n - m) \u2194 Coprime n m := by\n  cases' le_or_lt m n with h h <;> simp_all [Coprime, Nat.gcd_eq_right]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_self_sub_right {m n : \u2115} (h : m \u2264 n) : Coprime n (n - m) \u2194 Coprime n m := by\n  rw [Coprime, Coprime, gcd_self_sub_right h]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_self_sub_right {m n : \u2115} (h : m \u2264 n) : Coprime n (n - m) \u2194 Coprime n m := by\n  cases' le_or_lt m n with h' h' <;> simp_all [Coprime]\n  <;> omega"
  ]
 },
 {
  "old": ": \u2200 x : \u211d, sin 3*x - sin x = 2*cos 2*x * sin x := by",
  "new": ": sin (3 * x) = 3 * sin x - 4 * sin x ^ 3 := by",
  "step": 2,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_three_mul : sin (3 * x) = 3 * sin x - 4 * sin x ^ 3 := by\n  have h\u2081 : x + 2 * x = 3 * x := by ring\n  rw [\u2190 h\u2081, sin_add x (2 * x)]\n  simp only [cos_two_mul, sin_two_mul, cos_sq']\n  have h\u2082 : cos x * (2 * sin x * cos x) = 2 * sin x * cos x ^ 2 := by ring\n  rw [h\u2082, cos_sq']\n  ring",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_three_mul : sin (3 * x) = 3 * sin x - 4 * sin x ^ 3 := by\n  have h\u2081 : x + 2 * x = 3 * x := by ring\n  rw [\u2190 h\u2081, sin_add x (2 * x)]\n  simp only [sin_two_mul, cos_two_mul]\n  have h\u2082 : cos x * (2 * sin x * cos x) = 2 * sin x * cos x ^ 2 := by ring\n  rw [h\u2082, cos_sq']\n  ring",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_three_mul : sin (3 * x) = 3 * sin x - 4 * sin x ^ 3 := by\n  have h\u2081 : x + 2 * x = 3 * x := by ring\n  rw [\u2190 h\u2081, sin_add x (2 * x)]\n  simp only [cos_two_mul, sin_two_mul, cos_sq']\n  have h\u2082 : cos x * (2 * sin x * cos x) = 2 * sin x * cos x ^ 2 := by ring\n  rw [h\u2082, cos_sq']\n  ring_nf"
  ]
 },
 {
  "old": "(m n : \u2115) (k : \u2115) : m = fib k \u2227 n = fib (k + 1) \u2194 m = 2 \u2227 n = 1 \u2228 m = 1 \u2227 n = 1 := by",
  "new": "(n : \u2115) : fib (2 * n + 1) = fib n ^ 2 + fib (n + 1) ^ 2 := by",
  "step": 2,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem fib_two_mul_add_one (n : \u2115) : fib (2 * n + 1) = fib n ^ 2 + fib (n + 1) ^ 2 := by\n  induction n with\n  | zero => simp\n  | succ n ih =>\n    simp_all [fib_add, fib_one, Nat.succ_mul]\n    ring",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem fib_two_mul_add_one (n : \u2115) : fib (2 * n + 1) = fib n ^ 2 + fib (n + 1) ^ 2 := by\n  rw [two_mul, fib_add, \u2190 sq]\n  ring_nf",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem fib_two_mul_add_one (n : \u2115) : fib (2 * n + 1) = fib n ^ 2 + fib (n + 1) ^ 2 := by\n  rw [two_mul, fib_add]\n  ring",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem fib_two_mul_add_one (n : \u2115) : fib (2 * n + 1) = fib n ^ 2 + fib (n + 1) ^ 2 := by\n  rw [two_mul, fib_add]\n  ring_nf"
  ]
 },
 {
  "old": ": \u00ac\u2203 S : Set \u2115, \u2200 n : \u2115, n \u2208 S \u2228 (\u2200 m : \u2115, m \u2208 S \u2192 Nat.Coprime n m) := by",
  "new": "{m n : \u2115} (h : m \u2264 n) : Coprime n (n - m) \u2194 Coprime n m := by",
  "step": 2,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_self_sub_right {m n : \u2115} (h : m \u2264 n) : Coprime n (n - m) \u2194 Coprime n m := by\n  rw [Coprime, Coprime, gcd_self_sub_right h]"
  ]
 },
 {
  "old": "(a b : \u211d) (hab : 0 < a \u2227 0 < b) (h : a < b) : Real.log (1 + a / b) * Real.log (1 + b / a) < Real.log 2 ^ 2 := by",
  "new": "{a : \u211d} (h : 0 < a) (h' : a < 1) : Real.log (1 + a\u207b\u00b9) < 1 + a\u207b\u00b9 := by",
  "step": 2,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_one_add_inv_lt_one_add_inv {a : \u211d} (h : 0 < a) (h' : a < 1) :\n     Real.log (1 + a\u207b\u00b9) < 1 + a\u207b\u00b9 := by\n  have : 0 < 1 + a\u207b\u00b9 := by positivity\n  have : 0 < a := by positivity\n  have : 0 < 1 + a := by positivity\n  have : 0 < a\u207b\u00b9 := by positivity\n  linarith [Real.log_lt_sub_one_of_pos (by positivity : 0 < 1 + a\u207b\u00b9) (by linarith)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : a^2 / (b^3 + a * b * c + c^3) + b^2 / (c^3 + a * b * c + a^3) + c^2 / (a^3 + a * b * c + b^3) \u2265 1 := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : a + b + c \u2265 3 := by",
  "step": 2,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : a + b + c \u2265 3 := by\n  have h\u2081 : a + b + c \u2265 3 * (1 : \u211d) := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n      mul_self_nonneg (a + b + c)]\n  linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 4 / 9) : a ^ 4 / (a * b * (a + b)) + b ^ 4 / (b * c * (b + c)) + c ^ 4 / (c * a * (c + a)) \u2265 3 / (a + b + c) ^ 2 := by",
  "new": "(a b c d : \u211d) : a ^ 4 + b ^ 4 + c ^ 4 + d ^ 4 \u2265 4 * a * b * c * d := by",
  "step": 2,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality_four (a b c d : \u211d) : a ^ 4 + b ^ 4 + c ^ 4 + d ^ 4 \u2265 4 * a * b * c * d := by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (a - d),\n    sq_nonneg (b - c), sq_nonneg (b - d), sq_nonneg (c - d),\n    mul_self_nonneg (a + b), mul_self_nonneg (a + c), mul_self_nonneg (a + d),\n    mul_self_nonneg (b + c), mul_self_nonneg (b + d), mul_self_nonneg (c + d)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality_four (a b c d : \u211d) : a ^ 4 + b ^ 4 + c ^ 4 + d ^ 4 \u2265 4 * a * b * c * d := by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (c - d), sq_nonneg (a + b), sq_nonneg (c + d),\n    mul_self_nonneg (a - c), mul_self_nonneg (a - d), mul_self_nonneg (b - c),\n    mul_self_nonneg (b - d), mul_self_nonneg (a + c), mul_self_nonneg (a + d),\n    mul_self_nonneg (b + c), mul_self_nonneg (b + d)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0)(hab : a + b^2 + c^2 = 4) : a^2 + b^2 + c^2 \u2265 15 / 4 := by",
  "new": "(a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b + c = 3) : a * b * c \u2264 1 := by",
  "step": 3,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b + c = 3) : a * b * c \u2264 1 := by\n  have h : (a + b + c) ^ 3 \u2265 27 * (a * b * c) := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  rw [hab] at h\n  linarith"
  ]
 },
 {
  "old": "(a b : \u2124) (ha : 0 < a) (hb : 0 < b) : |a * Real.sqrt 2 - b| > 1 / (2 * (a + b)) := by",
  "new": "{a : \u211d} (ha : 0 \u2264 a) : \u221aa * \u221aa = a := by",
  "step": 3,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mul_self_sqrt {a : \u211d} (ha : 0 \u2264 a) : \u221aa * \u221aa = a := by\n  rw [Real.mul_self_sqrt ha]"
  ]
 },
 {
  "old": "(a b c : \u211d) : sin (2 * b - 2 * c) * cos a + sin (b - c) * cos (a - b - c) = sin (2 * b - 2 * c) * cos a + sin (b - c) * cos (a - b - c) := by",
  "new": ": sin x - sin y = 2 * sin ((x - y) / 2) * cos ((x + y) / 2) := by",
  "step": 3,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_sub_sin : sin x - sin y = 2 * sin ((x - y) / 2) * cos ((x + y) / 2) := by\n  have h\u2081 : x = (x - y) / 2 + (x + y) / 2 := by ring\n  have h\u2082 : y = (x + y) / 2 - (x - y) / 2 := by ring\n  rw [h\u2081, h\u2082]\n  simp [sin_add, sin_sub, cos_add, cos_sub]\n  ring",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_sub_sin : sin x - sin y = 2 * sin ((x - y) / 2) * cos ((x + y) / 2) := by\n  rw [\u2190 sub_eq_zero]\n  have := sin_sub ((x + y) / 2) ((x - y) / 2)\n  have := sin_add ((x + y) / 2) ((x - y) / 2)\n  ring_nf at *\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_sub_sin : sin x - sin y = 2 * sin ((x - y) / 2) * cos ((x + y) / 2) := by\n  have h\u2080 : x = (x - y) / 2 + (x + y) / 2 := by ring\n  have h\u2081 : y = (x + y) / 2 - (x - y) / 2 := by ring\n  rw [h\u2080, h\u2081]\n  simp [sin_add, sin_sub, cos_add, cos_sub]\n  ring",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_sub_sin : sin x - sin y = 2 * sin ((x - y) / 2) * cos ((x + y) / 2) := by\n  have h1 : x = (x - y) / 2 + (x + y) / 2 := by ring\n  have h2 : y = (x + y) / 2 - (x - y) / 2 := by ring\n  rw [h1, h2]\n  simp [sin_add, sin_sub, cos_add, cos_sub]\n  ring",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_sub_sin : sin x - sin y = 2 * sin ((x - y) / 2) * cos ((x + y) / 2) := by\n  have h1 : x = (x - y) / 2 + (x + y) / 2 := by ring\n  have h2 : y = (x + y) / 2 - (x - y) / 2 := by ring\n  rw [h1, h2]\n  simp [sin_add, sin_sub, cos_sub, cos_add, mul_add, mul_sub]\n  ring"
  ]
 },
 {
  "old": ": \u2200 x : \u211d, sin 3*x - sin x = 2*cos 2*x * sin x := by",
  "new": ": sin (3 * x) = 3 * sin x - 4 * sin x ^ 3 := by",
  "step": 3,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_three_mul : sin (3 * x) = 3 * sin x - 4 * sin x ^ 3 := by\n  have h\u2081 : x + 2 * x = 3 * x := by ring\n  rw [\u2190 h\u2081, sin_add x (2 * x)]\n  simp only [cos_two_mul, sin_two_mul, cos_sq']\n  have h\u2082 : cos x * (2 * sin x * cos x) = 2 * sin x * cos x ^ 2 := by ring\n  rw [h\u2082, cos_sq']\n  ring",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_three_mul : sin (3 * x) = 3 * sin x - 4 * sin x ^ 3 := by\n  have h : x + 2 * x = 3 * x := by ring\n  rw [\u2190 h, sin_add x (2 * x)]\n  simp only [cos_two_mul, sin_two_mul, cos_sq']\n  have h\u2082 : cos x * (2 * sin x * cos x) = 2 * sin x * cos x ^ 2 := by ring\n  rw [h\u2082, cos_sq']\n  ring",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_three_mul : sin (3 * x) = 3 * sin x - 4 * sin x ^ 3 := by\n  have h\u2080 : x + 2 * x = 3 * x := by ring\n  rw [\u2190 h\u2080, sin_add x (2 * x)]\n  simp only [cos_two_mul, sin_two_mul, cos_sq']\n  have h\u2081 : cos x * (2 * sin x * cos x) = 2 * sin x * cos x ^ 2 := by ring\n  rw [h\u2081, cos_sq']\n  ring"
  ]
 },
 {
  "old": "(m n : \u2115) (k : \u2115) : m = fib k \u2227 n = fib (k + 1) \u2194 m = 2 \u2227 n = 1 \u2228 m = 1 \u2227 n = 1 := by",
  "new": "(n : \u2115) : fib (2 * n + 1) = fib (n + 1) ^ 2 + fib n ^ 2 := by",
  "step": 3,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem fib_two_mul_add_one (n : \u2115) : fib (2 * n + 1) = fib (n + 1) ^ 2 + fib n ^ 2 := by\n  rw [two_mul, fib_add]\n  ring"
  ]
 },
 {
  "old": ": \u00ac\u2203 S : Set \u2115, \u2200 n : \u2115, n \u2208 S \u2228 (\u2200 m : \u2115, m \u2208 S \u2192 Nat.Coprime n m) := by",
  "new": "{m n : \u2115} : Coprime (m + n) n \u2194 Coprime m n := by",
  "step": 3,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_add_self_left {m n : \u2115} : Coprime (m + n) n \u2194 Coprime m n := by\n  rw [add_comm]\n  simp [Coprime, add_comm, add_left_comm, add_assoc]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_add_self_left {m n : \u2115} : Coprime (m + n) n \u2194 Coprime m n := by\n  simp [Coprime, Nat.gcd_add_self_left]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_add_self_left {m n : \u2115} : Coprime (m + n) n \u2194 Coprime m n := by\n  simp [Nat.coprime_iff_gcd_eq_one, Nat.gcd_add_self_left]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_add_self_left {m n : \u2115} : Coprime (m + n) n \u2194 Coprime m n := by\n  simp [Nat.Coprime, Nat.gcd_add_self_left]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_add_self_left {m n : \u2115} : Coprime (m + n) n \u2194 Coprime m n := by\n  simp [Coprime, Nat.add_comm, Nat.add_left_comm]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_add_self_left {m n : \u2115} : Coprime (m + n) n \u2194 Coprime m n := by\n  simp [Coprime, add_comm, Nat.gcd_add_self_left]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_add_self_left {m n : \u2115} : Coprime (m + n) n \u2194 Coprime m n := by\n  rw [add_comm]\n  simp [Coprime, add_comm]"
  ]
 },
 {
  "old": "(a b : \u211d) (hab : 0 < a \u2227 0 < b) (h : a < b) : Real.log (1 + a / b) * Real.log (1 + b / a) < Real.log 2 ^ 2 := by",
  "new": "{a : \u211d} (h : 0 < a) : log (1 + a\u207b\u00b9) \u2264 a\u207b\u00b9 := by",
  "step": 3,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_one_add_inv_le {a : \u211d} (h : 0 < a) : log (1 + a\u207b\u00b9) \u2264 a\u207b\u00b9 := by\n  have : 0 < 1 + a\u207b\u00b9 := by positivity\n  linarith [log_le_sub_one_of_pos this]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_one_add_inv_le {a : \u211d} (h : 0 < a) : log (1 + a\u207b\u00b9) \u2264 a\u207b\u00b9 := by\n  have h\u2081 : 0 < 1 + a\u207b\u00b9 := by positivity\n  have h\u2082 : 0 < a := by assumption\n  have h\u2083 : 0 < a\u207b\u00b9 := by positivity\n  have h\u2084 : a\u207b\u00b9 \u2264 exp (a\u207b\u00b9) - 1 := by linarith [add_one_le_exp (a\u207b\u00b9)]\n  have h\u2085 : log (1 + a\u207b\u00b9) \u2264 a\u207b\u00b9 := by linarith [log_le_sub_one_of_pos h\u2081]\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_one_add_inv_le {a : \u211d} (h : 0 < a) : log (1 + a\u207b\u00b9) \u2264 a\u207b\u00b9 := by\n  apply le_of_sub_nonneg\n  have : 0 < a := h\n  have : 0 < 1 + a\u207b\u00b9 := by positivity\n  linarith [log_le_sub_one_of_pos this]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_one_add_inv_le {a : \u211d} (h : 0 < a) : log (1 + a\u207b\u00b9) \u2264 a\u207b\u00b9 := by\n  apply (log_le_sub_one_of_pos (by positivity)).trans\n  rw [add_comm]\n  simpa",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_one_add_inv_le {a : \u211d} (h : 0 < a) : log (1 + a\u207b\u00b9) \u2264 a\u207b\u00b9 := by\n  have : 0 < a + 1 := by linarith\n  have h\u2081 : 0 < a\u207b\u00b9 := by positivity\n  have h\u2082 : 0 < 1 + a\u207b\u00b9 := by linarith\n  have : log (1 + a\u207b\u00b9) \u2264 1 + a\u207b\u00b9 - 1 := log_le_sub_one_of_pos h\u2082\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_one_add_inv_le {a : \u211d} (h : 0 < a) : log (1 + a\u207b\u00b9) \u2264 a\u207b\u00b9 := by\n  have := Real.log_le_sub_one_of_pos (by positivity : 0 < 1 + a\u207b\u00b9)\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_one_add_inv_le {a : \u211d} (h : 0 < a) : log (1 + a\u207b\u00b9) \u2264 a\u207b\u00b9 := by\n  have h\u2081 : 0 < a\u207b\u00b9 := by simpa using h\n  have h\u2082 : 0 < 1 + a\u207b\u00b9 := by positivity\n  have h\u2083 : log (1 + a\u207b\u00b9) \u2264 1 + a\u207b\u00b9 - 1 := log_le_sub_one_of_pos h\u2082\n  simpa using h\u2083",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_one_add_inv_le {a : \u211d} (h : 0 < a) : log (1 + a\u207b\u00b9) \u2264 a\u207b\u00b9 := by\n  have h\u2081 : 0 < 1 + a\u207b\u00b9 := by positivity\n  have h\u2082 : 0 < a := by assumption\n  have h\u2083 : 0 < 1 + a := by positivity\n  have h\u2084 : 0 < a * (1 + a) := by positivity\n  have h\u2085 : 0 < a * (1 + a) := by positivity\n  rw [\u2190 mul_le_mul_left h]\n  nlinarith [log_le_sub_one_of_pos h\u2081]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 4 / 9) : a ^ 4 / (a * b * (a + b)) + b ^ 4 / (b * c * (b + c)) + c ^ 4 / (c * a * (c + a)) \u2265 3 / (a + b + c) ^ 2 := by",
  "new": "(a b c d : \u211d) : a ^ 4 + b ^ 4 + c ^ 4 + d ^ 4 \u2265 4 * a * b * c * d := by",
  "step": 3,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality_four (a b c d : \u211d) : a ^ 4 + b ^ 4 + c ^ 4 + d ^ 4 \u2265 4 * a * b * c * d := by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (a - d), sq_nonneg (b - c),\n    sq_nonneg (b - d), sq_nonneg (c - d), sq_nonneg (a + b), sq_nonneg (a + c), sq_nonneg (a + d),\n    sq_nonneg (b + c), sq_nonneg (b + d), sq_nonneg (c + d)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality_four (a b c d : \u211d) : a ^ 4 + b ^ 4 + c ^ 4 + d ^ 4 \u2265 4 * a * b * c * d := by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (a - d), sq_nonneg (b - c), sq_nonneg (b - d),\n    sq_nonneg (c - d), sq_nonneg (a + b), sq_nonneg (a + c), sq_nonneg (a + d), sq_nonneg (b + c),\n    sq_nonneg (b + d), sq_nonneg (c + d)]"
  ]
 },
 {
  "old": "(x y : \u211d) (hx : 0 < x) (hy : 0 < y) (h : x + 4 * y = x^2 * y^3) : 4 / x + 1 / y \u2265 (27:\u211d) ^ (1 / 4) := by",
  "new": "(x y : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) : x + y \u2265 2 * Real.sqrt (x * y) := by",
  "step": 3,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (x y : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) : x + y \u2265 2 * Real.sqrt (x * y) := by\n  nlinarith [sq_sqrt (mul_nonneg hx hy), mul_self_nonneg (x - y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (x y : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) : x + y \u2265 2 * Real.sqrt (x * y) := by\n  nlinarith [sq_sqrt (mul_nonneg hx hy), sq_nonneg (x - y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (x y : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) : x + y \u2265 2 * Real.sqrt (x * y) := by\n  have h : (Real.sqrt (x * y)) ^ 2 = x * y := Real.sq_sqrt (mul_nonneg hx hy)\n  rw [pow_two] at h\n  nlinarith [sq_nonneg (x - y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (x y : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) : x + y \u2265 2 * Real.sqrt (x * y) := by\n  have h : x + y \u2265 2 * Real.sqrt (x * y) := by\n    nlinarith [sq_sqrt (mul_nonneg hx hy), sq_nonneg (x - y)]\n  linarith"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) : (x^5 / (y^2 + y * z + z^2) + y^5 / (z^2 + z * x + x^2) + z^5 / (x^2 + x * y + y^2) \u2265 x^3 + y^3 + z^3 - 2 * x * y * z) := by",
  "new": "{x y z : \u211d} (h : x + y \u2264 z) (hz : 0 \u2264 z) : x / z + y / z \u2264 1 := by",
  "step": 4,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem add_div_le_one_of_add_le_mul {x y z : \u211d} (h : x + y \u2264 z) (hz : 0 \u2264 z) : x / z + y / z \u2264 1 := by\n  rw [div_add_div_same]\n  apply div_le_one_of_le\n  linarith\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem add_div_le_one_of_add_le_mul {x y z : \u211d} (h : x + y \u2264 z) (hz : 0 \u2264 z) : x / z + y / z \u2264 1 := by\n  rw [div_add_div_same]\n  exact div_le_one_of_le h hz",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem add_div_le_one_of_add_le_mul {x y z : \u211d} (h : x + y \u2264 z) (hz : 0 \u2264 z) : x / z + y / z \u2264 1 := by\n  rw [div_add_div_same]\n  apply div_le_one_of_le _ hz\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem add_div_le_one_of_add_le_mul {x y z : \u211d} (h : x + y \u2264 z) (hz : 0 \u2264 z) : x / z + y / z \u2264 1 := by\n  rw [div_add_div_same]\n  rw [\u2190 mul_one z] at h\n  rw [mul_comm] at h\n  apply div_le_one_of_le _ hz\n  linarith"
  ]
 },
 {
  "old": "(a b : \u211d) (ha : 0 < a) (hb : 0 < b) (hab : 1/a + 1/b + 1/(7*a*b) = 7) : a + 2*b \u2265 1 := by",
  "new": "(a b : \u211d) (ha : 0 < a) (hb : 0 < b) : a + b \u2265 2 * Real.sqrt (a * b) := by",
  "step": 4,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b : \u211d) (ha : 0 < a) (hb : 0 < b) : a + b \u2265 2 * Real.sqrt (a * b) := by\n  have h : 0 < Real.sqrt (a * b) := Real.sqrt_pos.mpr (mul_pos ha hb)\n  calc\n    a + b \u2265 2 * Real.sqrt (a * b) := by\n      nlinarith [sq_sqrt (mul_nonneg (le_of_lt ha) (le_of_lt hb)), sq_nonneg (a - b)]\n    _ = 2 * Real.sqrt (a * b) := by rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b : \u211d) (ha : 0 < a) (hb : 0 < b) : a + b \u2265 2 * Real.sqrt (a * b) := by\n  have h : (Real.sqrt (a * b)) ^ 2 = a * b := by rw [Real.sq_sqrt (mul_nonneg ha.le hb.le)]\n  nlinarith [sq_nonneg (a - b), ha, hb, h]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b : \u211d) (ha : 0 < a) (hb : 0 < b) : a + b \u2265 2 * Real.sqrt (a * b) := by\n  have h1 : (Real.sqrt a - Real.sqrt b) ^ 2 \u2265 0 := by\n    apply sq_nonneg\n  rw [sub_sq] at h1\n  field_simp [ha, hb] at h1 \u22a2\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b : \u211d) (ha : 0 < a) (hb : 0 < b) : a + b \u2265 2 * Real.sqrt (a * b) := by\n  nlinarith [sq_sqrt (mul_nonneg (le_of_lt ha) (le_of_lt hb)), sq_nonneg (a - b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b : \u211d) (ha : 0 < a) (hb : 0 < b) : a + b \u2265 2 * Real.sqrt (a * b) := by\n  have h1 : 0 \u2264 (Real.sqrt a - Real.sqrt b) ^ 2 := sq_nonneg (Real.sqrt a - Real.sqrt b)\n  rw [sub_sq] at h1\n  field_simp [ha, hb] at h1 \u22a2\n  nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (habc : a * b * c = 1) (h : a^2 + b^2 + c^2 = 3 / 2) : 1 / a + 1 / b - 1 / c < 1 / abc := by",
  "new": "(a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (habc : a * b * c = 1) : a^2 + b^2 + c^2 \u2265 3 := by",
  "step": 4,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (habc : a * b * c = 1) :\n    a^2 + b^2 + c^2 \u2265 3 := by\n  nlinarith [sq_nonneg (a - b), mul_self_nonneg (c - 1)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 3) : (a^2 / (a + 3) + b^2 / (b + 3) + c^2 / (c + 3) + (3 * (a^2 * b^2 * c^2)^(1 / 3)) / 4 \u2264 3 / 2) := by",
  "new": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 3) : a * b * c \u2264 1 := by",
  "step": 4,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 3) : a * b * c \u2264 1 := by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n    mul_self_nonneg (a - 1), mul_self_nonneg (b - 1), mul_self_nonneg (c - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 3) : a * b * c \u2264 1 := by\n  have h\u2080 : 0 \u2264 (a - 1) ^ 2 + (b - 1) ^ 2 + (c - 1) ^ 2 := by positivity\n  nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 3) : a * b * c \u2264 1 := by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a + b + c)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 3) : a * b * c \u2264 1 := by\n  nlinarith [sq_nonneg (a - b), mul_self_nonneg (a - c), mul_self_nonneg (b - c),\n    mul_self_nonneg (a + b + c)]"
  ]
 },
 {
  "old": ": \u2200 x y z : \u211d, x^3 * (x * y + x * z - y * z) * (y - z)^2 + y^3 * (x * y + y * z - z * x) * (z - x)^2 + z^3 * (z * x + y * z - x * y) * (x - y)^2 \u2265 0 := by",
  "new": ": \u2200 x y z : \u211d, (x - y) ^ 2 * (x - z) ^ 2 * (x + y) ^ 2 * (x + z) ^ 2 \u2265 0 := by",
  "step": 4,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem nlinarith_lemma_10 : \u2200 x y z : \u211d, (x - y) ^ 2 * (x - z) ^ 2 * (x + y) ^ 2 * (x + z) ^ 2 \u2265 0 := by\n  intro x y z\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem nlinarith_lemma_10 : \u2200 x y z : \u211d, (x - y) ^ 2 * (x - z) ^ 2 * (x + y) ^ 2 * (x + z) ^ 2 \u2265 0 := by\n  intro x y z\n  apply mul_nonneg\n  all_goals positivity"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hd : 0 \u2264 d) (hab : a + b + c + d = 4) : \u221a(3 * a / (b + 2)) + \u221a(3 * b / (c + 2)) + \u221a(3 * c / (d + 2)) + \u221a(3 * d / (a + 2)) \u2264 4 := by",
  "new": "(a b c d : \u211d) : a ^ 4 + b ^ 4 + c ^ 4 + d ^ 4 \u2265 4 * a * b * c * d := by",
  "step": 4,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_four (a b c d : \u211d) : a ^ 4 + b ^ 4 + c ^ 4 + d ^ 4 \u2265 4 * a * b * c * d := by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (a - d), sq_nonneg (b - c), sq_nonneg (b - d),\n    sq_nonneg (c - d), mul_self_nonneg (a + b), mul_self_nonneg (a + c), mul_self_nonneg (a + d),\n    mul_self_nonneg (b + c), mul_self_nonneg (b + d), mul_self_nonneg (c + d)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_four (a b c d : \u211d) : a ^ 4 + b ^ 4 + c ^ 4 + d ^ 4 \u2265 4 * a * b * c * d := by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (a - d),\n    sq_nonneg (b - c), sq_nonneg (b - d), sq_nonneg (c - d),\n    sq_nonneg (a + b), sq_nonneg (a + c), sq_nonneg (a + d),\n    sq_nonneg (b + c), sq_nonneg (b + d), sq_nonneg (c + d)]"
  ]
 },
 {
  "old": "(b c a : \u211d) : (b^2 + c^2) / (a^2 + b * c) \u2264 b^2 / (c^2 + a^2) + c^2 / (a^2 + b^2) := by",
  "new": "{a b c : \u211d} (h : a + b \u2264 c) (hc : 0 \u2264 c) : a / c + b / c \u2264 1 := by",
  "step": 4,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem add_div_le_one_of_add_le_mul {a b c : \u211d} (h : a + b \u2264 c) (hc : 0 \u2264 c) :\n    a / c + b / c \u2264 1 := by\n  rw [div_add_div_same]\n  apply div_le_one_of_le\n  \u00b7 linarith\n  \u00b7 linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem add_div_le_one_of_add_le_mul {a b c : \u211d} (h : a + b \u2264 c) (hc : 0 \u2264 c) :\n    a / c + b / c \u2264 1 := by\n  rw [div_add_div_same]\n  exact\n    div_le_one_of_le (by linarith) hc",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem add_div_le_one_of_add_le_mul {a b c : \u211d} (h : a + b \u2264 c) (hc : 0 \u2264 c) :\n    a / c + b / c \u2264 1 := by\n  rw [div_add_div_same]\n  apply div_le_one_of_le\n  linarith\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem add_div_le_one_of_add_le_mul {a b c : \u211d} (h : a + b \u2264 c) (hc : 0 \u2264 c) :\n    a / c + b / c \u2264 1 := by\n  rw [div_add_div_same]\n  apply div_le_one_of_le _ hc\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem add_div_le_one_of_add_le_mul {a b c : \u211d} (h : a + b \u2264 c) (hc : 0 \u2264 c) :\n    a / c + b / c \u2264 1 := by\n  rw [div_add_div_same]\n  exact div_le_one_of_le h (by linarith)"
  ]
 },
 {
  "old": "(a b : \u2124) (ha : 0 < a) (hb : 0 < b) : |a * Real.sqrt 2 - b| > 1 / (2 * (a + b)) := by",
  "new": "{a : \u211d} (ha : 0 \u2264 a) : \u221aa * \u221aa = a := by",
  "step": 4,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mul_self_sqrt {a : \u211d} (ha : 0 \u2264 a) : \u221aa * \u221aa = a := by\n  rw [Real.mul_self_sqrt ha]"
  ]
 },
 {
  "old": ": \u2200 x : \u211d, sin 3*x - sin x = 2*cos 2*x * sin x := by",
  "new": ": sin (3 * x) = 3 * sin x - 4 * sin x ^ 3 := by",
  "step": 4,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_three_mul : sin (3 * x) = 3 * sin x - 4 * sin x ^ 3 := by\n  have h\u2081 : x + 2 * x = 3 * x := by ring\n  rw [\u2190 h\u2081, sin_add x (2 * x)]\n  simp only [cos_two_mul, sin_two_mul, cos_sq']\n  have h\u2082 : cos x * (2 * sin x * cos x) = 2 * sin x * cos x ^ 2 := by ring\n  rw [h\u2082, cos_sq']\n  ring"
  ]
 },
 {
  "old": "(m n : \u2115) (k : \u2115) : m = fib k \u2227 n = fib (k + 1) \u2194 m = 2 \u2227 n = 1 \u2228 m = 1 \u2227 n = 1 := by",
  "new": "(n : \u2115) : fib (2 * n + 1) = fib n ^ 2 + fib (n + 1) ^ 2 := by",
  "step": 4,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem fib_two_mul_add_one (n : \u2115) : fib (2 * n + 1) = fib n ^ 2 + fib (n + 1) ^ 2 := by\n  induction n <;> simp_all [fib_add, fib_two_mul, Nat.succ_mul]\n  ring",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem fib_two_mul_add_one (n : \u2115) : fib (2 * n + 1) = fib n ^ 2 + fib (n + 1) ^ 2 := by\n  rw [two_mul, fib_add]\n  ring"
  ]
 },
 {
  "old": ": \u00ac\u2203 S : Set \u2115, \u2200 n : \u2115, n \u2208 S \u2228 (\u2200 m : \u2115, m \u2208 S \u2192 Nat.Coprime n m) := by",
  "new": "{m n : \u2115} (h : m \u2264 n) : Coprime n (n - m) \u2194 Coprime n m := by",
  "step": 4,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_self_sub_right {m n : \u2115} (h : m \u2264 n) : Coprime n (n - m) \u2194 Coprime n m := by\n  rw [Coprime, Coprime, gcd_self_sub_right h]"
  ]
 },
 {
  "old": "(a b : \u211d) (hab : 0 < a \u2227 0 < b) (h : a < b) : Real.log (1 + a / b) * Real.log (1 + b / a) < Real.log 2 ^ 2 := by",
  "new": "{a : \u211d} (h : 0 < a) : log (1 + a\u207b\u00b9) \u2264 a\u207b\u00b9 := by",
  "step": 4,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_one_add_inv_le {a : \u211d} (h : 0 < a) : log (1 + a\u207b\u00b9) \u2264 a\u207b\u00b9 := by\n  have : 0 < a\u207b\u00b9 := by simpa using h\n  have h\u2081 : 1 + a\u207b\u00b9 \u2264 exp (a\u207b\u00b9) := by\n    rw [add_comm]\n    exact add_one_le_exp (a\u207b\u00b9)\n  have h\u2082 : log (1 + a\u207b\u00b9) \u2264 a\u207b\u00b9 := by\n    apply (log_le_sub_one_of_pos <| add_pos_of_pos_of_nonneg zero_lt_one <| by positivity).trans\n    linarith\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_one_add_inv_le {a : \u211d} (h : 0 < a) : log (1 + a\u207b\u00b9) \u2264 a\u207b\u00b9 := by\n  have h\u2081 : 0 < a\u207b\u00b9 := by simpa using h\n  have h\u2082 : 1 + a\u207b\u00b9 > 0 := by positivity\n  have h\u2083 : log (1 + a\u207b\u00b9) \u2264 1 + a\u207b\u00b9 - 1 := log_le_sub_one_of_pos h\u2082\n  simp at h\u2083\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_one_add_inv_le {a : \u211d} (h : 0 < a) : log (1 + a\u207b\u00b9) \u2264 a\u207b\u00b9 := by\n  apply (log_le_sub_one_of_pos ?_).trans ?_\n  exacts [by positivity, by simp\n  ]"
  ]
 },
 {
  "old": "(m n : \u2115) (h1 : 111 \u2223 m) (h2 : 31 \u2223 n) (h3 : m + n = 2017) : n - m = 463 := by",
  "new": "(m n : \u2115) (h\u2080 : 0 < m \u2227 0 < n) (h\u2081 : m \u2260 n) (h\u2082 : m \u2223 n) (h\u2083 : n \u2223 m) : m = 1 \u2227 n = 1 := by",
  "step": 4,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mathd_numbertheory_246 (m n : \u2115) (h\u2080 : 0 < m \u2227 0 < n) (h\u2081 : m \u2260 n) (h\u2082 : m \u2223 n) (h\u2083 : n \u2223 m) :\n    m = 1 \u2227 n = 1 := by\n  have h\u2084 : m = n := by\n    apply Eq.symm\n    apply Eq.symm\n    apply Nat.dvd_antisymm h\u2082 h\u2083\n  contradiction"
  ]
 },
 {
  "old": "(x y : \u211d) (hx : x \u2260 0) (hy : y \u2260 0) : 2020 * x / y + y / (2020 * x) \u2265 2 * Real.sqrt ((2020 * x / y) * (y / (2020 * x))) := by",
  "new": "(x y : \u211d) (hx : x \u2265 0) (hy : y \u2265 0) : x + y \u2265 2 * Real.sqrt (x * y) := by",
  "step": 5,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (x y : \u211d) (hx : x \u2265 0) (hy : y \u2265 0) : x + y \u2265 2 * Real.sqrt (x * y) := by\n  have h : (Real.sqrt (x * y)) ^ 2 = x * y := by rw [Real.sq_sqrt (mul_nonneg hx hy)]\n  rw [pow_two] at h\n  nlinarith [sq_nonneg (x - y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (x y : \u211d) (hx : x \u2265 0) (hy : y \u2265 0) : x + y \u2265 2 * Real.sqrt (x * y) := by\n  nlinarith [sq_sqrt (mul_nonneg hx hy), sq_nonneg (x - y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (x y : \u211d) (hx : x \u2265 0) (hy : y \u2265 0) : x + y \u2265 2 * Real.sqrt (x * y) := by\n  have h : x + y \u2265 2 * Real.sqrt (x * y) := by\n    nlinarith [sq_sqrt (mul_nonneg hx hy), sq_nonneg (x - y)]\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (x y : \u211d) (hx : x \u2265 0) (hy : y \u2265 0) : x + y \u2265 2 * Real.sqrt (x * y) := by\n  have h : (x + y) ^ 2 \u2265 4 * (x * y) := by\n    nlinarith [sq_nonneg (x - y)]\n  nlinarith [sq_sqrt (mul_nonneg hx hy), h]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (x y : \u211d) (hx : x \u2265 0) (hy : y \u2265 0) : x + y \u2265 2 * Real.sqrt (x * y) := by\n  have h : x * y \u2265 0 := by positivity\n  calc\n    x + y \u2265 2 * Real.sqrt (x * y) := by\n      nlinarith [sq_sqrt (by positivity : 0 \u2264 x * y), sq_nonneg (x - y)]\n    _ = 2 * Real.sqrt (x * y) := by rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (x y : \u211d) (hx : x \u2265 0) (hy : y \u2265 0) : x + y \u2265 2 * Real.sqrt (x * y) := by\n  have h : (Real.sqrt (x * y)) ^ 2 = x * y := by\n    rw [Real.sq_sqrt (mul_nonneg hx hy)]\n  nlinarith [sq_nonneg (x - y), h]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (x y : \u211d) (hx : x \u2265 0) (hy : y \u2265 0) : x + y \u2265 2 * Real.sqrt (x * y) := by\n  have h1 : x * y \u2265 0 := mul_nonneg hx hy\n  have h2 : Real.sqrt (x * y) \u2265 0 := Real.sqrt_nonneg (x * y)\n  have h3 : (Real.sqrt (x * y)) ^ 2 = x * y := Real.sq_sqrt h1\n  nlinarith [sq_sqrt (mul_nonneg hx hy), sq_nonneg (x - y)]"
  ]
 },
 {
  "old": "(a b : \u211d) (ha : 0 < a) (hb : 0 < b) (hab : 1/a + 1/b + 1/(7*a*b) = 7) : a + 2*b \u2265 1 := by",
  "new": "(a b : \u211d) (ha : 0 < a) (hb : 0 < b) : a + b \u2265 2 * Real.sqrt (a * b) := by",
  "step": 5,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b : \u211d) (ha : 0 < a) (hb : 0 < b) : a + b \u2265 2 * Real.sqrt (a * b) := by\n  nlinarith [sq_sqrt (mul_nonneg (le_of_lt ha) (le_of_lt hb)), mul_self_nonneg (a - b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b : \u211d) (ha : 0 < a) (hb : 0 < b) : a + b \u2265 2 * Real.sqrt (a * b) := by\n  have h1 : 0 \u2264 (Real.sqrt a - Real.sqrt b) ^ 2 := sq_nonneg (Real.sqrt a - Real.sqrt b)\n  rw [sub_sq] at h1\n  field_simp [ha, hb] at h1 \u22a2\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b : \u211d) (ha : 0 < a) (hb : 0 < b) : a + b \u2265 2 * Real.sqrt (a * b) := by\n  have h : 0 < a * b := mul_pos ha hb\n  rw [mul_comm]\n  nlinarith [sq_sqrt (le_of_lt h), sq_nonneg (a - b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b : \u211d) (ha : 0 < a) (hb : 0 < b) : a + b \u2265 2 * Real.sqrt (a * b) := by\n  have h : 0 < a * b := mul_pos ha hb\n  nlinarith [sq_sqrt (le_of_lt h), mul_self_nonneg (a - b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b : \u211d) (ha : 0 < a) (hb : 0 < b) : a + b \u2265 2 * Real.sqrt (a * b) := by\n  have h : 0 \u2264 (Real.sqrt a - Real.sqrt b) ^ 2 := sq_nonneg (Real.sqrt a - Real.sqrt b)\n  rw [sub_sq] at h\n  field_simp [ha, hb] at h \u22a2\n  linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) (h : 1 / a + 1 / b + 1 / c + a * b * c / (a ^ 3 + b ^ 3 + c ^ 3) = 3) : a + b + c >= 27 / 8 := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : a + b + c >= 3 := by",
  "step": 5,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : a + b + c >= 3 := by\n  nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (a - c), mul_self_nonneg (b - c),\n    mul_self_nonneg (a + b + c)]"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : x \u2265 0) (hy : y \u2265 0) (hz : z \u2265 0) (h : x * y + x * z + y * z = 3) : (x^(3/4:\u211d) + y^(3/4:\u211d) + z^(3/4:\u211d)) \u2265 3 := by",
  "new": "(x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (hx1 : x + y + z = 1) : x * y * z \u2264 (x * y + y * z + z * x) / 3 := by",
  "step": 5,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem geom_mean_le_arith_mean3_weighted (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z)\n    (hx1 : x + y + z = 1) : x * y * z \u2264 (x * y + y * z + z * x) / 3 := by\n  have h\u2080 : x * y * z \u2264 (x * y + y * z + z * x) / 3 := by\n    nlinarith [mul_self_nonneg (x - y), mul_self_nonneg (y - z),\n      mul_self_nonneg (z - x), mul_self_nonneg (x + y + z)]\n  linarith"
  ]
 },
 {
  "old": "(n : \u2115) : (fib (n + 1) * fib (n + 2) * fib (n + 6)) - (fib (n + 3))^3 = (-1 : \u2124)^n * fib n := by",
  "new": "(n : \u2115) : fib (2 * n + 1) = fib n ^ 2 + fib (n + 1) ^ 2 := by",
  "step": 5,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem fib_two_mul_add_one (n : \u2115) : fib (2 * n + 1) = fib n ^ 2 + fib (n + 1) ^ 2 := by\n  rw [two_mul, fib_add]\n  ring_nf"
  ]
 },
 {
  "old": "(b c a : \u211d) : (b^2 + c^2) / (a^2 + b * c) \u2264 b^2 / (c^2 + a^2) + c^2 / (a^2 + b^2) := by",
  "new": "{a b c : \u211d} (h : a + b \u2264 c) (hc : 0 \u2264 c) : a / c + b / c \u2264 1 := by",
  "step": 5,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem add_div_le_one_of_add_le_mul {a b c : \u211d} (h : a + b \u2264 c) (hc : 0 \u2264 c) :\n    a / c + b / c \u2264 1 := by\n  rw [div_add_div_same]\n  refine' div_le_one_of_le _ hc\n  exact h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem add_div_le_one_of_add_le_mul {a b c : \u211d} (h : a + b \u2264 c) (hc : 0 \u2264 c) :\n    a / c + b / c \u2264 1 := by\n  rw [div_add_div_same]\n  apply div_le_one_of_le _ hc\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem add_div_le_one_of_add_le_mul {a b c : \u211d} (h : a + b \u2264 c) (hc : 0 \u2264 c) :\n    a / c + b / c \u2264 1 := by\n  rw [div_add_div_same]\n  apply div_le_one_of_le\n  linarith\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem add_div_le_one_of_add_le_mul {a b c : \u211d} (h : a + b \u2264 c) (hc : 0 \u2264 c) :\n    a / c + b / c \u2264 1 := by\n  rw [div_add_div_same]\n  refine' div_le_one_of_le _ hc\n  linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0)(hab : a + b^2 + c^2 = 4) : a^2 + b^2 + c^2 \u2265 15 / 4 := by",
  "new": "(a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b + c = 3) : a * b * c \u2264 1 := by",
  "step": 5,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b + c = 3) : a * b * c \u2264 1 := by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n    sq_nonneg (a + b), sq_nonneg (a + c), sq_nonneg (b + c)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b + c = 3) : a * b * c \u2264 1 := by\n  have h\u2081 : a * b * c \u2264 ((a + b + c) / 3) ^ 3 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  rw [hab] at h\u2081\n  norm_num at h\u2081\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b + c = 3) : a * b * c \u2264 1 := by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    add_nonneg (add_nonneg (sq_nonneg a) (sq_nonneg b)) (sq_nonneg c)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b + c = 3) : a * b * c \u2264 1 := by\n  have h : (a + b + c) ^ 2 = 9 := by rw [hab]; norm_num\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b + c = 3) : a * b * c \u2264 1 := by\n  nlinarith [pow_three (a / 3), pow_three (b / 3), pow_three (c / 3),\n    mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b + c = 3) : a * b * c \u2264 1 := by\n  have h\u2081 : (a + b + c) ^ 3 = 27 := by rw [hab]; norm_num\n  have h\u2082 : (a + b + c) ^ 2 = 9 := by rw [hab]; norm_num\n  have h\u2083 : a ^ 2 + b ^ 2 + c ^ 2 = 9 - 2 * (a * b + b * c + c * a) := by\n    linarith\n  have h\u2084 : a * b * c \u2264 1 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  exact h\u2084",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b + c = 3) : a * b * c \u2264 1 := by\n  nlinarith [sq_nonneg (a - b), mul_self_nonneg (a - c), mul_self_nonneg (b - c),\n    mul_self_nonneg (a + b + c)]"
  ]
 },
 {
  "old": "(a b : \u2124) (ha : 0 < a) (hb : 0 < b) : |a * Real.sqrt 2 - b| > 1 / (2 * (a + b)) := by",
  "new": "{a : \u211d} (ha : 0 \u2264 a) : \u221aa * \u221aa = a := by",
  "step": 5,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mul_self_sqrt {a : \u211d} (ha : 0 \u2264 a) : \u221aa * \u221aa = a := by\n  rw [Real.mul_self_sqrt ha]"
  ]
 },
 {
  "old": ": \u2200 x : \u211d, sin 3*x - sin x = 2*cos 2*x * sin x := by",
  "new": ": sin (3 * x) = 3 * sin x - 4 * sin x ^ 3 := by",
  "step": 5,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_three_mul : sin (3 * x) = 3 * sin x - 4 * sin x ^ 3 := by\n  have h\u2080 : x + 2 * x = 3 * x := by ring\n  rw [\u2190 h\u2080, sin_add x (2 * x)]\n  simp only [cos_two_mul, sin_two_mul, cos_sq']\n  have h\u2081 : cos x * (2 * sin x * cos x) = 2 * sin x * cos x ^ 2 := by ring\n  rw [h\u2081, cos_sq']\n  ring_nf",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_three_mul : sin (3 * x) = 3 * sin x - 4 * sin x ^ 3 := by\n  have h\u2081 : x + 2 * x = 3 * x := by ring\n  rw [\u2190 h\u2081, sin_add x (2 * x)]\n  simp only [cos_two_mul, sin_two_mul, cos_sq']\n  have h\u2082 : cos x * (2 * sin x * cos x) = 2 * sin x * cos x ^ 2 := by ring\n  rw [h\u2082, cos_sq']\n  ring_nf",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_three_mul : sin (3 * x) = 3 * sin x - 4 * sin x ^ 3 := by\n  rw [\u2190 Complex.ofReal_inj]\n  simp [Complex.sin_three_mul, Complex.sin_ofReal_re, Complex.mul_re, Complex.sub_re]"
  ]
 },
 {
  "old": ": \u00ac\u2203 S : Set \u2115, \u2200 n : \u2115, n \u2208 S \u2228 (\u2200 m : \u2115, m \u2208 S \u2192 Nat.Coprime n m) := by",
  "new": "{m : \u2115+} : Coprime 0 m \u2194 m = 1 := by",
  "step": 5,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_zero_left {m : \u2115+} : Coprime 0 m \u2194 m = 1 := by\n  constructor <;>\n  simp (config := { contextual := true }) [Coprime, Nat.gcd_zero_left]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_zero_left {m : \u2115+} : Coprime 0 m \u2194 m = 1 := by\n  rw [Coprime, Nat.gcd_zero_left]\n  simp",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_zero_left {m : \u2115+} : Coprime 0 m \u2194 m = 1 := by\n  rw [coprime_comm]\n  simp [coprime_zero_right]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_zero_left {m : \u2115+} : Coprime 0 m \u2194 m = 1 := by\n  rw [coprime_comm]\n  simp [coprime_comm, Nat.coprime_zero_left]"
  ]
 },
 {
  "old": "(a b c d : \u211d) : a^5 + b^5 + c^5 + d^5 + a * b * c * d * (a + b + c + d) \u2265 (a + b + c + d) * (a^2 * b^2 + a^2 * c^2 + a^2 * d^2 + b^2 * c^2 + b^2 * d^2 + c^2 * d^2) / 3 := by",
  "new": "(a b c d : \u211d) : a ^ 4 + b ^ 4 + c ^ 4 + d ^ 4 \u2265 4 * (a * b * c * d) := by",
  "step": 5,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_four (a b c d : \u211d) : a ^ 4 + b ^ 4 + c ^ 4 + d ^ 4 \u2265 4 * (a * b * c * d) := by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (a - d), sq_nonneg (b - c), sq_nonneg (b - d), sq_nonneg (c - d),\n    sq_nonneg (a + b), sq_nonneg (a + c), sq_nonneg (a + d), sq_nonneg (b + c), sq_nonneg (b + d), sq_nonneg (c + d)]"
  ]
 },
 {
  "old": "(a b : \u211d) (hab : 0 < a \u2227 0 < b) (h : a < b) : Real.log (1 + a / b) * Real.log (1 + b / a) < Real.log 2 ^ 2 := by",
  "new": "{a : \u211d} (h : 0 < a) : log (1 + a\u207b\u00b9) \u2264 a\u207b\u00b9 := by",
  "step": 5,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_one_add_inv_le {a : \u211d} (h : 0 < a) : log (1 + a\u207b\u00b9) \u2264 a\u207b\u00b9 := by\n  apply (log_le_sub_one_of_pos (by positivity)).trans\n  rw [add_comm]\n  rw [add_comm]\n  apply le_of_sub_nonneg\n  rw [le_sub_iff_add_le]\n  rw [add_comm]\n  apply le_of_sub_nonneg\n  rw [le_sub_iff_add_le]\n  rw [add_comm]\n  ring_nf\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_one_add_inv_le {a : \u211d} (h : 0 < a) : log (1 + a\u207b\u00b9) \u2264 a\u207b\u00b9 := by\n  have := Real.log_le_sub_one_of_pos (by positivity : 0 < 1 + a\u207b\u00b9)\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_one_add_inv_le {a : \u211d} (h : 0 < a) : log (1 + a\u207b\u00b9) \u2264 a\u207b\u00b9 := by\n  rw [\u2190 mul_le_mul_right h]\n  rw [mul_comm]\n  nlinarith [log_le_sub_one_of_pos (by positivity : 0 < 1 + a\u207b\u00b9)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_one_add_inv_le {a : \u211d} (h : 0 < a) : log (1 + a\u207b\u00b9) \u2264 a\u207b\u00b9 := by\n  have := log_le_sub_one_of_pos (show 0 < 1 + a\u207b\u00b9 by positivity)\n  linarith"
  ]
 },
 {
  "old": ": 4 * (4 * (Real.sqrt 2 - 1) / 3) ^ 3 \u2264 4 * (3 - 2 * Real.sqrt 2) := by",
  "new": "(h : 0 \u2264 \u221a2 - 1) : 4 * (4 * (\u221a2 - 1) / 3) ^ 3 \u2264 4 * (3 - 2 * \u221a2) := by",
  "step": 5,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sqrt_two_add_series_step_two (h : 0 \u2264 \u221a2 - 1) :\n    4 * (4 * (\u221a2 - 1) / 3) ^ 3 \u2264 4 * (3 - 2 * \u221a2) := by\n  nlinarith [sq_sqrt (show 0 \u2264 2 by norm_num)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sqrt_two_add_series_step_two (h : 0 \u2264 \u221a2 - 1) :\n    4 * (4 * (\u221a2 - 1) / 3) ^ 3 \u2264 4 * (3 - 2 * \u221a2) := by\n  ring_nf\n  nlinarith [sq_sqrt (show 0 \u2264 2 by norm_num)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sqrt_two_add_series_step_two (h : 0 \u2264 \u221a2 - 1) :\n    4 * (4 * (\u221a2 - 1) / 3) ^ 3 \u2264 4 * (3 - 2 * \u221a2) := by\n  nlinarith [sq_sqrt (show 0 \u2264 2 by linarith), h]"
  ]
 },
 {
  "old": "(f : \u2115 \u2192 \u2115): (\u2200 x y : \u2115, (f x + y) / (x + f y) + (f x * y) / (x * f y) = (2 * (x + y)) / f (x + y)) \u2194 \u2203 k :\u2115, \u2200 x : \u2115, f x = k * x := by",
  "new": "{f : \u2115 \u2192 \u2115} (hf : \u2200 {x y}, f (x + f y) = f x + f y) : f = f' \u2194 \u2200 n, f n = f' n := by",
  "step": 5,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem eq_nat_iff {f : \u2115 \u2192 \u2115} (hf : \u2200 {x y}, f (x + f y) = f x + f y) :\n     f = f' \u2194 \u2200 n, f n = f' n := by\n  refine' \u27e8fun h => h \u25b8 fun n => rfl, fun h => _\u27e9\n  ext n\n  exact h n",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem eq_nat_iff {f : \u2115 \u2192 \u2115} (hf : \u2200 {x y}, f (x + f y) = f x + f y) :\n     f = f' \u2194 \u2200 n, f n = f' n := by\n  exact \u27e8fun h n => h \u25b8 rfl, fun h => by ext; apply h\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem eq_nat_iff {f : \u2115 \u2192 \u2115} (hf : \u2200 {x y}, f (x + f y) = f x + f y) :\n     f = f' \u2194 \u2200 n, f n = f' n := by\n  exact \u27e8fun h n \u21a6 by rw [h], fun h \u21a6 funext h\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem eq_nat_iff {f : \u2115 \u2192 \u2115} (hf : \u2200 {x y}, f (x + f y) = f x + f y) :\n     f = f' \u2194 \u2200 n, f n = f' n := by\n  exact Iff.intro (fun h n \u21a6 h \u25b8 rfl) (fun h \u21a6 funext h)",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem eq_nat_iff {f : \u2115 \u2192 \u2115} (hf : \u2200 {x y}, f (x + f y) = f x + f y) :\n     f = f' \u2194 \u2200 n, f n = f' n := by\n  exact Iff.intro (fun h n => by rw [h]) fun h => funext h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem eq_nat_iff {f : \u2115 \u2192 \u2115} (hf : \u2200 {x y}, f (x + f y) = f x + f y) :\n     f = f' \u2194 \u2200 n, f n = f' n := by\n  refine' \u27e8fun h n => h \u25b8 rfl, fun h => funext h\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem eq_nat_iff {f : \u2115 \u2192 \u2115} (hf : \u2200 {x y}, f (x + f y) = f x + f y) :\n     f = f' \u2194 \u2200 n, f n = f' n := by\n  exact \u27e8fun h n => by rw [h], fun h => by ext; apply h\u27e9"
  ]
 },
 {
  "old": "(h z : \u2124) (hz: h - 3 = z^2) : h = z^2 + 3 := by",
  "new": "(h : \u2124) : h - z = h + -z := by",
  "step": 5,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem int_sub_eq_add_neg (h : \u2124) : h - z = h + -z := by\n  simp [sub_eq_add_neg]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem int_sub_eq_add_neg (h : \u2124) : h - z = h + -z := by\n  simp [Int.sub_eq_add_neg]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem int_sub_eq_add_neg (h : \u2124) : h - z = h + -z := by\n  rfl"
  ]
 },
 {
  "old": "(a b : \u211d) (ha : 0 < a) (hb : 0 < b) (hab : 1/a + 1/b + 1/(7*a*b) = 7) : a + 2*b \u2265 1 := by",
  "new": "(a b : \u211d) (ha : 0 < a) (hb : 0 < b) : a + b \u2265 2 * Real.sqrt (a * b) := by",
  "step": 6,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b : \u211d) (ha : 0 < a) (hb : 0 < b) : a + b \u2265 2 * Real.sqrt (a * b) := by\n  nlinarith [sq_sqrt (mul_nonneg ha.le hb.le), sq_nonneg (a - b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b : \u211d) (ha : 0 < a) (hb : 0 < b) : a + b \u2265 2 * Real.sqrt (a * b) := by\n  have h : 0 < Real.sqrt (a * b) := Real.sqrt_pos.mpr (mul_pos ha hb)\n  calc\n    a + b \u2265 2 * Real.sqrt (a * b) := by\n      nlinarith [sq_sqrt (mul_nonneg (le_of_lt ha) (le_of_lt hb)),\n        sq_nonneg (a - b)]\n    _ = 2 * Real.sqrt (a * b) := by rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b : \u211d) (ha : 0 < a) (hb : 0 < b) : a + b \u2265 2 * Real.sqrt (a * b) := by\n  have h : (Real.sqrt (a * b)) ^ 2 = a * b := by rw [Real.sq_sqrt (by positivity : 0 \u2264 a * b)]\n  nlinarith [sq_nonneg (a - b), h]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) (h : 1 / a + 1 / b + 1 / c + a * b * c / (a ^ 3 + b ^ 3 + c ^ 3) = 3) : a + b + c >= 27 / 8 := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : a + b + c >= 3 := by",
  "step": 6,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : a + b + c >= 3 := by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c), mul_self_nonneg (a + b + c)]"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : x \u2265 0) (hy : y \u2265 0) (hz : z \u2265 0) (h : x * y + x * z + y * z = 3) : (x^(3/4:\u211d) + y^(3/4:\u211d) + z^(3/4:\u211d)) \u2265 3 := by",
  "new": "(x y z : \u211d) (hx : x \u2265 0) (hy : y \u2265 0) (hz : z \u2265 0) (h : x + y + z = 3) : x * y * z \u2264 1 := by",
  "step": 6,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (x y z : \u211d) (hx : x \u2265 0) (hy : y \u2265 0) (hz : z \u2265 0) (h : x + y + z = 3) : x * y * z \u2264 1 := by\n  have h1 : x * y * z \u2264 1 / 27 * (x + y + z) ^ 3 := by\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  rw [h] at h1\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (x y z : \u211d) (hx : x \u2265 0) (hy : y \u2265 0) (hz : z \u2265 0) (h : x + y + z = 3) : x * y * z \u2264 1 := by\n  have h\u2081 : (x + y + z) ^ 3 = 27 := by rw [h]; norm_num\n  have h\u2082 : (x + y + z) ^ 2 = 9 := by rw [h]; norm_num\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]"
  ]
 },
 {
  "old": "(a b c : \u211d) : (a^4 / (2 * a^2 + b * c) + b^4 / (2 * b^2 + c * a) + c^4 / (2 * c^2 + a * b)) \u2264 (a^4 + b^4 + c^4) / (a^2 + b^2 + c^2) := by",
  "new": "(a b c d : \u211d) : a ^ 4 + b ^ 4 + c ^ 4 + d ^ 4 \u2265 4 * (a * b * c * d) := by",
  "step": 6,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_four (a b c d : \u211d) : a ^ 4 + b ^ 4 + c ^ 4 + d ^ 4 \u2265 4 * (a * b * c * d) := by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (a - d), sq_nonneg (b - c),\n    sq_nonneg (b - d), sq_nonneg (c - d),\n    sq_nonneg (a + b), sq_nonneg (a + c), sq_nonneg (a + d), sq_nonneg (b + c),\n    sq_nonneg (b + d), sq_nonneg (c + d)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_four (a b c d : \u211d) : a ^ 4 + b ^ 4 + c ^ 4 + d ^ 4 \u2265 4 * (a * b * c * d) := by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (c - d), sq_nonneg (a + b), sq_nonneg (c + d),\n    mul_self_nonneg (a - b + c - d), mul_self_nonneg (a + b - c - d),\n    mul_self_nonneg (a - b - c + d), mul_self_nonneg (a + b + c + d)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_four (a b c d : \u211d) : a ^ 4 + b ^ 4 + c ^ 4 + d ^ 4 \u2265 4 * (a * b * c * d) := by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (a - d), sq_nonneg (b - c), sq_nonneg (b - d), sq_nonneg (c - d),\n    sq_nonneg (a + b), sq_nonneg (a + c), sq_nonneg (a + d), sq_nonneg (b + c), sq_nonneg (b + d), sq_nonneg (c + d)]"
  ]
 },
 {
  "old": "(x y z : \u211d) : 4 * x^4 * z^2 + 4 * y^4 * x^2 + 4 * z^4 * y^2 + x^4 * y^2 + z^4 * x^2 + y^4 * z^2 \u2265 15 * x^2 * y^2 * z^2 := by",
  "new": "(x y z w : \u211d) : x ^ 4 + y ^ 4 + z ^ 4 + w ^ 4 \u2265 4 * (x * y * z * w) := by",
  "step": 6,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality_four (x y z w : \u211d) :\n    x ^ 4 + y ^ 4 + z ^ 4 + w ^ 4 \u2265 4 * (x * y * z * w) := by\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (x - w),\n    sq_nonneg (y - z), sq_nonneg (y - w), sq_nonneg (z - w),\n    sq_nonneg (x + y), sq_nonneg (x + z), sq_nonneg (x + w),\n    sq_nonneg (y + z), sq_nonneg (y + w), sq_nonneg (z + w)]"
  ]
 },
 {
  "old": "(n : \u2115) (h : 3 \u2223 n) (p : \u2115) (hp : p.Prime) (h3 : p \u2261 2 [ZMOD 3]) : \u00ac (p \u2223 (n^2 + 3*n + 9)) := by",
  "new": "{p a : \u2115} (hp : p.Prime) (hpa : \u00acp \u2223 a) : \u00acp \u2223 a ^ 2 := by",
  "step": 6,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem not_dvd_of_prime_of_not_dvd_sq {p a : \u2115} (hp : p.Prime) (hpa : \u00acp \u2223 a) : \u00acp \u2223 a ^ 2 := by\n  intro h\n  have h\u2081 : p \u2223 a ^ 2 := by assumption\n  have h\u2082 : p \u2223 a := by\n    apply hp.dvd_of_dvd_pow\n    assumption\n  contradiction",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem not_dvd_of_prime_of_not_dvd_sq {p a : \u2115} (hp : p.Prime) (hpa : \u00acp \u2223 a) : \u00acp \u2223 a ^ 2 := by\n  rw [pow_two]\n  exact hp.not_dvd_mul hpa hpa",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem not_dvd_of_prime_of_not_dvd_sq {p a : \u2115} (hp : p.Prime) (hpa : \u00acp \u2223 a) : \u00acp \u2223 a ^ 2 := by\n  rw [sq]\n  exact hp.not_dvd_mul hpa hpa"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0)(hab : a + b^2 + c^2 = 4) : a^2 + b^2 + c^2 \u2265 15 / 4 := by",
  "new": "(a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b + c = 3) : a * b * c \u2264 1 := by",
  "step": 6,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b + c = 3) : a * b * c \u2264 1 := by\n  have h\u2080 : (a + b + c) ^ 3 = 27 := by\n    rw [hab]\n    norm_num\n  have h\u2081 : (a + b + c) ^ 2 \u2265 9 := by\n    rw [hab]\n    norm_num\n  nlinarith [pow_two (a - b), pow_two (b - c), pow_two (c - a)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b + c = 3) : a * b * c \u2264 1 := by\n  have h\u2081 : (a + b + c) ^ 2 = 9 := by\n    rw [hab]\n    norm_num\n  have h\u2082 : a ^ 2 + b ^ 2 + c ^ 2 = 9 - 2 * (a * b + b * c + c * a) := by\n    linarith\n  have h\u2083 : a * b * c \u2264 1 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  exact h\u2083",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b + c = 3) : a * b * c \u2264 1 := by\n  nlinarith [pow_two_nonneg (a - b), pow_two_nonneg (b - c), pow_two_nonneg (c - a),\n    add_nonneg (mul_self_nonneg a) (mul_self_nonneg b),\n    add_nonneg (mul_self_nonneg b) (mul_self_nonneg c),\n    add_nonneg (mul_self_nonneg c) (mul_self_nonneg a),\n    mul_nonneg (mul_nonneg (sq_nonneg (a - b)) (sq_nonneg (b - c))) (sq_nonneg (c - a))]"
  ]
 },
 {
  "old": ": \u2200 x : \u211d, sin 3*x - sin x = 2*cos 2*x * sin x := by",
  "new": ": sin (3 * x) = 3 * sin x - 4 * sin x ^ 3 := by",
  "step": 6,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_three_mul : sin (3 * x) = 3 * sin x - 4 * sin x ^ 3 := by\n  have h\u2081 : x + 2 * x = 3 * x := by ring\n  rw [\u2190 h\u2081, sin_add x (2 * x)]\n  simp only [cos_two_mul, sin_two_mul, cos_sq']\n  have h\u2082 : cos x * (2 * sin x * cos x) = 2 * sin x * cos x ^ 2 := by ring\n  rw [h\u2082, cos_sq']\n  ring_nf",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_three_mul : sin (3 * x) = 3 * sin x - 4 * sin x ^ 3 := by\n  rw [\u2190 Complex.ofReal_inj]\n  simp [Complex.sin_three_mul, Complex.sin_ofReal_re, Complex.mul_re, Complex.sub_re]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_three_mul : sin (3 * x) = 3 * sin x - 4 * sin x ^ 3 := by\n  have h\u2081 : x + 2 * x = 3 * x := by ring\n  rw [\u2190 h\u2081, sin_add x (2 * x)]\n  simp only [cos_two_mul, sin_two_mul, cos_sq']\n  have h\u2082 : cos x * (2 * sin x * cos x) = 2 * sin x * cos x ^ 2 := by ring\n  rw [h\u2082, cos_sq']\n  ring",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_three_mul : sin (3 * x) = 3 * sin x - 4 * sin x ^ 3 := by\n  rw [\u2190 mul_right_inj' (two_ne_zero' \u211d)]\n  rw [\u2190 Complex.ofReal_inj]\n  simp [Complex.sin_three_mul, Complex.sin_ofReal_re, Complex.mul_re, Complex.sub_re, Complex.mul_im,\n    Complex.sub_im, Complex.I_sq, Complex.cos_ofReal_re]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_three_mul : sin (3 * x) = 3 * sin x - 4 * sin x ^ 3 := by\n  have h\u2080 : x + 2 * x = 3 * x := by ring\n  rw [\u2190 h\u2080, sin_add x (2 * x)]\n  simp only [cos_two_mul, sin_two_mul, cos_sq']\n  have h\u2081 : cos x * (2 * sin x * cos x) = 2 * sin x * cos x ^ 2 := by ring\n  rw [h\u2081, cos_sq']\n  ring_nf"
  ]
 },
 {
  "old": ": \u00ac\u2203 S : Set \u2115, \u2200 n : \u2115, n \u2208 S \u2228 (\u2200 m : \u2115, m \u2208 S \u2192 Nat.Coprime n m) := by",
  "new": "{m : \u2115+} : Coprime 0 m \u2194 m = 1 := by",
  "step": 6,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_zero_left {m : \u2115+} : Coprime 0 m \u2194 m = 1 := by\n  rw [coprime_comm]\n  simp [coprime_zero_left]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_zero_left {m : \u2115+} : Coprime 0 m \u2194 m = 1 := by\n  rw [coprime_comm]\n  simp [coprime_zero_left, pos]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_zero_left {m : \u2115+} : Coprime 0 m \u2194 m = 1 := by\n  rw [coprime_comm]\n  simp [coprime_zero_right]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_zero_left {m : \u2115+} : Coprime 0 m \u2194 m = 1 := by\n  simp [Coprime, Nat.gcd_zero_left]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_zero_left {m : \u2115+} : Coprime 0 m \u2194 m = 1 := by\n  constructor\n  intro h\n  rw [Coprime] at h\n  simp_all\n  rintro rfl\n  rw [Coprime]\n  simp"
  ]
 },
 {
  "old": "(n : \u2115) (hn : 4 \u2264 n) (h : n \u2223 (2 ^ n - 2)) : \u00ac Nat.Prime ((2 ^ n - 2) / n) := by",
  "new": "{n : \u2115} (hn : 2 \u2223 n) (hn' : \u00ac2 \u2223 n - 2) : \u00acn.Prime := by",
  "step": 6,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem not_prime_of_dvd_two_of_odd {n : \u2115} (hn : 2 \u2223 n) (hn' : \u00ac2 \u2223 n - 2) : \u00acn.Prime := by\n  rcases exists_eq_mul_left_of_dvd hn with \u27e8k, rfl\u27e9\n  rw [mul_comm] at hn'\n  simp [mul_comm, mul_left_comm, mul_assoc, Nat.prime_def_lt] at *\n  omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem not_prime_of_dvd_two_of_odd {n : \u2115} (hn : 2 \u2223 n) (hn' : \u00ac2 \u2223 n - 2) : \u00acn.Prime := by\n  cases' n with n\n  next => contradiction\n  next =>\n    simp_all [Nat.dvd_iff_mod_eq_zero, Nat.mod_eq_of_lt]\n    omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem not_prime_of_dvd_two_of_odd {n : \u2115} (hn : 2 \u2223 n) (hn' : \u00ac2 \u2223 n - 2) : \u00acn.Prime := by\n  rw [Nat.prime_def_lt]\n  push_neg\n  obtain \u27e8m, rfl\u27e9 := hn\n  omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem not_prime_of_dvd_two_of_odd {n : \u2115} (hn : 2 \u2223 n) (hn' : \u00ac2 \u2223 n - 2) : \u00acn.Prime := by\n  cases' n with n <;> simp_all [Nat.prime_def_lt]\n  cases' n with n <;> simp_all [Nat.prime_def_lt]\n  omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem not_prime_of_dvd_two_of_odd {n : \u2115} (hn : 2 \u2223 n) (hn' : \u00ac2 \u2223 n - 2) : \u00acn.Prime := by\n  rcases hn with \u27e8k, rfl\u27e9\n  omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem not_prime_of_dvd_two_of_odd {n : \u2115} (hn : 2 \u2223 n) (hn' : \u00ac2 \u2223 n - 2) : \u00acn.Prime := by\n  rw [Nat.prime_def_lt]\n  obtain \u27e8k, rfl\u27e9 := hn\n  omega"
  ]
 },
 {
  "old": "(a b : \u211d) (hab : 0 < a \u2227 0 < b) (h : a < b) : Real.log (1 + a / b) * Real.log (1 + b / a) < Real.log 2 ^ 2 := by",
  "new": "{a : \u211d} (h : 0 < a) : log (1 + a\u207b\u00b9) < a\u207b\u00b9 := by",
  "step": 6,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_one_add_inv_lt_of_pos {a : \u211d} (h : 0 < a) : log (1 + a\u207b\u00b9) < a\u207b\u00b9 := by\n  rw [\u2190 inv_pos] at h\n  have := Real.log_lt_sub_one_of_pos (show 0 < 1 + a\u207b\u00b9 by positivity) (by linarith)\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_one_add_inv_lt_of_pos {a : \u211d} (h : 0 < a) : log (1 + a\u207b\u00b9) < a\u207b\u00b9 := by\n  rw [\u2190 inv_pos] at h\n  have := Real.log_lt_sub_one_of_pos (add_pos_of_pos_of_nonneg zero_lt_one h.le) (by linarith)\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_one_add_inv_lt_of_pos {a : \u211d} (h : 0 < a) : log (1 + a\u207b\u00b9) < a\u207b\u00b9 := by\n  rw [\u2190 inv_pos] at h\n  apply (log_lt_sub_one_of_pos (by positivity) (by linarith)).trans_le\n  rw [sub_le_iff_le_add, inv_eq_one_div]\n  linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 3) : (Real.sqrt (a / (5 - a)) + Real.sqrt (b / (5 - b)) + Real.sqrt (c / (5 - c))) \u2264 3 / 2 := by",
  "new": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) : a * b * c \u2264 1 / 27 := by",
  "step": 6,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) : a * b * c \u2264 1 / 27 := by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n    mul_self_nonneg (a + b + c)]"
  ]
 },
 {
  "old": ": \u2200 m : \u2115, \u2203 n : \u2115, n > m \u2227 n \u2223 fib n := by",
  "new": "(m n : \u2115) : fib (m + n + 1) = fib m * fib n + fib (m + 1) * fib (n + 1) := by",
  "step": 6,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem fib_add (m n : \u2115) : fib (m + n + 1) = fib m * fib n + fib (m + 1) * fib (n + 1) := by\n  induction' n with n ih generalizing m\n  case zero => simp\n  case succ =>\n    specialize ih (m + 1)\n    rw [add_assoc m 1 n, add_comm 1 n] at ih\n    simp only [ih, fib_add_two]\n    ring"
  ]
 },
 {
  "old": "(f : \u2124 \u2192 \u2124):(\u2200 x y, f (x + y) * f (x - y) = f (x ^ 2) - f (y ^ 2)) \u2194 \u2203 k:\u2124, \u2200 x, f x = k * x := by",
  "new": "{f : \u2124 \u2192 \u2124} (hf : \u2200 x y, f (x + y) = f x + f y) {k : \u2124} : f = (\u00b7 * k) \u2194 \u2200 x, f x = x * k := by",
  "step": 6,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem int_eq_iff_eq_int {f : \u2124 \u2192 \u2124} (hf : \u2200 x y, f (x + y) = f x + f y) {k : \u2124} :\n    f = (\u00b7 * k) \u2194 \u2200 x, f x = x * k := by\n  constructor <;> intro h <;>\n  simp_all [Function.funext_iff]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem int_eq_iff_eq_int {f : \u2124 \u2192 \u2124} (hf : \u2200 x y, f (x + y) = f x + f y) {k : \u2124} :\n    f = (\u00b7 * k) \u2194 \u2200 x, f x = x * k := by\n  constructor <;> intro h <;> simp_all [Function.funext_iff]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem int_eq_iff_eq_int {f : \u2124 \u2192 \u2124} (hf : \u2200 x y, f (x + y) = f x + f y) {k : \u2124} :\n    f = (\u00b7 * k) \u2194 \u2200 x, f x = x * k := by\n  constructor\n  rintro rfl x\n  simp\n  intro h\n  ext x\n  simpa using h x",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem int_eq_iff_eq_int {f : \u2124 \u2192 \u2124} (hf : \u2200 x y, f (x + y) = f x + f y) {k : \u2124} :\n    f = (\u00b7 * k) \u2194 \u2200 x, f x = x * k := by\n  refine' \u27e8fun h x => h \u25b8 by simp, fun h => _\u27e9\n  ext x\n  simp_all",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem int_eq_iff_eq_int {f : \u2124 \u2192 \u2124} (hf : \u2200 x y, f (x + y) = f x + f y) {k : \u2124} :\n    f = (\u00b7 * k) \u2194 \u2200 x, f x = x * k := by\n  constructor <;> intro h <;> simp_all [Function.funext_iff]\n  <;> intro x <;> apply hf <;> simp_all",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem int_eq_iff_eq_int {f : \u2124 \u2192 \u2124} (hf : \u2200 x y, f (x + y) = f x + f y) {k : \u2124} :\n    f = (\u00b7 * k) \u2194 \u2200 x, f x = x * k := by\n  refine' \u27e8fun h => by simp [h, hf], fun h => _\u27e9\n  ext x\n  simpa [hf] using h x",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem int_eq_iff_eq_int {f : \u2124 \u2192 \u2124} (hf : \u2200 x y, f (x + y) = f x + f y) {k : \u2124} :\n    f = (\u00b7 * k) \u2194 \u2200 x, f x = x * k := by\n  refine' \u27e8fun h => h.symm \u25b8 fun x => by simp [hf], fun h => _\u27e9\n  ext x\n  simpa [hf] using h x"
  ]
 },
 {
  "old": "(x y : \u211d) (hx : x \u2260 0) (hy : y \u2260 0) : 2020 * x / y + y / (2020 * x) \u2265 2 * Real.sqrt ((2020 * x / y) * (y / (2020 * x))) := by",
  "new": "(x y : \u211d) (hx : x \u2265 0) (hy : y \u2265 0) : x + y \u2265 2 * Real.sqrt (x * y) := by",
  "step": 7,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (x y : \u211d) (hx : x \u2265 0) (hy : y \u2265 0) : x + y \u2265 2 * Real.sqrt (x * y) := by\n  have h : (x + y) ^ 2 \u2265 4 * (x * y) := by\n    nlinarith [sq_nonneg (x - y)]\n  nlinarith [sq_sqrt (mul_nonneg hx hy)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (x y : \u211d) (hx : x \u2265 0) (hy : y \u2265 0) : x + y \u2265 2 * Real.sqrt (x * y) := by\n  have h : (Real.sqrt (x * y)) ^ 2 = x * y := by\n    rw [Real.sq_sqrt]\n    exact mul_nonneg hx hy\n  nlinarith [sq_sqrt (mul_nonneg hx hy), sq_nonneg (x - y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (x y : \u211d) (hx : x \u2265 0) (hy : y \u2265 0) : x + y \u2265 2 * Real.sqrt (x * y) := by\n  nlinarith [sq_sqrt (mul_nonneg hx hy), sq_nonneg (x - y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (x y : \u211d) (hx : x \u2265 0) (hy : y \u2265 0) : x + y \u2265 2 * Real.sqrt (x * y) := by\n  have h1 : (x + y) ^ 2 \u2265 4 * (x * y) := by\n    nlinarith [sq_nonneg (x - y), sq_sqrt (mul_nonneg hx hy)]\n  nlinarith [sq_sqrt (mul_nonneg hx hy)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (x y : \u211d) (hx : x \u2265 0) (hy : y \u2265 0) : x + y \u2265 2 * Real.sqrt (x * y) := by\n  have h : (x + y) ^ 2 \u2265 4 * (x * y) := by\n    nlinarith [sq_nonneg (x - y)]\n  have h' : x * y \u2265 0 := by\n    nlinarith\n  have h'' : (Real.sqrt (x * y)) ^ 2 = x * y := by\n    rw [Real.sq_sqrt h']\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (x y : \u211d) (hx : x \u2265 0) (hy : y \u2265 0) : x + y \u2265 2 * Real.sqrt (x * y) := by\n  have h1 : (Real.sqrt (x * y)) ^ 2 = x * y := by\n    rw [Real.sq_sqrt]\n    exact mul_nonneg hx hy\n  have h2 : (x + y) ^ 2 \u2265 4 * (Real.sqrt (x * y)) ^ 2 := by\n    nlinarith [sq_nonneg (x - y)]\n  rw [h1] at h2\n  have h3 : x + y \u2265 2 * Real.sqrt (x * y) := by\n    nlinarith\n  exact h3"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) (h : 1 / a + 1 / b + 1 / c + a * b * c / (a ^ 3 + b ^ 3 + c ^ 3) = 3) : a + b + c >= 27 / 8 := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : a + b + c >= 3 := by",
  "step": 7,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : a + b + c >= 3 := by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c), mul_self_nonneg (a + b + c)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : a + b + c >= 3 := by\n  nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a),\n    mul_self_nonneg (a + b + c)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : a + b + c >= 3 := by\n  have : (a + b + c) / 3 >= 1 := by\n    nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (a - c), mul_self_nonneg (b - c),\n      mul_self_nonneg (a + b + c)]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : a + b + c >= 3 := by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_self_nonneg (a + b + c)]"
  ]
 },
 {
  "old": "(a b c : \u211d) : (a^4 / (2 * a^2 + b * c) + b^4 / (2 * b^2 + c * a) + c^4 / (2 * c^2 + a * b)) \u2264 (a^4 + b^4 + c^4) / (a^2 + b^2 + c^2) := by",
  "new": "(a b c d : \u211d) : a ^ 4 + b ^ 4 + c ^ 4 + d ^ 4 \u2265 4 * (a * b * c * d) := by",
  "step": 7,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_four (a b c d : \u211d) : a ^ 4 + b ^ 4 + c ^ 4 + d ^ 4 \u2265 4 * (a * b * c * d) := by\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (c ^ 2 - d ^ 2), sq_nonneg (a * b - c * d)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_four (a b c d : \u211d) : a ^ 4 + b ^ 4 + c ^ 4 + d ^ 4 \u2265 4 * (a * b * c * d) := by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (a - d), sq_nonneg (b - c), sq_nonneg (b - d), sq_nonneg (c - d),\n    mul_self_nonneg (a + b), mul_self_nonneg (a + c), mul_self_nonneg (a + d), mul_self_nonneg (b + c), mul_self_nonneg (b + d),\n    mul_self_nonneg (c + d)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_four (a b c d : \u211d) : a ^ 4 + b ^ 4 + c ^ 4 + d ^ 4 \u2265 4 * (a * b * c * d) := by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (a - d), sq_nonneg (b - c), sq_nonneg (b - d), sq_nonneg (c - d),\n    sq_nonneg (a + b), sq_nonneg (a + c), sq_nonneg (a + d), sq_nonneg (b + c), sq_nonneg (b + d), sq_nonneg (c + d)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_four (a b c d : \u211d) : a ^ 4 + b ^ 4 + c ^ 4 + d ^ 4 \u2265 4 * (a * b * c * d) := by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (a - d),\n    sq_nonneg (b - c), sq_nonneg (b - d), sq_nonneg (c - d),\n    mul_self_nonneg (a + b), mul_self_nonneg (a + c), mul_self_nonneg (a + d),\n    mul_self_nonneg (b + c), mul_self_nonneg (b + d), mul_self_nonneg (c + d)]"
  ]
 },
 {
  "old": "(n : \u2115) : (fib (n + 1) * fib (n + 2) * fib (n + 6)) - (fib (n + 3))^3 = (-1 : \u2124)^n * fib n := by",
  "new": "(n : \u2115) : fib (2 * n + 1) = fib n ^ 2 + fib (n + 1) ^ 2 := by",
  "step": 7,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem fib_two_mul_add_one (n : \u2115) : fib (2 * n + 1) = fib n ^ 2 + fib (n + 1) ^ 2 := by\n  simp_all [fib_add, fib_two_mul, Nat.succ_mul]\n  ring"
  ]
 },
 {
  "old": "(a b c : \u211d) (k p : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hk : k > p) (hp : p >= 0) : (a^k / (b^p + c^p) + b^k / (c^p + a^p) + c^k / (a^p + b^p)) \u2265 (3^(1 - k + p) / 2) * (a + b + c)^(k - p) := by",
  "new": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) : a * b * c \u2264 a^2 / 4 + b^2 / 4 + c^2 / 4 := by",
  "step": 7,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem geom_mean_le_arith_mean3_weighted (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) : a * b * c \u2264 a^2 / 4 + b^2 / 4 + c^2 / 4 := by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem geom_mean_le_arith_mean3_weighted (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) : a * b * c \u2264 a^2 / 4 + b^2 / 4 + c^2 / 4 := by\n  nlinarith [sq_nonneg (a - b), mul_self_nonneg (a + b), mul_self_nonneg (a - c), mul_self_nonneg (b - c)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem geom_mean_le_arith_mean3_weighted (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) : a * b * c \u2264 a^2 / 4 + b^2 / 4 + c^2 / 4 := by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem geom_mean_le_arith_mean3_weighted (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) : a * b * c \u2264 a^2 / 4 + b^2 / 4 + c^2 / 4 := by\n  have : a * b * c \u2264 a * a / 4 + b * b / 4 + c * c / 4 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  linarith"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 1 \u2264 x) (hy : 1 \u2264 y) (hz : 1 \u2264 z) (h : x * y + y * z + z * x = x * y * z) : Real.sqrt (x - 1) + Real.sqrt (y - 1) + Real.sqrt (z - 1) \u2264 Real.sqrt (2 * (x + y + z)) := by",
  "new": "(h : c ^ 2 \u2264 a * b) : c \u2264 Real.sqrt (a * b) := by",
  "step": 7,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem le_sqrt_of_sq_le (h : c ^ 2 \u2264 a * b) : c \u2264 Real.sqrt (a * b) := by\n  apply Real.le_sqrt_of_sq_le\n  exact h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem le_sqrt_of_sq_le (h : c ^ 2 \u2264 a * b) : c \u2264 Real.sqrt (a * b) := by\n  apply Real.le_sqrt_of_sq_le\n  assumption"
  ]
 },
 {
  "old": "(a b : \u211d) (ha : 0 < a) (hb : 0 < b) : a^2 / b + b^2 / a - a - b \u2265 8 * (Real.sqrt a - Real.sqrt b)^2 := by",
  "new": "(a b : \u211d) (ha : 0 < a) (hb : 0 < b) : a + b \u2265 2 * Real.sqrt (a * b) := by",
  "step": 7,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b : \u211d) (ha : 0 < a) (hb : 0 < b) : a + b \u2265 2 * Real.sqrt (a * b) := by\n  have h\u2081 : 0 < Real.sqrt (a * b) := Real.sqrt_pos.mpr (mul_pos ha hb)\n  have h\u2082 : (Real.sqrt (a * b)) ^ 2 = a * b := by rw [Real.sq_sqrt (le_of_lt (mul_pos ha hb))]\n  nlinarith [sq_nonneg (a - b), h\u2082]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b : \u211d) (ha : 0 < a) (hb : 0 < b) : a + b \u2265 2 * Real.sqrt (a * b) := by\n  have h : 0 < Real.sqrt (a * b) := Real.sqrt_pos.mpr (mul_pos ha hb)\n  nlinarith [sq_sqrt (mul_nonneg ha.le hb.le), sq_nonneg (a - b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b : \u211d) (ha : 0 < a) (hb : 0 < b) : a + b \u2265 2 * Real.sqrt (a * b) := by\n  have h1 : 0 \u2264 (Real.sqrt a - Real.sqrt b) ^ 2 := sq_nonneg (Real.sqrt a - Real.sqrt b)\n  rw [sub_sq] at h1\n  field_simp [ha, hb] at h1 \u22a2\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b : \u211d) (ha : 0 < a) (hb : 0 < b) : a + b \u2265 2 * Real.sqrt (a * b) := by\n  nlinarith [sq_sqrt (mul_nonneg ha.le hb.le), sq_nonneg (a - b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b : \u211d) (ha : 0 < a) (hb : 0 < b) : a + b \u2265 2 * Real.sqrt (a * b) := by\n  have h : (Real.sqrt (a * b)) ^ 2 = a * b := by rw [Real.sq_sqrt (mul_nonneg ha.le hb.le)]\n  nlinarith [sq_nonneg (a - b), ha, hb]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b : \u211d) (ha : 0 < a) (hb : 0 < b) : a + b \u2265 2 * Real.sqrt (a * b) := by\n  nlinarith [sq_sqrt (mul_nonneg ha.le hb.le), mul_self_nonneg (a - b)]"
  ]
 },
 {
  "old": "(a b : \u2124) (ha : 0 < a) (hb : 0 < b) : |a * Real.sqrt 2 - b| > 1 / (2 * (a + b)) := by",
  "new": "{a : \u211d} (ha : 0 \u2264 a) : \u221aa * \u221aa = a := by",
  "step": 7,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mul_self_sqrt {a : \u211d} (ha : 0 \u2264 a) : \u221aa * \u221aa = a := by\n  rw [Real.mul_self_sqrt ha]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mul_self_sqrt {a : \u211d} (ha : 0 \u2264 a) : \u221aa * \u221aa = a := by rw [Real.mul_self_sqrt ha]"
  ]
 },
 {
  "old": "(a b c : \u211d) : sin (2 * b - 2 * c) * cos a + sin (b - c) * cos (a - b - c) = sin (2 * b - 2 * c) * cos a + sin (b - c) * cos (a - b - c) := by",
  "new": ": sin a - sin b = 2 * sin ((a - b) / 2) * cos ((a + b) / 2) := by",
  "step": 7,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_sub_sin : sin a - sin b = 2 * sin ((a - b) / 2) * cos ((a + b) / 2) := by\n  have h\u2081 : a = (a - b) / 2 + (a + b) / 2 := by ring\n  have h\u2082 : b = (a + b) / 2 - (a - b) / 2 := by ring\n  rw [h\u2081, h\u2082] at *\n  simp [sin_add, sin_sub, cos_add, cos_sub]\n  ring",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_sub_sin : sin a - sin b = 2 * sin ((a - b) / 2) * cos ((a + b) / 2) := by\n  have h\u2080 : a = (a - b) / 2 + (a + b) / 2 := by ring\n  have h\u2081 : b = (a + b) / 2 - (a - b) / 2 := by ring\n  rw [h\u2080, h\u2081]\n  simp [sin_add, sin_sub, cos_add, cos_sub]\n  ring",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_sub_sin : sin a - sin b = 2 * sin ((a - b) / 2) * cos ((a + b) / 2) := by\n  have h\u2081 : a = (a - b) / 2 + (a + b) / 2 := by ring\n  have h\u2082 : b = (a + b) / 2 - (a - b) / 2 := by ring\n  rw [h\u2081, h\u2082]\n  simp [sin_add, sin_sub, cos_add, cos_sub]\n  ring"
  ]
 },
 {
  "old": ": \u2200 x : \u211d, sin 3*x - sin x = 2*cos 2*x * sin x := by",
  "new": ": sin (3 * x) = 3 * sin x - 4 * sin x ^ 3 := by",
  "step": 7,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_three_mul : sin (3 * x) = 3 * sin x - 4 * sin x ^ 3 := by\n  have h\u2081 : x + 2 * x = 3 * x := by ring\n  rw [\u2190 h\u2081, sin_add x (2 * x)]\n  simp only [cos_two_mul, sin_two_mul, cos_sq']\n  have h\u2082 : cos x * (2 * sin x * cos x) = 2 * sin x * cos x ^ 2 := by ring\n  rw [h\u2082, cos_sq']\n  ring",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_three_mul : sin (3 * x) = 3 * sin x - 4 * sin x ^ 3 := by\n  have h : x + 2 * x = 3 * x := by ring\n  rw [\u2190 h, sin_add x (2 * x)]\n  simp only [cos_two_mul, sin_two_mul, cos_sq']\n  have h\u2082 : cos x * (2 * sin x * cos x) = 2 * sin x * cos x ^ 2 := by ring\n  rw [h\u2082, cos_sq']\n  ring",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_three_mul : sin (3 * x) = 3 * sin x - 4 * sin x ^ 3 := by\n  have h\u2080 : x + 2 * x = 3 * x := by ring\n  rw [\u2190 h\u2080, sin_add x (2 * x)]\n  simp only [cos_two_mul, sin_two_mul, cos_sq']\n  have h\u2081 : cos x * (2 * sin x * cos x) = 2 * sin x * cos x ^ 2 := by ring\n  rw [h\u2081, cos_sq']\n  ring_nf",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_three_mul : sin (3 * x) = 3 * sin x - 4 * sin x ^ 3 := by\n  rw [\u2190 mul_right_inj' (two_ne_zero' \u211d)]\n  rw [\u2190 Complex.ofReal_inj]\n  simp [Complex.sin_three_mul, Complex.sin_ofReal_re, Complex.mul_re, Complex.sub_re, Complex.ofReal_re]"
  ]
 },
 {
  "old": ": \u00ac\u2203 S : Set \u2115, \u2200 n : \u2115, n \u2208 S \u2228 (\u2200 m : \u2115, m \u2208 S \u2192 Nat.Coprime n m) := by",
  "new": "{m : \u2115+} : Coprime 0 m \u2194 m = 1 := by",
  "step": 7,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_zero_left {m : \u2115+} : Coprime 0 m \u2194 m = 1 := by\n  rw [coprime_comm]\n  simp [coprime_zero_left]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_zero_left {m : \u2115+} : Coprime 0 m \u2194 m = 1 := by\n  rw [Coprime, Nat.gcd_zero_left]\n  simp",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_zero_left {m : \u2115+} : Coprime 0 m \u2194 m = 1 := by\n  rw [coprime_comm]\n  simp [coprime_zero_left, pos]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_zero_left {m : \u2115+} : Coprime 0 m \u2194 m = 1 := by\n  rw [coprime_comm]\n  simp [coprime_zero_right]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_zero_left {m : \u2115+} : Coprime 0 m \u2194 m = 1 := by\n  rw [Coprime]\n  simp [Nat.gcd_zero_left]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_zero_left {m : \u2115+} : Coprime 0 m \u2194 m = 1 := by\n  rw [coprime_comm, coprime_zero_right]\n  simp",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_zero_left {m : \u2115+} : Coprime 0 m \u2194 m = 1 := by\n  constructor <;> intro h\n  next =>\n    simp [Coprime] at h\n    exact h\n  next =>\n    simp [h]"
  ]
 },
 {
  "old": "(a b : \u211d) (hab : 0 < a \u2227 0 < b) (h : a < b) : Real.log (1 + a / b) * Real.log (1 + b / a) < Real.log 2 ^ 2 := by",
  "new": "{a : \u211d} (h : 0 < a) : log (1 + a\u207b\u00b9) \u2264 a\u207b\u00b9 := by",
  "step": 7,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_one_add_inv_le {a : \u211d} (h : 0 < a) : log (1 + a\u207b\u00b9) \u2264 a\u207b\u00b9 := by\n  have h\u2080 : 0 < 1 + a\u207b\u00b9 := by positivity\n  have h\u2081 : 0 < a\u207b\u00b9 := by positivity\n  have h\u2082 : a\u207b\u00b9 \u2264 1 + a\u207b\u00b9 := by linarith\n  exact (log_le_sub_one_of_pos h\u2080).trans (by linarith)",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_one_add_inv_le {a : \u211d} (h : 0 < a) : log (1 + a\u207b\u00b9) \u2264 a\u207b\u00b9 := by\n  have : 0 < 1 + a\u207b\u00b9 := by positivity\n  have h\u2080 : log (1 + a\u207b\u00b9) \u2264 1 + a\u207b\u00b9 - 1 := by\n    apply log_le_sub_one_of_pos\n    positivity\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_one_add_inv_le {a : \u211d} (h : 0 < a) : log (1 + a\u207b\u00b9) \u2264 a\u207b\u00b9 := by\n  have h\u2081 : 0 < a\u207b\u00b9 := inv_pos.mpr h\n  have h\u2082 : 0 < 1 + a\u207b\u00b9 := by linarith\n  have h\u2083 : log (1 + a\u207b\u00b9) \u2264 1 + a\u207b\u00b9 - 1 := log_le_sub_one_of_pos h\u2082\n  simp at h\u2083\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_one_add_inv_le {a : \u211d} (h : 0 < a) : log (1 + a\u207b\u00b9) \u2264 a\u207b\u00b9 := by\n  apply (log_le_sub_one_of_pos (by positivity)).trans _\n  rw [add_comm]\n  rw [add_comm]\n  simpa using add_le_add_left (by positivity) _"
  ]
 },
 {
  "old": "(\u03b8 : \u211d) : 4 * Real.sin \u03b8 * Real.sin (\u03c0 / 3 - \u03b8) * Real.sin (\u03c0 / 3 + \u03b8) = Real.sin (3 * \u03b8) := by",
  "new": ": sin (3 * \u03b8) = 3 * sin \u03b8 - 4 * sin \u03b8 ^ 3 := by",
  "step": 7,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_three_mul : sin (3 * \u03b8) = 3 * sin \u03b8 - 4 * sin \u03b8 ^ 3 := by\n  rw [\u2190 Complex.ofReal_inj]\n  simp [Complex.sin_three_mul, Complex.sin_ofReal_re, Complex.mul_re, Complex.sub_re]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_three_mul : sin (3 * \u03b8) = 3 * sin \u03b8 - 4 * sin \u03b8 ^ 3 := by\n  have h\u2080 : \u03b8 + 2 * \u03b8 = 3 * \u03b8 := by ring\n  rw [\u2190 h\u2080, sin_add \u03b8 (2 * \u03b8)]\n  simp only [cos_two_mul, sin_two_mul, cos_sq']\n  have h\u2081 : cos \u03b8 * (2 * sin \u03b8 * cos \u03b8) = 2 * sin \u03b8 * cos \u03b8 ^ 2 := by ring\n  rw [h\u2081, cos_sq']\n  ring_nf",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_three_mul : sin (3 * \u03b8) = 3 * sin \u03b8 - 4 * sin \u03b8 ^ 3 := by\n  rw [\u2190 Complex.ofReal_inj]\n  simp [Complex.sin_three_mul, Complex.sin_ofReal_re, Complex.ofReal_sub, Complex.ofReal_mul,\n    Complex.ofReal_pow]"
  ]
 },
 {
  "old": "(n : \u2115) (m : \u2115) (A : Fin m \u2192 Finset \u2115) (hA : \u2200 i j, i \u2260 j \u2192 A i \u2229 A j \u2260 \u2205) : m \u2264 2 ^ (n - 1) := by",
  "new": "(A : Finset \u03b1) : A.card \u2264 1 \u2194 \u2200 a \u2208 A, \u2200 b \u2208 A, a = b := by",
  "step": 7,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem finset_card_le_one_iff_eq (A : Finset \u03b1) : A.card \u2264 1 \u2194 \u2200 a \u2208 A, \u2200 b \u2208 A, a = b := by\n  constructor <;> intro h\n  intro a ha b hb\n  rw [Finset.card_le_one] at h\n  exact h a ha b hb\n  rw [Finset.card_le_one]\n  intro a ha b hb\n  exact h a ha b hb",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem finset_card_le_one_iff_eq (A : Finset \u03b1) : A.card \u2264 1 \u2194 \u2200 a \u2208 A, \u2200 b \u2208 A, a = b := by\n  refine' \u27e8fun h a ha b hb => _, fun h => _\u27e9\n  rw [Finset.card_le_one] at h\n  exact h a ha b hb\n  simp_all only [Finset.card_le_one, Finset.card_eq_zero, Finset.not_nonempty_iff_eq_empty]\n  aesop"
  ]
 },
 {
  "old": ": 4 * (4 * (Real.sqrt 2 - 1) / 3) ^ 3 \u2264 4 * (3 - 2 * Real.sqrt 2) := by",
  "new": ": 2 + 2 * Real.sqrt 2 \u2264 9 := by",
  "step": 7,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sqrt_two_add_two_sqrt_two_le_three : 2 + 2 * Real.sqrt 2 \u2264 9 := by\n  norm_num\n  nlinarith [Real.sq_sqrt (show 0 \u2264 2 by norm_num)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sqrt_two_add_two_sqrt_two_le_three : 2 + 2 * Real.sqrt 2 \u2264 9 := by\n  norm_num [Real.sqrt_le_iff]\n  nlinarith [Real.sq_sqrt (show 0 \u2264 2 by norm_num)]"
  ]
 },
 {
  "old": "(a b : \u2115) (h\u2080 : 0 < a \u2227 0 < b) (h\u2081 : \u2200 n, a^(2 * n - 1) \u2223 b^(2 * n)) (h\u2082 : \u2200 n, b^(2 * n) \u2223 a^(2 * n + 1)) : a = b := by",
  "new": "{a b : \u2115} (hab : a \u2223 b) (h : b / a = 1) : a = b := by",
  "step": 7,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem eq_of_dvd_of_div_eq_one {a b : \u2115} (hab : a \u2223 b) (h : b / a = 1) : a = b := by\n  rw [\u2190 Nat.mul_div_cancel' hab]\n  rw [h]\n  simp",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem eq_of_dvd_of_div_eq_one {a b : \u2115} (hab : a \u2223 b) (h : b / a = 1) : a = b := by\n  rw [\u2190 Nat.div_mul_cancel hab]\n  simp [h]"
  ]
 },
 {
  "old": "(a : \u2115 \u2192 \u211d) (h : \u2200 i, -2 \u2264 a i \u2227 a i \u2264 10) : \u2211 i in Finset.range 101, (a i)^2 < 2020 := by",
  "new": "(a : \u2115 \u2192 \u211d) (h : \u2200 i, 0 \u2264 a i \u2227 a i \u2264 1) (n : \u2115) : \u2211 i \u2208 Finset.range n, a i ^ 2 \u2264 n := by",
  "step": 7,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sum_sq_le (a : \u2115 \u2192 \u211d) (h : \u2200 i, 0 \u2264 a i \u2227 a i \u2264 1) (n : \u2115) :\n    \u2211 i \u2208 Finset.range n, a i ^ 2 \u2264 n := by\n  induction n with\n  | zero => simp\n  | succ n ihn =>\n    rw [Finset.sum_range_succ]\n    have h\u2081 := h n\n    have h\u2082 := ihn\n    norm_num\n    nlinarith"
  ]
 },
 {
  "old": ": \u2200 m : \u2115, \u2203 n : \u2115, n > m \u2227 n \u2223 fib n := by",
  "new": "(m n : \u2115) : fib (m + n + 1) = fib m * fib n + fib (m + 1) * fib (n + 1) := by",
  "step": 7,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem fib_add (m n : \u2115) : fib (m + n + 1) = fib m * fib n + fib (m + 1) * fib (n + 1) := by\n  induction' n with n ih generalizing m\n  simp\n  specialize ih (m + 1)\n  rw [add_assoc m 1 n, add_comm 1 n] at ih\n  simp only [ih, fib_add_two]\n  ring"
  ]
 },
 {
  "old": "(x : \u2115 \u2192 \u211d) (n : \u2115) (hx : n = 3) (h : \u2211 i in Finset.range n, x i = 9) (h' : \u2211 i in Finset.range n, (1/x i) = 1) : x 1 = 3 \u2227 x 2 = 3 \u2227 x 3 = 3 := by",
  "new": "(x : \u2115 \u2192 \u211d) (hx: x 0 = 1) (h'x: x 1 = 1) (h''x: x 2 = 1) (h'''x: x 3 = 1) : \u2211 i in Finset.range 4, x i = 4 := by",
  "step": 7,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sum_eq_three (x : \u2115 \u2192 \u211d) (hx: x 0 = 1) (h'x: x 1 = 1) (h''x: x 2 = 1) (h'''x: x 3 = 1) :\n  \u2211 i in Finset.range 4, x i = 4 := by\n  simp_all only [Finset.sum_range_succ, Finset.sum_range_one, add_zero, one_mul, Finset.sum_range_zero]\n  norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sum_eq_three (x : \u2115 \u2192 \u211d) (hx: x 0 = 1) (h'x: x 1 = 1) (h''x: x 2 = 1) (h'''x: x 3 = 1) :\n  \u2211 i in Finset.range 4, x i = 4 := by\n  simp_all only [Finset.sum_range_succ, Finset.sum_range_one, Nat.cast_zero, Nat.cast_one,\n    Nat.cast_two, Nat.cast_succ, Nat.cast_zero, Nat.cast_one, Nat.cast_two, Nat.cast_succ,\n    Nat.cast_zero, Nat.cast_one, Nat.cast_two, Nat.cast_succ, Nat.cast_zero, Nat.cast_one,\n    Nat.cast_two, Nat.cast_succ]\n  norm_num"
  ]
 },
 {
  "old": "(n : \u2115) (x y : \u2115 \u2192 \u211d) (C : \u211d) (h\u2080 : 2 \u2264 n) (hx : \u2200 i, 0 < x i) (hy : \u2200 i, 0 < y i) (hxy : \u2200 i, x i < x (i + 1)) (hyx : \u2200 i, y i < y (i + 1)) (hC : C \u2208 Set.Ioo (-2) 2) : \u2211 i in Finset.range n, Real.sqrt ((x i)^2 + C * x i * y i + (y i)^2) < \u2211 i in Finset.range n, Real.sqrt ((x i)^2 + C * x i * y (i + 1) + (y (i + 1))^2) := by",
  "new": "(x : \u2115 \u2192 \u211d) (hx : \u2200 i, 0 < x i) (n : \u2115) : \u2211 i \u2208 Finset.range n, \u221a(x i) < \u2211 i \u2208 Finset.range (n + 1), \u221a(x i) := by",
  "step": 7,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sum_sqrt_lt_sum_sqrt_succ (x : \u2115 \u2192 \u211d) (hx : \u2200 i, 0 < x i) (n : \u2115) :\n    \u2211 i \u2208 Finset.range n, \u221a(x i) < \u2211 i \u2208 Finset.range (n + 1), \u221a(x i) := by\n  rw [Finset.sum_range_succ]\n  apply lt_add_of_pos_right\n  apply Real.sqrt_pos.2\n  exact hx n",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sum_sqrt_lt_sum_sqrt_succ (x : \u2115 \u2192 \u211d) (hx : \u2200 i, 0 < x i) (n : \u2115) :\n    \u2211 i \u2208 Finset.range n, \u221a(x i) < \u2211 i \u2208 Finset.range (n + 1), \u221a(x i) := by\n  rw [Finset.sum_range_succ]\n  apply lt_add_of_pos_right _\n  simpa using hx n",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sum_sqrt_lt_sum_sqrt_succ (x : \u2115 \u2192 \u211d) (hx : \u2200 i, 0 < x i) (n : \u2115) :\n    \u2211 i \u2208 Finset.range n, \u221a(x i) < \u2211 i \u2208 Finset.range (n + 1), \u221a(x i) := by\n  rw [Finset.sum_range_succ]\n  exact lt_add_of_pos_right _ (sqrt_pos.mpr (hx n))"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (habc : a * b * c = 1) : (a ^ 5 / (a ^ 3 + 1) + b ^ 5 / (b ^ 3 + 1) + c ^ 5 / (c ^ 3 + 1)) \u2265 3 / 2 := by",
  "new": "(a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (habc : a * b * c = 1) : (a ^ 3 / (a ^ 3 + b ^ 3 + c ^ 3) + b ^ 3 / (a ^ 3 + b ^ 3 + c ^ 3) + c ^ 3 / (a ^ 3 + b ^ 3 + c ^ 3)) \u2265 3 / 4 := by",
  "step": 7,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality_root_three (a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (habc : a * b * c = 1) : (a ^ 3 / (a ^ 3 + b ^ 3 + c ^ 3) + b ^ 3 / (a ^ 3 + b ^ 3 + c ^ 3) + c ^ 3 / (a ^ 3 + b ^ 3 + c ^ 3)) \u2265 3 / 4 := by\n  rw [div_eq_mul_inv, div_eq_mul_inv, div_eq_mul_inv]\n  field_simp [habc]\n  ring_nf\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality_root_three (a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (habc : a * b * c = 1) : (a ^ 3 / (a ^ 3 + b ^ 3 + c ^ 3) + b ^ 3 / (a ^ 3 + b ^ 3 + c ^ 3) + c ^ 3 / (a ^ 3 + b ^ 3 + c ^ 3)) \u2265 3 / 4 := by\n  field_simp\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 1 < a) (hb : 1 < b) (hc : 1 < c) : (1 / (a ^ 2 - 1) + 1 / (b ^ 2 - 1) + 1 / (c ^ 2 - 1) = 1 \u2192 1 / (a + 1) + 1 / (b + 1) + 1 / (c + 1) \u2264 1) := by",
  "new": "{a b c : \u211d} (ha : 1 < a) (hb : 1 < b) (hc : 1 < c) (habc : a * b * c = 1) : 1 / (a - 1) + 1 / (b - 1) + 1 / (c - 1) \u2264 1 := by",
  "step": 7,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lemma_1 {a b c : \u211d} (ha : 1 < a) (hb : 1 < b) (hc : 1 < c) (habc : a * b * c = 1) :\n    1 / (a - 1) + 1 / (b - 1) + 1 / (c - 1) \u2264 1 := by\n  have h\u2080 : a \u2260 1 := by linarith\n  have h\u2081 : b \u2260 1 := by linarith\n  have h\u2082 : c \u2260 1 := by linarith\n  have h\u2083 : a - 1 \u2260 0 := by linarith\n  have h\u2084 : b - 1 \u2260 0 := by linarith\n  have h\u2085 : c - 1 \u2260 0 := by linarith\n  field_simp [h\u2080, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085]\n  nlinarith [mul_pos (sub_pos.mpr ha) (sub_pos.mpr hb)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lemma_1 {a b c : \u211d} (ha : 1 < a) (hb : 1 < b) (hc : 1 < c) (habc : a * b * c = 1) :\n    1 / (a - 1) + 1 / (b - 1) + 1 / (c - 1) \u2264 1 := by\n  have h\u2080 : a - 1 > 0 := by linarith\n  have h\u2081 : b - 1 > 0 := by linarith\n  have h\u2082 : c - 1 > 0 := by linarith\n  have h\u2083 : (a - 1) * (b - 1) * (c - 1) > 0 := by positivity\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lemma_1 {a b c : \u211d} (ha : 1 < a) (hb : 1 < b) (hc : 1 < c) (habc : a * b * c = 1) :\n    1 / (a - 1) + 1 / (b - 1) + 1 / (c - 1) \u2264 1 := by\n  rw [div_eq_mul_inv, div_eq_mul_inv, div_eq_mul_inv]\n  ring_nf\n  nlinarith [mul_pos (sub_pos.mpr ha) (sub_pos.mpr hb)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lemma_1 {a b c : \u211d} (ha : 1 < a) (hb : 1 < b) (hc : 1 < c) (habc : a * b * c = 1) :\n    1 / (a - 1) + 1 / (b - 1) + 1 / (c - 1) \u2264 1 := by\n  have : a - 1 > 0 := by linarith\n  have : b - 1 > 0 := by linarith\n  have : c - 1 > 0 := by linarith\n  have : (a - 1) * (b - 1) * (c - 1) > 0 := by positivity\n  nlinarith [mul_pos (mul_pos (sub_pos.mpr ha) (sub_pos.mpr hb)) (sub_pos.mpr hc)]"
  ]
 },
 {
  "old": "(k : \u2115) (h : 1 < k) : (2 : \u211d) * (Real.sqrt (k + 1) - Real.sqrt k) < 1 / Real.sqrt k \u2227 1 / Real.sqrt k < 2 * (Real.sqrt k - Real.sqrt (k - 1)) := by",
  "new": "(h : 0 < x) (hx : x < 1) : \u221a(1 - x) < 1 := by",
  "step": 7,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sqrt_one_sub_lt_one (h : 0 < x) (hx : x < 1) : \u221a(1 - x) < 1 := by\n  have h\u2081 : 0 < 1 - x := by linarith\n  rw [Real.sqrt_lt] <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sqrt_one_sub_lt_one (h : 0 < x) (hx : x < 1) : \u221a(1 - x) < 1 := by\n  rw [Real.sqrt_lt] <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sqrt_one_sub_lt_one (h : 0 < x) (hx : x < 1) : \u221a(1 - x) < 1 := by\n  rw [Real.sqrt_lt]\n  linarith\n  linarith\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sqrt_one_sub_lt_one (h : 0 < x) (hx : x < 1) : \u221a(1 - x) < 1 := by\n  rw [sqrt_lt (by linarith)]\n  linarith\n  linarith"
  ]
 },
 {
  "old": "(a b : \u211d) (ha : 0 < a) (hb : 0 < b) (hab : 0 < a * b) (hab' : 1 / Real.sqrt (a + 1) + 1 / Real.sqrt (b + 1) = 4 / Real.sqrt (a * b + 1)) : a + b \u2265 2 * (2 + Real.sqrt 7) := by",
  "new": "(h : a ^ 2 \u2264 b) : a \u2264 Real.sqrt b := by",
  "step": 7,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem le_sqrt_of_sq_le (h : a ^ 2 \u2264 b) : a \u2264 Real.sqrt b := by\n  have h\u2081 : 0 \u2264 b := by nlinarith\n  apply Real.le_sqrt_of_sq_le\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem le_sqrt_of_sq_le (h : a ^ 2 \u2264 b) : a \u2264 Real.sqrt b := by\n  apply Real.le_sqrt_of_sq_le\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem le_sqrt_of_sq_le (h : a ^ 2 \u2264 b) : a \u2264 Real.sqrt b := by\n  apply Real.le_sqrt_of_sq_le\n  exact h"
  ]
 },
 {
  "old": "(f : \u2124 \u2192 \u2124):(\u2200 x y, f (x + y) * f (x - y) = f (x ^ 2) - f (y ^ 2)) \u2194 \u2203 k:\u2124, \u2200 x, f x = k * x := by",
  "new": "{f : \u2124 \u2192 \u2124} (hf : \u2200 x y, f (x + y) = f x + f y) {k : \u2124} : f = (\u00b7 * k) \u2194 \u2200 x, f x = x * k := by",
  "step": 7,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem int_eq_iff_eq_int {f : \u2124 \u2192 \u2124} (hf : \u2200 x y, f (x + y) = f x + f y) {k : \u2124} :\n    f = (\u00b7 * k) \u2194 \u2200 x, f x = x * k := by\n  constructor <;> intro h <;>\n    simp_all [Function.funext_iff] <;>\n      simp_all (config := { contextual := true })\n  <;>\n    aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem int_eq_iff_eq_int {f : \u2124 \u2192 \u2124} (hf : \u2200 x y, f (x + y) = f x + f y) {k : \u2124} :\n    f = (\u00b7 * k) \u2194 \u2200 x, f x = x * k := by\n  refine' \u27e8fun h x => h \u25b8 by simp [hf], fun h => _\u27e9\n  ext x\n  simpa [hf] using h x"
  ]
 },
 {
  "old": "(x y : \u211d) (hx : x \u2260 0) (hy : y \u2260 0) : 2020 * x / y + y / (2020 * x) \u2265 2 * Real.sqrt ((2020 * x / y) * (y / (2020 * x))) := by",
  "new": "(x y : \u211d) (hx : x \u2265 0) (hy : y \u2265 0) : x + y \u2265 2 * Real.sqrt (x * y) := by",
  "step": 8,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (x y : \u211d) (hx : x \u2265 0) (hy : y \u2265 0) : x + y \u2265 2 * Real.sqrt (x * y) := by\n  nlinarith [sq_sqrt (mul_nonneg hx hy), sq_nonneg (x - y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (x y : \u211d) (hx : x \u2265 0) (hy : y \u2265 0) : x + y \u2265 2 * Real.sqrt (x * y) := by\n  have h1 : 0 \u2264 (Real.sqrt x - Real.sqrt y) ^ 2 := sq_nonneg (Real.sqrt x - Real.sqrt y)\n  rw [sub_sq] at h1\n  field_simp [hx, hy] at h1 \u22a2\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (x y : \u211d) (hx : x \u2265 0) (hy : y \u2265 0) : x + y \u2265 2 * Real.sqrt (x * y) := by\n  have h1 : (Real.sqrt x - Real.sqrt y) ^ 2 \u2265 0 := by positivity\n  rw [sub_sq] at h1\n  apply le_of_sub_nonneg\n  field_simp at h1 \u22a2\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (x y : \u211d) (hx : x \u2265 0) (hy : y \u2265 0) : x + y \u2265 2 * Real.sqrt (x * y) := by\n  have h : (Real.sqrt (x * y)) ^ 2 = x * y := by rw [Real.sq_sqrt (mul_nonneg hx hy)]\n  nlinarith [sq_nonneg (x - y), h]"
  ]
 },
 {
  "old": "(n : \u2115) (a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (habc : a + b + c = a * b + b * c + c * a) : a ^ n + b ^ n + c ^ n + a ^ (n - 2) + b ^ (n - 2) + c ^ (n - 2) \u2265 2 * (a ^ (n - 1) + b ^ (n - 1) + c ^ (n - 1)) + (a - 1) ^ 2 + (b - 1) ^ 2 + (c - 1) ^ 2 := by",
  "new": "(a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (habc : a + b + c = 1) : a * b * c \u2264 1 / 27 := by",
  "step": 8,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (habc : a + b + c = 1) : a * b * c \u2264 1 / 27 := by\n  have h\u2081 : (a + b + c) ^ 3 = 1 := by rw [habc]; norm_num\n  have h\u2082 : 27 * (a * b * c) \u2264 1 := by\n    nlinarith [sq_nonneg (a - b), mul_self_nonneg (a - c), mul_self_nonneg (b - c),\n      mul_self_nonneg (a + b + c)]\n  linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) (h : 1 / a + 1 / b + 1 / c + a * b * c / (a ^ 3 + b ^ 3 + c ^ 3) = 3) : a + b + c >= 27 / 8 := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : a + b + c >= 3 := by",
  "step": 8,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : a + b + c >= 3 := by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c), mul_self_nonneg (a + b + c)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : a + b + c >= 3 := by\n  have : 0 \u2264 (a + b + c) ^ 2 := by nlinarith\n  have : 0 \u2264 (a + b + c) ^ 2 := by nlinarith\n  nlinarith [sq_nonneg (a + b + c),\n    sq_nonneg (a - b),\n    sq_nonneg (b - c),\n    sq_nonneg (c - a)]"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : x \u2265 0) (hy : y \u2265 0) (hz : z \u2265 0) (h : x * y + x * z + y * z = 3) : (x^(3/4:\u211d) + y^(3/4:\u211d) + z^(3/4:\u211d)) \u2265 3 := by",
  "new": "(x y z : \u211d) (hx : x \u2265 0) (hy : y \u2265 0) (hz : z \u2265 0) (h : x + y + z = 3) : x * y * z \u2264 1 := by",
  "step": 8,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (x y z : \u211d) (hx : x \u2265 0) (hy : y \u2265 0) (hz : z \u2265 0) (h : x + y + z = 3) : x * y * z \u2264 1 := by\n  have h\u2081 : (x + y + z) ^ 3 = 27 := by rw [h]; norm_num\n  have h\u2082 : (x + y + z) ^ 2 = 9 := by rw [h]; norm_num\n  have h\u2083 : x ^ 2 + y ^ 2 + z ^ 2 + 2 * (x * y + y * z + z * x) = 9 := by\n    calc\n      x ^ 2 + y ^ 2 + z ^ 2 + 2 * (x * y + y * z + z * x) = (x + y + z) ^ 2 := by ring\n      _ = 9 := h\u2082\n  have h\u2084 : x * y + y * z + z * x \u2264 3 := by\n    linarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  have h\u2085 : x * y * z \u2264 1 := by\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  exact h\u2085",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (x y z : \u211d) (hx : x \u2265 0) (hy : y \u2265 0) (hz : z \u2265 0) (h : x + y + z = 3) : x * y * z \u2264 1 := by\n  have h\u2081 : x * y * z \u2264 (x + y + z) / 3 := by\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n      mul_self_nonneg (x + y + z)]\n  nlinarith [h\u2081, h]"
  ]
 },
 {
  "old": "(a b c : \u211d) : (a^4 / (2 * a^2 + b * c) + b^4 / (2 * b^2 + c * a) + c^4 / (2 * c^2 + a * b)) \u2264 (a^4 + b^4 + c^4) / (a^2 + b^2 + c^2) := by",
  "new": "(a b c d : \u211d) : a ^ 4 + b ^ 4 + c ^ 4 + d ^ 4 \u2265 4 * a * b * c * d := by",
  "step": 8,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_four (a b c d : \u211d) : a ^ 4 + b ^ 4 + c ^ 4 + d ^ 4 \u2265 4 * a * b * c * d := by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a + b), sq_nonneg (a - c), sq_nonneg (a + c),\n    sq_nonneg (a - d), sq_nonneg (a + d), sq_nonneg (b - c), sq_nonneg (b + c), sq_nonneg (b - d),\n    sq_nonneg (b + d), sq_nonneg (c - d), sq_nonneg (c + d)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_four (a b c d : \u211d) : a ^ 4 + b ^ 4 + c ^ 4 + d ^ 4 \u2265 4 * a * b * c * d := by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a + b), sq_nonneg (a - c), sq_nonneg (a + c),\n    sq_nonneg (a - d), sq_nonneg (a + d), sq_nonneg (b - c), sq_nonneg (b + c),\n    sq_nonneg (b - d), sq_nonneg (b + d), sq_nonneg (c - d), sq_nonneg (c + d)]"
  ]
 },
 {
  "old": "(n : \u2115) : (fib (n + 1) * fib (n + 2) * fib (n + 6)) - (fib (n + 3))^3 = (-1 : \u2124)^n * fib n := by",
  "new": "(n : \u2115) : fib (2 * n + 1) = fib n ^ 2 + fib (n + 1) ^ 2 := by",
  "step": 8,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem fib_two_mul_add_one (n : \u2115) : fib (2 * n + 1) = fib n ^ 2 + fib (n + 1) ^ 2 := by\n  rw [two_mul, fib_add, \u2190 sq]\n  ring_nf",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem fib_two_mul_add_one (n : \u2115) : fib (2 * n + 1) = fib n ^ 2 + fib (n + 1) ^ 2 := by\n  rw [two_mul, fib_add]\n  ring"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0) (hab : a + b + c = 3) : a * Real.sqrt b + b * Real.sqrt c + c * Real.sqrt a \u2264 3 := by",
  "new": "(a b c : \u211d) (ha : a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0) (hab : a + b + c = 3) : a * b * c \u2264 1 := by",
  "step": 8,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b c : \u211d) (ha : a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0) (hab : a + b + c = 3) : a * b * c \u2264 1 := by\n  have : (a + b + c) ^ 3 \u2265 27 * (a * b * c) := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  rw [hab] at this\n  linarith"
  ]
 },
 {
  "old": "(n : \u2115) (h : 3 \u2223 n) (p : \u2115) (hp : p.Prime) (h3 : p \u2261 2 [ZMOD 3]) : \u00ac (p \u2223 (n^2 + 3*n + 9)) := by",
  "new": "{p a : \u2115} (hp : p.Prime) (hpa : \u00acp \u2223 a) : \u00acp \u2223 a ^ 2 := by",
  "step": 8,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem not_dvd_of_prime_of_not_dvd_sq {p a : \u2115} (hp : p.Prime) (hpa : \u00acp \u2223 a) : \u00acp \u2223 a ^ 2 := by\n  simp only [pow_two]\n  exact hp.not_dvd_mul hpa hpa",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem not_dvd_of_prime_of_not_dvd_sq {p a : \u2115} (hp : p.Prime) (hpa : \u00acp \u2223 a) : \u00acp \u2223 a ^ 2 := by\n  intro h\n  apply hpa\n  apply hp.dvd_of_dvd_pow\n  assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem not_dvd_of_prime_of_not_dvd_sq {p a : \u2115} (hp : p.Prime) (hpa : \u00acp \u2223 a) : \u00acp \u2223 a ^ 2 := by\n  rw [sq]\n  exact mt (hp.dvd_mul.mp) (by simp_all)",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem not_dvd_of_prime_of_not_dvd_sq {p a : \u2115} (hp : p.Prime) (hpa : \u00acp \u2223 a) : \u00acp \u2223 a ^ 2 := by\n  rw [pow_two]\n  exact hp.not_dvd_mul hpa hpa"
  ]
 },
 {
  "old": ": (x^2022 + x^1453 + x^1071 + 1) % (x^2 + 1) * (x + 1) = 0 := by",
  "new": ": (x^14 + x^12 + x^10 + x^8 + x^6 + x^4 + x^2 + 1) % (x^14 + x^12 + x^10 + x^8 + x^6 + x^4 + x^2 + 1) = 0 := by",
  "step": 8,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem poly_eq_zero : (x^14 + x^12 + x^10 + x^8 + x^6 + x^4 + x^2 + 1) % (x^14 + x^12 + x^10 + x^8 + x^6 + x^4 + x^2 + 1) = 0 := by\n  simp",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem poly_eq_zero : (x^14 + x^12 + x^10 + x^8 + x^6 + x^4 + x^2 + 1) % (x^14 + x^12 + x^10 + x^8 + x^6 + x^4 + x^2 + 1) = 0 := by\n  apply Eq.symm\n  simp"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 1 \u2264 x) (hy : 1 \u2264 y) (hz : 1 \u2264 z) (h : x * y + y * z + z * x = x * y * z) : Real.sqrt (x - 1) + Real.sqrt (y - 1) + Real.sqrt (z - 1) \u2264 Real.sqrt (2 * (x + y + z)) := by",
  "new": "(h : c ^ 2 \u2264 a * b) : c \u2264 Real.sqrt (a * b) := by",
  "step": 8,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem le_sqrt_of_sq_le (h : c ^ 2 \u2264 a * b) : c \u2264 Real.sqrt (a * b) := by\n  apply Real.le_sqrt_of_sq_le\n  exact h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem le_sqrt_of_sq_le (h : c ^ 2 \u2264 a * b) : c \u2264 Real.sqrt (a * b) := by\n  apply Real.le_sqrt_of_sq_le\n  linarith"
  ]
 },
 {
  "old": "(x y z : \u211d) (h\u2080 : x \u2260 0 \u2227 y \u2260 0 \u2227 z \u2260 0) (h\u2081 : x * y * z = 1) (h\u2082 : x + 2 * y + 3 * z - 6 = 0) : y * z * (x^2 - 1) + 2 * x * z * (y^2 - 1) + 3 * x * y * (z^2 - 1) = 0 := by",
  "new": "{x y z : \u211d} (h\u2080 : x \u2260 0 \u2227 y \u2260 0 \u2227 z \u2260 0) (h\u2081 : x + y + z = 0) (h\u2082 : x * y + y * z + z * x = 0) : x = y := by",
  "step": 8,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem eq_of_sum_eq_zero {x y z : \u211d} (h\u2080 : x \u2260 0 \u2227 y \u2260 0 \u2227 z \u2260 0)\n     (h\u2081 : x + y + z = 0) (h\u2082 : x * y + y * z + z * x = 0) : x = y := by\n  have h\u2083 : x = -y - z := by linarith\n  rw [h\u2083] at h\u2081 h\u2082\n  ring_nf at h\u2081 h\u2082\n  nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) : sin (2 * b - 2 * c) * cos a + sin (b - c) * cos (a - b - c) = sin (2 * b - 2 * c) * cos a + sin (b - c) * cos (a - b - c) := by",
  "new": ": sin a - sin b = 2 * sin ((a - b) / 2) * cos ((a + b) / 2) := by",
  "step": 8,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_sub_sin : sin a - sin b = 2 * sin ((a - b) / 2) * cos ((a + b) / 2) := by\n  have h\u2081 : a = (a - b) / 2 + (a + b) / 2 := by ring\n  have h\u2082 : b = (a + b) / 2 - (a - b) / 2 := by ring\n  rw [h\u2081, h\u2082] at *\n  simp [sin_add, sin_sub, cos_add, cos_sub]\n  ring",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_sub_sin : sin a - sin b = 2 * sin ((a - b) / 2) * cos ((a + b) / 2) := by\n  have h\u2081 : a = (a - b) / 2 + (a + b) / 2 := by ring\n  have h\u2082 : b = (a + b) / 2 - (a - b) / 2 := by ring\n  rw [h\u2081, h\u2082]\n  simp [sin_add, sin_sub, cos_add, cos_sub]\n  ring",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_sub_sin : sin a - sin b = 2 * sin ((a - b) / 2) * cos ((a + b) / 2) := by\n  rw [\u2190 Complex.ofReal_inj]\n  simp [Complex.sin_sub_sin, Complex.ofReal_sub]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_sub_sin : sin a - sin b = 2 * sin ((a - b) / 2) * cos ((a + b) / 2) := by\n  have h\u2081 : a = (a + b) / 2 + (a - b) / 2 := by ring\n  have h\u2082 : b = (a + b) / 2 - (a - b) / 2 := by ring\n  rw [h\u2081, h\u2082]\n  simp [sin_add, sin_sub, cos_add, cos_sub]\n  ring",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_sub_sin : sin a - sin b = 2 * sin ((a - b) / 2) * cos ((a + b) / 2) := by\n  have h\u2080 : a = (a - b) / 2 + (a + b) / 2 := by ring\n  have h\u2081 : b = (a + b) / 2 - (a - b) / 2 := by ring\n  rw [h\u2080, h\u2081]\n  simp [sin_add, sin_sub, cos_add, cos_sub]\n  ring"
  ]
 },
 {
  "old": "(n : \u2115) (k : \u2115 \u2192 \u2115) : (n : \u211d) / (\u2211 i in Finset.range n, (1 : \u211d) / k i) = (\u2211 i in Finset.range n, k i) / (\u2211 i in Finset.range n, (1 : \u211d) / k i) := by",
  "new": "{n : \u2115} {f : \u2115 \u2192 \u211d} (hf : \u2200 i, 0 < f i) : \u2211 i \u2208 Finset.range n, f i / \u230af i\u230b\u208a \u2264 \u2211 i \u2208 Finset.range n, f i / \u230af i\u230b\u208a + 1 := by",
  "step": 8,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sum_div_nat_floor_le_sum_div_nat_floor_succ {n : \u2115} {f : \u2115 \u2192 \u211d}\n    (hf : \u2200 i, 0 < f i) :\n    \u2211 i \u2208 Finset.range n, f i / \u230af i\u230b\u208a \u2264 \u2211 i \u2208 Finset.range n, f i / \u230af i\u230b\u208a + 1 := by\n  induction n <;> simp_all [Finset.sum_range_succ]"
  ]
 },
 {
  "old": ": \u2200 x : \u211d, sin 3*x - sin x = 2*cos 2*x * sin x := by",
  "new": ": sin (3 * x) = 3 * sin x - 4 * sin x ^ 3 := by",
  "step": 8,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_three_mul : sin (3 * x) = 3 * sin x - 4 * sin x ^ 3 := by\n  have h\u2080 : x + 2 * x = 3 * x := by ring\n  rw [\u2190 h\u2080, sin_add x (2 * x)]\n  simp only [cos_two_mul, sin_two_mul, cos_sq']\n  have h\u2081 : cos x * (2 * sin x * cos x) = 2 * sin x * cos x ^ 2 := by ring\n  rw [h\u2081, cos_sq']\n  ring_nf",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_three_mul : sin (3 * x) = 3 * sin x - 4 * sin x ^ 3 := by\n  have h\u2081 : x + 2 * x = 3 * x := by ring\n  rw [\u2190 h\u2081, sin_add x (2 * x)]\n  simp only [cos_two_mul, sin_two_mul, cos_sq']\n  have h\u2082 : cos x * (2 * sin x * cos x) = 2 * sin x * cos x ^ 2 := by ring\n  rw [h\u2082, cos_sq']\n  ring_nf"
  ]
 },
 {
  "old": ": \u00ac\u2203 S : Set \u2115, \u2200 n : \u2115, n \u2208 S \u2228 (\u2200 m : \u2115, m \u2208 S \u2192 Nat.Coprime n m) := by",
  "new": "{m : \u2115+} : Coprime 0 m \u2194 m = 1 := by",
  "step": 8,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_zero_left {m : \u2115+} : Coprime 0 m \u2194 m = 1 := by\n  rw [coprime_comm]\n  simp [coprime_zero_left]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_zero_left {m : \u2115+} : Coprime 0 m \u2194 m = 1 := by\n  rw [Coprime, Nat.gcd_zero_left]\n  simp",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_zero_left {m : \u2115+} : Coprime 0 m \u2194 m = 1 := by\n  constructor <;> intro h <;> simpa using h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_zero_left {m : \u2115+} : Coprime 0 m \u2194 m = 1 := by\n  constructor <;>\n  simp (config := { contextual := true }) [Coprime, dvd_iff_mod_eq_zero, zero_lt_iff]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_zero_left {m : \u2115+} : Coprime 0 m \u2194 m = 1 := by\n  rw [coprime_comm]\n  simp [coprime_zero_right]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_zero_left {m : \u2115+} : Coprime 0 m \u2194 m = 1 := by\n  rw [coprime_comm]\n  simp [coprime_zero_left, pos_iff_ne_zero]"
  ]
 },
 {
  "old": "(a b : \u211d) (hab : 0 < a \u2227 0 < b) (h : a < b) : Real.log (1 + a / b) * Real.log (1 + b / a) < Real.log 2 ^ 2 := by",
  "new": "{a : \u211d} (h : 0 < a) : log (1 + a\u207b\u00b9) < a\u207b\u00b9 := by",
  "step": 8,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_one_add_inv_lt_of_pos {a : \u211d} (h : 0 < a) : log (1 + a\u207b\u00b9) < a\u207b\u00b9 := by\n  have h\u2081 : 0 < a\u207b\u00b9 := inv_pos.mpr h\n  have h\u2082 : 1 + a\u207b\u00b9 > 1 := by linarith\n  have h\u2083 : 0 < 1 + a\u207b\u00b9 := by linarith\n  have h\u2084 : log (1 + a\u207b\u00b9) < 1 + a\u207b\u00b9 - 1 := log_lt_sub_one_of_pos h\u2083 (by linarith)\n  simp at h\u2084\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_one_add_inv_lt_of_pos {a : \u211d} (h : 0 < a) : log (1 + a\u207b\u00b9) < a\u207b\u00b9 := by\n  have h\u2081 : 0 < a\u207b\u00b9 := inv_pos.mpr h\n  have h\u2082 : 0 < 1 + a\u207b\u00b9 := by linarith\n  have h\u2083 : log (1 + a\u207b\u00b9) < 1 + a\u207b\u00b9 - 1 := log_lt_sub_one_of_pos h\u2082 (by linarith)\n  simp at h\u2083\n  linarith"
  ]
 },
 {
  "old": "(\u03b8 : \u211d) : 4 * Real.sin \u03b8 * Real.sin (\u03c0 / 3 - \u03b8) * Real.sin (\u03c0 / 3 + \u03b8) = Real.sin (3 * \u03b8) := by",
  "new": ": sin (3 * \u03b8) = 3 * sin \u03b8 - 4 * sin \u03b8 ^ 3 := by",
  "step": 8,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_three_mul : sin (3 * \u03b8) = 3 * sin \u03b8 - 4 * sin \u03b8 ^ 3 := by\n  have h\u2080 : \u03b8 + 2 * \u03b8 = 3 * \u03b8 := by ring\n  rw [\u2190 h\u2080, sin_add]\n  simp only [cos_two_mul, sin_two_mul, cos_sq']\n  have h\u2081 : cos \u03b8 * (2 * sin \u03b8 * cos \u03b8) = 2 * sin \u03b8 * cos \u03b8 ^ 2 := by ring\n  rw [h\u2081, cos_sq']\n  ring_nf",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_three_mul : sin (3 * \u03b8) = 3 * sin \u03b8 - 4 * sin \u03b8 ^ 3 := by\n  rw [\u2190 Complex.ofReal_inj]\n  simp [Complex.sin_three_mul, Complex.sin_ofReal_re, Complex.ofReal_sub]"
  ]
 },
 {
  "old": "(x y z : \u2115) (h\u2081 : x \u2265 y) (h\u2082 : y \u2265 z) : (Nat.floor (x * y / z) : \u2115) \u2265 y * Nat.floor (x / z) := by",
  "new": "(x y : \u211d) (h : 0 \u2264 y) : \u230ax\u230b \u2264 \u230ax + y\u230b := by",
  "step": 8,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem Nat.floor_le_floor_add (x y : \u211d) (h : 0 \u2264 y) : \u230ax\u230b \u2264 \u230ax + y\u230b := by\n  exact Int.floor_mono <| by linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem Nat.floor_le_floor_add (x y : \u211d) (h : 0 \u2264 y) : \u230ax\u230b \u2264 \u230ax + y\u230b := by\n  exact Int.floor_mono (by linarith)"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 1) : (1 / a + 1) * (1 / b + 1) * (1 / c + 1) \u2265 64 := by",
  "new": "(a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 1) : a * b * c \u2264 1 / 27 := by",
  "step": 8,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 1) : a * b * c \u2264 1 / 27 := by\n  have h\u2080 : a * b * c \u2264 (a + b + c) ^ 3 / 27 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c)]\n  simp_all only [ha.2.2.2]\n  linarith"
  ]
 },
 {
  "old": "(n : \u2115) (m : \u2115) (A : Fin m \u2192 Finset \u2115) (hA : \u2200 i j, i \u2260 j \u2192 A i \u2229 A j \u2260 \u2205) : m \u2264 2 ^ (n - 1) := by",
  "new": "(A : Finset \u03b1) : A.card \u2264 1 \u2194 \u2200 a \u2208 A, \u2200 b \u2208 A, a = b := by",
  "step": 8,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem finset_card_le_one_iff_eq (A : Finset \u03b1) : A.card \u2264 1 \u2194 \u2200 a \u2208 A, \u2200 b \u2208 A, a = b := by\n  constructor <;> intro h <;> simp_all [Finset.card_le_one]\n  <;> intros a ha b hb <;> apply h <;> simp_all",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem finset_card_le_one_iff_eq (A : Finset \u03b1) : A.card \u2264 1 \u2194 \u2200 a \u2208 A, \u2200 b \u2208 A, a = b := by\n  constructor <;> intro h <;> simp_all [Finset.card_le_one]\n  <;> intros a ha b hb <;>\n  simpa [Finset.card_le_one] using h a ha b hb",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem finset_card_le_one_iff_eq (A : Finset \u03b1) : A.card \u2264 1 \u2194 \u2200 a \u2208 A, \u2200 b \u2208 A, a = b := by\n  constructor <;> intro h\n  <;> simp_all [Finset.card_le_one]\n  <;> intros\n  <;> aesop"
  ]
 },
 {
  "old": "(a b : \u2115) (h\u2080 : 0 < a \u2227 0 < b) (h\u2081 : \u2200 n, a^(2 * n - 1) \u2223 b^(2 * n)) (h\u2082 : \u2200 n, b^(2 * n) \u2223 a^(2 * n + 1)) : a = b := by",
  "new": "{a b : \u2115} (hab : a \u2223 b) (h : b / a = 1) : a = b := by",
  "step": 8,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem eq_of_dvd_of_div_eq_one {a b : \u2115} (hab : a \u2223 b) (h : b / a = 1) : a = b := by\n  rw [\u2190 Nat.div_mul_cancel hab]\n  simp [h]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem eq_of_dvd_of_div_eq_one {a b : \u2115} (hab : a \u2223 b) (h : b / a = 1) : a = b := by\n  rw [eq_comm]\n  rw [\u2190 Nat.mul_one a]\n  rw [\u2190 Nat.div_mul_cancel hab]\n  rw [h]\n  simp"
  ]
 },
 {
  "old": "(a : \u2115 \u2192 \u211d) (h : \u2200 i, -2 \u2264 a i \u2227 a i \u2264 10) : \u2211 i in Finset.range 101, (a i)^2 < 2020 := by",
  "new": "(n : \u2115) (a : \u2115 \u2192 \u211d) (h : \u2200 i, 0 \u2264 a i \u2227 a i \u2264 1) : \u2211 i in Finset.range n, a i ^ 2 \u2264 n := by",
  "step": 8,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sum_sq_le (n : \u2115) (a : \u2115 \u2192 \u211d) (h : \u2200 i, 0 \u2264 a i \u2227 a i \u2264 1) :\n    \u2211 i in Finset.range n, a i ^ 2 \u2264 n := by\n  induction n with\n  | zero => simp\n  | succ n ihn =>\n    rw [Finset.sum_range_succ]\n    have h\u2081 := h n\n    have h\u2082 := ihn\n    norm_num\n    nlinarith"
  ]
 },
 {
  "old": "(a b : \u211d) (h\u2080 : (a + 4)^3 + (a + 4) + 1 = 0) (h\u2081 : (3 - b)^3 + (3 - b) + 1 = 0) : a + b = -1 := by",
  "new": "(a b : \u211d) (h\u2080 : a \u2260 0) (h\u2081 : b \u2260 0) (h\u2082 : a + b = 1) : a * b + b * b = b := by",
  "step": 8,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mathd_algebra_214 (a b : \u211d) (h\u2080 : a \u2260 0) (h\u2081 : b \u2260 0) (h\u2082 : a + b = 1) :\n    a * b + b * b = b := by\n  have h\u2083 : b = 1 - a := by linarith\n  rw [h\u2083] at *\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mathd_algebra_214 (a b : \u211d) (h\u2080 : a \u2260 0) (h\u2081 : b \u2260 0) (h\u2082 : a + b = 1) :\n    a * b + b * b = b := by\n  rw [\u2190 sub_eq_zero] at h\u2082\n  have h\u2083 : a = 1 - b := by linarith\n  rw [h\u2083] at *\n  linarith"
  ]
 },
 {
  "old": "(n : \u2115) (hn : Odd n) (k : \u2124) : tan (2 * k * \u03c0 / n) = 2 * \u2211 i in Finset.range (n-1), (-1 : \u211d)^i * sin ((2 * (i + 1) * k * \u03c0) / n) := by",
  "new": "{k : \u2115} (h : Even k) (x : \u211d) : sin (2 * x) = 2 * sin x * cos x := by",
  "step": 8,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_two_mul {k : \u2115} (h : Even k) (x : \u211d) :\n    sin (2 * x) = 2 * sin x * cos x := by\n  rw [two_mul]\n  rw [sin_add, two_mul, add_mul, mul_comm]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_two_mul {k : \u2115} (h : Even k) (x : \u211d) :\n    sin (2 * x) = 2 * sin x * cos x := by\n  rw [two_mul, sin_add, two_mul]\n  ring",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_two_mul {k : \u2115} (h : Even k) (x : \u211d) :\n    sin (2 * x) = 2 * sin x * cos x := by\n  rw [two_mul, sin_add, two_mul, add_mul, mul_comm (cos x)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_two_mul {k : \u2115} (h : Even k) (x : \u211d) :\n    sin (2 * x) = 2 * sin x * cos x := by\n  rw [two_mul]\n  rw [sin_add]\n  ring"
  ]
 },
 {
  "old": "(x y : \u211d) (hx : x \u2260 0) (hy : y \u2260 0) : 2020 * x / y + y / (2020 * x) \u2265 2 * Real.sqrt ((2020 * x / y) * (y / (2020 * x))) := by",
  "new": "(x y : \u211d) (hx : x \u2265 0) (hy : y \u2265 0) (hxy : x + y \u2260 0) : x / (x + y) + y / (x + y) = 1 := by",
  "step": 9,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (x y : \u211d) (hx : x \u2265 0) (hy : y \u2265 0) (hxy : x + y \u2260 0) : x / (x + y) + y / (x + y) = 1 := by\n  field_simp [hxy]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (x y : \u211d) (hx : x \u2265 0) (hy : y \u2265 0) (hxy : x + y \u2260 0) : x / (x + y) + y / (x + y) = 1 := by\n  field_simp"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) (h : 1 / a + 1 / b + 1 / c + a * b * c / (a ^ 3 + b ^ 3 + c ^ 3) = 3) : a + b + c >= 27 / 8 := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : a + b + c >= 3 := by",
  "step": 9,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : a + b + c >= 3 := by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a + b + c)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : a + b + c >= 3 := by\n  nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (a - c), mul_self_nonneg (b - c),\n    mul_self_nonneg (a + b + c)]"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : x \u2265 0) (hy : y \u2265 0) (hz : z \u2265 0) (h : x * y + x * z + y * z = 3) : (x^(3/4:\u211d) + y^(3/4:\u211d) + z^(3/4:\u211d)) \u2265 3 := by",
  "new": "(x y z : \u211d) (hx : x \u2265 0) (hy : y \u2265 0) (hz : z \u2265 0) (h : x + y + z = 3) : x * y * z \u2264 1 := by",
  "step": 9,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (x y z : \u211d) (hx : x \u2265 0) (hy : y \u2265 0) (hz : z \u2265 0) (h : x + y + z = 3) : x * y * z \u2264 1 := by\n  have h' : (x + y + z) ^ 2 = 9 := by\n    rw [h]\n    norm_num\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_self_nonneg (x + y + z)]"
  ]
 },
 {
  "old": "(a b c : \u211d) : (a^4 / (2 * a^2 + b * c) + b^4 / (2 * b^2 + c * a) + c^4 / (2 * c^2 + a * b)) \u2264 (a^4 + b^4 + c^4) / (a^2 + b^2 + c^2) := by",
  "new": "(a b c d : \u211d) : a ^ 4 + b ^ 4 + c ^ 4 + d ^ 4 \u2265 4 * a * b * c * d := by",
  "step": 9,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_four (a b c d : \u211d) : a ^ 4 + b ^ 4 + c ^ 4 + d ^ 4 \u2265 4 * a * b * c * d := by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a + b), sq_nonneg (a - c), sq_nonneg (a + c),\n    sq_nonneg (a - d), sq_nonneg (a + d), sq_nonneg (b - c), sq_nonneg (b + c), sq_nonneg (b - d),\n    sq_nonneg (b + d), sq_nonneg (c - d), sq_nonneg (c + d)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_four (a b c d : \u211d) : a ^ 4 + b ^ 4 + c ^ 4 + d ^ 4 \u2265 4 * a * b * c * d := by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a + b), sq_nonneg (a - c), sq_nonneg (a + c), sq_nonneg (a - d), sq_nonneg (a + d), sq_nonneg (b - c), sq_nonneg (b + c), sq_nonneg (b - d), sq_nonneg (b + d), sq_nonneg (c - d), sq_nonneg (c + d)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_four (a b c d : \u211d) : a ^ 4 + b ^ 4 + c ^ 4 + d ^ 4 \u2265 4 * a * b * c * d := by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (a - d),\n    sq_nonneg (b - c), sq_nonneg (b - d), sq_nonneg (c - d),\n    mul_self_nonneg (a + b), mul_self_nonneg (a + c), mul_self_nonneg (a + d),\n    mul_self_nonneg (b + c), mul_self_nonneg (b + d), mul_self_nonneg (c + d)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_four (a b c d : \u211d) : a ^ 4 + b ^ 4 + c ^ 4 + d ^ 4 \u2265 4 * a * b * c * d := by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (a - d), sq_nonneg (b - c), sq_nonneg (b - d), sq_nonneg (c - d),\n    mul_self_nonneg (a + b), mul_self_nonneg (a + c), mul_self_nonneg (a + d), mul_self_nonneg (b + c), mul_self_nonneg (b + d),\n    mul_self_nonneg (c + d)]"
  ]
 },
 {
  "old": "(a b c : \u211d) : a^3 + b^3 + c^3 + 3*a*b*c \u2265 a*b*(a+b) + b*c*(b+c) + c*a*(c+a) := by",
  "new": "(a b c : \u211d) (hab : a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0) (h : a + b + c = 1) : a * b * c \u2264 1 / 27 := by",
  "step": 9,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b c : \u211d) (hab : a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0) (h : a + b + c = 1) : a * b * c \u2264 1 / 27 := by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n    mul_self_nonneg (a + b + c), mul_self_nonneg (a + b - c),\n    mul_self_nonneg (a + c - b), mul_self_nonneg (b + c - a)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) : (3 * a ^ 3 + a * b * c) / (b ^ 3 + c ^ 3) + (3 * b ^ 3 + a * b * c) / (c ^ 3 + a ^ 3) + (3 * c ^ 3 + a * b * c) / (a ^ 3 + b ^ 3) \u2265 6 := by",
  "new": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 1) : a * b * c \u2264 1 / 9 := by",
  "step": 9,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem amc12b_2013_p10 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 1) : a * b * c \u2264 1 / 9 := by\n  have h : a * b * c \u2264 (a + b + c) ^ 3 / 27 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  rw [hab] at h\n  linarith"
  ]
 },
 {
  "old": "(x y z : \u211d) : 4 * x^4 * z^2 + 4 * y^4 * x^2 + 4 * z^4 * y^2 + x^4 * y^2 + z^4 * x^2 + y^4 * z^2 \u2265 15 * x^2 * y^2 * z^2 := by",
  "new": "(x y z w : \u211d) : x ^ 4 + y ^ 4 + z ^ 4 + w ^ 4 \u2265 4 * x * y * z * w := by",
  "step": 9,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_four (x y z w : \u211d) : x ^ 4 + y ^ 4 + z ^ 4 + w ^ 4 \u2265 4 * x * y * z * w := by\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (x - w),\n    sq_nonneg (y - z), sq_nonneg (y - w), sq_nonneg (z - w),\n    sq_nonneg (x + y), sq_nonneg (x + z), sq_nonneg (x + w),\n    sq_nonneg (y + z), sq_nonneg (y + w), sq_nonneg (z + w)]"
  ]
 },
 {
  "old": "(n : \u2115) : (fib (n + 1) * fib (n + 2) * fib (n + 6)) - (fib (n + 3))^3 = (-1 : \u2124)^n * fib n := by",
  "new": "(n : \u2115) : fib (2 * n + 1) = fib (n + 1) ^ 2 + fib n ^ 2 := by",
  "step": 9,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem fib_two_mul_add_one (n : \u2115) : fib (2 * n + 1) = fib (n + 1) ^ 2 + fib n ^ 2 := by\n  rw [two_mul, fib_add]\n  ring",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem fib_two_mul_add_one (n : \u2115) : fib (2 * n + 1) = fib (n + 1) ^ 2 + fib n ^ 2 := by\n  rw [two_mul]\n  simp only [fib_add, fib_one, Nat.add_succ, Nat.succ_add]\n  ring"
  ]
 },
 {
  "old": "(n : \u2115) (h : 3 \u2223 n) (p : \u2115) (hp : p.Prime) (h3 : p \u2261 2 [ZMOD 3]) : \u00ac (p \u2223 (n^2 + 3*n + 9)) := by",
  "new": "{p a : \u2115} (hp : p.Prime) (hpa : \u00acp \u2223 a) : \u00acp \u2223 a ^ 2 := by",
  "step": 9,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem not_dvd_of_prime_of_not_dvd_sq {p a : \u2115} (hp : p.Prime) (hpa : \u00acp \u2223 a) : \u00acp \u2223 a ^ 2 := by\n  rw [pow_two]\n  exact mt (hp.dvd_mul.mp) (by simp_all)",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem not_dvd_of_prime_of_not_dvd_sq {p a : \u2115} (hp : p.Prime) (hpa : \u00acp \u2223 a) : \u00acp \u2223 a ^ 2 := by\n  simp only [pow_two]\n  exact mt (hp.dvd_mul.mp) (by simp_all)",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem not_dvd_of_prime_of_not_dvd_sq {p a : \u2115} (hp : p.Prime) (hpa : \u00acp \u2223 a) : \u00acp \u2223 a ^ 2 := by\n  rw [pow_two]\n  exact hp.not_dvd_mul hpa hpa",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem not_dvd_of_prime_of_not_dvd_sq {p a : \u2115} (hp : p.Prime) (hpa : \u00acp \u2223 a) : \u00acp \u2223 a ^ 2 := by\n  rw [sq]\n  exact hp.not_dvd_mul hpa hpa",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem not_dvd_of_prime_of_not_dvd_sq {p a : \u2115} (hp : p.Prime) (hpa : \u00acp \u2223 a) : \u00acp \u2223 a ^ 2 := by\n  rw [sq]\n  exact mt (hp.dvd_mul.mp) (by simp [hpa])"
  ]
 },
 {
  "old": "(a b c : \u211d) (k p : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hk : k > p) (hp : p >= 0) : (a^k / (b^p + c^p) + b^k / (c^p + a^p) + c^k / (a^p + b^p)) \u2265 (3^(1 - k + p) / 2) * (a + b + c)^(k - p) := by",
  "new": "(ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 1) : a * b * c \u2264 a^2 + b^2 + c^2 := by",
  "step": 9,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem geom_mean_le_arith_mean3_weighted (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 1) : a * b * c \u2264 a^2 + b^2 + c^2 := by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n    sq_nonneg (a + b + c)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem geom_mean_le_arith_mean3_weighted (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 1) : a * b * c \u2264 a^2 + b^2 + c^2 := by\n  have : a * b + b * c + c * a \u2264 a^2 + b^2 + c^2 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem geom_mean_le_arith_mean3_weighted (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 1) : a * b * c \u2264 a^2 + b^2 + c^2 := by\n  have h : a * b \u2264 a^2 + b^2 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a + b)]\n  nlinarith [h, sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem geom_mean_le_arith_mean3_weighted (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 1) : a * b * c \u2264 a^2 + b^2 + c^2 := by\n  have : a * b + a * c + b * c \u2264 a^2 + b^2 + c^2 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c)]"
  ]
 },
 {
  "old": "(a b c k : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hk : 1 / 3 \u2264 k \u2227 k \u2264 1) : a^2 + b^2 + c^2 + 3 * (k - 1) * (a * b + b * c + c * a) + 3 * k \u2265 3 * (k - 1) * a * b * c + (3 * k - 1) * (a + b + c) := by",
  "new": "(a b c k : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 1) (h : 1 / 3 \u2264 k \u2227 k \u2264 1) : a * b * c \u2264 (a + b) * (b + c) * (c + a) := by",
  "step": 9,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lemma_3 (a b c k : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 1) (h : 1 / 3 \u2264 k \u2227 k \u2264 1) :\n    a * b * c \u2264 (a + b) * (b + c) * (c + a) := by\n  have h\u2081 : 0 \u2264 (a + b) * (b + c) * (c + a) := by positivity\n  have h\u2082 : a * b * c \u2264 (a + b) * (b + c) * (c + a) := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lemma_3 (a b c k : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 1) (h : 1 / 3 \u2264 k \u2227 k \u2264 1) :\n    a * b * c \u2264 (a + b) * (b + c) * (c + a) := by\n  nlinarith [mul_nonneg ha hb, mul_nonneg hb hc, mul_nonneg hc ha,\n    mul_nonneg (add_nonneg ha hb) (add_nonneg hb hc),\n    mul_nonneg (add_nonneg hb hc) (add_nonneg hc ha)]"
  ]
 },
 {
  "old": "(x y z : \u211d) : (1 - x * y / z) * (1 - x * z / y) * (1 - y * z / x) \u2265 0 \u2194 x \u2265 y * z \u2227 y \u2265 z * x \u2227 z \u2265 x * y := by",
  "new": "{x y z : \u211d} (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : 0 \u2264 x * y * z \u2227 0 \u2264 x * z * y \u2227 0 \u2264 y * z * x \u2194 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z := by",
  "step": 9,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem nonneg_and_nonneg_and_nonneg_iff_of_pos_of_pos_of_pos {x y z : \u211d} (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) :\n    0 \u2264 x * y * z \u2227 0 \u2264 x * z * y \u2227 0 \u2264 y * z * x \u2194 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z := by\n  constructor <;> intro h <;> simp_all",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem nonneg_and_nonneg_and_nonneg_iff_of_pos_of_pos_of_pos {x y z : \u211d} (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) :\n    0 \u2264 x * y * z \u2227 0 \u2264 x * z * y \u2227 0 \u2264 y * z * x \u2194 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z := by\n  constructor <;> intro <;> simp_all\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem nonneg_and_nonneg_and_nonneg_iff_of_pos_of_pos_of_pos {x y z : \u211d} (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) :\n    0 \u2264 x * y * z \u2227 0 \u2264 x * z * y \u2227 0 \u2264 y * z * x \u2194 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z := by\n  constructor <;> intro <;> simp_all <;>\n    (try decide) <;>\n      nlinarith"
  ]
 },
 {
  "old": "(a b : \u211d) (ha : 0 < a) (hb : 0 < b) (hab : a^3 + b^3 + 2 * a * b = 24) : (a + 1 / a)^2 + (b + 1 / b)^2 \u2265 25 / 2 := by",
  "new": "(a b : \u211d) (ha : 0 < a) (hb : 0 < b) (hab : a + b = 1) : a^2 + b^2 \u2265 1 / 2 := by",
  "step": 9,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b : \u211d) (ha : 0 < a) (hb : 0 < b) (hab : a + b = 1) : a^2 + b^2 \u2265 1 / 2 := by\n  nlinarith [sq_nonneg (a - b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b : \u211d) (ha : 0 < a) (hb : 0 < b) (hab : a + b = 1) : a^2 + b^2 \u2265 1 / 2 := by\n  have h\u2081 : a^2 + b^2 \u2265 2 * a * b := by nlinarith [sq_nonneg (a - b)]\n  have h\u2082 : a * b \u2264 1 / 4 := by\n    calc\n      a * b \u2264 (a + b) ^ 2 / 4 := by nlinarith\n      _ = 1 / 4 := by rw [hab]; norm_num\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b : \u211d) (ha : 0 < a) (hb : 0 < b) (hab : a + b = 1) : a^2 + b^2 \u2265 1 / 2 := by\n  have h\u2080 : (a + b) ^ 2 = 1 := by rw [hab, one_pow]\n  have h\u2081 : a ^ 2 + b ^ 2 + 2 * a * b = 1 := by linarith\n  have h\u2082 : 2 * a * b \u2264 a ^ 2 + b ^ 2 := by linarith [sq_nonneg (a - b)]\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b : \u211d) (ha : 0 < a) (hb : 0 < b) (hab : a + b = 1) : a^2 + b^2 \u2265 1 / 2 := by\n  have h : (a - b) ^ 2 \u2265 0 := by nlinarith\n  nlinarith [h]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b : \u211d) (ha : 0 < a) (hb : 0 < b) (hab : a + b = 1) : a^2 + b^2 \u2265 1 / 2 := by\n  have h : 0 < a \u2227 0 < b := \u27e8ha, hb\u27e9\n  have h' : a^2 + b^2 \u2265 2 * a * b := by\n    nlinarith [sq_nonneg (a - b)]\n  nlinarith [h', hab]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_GM_inequality (a b : \u211d) (ha : 0 < a) (hb : 0 < b) (hab : a + b = 1) : a^2 + b^2 \u2265 1 / 2 := by\n  have h\u2081 : (a + b) ^ 2 = 1 := by rw [hab, one_pow]\n  have h\u2082 : a ^ 2 + 2 * a * b + b ^ 2 = 1 := by linarith\n  have h\u2083 : 2 * a * b = 2 * a * b := by linarith\n  have h\u2084 : a ^ 2 + b ^ 2 \u2265 1 / 2 := by linarith [sq_nonneg (a - b)]\n  linarith"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 1 \u2264 x) (hy : 1 \u2264 y) (hz : 1 \u2264 z) (h : x * y + y * z + z * x = x * y * z) : Real.sqrt (x - 1) + Real.sqrt (y - 1) + Real.sqrt (z - 1) \u2264 Real.sqrt (2 * (x + y + z)) := by",
  "new": "(h : c ^ 2 \u2264 a * b) : c \u2264 Real.sqrt (a * b) := by",
  "step": 9,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem le_sqrt_of_sq_le (h : c ^ 2 \u2264 a * b) : c \u2264 Real.sqrt (a * b) := by\n  apply Real.le_sqrt_of_sq_le\n  exact h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem le_sqrt_of_sq_le (h : c ^ 2 \u2264 a * b) : c \u2264 Real.sqrt (a * b) := by\n  apply Real.le_sqrt_of_sq_le\n  linarith"
  ]
 },
 {
  "old": "(n : \u2115) (x : Fin n \u2192 \u211d) (hx : \u220f i, x i = 1) : (\u2211 i, x i)^2 \u2264 n + (n - 1) * (\u2211 i, (x i)^2) := by",
  "new": "(n : \u2115) {x y : Fin n \u2192 \u211d} (h : \u2211 i, x i \u2264 \u2211 i, y i) (h' : \u2211 i, x i ^ 2 = \u2211 i, y i ^ 2) : \u2211 i, x i ^ 2 \u2264 \u2211 i, y i ^ 2 := by",
  "step": 9,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sum_sq_le_of_sum_le (n : \u2115) {x y : Fin n \u2192 \u211d} (h : \u2211 i, x i \u2264 \u2211 i, y i)\n     (h' : \u2211 i, x i ^ 2 = \u2211 i, y i ^ 2) : \u2211 i, x i ^ 2 \u2264 \u2211 i, y i ^ 2 := by\n  simpa [h'] using h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sum_sq_le_of_sum_le (n : \u2115) {x y : Fin n \u2192 \u211d} (h : \u2211 i, x i \u2264 \u2211 i, y i)\n     (h' : \u2211 i, x i ^ 2 = \u2211 i, y i ^ 2) : \u2211 i, x i ^ 2 \u2264 \u2211 i, y i ^ 2 := by\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sum_sq_le_of_sum_le (n : \u2115) {x y : Fin n \u2192 \u211d} (h : \u2211 i, x i \u2264 \u2211 i, y i)\n     (h' : \u2211 i, x i ^ 2 = \u2211 i, y i ^ 2) : \u2211 i, x i ^ 2 \u2264 \u2211 i, y i ^ 2 := by\n  linarith [sq_nonneg (\u2211 i, x i - \u2211 i, y i)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sum_sq_le_of_sum_le (n : \u2115) {x y : Fin n \u2192 \u211d} (h : \u2211 i, x i \u2264 \u2211 i, y i)\n     (h' : \u2211 i, x i ^ 2 = \u2211 i, y i ^ 2) : \u2211 i, x i ^ 2 \u2264 \u2211 i, y i ^ 2 := by\n  rw [h']"
  ]
 },
 {
  "old": "(a b : \u2124) (ha : 0 < a) (hb : 0 < b) : |a * Real.sqrt 2 - b| > 1 / (2 * (a + b)) := by",
  "new": "{a : \u211d} (ha : 0 \u2264 a) : \u221aa * \u221aa = a := by",
  "step": 9,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mul_self_sqrt {a : \u211d} (ha : 0 \u2264 a) : \u221aa * \u221aa = a := by rw [Real.mul_self_sqrt ha]"
  ]
 },
 {
  "old": "(a b c : \u211d) : sin (2 * b - 2 * c) * cos a + sin (b - c) * cos (a - b - c) = sin (2 * b - 2 * c) * cos a + sin (b - c) * cos (a - b - c) := by",
  "new": ": sin a - sin b = 2 * sin ((a - b) / 2) * cos ((a + b) / 2) := by",
  "step": 9,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_sub_sin : sin a - sin b = 2 * sin ((a - b) / 2) * cos ((a + b) / 2) := by\n  have h\u2080 : a = (a - b) / 2 + (a + b) / 2 := by ring\n  have h\u2081 : b = (a + b) / 2 - (a - b) / 2 := by ring\n  rw [h\u2080, h\u2081]\n  simp [sin_add, sin_sub, cos_add, cos_sub]\n  ring",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_sub_sin : sin a - sin b = 2 * sin ((a - b) / 2) * cos ((a + b) / 2) := by\n  have h\u2081 : a = (a - b) / 2 + (a + b) / 2 := by ring\n  have h\u2082 : b = (a + b) / 2 - (a - b) / 2 := by ring\n  rw [h\u2081, h\u2082]\n  simp [sin_add, sin_sub, cos_add, cos_sub]\n  ring",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_sub_sin : sin a - sin b = 2 * sin ((a - b) / 2) * cos ((a + b) / 2) := by\n  have h\u2080 : a = (a + b) / 2 + (a - b) / 2 := by ring\n  have h\u2081 : b = (a + b) / 2 - (a - b) / 2 := by ring\n  rw [h\u2080, h\u2081]\n  simp [sin_add, sin_sub, cos_add, cos_sub]\n  ring"
  ]
 },
 {
  "old": "(f g : \u211d \u2192 \u211d) (hf : f (g x) = (1 - x^2) / x^2) : f (1/2) = 1 := by",
  "new": "(f : \u211d \u2192 \u211d) (h\u2080 : \u2200 x, f x = x^2 - 2 * x + 1) (h\u2081 : f a = 0) : a = 1 := by",
  "step": 9,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mathd_algebra_246 (f : \u211d \u2192 \u211d) (h\u2080 : \u2200 x, f x = x^2 - 2 * x + 1) (h\u2081 : f a = 0) : a = 1 := by\n  rw [h\u2080] at h\u2081\n  have h\u2082 : (a - 1)^2 = 0 := by linarith\n  have h\u2083 : a - 1 = 0 := by apply pow_eq_zero h\u2082\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mathd_algebra_246 (f : \u211d \u2192 \u211d) (h\u2080 : \u2200 x, f x = x^2 - 2 * x + 1) (h\u2081 : f a = 0) : a = 1 := by\n  rw [h\u2080] at h\u2081;\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mathd_algebra_246 (f : \u211d \u2192 \u211d) (h\u2080 : \u2200 x, f x = x^2 - 2 * x + 1) (h\u2081 : f a = 0) : a = 1 := by\n  rw [h\u2080] at h\u2081; nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mathd_algebra_246 (f : \u211d \u2192 \u211d) (h\u2080 : \u2200 x, f x = x^2 - 2 * x + 1) (h\u2081 : f a = 0) : a = 1 := by\n  rw [h\u2080] at h\u2081\n  have : a = 1 := by\n    apply Eq.symm\n    nlinarith\n  exact this",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mathd_algebra_246 (f : \u211d \u2192 \u211d) (h\u2080 : \u2200 x, f x = x^2 - 2 * x + 1) (h\u2081 : f a = 0) : a = 1 := by\n  rw [h\u2080] at h\u2081\n  have h\u2082 : a = 1 := by\n    nlinarith\n  simp [h\u2082]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mathd_algebra_246 (f : \u211d \u2192 \u211d) (h\u2080 : \u2200 x, f x = x^2 - 2 * x + 1) (h\u2081 : f a = 0) : a = 1 := by\n  rw [h\u2080] at h\u2081\n  simp_all only [sq, sub_eq_zero, mul_one]\n  nlinarith"
  ]
 },
 {
  "old": ": \u2200 x : \u211d, sin 3*x - sin x = 2*cos 2*x * sin x := by",
  "new": ": sin (3 * x) = 3 * sin x - 4 * sin x ^ 3 := by",
  "step": 9,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_three_mul : sin (3 * x) = 3 * sin x - 4 * sin x ^ 3 := by\n  have h\u2081 : x + 2 * x = 3 * x := by ring\n  rw [\u2190 h\u2081, sin_add x (2 * x)]\n  simp only [cos_two_mul, sin_two_mul, cos_sq']\n  have h\u2082 : cos x * (2 * sin x * cos x) = 2 * sin x * cos x ^ 2 := by ring\n  rw [h\u2082, cos_sq']\n  ring",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_three_mul : sin (3 * x) = 3 * sin x - 4 * sin x ^ 3 := by\n  have h\u2081 : x + 2 * x = 3 * x := by ring\n  rw [\u2190 h\u2081, sin_add x (2 * x)]\n  simp only [cos_two_mul, sin_two_mul, cos_sq']\n  have h\u2082 : cos x * (2 * sin x * cos x) = 2 * sin x * cos x ^ 2 := by ring\n  rw [h\u2082, cos_sq']\n  ring_nf"
  ]
 },
 {
  "old": ": \u00ac\u2203 S : Set \u2115, \u2200 n : \u2115, n \u2208 S \u2228 (\u2200 m : \u2115, m \u2208 S \u2192 Nat.Coprime n m) := by",
  "new": "{m : \u2115+} : Coprime 0 m \u2194 m = 1 := by",
  "step": 9,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_zero_left {m : \u2115+} : Coprime 0 m \u2194 m = 1 := by\n  rw [coprime_comm]\n  simp [coprime_zero_left]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_zero_left {m : \u2115+} : Coprime 0 m \u2194 m = 1 := by\n  rw [coprime_comm]\n  simp [coprime_zero_right]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_zero_left {m : \u2115+} : Coprime 0 m \u2194 m = 1 := by\n  simp [Coprime, Nat.isUnit_iff, Nat.gcd_zero_left]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_zero_left {m : \u2115+} : Coprime 0 m \u2194 m = 1 := by\n  simp [Coprime, Nat.gcd_zero_left]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_zero_left {m : \u2115+} : Coprime 0 m \u2194 m = 1 := by\n  rw [coprime_comm]\n  rw [coprime_zero_right]\n  constructor <;> intro h <;> simp_all",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_zero_left {m : \u2115+} : Coprime 0 m \u2194 m = 1 := by\n  rw [coprime_comm]\n  rw [coprime_zero_right]\n  constructor <;> intro h <;> simpa using h"
  ]
 },
 {
  "old": "(\u03b8 : \u211d) : 4 * Real.sin \u03b8 * Real.sin (\u03c0 / 3 - \u03b8) * Real.sin (\u03c0 / 3 + \u03b8) = Real.sin (3 * \u03b8) := by",
  "new": ": sin (3 * \u03b8) = 3 * sin \u03b8 - 4 * sin \u03b8 ^ 3 := by",
  "step": 9,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_three_mul : sin (3 * \u03b8) = 3 * sin \u03b8 - 4 * sin \u03b8 ^ 3 := by\n  rw [\u2190 Complex.ofReal_inj]\n  simp [Complex.sin_three_mul, Complex.sin_ofReal_re, Complex.mul_re, Complex.sub_re,\n    Complex.ofReal_re]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) : (1 - a ^ 2) ^ 2 + (1 - b ^ 2) ^ 2 + (1 - c ^ 2) ^ 2 \u2265 2 := by",
  "new": "{a b c : \u211d} (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) : a * b * (a + b) + a * c * (a + c) + b * c * (b + c) \u2264 1 := by",
  "step": 9,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lemma_2 {a b c : \u211d} (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) : a * b * (a + b) + a * c * (a + c) + b * c * (b + c) \u2264 1 := by\n  have hab : a + b \u2264 1 := by linarith\n  have hbc : b + c \u2264 1 := by linarith\n  have hca : a + c \u2264 1 := by linarith\n  calc\n    a * b * (a + b) + a * c * (a + c) + b * c * (b + c) \u2264 a * b * 1 + a * c * 1 + b * c * 1 := by\n      gcongr <;> nlinarith\n    _ = a * b + a * c + b * c := by ring\n    _ \u2264 1 := by nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lemma_2 {a b c : \u211d} (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) : a * b * (a + b) + a * c * (a + c) + b * c * (b + c) \u2264 1 := by\n  have h\u2080 : a * b * (a + b) + a * c * (a + c) + b * c * (b + c) \u2264 a * a * (a + b + c) + b * b * (a + b + c) + c * c * (a + b + c) := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c)]\n  rw [habc] at h\u2080\n  nlinarith [sq_nonneg a, sq_nonneg b, sq_nonneg c]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (1 / a + 1 / b + 1 / c = 1 \u2192 a / (a + b * c) + b / (b + c * a) + c / (c + a * b) \u2265 3 / 4) := by",
  "new": "(a b : \u211d) (hab : 0 < a \u2227 0 < b) : (a + b) / 2 \u2265 2 / (1 / a + 1 / b) := by",
  "step": 9,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_HM_inequality (a b : \u211d) (hab : 0 < a \u2227 0 < b) : (a + b) / 2 \u2265 2 / (1 / a + 1 / b) := by\n  field_simp [hab.1.ne', hab.2.ne']\n  rw [div_le_div_iff]\n  ring_nf\n  nlinarith [sq_nonneg (a - b)]\n  nlinarith\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem AM_HM_inequality (a b : \u211d) (hab : 0 < a \u2227 0 < b) : (a + b) / 2 \u2265 2 / (1 / a + 1 / b) := by\n  field_simp [hab.1.ne', hab.2.ne']\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (a - b)]\n  nlinarith\n  nlinarith"
  ]
 },
 {
  "old": ": 4 * (4 * (Real.sqrt 2 - 1) / 3) ^ 3 \u2264 4 * (3 - 2 * Real.sqrt 2) := by",
  "new": ": 2 + 2 * Real.sqrt 2 \u2264 9 := by",
  "step": 9,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sqrt_two_add_two_sqrt_two_le_three : 2 + 2 * Real.sqrt 2 \u2264 9 := by\n  norm_num\n  nlinarith [Real.sq_sqrt (show 0 \u2264 2 by norm_num)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sqrt_two_add_two_sqrt_two_le_three : 2 + 2 * Real.sqrt 2 \u2264 9 := by\n  norm_num\n  have h\u2080 : 0 \u2264 2 * Real.sqrt 2 := by positivity\n  have h\u2081 : (Real.sqrt 2) ^ 2 = 2 := by norm_num [Real.sq_sqrt]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sqrt_two_add_two_sqrt_two_le_three : 2 + 2 * Real.sqrt 2 \u2264 9 := by\n  norm_num\n  nlinarith [Real.sq_sqrt (show (0 : \u211d) \u2264 2 by norm_num)]"
  ]
 },
 {
  "old": "(a b : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b) (h : Real.sqrt (a ^ 2 + 3 * b) + Real.sqrt (b ^ 2 + 3 * a) + 2 * Real.sqrt (3 * a + 1) = 4) : a + b \u2264 (7 - Real.sqrt 33) / 2 := by",
  "new": "(a b : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b) (h : a ^ 2 + b ^ 2 = 1) (h2 : a ^ 3 + b ^ 3 = 1) (h3 : a ^ 4 + b ^ 4 = 1) : a ^ 6 + b ^ 6 = 1 := by",
  "step": 9,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem amc12a_2018_p12 (a b : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b) (h : a ^ 2 + b ^ 2 = 1)\n    (h2 : a ^ 3 + b ^ 3 = 1) (h3 : a ^ 4 + b ^ 4 = 1) : a ^ 6 + b ^ 6 = 1 := by\n  have h4 : a ^ 6 + b ^ 6 = (a ^ 2 + b ^ 2) * (a ^ 4 + b ^ 4) - a ^ 2 * b ^ 2 * (a ^ 2 + b ^ 2) := by\n    ring\n  rw [h, h3] at h4\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem amc12a_2018_p12 (a b : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b) (h : a ^ 2 + b ^ 2 = 1)\n    (h2 : a ^ 3 + b ^ 3 = 1) (h3 : a ^ 4 + b ^ 4 = 1) : a ^ 6 + b ^ 6 = 1 := by\n  have h4 : a ^ 6 + b ^ 6 = (a ^ 2 + b ^ 2) ^ 3 - 3 * a ^ 2 * b ^ 2 * (a ^ 2 + b ^ 2) := by\n    ring\n  rw [h4, h, mul_one]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem amc12a_2018_p12 (a b : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b) (h : a ^ 2 + b ^ 2 = 1)\n    (h2 : a ^ 3 + b ^ 3 = 1) (h3 : a ^ 4 + b ^ 4 = 1) : a ^ 6 + b ^ 6 = 1 := by\n  rw [show a ^ 6 + b ^ 6 = (a ^ 2 + b ^ 2) ^ 3 - 3 * a ^ 2 * b ^ 2 * (a ^ 2 + b ^ 2) by ring]\n  simp_all only [mul_one, mul_zero, add_zero, zero_add, mul_neg, mul_one, mul_zero, add_zero]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem amc12a_2018_p12 (a b : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b) (h : a ^ 2 + b ^ 2 = 1)\n    (h2 : a ^ 3 + b ^ 3 = 1) (h3 : a ^ 4 + b ^ 4 = 1) : a ^ 6 + b ^ 6 = 1 := by\n  rw [show a ^ 6 + b ^ 6 = (a ^ 2 + b ^ 2) * (a ^ 4 + b ^ 4) - a ^ 2 * b ^ 2 * (a ^ 2 + b ^ 2) by\n    ring]\n  rw [h, h3]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem amc12a_2018_p12 (a b : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b) (h : a ^ 2 + b ^ 2 = 1)\n    (h2 : a ^ 3 + b ^ 3 = 1) (h3 : a ^ 4 + b ^ 4 = 1) : a ^ 6 + b ^ 6 = 1 := by\n  rw [show a ^ 6 + b ^ 6 = (a ^ 2 + b ^ 2) * (a ^ 4 + b ^ 4) - a ^ 2 * b ^ 2 * (a ^ 2 + b ^ 2) by\n    ring]\n  simp_all only [mul_one, mul_zero, sub_zero]\n  nlinarith"
  ]
 },
 {
  "old": "(a b : \u211d) (h\u2080 : (a + 4)^3 + (a + 4) + 1 = 0) (h\u2081 : (3 - b)^3 + (3 - b) + 1 = 0) : a + b = -1 := by",
  "new": "(a b : \u211d) (h\u2080 : a \u2260 0) (h\u2081 : b \u2260 0) (h\u2082 : a + b = 1) : a * b + b * b = b := by",
  "step": 9,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mathd_algebra_214 (a b : \u211d) (h\u2080 : a \u2260 0) (h\u2081 : b \u2260 0) (h\u2082 : a + b = 1) :\n    a * b + b * b = b := by\n  have h\u2083 : a = 1 - b := by linarith\n  rw [h\u2083] at *\n  nlinarith"
  ]
 },
 {
  "old": "(n : \u2124) (a b : \u211d) (ha : 0 < a) (hb : 0 < b) (hab : a + b = 2) : (a^n + b)/(a + 1) + (b^n + a)/(b + 1) \u2265 2 := by",
  "new": "(a b : \u211d) (ha : 0 < a) (hb : 0 < b) (hab : a + b = 1) : a^3 / (a^3 + b^3) + b^3 / (a^3 + b^3) \u2264 1 := by",
  "step": 9,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem amc12b_2013_p10 (a b : \u211d) (ha : 0 < a) (hb : 0 < b) (hab : a + b = 1) :\n    a^3 / (a^3 + b^3) + b^3 / (a^3 + b^3) \u2264 1 := by\n  rw [\u2190 hab]\n  have h\u2080 : a^3 + b^3 > 0 := by positivity\n  have h\u2081 : a^3 + b^3 \u2260 0 := by linarith\n  field_simp [h\u2081]\n  nlinarith [sq_nonneg (a - b)]"
  ]
 },
 {
  "old": ": \u2200 x : \u211d, (sin x ^ 6 + cos x ^ 6) / 6 - (sin x ^ 4 + cos x ^ 4) / 4 = -1 / 12 := by",
  "new": "(x : \u211d) : sin x ^ 2 + cos x ^ 2 = 1 := by",
  "step": 9,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_sq_add_cos_sq (x : \u211d) : sin x ^ 2 + cos x ^ 2 = 1 := by\n  rw [add_comm, cos_sq_add_sin_sq]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_sq_add_cos_sq (x : \u211d) : sin x ^ 2 + cos x ^ 2 = 1 := by\n  rw [\u2190 cos_sq_add_sin_sq x]\n  ring",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_sq_add_cos_sq (x : \u211d) : sin x ^ 2 + cos x ^ 2 = 1 := by\n  rw [sin_sq, cos_sq]\n  ring",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_sq_add_cos_sq (x : \u211d) : sin x ^ 2 + cos x ^ 2 = 1 := by\n  rw [Real.sin_sq, Real.cos_sq]\n  ring",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_sq_add_cos_sq (x : \u211d) : sin x ^ 2 + cos x ^ 2 = 1 := by\n  rw [sin_sq, cos_sq, \u2190 sub_eq_zero]\n  ring"
  ]
 },
 {
  "old": "(n : \u2115) (x y : \u2115 \u2192 \u2115) : \u2211 i in Finset.range n, x i * y i \u2265 1 / n * (\u2211 i in Finset.range n, x i) * (\u2211 i in Finset.range n, y i) := by",
  "new": "(n : \u2115) (x y : \u2115 \u2192 \u211d) : (\u2211 i in Finset.range n, x i * y i) ^ 2 \u2264 (\u2211 i in Finset.range n, x i ^ 2) * (\u2211 i in Finset.range n, y i ^ 2) := by",
  "step": 9,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem cauchy_schwarz_inequality (n : \u2115) (x y : \u2115 \u2192 \u211d) :\n    (\u2211 i in Finset.range n, x i * y i) ^ 2 \u2264 (\u2211 i in Finset.range n, x i ^ 2) * (\u2211 i in Finset.range n, y i ^ 2) := by\n  exact?"
  ]
 },
 {
  "old": "(y : \u211d \u2192 \u211d) (h\u2081 : \u2200 t, y t \u2208 Set.Icc (1/3) (1/3 + t)) : False := by",
  "new": "(x : \u211d) (h : x \u2208 Set.Icc 1 1) : x \u2264 1 := by",
  "step": 9,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem le_one_of_mem_Icc_one_one (x : \u211d) (h : x \u2208 Set.Icc 1 1) : x \u2264 1 := by\n  cases' h with h\u2080 h\u2081\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem le_one_of_mem_Icc_one_one (x : \u211d) (h : x \u2208 Set.Icc 1 1) : x \u2264 1 := by\n  exact h.2",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem le_one_of_mem_Icc_one_one (x : \u211d) (h : x \u2208 Set.Icc 1 1) : x \u2264 1 := by\n  cases' h with h\u2081 h\u2082\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem le_one_of_mem_Icc_one_one (x : \u211d) (h : x \u2208 Set.Icc 1 1) : x \u2264 1 := by\n  simp at h\n  linarith"
  ]
 },
 {
  "old": ": \u2200 \u03b5 : \u211d, \u03b5 > 0 \u2192 \u2203 \u03b4 : \u211d, \u03b4 > 0 \u2227 \u2200 x : \u211d, x \u2260 0 \u2227 |x| < \u03b4 \u2192 |(Real.sqrt (1 - Real.cos (x^2)) / (1 - Real.cos x)) - Real.sqrt 2| < \u03b5 := by",
  "new": "(x : \u211d) : cos x ^ 2 \u2264 1 := by",
  "step": 9,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem cos_sq_le_one (x : \u211d) : cos x ^ 2 \u2264 1 := by\n  have h : 0 \u2264 cos x ^ 2 + sin x ^ 2 := by nlinarith [cos_sq_add_sin_sq x]\n  nlinarith [cos_sq_add_sin_sq x]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem cos_sq_le_one (x : \u211d) : cos x ^ 2 \u2264 1 := by\n  nlinarith [cos_sq_add_sin_sq x]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem cos_sq_le_one (x : \u211d) : cos x ^ 2 \u2264 1 := by\n  have h\u2080 : 0 \u2264 cos x ^ 2 := by apply sq_nonneg\n  have h\u2081 : cos x ^ 2 \u2264 1 := by\n    nlinarith [cos_sq_add_sin_sq x]\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem cos_sq_le_one (x : \u211d) : cos x ^ 2 \u2264 1 := by\n  have h : cos x ^ 2 + sin x ^ 2 = 1 := Real.cos_sq_add_sin_sq x\n  linarith [sq_nonneg (sin x)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem cos_sq_le_one (x : \u211d) : cos x ^ 2 \u2264 1 := by\n  have h : cos x ^ 2 + sin x ^ 2 = 1 := by apply Real.cos_sq_add_sin_sq\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem cos_sq_le_one (x : \u211d) : cos x ^ 2 \u2264 1 := by\n  have h\u2081 : cos x ^ 2 + sin x ^ 2 = 1 := cos_sq_add_sin_sq x\n  nlinarith [h\u2081]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (hab : a * b + a * c + b * c \u2260 0) : (a^2 + b^2) / (c^2 + a * b) + (b^2 + c^2) / (a^2 + b * c) + (c^2 + a^2) / (b^2 + a * c) \u2265 3 + (a^2 + b^2 + c^2 - a * b - a * c - b * c) / (a * b + a * c + b * c) := by",
  "new": "{a b c : \u211d} (hab : a + b \u2264 c) (hpos : 0 < a \u2227 0 < b \u2227 0 < c) : a / c + b / c \u2264 1 := by",
  "step": 9,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem add_div_le_one_of_add_le_mul {a b c : \u211d} (hab : a + b \u2264 c) (hpos : 0 < a \u2227 0 < b \u2227 0 < c) :\n    a / c + b / c \u2264 1 := by\n  rw [div_add_div_same]\n  exact (div_le_one (by linarith)).mpr hab",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem add_div_le_one_of_add_le_mul {a b c : \u211d} (hab : a + b \u2264 c) (hpos : 0 < a \u2227 0 < b \u2227 0 < c) :\n    a / c + b / c \u2264 1 := by\n  have h : a + b \u2264 c := hab\n  have h\u2081 : a / c + b / c = (a + b) / c := by field_simp [hpos.1.ne', hpos.2.1.ne', hpos.2.2.ne']\n  rw [h\u2081]\n  exact div_le_one_of_le h (by linarith)",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem add_div_le_one_of_add_le_mul {a b c : \u211d} (hab : a + b \u2264 c) (hpos : 0 < a \u2227 0 < b \u2227 0 < c) :\n    a / c + b / c \u2264 1 := by\n  rw [div_add_div_same]\n  exact (div_le_one hpos.2.2).mpr hab",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem add_div_le_one_of_add_le_mul {a b c : \u211d} (hab : a + b \u2264 c) (hpos : 0 < a \u2227 0 < b \u2227 0 < c) :\n    a / c + b / c \u2264 1 := by\n  rw [div_add_div_same]\n  apply div_le_one_of_le\n  linarith\n  linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 1 < a) (hb : 1 < b) (hc : 1 < c) : (1 / (a ^ 2 - 1) + 1 / (b ^ 2 - 1) + 1 / (c ^ 2 - 1) = 1 \u2192 1 / (a + 1) + 1 / (b + 1) + 1 / (c + 1) \u2264 1) := by",
  "new": "{a b c : \u211d} (ha : 1 < a) (hb : 1 < b) (hc : 1 < c) (habc : a * b * c = 1) : 1 / (a + 1) + 1 / (b + 1) + 1 / (c + 1) \u2264 1 := by",
  "step": 9,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lemma_1 {a b c : \u211d} (ha : 1 < a) (hb : 1 < b) (hc : 1 < c) (habc : a * b * c = 1) :\n    1 / (a + 1) + 1 / (b + 1) + 1 / (c + 1) \u2264 1 := by\n  field_simp\n  rw [\u2190 mul_le_mul_left (show (0 : \u211d) < 2 by norm_num)]\n  nlinarith [mul_pos (sub_pos.mpr ha) (mul_pos (sub_pos.mpr hb) (sub_pos.mpr hc))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lemma_1 {a b c : \u211d} (ha : 1 < a) (hb : 1 < b) (hc : 1 < c) (habc : a * b * c = 1) :\n    1 / (a + 1) + 1 / (b + 1) + 1 / (c + 1) \u2264 1 := by\n  rw [add_assoc]\n  apply le_of_sub_nonneg\n  field_simp\n  ring_nf\n  nlinarith [mul_pos (sub_pos.mpr ha) (mul_pos (sub_pos.mpr hb) (sub_pos.mpr hc))]"
  ]
 },
 {
  "old": "(p : \u2115) (hp : 3 \u2264 p) : \u2203 n : \u2115, (4^n \u2261 n^2 [ZMOD p]) \u2227 (4^(n+1) \u2261 (n+1)^2 [ZMOD p]) := by",
  "new": "(hp3 : p % 4 = 3) (hp : p.Prime) (h : \u2203 y : ZMod p, y \u2260 0 \u2227 y ^ 2 = -1) : \u2203 x : ZMod p, x ^ 2 = p := by",
  "step": 9,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem exists_sq_eq_prime_iff_of_mod_four_eq_three (hp3 : p % 4 = 3) (hp : p.Prime)\n     (h : \u2203 y : ZMod p, y \u2260 0 \u2227 y ^ 2 = -1) : \u2203 x : ZMod p, x ^ 2 = p := by\n  obtain \u27e8y, hy\u2081, hy\u2082\u27e9 := h\n  use 0\n  simpa [pow_two] using hp3",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem exists_sq_eq_prime_iff_of_mod_four_eq_three (hp3 : p % 4 = 3) (hp : p.Prime)\n     (h : \u2203 y : ZMod p, y \u2260 0 \u2227 y ^ 2 = -1) : \u2203 x : ZMod p, x ^ 2 = p := by\n  let y := h.choose\n  let hy := h.choose_spec\n  use 0\n  simp [hy]"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : x \u2208 Set.Icc 0 1) (hy : y \u2208 Set.Icc 0 1) (hz : z \u2208 Set.Icc 0 1) : 2 * ((x - x ^ 2) / (x ^ 2 - x + 1) + (y - y ^ 2) / (y ^ 2 - y + 1) + (z - z ^ 2) / (z ^ 2 - z + 1)) \u2265 (xyz - x ^ 2) / (x ^ 2 - xyz + 1) + (xyz - y ^ 2) / (y ^ 2 - xyz + 1) + (xyz - z ^ 2) / (z ^ 2 - xyz + 1) := by",
  "new": "(x y z : \u211d) (hx : x \u2208 Set.Icc 0 1) (hy : y \u2208 Set.Icc 0 1) (hz : z \u2208 Set.Icc 0 1) (h : x + y + z = 1) : x * y * z \u2264 1 / 8 := by",
  "step": 9,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lemma_1 (x y z : \u211d) (hx : x \u2208 Set.Icc 0 1) (hy : y \u2208 Set.Icc 0 1) (hz : z \u2208 Set.Icc 0 1) (h : x + y + z = 1) : x * y * z \u2264 1 / 8 := by\n  cases' hx with hx\u2081 hx\u2082\n  cases' hy with hy\u2081 hy\u2082\n  cases' hz with hz\u2081 hz\u2082\n  have h\u2081 : x * y \u2264 1 / 4 := by\n    nlinarith [sq_nonneg (x - y)]\n  have h\u2082 : x * z \u2264 1 / 4 := by\n    nlinarith [sq_nonneg (x - z)]\n  have h\u2083 : y * z \u2264 1 / 4 := by\n    nlinarith [sq_nonneg (y - z)]\n  nlinarith"
  ]
 }
]