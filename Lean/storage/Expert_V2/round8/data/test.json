[{"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1180 (a b c : \u211d) : (a + a * b ^ (1 / 2) + a * b * c ^ (1 / 3)) / 3 \u2264 (a * (a + b) / 2) ^ (1 / 3) * (a + b + c) ^ (1 / 3) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1180_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) : a ^ 2 * b ^ 2 * c ^ 2 * (a + b + c) \u2264 (a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2) * (c ^ 2 + a ^ 2) * (a + b + c) \u2227 a * b * c * (a * b * c) \u2264 (a * b) * (b * c) * (c * a):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_5657_plus (a b c : \u211d) (habc : a * b * c = 1) (h : 0 < a \u2227 0 < b \u2227 0 < c) : a ^ 2 + b ^ 2 + c ^ 2 + (1 / a + 1 / b + 1 / c) \u2265 3 * (Real.sqrt 3) * (1 / 3):= by", "target": "\n  have h\u2080 : 0 < a := by linarith\n  have h\u2081 : 0 < b := by linarith\n  have h\u2082 : 0 < c := by linarith\n  have h\u2083 : 0 < a * b := by positivity\n  have h\u2084 : 0 < b * c := by positivity\n  have h\u2085 : 0 < c * a := by positivity\n  have h\u2086 : 0 < a * b * c := by positivity\n  have h\u2087 : Real.sqrt 3 \u2264 3 := by norm_num [Real.sqrt_le_iff]\n  have h\u2088 : 1 / a + 1 / b + 1 / c \u2265 0 := by positivity\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 by norm_num),\n    mul_self_nonneg (a - b),\n    mul_self_nonneg (b - c),\n    mul_self_nonneg (c - a)]\n  <;> linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_12625_plus (x : \u211d) (hx: 1 \u2264 x) : \u2203 y, y \u2265 0 \u2227 1 + x ^ 2 + y ^ 2 \u2265 2 * x * y \u2227 x ^ 2 + x + 1 \u2265 2 * Real.sqrt (x + 1):= by", "target": "\n  refine' \u27e81, by linarith, _, _\u27e9\n  nlinarith [sq_nonneg (x - 1)]\n  have h\u2080 : 0 \u2264 (x - 1) ^ 2 := sq_nonneg (x - 1)\n  have h\u2081 : 0 \u2264 Real.sqrt (x + 1) := Real.sqrt_nonneg (x + 1)\n  nlinarith [sq_sqrt (show 0 \u2264 x + 1 from by linarith),\n    mul_self_nonneg (x - Real.sqrt (x + 1))]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_5822_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a + b + c \u2264 3) (h\u2083 : a * b + b * c + c * a \u2264 3) :\n  (a + b)^2 * (a + c)^2 * (b + c)^2 \u2265 27 * (a * b * c)^2:= by", "target": "\n  rcases h\u2081 with \u27e8ha, hb, hc\u27e9\n  have : 0 \u2264 a * b := by positivity\n  have : 0 \u2264 b * c := by positivity\n  have : 0 \u2264 c * a := by positivity\n  have : 0 \u2264 a * b * c := by positivity\n  have h\u2084 : a * b + b * c + c * a \u2264 3 := h\u2083\n  have h\u2085 : (a + b)^2 * (a + c)^2 * (b + c)^2 \u2265 27 * (a * b * c)^2 := by\n    ring_nf\n    nlinarith [sq_nonneg (a * b + b * c + c * a),\n      sq_nonneg (a * b - b * c),\n      sq_nonneg (b * c - c * a),\n      sq_nonneg (c * a - a * b),\n      mul_self_nonneg (a * b * c)]\n  exact h\u2085"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_24644_plus : \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a * b * c \u2265 0 \u2227 a + b + c = 3 \u2227 a * b + b * c + c * a \u2264 3 \u2192 (1 + a ^ 2) * (1 + b ^ 2) * (1 + c ^ 2) \u2265 8 * (a * b * c):= by", "target": "\n  rintro a b c \u27e8ha, hb, hc, habc, hab, hbc\u27e9\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b - 1), mul_self_nonneg (b * c - 1), mul_self_nonneg (c * a - 1)]\n  <;> simp [*]\n  <;> linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3092 (a : \u211d) (n : \u2115) (h : a > -1) : (1 + a)^n \u2265 1 + n * a := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3092_plus (a : \u211d) (n : \u2115) (h\u2081 : 0 < n) (h\u2082 : 0 \u2264 a) : (1 + a)^n \u2265 1 + n * a - (n * (n - 1) * a^2) / 2 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_71384_plus (a b : \u2124) (h\u2081 : 0 < a \u2227 0 < b) (h\u2082 : a \u2260 b) :  a \u2223 b ^ 2 \u2227 b \u2223 a ^ 2 \u2194 a \u2223 b ^ 2 \u2227 b \u2223 a ^ 2 \u2228 a \u2223 b \u2227 b \u2223 a := by", "target": "\n  rcases h\u2081 with \u27e8h\u2081_left, h\u2081_right\u27e9\n  constructor\n  intro h\n  exact Or.inl \u27e8h.1, h.2\u27e9\n  intro h\n  rcases h with (\u27e8h\u2081, h\u2082\u27e9 | \u27e8h\u2081, h\u2082\u27e9) <;> simp_all [dvd_pow]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4246 (x : \u211d) : x = 4 - 2 * Real.sqrt 2 * Real.log (1 + Real.sqrt 2) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4246_plus (x : \u211d) (hx : 0 < x) : x ^ 2 \u2264 16 \u2227 0 \u2264 Real.sqrt 2 * (x - 2) ^ 2 \u2194 x \u2264 4 \u2227 0 \u2264 Real.sqrt 2 * (x - 2) ^ 2 \u2228 x \u2265 4 \u2227 Real.sqrt 2 * (x - 2) ^ 2 \u2264 0 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_19884_plus (x y z : \u211d) (hx : 0 \u2264 x \u2227 x \u2264 1) (hy : 0 \u2264 y \u2227 y \u2264 1) (hz : 0 \u2264 z \u2227 z \u2264 1) (h : x ^ 2 + y ^ 2 + z ^ 2 = 1) : x ^ 2 * y ^ 2 * z ^ 2 * (x + y + z) \u2264 1 \u2227 x * y * z * (x * y + x * z + y * z) \u2264 1 \u2227 x * y * z * (x * y + x * z + y * z) \u2264 1 \u2227 x * y * z * (x * y + x * z + y * z) \u2264 1 \u2227 x * y * z * (x * y + x * z + y * z) \u2264 1 \u2227 x * y * z * (x * y + x * z + y * z) \u2264 1 \u2227 x * y * z * (x * y + x * z + y * z) \u2264 1 \u2227 x * y * z * (x * y + x * z + y * z) \u2264 1 \u2227 x * y * z * (x * y + x * z + y * z) \u2264 1 \u2227 x * y * z * (x * y + x * z + y * z) \u2264 1 \u2227 x * y * z * (x * y + x * z + y * z) \u2264 1 := by", "target": "\n  have h\u2080 : 0 \u2264 x * y := by nlinarith\n  have h\u2081 : 0 \u2264 x * z := by nlinarith\n  have h\u2082 : 0 \u2264 y * z := by nlinarith\n  have h\u2083 : 0 \u2264 x * y * z := by nlinarith\n  have h\u2084 : x * y \u2264 1 := by nlinarith\n  have h\u2085 : x * z \u2264 1 := by nlinarith\n  have h\u2086 : y * z \u2264 1 := by nlinarith\n  have h\u2087 : x * y * z \u2264 1 := by nlinarith\n  have h\u2088 : x * y * z * (x + y + z) \u2264 1 := by nlinarith\n  have h\u2089 : x * y * z * (x * y + x * z + y * z) \u2264 1 := by nlinarith\n  exact \u27e8by nlinarith, by nlinarith, by nlinarith, by nlinarith, by nlinarith, by nlinarith, by nlinarith, by nlinarith, by nlinarith, by nlinarith, by nlinarith\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2396 (a b c : \u211d) (h\u2081 : a + b + c = 3) (h\u2082 : a * b * c = 5) : |a| + |b| + |c| \u2265 7 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2396_plus (a b c : \u211d) (h\u2081 : a + b + c = 3) (h\u2082 : a * b * c = 5) : a ^ 2 + b ^ 2 + c ^ 2 + (1 / (a + b + c)) ^ 2 \u2265 2 * (a * b * c) * (1 / 3):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_48479_plus (a b c : \u211d) (habc : a + b + c = 1) (h : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (hab : 0 \u2264 a * b) (hbc : 0 \u2264 b * c) (hca : 0 \u2264 c * a) : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) * Real.sqrt (1 + c ^ 2) \u2265 2 * (a * b * c):= by", "target": "\n  have : 0 \u2264 a * b * c := by\n    apply mul_nonneg\n    all_goals nlinarith\n  have h\u2080 : Real.sqrt (1 + a ^ 2) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2081 : Real.sqrt (1 + b ^ 2) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2082 : Real.sqrt (1 + c ^ 2) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  calc\n    Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) * Real.sqrt (1 + c ^ 2) \u2265 1 * 1 * 1 := by gcongr <;> assumption\n    _ = 1 := by norm_num\n    _ \u2265 2 * (a * b * c) := by\n      nlinarith [mul_self_nonneg (a * b), mul_self_nonneg (b * c), mul_self_nonneg (c * a)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_9712_plus  (a b c : \u211d)\n  (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c) :\n   (a + b + c) ^ 2 * (a * b + b * c + c * a) ^ 2 \u2265 9 * (a * b) * (b * c) * (c * a) \u2227 (a + b + c) ^ 2 * (a * b + b * c + c * a) ^ 2 \u2265 9 * (a * b) * (b * c) * (c * a):= by", "target": "\n  obtain \u27e8ha, hb, hc\u27e9 := h\u2080\n  have hab : 0 < a * b := by positivity\n  have hbc : 0 < b * c := by positivity\n  have hac : 0 < c * a := by positivity\n  constructor\n  \u00b7 nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b),\n      mul_nonneg hab.le hbc.le, mul_nonneg hbc.le hac.le, mul_nonneg hac.le hab.le,\n      mul_nonneg (sq_nonneg (a - b)) (sq_nonneg (b - c)),\n      mul_nonneg (sq_nonneg (b - c)) (sq_nonneg (c - a)),\n      mul_nonneg (sq_nonneg (c - a)) (sq_nonneg (a - b))]\n  \u00b7 nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b),\n      mul_nonneg hab.le hbc.le, mul_nonneg hbc.le hac.le, mul_nonneg hac.le hab.le,\n      mul_nonneg (sq_nonneg (a - b)) (sq_nonneg (b - c)),\n      mul_nonneg (sq_nonneg (b - c)) (sq_nonneg (c - a)),\n      mul_nonneg (sq_nonneg (c - a)) (sq_nonneg (a - b))]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1504 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : a^3 + b^3 + c^3 + 6 * a * b * c \u2264 a^2 + b^2 + c^2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1504_plus (a b c : \u211d) (habc : a + b + c = 1) (h : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (hab : 0 \u2264 a * b) (hbc : 0 \u2264 b * c) (hca : 0 \u2264 c * a) : a ^ 2 * b ^ 2 * c ^ 2 * (a + b + c) ^ 2 \u2264 (a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2) * (a + b + c):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3455 (x y z : \u211d) (hx : x > 0 \u2227 y > 0 \u2227 z > 0) (h : x + y + z = x * y * z) : (x - 1) / y ^ 2 + (y - 1) / z ^ 2 + (z - 1) / x ^ 2 \u2265 Real.sqrt 3 - 1 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3455_plus (x y z : \u211d) (hx : 0 < x \u2227 0 < y \u2227 0 < z) (h : x + y + z = 1) (h' : x * y + x * z + y * z \u2264 1) : x ^ 2 * y ^ 2 * (x + y) + y ^ 2 * z ^ 2 * (y + z) + z ^ 2 * x ^ 2 * (z + x) \u2264 4 * (x * y + y * z + z * x):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4208 (a b c : \u211d) (h : a^3 + b^3 + c^3 = 1) : a^3 + b^3 + c^3 - a^2 - b^2 - c^2 - a - b - c + 3 \u2265 0 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4208_plus (a b c : \u211d) (h\u2081 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2082 : a + b + c = 1) (h\u2083 : a * b + b * c + c * a \u2264 1) : a ^ 3 / (1 - a) ^ 3 + b ^ 3 / (1 - b) ^ 3 + c ^ 3 / (1 - c) ^ 3 \u2265 (a + b + c) ^ 3 / (1 - (a + b + c)) ^ 3 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2716 (a b c : \u211d) : (a^2 + b^2 + c^2) / (a * b + b * c + c * a) \u2265 a * b / (b^2 + b * c + c^2) + b * c / (c^2 + c * a + a^2) + c * a / (a^2 + a * b + b^2) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2716_plus (a b c : \u211d) (hab : 0 \u2264 a) (hbc : 0 \u2264 b) (hca : 0 \u2264 c) (habc : a * b + b * c + c * a = 0) : a ^ 2 + b ^ 2 + c ^ 2 \u2265 a * b / (b ^ 2 + b * c + c ^ 2) + b * c / (c ^ 2 + c * a + a ^ 2) + c * a / (a ^ 2 + a * b + b ^ 2):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4380 (A B k : \u211d) (hA : 0 < A) (hB : 0 < B) (hk : 0 < k) : (A - B) * (k + 12) \u2264 4 * Real.sqrt (3 * k) * (A + B) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4380_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 3) (h' : x * y + y * z + z * x \u2264 3) : 3 * (Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) ^ 2 - (x * y + y * z + z * x)) \u2265 (x - y) ^ 2 * (y - z) * (z - x):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1008 (n : \u2115) (a : \u2115 \u2192 \u211d) (ha : \u2200 i, 0 < a i) : \u2211 i in Finset.range n, (Real.sqrt (\u2211 j in Finset.range (i + 1), a j)) \u2265 Real.sqrt (\u2211 i in Finset.range n, (\u2191i) ^ 2 * a i) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1008_plus (n : \u2115) (a : \u2115 \u2192 \u211d) (ha : \u2200 i, 0 < a i) : \u2211 k in Finset.range n, (1 / (k + 1 : \u211d) ^ 2 * a k) \u2265 0 \u2227 \u2211 k in Finset.range n, (1 / (k + 1 : \u211d) ^ 2 * a k) \u2264 \u2211 k in Finset.range n, a k := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_2326_plus (a b c d : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 0 \u2264 d) (h : a + b + c + d = 2) (h1 : a * b + a * c + a * d + b * c + b * d + c * d \u2264 1) : a * b * (a + b) ^ 2 / (a ^ 2 + b ^ 2) + b * c * (b + c) ^ 2 / (b ^ 2 + c ^ 2) + c * d * (c + d) ^ 2 / (c ^ 2 + d ^ 2) + d * a * (d + a) ^ 2 / (d ^ 2 + a ^ 2) \u2264 4  := by", "target": "\n  rcases hab with \u27e8ha, hb, hc, hd\u27e9\n  have h2 : a * b * (a + b) ^ 2 / (a ^ 2 + b ^ 2) \u2264 (a + b) * (a + b) / 2 := by\n    apply div_le_of_nonneg_of_le_mul <;>\n      nlinarith [sq_nonneg (a - b), mul_nonneg ha hb]\n  have h3 : b * c * (b + c) ^ 2 / (b ^ 2 + c ^ 2) \u2264 (b + c) * (b + c) / 2 := by\n    apply div_le_of_nonneg_of_le_mul <;>\n      nlinarith [sq_nonneg (b - c), mul_nonneg hb hc]\n  have h4 : c * d * (c + d) ^ 2 / (c ^ 2 + d ^ 2) \u2264 (c + d) * (c + d) / 2 := by\n    apply div_le_of_nonneg_of_le_mul <;>\n      nlinarith [sq_nonneg (c - d), mul_nonneg hc hd]\n  have h5 : d * a * (d + a) ^ 2 / (d ^ 2 + a ^ 2) \u2264 (d + a) * (d + a) / 2 := by\n    apply div_le_of_nonneg_of_le_mul <;>\n      nlinarith [sq_nonneg (d - a), mul_nonneg hd ha]\n  nlinarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_12759_plus (a b c : \u211d) (habc : a + b + c = 1) (h : 0 < a \u2227 0 < b \u2227 0 < c) : \u2203 (x y z : \u211d), 0 < x \u2227 0 < y \u2227 0 < z \u2227 x + y + z = 1 \u2227 (x * Real.sqrt 2 + y * Real.sqrt 3 + z * Real.sqrt 5) * (y * Real.sqrt 2 + z * Real.sqrt 3 + x * Real.sqrt 5) * (z * Real.sqrt 2 + x * Real.sqrt 3 + y * Real.sqrt 5) \u2265 1:= by", "target": "\n  refine' \u27e81 / 3, 1 / 3, 1 / 3, by norm_num, by norm_num, by norm_num, by norm_num, _\u27e9\n  ring_nf\n  have h\u2080 : Real.sqrt 2 \u2265 0 := Real.sqrt_nonneg _\n  have h\u2081 : Real.sqrt 3 \u2265 0 := Real.sqrt_nonneg _\n  have h\u2082 : Real.sqrt 5 \u2265 0 := Real.sqrt_nonneg _\n  have h\u2083 : Real.sqrt 2 * Real.sqrt 3 \u2265 0 := by positivity\n  have h\u2084 : Real.sqrt 2 * Real.sqrt 5 \u2265 0 := by positivity\n  have h\u2085 : Real.sqrt 3 * Real.sqrt 5 \u2265 0 := by positivity\n  have h\u2086 : Real.sqrt 2 * Real.sqrt 3 * Real.sqrt 5 \u2265 0 := by positivity\n  nlinarith [sq_sqrt (show 0 \u2264 2 by norm_num), sq_sqrt (show 0 \u2264 3 by norm_num),\n    sq_sqrt (show 0 \u2264 5 by norm_num)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_20227_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) (h' : x + y + z = 3) : Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) \u2265 (x * y + y * z + z * x) / 3 \u2227 (x * y + y * z + z * x) / 3 \u2265 1 / 3:= by", "target": "\n  have h1 : (x + y + z) ^ 2 = 9 := by rw [h']; norm_num\n  have h2 : 0 < x * y + y * z + z * x := by\n    nlinarith\n  have h3 : Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) \u2265 (x * y + y * z + z * x) / 3 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  have h4 : (x * y + y * z + z * x) / 3 \u2265 1 / 3 := by\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  exact \u27e8h3, h4\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_15346_plus (x y z : \u211d) (h\u2080 : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z) (h\u2081 : x + y + z \u2264 9) (h\u2082 : Real.logb 2 (x + y + z) \u2264 3) (h\u2083 : Real.logb 3 (x + y + z) \u2264 3) (h\u2084 : Real.logb 4 (x + y + z) \u2264 3) : (x + y + z) ^ 2 \u2264 81 \u2227 (Real.logb 2 (x + y + z) + Real.logb 3 (x + y + z) + Real.logb 4 (x + y + z)) \u2264 9  := by", "target": "\n  have h\u2085 : 0 \u2264 x + y + z := by linarith\n  have h\u2086 : (x + y + z) ^ 2 \u2264 81 := by\n    have h\u2087 : x + y + z \u2264 9 := by linarith\n    nlinarith\n  have h\u2087 : Real.logb 2 (x + y + z) + Real.logb 3 (x + y + z) + Real.logb 4 (x + y + z) \u2264 9 := by\n    have h\u2088 : Real.logb 2 (x + y + z) \u2264 3 := by linarith\n    have h\u2089 : Real.logb 3 (x + y + z) \u2264 3 := by linarith\n    have h\u2081\u2080 : Real.logb 4 (x + y + z) \u2264 3 := by linarith\n    linarith [Real.logb_pos (by norm_num : (1 : \u211d) < 2) (by linarith : (1 : \u211d) < 2),\n      Real.logb_pos (by norm_num : (1 : \u211d) < 3) (by linarith : (1 : \u211d) < 3),\n      Real.logb_pos (by norm_num : (1 : \u211d) < 4) (by linarith : (1 : \u211d) < 4)]\n  exact \u27e8h\u2086, h\u2087\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_21703_plus (a b : \u211d) (hab : 0 < a \u2227 0 < b) (h : 0 \u2264 a * b) : Real.sqrt (a ^ 2 + 4 * b ^ 2) + Real.sqrt (b ^ 2 + 4 * a ^ 2) \u2265 2 * (a * b + b * a) / (a + b):= by", "target": "\n  have h\u2081 : 0 < a := hab.1\n  have h\u2082 : 0 < b := hab.2\n  have h\u2083 : 0 < a * b := mul_pos h\u2081 h\u2082\n  have h\u2084 : 0 < a + b := add_pos h\u2081 h\u2082\n  have h\u2085 : 0 < a ^ 2 + 4 * b ^ 2 := by positivity\n  have h\u2086 : 0 < b ^ 2 + 4 * a ^ 2 := by positivity\n  have h\u2087 : 0 < Real.sqrt (a ^ 2 + 4 * b ^ 2) := Real.sqrt_pos.mpr h\u2085\n  have h\u2088 : 0 < Real.sqrt (b ^ 2 + 4 * a ^ 2) := Real.sqrt_pos.mpr h\u2086\n  have h\u2089 : 0 < Real.sqrt (a ^ 2 + 4 * b ^ 2) * Real.sqrt (b ^ 2 + 4 * a ^ 2) := by positivity\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087, h\u2088, h\u2089]\n  rw [div_le_iff (by positivity)]\n  nlinarith [sq_sqrt (by positivity : 0 \u2264 a ^ 2 + 4 * b ^ 2),\n    sq_sqrt (by positivity : 0 \u2264 b ^ 2 + 4 * a ^ 2),\n    mul_self_nonneg (a - b),\n    mul_self_nonneg (Real.sqrt (a ^ 2 + 4 * b ^ 2) - Real.sqrt (b ^ 2 + 4 * a ^ 2))]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_1094_plus (n : \u2115) (hn : 1 < n) : choose (2*n) n \u2265 choose n 1 \u2228 choose (2*n) n \u2265 choose n 0 \u2228 1 \u2264 choose (2 * n) n \u2228 1 \u2264 choose (2 * n) n \u2228 1 \u2264 choose (2 * n) n \u2228 1 \u2264 choose (2 * n) n \u2228 1 \u2264 choose (2 * n) n \u2228 1 \u2264 choose (2 * n) n \u2228 1 \u2264 choose (2 * n) n \u2228 1 \u2264 choose (2 * n) n \u2228 1 \u2264 choose (2 * n) n := by", "target": "\n  have h\u2081 : choose (2 * n) n \u2265 choose n 1 := by\n    cases n with\n    | zero => contradiction\n    | succ n =>\n      clear hn\n      induction' n with n ih\n      all_goals simp_all [Nat.choose, Nat.factorial, Nat.mul_succ]\n      all_goals nlinarith\n  omega"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_28016_plus (a b c d : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 0 \u2264 d) (h\u2082 : a + b + c + d = 1) : (1 - a) ^ 3 * (1 - b) ^ 3 * (1 - c) ^ 3 * (1 - d) ^ 3 \u2265 (1 - a - b - c - d) ^ 3 * (a * b * c * d):= by", "target": "\n  have h\u2083 : 1 - a - b - c - d = 0 := by linarith\n  have h\u2084 : (1 - a) ^ 3 * (1 - b) ^ 3 * (1 - c) ^ 3 * (1 - d) ^ 3 \u2265 0 := by\n    apply mul_nonneg\n    apply mul_nonneg\n    apply mul_nonneg\n    all_goals\n      exact pow_nonneg (by linarith) 3\n  have h\u2085 : (1 - a - b - c - d) ^ 3 * (a * b * c * d) = 0 := by\n    simp [h\u2083]\n  linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_10503_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \u2203 a b c :\u211d, a * b * c \u2264 x ^ 2 * y ^ 2 * z ^ 2 \u2227 a * b * c \u2264 (x * y ^ 2 + y * z ^ 2 + z * x ^ 2) * (x ^ 2 * y + y ^ 2 * z + z ^ 2 * x):= by", "target": "\n  use 0, 0, 0\n  constructor <;> simp [mul_nonneg, hx.le, hy.le, hz.le]\n  <;> positivity"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_2031_plus (x : \u211d) (hx : 0 < x) : Real.sqrt (x ^ 2 - x + 1) \u2265 x - 1 + 2 / (x + 1) \u2228 \u2203 a : \u211d, a < x \u2227 0 < a \u2227 0 < x ^ 2 - x + 1 \u2227 x ^ 2 - x + 1 > 0 \u2227 Real.sqrt (x ^ 2 - x + 1) \u2265 0 \u2227 Real.sqrt (x ^ 2 - x + 1) \u2265 0 \u2227 Real.sqrt (x ^ 2 - x + 1) \u2265 0 \u2227 Real.sqrt (x ^ 2 - x + 1) \u2265 0 \u2227 Real.sqrt (x ^ 2 - x + 1) \u2265 0 \u2227 Real.sqrt (x ^ 2 - x + 1) \u2265 0 := by", "target": "\n  refine' or_iff_not_imp_left.mpr fun h => _\n  refine' \u27e8x / 2, by linarith, by linarith, by nlinarith [sq_nonneg (x - 1)], by nlinarith [sq_nonneg (x - 1)], by\n    nlinarith [Real.sqrt_nonneg (x ^ 2 - x + 1)], by\n    nlinarith [Real.sqrt_nonneg (x ^ 2 - x + 1)], by\n    nlinarith [Real.sqrt_nonneg (x ^ 2 - x + 1)], by\n    nlinarith [Real.sqrt_nonneg (x ^ 2 - x + 1)], by\n    nlinarith [Real.sqrt_nonneg (x ^ 2 - x + 1)], by\n    nlinarith [Real.sqrt_nonneg (x ^ 2 - x + 1)]\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3734 : \u2200 x y z : \u211d, x >= 0 \u2227 y >= 0 \u2227 z >= 0 \u2227 x^2 + y^2 + z^2 = 1 \u2192 1 <= x / (1 - x * y) + y / (1 - y * z) + z / (1 - z * x) \u2227 x / (1 - x * y) + y / (1 - y * z) + z / (1 - z * x) <= 3 * Real.sqrt 3 / 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3734_plus : \u2200 x y z : \u211d, 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z \u2227 x + y + z \u2264 3 \u2227 x * y + y * z + z * x \u2264 3 \u2192 0 \u2264 x ^ 2 * y ^ 2 * z ^ 2 * (x + y + z) * (y + z + x) * (z + x + y):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_11577_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 3) (h\u2082 : (1 - a) * (1 - b) * (1 - c) \u2265 0) : (1 + a * b) * (1 + b * c) * (1 + c * a) \u2265 1 + a * b * c * (a * b + b * c + c * a):= by", "target": "\n  have h\u2083 : 0 \u2264 a * b := by nlinarith\n  have h\u2084 : 0 \u2264 b * c := by nlinarith\n  have h\u2085 : 0 \u2264 c * a := by nlinarith\n  have h\u2086 : 0 \u2264 a * b * c := by nlinarith\n  nlinarith [mul_nonneg h\u2083 h\u2084, mul_nonneg h\u2084 h\u2085, mul_nonneg h\u2085 h\u2083,\n    mul_nonneg (sq_nonneg (a * b - 1)) (sq_nonneg (b * c - 1)),\n    mul_nonneg (sq_nonneg (c * a - 1)) (sq_nonneg (a * b - 1)),\n    mul_nonneg (sq_nonneg (b * c - 1)) (sq_nonneg (c * a - 1))]\n  <;> linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4049 (x y z : \u211d) : \u2211 i in ({0, 1, 2} : Finset \u2115), x ^ 4 * y * z + x * y ^ 4 * z + x * y * z ^ 4 = x ^ 4 * y * z + x * y ^ 4 * z + x * y * z ^ 4 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4049_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) : \u2211 i in ({0, 1, 2} : Finset \u2115), x ^ 4 * y * z + x * y ^ 4 * z + x * y * z ^ 4 \u2265 x ^ 4 * y * z + x * y ^ 4 * z + x * y * z ^ 4 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1553 (a b c : \u211d) (h : (a+b)^2 + (b+c)^2 + (c+a)^2 = 3) : 2 * (b+c)^2 \u2264 6 - (2*a + b + c)^2 \u2227 6 - (2*a + b + c)^2 \u2264 4 * (b^2 + c^2) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1553_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a + b + c \u2264 3) (h\u2083 : (a + b) ^ 2 + (b + c) ^ 2 + (c + a) ^ 2 = 3) : Real.sqrt (3 - (a + b + c) ^ 2) * (2 * (a * b + b * c + c * a)) \u2264 3 * Real.sqrt (3):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3293 (a b c d : \u211d) (h1 : a \u2265 b \u2227 b \u2265 c \u2227 c \u2265 d \u2227 d \u2265 0) (h2 : a^2 + b^2 + c^2 + d^2 = 4) : 1 - (a * b * c * d)^(1/5) \u2265 (2/5) * (a - b) * (c - d) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3293_plus (a b c d : \u211d) (h1 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 0 \u2264 d) (h2 : a + b + c + d = 4) (h3 : a * b + a * c + a * d + b * c + b * d + c * d \u2264 6) : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) * Real.sqrt (1 + c ^ 2) * Real.sqrt (1 + d ^ 2) \u2265 (1 + a * b * c * d):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_10101_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : a * b * c = 1) : a ^ 2 / (b + c) ^ 2 + b ^ 2 / (a + c) ^ 2 + c ^ 2 / (b + a) ^ 2 \u2265 3 / 8 \u2227 a ^ 2 / (b + c) ^ 2 + b ^ 2 / (a + c) ^ 2 + c ^ 2 / (b + a) ^ 2 \u2265 3 / 8 \u2227 a ^ 2 / (b + c) ^ 2 + b ^ 2 / (a + c) ^ 2 + c ^ 2 / (b + a) ^ 2 \u2265 3 / 8 \u2227 a ^ 2 / (b + c) ^ 2 + b ^ 2 / (a + c) ^ 2 + c ^ 2 / (b + a) ^ 2 \u2265 3 / 8 \u2227 a ^ 2 / (b + c) ^ 2 + b ^ 2 / (a + c) ^ 2 + c ^ 2 / (b + a) ^ 2 \u2265 3 / 8 \u2227 a ^ 2 / (b + c) ^ 2 + b ^ 2 / (a + c) ^ 2 + c ^ 2 / (b + a) ^ 2 \u2265 3 / 8 \u2227 a ^ 2 / (b + c) ^ 2 + b ^ 2 / (a + c) ^ 2 + c ^ 2 / (b + a) ^ 2 \u2265 3 / 8 \u2227 a ^ 2 / (b + c) ^ 2 + b ^ 2 / (a + c) ^ 2 + c ^ 2 / (b + a) ^ 2 \u2265 3 / 8 \u2227 a ^ 2 / (b + c) ^ 2 + b ^ 2 / (a + c) ^ 2 + c ^ 2 / (b + a) ^ 2 \u2265 3 / 8 \u2227 a ^ 2 / (b + c) ^ 2 + b ^ 2 / (a + c) ^ 2 + c ^ 2 / (b + a) ^ 2 \u2265 3 / 8 := by", "target": "\n  have : a ^ 2 / (b + c) ^ 2 + b ^ 2 / (a + c) ^ 2 + c ^ 2 / (b + a) ^ 2 \u2265 3 / 8 := by\n    have : 0 < b * c := by positivity\n    have : 0 < a * c := by positivity\n    have : 0 < a * b := by positivity\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n      mul_self_nonneg (a * b + b * c + c * a), mul_self_nonneg (a * b - b * c),\n      mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b)]\n  repeat' constructor\n  all_goals nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_36058_plus (a b c : \u211d) (habc : a * b * c = 1) (h : 0 < a \u2227 0 < b \u2227 0 < c) : (1 / (a + 1) ^ 2 + 1 / (b + 1) ^ 2 + 1 / (c + 1) ^ 2) \u2265 9 / (4 * (a * b + b * c + c * a + 3))  := by", "target": "\n  rcases h with \u27e8ha, hb, hc\u27e9\n  field_simp [add_sq]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le,\n    mul_nonneg (sq_nonneg (a - b)) hc.le, mul_nonneg (sq_nonneg (b - c)) ha.le,\n    mul_nonneg (sq_nonneg (c - a)) hb.le, sq_nonneg (a * b - 1), sq_nonneg (b * c - 1), sq_nonneg (c * a - 1)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_52950_plus (a b c : \u211d) (habc : a * b * c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0) : (Real.sqrt (a^3 + b^3 + c^3) : \u211d) \u2265 (Real.sqrt (3 * (a * b * c)) / 3) * (a + b + c):= by", "target": "\n  have h\u2081 : 0 < a := h.1\n  have h\u2082 : 0 < b := h.2.1\n  have h\u2083 : 0 < c := h.2.2\n  have h\u2084 : 0 < a * b := mul_pos h\u2081 h\u2082\n  have h\u2085 : 0 < b * c := mul_pos h\u2082 h\u2083\n  have h\u2086 : 0 < c * a := mul_pos h\u2083 h\u2081\n  have h\u2087 : 0 < a * b * c := by positivity\n  have h\u2088 : Real.sqrt (a ^ 3 + b ^ 3 + c ^ 3) \u2265 Real.sqrt (3 * (a * b * c)) / 3 * (a + b + c) := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 * (a * b * c) from by positivity),\n      mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a),\n      mul_self_nonneg (a - 1), mul_self_nonneg (b - 1), mul_self_nonneg (c - 1)]\n  exact h\u2088"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_46566_plus (x y z : \u211d) (hx : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z) (h : x + y + z = 1) :  x ^ 2 * y ^ 2 * z ^ 2 * (x + y + z) ^ 2 \u2264 (x * y + y * z + z * x) ^ 2 * (x ^ 2 + y ^ 2 + z ^ 2):= by", "target": "\n  simp only [h, mul_one]\n  have h\u2080 : 0 \u2264 x * y := by nlinarith\n  have h\u2081 : 0 \u2264 y * z := by nlinarith\n  have h\u2082 : 0 \u2264 z * x := by nlinarith\n  have h\u2083 : 0 \u2264 x * y * (y * z) := by nlinarith\n  have h\u2084 : 0 \u2264 y * z * (z * x) := by nlinarith\n  have h\u2085 : 0 \u2264 z * x * (x * y) := by nlinarith\n  nlinarith [sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y),\n    sq_nonneg (x * y + y * z), sq_nonneg (y * z + z * x), sq_nonneg (z * x + x * y)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_75209_plus (x y z k : \u211d) (h\u2081 : k \u2265 1) (h\u2082 : k * x ^ 2 + y ^ 2 + z ^ 2 = 1) : 1 + (1 - x ^ 2 - y ^ 2 - z ^ 2) ^ 2 \u2265 (x ^ 2 + y ^ 2 + z ^ 2 - 2 * x * y * z) * (x ^ 2 + y ^ 2 + z ^ 2 + 2 * x * y * z):= by", "target": "\n  nlinarith [sq_nonneg (x ^ 2 + y ^ 2 + z ^ 2 - 1), sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (x ^ 2 - z ^ 2), sq_nonneg (y ^ 2 - z ^ 2), sq_nonneg (2 * x * y), sq_nonneg (2 * x * z), sq_nonneg (2 * y * z)]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1291 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (1 + a ^ 2) * (4 + a ^ 2 + b ^ 2) * (16 + a ^ 2 + b ^ 2 + c ^ 2) \u2265 80 * a * b * c := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1291_plus (a b c : \u211d) (habc : a * b * c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0) : (1 + a ^ 2) * (4 + a ^ 2 + b ^ 2) * (16 + a ^ 2 + b ^ 2 + c ^ 2) \u2265 80 * a * b * c \u2227 (1 + b ^ 2) * (4 + b ^ 2 + a ^ 2) * (16 + b ^ 2 + a ^ 2 + c ^ 2) \u2265 80 * b * a * c \u2227 (1 + c ^ 2) * (4 + c ^ 2 + a ^ 2) * (16 + c ^ 2 + a ^ 2 + b ^ 2) \u2265 80 * c * a * b := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_18848_plus (x y : \u211d) (h\u2080 : 0 \u2264 x \u2227 0 \u2264 y) (h\u2081 : x \u2264 1 \u2227 y \u2264 1) (h\u2082 : x + y \u2264 1) : Real.sqrt (1 - x ^ 2) * Real.sqrt (1 - y ^ 2) \u2265 1 - (x + y) ^ 2 \u2227 Real.sqrt (1 - x ^ 2) * Real.sqrt (1 - y ^ 2) \u2265 0 \u2227 Real.sqrt (1 - x ^ 2) * Real.sqrt (1 - y ^ 2) \u2265 1 - (x + y) ^ 2 - Real.sqrt ( (x + y) ^ 2):= by", "target": "\n  have h\u2083 : 0 \u2264 (x + y) ^ 2 := sq_nonneg (x + y)\n  have h\u2084 : 0 \u2264 Real.sqrt ((x + y) ^ 2) := Real.sqrt_nonneg ((x + y) ^ 2)\n  have h\u2085 : 0 \u2264 Real.sqrt (1 - x ^ 2) * Real.sqrt (1 - y ^ 2) := mul_nonneg (Real.sqrt_nonneg (1 - x ^ 2)) (Real.sqrt_nonneg (1 - y ^ 2))\n  have h\u2086 : Real.sqrt (1 - x ^ 2) * Real.sqrt (1 - y ^ 2) \u2265 0 := by linarith\n  have h\u2087 : Real.sqrt (1 - x ^ 2) * Real.sqrt (1 - y ^ 2) \u2265 1 - (x + y) ^ 2 := by\n    nlinarith [sq_sqrt (show 0 \u2264 1 - x ^ 2 from by nlinarith),\n      sq_sqrt (show 0 \u2264 1 - y ^ 2 from by nlinarith),\n      sq_nonneg (x - y),\n      sq_nonneg (x + y),\n      h\u2080.1, h\u2080.2, h\u2081.1, h\u2081.2, h\u2082]\n  have h\u2088 : Real.sqrt (1 - x ^ 2) * Real.sqrt (1 - y ^ 2) \u2265 1 - (x + y) ^ 2 - Real.sqrt ((x + y) ^ 2) := by\n    nlinarith [sq_sqrt (show 0 \u2264 1 - x ^ 2 from by nlinarith),\n      sq_sqrt (show 0 \u2264 1 - y ^ 2 from by nlinarith),\n      sq_nonneg (x - y),\n      sq_nonneg (x + y),\n      h\u2080.1, h\u2080.2, h\u2081.1, h\u2081.2, h\u2082]\n  exact \u27e8h\u2087, h\u2086, h\u2088\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2222 (a b c : \u211d) : (a / (2 * a + b) + b / (2 * b + c) + c / (2 * c + a) \u2264 1 \u2192 a / (a + 2 * b) + b / (b + 2 * c) + c / (c + 2 * a) \u2265 1) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2222_plus (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : a * b + b * c + c * a \u2264 (1 / 3) * (a ^ 2 + b ^ 2 + c ^ 2) \u2192 a * b / (a + b) + b * c / (b + c) + c * a / (c + a) \u2264 (1 / 2) * (a + b + c):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_7066_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : a ^ 2 + b ^ 2 + c ^ 2 + (1 / 3) * (a ^ 2 + b ^ 2 + c ^ 2) * (a + b + c) \u2265 (a * b + b * c + c * a) * (a + b + c) / 3 \u2227 (a * b + b * c + c * a) * (a + b + c) / 3 \u2265 0 \u2227 (a * b + b * c + c * a) * (a + b + c) / 3 \u2265 0 \u2227 (a * b + b * c + c * a) * (a + b + c) / 3 \u2265 0 \u2227 (a * b + b * c + c * a) * (a + b + c) / 3 \u2265 0 \u2227 (a * b + b * c + c * a) * (a + b + c) / 3 \u2265 0 \u2227 (a * b + b * c + c * a) * (a + b + c) / 3 \u2265 0 \u2227 (a * b + b * c + c * a) * (a + b + c) / 3 \u2265 0 \u2227 (a * b + b * c + c * a) * (a + b + c) / 3 \u2265 0 \u2227 (a * b + b * c + c * a) * (a + b + c) / 3 \u2265 0 := by", "target": "\n  have h\u2080 : 0 \u2264 a * b + b * c + c * a := by positivity\n  have h\u2081 : 0 \u2264 a * b * c := by positivity\n  have h\u2082 : 0 \u2264 a * b * (a + b + c) := by positivity\n  have h\u2083 : 0 \u2264 b * c * (a + b + c) := by positivity\n  have h\u2084 : 0 \u2264 c * a * (a + b + c) := by positivity\n  have h\u2085 : 0 \u2264 a * b * c * (a + b + c) := by positivity\n  refine' \u27e8_, _, _, _, _, _, _, _, _\u27e9 <;> norm_num <;>\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> linarith\n  <;> linarith\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1171 (x : \u211d) (hx : abs x < 1) : x * Real.log ((1 + x) / (1 - x)) + Real.cos x \u2265 1 + x^2 / 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1171_plus (x : \u211d) (hx : abs x < 1) : \u2203 y, y \u2265 0 \u2227 \u2203 z, z \u2265 0 \u2227 \u2203 w, w \u2265 0 \u2227 (1 + x ^ 2 / 2 + y * (1 - x ^ 2 / 2)) * (1 + z * (1 - x ^ 2 / 2)) * (1 + w * (1 - x ^ 2 / 2)) \u2265 1 + x ^ 2 / 2 \u2227 y * (1 - x ^ 2 / 2) * (1 + z * (1 - x ^ 2 / 2)) * (1 + w * (1 - x ^ 2 / 2)) \u2265 0 \u2227 z * (1 - x ^ 2 / 2) * (1 + y * (1 - x ^ 2 / 2)) * (1 + w * (1 - x ^ 2 / 2)) \u2265 0 \u2227 w * (1 - x ^ 2 / 2) * (1 + y * (1 - x ^ 2 / 2)) * (1 + z * (1 - x ^ 2 / 2)) \u2265 0 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3507 (x : \u2115 \u2192 \u211d) (hx: x 0 = 0) (hx1: \u2200 n, x (n+1) = 2 * x n + Real.sqrt (3 * (x n)^2 + 1)) : \u2200 n, x n = \u230ax n\u230b := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3507_plus (x : \u2115 \u2192 \u211d) (hx: x 0 = 0) (hx1: \u2200 n, x (n+1) = 2 * x n + Real.sqrt (3 * (x n)^2 + 1)) : \u2200 n, \u2211 k in Finset.range (n+1), 1/2^k \u2265 1 - 1/2^n \u2228 \u2211 k in Finset.range (n+1), 1/2^k \u2265 1 - 1/2^n \u2228 \u2211 k in Finset.range (n+1), 1/2^k \u2265 1 - 1/2^n \u2228 \u2211 k in Finset.range (n+1), 1/2^k \u2265 1 - 1/2^n \u2228 \u2211 k in Finset.range (n+1), 1/2^k \u2265 1 - 1/2^n \u2228 \u2211 k in Finset.range (n+1), 1/2^k \u2265 1 - 1/2^n \u2228 \u2211 k in Finset.range (n+1), 1/2^k \u2265 1 - 1/2^n \u2228 \u2211 k in Finset.range (n+1), 1/2^k \u2265 1 - 1/2^n \u2228 \u2211 k in Finset.range (n+1), 1/2^k \u2265 1 - 1/2^n \u2228 \u2211 k in Finset.range (n+1), 1/2^k \u2265 1 - 1/2^n := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_33541_plus (a b : \u211d) (hab : a ^ 2 + b ^ 2 = 1) (h : 0 < a * b) : Real.sqrt (1 + (a - b) ^ 2) \u2265 Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) - 2 * (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) / 3  := by", "target": "\n  have h\u2081 : 0 \u2264 (a - b) ^ 2 := by positivity\n  have h\u2082 : 0 \u2264 Real.sqrt (1 + a ^ 2) := Real.sqrt_nonneg _\n  have h\u2083 : 0 \u2264 Real.sqrt (1 + b ^ 2) := Real.sqrt_nonneg _\n  have h\u2084 : 0 \u2264 Real.sqrt (1 + (a - b) ^ 2) := Real.sqrt_nonneg _\n  have h\u2085 : 0 \u2264 Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) := by positivity\n  have h\u2086 : 0 \u2264 2 * (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) / 3 := by positivity\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 1 + a ^ 2 from by positivity),\n    sq_sqrt (show (0 : \u211d) \u2264 1 + b ^ 2 from by positivity),\n    sq_sqrt (show (0 : \u211d) \u2264 1 + (a - b) ^ 2 from by positivity),\n    sq_nonneg (Real.sqrt (1 + a ^ 2) - Real.sqrt (1 + b ^ 2))]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_7532_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) : (x * y + y * z + z * x) * (1 / (x * y) + 1 / (y * z) + 1 / (z * x)) \u2265 9:= by", "target": "\n  have h\u2081 : 0 < x * y := by positivity\n  have h\u2082 : 0 < y * z := by positivity\n  have h\u2083 : 0 < z * x := by positivity\n  have h\u2084 : 0 < (x * y) * (y * z) := by positivity\n  have h\u2085 : 0 < (y * z) * (z * x) := by positivity\n  have h\u2086 : 0 < (z * x) * (x * y) := by positivity\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (y - 1), sq_nonneg (z - 1),\n    sq_nonneg (x * y - 1), sq_nonneg (y * z - 1), sq_nonneg (z * x - 1)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_45885_plus (x : \u2115 \u2192 \u211d) (hx1 : x 0 = 1) (hx2 : \u2200 n, x (n + 1) = 2 * x n + Real.sqrt (3 * (x n)^2 + 1)) (hx3 : \u2200 n, x n \u2265 1) : \u2200 n,  x n \u2265 2^n:= by", "target": "\n  intro n\n  induction' n with n ih\n  simp_all\n  have h\u2081 := hx2 n\n  have h\u2082 := hx3 n\n  have h\u2083 := hx3 (n + 1)\n  have h\u2084 : (2 : \u211d) ^ (n + 1) \u2264 x (n + 1) := by\n    have h\u2085 : (2 : \u211d) ^ (n + 1) \u2264 2 * x n + Real.sqrt (3 * (x n)^2 + 1) := by\n      calc\n        (2 : \u211d) ^ (n + 1) \u2264 2 ^ (n + 1) := le_refl _\n        _ = 2 * 2 ^ n := by ring\n        _ \u2264 2 * x n := by\n          exact mul_le_mul_of_nonneg_left (by\n            exact ih) (by positivity)\n        _ \u2264 2 * x n + Real.sqrt (3 * (x n)^2 + 1) := by\n          linarith [Real.sqrt_nonneg (3 * (x n)^2 + 1)]\n    linarith\n  linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2926 {a b c d : \u211d} (hx: a + b + c + d = 0) : 2 * (a ^ 2 / (a + b) + b ^ 2 / (b + c) + c ^ 2 / (c + d) + d ^ 2 / (d + a)) \u2265 a + b + c + d := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2926_plus : \u2200 a b c d : \u211d, a + b + c + d = 0 \u2227 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 0 \u2264 d \u2192 2 * (a ^ 2 / (a + b) + b ^ 2 / (b + c) + c ^ 2 / (c + d) + d ^ 2 / (d + a)) \u2265 a + b + c + d \u2228 a + b + c + d \u2265 2 * (a ^ 2 / (a + b) + b ^ 2 / (b + c) + c ^ 2 / (c + d) + d ^ 2 / (d + a)) \u2227 0 \u2264 a * b \u2227 0 \u2264 b * c \u2227 0 \u2264 c * d \u2227 0 \u2264 d * a := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_333 (a b c d : \u211d) : (a^2 + d) * (b^2 + d) * (c^2 + d) \u2265 (a * b + d) * (b * c + d) * (c * a + d) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_333_plus (a b c d : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 0 \u2264 d) (h\u2082 : a * b + b * c + c * a \u2264 1) (h\u2083 : 0 \u2264 a * b * c) : (a^2 + d) * (b^2 + d) * (c^2 + d) \u2265 (a * b + d) * (b * c + d) * (c * a + d) \u2227 (a * b * c) * (a * b * c) \u2264 (a * b * c) * (a * b * c) * (a * b * c + 1):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_47610_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) : x ^ 2 + y ^ 2 + z ^ 2 + (x * y + x * z + y * z) * (y * z + z * x + x * y) * (z * x + x * y + y * z) \u2265 x * y * z * (x + y + z):= by", "target": "\n  have h1 : 0 \u2264 x * y := mul_nonneg hx hy\n  have h2 : 0 \u2264 y * z := mul_nonneg hy hz\n  have h3 : 0 \u2264 z * x := mul_nonneg hz hx\n  have h4 : 0 \u2264 x * y * z := mul_nonneg h1 hz\n  have h5 : 0 \u2264 y * z * x := mul_nonneg h2 hx\n  have h6 : 0 \u2264 z * x * y := mul_nonneg h3 hy\n  have h7 : 0 \u2264 x * y * z * (x + y + z) := by positivity\n  have h8 : 0 \u2264 (x * y + x * z + y * z) * (y * z + z * x + x * y) * (z * x + x * y + y * z) := by positivity\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x * y - y * z), mul_self_nonneg (y * z - z * x),\n    mul_self_nonneg (z * x - x * y)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_52390_plus (a b c d e : \u211d) (h\u2081 : 0 < a \u2227 0 < b \u2227 0 < c \u2227 0 < d \u2227 0 < e) (h\u2082 : a + b + c + d + e = 1) :\n  Real.sqrt (1 + (a + b + c + d + e) ^ 2) \u2265 (3 * (a * b + b * c + c * d + d * e + e * a)) / (a + b + c + d + e):= by", "target": "\n  rw [h\u2082]\n  have h\u2083 : 3 * (a * b + b * c + c * d + d * e + e * a) \u2264 Real.sqrt (1 + 1 ^ 2) := by\n    have h\u2084 : 0 \u2264 (a - b) ^ 2 + (b - c) ^ 2 + (c - d) ^ 2 + (d - e) ^ 2 + (e - a) ^ 2 := by\n      nlinarith\n    have h\u2085 : 0 \u2264 (a + b + c + d + e) ^ 2 := by\n      nlinarith\n    have h\u2086 : Real.sqrt (1 + 1 ^ 2) \u2265 1 := by\n      apply Real.le_sqrt_of_sq_le\n      nlinarith\n    nlinarith\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_79213_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 3) (h\u2082 : (1 : \u211d) / (a ^ 2 + 1) + 1 / (b ^ 2 + 1) + 1 / (c ^ 2 + 1) \u2265 3 / 2) : a * b * c * (a * b + b * c + c * a) \u2264 (a + b + c) ^ 2 * (a ^ 2 + b ^ 2 + c ^ 2):= by", "target": "\n  have : 0 \u2264 a * b := by nlinarith\n  have : 0 \u2264 b * c := by nlinarith\n  have : 0 \u2264 c * a := by nlinarith\n  have : 0 \u2264 a * b * c := by nlinarith\n  have : (a + b + c) ^ 2 * (a ^ 2 + b ^ 2 + c ^ 2) \u2265 a * b * c * (a * b + b * c + c * a) := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      mul_self_nonneg (a * b + b * c + c * a),\n      mul_self_nonneg (a * b - b * c),\n      mul_self_nonneg (b * c - c * a),\n      mul_self_nonneg (c * a - a * b)]\n  linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3380 {x1 x2 x3 x4 : \u2102} (hx : x1^4 + x1^3 - 1 = 0) (hx' : x2^4 + x2^3 - 1 = 0) (hx'' : x3^4 + x3^3 - 1 = 0) (hx''' : x4^4 + x4^3 - 1 = 0) : (x1 * x2)^6 + (x1 * x2)^4 + (x1 * x2)^3 - (x1 * x2)^2 - 1 = 0 \u2227 (x1 * x3)^6 + (x1 * x3)^4 + (x1 * x3)^3 - (x1 * x3)^2 - 1 = 0 \u2227 (x1 * x4)^6 + (x1 * x4)^4 + (x1 * x4)^3 - (x1 * x4)^2 - 1 = 0 \u2227 (x2 * x3)^6 + (x2 * x3)^4 + (x2 * x3)^3 - (x2 * x3)^2 - 1 = 0 \u2227 (x2 * x4)^6 + (x2 * x4)^4 + (x2 * x4)^3 - (x2 * x4)^2 - 1 = 0 \u2227 (x3 * x4)^6 + (x3 * x4)^4 + (x3 * x4)^3 - (x3 * x4)^2 - 1 = 0 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3380_plus : \u2200 a b : \u2102, a ^ 4 + a ^ 3 - 1 = 0 \u2227 b ^ 4 + b ^ 3 - 1 = 0 \u2192 a * b \u2260 0 \u2192 (a * b) ^ 6 + (a * b) ^ 4 + (a * b) ^ 3 - (a * b) ^ 2 - 1 = 0 \u2228 (a * b) ^ 6 + (a * b) ^ 4 + (a * b) ^ 3 - (a * b) ^ 2 - 1 \u2260 0 \u2228 (a * b) = 0 \u2228 (a * b) = 1 \u2228 (a * b) = -1 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_12737_plus (f : \u211d \u2192 \u211d) (hf : \u2200 x y, f (x^3 + y^3) = (x + y) * (f x^2 - f x * f y + f y^2)) : \u2203 x, f x \u2260 0 \u2228 \u2203 x y, f x \u2260 f y \u2228 f x = f y \u2228 f (x^3 + y^3) \u2260 (x + y) * (f x^2 - f x * f y + f y^2):= by", "target": "\n  by_cases h : \u2203 x, f x \u2260 0\n  <;> by_cases h' : \u2203 x y, f x \u2260 f y\n  <;> simp_all\n  <;> tauto\n  <;> tauto\n  <;> tauto"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_50569_plus : \u2200 a b : \u211d, a \u2208 Set.Icc 1 2 \u2227 b \u2208 Set.Icc 1 2 \u2192 (1 - a) ^ 2 * (1 - b) ^ 2 \u2264 1 \u2227 (1 - a) ^ 2 * (1 - b) ^ 2 * (1 - a) ^ 2 * (1 - b) ^ 2 \u2264 1 := by", "target": "\n  rintro a b \u27e8\u27e8ha1, ha2\u27e9, \u27e8hb1, hb2\u27e9\u27e9\n  have ha : (1 - a) ^ 2 \u2264 1 := by\n    nlinarith\n  have hb : (1 - b) ^ 2 \u2264 1 := by\n    nlinarith\n  have ha' : (1 - a) ^ 2 * (1 - b) ^ 2 \u2264 1 := by\n    nlinarith\n  have hb' : (1 - a) ^ 2 * (1 - b) ^ 2 * (1 - a) ^ 2 * (1 - b) ^ 2 \u2264 1 := by\n    calc\n      (1 - a) ^ 2 * (1 - b) ^ 2 * (1 - a) ^ 2 * (1 - b) ^ 2 \u2264 1 * 1 * 1 * 1 := by gcongr <;> nlinarith\n      _ = 1 := by norm_num\n  exact \u27e8ha', hb'\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1000 (x y z : \u211d) (h : 2 * x * y * z + x ^ 2 + y ^ 2 + z ^ 2 \u2265 1) : x ^ 2 + y ^ 2 + z ^ 2 + y * z + z * x + x * y \u2265 x + y + z := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1000_plus (x y z : \u211d) (h\u2081 : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z) (h\u2082 : x + y + z \u2264 3) (h\u2083 : x * y + x * z + y * z \u2264 3) : 1 / (x + 1) ^ 2 + 1 / (y + 1) ^ 2 + 1 / (z + 1) ^ 2 \u2265 1 / (3 + 1) ^ 2 \u2227 1 / (x + 1) ^ 2 + 1 / (y + 1) ^ 2 + 1 / (z + 1) ^ 2 \u2265 3 / (3 + 1) ^ 2 \u2227 1 / (x + 1) ^ 2 + 1 / (y + 1) ^ 2 + 1 / (z + 1) ^ 2 \u2265 3 / (3 + 1) ^ 2 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1701 (a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1): 1 < Real.sqrt (1 / (a + 2)) + Real.sqrt (1 / (b + 2)) + Real.sqrt (1 / (c + 2)) \u2227 Real.sqrt (1 / (a + 2)) + Real.sqrt (1 / (b + 2)) + Real.sqrt (1 / (c + 2)) < 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1701_plus (a b c : \u211d) (habc : a * b * c = 1) (h : 0 < a \u2227 0 < b \u2227 0 < c) : (\u2203 x y z :\u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2227 a ^ 2 / (x ^ 2) + b ^ 2 / (y ^ 2) + c ^ 2 / (z ^ 2) \u2265 3 \u2227 x * y * z = 1 \u2227 x + y + z \u2264 3):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1772 (a b c: \u211d) (ha : a \u2260 0) (hb : b \u2260 0) (hc : c \u2260 0) : 1 / a ^ 2 + 1 / b ^ 2 + 1 / c ^ 2 \u2265 (a + b + c) / (a * b * c) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1772_plus (a b c : \u211d) (habc : a * b * c \u2260 0) : 1 / a ^ 2 + 1 / b ^ 2 + 1 / c ^ 2 \u2265 (1 / a + 1 / b + 1 / c) ^ 2 / 9 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_773 (a b c : \u211d) : (1 / (a ^ 2 + b * c) + 1 / (b ^ 2 + c * a) + 1 / (c ^ 2 + a * b)) \u2265 3 * (a + b + c) ^ 2 / (2 * (a ^ 2 + b ^ 2 + c ^ 2) * (a * b + b * c + a * c)) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_773_plus (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : Real.sqrt (a ^ 2 + b ^ 2) * Real.sqrt (b ^ 2 + c ^ 2) * Real.sqrt (a ^ 2 + c ^ 2) \u2265 (a * b * c) * (Real.sqrt 2 - 1):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_18047_plus (x y z : \u211d) (h\u2081 : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z) (h\u2082 : x + y + z \u2264 3) (h\u2083 : x * y * z \u2264 1) : 1 + (x * y + y * z + z * x) ^ 2 / (x * y + y * z + z * x) \u2265 (x * y + y * z + z * x):= by", "target": "\n  rcases h\u2081 with \u27e8hx, hy, hz\u27e9\n  by_cases h : x * y + y * z + z * x = 0\n  all_goals simp_all [sq]\n  all_goals nlinarith [mul_nonneg hx hy, mul_nonneg hy hz, mul_nonneg hz hx,\n    mul_nonneg (sq_nonneg (x - y)) hz, mul_nonneg (sq_nonneg (y - z)) hx,\n    mul_nonneg (sq_nonneg (z - x)) hy]\n  <;> linarith\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_33096_plus (n : \u2115) (hn : 1 < n) : (\u2211 k in Finset.Ico 0 n, 1 / Real.sqrt 5 * ((1 + Real.sqrt 5) / 2)^k) \u2265 1/ Real.sqrt 5 * ((1 + Real.sqrt 5) / 2)^0 := by", "target": "\n  cases n with\n  | zero => norm_num at hn\n  | succ n =>\n    simp_all [Finset.sum_range_succ']\n    apply le_of_sub_nonneg\n    field_simp\n    ring_nf\n    positivity"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_46000_plus (a b c : \u211d) (h\u2081 : 0 \u2264 c \u2227 c \u2264 b \u2227 b \u2264 a \u2227 a \u2264 2) (h\u2082 : a + b + c = 3) : a * b * c * (a^2 + b^2 + c^2) \u2264 36 := by", "target": "\n  have : 0 \u2264 a * b := by nlinarith\n  have : 0 \u2264 b * c := by nlinarith\n  have : 0 \u2264 c * a := by nlinarith\n  have : 0 \u2264 a * b * c := by nlinarith\n  have : a ^ 2 + b ^ 2 + c ^ 2 \u2264 9 := by nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  have : a * b * c * (a ^ 2 + b ^ 2 + c ^ 2) \u2264 36 := by nlinarith [mul_self_nonneg (a * b + b * c + c * a), mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b)]\n  linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2180 : \u2200 k : \u2115, k^3 = 6 * choose k 3 + 6 * choose k 2 + choose k 1 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2180_plus : \u2200 k : \u2115, k \u2265 3 \u2192 12 * choose k 3 \u2264 (k + 1)^3 * choose k 3 \u2228 (k + 1)^3 * choose k 3 \u2264 12 * choose k 3 \u2228 (k + 1)^3 * choose k 3 \u2264 12 * choose k 3 \u2228 (k + 1)^3 * choose k 3 \u2264 12 * choose k 3 \u2228 (k + 1)^3 * choose k 3 \u2264 12 * choose k 3 \u2228 (k + 1)^3 * choose k 3 \u2264 12 * choose k 3 \u2228 (k + 1)^3 * choose k 3 \u2264 12 * choose k 3 \u2228 (k + 1)^3 * choose k 3 \u2264 12 * choose k 3 \u2228 (k + 1)^3 * choose k 3 \u2264 12 * choose k 3 \u2228 (k + 1)^3 * choose k 3 \u2264 12 * choose k 3 \u2228 (k + 1)^3 * choose k 3 \u2264 12 * choose k 3 \u2228 (k + 1)^3 * choose k 3 \u2264 12 * choose k 3 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_13369_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (h : a + b + c \u2264 3) (h' : 0 \u2264 a * b) (h'' : 0 \u2264 a * c) (h''' : 0 \u2264 b * c) : a ^ 2 + b ^ 2 + c ^ 2 + (a * b + a * c + b * c) * (a * b + a * c + b * c) * (a * b + a * c + b * c) \u2264 81:= by", "target": "\n  have : (a + b + c) ^ 2 \u2264 9 := by nlinarith\n  nlinarith [mul_nonneg h' h'', mul_nonneg h' h''', mul_nonneg h'' h''']\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_18886_plus (x y z t : \u211d) (h\u2080 : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z \u2227 0 \u2264 t) (h\u2081 : x + y + z + t = 1) (h\u2082 : x * y + x * z + x * t + y * z + y * t + z * t \u2264 1) : x ^ 2 * y ^ 2 * z ^ 2 * t ^ 2 \u2264 (x * y + x * z + x * t + y * z + y * t + z * t) ^ 2:= by", "target": "\n  have h\u2083 : 0 \u2264 x * y := by nlinarith\n  have h\u2084 : 0 \u2264 x * z := by nlinarith\n  have h\u2085 : 0 \u2264 x * t := by nlinarith\n  have h\u2086 : 0 \u2264 y * z := by nlinarith\n  have h\u2087 : 0 \u2264 y * t := by nlinarith\n  have h\u2088 : 0 \u2264 z * t := by nlinarith\n  have h\u2089 : 0 \u2264 x * y * z * t := by nlinarith\n  have h\u2081\u2080 : 0 \u2264 x * y * z := by nlinarith\n  have h\u2081\u2081 : 0 \u2264 x * y * t := by nlinarith\n  have h\u2081\u2082 : 0 \u2264 x * z * t := by nlinarith\n  have h\u2081\u2083 : 0 \u2264 y * z * t := by nlinarith\n  have h\u2081\u2084 : 0 \u2264 x * y * z * t := by nlinarith\n  nlinarith [sq_nonneg (x * y + x * z + x * t + y * z + y * t + z * t),\n    mul_nonneg h\u2083 h\u2084, mul_nonneg h\u2085 h\u2086, mul_nonneg h\u2087 h\u2088, mul_nonneg h\u2089 h\u2081\u2080, mul_nonneg h\u2081\u2081 h\u2081\u2082, mul_nonneg h\u2081\u2083 h\u2081\u2084]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_474 (x : \u211d) : (x^5 - 1) / (x - 1) = (x^4 + x^3 + x^2 + x + 1) \u2227 (x^4 + x^3 + x^2 + x + 1) = (x^2 + 3*x + 1)^2 - 5*x*(x + 1)^2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_474_plus (x : \u211d) (hx : x \u2260 1) : \u2203 y, y \u2260 0 \u2227 \u2203 z, z \u2260 0 \u2227 (x^5 - 1) / (x - 1) = y * z \u2227 y * z = (x^4 + x^3 + x^2 + x + 1) \u2227 (x^4 + x^3 + x^2 + x + 1) = (x^2 + 3*x + 1)^2 - 5*x*(x + 1)^2 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4162 (a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b + c = 3) : a^3 * (a + b) + b^3 * (b + c) + c^3 * (c + a) \u2265 6 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4162_plus (a b c : \u211d) (hab : a + b + c = 3) (h : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a * b + b * c + c * a \u2264 3) : a ^ 3 * (b + c) ^ 2 + b ^ 3 * (c + a) ^ 2 + c ^ 3 * (a + b) ^ 2 + 3 * (a ^ 2 * b ^ 2 * c ^ 2) \u2265 (a * b) ^ 2 * (b + c) + (b * c) ^ 2 * (c + a) + (c * a) ^ 2 * (a + b):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_10787_plus (a b c : \u211d) (hab : 0 < a) (hb : 0 < b) (hc : 0 < c) (h : a + b + c = 2) (h' : a * b + b * c + c * a = 1) : a ^ 2 / (1 + a ^ 2) + b ^ 2 / (1 + b ^ 2) + c ^ 2 / (1 + c ^ 2) \u2265 3 * (a * b * c) / (a * b + b * c + c * a):= by", "target": "\n  have : a * b * c \u2264 1 / 3 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      sq_nonneg (a + b + c)]\n  have h\u2081 : a ^ 2 / (1 + a ^ 2) \u2265 a ^ 2 / 3 := by\n    gcongr\n    nlinarith\n  have h\u2082 : b ^ 2 / (1 + b ^ 2) \u2265 b ^ 2 / 3 := by\n    gcongr\n    nlinarith\n  have h\u2083 : c ^ 2 / (1 + c ^ 2) \u2265 c ^ 2 / 3 := by\n    gcongr\n    nlinarith\n  have h\u2084 : a ^ 2 / (1 + a ^ 2) + b ^ 2 / (1 + b ^ 2) + c ^ 2 / (1 + c ^ 2) \u2265 a ^ 2 / 3 + b ^ 2 / 3 + c ^ 2 / 3 := by\n    linarith\n  have h\u2085 : a ^ 2 / 3 + b ^ 2 / 3 + c ^ 2 / 3 \u2265 3 * (a * b * c) / (a * b + b * c + c * a) := by\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4113 (x y z : \u211d) (h : 0 < x \u2227 x \u2264 y \u2227 y < z \u2227 z \u2264 4 * x) : y * z + z * x - x * y \u2264 (x ^ 2 + y ^ 2 + z ^ 2) / 2 \u2227 (y * z + z * x - x * y = (x ^ 2 + y ^ 2 + z ^ 2) / 2 \u2194 x + y = z) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4113_plus (x y z : \u211d) (h\u2081 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2082 : x + y + z = 3) (h\u2083 : x * y + y * z + z * x \u2264 3) : 1 / (x + 1) ^ 2 + 1 / (y + 1) ^ 2 + 1 / (z + 1) ^ 2 \u2265 1 / (3 + 1) ^ 2 \u2227 (1 / (x + 1) ^ 2 + 1 / (y + 1) ^ 2 + 1 / (z + 1) ^ 2 \u2265 1 / (3 + 1) ^ 2 \u2194 1 / (x + 1) ^ 2 + 1 / (y + 1) ^ 2 + 1 / (z + 1) ^ 2 \u2265 1 / (3 + 1) ^ 2):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_2792_plus (x a b c : \u211d) (hx : 0 \u2264 x) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : x ^ 2 * b ^ 2 + 2 * x * a * b * c + a ^ 2 * c ^ 2 \u2264 x ^ 4 - x ^ 2 * (a ^ 2 + c ^ 2) + a ^ 2 * c ^ 2 + (x ^ 2 + a ^ 2 + c ^ 2) * (x ^ 2 + b ^ 2 + a ^ 2 + c ^ 2):= by", "target": "\n  nlinarith [sq_nonneg (x - b), sq_nonneg (x - a), sq_nonneg (x - c),\n    sq_nonneg (b - a), sq_nonneg (b - c), sq_nonneg (a - c),\n    mul_nonneg hx hb, mul_nonneg hx hc, mul_nonneg hb hc,\n    mul_nonneg (sq_nonneg a) (sq_nonneg c),\n    mul_nonneg (sq_nonneg b) (sq_nonneg a),\n    mul_nonneg (sq_nonneg c) (sq_nonneg b)]\n  <;> simp [mul_add, add_mul, mul_comm, mul_left_comm, mul_assoc, hx, hb, hc]\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_13994_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 1) (h' : x * y + y * z + z * x \u2264 1) : x ^ 2 * y ^ 2 * z ^ 2 * (x + y + z) ^ 2 / (x * y * z) \u2264 x * y + y * z + z * x:= by", "target": "\n  have h1 : 0 \u2264 x * y := by positivity\n  have h2 : 0 \u2264 y * z := by positivity\n  have h3 : 0 \u2264 z * x := by positivity\n  have h4 : 0 \u2264 x * y * z := by positivity\n  have h5 : 0 \u2264 x * y * z * (x + y + z) := by positivity\n  have h6 : x * y * z * (x + y + z) \u2264 1 := by nlinarith\n  have h7 : x ^ 2 * y ^ 2 * z ^ 2 * (x + y + z) ^ 2 / (x * y * z) = x * y * z * (x + y + z) * (x + y + z) := by\n    by_cases h8 : x * y * z = 0 <;> field_simp [h8] <;> ring\n  rw [h7]\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_12789_plus (a b c : \u211d) (hab : 0 < a) (hb : 0 < b) (hc : 0 < c) (h : a + b + c = 1) : 1 / (1 - a ^ 2) + 1 / (1 - b ^ 2) + 1 / (1 - c ^ 2) \u2265 9 * (a * b + b * c + c * a):= by", "target": "\n  have h\u2081 : a ^ 2 + b ^ 2 + c ^ 2 < 1 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  have h\u2082 : 0 < 1 - a ^ 2 := by nlinarith\n  have h\u2083 : 0 < 1 - b ^ 2 := by nlinarith\n  have h\u2084 : 0 < 1 - c ^ 2 := by nlinarith\n  have h\u2085 : 1 / (1 - a ^ 2) \u2265 1 := by\n    rw [ge_iff_le, one_le_div h\u2082]\n    nlinarith\n  have h\u2086 : 1 / (1 - b ^ 2) \u2265 1 := by\n    rw [ge_iff_le, one_le_div h\u2083]\n    nlinarith\n  have h\u2087 : 1 / (1 - c ^ 2) \u2265 1 := by\n    rw [ge_iff_le, one_le_div h\u2084]\n    nlinarith\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_10416_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 a \u2264 1) (hb : 0 \u2264 b \u2227 b \u2264 1) (hc : 0 \u2264 c \u2227 c \u2264 1) (habc : a * b * c \u2260 0) : a * b * (a * c) * (b * c) \u2264 1 \u2227 a * b * c * (a * b * c) * (a * c * (a * b)) \u2264 1 \u2227 a * b * c * (a * b * c) * (b * c * (a * b)) \u2264 1 \u2227 a * b * c * (a * b * c) * (b * c * (b * c)) \u2264 1 := by", "target": "\n  rcases hab with \u27e8ha\u2080, ha\u2081\u27e9\n  rcases hb with \u27e8hb\u2080, hb\u2081\u27e9\n  rcases hc with \u27e8hc\u2080, hc\u2081\u27e9\n  have h\u2080 : 0 \u2264 a * b := by positivity\n  have h\u2081 : 0 \u2264 a * c := by positivity\n  have h\u2082 : 0 \u2264 b * c := by positivity\n  have h\u2083 : 0 \u2264 a * b * c := by positivity\n  have h\u2084 : a * b \u2264 1 := by\n    nlinarith\n  have h\u2085 : a * c \u2264 1 := by\n    nlinarith\n  have h\u2086 : b * c \u2264 1 := by\n    nlinarith\n  have h\u2087 : a * b * c \u2264 1 := by\n    nlinarith\n  have h\u2088 : a * b * (a * c) * (b * c) \u2264 1 := by\n    calc\n      a * b * (a * c) * (b * c) \u2264 1 * 1 * 1 := by gcongr <;> nlinarith\n      _ = 1 := by norm_num\n  have h\u2089 : a * b * c * (a * b * c) * (a * c * (a * b)) \u2264 1 := by\n    calc\n      a * b * c * (a * b * c) * (a * c * (a * b)) \u2264 1 * 1 * 1 := by gcongr <;> nlinarith\n      _ = 1 := by norm_num\n  have h\u2081\u2080 : a * b * c * (a * b * c) * (b * c * (a * b)) \u2264 1 := by\n    calc\n      a * b * c * (a * b * c) * (b * c * (a * b)) \u2264 1 * 1 * 1 := by gcongr <;> nlinarith\n      _ = 1 := by norm_num\n  have h\u2081\u2081 : a * b * c * (a * b * c) * (b * c * (b * c)) \u2264 1 := by\n    calc\n      a * b * c * (a * b * c) * (b * c * (b * c)) \u2264 1 * 1 * 1 := by gcongr <;> nlinarith\n      _ = 1 := by norm_num\n  exact \u27e8h\u2088, h\u2089, h\u2081\u2080, h\u2081\u2081\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3181 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a * (b + c) ^ 2 / Real.sqrt (b ^ 4 - b ^ 2 * c ^ 2 + c ^ 4) + b * (c + a) ^ 2 / Real.sqrt (c ^ 4 - c ^ 2 * a ^ 2 + a ^ 4) + c * (a + b) ^ 2 / Real.sqrt (a ^ 4 - a ^ 2 * b ^ 2 + b ^ 4)) \u2264 4 * (a + b + c) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3181_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : a ^ 2 + b ^ 2 + c ^ 2 + (1 / 2) * (a ^ 2 * b ^ 2 / (a ^ 2 + b ^ 2) + b ^ 2 * c ^ 2 / (b ^ 2 + c ^ 2) + c ^ 2 * a ^ 2 / (c ^ 2 + a ^ 2)) \u2264 (a + b + c) ^ 2 + 4 * (a * b + b * c + c * a):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_1619_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b) (hca : 0 \u2264 c) (h : a + b + c = 1) (h\u2082 : 0 \u2264 a * b) (h\u2083 : 0 \u2264 a * c) (h\u2084 : 0 \u2264 b * c) : Real.sqrt (1 - a) * Real.sqrt (1 - b) * Real.sqrt (1 - c) \u2265 (Real.sqrt (1 - a * b) * Real.sqrt (1 - c) - Real.sqrt (1 - b * c)) \u2227 Real.sqrt (1 - a) * Real.sqrt (1 - b) * Real.sqrt (1 - c) \u2265 Real.sqrt (1 - a * b) * Real.sqrt (1 - c) - Real.sqrt (1 - b * c)  := by", "target": "\n  have h\u2080 : Real.sqrt (1 - a) \u2265 0 := Real.sqrt_nonneg (1 - a)\n  have h\u2081 : Real.sqrt (1 - b) \u2265 0 := Real.sqrt_nonneg (1 - b)\n  have h\u2082 : Real.sqrt (1 - c) \u2265 0 := Real.sqrt_nonneg (1 - c)\n  have h\u2083 : Real.sqrt (1 - a * b) \u2265 0 := Real.sqrt_nonneg (1 - a * b)\n  have h\u2084 : Real.sqrt (1 - b * c) \u2265 0 := Real.sqrt_nonneg (1 - b * c)\n  have h\u2085 : Real.sqrt (1 - a) * Real.sqrt (1 - b) \u2265 0 := mul_nonneg h\u2080 h\u2081\n  have h\u2086 : Real.sqrt (1 - a) * Real.sqrt (1 - b) * Real.sqrt (1 - c) \u2265 0 := mul_nonneg h\u2085 h\u2082\n  have h\u2087 : Real.sqrt (1 - a * b) * Real.sqrt (1 - c) \u2265 0 := mul_nonneg h\u2083 h\u2082\n  have h\u2088 : Real.sqrt (1 - a * b) * Real.sqrt (1 - c) - Real.sqrt (1 - b * c) \u2264 Real.sqrt (1 - a) * Real.sqrt (1 - b) * Real.sqrt (1 - c) := by\n    nlinarith [sq_sqrt (show 0 \u2264 1 - a by linarith),\n      sq_sqrt (show 0 \u2264 1 - b by linarith),\n      sq_sqrt (show 0 \u2264 1 - c by linarith),\n      sq_sqrt (show 0 \u2264 1 - a * b by nlinarith),\n      sq_sqrt (show 0 \u2264 1 - b * c by nlinarith)]\n  exact \u27e8by linarith, by linarith\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_2428_plus (x y z : \u211d) (h\u2081 : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z) (h\u2082 : x + y + z = 3) (h\u2083 : x * y + y * z + z * x \u2264 3) : x ^ 2 * y ^ 2 * z ^ 2 * (x ^ 2 + y ^ 2 + z ^ 2) \u2264 (x ^ 2 + y ^ 2 + z ^ 2) ^ 3:= by", "target": "\n  have h\u2084 : x ^ 2 + y ^ 2 + z ^ 2 \u2264 9 := by\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n      sq_nonneg (x + y + z)]\n  have h\u2085 : 0 \u2264 x ^ 2 * y ^ 2 * z ^ 2 := by positivity\n  nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (x ^ 2 - z ^ 2), sq_nonneg (y ^ 2 - z ^ 2),\n    mul_self_nonneg (x * y), mul_self_nonneg (x * z), mul_self_nonneg (y * z)]\n  <;> assumption\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_55573_plus : \u2200 a b : \u2115, a \u2264 30 \u2227 b \u2264 30 \u2227 a \u2264 b \u2192 \u2211 k in (Finset.Icc a b), k^2 \u2265 a^2 \u2227 \u2211 k in (Finset.Icc a b), k^2 \u2264 30^2 * (b - a + 1):= by", "target": "\n  rintro a b \u27e8h\u2081, h\u2082, h\u2083\u27e9\n  have : a \u2264 30 := by linarith\n  have : b \u2264 30 := by linarith\n  interval_cases a <;> interval_cases b <;> norm_num\n  all_goals decide\n  <;> norm_num\n  <;> decide\n  <;> norm_num\n  <;> decide\n  <;> norm_num\n  <;> decide\n  <;> norm_num\n  <;> decide\n  <;> norm_num\n  <;> decide\n  <;> norm_num\n  <;> decide\n  <;> norm_num\n  <;> decide"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_8495_plus : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 a * b > 0 \u2227 b * c > 0 \u2227 c * a > 0 \u2227 (3 * (a + b + c) / (2 * (a * b + b * c + c * a)) \u2265 1 / (b + c) + 1 / (c + a) + 1 / (a + b)) \u2228 (3 * (a + b + c) / (2 * (a * b + b * c + c * a)) < 1 / (b + c) + 1 / (c + a) + 1 / (a + b)) \u2227 (a * b > 0 \u2227 b * c > 0 \u2227 c * a > 0):= by", "target": "\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  apply Or.inl\n  constructor\n  positivity\n  constructor\n  positivity\n  constructor\n  positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le,\n    mul_nonneg (sq_nonneg (a - b)) hc.le, mul_nonneg (sq_nonneg (b - c)) ha.le, mul_nonneg (sq_nonneg (c - a)) hb.le,\n    mul_nonneg (sq_nonneg (a - b)) hb.le, mul_nonneg (sq_nonneg (b - c)) hc.le, mul_nonneg (sq_nonneg (c - a)) ha.le]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_38224_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 1) (h\u2081 : 0 \u2264 x * y) (h\u2082 : 0 \u2264 x * z) (h\u2083 : 0 \u2264 y * z) : x * y * z * (x * y + x * z + y * z) + x * y * (x * z) * (y * z) + x * z * (y * z) * (x * y) \u2264 1/9  := by", "target": "\n  have h\u2084 : x * y + x * z + y * z \u2264 1 := by\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  have h\u2085 : x * y * z \u2264 1 / 9 := by\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  have h\u2086 : 0 \u2264 x * y * z := by\n    apply mul_nonneg <;> nlinarith\n  nlinarith [mul_self_nonneg (x * y + x * z + y * z),\n    mul_self_nonneg (x * y - x * z), mul_self_nonneg (x * y - y * z),\n    mul_self_nonneg (x * z - y * z)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1731 (a b c : \u211d) (h\u2081 : a^2 + b^2 + c^2 = 9) (h\u2082 : a + b + c = 5): 1 \u2264 c \u2227 c \u2264 7/3 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1731_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a + b + c = 1) (h\u2083 : 0 \u2264 a * b) (h\u2084 : 0 \u2264 a * c) (h\u2085 : 0 \u2264 b * c) : a ^ 2 * b ^ 2 * c ^ 2 \u2264 (a + b + c) ^ 3 / 27 \u2227 a * b * c \u2264 1 / 27:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_47202_plus (n : \u2115) (hn : 1 < n) : (\u2203 k : \u2115, n \u2223 2^k - 1 \u2227 2^k - 1 \u2264 n^2) \u2194 n \u2223 n^2 \u2227 n \u2264 n^2 \u2228 n = 1 \u2228 n = 2 \u2228 n = 3 \u2228 n = 4 \u2228 n \u2265 5 := by", "target": "\n  have h : n \u2223 n^2 := by\n    exact dvd_pow_self n (by omega)\n  have h\u2081 : n \u2264 n^2 := by\n    nlinarith\n  have h\u2082 : n \u2265 5 \u2192 n \u2223 n^2 \u2227 n \u2264 n^2 := by\n    intro hn\u2081\n    exact \u27e8h, h\u2081\u27e9\n  have h\u2083 : n = 1 \u2228 n = 2 \u2228 n = 3 \u2228 n = 4 \u2228 n \u2265 5 := by\n    omega\n  constructor\n  intro h\n  rcases h with \u27e8k, hk\u2081, hk\u2082\u27e9\n  aesop\n  intro h\n  rcases h with (h | h | h | h | h) <;> simp_all\n  <;> use 0 <;> simp_all\n  <;> use 1 <;> simp_all\n  <;> use 2 <;> simp_all\n  <;> use 3 <;> simp_all\n  <;> use 4 <;> simp_all\n  <;> omega"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_58260_plus (n : \u2115) (hn : 0 < n) : (\u2203 f : \u211d \u2192 \u211d, Continuous f \u2227 \u2200 x y : \u211d, f (x + y) * f (x - y) = f x ^ 2 - f y ^ 2 \u2227 \u2203 k :\u211d, \u2200 x : \u211d, f x = k * x \u2227 k \u2260 0 \u2228 \u2200 x : \u211d, f x = 0 \u2228 \u2203 k :\u211d, \u2200 x : \u211d, f x = k * x \u2227 k = 0 ) \u2194 \u2203 k :\u211d, \u2200 x : \u211d, \u2203 y : \u211d, y \u2260 0 \u2227 y \u2264 x \u2228 y = x \u2228 x < y \u2227 \u2203 z : \u211d, z \u2264 x \u2228 \u2203 z : \u211d, x \u2264 z \u2228 \u2203 z : \u211d, z \u2264 x \u2228 \u2203 z : \u211d, x \u2264 z := by", "target": "\n  constructor\n  intro h\n  use 1\n  intro x\n  use x\n  by_cases hx : x = 0 <;> simp_all\n  <;> norm_num\n  <;> linarith\n  intro h\n  use fun x => x\n  constructor\n  exact continuous_id\n  intro x y\n  constructor\n  ring\n  use 1\n  intro x\n  by_cases hx : x = 0 <;> simp_all\n  <;> norm_num\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_43841_plus (a b c : \u211d) (habc : a + b + c = 1) (h : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) : 9 * (a * b) ^ 2 / (1 + (a * b) ^ 2) + 9 * (b * c) ^ 2 / (1 + (b * c) ^ 2) + 9 * (c * a) ^ 2 / (1 + (c * a) ^ 2) \u2264 9 * (a ^ 2 + b ^ 2 + c ^ 2):= by", "target": "\n  have h\u2081 : a ^ 2 + b ^ 2 + c ^ 2 = 1 - 2 * (a * b + b * c + c * a) := by\n    nlinarith\n  have h\u2082 : 0 \u2264 a * b := by\n    nlinarith\n  have h\u2083 : 0 \u2264 b * c := by\n    nlinarith\n  have h\u2084 : 0 \u2264 c * a := by\n    nlinarith\n  have h\u2085 : 9 * (a * b) ^ 2 / (1 + (a * b) ^ 2) \u2264 9 * (a ^ 2 + b ^ 2) / 2 := by\n    rw [div_le_div_iff]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a + b)]\n    nlinarith\n    nlinarith\n  have h\u2086 : 9 * (b * c) ^ 2 / (1 + (b * c) ^ 2) \u2264 9 * (b ^ 2 + c ^ 2) / 2 := by\n    rw [div_le_div_iff]\n    nlinarith [sq_nonneg (b - c), sq_nonneg (b + c)]\n    nlinarith\n    nlinarith\n  have h\u2087 : 9 * (c * a) ^ 2 / (1 + (c * a) ^ 2) \u2264 9 * (c ^ 2 + a ^ 2) / 2 := by\n    rw [div_le_div_iff]\n    nlinarith [sq_nonneg (c - a), sq_nonneg (c + a)]\n    nlinarith\n    nlinarith\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_45261_plus : \u2200 n : \u2115, 1 < n \u2192 1 < (n : \u211d) ^ n \u2227 (n : \u211d) ^ n \u2264 (n + 1)^ n \u2228 (n : \u211d) ^ n > (n + 1)^ n \u2228 (n : \u211d) ^ n \u2264 (n + 1)^ n \u2228 (n : \u211d) ^ n > (n + 1)^ n \u2228 (n : \u211d) ^ n \u2264 (n + 1)^ n \u2228 (n : \u211d) ^ n > (n + 1)^ n \u2228 (n : \u211d) ^ n \u2264 (n + 1)^ n \u2228 (n : \u211d) ^ n > (n + 1)^ n \u2228 (n : \u211d) ^ n \u2264 (n + 1)^ n \u2228 (n : \u211d) ^ n > (n + 1)^ n  := by", "target": "\n  intro n h\n  norm_cast at h \u22a2\n  rcases n with (_ | _ | n) <;> norm_num <;>\n  simp_all [Nat.succ_le_succ_iff] <;>\n  norm_num <;>\n  ring_nf <;>\n  norm_num <;>\n  omega"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_30475_plus  (A : \u211d)\n  (h\u2080 : 0 < A \u2227 A \u2264 60)\n  (h\u2081 : 0 < (A / 2)) :\n  (1 - Real.cos A) \u2265 1 - 2 * Real.cos (A / 2) ^ 2 := by", "target": "\n  have h\u2082 : Real.cos A = 2 * Real.cos (A / 2) ^ 2 - 1 := by\n    rw [\u2190 Real.cos_sq_add_sin_sq (A / 2)]\n    ring_nf\n    <;> simp [Real.cos_sq, Real.sin_sq]\n    <;> ring\n  nlinarith\n  <;> assumption\n  <;> simp_all\n  <;> nlinarith\n  <;> simp_all\n  <;> nlinarith\n  <;> simp_all\n  <;> nlinarith\n  <;> simp_all\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_14302_plus (a b : \u2124) (h\u2081 : Nat.gcd a.natAbs b.natAbs = 1) : \u2203 x y : \u2124, a*x + b*y = 1 \u2228 \u2203 x y : \u2124, a*x + b*y = 1 \u2228 \u2203 x y : \u2124, a*x + b*y = 1 \u2228 \u2203 x y : \u2124, a*x + b*y = 1 \u2228 \u2203 x y : \u2124, a*x + b*y = 1 \u2228 \u2203 x y : \u2124, a*x + b*y = 1 \u2228 \u2203 x y : \u2124, a*x + b*y = 1 \u2228 \u2203 x y : \u2124, a*x + b*y = 1 \u2228 \u2203 x y : \u2124, a*x + b*y = 1 \u2228 \u2203 x y : \u2124, a*x + b*y = 1 := by", "target": "\n  use a.gcdA b, a.gcdB b\n  have h\u2082 := (Int.gcd_eq_gcd_ab a b).symm\n  simp_all [Int.gcd]\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_35588_plus (a b c : \u211d) (hab : 0 < a \u2227 0 < b \u2227 0 < c) (habc : a + b + c = 1) : (1 / (a + b + c) + 1 / (b + c + a) + 1 / (c + a + b)) * (a * b * c) \u2265 a * b * c:= by", "target": "\n  simp_all only [add_assoc, add_left_comm, add_comm]\n  ring_nf\n  nlinarith [mul_pos hab.1 hab.2.1, mul_pos hab.2.1 hab.2.2, mul_pos hab.1 hab.2.2]\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_371 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) : (a - b) ^ 2 + (b - c) ^ 2 + (c - a) ^ 2 \u2265 (1 - 27 * a * b * c) / 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_371_plus (a b c : \u211d) (habc : a + b + c = 1) (h : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (hab : 0 \u2264 a * b) (hbc : 0 \u2264 b * c) (hca : 0 \u2264 c * a) : (1 - 27 * a * b * c) / 2 \u2264 (a - b) ^ 2 + (b - c) ^ 2 + (c - a) ^ 2 \u2227 (1 - 27 * a * b * c) / 2 \u2264 1:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_18797_plus : \u2200 a b : \u211d, 0 \u2264 a \u2227 0 \u2264 b \u2227 a + b \u2264 2 \u2192 Real.sqrt (8 * a ^ 3 + a * b) + Real.sqrt (8 * b ^ 3 + a * b) \u2265 2 * Real.sqrt (16 - 7 * a * b) \u2228 (Real.sqrt (8 * a ^ 3 + a * b) + Real.sqrt (8 * b ^ 3 + a * b) < 2 * Real.sqrt (16 - 7 * a * b) \u2227 (a + b) ^ 2 \u2264 4 * (a * b + 1)) := by", "target": "\n  rintro a b \u27e8ha, hb, hab\u27e9\n  by_cases h : Real.sqrt (8 * a ^ 3 + a * b) + Real.sqrt (8 * b ^ 3 + a * b) \u2265 2 * Real.sqrt (16 - 7 * a * b)\n  exact Or.inl h\n  exact Or.inr \u27e8by linarith, by nlinarith [sq_nonneg (a - b), sq_nonneg (a + b), sq_nonneg (a - 1), sq_nonneg (b - 1)]\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_74002_plus (a b c : \u211d) (hab : 0 \u2264 (a - b) ^ 2) (hbc : 0 \u2264 (b - c) ^ 2) (hca : 0 \u2264 (c - a) ^ 2) (h : a ^ 2 + b ^ 2 + c ^ 2 + (a + b + c) ^ 2 \u2264 4) : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) * Real.sqrt (1 + c ^ 2) \u2265 Real.sqrt (1 + (a * b + b * c + c * a) ^ 2):= by", "target": "\n  have h\u2081 : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) * Real.sqrt (1 + c ^ 2) = Real.sqrt ((1 + a ^ 2) * (1 + b ^ 2) * (1 + c ^ 2)) := by\n    rw [Real.sqrt_mul, Real.sqrt_mul]\n    all_goals positivity\n  rw [h\u2081]\n  apply Real.sqrt_le_sqrt\n  nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    sq_nonneg (a * b + b * c + c * a), sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a),\n    sq_nonneg (c * a - a * b)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_4985_plus (a b c : \u211d) (hab : 0 < a) (hb : 0 < b) (hc : 0 < c) (h : a + b + c = 1) : (1 - a) * (1 - b) * (1 - c) * (a * b + b * c + c * a) \u2265 0 \u2227 (1 - a) * (1 - b) * (1 - c) * (a * b + b * c + c * a) * (a * b * c) \u2265 0 \u2227 (1 - a) * (1 - b) * (1 - c) * (a * b + b * c + c * a) * (a * b * c) * (b * c + c * a + a * b) \u2265 0  := by", "target": "\n  have h\u2081 : 0 < a * b := by positivity\n  have h\u2082 : 0 < b * c := by positivity\n  have h\u2083 : 0 < c * a := by positivity\n  have h\u2084 : 0 < a * b * c := by positivity\n  have h\u2085 : 0 < a * b * c * (b * c + c * a + a * b) := by positivity\n  have h\u2086 : (1 - a) * (1 - b) * (1 - c) \u2265 0 := by\n    apply mul_nonneg\n    all_goals nlinarith\n  have h\u2087 : (1 - a) * (1 - b) * (1 - c) * (a * b + b * c + c * a) \u2265 0 := by\n    apply mul_nonneg h\u2086\n    nlinarith\n  have h\u2088 : (1 - a) * (1 - b) * (1 - c) * (a * b + b * c + c * a) * (a * b * c) \u2265 0 := by\n    apply mul_nonneg h\u2087\n    nlinarith\n  have h\u2089 : (1 - a) * (1 - b) * (1 - c) * (a * b + b * c + c * a) * (a * b * c) * (b * c + c * a + a * b) \u2265 0 := by\n    apply mul_nonneg h\u2088\n    nlinarith\n  exact \u27e8h\u2087, h\u2088, h\u2089\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_33658_plus (a b c d : \u211d) (habc : a * b * c * d = 1) : a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2 + (1 / a) ^ 2 + (1 / b) ^ 2 + (1 / c) ^ 2 + (1 / d) ^ 2 \u2265 4 * (a * b * c * d) ^ (1 / 3):= by", "target": "\n  field_simp [habc]\n  ring_nf\n  nlinarith [sq_nonneg (a - b), sq_nonneg (c - d), sq_nonneg (a + b), sq_nonneg (c + d), sq_nonneg (a * b - c * d), sq_nonneg (a * b + c * d), sq_nonneg (a * c - b * d), sq_nonneg (a * c + b * d), sq_nonneg (a * d - b * c), sq_nonneg (a * d + b * c)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2210 (a b c : \u211d) (ha : -3 / 4 \u2264 a) (hb : -3 / 4 \u2264 b) (hc : -3 / 4 \u2264 c) (habc : a + b + c = 1) : a / (1 + a ^ 2) + b / (1 + b ^ 2) + c / (1 + c ^ 2) \u2264 9 / 10 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2210_plus (a b c : \u211d) (habc : a + b + c = 1) (h : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (hab : 0 \u2264 a * b) (hbc : 0 \u2264 b * c) (hca : 0 \u2264 c * a) : 9 * (a * b * c) ^ 2 \u2264 (a + b + c) ^ 3 * (a * b + b * c + c * a):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3510 (a b c d : \u211d) (h : a + b + c = 3 * d) : a^2 + b^2 + c^2 + d^2 + a * b * c * d + 1 \u2265 a * b + b * c + c * a + (a + b + c) * d := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3510_plus (a b c d : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 0 \u2264 d) (h\u2082 : a + b + c + d = 1) (h\u2083 : a * b + a * c + a * d + b * c + b * d + c * d \u2264 1) : a ^ 2 * b ^ 2 * c ^ 2 * d ^ 2 \u2264 (a * b) * (c * d) * (a * b + c * d):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_202 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x^2 + y * z) / (y + z)^2 + (y^2 + z * x) / (z + x)^2 + (z^2 + x * y) / (x + y)^2 >= x / (y + z) + y / (z + x) + z / (x + y) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_202_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \u2203 a : \u211d, a \u2208 Set.Ioo 0 (1 : \u211d) \u2227 a \u2264 (x^2 + y * z) / (y + z)^2 + (y^2 + z * x) / (z + x)^2 + (z^2 + x * y) / (x + y)^2 \u2227 a \u2264 x / (y + z) + y / (z + x) + z / (x + y):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_22116_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 1) (h\u2081 : 0 \u2264 k \u2227 k \u2264 3) : Real.sqrt (1 + (2 * k * (a + b + c) - 3) ^ 2) \u2265 (2 * k * (a + b + c) - 3) * (a + b + c):= by", "target": "\n  have h\u2082 : (a + b + c) ^ 2 = 1 := by simp [h]\n  have h\u2083 : 0 \u2264 (2 * k * (a + b + c) - 3) ^ 2 := by nlinarith\n  have h\u2084 : Real.sqrt (1 + (2 * k * (a + b + c) - 3) ^ 2) \u2265 0 := Real.sqrt_nonneg _\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 1 + (2 * k * (a + b + c) - 3) ^ 2 from by nlinarith),\n    sq_nonneg (2 * k * (a + b + c) - 3)]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_12619_plus : \u2200 a b : \u211d, a * b \u2264 1 \u2227 0 \u2264 a \u2227 0 \u2264 b \u2192 Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) \u2265 2 * a * b \u2227 Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) \u2265 Real.sqrt (4 * a * b):= by", "target": "\n  rintro a b \u27e8hab, ha, hb\u27e9\n  have h\u2080 : 0 \u2264 Real.sqrt (1 + a ^ 2) := Real.sqrt_nonneg _\n  have h\u2081 : 0 \u2264 Real.sqrt (1 + b ^ 2) := Real.sqrt_nonneg _\n  have h\u2082 : 0 \u2264 Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) := mul_nonneg h\u2080 h\u2081\n  have h\u2083 : 0 \u2264 (a - b) ^ 2 := sq_nonneg (a - b)\n  have h\u2084 : 0 \u2264 (a * b) ^ 2 := sq_nonneg (a * b)\n  have h\u2085 : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) \u2265 2 * a * b := by\n    nlinarith [sq_sqrt (show 0 \u2264 1 + a ^ 2 from by positivity),\n      sq_sqrt (show 0 \u2264 1 + b ^ 2 from by positivity),\n      sq_nonneg (a - b),\n      sq_nonneg (a * b)]\n  have h\u2086 : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) \u2265 Real.sqrt (4 * a * b) := by\n    have h\u2087 : Real.sqrt (4 * a * b) \u2264 Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) := by\n      apply Real.sqrt_le_iff.mpr\n      constructor\n      \u00b7 positivity\n      \u00b7 nlinarith [sq_sqrt (show 0 \u2264 1 + a ^ 2 from by positivity),\n          sq_sqrt (show 0 \u2264 1 + b ^ 2 from by positivity),\n          sq_nonneg (a - b),\n          sq_nonneg (a * b)]\n    linarith\n  exact \u27e8h\u2085, h\u2086\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_41907_plus : \u2200 a b : \u2115, a \u2264 10000 \u2227 b \u2264 10000 \u2192 a \u2264 b \u2228 b \u2264 a \u2228 \u2203 x y :\u2115, a \u2264 x \u2227 b \u2264 y \u2227 x \u2264 10000 \u2227 y \u2264 10000 \u2227 x \u2264 y \u2228 \u2203 x y :\u2115, a \u2264 x \u2227 b \u2264 y \u2227 x \u2264 10000 \u2227 y \u2264 10000 \u2227 y \u2264 x \u2228 \u2203 x y :\u2115, a \u2264 x \u2227 b \u2264 y \u2227 x \u2264 10000 \u2227 y \u2264 10000 \u2227 x = y \u2228 \u2203 x y :\u2115, a \u2264 x \u2227 b \u2264 y \u2227 x \u2264 10000 \u2227 y \u2264 10000 \u2227 x < y \u2228 \u2203 x y :\u2115, a \u2264 x \u2227 b \u2264 y \u2227 x \u2264 10000 \u2227 y \u2264 10000 \u2227 y < x := by", "target": "\n  rintro a b \u27e8h\u2081, h\u2082\u27e9\n  by_cases h\u2083 : a \u2264 b\n  left\n  exact h\u2083\n  right\n  by_cases h\u2084 : b \u2264 a\n  left\n  exact h\u2084\n  right\n  use a, b\n  simp_all\n  <;> omega"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1646 (x y z : \u211d) : 5 * (x ^ 2 / y + y ^ 2 / z + z ^ 2 / x) + 36 * (x * y / (x + y) + y * z / (y + z) + z * x / (z + x)) \u2265 23 * (x + y + z) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1646_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \u2203 a : \u211d, a \u2265 1 \u2227 a * (x ^ 2 / y + y ^ 2 / z + z ^ 2 / x) + 36 * (x * y / (x + y) + y * z / (y + z) + z * x / (z + x)) \u2265 23 * (x + y + z) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_39786_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c \u2264 3) (h : 0 \u2264 a * b) (h' : 0 \u2264 a * c) (h'' : 0 \u2264 b * c) (h''' : 0 \u2264 a * b * c) : a ^ 2 + b ^ 2 + c ^ 2 + 3 * (a * b + b * c + c * a) \u2265 a * b * c * (a + b + c):= by", "target": "\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_nonneg hab hb, mul_nonneg hb hc, mul_nonneg hc hab,\n    mul_nonneg h h', mul_nonneg h' h'', mul_nonneg h'' h''',\n    mul_nonneg (sq_nonneg a) hb, mul_nonneg (sq_nonneg b) hc, mul_nonneg (sq_nonneg c) hab]\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_17725_plus (x : \u2115 \u2192 \u211d) (hx : \u2200 n, x n = (n : \u211d) ^ 3) : \u2203 N : \u2115, \u2200 n : \u2115, n > N \u2192 1 < (x n) ^ 2 \u2228 1 < (x n) ^ 3 \u2228 1 < (x n) ^ 4 \u2228 1 < (x n) ^ 5 \u2228 1 < (x n) ^ 6 \u2228 1 < (x n) ^ 7 \u2228 1 < (x n) ^ 8 \u2228 1 < (x n) ^ 9 \u2228 1 < (x n) ^ 10 := by", "target": "\n  use 10\n  intro n hn\n  simp only [hx, Nat.cast_pow]\n  norm_cast\n  rcases n with (_ | _ | _ | _ | _ | _ | _ | _ | _ | _ | n) <;>\n    simp_all [Nat.succ_le_iff]\n  all_goals\n    norm_num\n  all_goals\n    omega"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_3561_plus (a : \u211d) (ha : 0 < a \u2227 a < 1) : \u2203 N : \u2115, \u2200 n : \u2115, n >= N \u2192 1 / (n ^ 2) \u2264 |n * a ^ (n - 1)| \u2228 1 / (n ^ 2) \u2264 1:= by", "target": "\n  use 1\n  rintro n (hn : 1 \u2264 n)\n  have h : 1 / (n ^ 2) \u2264 1 := by\n    rw [Nat.div_le_iff_le_mul_add_pred (by positivity)]\n    ring_nf\n    nlinarith\n  exact Or.inr h"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_18873_plus (a b c : \u2124) (h\u2081 : 0 \u2264 a) (h\u2082 : 0 \u2264 b) (h\u2083 : 0 \u2264 c) : a ^ 2 + b ^ 2 + c ^ 2 + (2 * a * b * c) \u2265 a * b + b * c + c * a \u2227 a * b + b * c + c * a \u2265 0 \u2227 a * b * c \u2265 0 \u2227 a * b * c \u2265 0 \u2227 a * b * c \u2265 0 \u2227 a * b * c \u2265 0 \u2227 a * b * c \u2265 0 \u2227 a * b * c \u2265 0 \u2227 a * b * c \u2265 0 \u2227 a * b * c \u2265 0 \u2227 a * b * c \u2265 0  := by", "target": "\n  have h\u2084 : 0 \u2264 a * b := by positivity\n  have h\u2085 : 0 \u2264 b * c := by positivity\n  have h\u2086 : 0 \u2264 c * a := by positivity\n  have h\u2087 : 0 \u2264 a * b * c := by positivity\n  have h\u2088 : 0 \u2264 a * b * c * a := by positivity\n  have h\u2089 : 0 \u2264 a * b * c * b := by positivity\n  have h\u2081\u2080 : 0 \u2264 a * b * c * c := by positivity\n  have h\u2081\u2081 : a ^ 2 + b ^ 2 + c ^ 2 + 2 * a * b * c \u2265 a * b + b * c + c * a := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  exact \u27e8h\u2081\u2081, by positivity, by positivity, by positivity, by positivity, by positivity, by positivity, by positivity, by positivity, by positivity, by positivity\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_3417_plus : \u2200 a b c : \u211d, a * b > 0 \u2227 b * c > 0 \u2227 c * a > 0 \u2228 a * b < 0 \u2227 b * c < 0 \u2227 c * a < 0 \u2192 \u2203 x y z :\u211d, (x^2 * y + x^2 * z + y^2 * x + y^2 * z + z^2 * x + z^2 * y + 8 * x * y * z) * (x^2 * y + x^2 * z + y^2 * x + y^2 * z + z^2 * x + z^2 * y - 6 * x * y * z) \u2265 0 \u2228 (x^2 * y + x^2 * z + y^2 * x + y^2 * z + z^2 * x + z^2 * y + 8 * x * y * z) * (x^2 * y + x^2 * z + y^2 * x + y^2 * z + z^2 * x + z^2 * y - 6 * x * y * z) < 0 \u2227 (x^2 + y^2 + z^2) \u2265 3 * x * y * z:= by", "target": "\n  rintro a b c (\u27e8h\u2081, h\u2082, h\u2083\u27e9 | \u27e8h\u2081, h\u2082, h\u2083\u27e9)\n  use 0, 0, 0\n  simp\n  use 1, 1, 1\n  norm_num"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_479 (a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) : (a / Real.sqrt (2 * a + b) + b / Real.sqrt (2 * b + c) + c / Real.sqrt (2 * c + a)) \u2264 Real.sqrt (a + b + c) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_479_plus (a b c : \u211d) (hab : 0 < a) (hb : 0 < b) (hc : 0 < c) : \u2203 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 (a / Real.sqrt (2 * a + b) + b / Real.sqrt (2 * b + c) + c / Real.sqrt (2 * c + a)) \u2264 Real.sqrt (a + b + c) \u2227 (Real.sqrt (a + b + c) \u2264 (a + b + c + 3) / 2) \u2227 (a + b + c + 3) / 2 \u2264 (a + b + c + 3) / 2 \u2228 (a + b + c + 3) / 2 \u2264 (a + b + c + 3) / 2 \u2227 (a + b + c + 3) / 2 \u2264 (a + b + c + 3) / 2 \u2228 (a + b + c + 3) / 2 \u2264 (a + b + c + 3) / 2 \u2227 (a + b + c + 3) / 2 \u2264 (a + b + c + 3) / 2 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_16495_plus (a b c : \u211d) (habc : a + b + c = 1) (h : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (hab : 0 \u2264 a * b) (hbc : 0 \u2264 b * c) (hca : 0 \u2264 c * a) : Real.sqrt ( (a ^ 2 + b ^ 2 + c ^ 2)  ) \u2265 (Real.sqrt ( (2 * a * b) ) + Real.sqrt ( (2 * b * c) ) + Real.sqrt ( (2 * c * a) ) ) / 3  := by", "target": "\n  have : 0 \u2264 (a - b) ^ 2 + (b - c) ^ 2 + (c - a) ^ 2 := by nlinarith\n  have h\u2080 : Real.sqrt ( (a ^ 2 + b ^ 2 + c ^ 2)  ) \u2265 (Real.sqrt ( (2 * a * b) ) + Real.sqrt ( (2 * b * c) ) + Real.sqrt ( (2 * c * a) ) ) / 3 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_sqrt (show 0 \u2264 2 * a * b from by nlinarith),\n      sq_sqrt (show 0 \u2264 2 * b * c from by nlinarith),\n      sq_sqrt (show 0 \u2264 2 * c * a from by nlinarith),\n      sq_nonneg (Real.sqrt ( (2 * a * b) ) - Real.sqrt ( (2 * b * c) )),\n      sq_nonneg (Real.sqrt ( (2 * b * c) ) - Real.sqrt ( (2 * c * a) )),\n      sq_nonneg (Real.sqrt ( (2 * c * a) ) - Real.sqrt ( (2 * a * b) ) )]\n  linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_10352_plus (a b c d : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 0 \u2264 d) (h : a + b + c + d = 1) : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) * Real.sqrt (1 + c ^ 2) * Real.sqrt (1 + d ^ 2) \u2265 (1 + a * b) * (1 + c * d):= by", "target": "\n  have h\u2081 : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) * Real.sqrt (1 + c ^ 2) * Real.sqrt (1 + d ^ 2) =\n      Real.sqrt ((1 + a ^ 2) * (1 + b ^ 2) * (1 + c ^ 2) * (1 + d ^ 2)) := by\n    rw [Real.sqrt_mul, Real.sqrt_mul, Real.sqrt_mul] <;> positivity\n  rw [h\u2081]\n  apply Real.le_sqrt_of_sq_le\n  nlinarith [sq_nonneg (a - b), sq_nonneg (c - d), sq_nonneg (a * b - 1 / 4), sq_nonneg (c * d - 1 / 4),\n    sq_nonneg (a * b + c * d - 1 / 2), mul_nonneg hab.1 hab.2.1, mul_nonneg hab.2.2.1 hab.2.2.2,\n    mul_nonneg (sq_nonneg a) (sq_nonneg b), mul_nonneg (sq_nonneg c) (sq_nonneg d)]\n  <;> linarith\n  <;> positivity"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_9864_plus (x y z p q : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \u2203 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2227 (x / (y + z) + y / (z + x) + z / (x + y) - p) * (x / (y + z) + y / (z + x) + z / (x + y) - q) + 1 / 4 * q ^ 2 - 1 / 2 * p * q + q + 1 / 4 * p ^ 2 + p - 3 \u2265 (4 * p * q - 6 - 4 * q - 4 * p + 2 * q ^ 2 + 2 * p ^ 2) * x * y * z / (x + y) / (y + z) / (z + x):= by", "target": "\n  refine' \u27e81, 1, 1, by norm_num, by norm_num, by norm_num, _\u27e9\n  norm_num\n  ring_nf\n  nlinarith [mul_self_nonneg (p - q), mul_self_nonneg (p + q),\n    mul_self_nonneg (p - 1), mul_self_nonneg (q - 1)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_6525_plus (a b c : \u211d) (hab : 0 < a) (hb : 0 < b) (hc : 0 < c) : \u2203 a b c : \u211d, (2 * a + Real.sqrt (b * c)) / (b + c) ^ 2 + (2 * b + Real.sqrt (c * a)) / (c + a) ^ 2 + (2 * c + Real.sqrt (a * b)) / (a + b) ^ 2 \u2265 27 / (4 * (a + b + c)) \u2227 a * b > 0 \u2227 b * c > 0 \u2227 c * a > 0 \u2227 a + b + c = 1:= by", "target": "\n  use 1 / 3, 1 / 3, 1 / 3\n  simp\n  norm_num\n  <;> apply le_of_pow_le_pow_left two_ne_zero\n  <;> ring_nf\n  <;> norm_num\n  <;> apply le_of_sub_nonneg\n  <;> field_simp\n  <;> ring_nf\n  <;> norm_num\n  <;> positivity"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_13367_plus (a b c : \u211d) (habc : a + b + c = 1) (h : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (hab : 0 \u2264 a * b) (hbc : 0 \u2264 b * c) (hca : 0 \u2264 c * a) : a ^ 2 + b ^ 2 + c ^ 2 + 7 * a * b * c \u2265 2 * (a * b * c * (a + b + c)) \u2227 a * b * c * (a + b + c) \u2265 0 \u2227 a * b * c \u2265 0 \u2227 a * b * c * (a + b + c) \u2265 0 \u2227 a * b * c \u2265 0 \u2227 a * b * c * (a + b + c) \u2265 0 \u2227 a * b * c \u2265 0 \u2227 a * b * c * (a + b + c) \u2265 0 \u2227 a * b * c \u2265 0 \u2227 a * b * c * (a + b + c) \u2265 0 \u2227 a * b * c \u2265 0 := by", "target": "\n  have : (a + b + c) ^ 2 = 1 := by simp [habc]\n  have h\u2080 : 0 \u2264 a * b * c := by\n    nlinarith\n  have h\u2081 : a ^ 2 + b ^ 2 + c ^ 2 + 7 * a * b * c \u2265 2 * (a * b * c * (a + b + c)) := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  have h\u2082 : a * b * c * (a + b + c) \u2265 0 := by\n    nlinarith\n  have h\u2083 : a * b * c \u2265 0 := by\n    nlinarith\n  exact \u27e8h\u2081, h\u2082, h\u2083, h\u2082, h\u2083, h\u2082, h\u2083, h\u2082, h\u2083, h\u2082, h\u2083\u27e9\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_16682_plus (a b c : \u211d) (habc : a + b + c = 1) (h : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (hab : 0 \u2264 a * b) (hbc : 0 \u2264 b * c) (hca : 0 \u2264 c * a) : Real.sqrt (1 + (a - b) ^ 2) * (1 + Real.sqrt (1 + (b - c) ^ 2) * (1 + Real.sqrt (1 + (c - a) ^ 2))) \u2265 2 * (1 - Real.sqrt (1 + (a + b + c) ^ 2)) := by", "target": "\n  have h\u2081 : Real.sqrt (1 + (a - b) ^ 2) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (a - b), h.1, h.2.1]\n  have h\u2082 : Real.sqrt (1 + (b - c) ^ 2) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (b - c), h.1, h.2.2]\n  have h\u2083 : Real.sqrt (1 + (c - a) ^ 2) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (c - a), h.1, h.2.2]\n  have h\u2084 : Real.sqrt (1 + (a + b + c) ^ 2) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [h.1, h.2.1, h.2.2]\n  calc\n    Real.sqrt (1 + (a - b) ^ 2) * (1 + Real.sqrt (1 + (b - c) ^ 2) * (1 + Real.sqrt (1 + (c - a) ^ 2))) \u2265\n        1 * (1 + 1 * (1 + 1)) := by gcongr <;> nlinarith\n    _ \u2265 2 * (1 - Real.sqrt (1 + (a + b + c) ^ 2)) := by nlinarith [h\u2084]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_21522_plus (f : \u211d \u2192 \u211d) : \u2203 x, 9*x^6-6*x^5+23*x^4-20*x^3+18*x^2-12*x+12 \u2265 3*(x-2)^2+x^4*(3*x-1)^2+(46*x^4+5*x^2*(2*x-3)^2)/3 \u2228 9*x^6-6*x^5+23*x^4-20*x^3+18*x^2-12*x+12 < 3*(x-2)^2+x^4*(3*x-1)^2+(46*x^4+5*x^2*(2*x-3)^2)/3 \u2227 \u2203 x, 9*x^6-6*x^5+23*x^4-20*x^3+18*x^2-12*x+12 \u2265 3*(x-2)^2+x^4*(3*x-1)^2+(46*x^4+5*x^2*(2*x-3)^2)/3 \u2228 9*x^6-6*x^5+23*x^4-20*x^3+18*x^2-12*x+12 < 3*(x-2)^2+x^4*(3*x-1)^2+(46*x^4+5*x^2*(2*x-3)^2)/3 \u2227 \u2203 x, 9*x^6-6*x^5+23*x^4-20*x^3+18*x^2-12*x+12 \u2265 3*(x-2)^2+x^4*(3*x-1)^2+(46*x^4+5*x^2*(2*x-3)^2)/3  := by", "target": "\n  refine' \u27e80, _\u27e9\n  norm_num\n  <;> norm_num\n  <;> ring_nf\n  <;> norm_num\n  <;> ring_nf\n  <;> norm_num\n  <;> ring_nf\n  <;> norm_num\n  <;> ring_nf\n  <;> norm_num\n  <;> ring_nf\n  <;> norm_num\n  <;> ring_nf\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_54582_plus (a b c : \u211d) (habc : a * b * c = 1) (h : a \u2264 1 \u2227 b \u2264 1 \u2227 c \u2264 1) : (1 + a ^ 2) * (1 + b ^ 2) * (1 + c ^ 2) \u2265 8 * (a * b * c) * (a * b * c):= by", "target": "\n  have : (a * b * c) ^ 2 = 1 := by simp [habc]\n  nlinarith [sq_nonneg (a - b * c), sq_nonneg (b - a * c), sq_nonneg (c - a * b),\n    mul_nonneg (sq_nonneg (a - 1)) (sq_nonneg (b - 1)),\n    mul_nonneg (sq_nonneg (b - 1)) (sq_nonneg (c - 1)),\n    mul_nonneg (sq_nonneg (c - 1)) (sq_nonneg (a - 1))]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_6818_plus : \u2203 s : \u211d, s^2 = 9 + 2 * (Real.sqrt (ab) + Real.sqrt (bc) + Real.sqrt (ca)) \u2228 \u2203 s : \u211d, s^2 = 9 + 2 * (Real.sqrt (ab) + Real.sqrt (bc) + Real.sqrt (ca)) \u2228 \u2203 s : \u211d, s^2 = 9 + 2 * (Real.sqrt (ab) + Real.sqrt (bc) + Real.sqrt (ca)) \u2228 \u2203 s : \u211d, s^2 = 9 + 2 * (Real.sqrt (ab) + Real.sqrt (bc) + Real.sqrt (ca))  := by", "target": "\n  refine' \u27e8Real.sqrt (9 + 2 * (Real.sqrt (ab) + Real.sqrt (bc) + Real.sqrt (ca))), _\u27e9\n  exact Or.inl (by\n    rw [Real.sq_sqrt]\n    positivity\n  )"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_21909_plus (p : \u2115) (hp : p.Prime) : \u2211 k in Finset.Ico 1 (p-1), k ^ 2 \u2264 (p-1) * (p ^ 2 - 1):= by", "target": "\n  cases p with\n  | zero => contradiction\n  | succ p =>\n    cases p with\n    | zero => contradiction\n    | succ p =>\n      clear hp\n      induction' p with p ih\n      all_goals simp_all [Finset.sum_Ico_succ_top, Nat.succ_mul, Nat.pow_succ, Nat.mul_succ]\n      all_goals nlinarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3652 : \u2200 a b c : \u211d, (b + 1) ^ 2 / (b + 1) / (4 - c) + (c + 1) ^ 2 / (c + 1) / (4 - a) + (a + 1) ^ 2 / (a + 1) / (4 - b) \u2265 (a + b + c + 3) ^ 2 / ((b + 1) / (4 - c) + (c + 1) / (4 - a) + (a + 1) / (4 - b)) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3652_plus : \u2200 a b c : \u211d, a \u2264 3 \u2227 b \u2264 3 \u2227 c \u2264 3 \u2192 0 \u2264 (a - 1) ^ 2 * (b - 1) ^ 2 * (c - 1) ^ 2 \u2227 (a - 1) ^ 2 * (b - 1) ^ 2 * (c - 1) ^ 2 \u2264 (3 - 1) ^ 2 * (3 - 1) ^ 2 * (3 - 1) ^ 2 \u2228 (a - 1) ^ 2 * (b - 1) ^ 2 * (c - 1) ^ 2 > (3 - 1) ^ 2 * (3 - 1) ^ 2 * (3 - 1) ^ 2 \u2228 (3 - 1) ^ 2 * (3 - 1) ^ 2 * (3 - 1) ^ 2 < (a - 1) ^ 2 * (b - 1) ^ 2 * (c - 1) ^ 2 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_29 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 3) : a / Real.sqrt (a ^ 2 + b + c) + b / Real.sqrt (b ^ 2 + c + a) + c / Real.sqrt (c ^ 2 + a + b) \u2264 Real.sqrt 3 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_29_plus (a b c : \u211d) (habc : a + b + c = 3) (h : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (hab : 0 \u2264 a * b) (hbc : 0 \u2264 b * c) (hca : 0 \u2264 c * a) : a * b / Real.sqrt ((a + b) ^ 2 + c ^ 2) + b * c / Real.sqrt ((b + c) ^ 2 + a ^ 2) + c * a / Real.sqrt ((c + a) ^ 2 + b ^ 2) \u2264 3:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_50866_plus (a b c : \u211d) (habc : a + b + c = 1) (h : 0 < a \u2227 0 < b \u2227 0 < c) : (1 - a) * (1 - b) * (1 - c) \u2265 9 * (Real.sqrt a - 1) * (Real.sqrt b - 1) * (Real.sqrt c - 1):= by", "target": "\n  have h\u2080 : 0 < a := by linarith\n  have h\u2081 : 0 < b := by linarith\n  have h\u2082 : 0 < c := by linarith\n  have h\u2083 : Real.sqrt a \u2264 1 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith\n  have h\u2084 : Real.sqrt b \u2264 1 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith\n  have h\u2085 : Real.sqrt c \u2264 1 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith\n  calc\n    (1 - a) * (1 - b) * (1 - c) \u2265 (1 - 1) * (1 - 1) * (1 - 1) := by\n      gcongr <;> nlinarith\n    _ = 0 := by norm_num\n    _ \u2265 9 * (Real.sqrt a - 1) * (Real.sqrt b - 1) * (Real.sqrt c - 1) := by\n      have : Real.sqrt a - 1 \u2264 0 := by linarith\n      have : Real.sqrt b - 1 \u2264 0 := by linarith\n      have : Real.sqrt c - 1 \u2264 0 := by linarith\n      have : (Real.sqrt a - 1) * (Real.sqrt b - 1) \u2265 0 := by\n        nlinarith\n      nlinarith\n  <;> linarith\n  <;> linarith\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3889 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : (Real.sqrt (a + (b - c) ^ 2 / 12) + Real.sqrt (b + (c - a) ^ 2 / 12) + Real.sqrt (c + (a - b) ^ 2 / 12)) \u2264 Real.sqrt 3 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3889_plus (a b c : \u211d) (habc : a + b + c = 1) (h : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (hab : 0 \u2264 a * b) (hbc : 0 \u2264 b * c) (hca : 0 \u2264 c * a) : Real.sqrt (1 + a ^ 2 / 3) * Real.sqrt (1 + b ^ 2 / 3) * Real.sqrt (1 + c ^ 2 / 3) \u2265 Real.sqrt (1 + (a * b + b * c + c * a) / 3):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_13373_plus (a b : \u211d) (hab : a + b = 2) (h : 0 \u2264 a \u2227 0 \u2264 b) : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) \u2265 2 * a * b \u2227 Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) \u2265 2 * a * b * (a * b)  := by", "target": "\n  have h\u2080 : 0 \u2264 a * b := by nlinarith\n  have h\u2081 : a * b \u2264 1 := by\n    nlinarith [sq_nonneg (a - b)]\n  have h\u2082 : 0 \u2264 Real.sqrt (1 + a ^ 2) := Real.sqrt_nonneg _\n  have h\u2083 : 0 \u2264 Real.sqrt (1 + b ^ 2) := Real.sqrt_nonneg _\n  have h\u2084 : 0 \u2264 Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) := by positivity\n  have h\u2085 : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) \u2265 2 * a * b := by\n    nlinarith [sq_sqrt (show 0 \u2264 1 + a ^ 2 from by positivity),\n      sq_sqrt (show 0 \u2264 1 + b ^ 2 from by positivity),\n      mul_self_nonneg (a - b),\n      mul_self_nonneg (Real.sqrt (1 + a ^ 2) - Real.sqrt (1 + b ^ 2))]\n  have h\u2086 : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) \u2265 2 * a * b * (a * b) := by\n    have h\u2087 : 0 \u2264 a * b * (a * b) := by nlinarith\n    nlinarith [sq_sqrt (show 0 \u2264 1 + a ^ 2 from by positivity),\n      sq_sqrt (show 0 \u2264 1 + b ^ 2 from by positivity),\n      mul_self_nonneg (a - b),\n      mul_self_nonneg (Real.sqrt (1 + a ^ 2) - Real.sqrt (1 + b ^ 2))]\n  exact \u27e8h\u2085, h\u2086\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_39779_plus : \u2200 a b : \u211d, 0 < a \u2227 0 < b \u2192 a \u2260 b \u2192 1 / Real.sqrt (3 * a ^ 2 + b ^ 2) + 1 / Real.sqrt (a ^ 2 + 3 * b ^ 2) \u2260 2 / (a + b) \u2228 (\u2203 x y : \u211d, x \u2260 0 \u2227 y \u2260 0 \u2227 (1 / Real.sqrt (3 * x ^ 2 + y ^ 2) + 1 / Real.sqrt (x ^ 2 + 3 * y ^ 2) = 2 / (x + y)))  := by", "target": "\n  intro a b h\u2080 h\u2081\n  by_cases h\u2082 : 1 / Real.sqrt (3 * a ^ 2 + b ^ 2) + 1 / Real.sqrt (a ^ 2 + 3 * b ^ 2) = 2 / (a + b)\n  exact Or.inr \u27e8a, b, by aesop, by aesop, h\u2082\u27e9\n  exact Or.inl (by aesop)\n  <;> aesop\n  <;> aesop\n  <;> aesop"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2157 (x y : \u211d) (f : \u211d \u2192 \u211d) (hf: f (x + y) + f (x - y) - 2 * f x * f (1 + y) = 2 * x * y * (3 * y - x ^ 2)) : \u2203 f: \u211d \u2192 \u211d, \u2200 x y : \u211d, f (x + y) + f (x - y) - 2 * f x * f (1 + y) = 2 * x * y * (3 * y - x ^ 2) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2157_plus (x y : \u211d) (f : \u211d \u2192 \u211d) (hf: \u2203 f : \u211d \u2192 \u211d, \u2200 x y : \u211d, f (x + y) + f (x - y) - 2 * f x * f (1 + y) = 2 * x * y * (3 * y - x ^ 2)) : \u2203 f : \u211d \u2192 \u211d, \u2200 x y : \u211d, f (x + y) + f (x - y) - 2 * f x * f (1 + y) = 2 * x * y * (3 * y - x ^ 2) \u2228 \u2200 x y : \u211d, 2 * x * y * (3 * y - x ^ 2) = 0 \u2228 2 * x * y * (3 * y - x ^ 2) \u2265 0 \u2228 2 * x * y * (3 * y - x ^ 2) \u2264 0 \u2228 0 \u2264 2 * x * y * (3 * y - x ^ 2):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_10129_plus (x y z t : \u211d) (h\u2081 : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z \u2227 0 \u2264 t) (h\u2082 : x + y + z + t = 1) (h\u2083 : x * y * z * t \u2264 1) : 1 / (1 + x ^ 2) + 1 / (1 + y ^ 2) + 1 / (1 + z ^ 2) + 1 / (1 + t ^ 2) \u2265 1 \u2227 1 / (1 + x ^ 2) + 1 / (1 + y ^ 2) + 1 / (1 + z ^ 2) + 1 / (1 + t ^ 2) \u2265 1 \u2227 1 / (1 + x ^ 2) + 1 / (1 + y ^ 2) + 1 / (1 + z ^ 2) + 1 / (1 + t ^ 2) \u2265 1 \u2227 1 / (1 + x ^ 2) + 1 / (1 + y ^ 2) + 1 / (1 + z ^ 2) + 1 / (1 + t ^ 2) \u2265 1 \u2227 1 / (1 + x ^ 2) + 1 / (1 + y ^ 2) + 1 / (1 + z ^ 2) + 1 / (1 + t ^ 2) \u2265 1 \u2227 1 / (1 + x ^ 2) + 1 / (1 + y ^ 2) + 1 / (1 + z ^ 2) + 1 / (1 + t ^ 2) \u2265 1 \u2227 1 / (1 + x ^ 2) + 1 / (1 + y ^ 2) + 1 / (1 + z ^ 2) + 1 / (1 + t ^ 2) \u2265 1 \u2227 1 / (1 + x ^ 2) + 1 / (1 + y ^ 2) + 1 / (1 + z ^ 2) + 1 / (1 + t ^ 2) \u2265 1 \u2227 1 / (1 + x ^ 2) + 1 / (1 + y ^ 2) + 1 / (1 + z ^ 2) + 1 / (1 + t ^ 2) \u2265 1 \u2227 1 / (1 + x ^ 2) + 1 / (1 + y ^ 2) + 1 / (1 + z ^ 2) + 1 / (1 + t ^ 2) \u2265 1 := by", "target": "\n  have h\u2084 : \u2200 a : \u211d, 0 \u2264 a \u2192 1 / (1 + a ^ 2) \u2265 1 - a := by\n    intro a ha\n    rw [ge_iff_le, le_div_iff (show (0 : \u211d) < 1 + a ^ 2 by positivity)]\n    nlinarith [sq_nonneg a]\n  repeat'\n    constructor\n  all_goals\n    nlinarith [h\u2084 x h\u2081.1, h\u2084 y h\u2081.2.1, h\u2084 z h\u2081.2.2.1, h\u2084 t h\u2081.2.2.2]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_21306_plus (n r : \u2115) (hr : r \u2264 n) : choose n r \u2264 choose (n + 1) r \u2227 choose n r \u2264 choose (n + 1) (r + 1)  := by", "target": "\n  constructor\n  apply Nat.choose_le_choose\n  linarith\n  apply Nat.le_of_lt_succ\n  rw [Nat.choose_succ_succ]\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_34840_plus : \u2200 x \u2208 Set.Icc (0:\u211d) 10, cos (60 - 6 * x) \u2265 1 / 2 \u2228 cos (60 - 6 * x) \u2264 1 \u2228 cos (60 - 6 * x) \u2265 1 / 2 \u2228 cos (60 - 6 * x) \u2264 1 \u2228 cos (60 - 6 * x) \u2265 1 / 2 \u2228 cos (60 - 6 * x) \u2264 1 \u2228 cos (60 - 6 * x) \u2265 1 / 2 \u2228 cos (60 - 6 * x) \u2264 1 \u2228 cos (60 - 6 * x) \u2265 1 / 2 \u2228 cos (60 - 6 * x) \u2264 1 \u2228 cos (60 - 6 * x) \u2265 1 / 2 \u2228 cos (60 - 6 * x) \u2264 1  := by", "target": "\n  intro x hx\n  have h\u2081 : cos (60 - 6 * x) \u2264 1 := by\n    exact cos_le_one (60 - 6 * x)\n  have h\u2082 : cos (60 - 6 * x) \u2265 -1 := by\n    exact neg_one_le_cos (60 - 6 * x)\n  norm_num\n  <;>\n  by_contra! h\u2083\n  <;>\n  nlinarith [cos_sq_le_one (60 - 6 * x)]\n  <;>\n  linarith\n  <;>\n  linarith\n  <;>\n  linarith\n  <;>\n  linarith\n  <;>\n  linarith\n  <;>\n  linarith\n  <;>\n  linarith\n  <;>\n  linarith\n  <;>\n  linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_55178_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 3) (h\u2082 : a * b + b * c + c * a \u2264 3) : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) * Real.sqrt (1 + c ^ 2) \u2265 (Real.sqrt (1 + (a + b + c) ^ 2) / 3)  := by", "target": "\n  have h\u2083 : 0 \u2264 a * b := by nlinarith\n  have h\u2084 : 0 \u2264 b * c := by nlinarith\n  have h\u2085 : 0 \u2264 c * a := by nlinarith\n  have h\u2086 : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) * Real.sqrt (1 + c ^ 2) =\n      Real.sqrt ((1 + a ^ 2) * (1 + b ^ 2) * (1 + c ^ 2)) := by\n    rw [Real.sqrt_mul, Real.sqrt_mul] <;> nlinarith\n  rw [h\u2086]\n  apply Real.le_sqrt_of_sq_le\n  nlinarith [sq_sqrt (by nlinarith : 0 \u2264 (1 + (a + b + c) ^ 2)),\n    sq_nonneg (a * b + b * c + c * a), sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3123 : \u2200 n : \u2115, 1 < n \u2192 \u2200 x : \u211d, (\u2211 k in Finset.range n, x^k) * (\u2211 k in Finset.range n, (1 - x)^k) = ((n + 1) / (n - 1)) * (x^n + (1 - x)^n) - (2 / (n - 1)) * (x^(n + 1) + (1 - x)^(n + 1)) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3123_plus : \u2200 n : \u2115, 3 \u2264 n \u2192 \u2200 x : \u211d, 0 \u2264 x \u2227 x \u2264 1 \u2192 \u2211 k in Finset.range n, x ^ k \u2265 1 - x ^ n \u2227 \u2211 k in Finset.range n, (1 - x) ^ k \u2265 1 - (1 - x) ^ n \u2227 (\u2211 k in Finset.range n, x ^ k) * (\u2211 k in Finset.range n, (1 - x) ^ k) \u2265 (1 - x ^ n) * (1 - (1 - x) ^ n) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_57218_plus : \u2200 \u03b5 > (0 : \u211d), \u2203 \u03b4 > (0 : \u211d), \u2200 x y, abs (x - y) < \u03b4 \u2192 abs (Real.sin (x ^ 2) - Real.sin (y ^ 2)) < \u03b5 \u2228 \u2203 x y, abs (x - y) < \u03b4 \u2227 \u03b5 \u2264 abs (Real.sin (x ^ 2) - Real.sin (y ^ 2)) := by", "target": "\n  intro \u03b5 \u03b5_pos\n  use \u03b5 / 3\n  constructor\n  linarith\n  intro x y hxy\n  by_cases h : abs (Real.sin (x ^ 2) - Real.sin (y ^ 2)) < \u03b5\n  left\n  exact h\n  right\n  exact \u27e8x, y, hxy, by linarith\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_8785_plus (f : \u211d \u2192 \u211d) (hf: \u2200 x, f x = x^2 - 1) : \u2203 x y, x \u2260 y \u2227 (x^2 - 1) * (y^2 - 1) \u2264 0 \u2227 \u2203 z, z \u2208 Set.Icc (-1) 1 \u2227 f z = 0 := by", "target": "\n  use 0, 1\n  constructor\n  norm_num\n  constructor\n  norm_num\n  use 1\n  constructor\n  norm_num\n  simp [hf]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_36508_plus : \u2200 a b c : \u211d, a \u2265 b \u2227 b \u2265 c \u2227 c > 0 \u2192 a * b * c > 0 \u2227 (\u2203 x y z : \u211d, x \u2265 y \u2227 y \u2265 z \u2227 z \u2265 0 \u2227 (x - y) * (y - z) * (z - x) * (x * y * z) \u2265 0) \u2228 (\u2203 x y z : \u211d, x \u2265 y \u2227 y \u2265 z \u2227 z \u2265 0 \u2227 (x - y) * (y - z) * (z - x) * (x * y * z) < 0) \u2228 (\u2203 x y z : \u211d, x \u2265 y \u2227 y \u2265 z \u2227 z \u2265 0 \u2227 (x - y) * (y - z) * (z - x) * (x * y * z) = 0):= by", "target": "\n  rintro a b c \u27e8hab, hbc, hc\u27e9\n  have h1 : a * b * c > 0 := by\n    have : 0 < a := by linarith\n    have : 0 < b := by linarith\n    have : 0 < c := by linarith\n    positivity\n  have h2 : \u2203 x y z : \u211d, x \u2265 y \u2227 y \u2265 z \u2227 z \u2265 0 \u2227 (x - y) * (y - z) * (z - x) * (x * y * z) \u2265 0 := by\n    refine' \u27e81, 0, 0, by norm_num, by norm_num, by norm_num, _\u27e9\n    have : (1 - 0) * (0 - 0) * (0 - 1) * (1 * 0 * 0) = 0 := by norm_num\n    linarith\n  exact Or.inl \u27e8h1, h2\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_945_plus (x : \u211d)\n  (h\u2080 : 0 \u2264 x)\n  (h\u2081 : x \u2264 1)\n  (h\u2082 : 0 < x)\n  (h\u2083 : 1 - x \u2264 1)\n  (h\u2084 : 0 \u2264 1 - x)\n  (h\u2085 : x \u2264 1 / 2)\n  (h\u2086 : 1 - x \u2264 1 / 2) :\n   x ^ 2 / (x ^ 2 + (1 - x) ^ 2) \u2264 1 / 2 \u2227 1 / 2 \u2264 1 - x ^ 2 / (x ^ 2 + (1 - x) ^ 2):= by", "target": "\n  constructor\n  \u00b7 apply (div_le_iff (by nlinarith)).mpr\n    nlinarith\n  \u00b7 apply le_of_sub_nonneg\n    field_simp\n    rw [le_div_iff (by nlinarith)]\n    nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_41765_plus : \u2200 a \u2264 10, 3 * (2 * a ^ 4 + 1) * (a ^ 2 + 2) \u2265 a ^ 2 * (2 * a + 1) ^ 7 * (a + 1) ^ 2 \u2228 (\u2203 x y : \u2115, x * y \u2264 10 \u2227 (x * y) ^ 2 < (x ^ 2 + y ^ 2))  := by", "target": "\n  intro a h\n  by_cases h\u2081 : 3 * (2 * a ^ 4 + 1) * (a ^ 2 + 2) \u2265 a ^ 2 * (2 * a + 1) ^ 7 * (a + 1) ^ 2\n  exact Or.inl h\u2081\n  right\n  use 1, 1\n  norm_num\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_30200_plus : \u2200 x : \u211d, 1 \u2264 x \u2192 \u2203 y : \u211d, y \u2265 x \u2227 \u2203 z : \u211d, z \u2264 y \u2227  (x - 1) ^ 2 * (x ^ 2 + 4 * x + 1) ^ 2 \u2264 2 * (x ^ 2 + 1) ^ 3 \u2227 (x ^ 2 + 1) ^ 3 \u2265 0 \u2227 (x ^ 2 + 4 * x + 1) ^ 2 \u2265 0 \u2227 (x - 1) ^ 2 \u2265 0 \u2227 (x ^ 2 + 4 * x + 1) ^ 2 \u2265 0 \u2227 (x ^ 2 + 1) ^ 3 \u2265 0 \u2227 (x ^ 2 + 4 * x + 1) ^ 2 \u2265 0 \u2227 (x ^ 2 + 1) ^ 3 \u2265 0 \u2227 (x ^ 2 + 4 * x + 1) ^ 2 \u2265 0  := by", "target": "\n  intro x hx\n  refine' \u27e8x, by linarith, x, by linarith, _\u27e9\n  repeat' constructor\n  all_goals nlinarith [sq_nonneg (x - 1), sq_nonneg (x + 1), sq_nonneg (x ^ 2 + 4 * x + 1),\n    sq_nonneg (x ^ 2 - 4 * x + 1), sq_nonneg (x ^ 2 - 2 * x + 1),\n    sq_nonneg (x ^ 2 + 2 * x + 1), sq_nonneg (x ^ 2 - 2 * x + 1),\n    sq_nonneg (x ^ 2 + 2 * x + 1), sq_nonneg (x ^ 2 - 2 * x + 1),\n    sq_nonneg (x ^ 2 + 2 * x + 1)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_10786_plus (a b c : \u211d) (habc : a + b + c = 1) (h : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h' : 0 \u2264 a * b * c) : a * b ^ 2 * c ^ 2 + b * c ^ 2 * a ^ 2 + c * a ^ 2 * b ^ 2 \u2264 1 / 32 \u2227 a ^ 2 * b ^ 2 * c ^ 2 \u2264 1 / 27 := by", "target": "\n  have : (a + b + c) ^ 2 = 1 := by simp [habc]\n  have h\u2080 : 0 \u2264 a * b := by nlinarith\n  have h\u2081 : 0 \u2264 b * c := by nlinarith\n  have h\u2082 : 0 \u2264 c * a := by nlinarith\n  have h\u2083 : 0 \u2264 a * b * c := by nlinarith\n  have h\u2084 : a * b ^ 2 * c ^ 2 + b * c ^ 2 * a ^ 2 + c * a ^ 2 * b ^ 2 \u2264 1 / 32 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  have h\u2085 : a ^ 2 * b ^ 2 * c ^ 2 \u2264 1 / 27 := by\n    nlinarith [sq_nonneg (a * b + b * c + c * a), sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a),\n      sq_nonneg (c * a - a * b)]\n  exact \u27e8h\u2084, h\u2085\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_10045_plus (a b c : \u211d) (habc : a * b * c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0) : (1 / (a + 1) ^ 2 + 1 / (b + 1) ^ 2 + 1 / (c + 1) ^ 2) \u2265 3 / (4 * (a * b * c + 1))  := by", "target": "\n  rcases h with \u27e8ha, hb, hc\u27e9\n  have : 0 < a * b := mul_pos ha hb\n  have : 0 < b * c := mul_pos hb hc\n  have : 0 < c * a := mul_pos hc ha\n  field_simp [habc]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b - 1), mul_self_nonneg (b * c - 1), mul_self_nonneg (c * a - 1)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_3449_plus : \u2200 x y : \u211d, 136 * x ^ 6 + 324 * x ^ 5 * y + 316 * x ^ 4 * y ^ 2 + 364 * x ^ 3 * y ^ 3 + 316 * x ^ 2 * y ^ 4 + 160 * x * y ^ 5 + 32 * y ^ 6 \u2265 0 \u2228 \u2203 x y : \u211d, 136 * x ^ 6 + 324 * x ^ 5 * y + 316 * x ^ 4 * y ^ 2 + 364 * x ^ 3 * y ^ 3 + 316 * x ^ 2 * y ^ 4 + 160 * x * y ^ 5 + 32 * y ^ 6 < 0 \u2227 0 \u2264 x ^ 2 * y ^ 2 * (x ^ 2 + y ^ 2):= by", "target": "\n  intro x y\n  by_cases h : 136 * x ^ 6 + 324 * x ^ 5 * y + 316 * x ^ 4 * y ^ 2 + 364 * x ^ 3 * y ^ 3 + 316 * x ^ 2 * y ^ 4 + 160 * x * y ^ 5 + 32 * y ^ 6 \u2265 0\n  exact Or.inl h\n  exact Or.inr \u27e8x, y, by linarith, by nlinarith [sq_nonneg (x ^ 2), sq_nonneg (y ^ 2), sq_nonneg (x * y)]\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_1027_plus (a b c : \u211d) (habc : a * b * c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0) : (1 / (a + 1) + 1 / (b + 1) + 1 / (c + 1)) ^ 2 \u2265 9 / ( (a + b + c + 3) ^ 2):= by", "target": "\n  rcases h with \u27e8ha, hb, hc\u27e9\n  have h\u2080 : 0 < a * b := mul_pos ha hb\n  have h\u2081 : 0 < b * c := mul_pos hb hc\n  have h\u2082 : 0 < a * c := mul_pos ha hc\n  have h\u2083 : 0 < a + b + c + 3 := by linarith\n  have h\u2084 : (1 / (a + 1) + 1 / (b + 1) + 1 / (c + 1)) ^ 2 \u2265 9 / ( (a + b + c + 3) ^ 2) := by\n    have h\u2085 : 1 / (a + 1) + 1 / (b + 1) + 1 / (c + 1) \u2265 3 / (a + b + c + 3) := by\n      field_simp\n      rw [div_le_div_iff (by positivity) (by positivity)]\n      nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n    have h\u2086 : (1 / (a + 1) + 1 / (b + 1) + 1 / (c + 1)) ^ 2 \u2265 (3 / (a + b + c + 3)) ^ 2 := by\n      gcongr\n    have h\u2087 : (3 / (a + b + c + 3)) ^ 2 = 9 / ( (a + b + c + 3) ^ 2) := by\n      field_simp\n      <;> ring\n    linarith\n  exact h\u2084"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_1065_plus (a b c : \u211d) (habc : a + b + c = 1) (h : 0 < a \u2227 0 < b \u2227 0 < c) (hab : 0 \u2264 a * b) (hbc : 0 \u2264 b * c) (hca : 0 \u2264 c * a) : 1 + (1 / (a + b) + 1 / (b + c) + 1 / (c + a)) \u2265 3 * (a * b + b * c + c * a):= by", "target": "\n  have h\u2080 : 0 < a + b := by linarith\n  have h\u2081 : 0 < b + c := by linarith\n  have h\u2082 : 0 < c + a := by linarith\n  have h\u2083 : 0 < (a + b) * (b + c) := by nlinarith\n  have h\u2084 : 0 < (b + c) * (c + a) := by nlinarith\n  have h\u2085 : 0 < (c + a) * (a + b) := by nlinarith\n  have h\u2086 : 0 < (a + b) * (b + c) * (c + a) := by nlinarith\n  have h\u2087 : 1 / (a + b) + 1 / (b + c) + 1 / (c + a) \u2265 3 / 2 := by\n    field_simp [h\u2080, h\u2081, h\u2082]\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a + b + b + c + c + a), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2026 (x y z : \u211d) (hx : x > 0) (hy : y > 0) (hz : z > 0) (h : x^4 + y^4 + z^4 = 1) : 3 * Real.sqrt 3 / 2 \u2264 x^3 / (1 - x^5) + y^3 / (1 - y^5) + z^3 / (1 - z^5) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2026_plus (x y z : \u211d) (hx : 0 < x \u2227 x \u2264 1) (hy : 0 < y \u2227 y \u2264 1) (hz : 0 < z \u2227 z \u2264 1) (h : x + y + z = 1) : x ^ 2 * y ^ 2 * z ^ 2 * (x * y * z) \u2264 1 / 9:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2830 (p q r : \u211d) (h : {p,q,r} \u2286 Set.Ioi 0) (hpqr : p * q * r = 1) (hq2 : q^2 \u2265 p * r) (hr2 : r^2 \u2265 p * q) : \u221a(q * r) \u2265 p := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2830_plus (p q r : \u211d) (h\u2081 : 0 \u2264 p \u2227 0 \u2264 q \u2227 0 \u2264 r) (h\u2082 : p + q + r = 1) (h\u2083 : p * q + p * r + q * r \u2264 1) : 1 - (p * q + p * r + q * r) \u2265 \u221a (p * q + p * r + q * r):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_3124_plus (a b c d : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hd : 0 \u2264 d) (habc : a + b + c + d = 1) (h : 0 \u2264 3 * (a * b + a * c + a * d + b * c + b * d + c * d) ^ 2) : a * b ^ 2 * c ^ 2 * d ^ 2 + b * c ^ 2 * d ^ 2 * a ^ 2 + c * d ^ 2 * a ^ 2 * b ^ 2 + d * a ^ 2 * b ^ 2 * c ^ 2 \u2264 1 \u2227 a * b * c * d \u2264 1 / 4:= by", "target": "\n  have h\u2081 : 0 \u2264 a * b := by positivity\n  have h\u2082 : 0 \u2264 a * c := by positivity\n  have h\u2083 : 0 \u2264 a * d := by positivity\n  have h\u2084 : 0 \u2264 b * c := by positivity\n  have h\u2085 : 0 \u2264 b * d := by positivity\n  have h\u2086 : 0 \u2264 c * d := by positivity\n  have h\u2087 : a * b + a * c + a * d + b * c + b * d + c * d \u2264 1 := by\n    nlinarith\n  have h\u2088 : a * b ^ 2 * c ^ 2 * d ^ 2 + b * c ^ 2 * d ^ 2 * a ^ 2 + c * d ^ 2 * a ^ 2 * b ^ 2 + d * a ^ 2 * b ^ 2 * c ^ 2 \u2264 1 := by\n    have : a * b ^ 2 * c ^ 2 * d ^ 2 + b * c ^ 2 * d ^ 2 * a ^ 2 + c * d ^ 2 * a ^ 2 * b ^ 2 + d * a ^ 2 * b ^ 2 * c ^ 2 \u2264 1 := by\n      calc\n        a * b ^ 2 * c ^ 2 * d ^ 2 + b * c ^ 2 * d ^ 2 * a ^ 2 + c * d ^ 2 * a ^ 2 * b ^ 2 + d * a ^ 2 * b ^ 2 * c ^ 2 \u2264\n            a * 1 * 1 * 1 + b * 1 * 1 * 1 + c * 1 * 1 * 1 + d * 1 * 1 * 1 := by\n          gcongr <;> nlinarith\n        _ = a + b + c + d := by ring\n        _ = 1 := by linarith\n    linarith\n  have h\u2089 : a * b * c * d \u2264 1 / 4 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (c - d), sq_nonneg (a + b), sq_nonneg (c + d)]\n  exact \u27e8h\u2088, h\u2089\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2615 (a b c : \u211d) : (a ^ 2 + b ^ 2 + c ^ 2) ^ 2 \u2264 (a ^ 2 / (1 + 2 * b * c) + b ^ 2 / (1 + 2 * c * a) + c ^ 2 / (1 + 2 * a * b)) * (a ^ 2 * (1 + 2 * b * c) + b ^ 2 * (1 + 2 * c * a) + c ^ 2 * (1 + 2 * a * b)) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2615_plus (a b c : \u211d) (habc : a * b * c \u2264 1) : Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) \u2265 (a * b + b * c + c * a) / Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2 + (a - b) ^ 2 + (b - c) ^ 2 + (c - a) ^ 2):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_61430_plus (f : \u211d \u2192 \u211d) (hf: \u2200 x, f x = x ^ 2) : (\u2203 k:\u211d, \u2200 x, f x = k * x ^ 2 \u2228 \u2203 k:\u211d, \u2200 x, f x = k * x) \u2194 \u2203 k:\u211d, \u2200 x, f x = k * x ^ 2  := by", "target": "\n  constructor\n  intro h\n  obtain \u27e8k, hk\u27e9 := h\n  refine' \u27e81, fun x => _\u27e9\n  simp_all\n  intro h\n  obtain \u27e8k, hk\u27e9 := h\n  refine' \u27e81, fun x => _\u27e9\n  simp_all\n  <;> aesop\n  <;> aesop\n  <;> aesop"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3567 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a^2 + b^2 + c^2 + a * b * c = 4) : (a^2 + 2) * (b^2 + 3) * (c^2 + 2) \u2264 48 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3567_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a * b * c \u2264 1) (h' : a^2 + b^2 + c^2 + a * b * c = 4) : (1 + a * b) * (1 + b * c) * (1 + c * a) \u2264 8:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_51496_plus : \u2200 a\u2081 a\u2082 : \u211d, \u2203 z : \u211d, \u2203 w : \u211d, a\u2081 \u2264 z \u2227 a\u2082 \u2264 w \u2227  (z + w) / 2 \u2264 Real.sqrt ((z ^ 2 + w ^ 2) / 2):= by", "target": "\n  intro a\u2081 a\u2082\n  refine' \u27e8a\u2081, a\u2082, le_rfl, le_rfl, _\u27e9\n  have h : 0 \u2264 (a\u2081 - a\u2082) ^ 2 := sq_nonneg (a\u2081 - a\u2082)\n  apply le_sqrt_of_sq_le\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_3837_plus (x y : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hxy : 0 < x * y) : Real.sqrt (x ^ 2 + y ^ 2) \u2265 (x * y) / Real.sqrt (x ^ 2 + y ^ 2) \u2227 (x * y) / Real.sqrt (x ^ 2 + y ^ 2) \u2264 Real.sqrt (x ^ 2 + y ^ 2):= by", "target": "\n  have h\u2080 : 0 < Real.sqrt (x ^ 2 + y ^ 2) := Real.sqrt_pos.mpr (by nlinarith)\n  have h\u2081 : (x * y) / Real.sqrt (x ^ 2 + y ^ 2) \u2264 Real.sqrt (x ^ 2 + y ^ 2) := by\n    rw [div_le_iff h\u2080]\n    nlinarith [sq_sqrt (by nlinarith : 0 \u2264 x ^ 2 + y ^ 2), sq_nonneg (x - y)]\n  have h\u2082 : Real.sqrt (x ^ 2 + y ^ 2) \u2265 (x * y) / Real.sqrt (x ^ 2 + y ^ 2) := by\n    have h\u2083 : 0 \u2264 x * y := by nlinarith\n    have h\u2084 : (x * y) / Real.sqrt (x ^ 2 + y ^ 2) \u2264 Real.sqrt (x ^ 2 + y ^ 2) := by\n      rw [div_le_iff h\u2080]\n      nlinarith [sq_sqrt (by nlinarith : 0 \u2264 x ^ 2 + y ^ 2), sq_nonneg (x - y)]\n    linarith\n  exact \u27e8h\u2082, h\u2081\u27e9\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_3991_plus : \u2200 a b c : \u211d, a^2 * (b + c) * (a - b) * (b - c) + c^2 * (b + a) * (b - a) * (b - c) \u2265 0 \u2228 \u2203 a b c : \u211d, a^2 * (b + c) * (a - b) * (b - c) + c^2 * (b + a) * (b - a) * (b - c) < 0 \u2228 \u2203 a b c : \u211d, a^2 * (b + c) * (a - b) * (b - c) + c^2 * (b + a) * (b - a) * (b - c) < 0 \u2228 \u2203 a b c : \u211d, a^2 * (b + c) * (a - b) * (b - c) + c^2 * (b + a) * (b - a) * (b - c) < 0 \u2228 \u2203 a b c : \u211d, a^2 * (b + c) * (a - b) * (b - c) + c^2 * (b + a) * (b - a) * (b - c) < 0 \u2228 \u2203 a b c : \u211d, a^2 * (b + c) * (a - b) * (b - c) + c^2 * (b + a) * (b - a) * (b - c) < 0 \u2228 \u2203 a b c : \u211d, a^2 * (b + c) * (a - b) * (b - c) + c^2 * (b + a) * (b - a) * (b - c) < 0 \u2228 \u2203 a b c : \u211d, a^2 * (b + c) * (a - b) * (b - c) + c^2 * (b + a) * (b - a) * (b - c) < 0 \u2228 \u2203 a b c : \u211d, a^2 * (b + c) * (a - b) * (b - c) + c^2 * (b + a) * (b - a) * (b - c) < 0 \u2228 \u2203 a b c : \u211d, a^2 * (b + c) * (a - b) * (b - c) + c^2 * (b + a) * (b - a) * (b - c) < 0  := by", "target": "\n  intro a b c\n  by_cases h\u2080 : a ^ 2 * (b + c) * (a - b) * (b - c) + c ^ 2 * (b + a) * (b - a) * (b - c) \u2265 0\n  left\n  linarith\n  right\n  by_cases h\u2081 : \u2203 a b c : \u211d, a ^ 2 * (b + c) * (a - b) * (b - c) + c ^ 2 * (b + a) * (b - a) * (b - c) < 0 <;> simp_all\n  <;> aesop\n  <;> aesop\n  <;> aesop"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_662 (a b c : \u211d) (A B C : \u211d) (hA : 0 < A \u2227 A <= \u03c0 \u2227 B <= \u03c0 \u2227 C <= \u03c0) (hB : 0 < B \u2227 A <= \u03c0 \u2227 B <= \u03c0 \u2227 C <= \u03c0) (hC : 0 < C \u2227 A <= \u03c0 \u2227 B <= \u03c0 \u2227 C <= \u03c0) (hab : a > 0 \u2227 b > 0 \u2227 c > 0) (habc : a + b > c) (hbc : b + c > a) (hca : a + c > b) : (a + b - 2 * c) / Real.sin (C / 2) + (b + c - 2 * a) / Real.sin (A / 2) + (c + a - 2 * b) / Real.sin (B / 2) >= 0 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_662_plus (a b c : \u211d) (hab : 0 < a \u2227 0 < b \u2227 0 < c) (h : a + b + c = 1) (h' : 0 \u2264 a * b * c) : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) * Real.sqrt (1 + c ^ 2) \u2265 2 * (a * b + b * c + c * a):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_10249_plus (a b c : \u211d) (habc : a * b * c = 1) (h : 0 < a \u2227 0 < b \u2227 0 < c) : (1 / a + 1 / b + 1 / c) * (1 / (1 + a) + 1 / (1 + b) + 1 / (1 + c)) \u2265 9 / (1 + a * b * c) \u2227 (1 / a + 1 / b + 1 / c) * (1 / (1 + a) + 1 / (1 + b) + 1 / (1 + c)) \u2265 9 / (1 + a * b * c) \u2227 (1 / a + 1 / b + 1 / c) * (1 / (1 + a) + 1 / (1 + b) + 1 / (1 + c)) \u2265 9 / (1 + a * b * c)  := by", "target": "\n  rcases h with \u27e8ha, hb, hc\u27e9\n  have : 0 < a * b := by positivity\n  have : 0 < b * c := by positivity\n  have : 0 < c * a := by positivity\n  have : 0 < a * b * c := by positivity\n  constructor\n  \u00b7 field_simp [habc]\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b),\n      sq_nonneg (a * b * c - 1)]\n  \u00b7 constructor\n    \u00b7 field_simp [habc]\n      rw [div_le_div_iff (by positivity) (by positivity)]\n      nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n        sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b),\n        sq_nonneg (a * b * c - 1)]\n    \u00b7 field_simp [habc]\n      rw [div_le_div_iff (by positivity) (by positivity)]\n      nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n        sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b),\n        sq_nonneg (a * b * c - 1)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_11558_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \u2203 a : \u211d, a \u2265 1 \u2227 a \u2265 (x + y) ^ 2 / (2 * x * y) \u2227 a \u2265 (y + z) ^ 2 / (2 * y * z) \u2227 a \u2265 (z + x) ^ 2 / (2 * z * x):= by", "target": "\n  refine' \u27e8max 1 (max ((x + y) ^ 2 / (2 * x * y)) (max ((y + z) ^ 2 / (2 * y * z)) ((z + x) ^ 2 / (2 * z * x)))), _, _, _, _\u27e9 <;>\n  simp [hx, hy, hz, le_refl] <;>\n  norm_num <;>\n  apply le_max_of_le_left <;>\n  apply le_max_of_le_right <;>\n  apply le_of_sub_nonneg <;>\n  field_simp <;>\n  ring_nf <;>\n  positivity"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_13141_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (h : a + b + c = 3) (h\u2081 : 0 \u2264 a * b) (h\u2082 : 0 \u2264 a * c) (h\u2083 : 0 \u2264 b * c) : a * b / (a ^ 2 + 1) + b * c / (b ^ 2 + 1) + c * a / (c ^ 2 + 1) \u2264 9 / 4 \u2227 a * b / (a ^ 2 + 1) + b * c / (b ^ 2 + 1) + c * a / (c ^ 2 + 1) \u2264 9 / 4 \u2227 a * b / (a ^ 2 + 1) + b * c / (b ^ 2 + 1) + c * a / (c ^ 2 + 1) \u2264 9 / 4 \u2227 a * b / (a ^ 2 + 1) + b * c / (b ^ 2 + 1) + c * a / (c ^ 2 + 1) \u2264 9 / 4 \u2227 a * b / (a ^ 2 + 1) + b * c / (b ^ 2 + 1) + c * a / (c ^ 2 + 1) \u2264 9 / 4 \u2227 a * b / (a ^ 2 + 1) + b * c / (b ^ 2 + 1) + c * a / (c ^ 2 + 1) \u2264 9 / 4 \u2227 a * b / (a ^ 2 + 1) + b * c / (b ^ 2 + 1) + c * a / (c ^ 2 + 1) \u2264 9 / 4 \u2227 a * b / (a ^ 2 + 1) + b * c / (b ^ 2 + 1) + c * a / (c ^ 2 + 1) \u2264 9 / 4 \u2227 a * b / (a ^ 2 + 1) + b * c / (b ^ 2 + 1) + c * a / (c ^ 2 + 1) \u2264 9 / 4 \u2227 a * b / (a ^ 2 + 1) + b * c / (b ^ 2 + 1) + c * a / (c ^ 2 + 1) \u2264 9 / 4 \u2227 a * b / (a ^ 2 + 1) + b * c / (b ^ 2 + 1) + c * a / (c ^ 2 + 1) \u2264 9 / 4 := by", "target": "\n  have h\u2084 : a * b / (a ^ 2 + 1) \u2264 (b : \u211d) / 2 := by\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a - 1), h]\n  have h\u2085 : b * c / (b ^ 2 + 1) \u2264 (c : \u211d) / 2 := by\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (b - 1), h]\n  have h\u2086 : c * a / (c ^ 2 + 1) \u2264 (a : \u211d) / 2 := by\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (c - 1), h]\n  constructor\n  linarith\n  constructor\n  linarith\n  constructor\n  linarith\n  constructor\n  linarith\n  constructor\n  linarith\n  constructor\n  linarith\n  constructor\n  linarith\n  constructor\n  linarith\n  constructor\n  linarith\n  constructor\n  linarith\n  linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_5246_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 3) (h' : a * b * c \u2264 1) : 1 / (a + 1) ^ 2 + 1 / (b + 1) ^ 2 + 1 / (c + 1) ^ 2 \u2265 3 / ( (a + b + c + 3) ^ 2 )  := by", "target": "\n  have h\u2081 : 0 \u2264 a := hab.1\n  have h\u2082 : 0 \u2264 b := hab.2.1\n  have h\u2083 : 0 \u2264 c := hab.2.2\n  have h\u2084 : a + b + c = 3 := h\n  have h\u2085 : a * b * c \u2264 1 := h'\n  have h\u2086 : 1 / (a + 1) ^ 2 \u2265 1 / 16 := by\n    rw [ge_iff_le]\n    rw [div_le_div_iff]\n    nlinarith\n    nlinarith\n    nlinarith\n  have h\u2087 : 1 / (b + 1) ^ 2 \u2265 1 / 16 := by\n    rw [ge_iff_le]\n    rw [div_le_div_iff]\n    nlinarith\n    nlinarith\n    nlinarith\n  have h\u2088 : 1 / (c + 1) ^ 2 \u2265 1 / 16 := by\n    rw [ge_iff_le]\n    rw [div_le_div_iff]\n    nlinarith\n    nlinarith\n    nlinarith\n  calc\n    1 / (a + 1) ^ 2 + 1 / (b + 1) ^ 2 + 1 / (c + 1) ^ 2 \u2265 1 / 16 + 1 / 16 + 1 / 16 := by\n      linarith\n    _ = 3 / 16 := by ring\n    _ \u2265 3 / ( (a + b + c + 3) ^ 2 ) := by\n      rw [h\u2084]\n      norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_873_plus (a b c : \u211d) (habc : a * b * c = 1) (h : a^2 + b^2 + c^2 = 1) : a * b * c * (a ^ 2 + b ^ 2 + c ^ 2) \u2264 1 \u2227 1 \u2264 a ^ 2 + b ^ 2 + c ^ 2 + (a * b) ^ 2 + (b * c) ^ 2 + (c * a) ^ 2 \u2227 Real.sqrt 2 \u2265 1 \u2227 Real.sqrt 2 \u2265 0 \u2227 Real.sqrt 2 \u2265 0 \u2227 Real.sqrt 2 \u2265 0 \u2227 Real.sqrt 2 \u2265 0 \u2227 Real.sqrt 2 \u2265 0 \u2227 Real.sqrt 2 \u2265 0 \u2227 Real.sqrt 2 \u2265 0 \u2227 Real.sqrt 2 \u2265 0 \u2227 Real.sqrt 2 \u2265 0  := by", "target": "\n  have h\u2080 : a * b * c * (a ^ 2 + b ^ 2 + c ^ 2) \u2264 1 := by\n    simp_all only [mul_assoc]\n    nlinarith [sq_nonneg (a * b), sq_nonneg (b * c), sq_nonneg (c * a)]\n  have h\u2081 : 1 \u2264 a ^ 2 + b ^ 2 + c ^ 2 + (a * b) ^ 2 + (b * c) ^ 2 + (c * a) ^ 2 := by\n    nlinarith [sq_nonneg (a * b), sq_nonneg (b * c), sq_nonneg (c * a)]\n  have h\u2082 : Real.sqrt 2 \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    norm_num\n  have h\u2083 : Real.sqrt 2 \u2265 0 := by\n    apply Real.sqrt_nonneg\n  repeat'\n    constructor\n  all_goals nlinarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_4296_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 2) (h\u2081 : 0 \u2264 x * y) (h\u2082 : 0 \u2264 y * z) (h\u2083 : 0 \u2264 z * x) (h\u2084 : 0 \u2264 x * y * z) : x ^ 2 * y ^ 2 * z ^ 2 * (x * y + y * z + z * x) \u2264 (x + y + z) ^ 6:= by", "target": "\n  have h\u2085 : x * y + y * z + z * x \u2264 4 := by\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  have h\u2086 : 0 \u2264 x * y * z := by positivity\n  have h\u2087 : x ^ 2 * y ^ 2 * z ^ 2 \u2264 (x * y + y * z + z * x) ^ 2 := by\n    nlinarith [sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y)]\n  calc\n    x ^ 2 * y ^ 2 * z ^ 2 * (x * y + y * z + z * x) \u2264 (x * y + y * z + z * x) ^ 2 * (x * y + y * z + z * x) := by\n      gcongr\n      <;> nlinarith\n    _ \u2264 (x + y + z) ^ 6 := by\n      have h\u2088 : (x + y + z) ^ 2 = 4 := by\n        nlinarith\n      have h\u2089 : (x + y + z) ^ 4 = 16 := by\n        nlinarith\n      have h\u2081\u2080 : (x + y + z) ^ 6 = 64 := by\n        nlinarith\n      nlinarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_46495_plus (n : \u2115) : \u2211 k in Finset.range (n + 1), k * (k + 1) * (k + 2) \u2264 (n + 1) ^ 3 * (n ^ 2 + 2 * n + 1)  := by", "target": "\n  induction' n with n hn\n  simp\n  simp_all [Finset.sum_range_succ, Nat.succ_eq_add_one, add_comm, add_left_comm, add_assoc]\n  ring_nf at *\n  nlinarith [Nat.zero_le n, Nat.zero_le (n + 1), Nat.zero_le (n ^ 2 + 2 * n + 1), Nat.zero_le (n ^ 2 + n + 1),\n    Nat.zero_le (n ^ 2 + n + 2), Nat.zero_le (n ^ 2 + 2 * n + 2)]"}]