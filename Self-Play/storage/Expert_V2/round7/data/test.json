[{"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_5073_plus : \u2200 n : \u2115, Even n \u2192 3 \u2223 (11 * (14 ^ n) + 1) \u2228 2 \u2223 (11 * (14 ^ n) + 1) \u2228 11 * (14 ^ n) + 1 = 3 \u2228 11 * (14 ^ n) + 1 = 2 \u2228 11 * (14 ^ n) + 1 = 1  := by", "target": "\n  intro n h\n  rw [even_iff_two_dvd] at h\n  rcases h with \u27e8k, rfl\u27e9\n  left\n  norm_num\n  apply Nat.dvd_of_mod_eq_zero\n  simp [Nat.pow_mul, Nat.pow_add, Nat.mul_mod, Nat.pow_mod, Nat.add_mod]\n  <;> omega"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_26556_plus (a b c : \u211d) (habc : a * b * c = 1) (h : 0 < a \u2227 0 < b \u2227 0 < c) : (a^2 + 3) * (b^2 + 3) * (c^2 + 3) \u2265 (4 / 27) * (3 * a * b + 3 * b * c + 3 * c * a + a * b * c)^2 \u2227 (a * b * c)^2 \u2265 0 \u2227 0 \u2264 a * b * c \u2227 0 \u2264 a * b * c * (a * b * c):= by", "target": "\n  rcases h with \u27e8ha, hb, hc\u27e9\n  have h\u2080 : 0 \u2264 a * b := by positivity\n  have h\u2081 : 0 \u2264 b * c := by positivity\n  have h\u2082 : 0 \u2264 c * a := by positivity\n  have h\u2083 : 0 \u2264 a * b * c := by positivity\n  have h\u2084 : (a^2 + 3) * (b^2 + 3) * (c^2 + 3) \u2265 (4 / 27) * (3 * a * b + 3 * b * c + 3 * c * a + a * b * c)^2 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      mul_self_nonneg (a * b - 1), mul_self_nonneg (b * c - 1), mul_self_nonneg (c * a - 1),\n      mul_self_nonneg (a * b + b * c + c * a - 3)]\n  exact \u27e8h\u2084, by positivity, by positivity, by positivity\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_4325_plus : \u2200 a b : \u2115, a < b \u2192 \u2203 c : \u2115, a^2 + b^2 + 1 \u2264 c^2 \u2228 a^2 + b^2 + 1 \u2264 c^2 \u2228 a^2 + b^2 + 1 \u2264 c^2 \u2228 a^2 + b^2 + 1 \u2264 c^2 \u2228 a^2 + b^2 + 1 \u2264 c^2 \u2228 a^2 + b^2 + 1 \u2264 c^2 \u2228 a^2 + b^2 + 1 \u2264 c^2 \u2228 a^2 + b^2 + 1 \u2264 c^2 \u2228 a^2 + b^2 + 1 \u2264 c^2 \u2228 a^2 + b^2 + 1 \u2264 c^2 := by", "target": "\n  rintro a b h\n  use a^2 + b^2 + 1\n  simp [h, Nat.pow_succ, Nat.add_comm, Nat.add_left_comm]\n  <;> norm_num\n  <;> omega\n  <;> omega\n  <;> omega"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_5534_plus : \u2200 {p a n : \u2115}, p.Prime \u2192 a > 0 \u2192 n > 0 \u2192 2^p + 3^p \u2264 a^n \u2192 n \u2264 3 \u2228 2 \u2264 n \u2227 3 \u2264 n \u2228 3 \u2264 n \u2227 4 \u2264 n \u2228 4 \u2264 n \u2227 5 \u2264 n \u2228 5 \u2264 n \u2227 6 \u2264 n := by", "target": "\n  rintro p a n hp ha hn h\n  have : n \u2264 3 \u2228 2 \u2264 n \u2227 3 \u2264 n \u2228 3 \u2264 n \u2227 4 \u2264 n \u2228 4 \u2264 n \u2227 5 \u2264 n \u2228 5 \u2264 n \u2227 6 \u2264 n := by\n    by_contra! h'\n    have : n \u2265 6 := by omega\n    have : 2^p + 3^p \u2264 a^n := h\n    have : a^n \u2264 a^6 := by\n      apply Nat.pow_le_pow_of_le_right (by omega)\n      omega\n    have : 2^p + 3^p \u2264 a^6 := by\n      linarith\n    have : 2^p + 3^p > a^6 := by\n      have : a \u2265 2 := by\n        omega\n      have : a^6 \u2265 2^6 := by\n        exact Nat.pow_le_pow_of_le_left (by omega) 6\n      have : 2^p + 3^p > 2^6 := by\n        have : 2^p \u2265 2^6 := by\n          exact Nat.pow_le_pow_of_le_right (by omega) (by omega)\n        have : 3^p \u2265 3^2 := by\n          exact Nat.pow_le_pow_of_le_right (by omega) (by omega)\n        omega\n      omega\n    omega\n  exact this"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_528_plus :\n  \u2200 z : \u211d, 1 \u2264 z \u2227 z \u2264 Real.sqrt 3 \u2192 (1 - z^2)^2 / 4 \u2264 1 - z * (1 - z^2) \u2228 (1 - z^2)^2 / 4 \u2264 1 - z * (1 - z^2) \u2228 (1 - z^2)^2 / 4 \u2264 1 - z * (1 - z^2) \u2228 (1 - z^2)^2 / 4 \u2264 1 - z * (1 - z^2) \u2228 (1 - z^2)^2 / 4 \u2264 1 - z * (1 - z^2) \u2228 (1 - z^2)^2 / 4 \u2264 1 - z * (1 - z^2)  := by", "target": "\n  rintro z \u27e8h\u2081, h\u2082\u27e9\n  refine' Or.inl _\n  have h\u2083 : 0 \u2264 Real.sqrt 3 - 1 := by norm_num [Real.sqrt_nonneg]\n  have h\u2084 : 0 \u2264 Real.sqrt 3 - z := by\n    apply sub_nonneg_of_le\n    nlinarith [Real.sqrt_nonneg 3, Real.mul_self_sqrt (show 0 \u2264 3 by norm_num)]\n  nlinarith [sq_sqrt (show 0 \u2264 3 by norm_num),\n    mul_self_nonneg (z - 1),\n    mul_self_nonneg (z - Real.sqrt 3),\n    mul_self_nonneg (1 - Real.sqrt 3)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_25509_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) : \u2203 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 Real.sqrt (2 * a / (a + b)) + Real.sqrt (2 * b / (b + c)) + Real.sqrt (2 * c / (c + a)) \u2264 3 \u2227 a * b + b * c + c * a \u2264 3 \u2227 (\u2203 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2227 x * y + y * z + z * x \u2264 3 \u2227 x^2 + y^2 + z^2 \u2264 3):= by", "target": "\n  refine' \u27e81, 1, 1, by norm_num, by norm_num, by norm_num, _, by norm_num, \u27e81, 1, 1, by norm_num, by norm_num, by norm_num, by norm_num, by norm_num\u27e9\u27e9\n  norm_num\n  <;> apply le_of_pow_le_pow_left two_ne_zero (by positivity)\n  <;> ring_nf\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_76501_plus (n : \u2115) (hn : 1 \u2264 n) : \u2211 k in Finset.Icc 1 n, k * (k + 1) * (k + 2) \u2264 (n + 3).choose 4 * (n + 3) * (n + 4) * (n + 5):= by", "target": "\n  induction' hn with n hn IH\n  norm_num [Finset.sum_Icc_succ_top]\n  simp_all [Finset.sum_Icc_succ_top, Nat.choose_succ_succ, mul_add, mul_comm, mul_left_comm, mul_assoc]\n  nlinarith [Nat.mul_le_mul_left (n ^ 2) (by linarith : 1 \u2264 n + 1),\n    Nat.mul_le_mul_left (n ^ 2) (by linarith : 1 \u2264 n + 2),\n    Nat.mul_le_mul_left (n ^ 2) (by linarith : 1 \u2264 n + 3),\n    Nat.mul_le_mul_left (n ^ 2) (by linarith : 1 \u2264 n + 4),\n    Nat.mul_le_mul_left (n ^ 2) (by linarith : 1 \u2264 n + 5)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_26710_plus (a b c : \u211d) (habc : a + b + c = 3) (h : 0 < a \u2227 0 < b \u2227 0 < c) (h' : 0 \u2264 a * b * c) : Real.sqrt (a ^ 2 + 1) * Real.sqrt (b ^ 2 + 1) * Real.sqrt (c ^ 2 + 1) \u2265 (Real.sqrt (a * b * c) + 1) * (Real.sqrt (a * b * c + 1) / 2) \u2227 (Real.sqrt (a ^ 2 + 1) * Real.sqrt (b ^ 2 + 1) * Real.sqrt (c ^ 2 + 1)) \u2265 (Real.sqrt (a * b * c + 1) / 2) * (Real.sqrt (a * b * c) + 1):= by", "target": "\n  rcases h with \u27e8ha, hb, hc\u27e9\n  have h\u2080 : Real.sqrt (a ^ 2 + 1) * Real.sqrt (b ^ 2 + 1) * Real.sqrt (c ^ 2 + 1) = Real.sqrt ((a ^ 2 + 1) * (b ^ 2 + 1) * (c ^ 2 + 1)) := by\n    rw [Real.sqrt_mul, Real.sqrt_mul] <;> positivity\n  rw [h\u2080]\n  have h\u2081 : Real.sqrt (a * b * c + 1) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2082 : Real.sqrt (a * b * c) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2083 : Real.sqrt ((a ^ 2 + 1) * (b ^ 2 + 1) * (c ^ 2 + 1)) \u2265 Real.sqrt (a * b * c + 1) / 2 * (Real.sqrt (a * b * c) + 1) := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_sqrt (show 0 \u2264 a * b * c + 1 by positivity),\n      sq_sqrt (show 0 \u2264 a * b * c by positivity),\n      sq_nonneg (Real.sqrt (a * b * c + 1) / 2),\n      sq_nonneg (Real.sqrt (a * b * c) - 1),\n      mul_self_nonneg (a * b),\n      mul_self_nonneg (b * c),\n      mul_self_nonneg (c * a)]\n  have h\u2084 : Real.sqrt ((a ^ 2 + 1) * (b ^ 2 + 1) * (c ^ 2 + 1)) \u2265 (Real.sqrt (a * b * c) + 1) * (Real.sqrt (a * b * c + 1) / 2) := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_sqrt (show 0 \u2264 a * b * c + 1 by positivity),\n      sq_sqrt (show 0 \u2264 a * b * c by positivity),\n      sq_nonneg (Real.sqrt (a * b * c + 1) / 2),\n      sq_nonneg (Real.sqrt (a * b * c) - 1),\n      mul_self_nonneg (a * b),\n      mul_self_nonneg (b * c),\n      mul_self_nonneg (c * a)]\n  exact \u27e8h\u2084, h\u2083\u27e9\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_53670_plus (a b c : \u211d) (hab : 0 < a) (hb : 0 < b) (hc : 0 < c) (h : a + b + c = 1) (h1 : 0 < a * b * c) : a ^ 2 / (b ^ 2 + a * c) + b ^ 2 / (c ^ 2 + a * b) + c ^ 2 / (a ^ 2 + b * c) \u2265 3 * (a * b * c) / (a * b + b * c + c * a):= by", "target": "\n  have h\u2080 : 0 < a * b := by positivity\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * a := by positivity\n  have h\u2083 : 0 < a * b * c := by positivity\n  have h\u2084 : a ^ 2 / (b ^ 2 + a * c) + b ^ 2 / (c ^ 2 + a * b) + c ^ 2 / (a ^ 2 + b * c) \u2265 3 * (a * b * c) / (a * b + b * c + c * a) := by\n    have h\u2085 : a ^ 2 / (b ^ 2 + a * c) \u2265 a ^ 2 / 1 := by gcongr; nlinarith\n    have h\u2086 : b ^ 2 / (c ^ 2 + a * b) \u2265 b ^ 2 / 1 := by gcongr; nlinarith\n    have h\u2087 : c ^ 2 / (a ^ 2 + b * c) \u2265 c ^ 2 / 1 := by gcongr; nlinarith\n    have h\u2088 : 3 * (a * b * c) / (a * b + b * c + c * a) \u2264 a ^ 2 / 1 + b ^ 2 / 1 + c ^ 2 / 1 := by\n      rw [add_assoc]\n      apply le_of_sub_nonneg\n      field_simp\n      rw [le_div_iff (by positivity)]\n      nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n    linarith\n  exact h\u2084"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_76497_plus (a b c p q : \u211d) (habc : a * b * c = 1) (h : 0 < a \u2227 0 < b \u2227 0 < c) :  (1 / (a + b + c)) \u2264 (1 / a + 1 / b + 1 / c):= by", "target": "\n  rcases h with \u27e8h1, h2, h3\u27e9\n  have h4 : 0 < a * b := by positivity\n  have h5 : 0 < b * c := by positivity\n  have h6 : 0 < a * c := by positivity\n  have h7 : 0 < a * b * c := by positivity\n  field_simp [h1, h2, h3, h4, h5, h6, h7]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    sq_nonneg (a * b - b * c), sq_nonneg (b * c - a * c), sq_nonneg (a * c - a * b)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_1481_plus (x : \u211a) (hx : x = 23/4) : x > 4 \u2228 x \u2264 4 \u2228 x = 4 \u2228 x < 4 \u2228 x \u2265 4 := by", "target": "\n  rw [hx]\n  refine' Or.inl _\n  norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_42035_plus (a b c : \u211d) (habc : a * b * c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0) : (a + b + c) ^ 2 \u2265 3 * (a * b * c) \u2227 (a * b + b * c + c * a) ^ 2 \u2265 3 * (a * b * c * (a * b + b * c + c * a)) \u2227 (a * b * c) * (a ^ 2 + b ^ 2 + c ^ 2) \u2264 (a * b + b * c + c * a) * (a ^ 2 + b ^ 2 + c ^ 2):= by", "target": "\n  obtain \u27e8ha, hb, hc\u27e9 := h\n  have hab : 0 < a * b := by positivity\n  have hbc : 0 < b * c := by positivity\n  have hac : 0 < a * c := by positivity\n  have h\u2081 : (a + b + c) ^ 2 \u2265 3 * (a * b * c) := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      sq_nonneg (a * b - 1), sq_nonneg (b * c - 1), sq_nonneg (c * a - 1)]\n  have h\u2082 : (a * b + b * c + c * a) ^ 2 \u2265 3 * (a * b * c * (a * b + b * c + c * a)) := by\n    nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b),\n      sq_nonneg (a * b + b * c + c * a - 3 * a * b * c)]\n  have h\u2083 : (a * b * c) * (a ^ 2 + b ^ 2 + c ^ 2) \u2264 (a * b + b * c + c * a) * (a ^ 2 + b ^ 2 + c ^ 2) := by\n    nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n  exact \u27e8h\u2081, h\u2082, h\u2083\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_4830_plus (a b c d : \u211d) (habc : a * b * c * d = 1) : (1 / (5 * a ^ 2 - 2 * a + 1) + 1 / (5 * b ^ 2 - 2 * b + 1) + 1 / (5 * c ^ 2 - 2 * c + 1) + 1 / (5 * d ^ 2 - 2 * d + 1)) \u2265 1 \u2228 \u2203 a b c d : \u211d, a * b * c * d = 1 \u2227 (1 / (5 * a ^ 2 - 2 * a + 1) + 1 / (5 * b ^ 2 - 2 * b + 1) + 1 / (5 * c ^ 2 - 2 * c + 1) + 1 / (5 * d ^ 2 - 2 * d + 1)) < 1 \u2228 \u2203 a b c d : \u211d, a * b * c * d = 1 \u2227 (1 / (5 * a ^ 2 - 2 * a + 1) + 1 / (5 * b ^ 2 - 2 * b + 1) + 1 / (5 * c ^ 2 - 2 * c + 1) + 1 / (5 * d ^ 2 - 2 * d + 1)) < 1 \u2228 \u2203 a b c d : \u211d, a * b * c * d = 1 \u2227 (1 / (5 * a ^ 2 - 2 * a + 1) + 1 / (5 * b ^ 2 - 2 * b + 1) + 1 / (5 * c ^ 2 - 2 * c + 1) + 1 / (5 * d ^ 2 - 2 * d + 1)) < 1 := by", "target": "\n  by_cases h\u2080 : 1 / (5 * a ^ 2 - 2 * a + 1) + 1 / (5 * b ^ 2 - 2 * b + 1) + 1 / (5 * c ^ 2 - 2 * c + 1) + 1 / (5 * d ^ 2 - 2 * d + 1) \u2265 1 <;> by_cases h\u2081 : \u2203 a b c d : \u211d, a * b * c * d = 1 \u2227 (1 / (5 * a ^ 2 - 2 * a + 1) + 1 / (5 * b ^ 2 - 2 * b + 1) + 1 / (5 * c ^ 2 - 2 * c + 1) + 1 / (5 * d ^ 2 - 2 * d + 1)) < 1 <;> simp_all\n  <;> use 1, 1, 1, 1\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2157 (a b c : \u211d) : (a - b + c) ^ 2 * (a + c - b) ^ 2 + (b - c + a) ^ 2 * (b + a - c) ^ 2 + (c - a + b) ^ 2 * (c + b - a) ^ 2 \u2265 0 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2157_plus (a b c : \u211d) (hx: a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0) (hab : a + b + c = 1) : (1 - a) ^ 2 * (1 - b) ^ 2 * (1 - c) ^ 2 * (a + b + c) + (1 - a) ^ 2 * (1 - b) ^ 2 * (1 - c) ^ 2 * (b + c + a) + (1 - a) ^ 2 * (1 - b) ^ 2 * (1 - c) ^ 2 * (c + a + b) + (1 - a) ^ 2 * (1 - b) ^ 2 * (1 - c) ^ 2 * (a + b + c) + (1 - a) ^ 2 * (1 - b) ^ 2 * (1 - c) ^ 2 * (b + c + a) + (1 - a) ^ 2 * (1 - b) ^ 2 * (1 - c) ^ 2 * (c + a + b) \u2265 0 \u2227 (1 - a) ^ 2 * (1 - b) ^ 2 * (1 - c) ^ 2 * (a + b + c) + (1 - a) ^ 2 * (1 - b) ^ 2 * (1 - c) ^ 2 * (b + c + a) + (1 - a) ^ 2 * (1 - b) ^ 2 * (1 - c) ^ 2 * (c + a + b) + (1 - a) ^ 2 * (1 - b) ^ 2 * (1 - c) ^ 2 * (a + b + c) + (1 - a) ^ 2 * (1 - b) ^ 2 * (1 - c) ^ 2 * (b + c + a) + (1 - a) ^ 2 * (1 - b) ^ 2 * (1 - c) ^ 2 * (c + a + b) \u2265 (1 - a) ^ 2 * (1 - b) ^ 2 * (1 - c) ^ 2 * (a + b + c):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2366 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x + y) * (y + z) + (y + z) * (z + x) + (z + x) * (x + y) \u2265 4 * Real.sqrt (3 * x * y * z * (x + y + z)) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2366_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \u2203 a b c :\u211d, a * b * c \u2264 (x + y) * (y + z) + (y + z) * (z + x) + (z + x) * (x + y) \u2227 (x + y) * (y + z) + (y + z) * (z + x) + (z + x) * (x + y) \u2265 4 * Real.sqrt (3 * x * y * z * (x + y + z)) \u2227 a * b * c \u2264 (x + y) * (y + z) + (y + z) * (z + x) + (z + x) * (x + y):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_12236_plus (a b c : \u211d) (habc : a * b * c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0) : (a / b + b / c + c / a) ^ 2 \u2265 (a + b + c) ^ 2  := by", "target": "\n  obtain \u27e8ha, hb, hc\u27e9 := h\n  have : 0 < a * b := by positivity\n  have : 0 < b * c := by positivity\n  have : 0 < c * a := by positivity\n  have h\u2080 : a / b + b / c + c / a \u2265 a + b + c := by\n    field_simp [ha.ne', hb.ne', hc.ne']\n    rw [le_div_iff (by positivity), \u2190 sub_nonneg]\n    ring_nf\n    nlinarith [sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1),\n      mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le,\n      mul_nonneg (sq_nonneg (a - 1)) hc.le, mul_nonneg (sq_nonneg (b - 1)) ha.le,\n      mul_nonneg (sq_nonneg (c - 1)) hb.le]\n  have h\u2081 : (a / b + b / c + c / a) ^ 2 \u2265 (a + b + c) ^ 2 := by\n    gcongr\n    <;> nlinarith\n  exact h\u2081\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4333 (a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : (a / Real.sqrt (a ^ 2 + b ^ 2) + b / Real.sqrt (b ^ 2 + c ^ 2) + c / Real.sqrt (c ^ 2 + d ^ 2) + d / Real.sqrt (d ^ 2 + a ^ 2)) \u2264 3 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4333_plus (a b c d : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hd : 0 \u2264 d) (habc : a + b + c + d = 1) : (1 - a) ^ 2 / (a ^ 2 + b ^ 2) + (1 - b) ^ 2 / (b ^ 2 + c ^ 2) + (1 - c) ^ 2 / (c ^ 2 + d ^ 2) + (1 - d) ^ 2 / (d ^ 2 + a ^ 2) \u2265 1 - 2 * (a + b + c + d):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_32295_plus (a b c : \u211d) (h\u2081 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2082 : a + b + c = 14 \u2227 a^2 + b^2 + c^2 = 84 \u2227 a^3 + b^3 + c^3 = 584) : a = 4 \u2227 b = 6 \u2227 c = 4 \u2228 a = 4 \u2227 b = 4 \u2227 c = 6 \u2228 a = 6 \u2227 b = 4 \u2227 c = 4 \u2194 a = 4 \u2227 b = 6 \u2227 c = 4 \u2228 a = 4 \u2227 b = 4 \u2227 c = 6 \u2228 a = 6 \u2227 b = 4 \u2227 c = 4 := by", "target": "\n  constructor\n  rintro (h\u2083 | h\u2083 | h\u2083) <;> simp_all\n  rintro (h\u2083 | h\u2083 | h\u2083) <;> simp_all\n  <;> nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_260_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : a ^ 2 + b ^ 2 + c ^ 2 + (Real.sqrt ((a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2)) + Real.sqrt ((b ^ 2 + c ^ 2) * (c ^ 2 + a ^ 2)) + Real.sqrt ((a ^ 2 + b ^ 2) * (c ^ 2 + a ^ 2))) \u2265 2 * (a * b + b * c + c * a) \u2227 (Real.sqrt ((a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2)) + Real.sqrt ((b ^ 2 + c ^ 2) * (c ^ 2 + a ^ 2)) + Real.sqrt ((a ^ 2 + b ^ 2) * (c ^ 2 + a ^ 2))) \u2265 2 * (a * b + b * c + c * a) - (a ^ 2 + b ^ 2 + c ^ 2):= by", "target": "\n  have h\u2080 : 0 \u2264 a ^ 2 + b ^ 2 := by positivity\n  have h\u2081 : 0 \u2264 b ^ 2 + c ^ 2 := by positivity\n  have h\u2082 : 0 \u2264 c ^ 2 + a ^ 2 := by positivity\n  have h\u2083 : 0 \u2264 Real.sqrt ((a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2)) := Real.sqrt_nonneg _\n  have h\u2084 : 0 \u2264 Real.sqrt ((b ^ 2 + c ^ 2) * (c ^ 2 + a ^ 2)) := Real.sqrt_nonneg _\n  have h\u2085 : 0 \u2264 Real.sqrt ((a ^ 2 + b ^ 2) * (c ^ 2 + a ^ 2)) := Real.sqrt_nonneg _\n  have h\u2086 : Real.sqrt ((a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2)) + Real.sqrt ((b ^ 2 + c ^ 2) * (c ^ 2 + a ^ 2)) + Real.sqrt ((a ^ 2 + b ^ 2) * (c ^ 2 + a ^ 2)) \u2265 0 := by positivity\n  have h\u2087 : 2 * (a * b + b * c + c * a) \u2264 a ^ 2 + b ^ 2 + c ^ 2 + (Real.sqrt ((a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2)) + Real.sqrt ((b ^ 2 + c ^ 2) * (c ^ 2 + a ^ 2)) + Real.sqrt ((a ^ 2 + b ^ 2) * (c ^ 2 + a ^ 2))) := by\n    nlinarith [sq_sqrt (show 0 \u2264 (a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2) by positivity),\n      sq_sqrt (show 0 \u2264 (b ^ 2 + c ^ 2) * (c ^ 2 + a ^ 2) by positivity),\n      sq_sqrt (show 0 \u2264 (a ^ 2 + b ^ 2) * (c ^ 2 + a ^ 2) by positivity),\n      sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  exact \u27e8by linarith, by linarith\u27e9\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_47617_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a * b * c \u2264 1) (h\u2083 : a + b + c = 1) : a ^ 2 * b ^ 2 * c ^ 2 * (a + b + c) \u2264 a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 2 * (c + a) + a ^ 2 * c ^ 2 * (b + c) + b ^ 2 * c ^ 2 * (a + b):= by", "target": "\n  simp_all only [mul_assoc, mul_comm, mul_left_comm, add_assoc, add_comm, add_left_comm]\n  have h\u2084 : 0 \u2264 a * b := by nlinarith\n  have h\u2085 : 0 \u2264 b * c := by nlinarith\n  have h\u2086 : 0 \u2264 a * c := by nlinarith\n  have h\u2087 : 0 \u2264 a * b * c := by nlinarith\n  have h\u2088 : 0 \u2264 a * b * c * (a + b + c) := by nlinarith\n  nlinarith [mul_nonneg h\u2084 h\u2085, mul_nonneg h\u2085 h\u2086, mul_nonneg h\u2086 h\u2084,\n    mul_nonneg (sq_nonneg a) (sq_nonneg b), mul_nonneg (sq_nonneg b) (sq_nonneg c),\n    mul_nonneg (sq_nonneg c) (sq_nonneg a)]\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3831 (x y z : \u211d) : x ^ 4 + y ^ 4 + z ^ 4 \u2265 x ^ 2 * y * z + y ^ 2 * z * x + z ^ 2 * x * y := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3831_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) : x ^ 4 + y ^ 4 + z ^ 4 + 3 * (x ^ 2 * y ^ 2 * z ^ 2) \u2265 x ^ 2 * y * z + y ^ 2 * z * x + z ^ 2 * x * y \u2227 x ^ 4 + y ^ 4 + z ^ 4 + 3 * (x ^ 2 * y ^ 2 * z ^ 2) + 6 * (x ^ 2 * y ^ 2 + y ^ 2 * z ^ 2 + z ^ 2 * x ^ 2) \u2265 (x ^ 2 + y ^ 2 + z ^ 2) * (y * z + z * x + x * y):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_37900_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a + b + c = 1) (h\u2083 : 0 \u2264 a * b) (h\u2084 : 0 \u2264 a * c) (h\u2085 : 0 \u2264 b * c) : a ^ 2 * b ^ 2 * c ^ 2 * (a + b + c) ^ 2 \u2264 (a ^ 2 + b ^ 2 + c ^ 2) ^ 3:= by", "target": "\n  simp only [h\u2082, one_pow, mul_one]\n  have : a ^ 2 + b ^ 2 + c ^ 2 \u2264 1 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c)]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (a ^ 2 - c ^ 2), sq_nonneg (b ^ 2 - c ^ 2),\n    mul_nonneg (sq_nonneg (a * b)) (sq_nonneg (a * c)),\n    mul_nonneg (sq_nonneg (b * c)) (sq_nonneg (a * b)),\n    mul_nonneg (sq_nonneg (a * c)) (sq_nonneg (b * c))]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1934 {a b n1 n2 n : \u2115} (h1 : a \u2261 b [ZMOD n1]) (h2 : a \u2261 b [ZMOD n2]) : a \u2261 b [ZMOD n] := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1934_plus : \u2200 a b n1 n2 n : \u2115, a \u2261 b [ZMOD n1] \u2227 a \u2261 b [ZMOD n2] \u2192 a \u2261 b [ZMOD n] \u2228 (\u2203 x y : \u2115, a \u2261 x [ZMOD n] \u2227 b \u2261 y [ZMOD n] \u2227 x \u2260 y):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_44379_plus (x y z : \u211d) (hx : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z) (h : x + y + z = 3) (h' : x * y + y * z + z * x \u2264 3) : 1 / (x ^ 2 + 1) + 1 / (y ^ 2 + 1) + 1 / (z ^ 2 + 1) \u2265 9 / 10:= by", "target": "\n  rcases hx with \u27e8hx, hy, hz\u27e9\n  have : 1 / (x ^ 2 + 1) \u2265 1 - x / 2 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x - 1)]\n  have : 1 / (y ^ 2 + 1) \u2265 1 - y / 2 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (y - 1)]\n  have : 1 / (z ^ 2 + 1) \u2265 1 - z / 2 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (z - 1)]\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_24483_plus (x y z : \u2115) (h\u2081 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2082 : x \u2264 y) (h\u2083 : y \u2264 z) (h\u2084 : x + y + z = 10) (h\u2085 : x \u2261 0 [ZMOD 2]) (h\u2086 : y \u2261 0 [ZMOD 2]) (h\u2087 : z \u2261 0 [ZMOD 2]) : 1 / (1 + x + y + z) \u2264 1:= by", "target": "\n  have h\u2088 : x + y + z \u2264 10 := by linarith\n  have h\u2089 : 1 / (1 + x + y + z) \u2264 1 := by\n    apply Nat.div_le_of_le_mul\n    omega\n  exact h\u2089"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4064 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a^2 + b^2 + c^2 = 3) : Real.sqrt (a^2 + 3 * b^2) + Real.sqrt (b^2 + 3 * c^2) + Real.sqrt (c^2 + 3 * a^2) \u2265 Real.sqrt (12 * (a + b + c)) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4064_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 3) (h\u2082 : a * b + b * c + c * a \u2264 3) : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) * Real.sqrt (1 + c ^ 2) \u2265 (Real.sqrt (1 + (a + b + c) ^ 2) / 3) \u2227 (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) * Real.sqrt (1 + c ^ 2) \u2265 (Real.sqrt (1 + (a + b + c) ^ 2) / 3)) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_36802_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b + b * c + c * a = 0) : a ^ 2 * b ^ 2 * c ^ 2 * (a + b + c) \u2264 (a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2) * (a + b + c):= by", "target": "\n  have h\u2081 : 0 \u2264 a ^ 2 * b ^ 2 := by positivity\n  have h\u2082 : 0 \u2264 b ^ 2 * c ^ 2 := by positivity\n  have h\u2083 : 0 \u2264 c ^ 2 * a ^ 2 := by positivity\n  have h\u2084 : 0 \u2264 a * b := by positivity\n  have h\u2085 : 0 \u2264 b * c := by positivity\n  have h\u2086 : 0 \u2264 c * a := by positivity\n  have h\u2087 : 0 \u2264 a * b * c := by positivity\n  have h\u2088 : 0 \u2264 a * b * c * (a * b + b * c + c * a) := by positivity\n  have h\u2089 : 0 \u2264 a * b * c * (a + b + c) := by positivity\n  nlinarith\n  <;> linarith\n  <;> linarith\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_31340_plus (a b : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b) (h : a ^ 2 + b ^ 2 = 1) : Real.sqrt (1 + 3 * (a ^ 2 + b ^ 2) ^ 2) \u2265 2 * a * b \u2227 Real.sqrt (1 + 3 * (a ^ 2 + b ^ 2) ^ 2) \u2265 a + b \u2227 Real.sqrt (1 + 3 * (a ^ 2 + b ^ 2) ^ 2) \u2265 a * b \u2227 Real.sqrt (1 + 3 * (a ^ 2 + b ^ 2) ^ 2) \u2265 a * b * (a + b):= by", "target": "\n  have h\u2081 : Real.sqrt (1 + 3 * (a ^ 2 + b ^ 2) ^ 2) \u2265 2 * a * b := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a + b), sq_nonneg (a ^ 2 - b ^ 2),\n      sq_nonneg (a ^ 2 + b ^ 2)]\n  have h\u2082 : Real.sqrt (1 + 3 * (a ^ 2 + b ^ 2) ^ 2) \u2265 a + b := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a + b), sq_nonneg (a ^ 2 - b ^ 2),\n      sq_nonneg (a ^ 2 + b ^ 2)]\n  have h\u2083 : Real.sqrt (1 + 3 * (a ^ 2 + b ^ 2) ^ 2) \u2265 a * b := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a + b), sq_nonneg (a ^ 2 - b ^ 2),\n      sq_nonneg (a ^ 2 + b ^ 2)]\n  have h\u2084 : Real.sqrt (1 + 3 * (a ^ 2 + b ^ 2) ^ 2) \u2265 a * b * (a + b) := by\n    have h\u2085 : 0 \u2264 a * b := by nlinarith\n    have h\u2086 : 0 \u2264 a * b * (a + b) := by nlinarith\n    have h\u2087 : a * b * (a + b) \u2264 1 := by\n      nlinarith [sq_nonneg (a - b), sq_nonneg (a + b), sq_nonneg (a ^ 2 - b ^ 2),\n        sq_nonneg (a ^ 2 + b ^ 2)]\n    nlinarith [sq_sqrt (show 0 \u2264 1 + 3 * (a ^ 2 + b ^ 2) ^ 2 from by nlinarith)]\n  exact \u27e8h\u2081, h\u2082, h\u2083, h\u2084\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_17905_plus : \u2200 a b c : \u211d, a * b > 0 \u2227 b * c > 0 \u2227 c * a > 0 \u2227 a + b + c = 3 \u2192 (1 + 1/a) * (1 + 1/b) * (1 + 1/c) \u2265 8/9 \u2228 (1 + 1/a) * (1 + 1/b) * (1 + 1/c) < 8/9 \u2227 (1 + 1/a) * (1 + 1/b) * (1 + 1/c) \u2265 1:= by", "target": "\n  rintro a b c \u27e8h\u2080, h\u2081, h\u2082, h\u2083\u27e9\n  by_cases h\u2084 : (1 + 1/a) * (1 + 1/b) * (1 + 1/c) \u2265 8/9\n  left\n  exact h\u2084\n  right\n  constructor\n  exact lt_of_not_ge h\u2084\n  have h\u2085 : 0 < a := by\n    nlinarith\n  have h\u2086 : 0 < b := by\n    nlinarith\n  have h\u2087 : 0 < c := by\n    nlinarith\n  have h\u2088 : 0 < a * b := by\n    nlinarith\n  have h\u2089 : 0 < b * c := by\n    nlinarith\n  have h\u2081\u2080 : 0 < c * a := by\n    nlinarith\n  have h\u2081\u2081 : 0 < a * b * c := by\n    nlinarith\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5276 (a b : \u211d) : (a^2 + b) * (a + b^2) \u2265 (a^2 + a) * (b^2 + b) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5276_plus (a b : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b) : Real.sqrt (1 + a ^ 2) * (1 + b ^ 2) \u2265 1 + a * b := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4556 : \u00ac Summable (\u03bb j : \u2115 => (-1 : \u211d)^j * (1 - 1/j)) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4556_plus : \u2203 (x : \u2115 \u2192 \u211d), \u00ac Summable (\u03bb j : \u2115 => x j) \u2228 \u2203 (f : \u2115 \u2192 \u211d), Summable f \u2227 \u2203 (g : \u2115 \u2192 \u211d), \u2203 (h : g = \u03bb i => f i + 1), Summable g \u2227 \u2203 (h\u2081 : \u2200 i, g i \u2265 0), \u2203 (h\u2082 : \u2200 i, f i \u2265 0), True:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1235 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a + b - c) ^ 2 / (4 * a * b + c ^ 2) + (b + c - a) ^ 2 / (4 * b * c + a ^ 2) + (c + a - b) ^ 2 / (4 * c * a + b ^ 2) + 7 / 9 * (a * b + b * c + c * a) / (a ^ 2 + b ^ 2 + c ^ 2) \u2265 62 / 45 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1235_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b + b * c + c * a = 1) : a ^ 2 / (b + c) ^ 2 + b ^ 2 / (c + a) ^ 2 + c ^ 2 / (a + b) ^ 2 + 9 * (a * b + b * c + c * a) / (a * b + b * c + c * a) \u2265 3/2 \u2227 a ^ 2 / (b + c) ^ 2 + b ^ 2 / (c + a) ^ 2 + c ^ 2 / (a + b) ^ 2 \u2265 3/2 - 9 * (a * b + b * c + c * a) / (a * b + b * c + c * a):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_12758_plus (x y z : \u211d) (hx : 0 < x \u2227 0 < y \u2227 0 < z \u2227 x * y * z = 1) : 1 / x ^ 2 + 1 / y ^ 2 + 1 / z ^ 2 \u2265 3:= by", "target": "\n  obtain \u27e8h1, h2, h3, h4\u27e9 := hx\n  have h5 : 0 < x * y := mul_pos h1 h2\n  have h6 : 0 < y * z := mul_pos h2 h3\n  have h7 : 0 < x * z := mul_pos h1 h3\n  field_simp [h4]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    sq_nonneg (x * y - 1), sq_nonneg (y * z - 1), sq_nonneg (x * z - 1)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_39492_plus (n : \u2115) (hn : 1 < n) : (\u2203 a b : \u2115, n \u2223 a * (a + 1) / 2 + b * (b + 1) / 2) \u2194 (\u2203 a b : \u2115, n \u2223 a^2 + b^2) \u2228 (\u2203 a : \u2115, n \u2223 a) \u2228 (\u2203 b : \u2115, n \u2223 b):= by", "target": "\n  have h\u2081 : \u2203 a b : \u2115, n \u2223 a * (a + 1) / 2 + b * (b + 1) / 2 := by\n    refine' \u27e80, 0, _\u27e9\n    simp [hn]\n  have h\u2082 : (\u2203 a b : \u2115, n \u2223 a ^ 2 + b ^ 2) \u2228 (\u2203 a : \u2115, n \u2223 a) \u2228 \u2203 b : \u2115, n \u2223 b := by\n    refine' Or.inl \u27e80, 0, _\u27e9\n    simp [hn]\n  tauto"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_5317_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \u2203 a : \u211d, a \u2208 Set.Ioo 0 (1 : \u211d) \u2227 x / y + y / z + z / x \u2265 3 + (x - y) ^ 2 * (x - z) ^ 2 * (y - z) ^ 2 / (x * y + x * z + y * z) ^ 3 \u2228 x / y + y / z + z / x < 3 + (x - y) ^ 2 * (x - z) ^ 2 * (y - z) ^ 2 / (x * y + x * z + y * z) ^ 3  := by", "target": "\n  use 1 / 2\n  by_cases h : x / y + y / z + z / x \u2265 3 + (x - y) ^ 2 * (x - z) ^ 2 * (y - z) ^ 2 / (x * y + x * z + y * z) ^ 3\n  <;> simp_all\n  <;> norm_num\n  <;> nlinarith\n  <;> norm_num\n  <;> nlinarith\n  <;> norm_num\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_18918_plus (n : \u2115) (hn : 0 < n) (A : Finset \u2115) (hA : A = Finset.Icc 1 (2 * n)) (hA' : \u2200 a \u2208 A, a \u2223 2 * n ) : \u2203 a \u2208 A, a \u2223 2 * n \u2227 \u2200 b \u2208 A, b \u2223 a \u2192 b \u2264 a \u2228 b = a := by", "target": "\n  use 2 * n\n  rw [hA]\n  constructor\n  exact Finset.mem_Icc.mpr \u27e8by linarith, by linarith\u27e9\n  constructor\n  exact dvd_refl _\n  intro b hb hba\n  rw [Finset.mem_Icc] at hb\n  have hb' : b \u2264 2 * n := by linarith\n  omega"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_7297_plus (f : \u211d \u2192 \u211d) (hf : \u2200 a b : \u211d, f (a^2) - f (b^2) \u2264 (f a + b) * (a - f b)) : \u2200 x : \u211d, \u2203 y : \u211d, y \u2265 x \u2227 \u2203 z : \u211d, z \u2264 x \u2227 (f x - x) * (x - f x) \u2264 (y - x) * (x - z):= by", "target": "\n  intro x\n  refine' \u27e8x, le_rfl, x, le_rfl, _\u27e9\n  have h\u2081 := hf x 0\n  have h\u2082 := hf 0 0\n  have h\u2083 := hf 0 x\n  have h\u2084 := hf x x\n  ring_nf at h\u2081 h\u2082 h\u2083 h\u2084 \u22a2\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_6534_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) : 1 / (x + y + z) \u2264 1 / x + 1 / y + 1 / z \u2227 1 / (x * y + y * z + z * x) \u2264 3 * (1 / x + 1 / y + 1 / z):= by", "target": "\n  have hxy : 0 < x * y := mul_pos hx hy\n  have hyz : 0 < y * z := mul_pos hy hz\n  have hxz : 0 < z * x := mul_pos hz hx\n  have h\u2081 : 1 / (x + y + z) \u2264 1 / x + 1 / y + 1 / z := by\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n      mul_self_nonneg (x * y - y * z), mul_self_nonneg (y * z - z * x),\n      mul_self_nonneg (z * x - x * y)]\n  have h\u2082 : 1 / (x * y + y * z + z * x) \u2264 3 * (1 / x + 1 / y + 1 / z) := by\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n      mul_self_nonneg (x * y - y * z), mul_self_nonneg (y * z - z * x),\n      mul_self_nonneg (z * x - x * y)]\n  exact \u27e8h\u2081, h\u2082\u27e9\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_62731_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 1) : (1 - x * y) * (1 - y * z) * (1 - z * x) \u2265 (x * y) * (y * z) * z * x:= by", "target": "\n  have h\u2081 : 0 \u2264 x * y := by positivity\n  have h\u2082 : 0 \u2264 y * z := by positivity\n  have h\u2083 : 0 \u2264 z * x := by positivity\n  have h\u2084 : 0 \u2264 x * y * z := by positivity\n  have h\u2085 : 0 \u2264 x * y * z * x := by positivity\n  have h\u2086 : 0 \u2264 y * z * x * y := by positivity\n  have h\u2087 : 0 \u2264 z * x * y * z := by positivity\n  have h\u2088 : 0 \u2264 x * y * z * x * y := by positivity\n  have h\u2089 : 0 \u2264 y * z * x * y * z := by positivity\n  have h\u2081\u2080 : 0 \u2264 z * x * y * z * x := by positivity\n  have h\u2081\u2081 : 0 \u2264 x * y * z * x * y * z := by positivity\n  nlinarith [mul_le_mul_of_nonneg_left (by nlinarith : x * y \u2264 1) (by positivity : 0 \u2264 y * z),\n    mul_le_mul_of_nonneg_left (by nlinarith : y * z \u2264 1) (by positivity : 0 \u2264 z * x),\n    mul_le_mul_of_nonneg_left (by nlinarith : z * x \u2264 1) (by positivity : 0 \u2264 x * y)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_28149_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a + b + c \u2264 3) (h\u2083 : a * b + b * c + c * a \u2264 3) : a ^ 2 + b ^ 2 + c ^ 2 - 2 * (a * b + b * c + c * a) + 3 * (a * b * c) ^ (2 / 3) \u2265 0 \u2227 (a * b * c) ^ (2 / 3) \u2264 1 \u2227 (a * b * c) ^ (2 / 3) \u2264 a * b * c + 1:= by", "target": "\n  rcases h\u2081 with \u27e8h\u2081, h\u2082, h\u2083\u27e9\n  constructor\n  \u00b7 norm_num\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  \u00b7 constructor <;> norm_num <;>\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_nonneg h\u2081 h\u2082, mul_nonneg h\u2082 h\u2083, mul_nonneg h\u2083 h\u2081]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_4218_plus (a b c : \u211d) (hab : 0 < a \u2227 0 < b \u2227 0 < c) (h : a + b + c \u2264 3) (h' : a * b + b * c + c * a \u2264 1) : a ^ 2 * b ^ 2 * c ^ 2 * (a + b + c) \u2264 a ^ 2 * b ^ 2 * c ^ 2 * 3 \u2227 a ^ 2 * b ^ 2 * c ^ 2 * (a + b + c) \u2264 (a * b + b * c + c * a) * (a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2):= by", "target": "\n  have h\u2080 : 0 < a * b := by nlinarith\n  have h\u2081 : 0 < b * c := by nlinarith\n  have h\u2082 : 0 < c * a := by nlinarith\n  have h\u2083 : 0 < a * b * c := by nlinarith\n  have h\u2084 : 0 < a * b * c * (a + b + c) := by nlinarith\n  have h\u2085 : 0 < a ^ 2 * b ^ 2 * c ^ 2 := by nlinarith\n  have h\u2086 : 0 < a ^ 2 * b ^ 2 * c ^ 2 * (a + b + c) := by nlinarith\n  constructor\n  \u00b7 nlinarith\n  \u00b7 nlinarith [sq_nonneg (a * b + b * c + c * a), sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n  <;> linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2290 (a b c : \u211d) (h : a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = a * b * c) : 3 * Real.sqrt 3 / 4 \u2264 bc / (a * (1 + bc)) + ca / (b * (1 + ca)) + ab / (c * (1 + ab)) \u2227 bc / (a * (1 + bc)) + ca / (b * (1 + ca)) + ab / (c * (1 + ab)) \u2264 (a + b + c) / 4 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2290_plus (a b c : \u211d) (h\u2081 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2082 : a + b + c = 1) (h\u2083 : (1 - a) * (1 - b) * (1 - c) \u2265 8 * a * b * c) : (1 - a) * (1 - b) * (1 - c) * (a + b + c) \u2265 8 * a * b * c * (a * b + b * c + c * a):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_37234_plus (a b c : \u211d) (h\u2081 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2082 : a * b * c = 1) : (1 + 1 / a + 1 / b + 1 / c) ^ 2 \u2265 16:= by", "target": "\n  obtain \u27e8ha, hb, hc\u27e9 := h\u2081\n  have : 0 < a * b := by positivity\n  have : 0 < b * c := by positivity\n  have : 0 < c * a := by positivity\n  field_simp [ha.ne', hb.ne', hc.ne', this.ne', this.ne', this.ne']\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b - 1), mul_self_nonneg (b * c - 1), mul_self_nonneg (c * a - 1),\n    mul_self_nonneg (a * b * c - 1)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_45900_plus : \u2200 a b c : \u211d, \u2203 d : \u211d, d \u2265 0 \u2227 d \u2265 a * b + b * c + c * a \u2227 d \u2265 a ^ 2 + b ^ 2 + c ^ 2  / 2 \u2227 d \u2265 (a + b + c) ^ 2 / 3 \u2227 d \u2265 (a + b + c) ^ 2 / 4 \u2227 d \u2265 (a + b + c) ^ 2 / 5 \u2227 d \u2265 (a + b + c) ^ 2 / 6  := by", "target": "\n  intro a b c\n  use max (max (max (max (max (max (a * b + b * c + c * a) (a ^ 2 + b ^ 2 + c ^ 2 / 2)) ((a + b + c) ^ 2 / 3)) ((a + b + c) ^ 2 / 4)) ((a + b + c) ^ 2 / 5)) ((a + b + c) ^ 2 / 6)) 0\n  constructor <;> simp [add_assoc, add_left_comm, add_comm, mul_comm, mul_left_comm, mul_assoc] <;>\n    nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_10879_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a + b + c \u2264 1) (h\u2083 : a * b + b * c + c * a \u2264 1) : a ^ 2 * b ^ 2 * c ^ 2 * (a + b + c) * (b + c + a) * (c + a + b) \u2264 1 \u2227 a * b * c * (a * b + b * c + c * a) * (a + b + c) \u2264 1 \u2227 a * b * c * (a * b + b * c + c * a) \u2264 1 \u2227 a * b * c \u2264 1 \u2227 a * b \u2264 1 \u2227 a * c \u2264 1 \u2227 b * c \u2264 1 := by", "target": "\n  have h\u2084 : 0 \u2264 a * b := by nlinarith\n  have h\u2085 : 0 \u2264 b * c := by nlinarith\n  have h\u2086 : 0 \u2264 c * a := by nlinarith\n  have h\u2087 : a * b + b * c + c * a \u2264 1 := by nlinarith\n  have h\u2088 : a * b * c \u2264 1 := by nlinarith\n  have h\u2089 : a * b * c * (a * b + b * c + c * a) \u2264 1 := by nlinarith\n  have h\u2081\u2080 : a * b * c * (a + b + c) \u2264 1 := by nlinarith\n  have h\u2081\u2081 : a ^ 2 * b ^ 2 * c ^ 2 * (a + b + c) * (b + c + a) * (c + a + b) \u2264 1 := by\n    calc\n      a ^ 2 * b ^ 2 * c ^ 2 * (a + b + c) * (b + c + a) * (c + a + b) \u2264 1 * 1 * 1 * 1 * 1 * 1 := by gcongr <;> nlinarith\n      _ = 1 := by norm_num\n  exact \u27e8h\u2081\u2081, by nlinarith, by nlinarith, by nlinarith, by nlinarith, by nlinarith, by nlinarith\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_1373_plus (a b c : \u211d) (habc : a + b + c = 1) (h : 0 < a \u2227 0 < b \u2227 0 < c) (hab : 0 \u2264 a * b) (hbc : 0 \u2264 b * c) (hca : 0 \u2264 c * a) : (1 - a) * (1 - b) * (1 - c) * (a / (b + c) + b / (c + a) + c / (a + b)) \u2265 0 \u2227 (1 - a) * (1 - b) * (1 - c) * (a / (b + c) + b / (c + a) + c / (a + b)) \u2265 0 \u2227 (1 - a) * (1 - b) * (1 - c) * (a / (b + c) + b / (c + a) + c / (a + b)) \u2265 0 := by", "target": "\n  obtain \u27e8ha, hb, hc\u27e9 := h\n  have h\u2080 : (1 - a) * (1 - b) * (1 - c) \u2265 0 := by\n    apply mul_nonneg\n    apply mul_nonneg\n    all_goals nlinarith\n  have h\u2081 : a / (b + c) + b / (c + a) + c / (a + b) \u2265 0 := by\n    apply add_nonneg\n    apply add_nonneg\n    all_goals apply div_nonneg <;> nlinarith\n  exact \u27e8by positivity, by positivity, by positivity\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_20122_plus (a b c d : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 0 \u2264 d) (h\u2082 : a + b + c + d = 1) : (1 - a) * (1 - b) * (1 - c) * (1 - d) \u2265 8 * (a * b * c * d) * (a + b + c + d):= by", "target": "\n  rw [h\u2082]\n  have h\u2083 : 0 \u2264 a * b := by nlinarith\n  have h\u2084 : 0 \u2264 c * d := by nlinarith\n  have h\u2085 : 0 \u2264 a * b * c := by nlinarith\n  have h\u2086 : 0 \u2264 a * b * d := by nlinarith\n  have h\u2087 : 0 \u2264 a * c * d := by nlinarith\n  have h\u2088 : 0 \u2264 b * c * d := by nlinarith\n  have h\u2089 : 0 \u2264 a * b * c * d := by nlinarith\n  nlinarith [sq_nonneg (a - b), sq_nonneg (c - d), sq_nonneg (a + b - c - d)]\n  <;> assumption\n  <;> simp_all"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3104 : \u2200 x : \u211d, 2 * Real.sqrt (x + 1) + Real.sqrt (2 * x - 3) + Real.sqrt (15 - 3 * x) < 2 * Real.sqrt 19 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3104_plus : \u2200 x : \u211d, Real.sqrt (x ^ 2 - 1) \u2264 x ^ 2 + 1 \u2227 Real.sqrt (x ^ 2 + 1) \u2264 x ^ 2 + 3 \u2227 Real.sqrt (x ^ 2 - 3 * x + 3) \u2264 x ^ 2 + 3 \u2227 Real.sqrt (x ^ 2 + 3 * x + 3) \u2264 x ^ 2 + 3 \u2227 Real.sqrt (x ^ 2 - 4 * x + 4) \u2264 x ^ 2 + 4 \u2227 Real.sqrt (x ^ 2 + 4 * x + 4) \u2264 x ^ 2 + 4 \u2227 Real.sqrt (x ^ 2 - 5 * x + 5) \u2264 x ^ 2 + 5 \u2227 Real.sqrt (x ^ 2 + 5 * x + 5) \u2264 x ^ 2 + 5 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_6 : (29 * 31 + 37 - 41) % 4 = 3 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_6_plus : (\u2203 x y : \u2115, 2 * x * (2 * y - 1) \u2264 29 * 31 \u2227 29 * 31 < 2 * x * (2 * y + 1)) \u2228 (\u2203 x : \u2115, 2 * x * (2 * 0 - 1) \u2264 29 * 31 \u2227 29 * 31 < 2 * x * (2 * 0 + 1)) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5087 : \u2200 n : \u2115, n \u2265 2 \u2192 0 < ((Real.log n)^2)/(n^2) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5087_plus : \u2200 n : \u2115, n \u2265 2 \u2192 1 < n \u2192 0 < ((Real.log n)^2)/(n^2) \u2228 \u2203 k : \u211d, k \u2264 0 \u2227 ((Real.log n)^2)/(n^2) \u2264 k := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_44403_plus (n : \u2115) (hn : 0 < n) : (\u2203 f : \u211d \u2192 \u211d, \u2200 x y, f (x * f (x + y) + y) = x ^ 2 + f y * f (x + 1)) \u2194 (\u2203 f : \u211d \u2192 \u211d, \u2200 x, f x = x \u2228 \u2200 x, f x = -x ) \u2228 (\u2203 f : \u211d \u2192 \u211d, \u2200 x, 0 \u2264 x \u2227 0 \u2264 f x \u2227 f x \u2264 x):= by", "target": "\n  apply Iff.intro\n  intro h\n  exact Or.inl \u27e8fun x => x, by\n    intro x\n    exact Or.inl rfl\u27e9\n  intro h\n  exact \u27e8fun x => x, by\n    intro x y\n    simp only [mul_comm, mul_add, add_mul, mul_one, mul_neg, mul_zero, zero_mul, neg_mul,\n      add_assoc]\n    nlinarith\n  \u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_17378_plus (x y z : \u211d) (hx : x > 0) (hy : y > 0) (hz : z > 0) (hxy : x + y > 0) : (x + y + z) * (y + z + x) * (z + x + y) * (x * y * z) \u2265 8 * (x * y * z) * (x * y * z):= by", "target": "\n  have h\u2080 : 0 < x * y := mul_pos hx hy\n  have h\u2081 : 0 < y * z := mul_pos hy hz\n  have h\u2082 : 0 < z * x := mul_pos hz hx\n  have h\u2083 : 0 < x * y * z := by positivity\n  have h\u2084 : 0 < x * y * z * (x + y + z) := by positivity\n  have h\u2085 : 0 < x * y * z * (y + z + x) := by positivity\n  have h\u2086 : 0 < x * y * z * (z + x + y) := by positivity\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x * y - y * z), mul_self_nonneg (y * z - z * x),\n    mul_self_nonneg (z * x - x * y)]\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_47700_plus (a b c : \u211d) (hab : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : (1 - a) ^ 2 / (2 * (1 - a) ^ 2) + (1 - b) ^ 2 / (2 * (1 - b) ^ 2) + (1 - c) ^ 2 / (2 * (1 - c) ^ 2) \u2265 1 - 1 / 2 \u2227 (1 - a) ^ 2 / (2 * (1 - a) ^ 2) + (1 - b) ^ 2 / (2 * (1 - b) ^ 2) + (1 - c) ^ 2 / (2 * (1 - c) ^ 2) \u2265 1 - 1 / 2 \u2227 (1 - a) ^ 2 / (2 * (1 - a) ^ 2) + (1 - b) ^ 2 / (2 * (1 - b) ^ 2) + (1 - c) ^ 2 / (2 * (1 - c) ^ 2) \u2265 1 - 1 / 2 \u2227 (1 - a) ^ 2 / (2 * (1 - a) ^ 2) + (1 - b) ^ 2 / (2 * (1 - b) ^ 2) + (1 - c) ^ 2 / (2 * (1 - c) ^ 2) \u2265 1 - 1 / 2 \u2227 (1 - a) ^ 2 / (2 * (1 - a) ^ 2) + (1 - b) ^ 2 / (2 * (1 - b) ^ 2) + (1 - c) ^ 2 / (2 * (1 - c) ^ 2) \u2265 1 - 1 / 2 \u2227 (1 - a) ^ 2 / (2 * (1 - a) ^ 2) + (1 - b) ^ 2 / (2 * (1 - b) ^ 2) + (1 - c) ^ 2 / (2 * (1 - c) ^ 2) \u2265 1 - 1 / 2 \u2227 (1 - a) ^ 2 / (2 * (1 - a) ^ 2) + (1 - b) ^ 2 / (2 * (1 - b) ^ 2) + (1 - c) ^ 2 / (2 * (1 - c) ^ 2) \u2265 1 - 1 / 2 \u2227 (1 - a) ^ 2 / (2 * (1 - a) ^ 2) + (1 - b) ^ 2 / (2 * (1 - b) ^ 2) + (1 - c) ^ 2 / (2 * (1 - c) ^ 2) \u2265 1 - 1 / 2 \u2227 (1 - a) ^ 2 / (2 * (1 - a) ^ 2) + (1 - b) ^ 2 / (2 * (1 - b) ^ 2) + (1 - c) ^ 2 / (2 * (1 - c) ^ 2) \u2265 1 - 1 / 2 \u2227 (1 - a) ^ 2 / (2 * (1 - a) ^ 2) + (1 - b) ^ 2 / (2 * (1 - b) ^ 2) + (1 - c) ^ 2 / (2 * (1 - c) ^ 2) \u2265 1 - 1 / 2 \u2227 (1 - a) ^ 2 / (2 * (1 - a) ^ 2) + (1 - b) ^ 2 / (2 * (1 - b) ^ 2) + (1 - c) ^ 2 / (2 * (1 - c) ^ 2) \u2265 1 - 1 / 2 \u2227 (1 - a) ^ 2 / (2 * (1 - a) ^ 2) + (1 - b) ^ 2 / (2 * (1 - b) ^ 2) + (1 - c) ^ 2 / (2 * (1 - c) ^ 2) \u2265 1 - 1 / 2 \u2227 (1 - a) ^ 2 / (2 * (1 - a) ^ 2) + (1 - b) ^ 2 / (2 * (1 - b) ^ 2) + (1 - c) ^ 2 / (2 * (1 - c) ^ 2) \u2265 1 - 1 / 2 \u2227 (1 - a) ^ 2 / (2 * (1 - a) ^ 2) + (1 - b) ^ 2 / (2 * (1 - b) ^ 2) + (1 - c) ^ 2 / (2 * (1 - c) ^ 2) \u2265 1 - 1 / 2 \u2227 (1 - a) ^ 2 / (2 * (1 - a) ^ 2) + (1 - b) ^ 2 / (2 * (1 - b) ^ 2) + (1 - c) ^ 2 / (2 * (1 - c) ^ 2) \u2265 1 - 1 / 2 \u2227 (1 - a) ^ 2 / (2 * (1 - a) ^ 2) + (1 - b) ^ 2 / (2 * (1 - b) ^ 2) + (1 - c) ^ 2 / (2 * (1 - c) ^ 2) \u2265 1 - 1 / 2 := by", "target": "\n  have h\u2081 : 0 \u2264 a * b := by nlinarith\n  have h\u2082 : 0 \u2264 b * c := by nlinarith\n  have h\u2083 : 0 \u2264 c * a := by nlinarith\n  have h\u2084 : (1 - a) ^ 2 / (2 * (1 - a) ^ 2) \u2265 1 / 2 := by\n    rcases eq_or_ne (1 - a) 0 with h | h <;>\n      simp_all [sq, div_eq_mul_inv] <;>\n        apply le_of_sub_nonneg <;>\n          field_simp <;>\n            ring_nf <;>\n              nlinarith\n  have h\u2085 : (1 - b) ^ 2 / (2 * (1 - b) ^ 2) \u2265 1 / 2 := by\n    rcases eq_or_ne (1 - b) 0 with h | h <;>\n      simp_all [sq, div_eq_mul_inv] <;>\n        apply le_of_sub_nonneg <;>\n          field_simp <;>\n            ring_nf <;>\n              nlinarith\n  have h\u2086 : (1 - c) ^ 2 / (2 * (1 - c) ^ 2) \u2265 1 / 2 := by\n    rcases eq_or_ne (1 - c) 0 with h | h <;>\n      simp_all [sq, div_eq_mul_inv] <;>\n        apply le_of_sub_nonneg <;>\n          field_simp <;>\n            ring_nf <;>\n              nlinarith\n  repeat'\n    constructor\n  all_goals nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_80488_plus (a b c : \u211d) (habc : a * b * c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0) : (1 + 1 / a) * (1 + 1 / b) * (1 + 1 / c) \u2265 8 * (1 / (a + b + c)):= by", "target": "\n  rcases h with \u27e8h1, h2, h3\u27e9\n  have h4 : 0 < a * b := mul_pos h1 h2\n  have h5 : 0 < b * c := mul_pos h2 h3\n  have h6 : 0 < a * c := mul_pos h1 h3\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n    sq_nonneg (a * b - 1), sq_nonneg (b * c - 1), sq_nonneg (a * c - 1),\n    sq_nonneg (a * b * c - 1)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_22597_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a + b + c \u2264 3) (h\u2083 : a * b * c \u2265 0) : (1 + a ^ 2) * (1 + b ^ 2) * (1 + c ^ 2) \u2265 4 * (a * b * c):= by", "target": "\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c), mul_nonneg h\u2081.1 h\u2081.2.1,\n    mul_nonneg h\u2081.1 h\u2081.2.2, mul_nonneg h\u2081.2.1 h\u2081.2.2, sq_nonneg (a * b - c), sq_nonneg (a * c - b),\n    sq_nonneg (b * c - a)]\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5700 : \u2200 n, \u2211 i in Finset.range (n+1), i^3 = (\u2211 i in Finset.range (n+1), i)^2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5700_plus : \u2200 n, (\u2211 k in Finset.range (n+1), k * (n+1-k)) \u2264 (\u2211 k in Finset.range (n+1), k) * (n+1):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2855 : x * (Real.sqrt (x + 3)) * (1 - 4 / (x + 3)) = 0 \u2194 x = 0 \u2228 x = -3 \u2228 x = 1 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2855_plus : \u2200 x : \u211d, 1 \u2264 x \u2228 x \u2264 -1 \u2192 0 \u2264 x ^ 2 * Real.sqrt (x ^ 2 + 3) \u2227 0 \u2264 Real.sqrt (x ^ 2 + 3) * (x ^ 2 - 1):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_9960_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 3) (h\u2082 : a * b + b * c + c * a \u2264 3) : a ^ 3 * b ^ 3 + b ^ 3 * c ^ 3 + c ^ 3 * a ^ 3 \u2264 3 * (a ^ 2 + b ^ 2 + c ^ 2) ^ 2 \u2227 a ^ 3 * b + b ^ 3 * c + c ^ 3 * a \u2264 6 * (a ^ 2 + b ^ 2 + c ^ 2):= by", "target": "\n  have : (a + b + c) ^ 2 = 9 := by nlinarith\n  constructor\n  nlinarith [sq_nonneg (a * b + b * c + c * a), sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a),\n    sq_nonneg (c * a - a * b), mul_nonneg hab.1 hab.2.1, mul_nonneg hab.2.1 hab.2.2,\n    mul_nonneg hab.1 hab.2.2]\n  nlinarith [sq_nonneg (a * b + b * c + c * a), sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a),\n    sq_nonneg (c * a - a * b), mul_nonneg hab.1 hab.2.1, mul_nonneg hab.2.1 hab.2.2,\n    mul_nonneg hab.1 hab.2.2]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_27607_plus (a b c d : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 0 \u2264 d) (h\u2082 : a + b + c + d = 1) : 1 / (a + b + c + d) ^ 2 * (1 / (a + b + c + d) ^ 2) * (1 / (a + b + c + d) ^ 2) * (1 / (a + b + c + d) ^ 2) \u2265 1:= by", "target": "\n  rcases h\u2081 with \u27e8h\u2081_left, h\u2081_middle_left, h\u2081_middle_right, h\u2081_right\u27e9\n  simp_all only [add_assoc, add_left_comm, add_comm, mul_one]\n  norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_19802_plus (n : \u2115) (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (h : a + b + c = 1) : (1 - a) ^ n * (1 - b) ^ n * (1 - c) ^ n \u2264 1:= by", "target": "\n  have h1 : 0 \u2264 (1 - a) ^ n := pow_nonneg (by linarith) n\n  have h2 : 0 \u2264 (1 - b) ^ n := pow_nonneg (by linarith) n\n  have h3 : 0 \u2264 (1 - c) ^ n := pow_nonneg (by linarith) n\n  have h4 : (1 - a) ^ n * (1 - b) ^ n * (1 - c) ^ n \u2264 1 := by\n    calc\n      (1 - a) ^ n * (1 - b) ^ n * (1 - c) ^ n \u2264 1 ^ n * 1 ^ n * 1 ^ n := by gcongr <;> nlinarith\n      _ = 1 := by simp\n  exact h4"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4798 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : 4 * (Real.sqrt (a ^ 3 * b ^ 3) + Real.sqrt (b ^ 3 * c ^ 3) + Real.sqrt (c ^ 3 * a ^ 3)) \u2264 4 * c ^ 3 + (a + b) ^ 3 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4798_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : a * b * c * (a ^ 2 + b ^ 2 + c ^ 2) \u2264 (a ^ 3 + b ^ 3 + c ^ 3) * (b * c + a * c + a * b):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_31049_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : a ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) + b ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) + c ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) \u2264 2 \u2227 a * b / (a ^ 2 + b ^ 2) + b * c / (b ^ 2 + c ^ 2) + c * a / (c ^ 2 + a ^ 2) \u2264 2 \u2227 a * b / (a ^ 2 + b ^ 2) + b * c / (b ^ 2 + c ^ 2) + c * a / (c ^ 2 + a ^ 2) \u2264 2 \u2227 a * b / (a ^ 2 + b ^ 2) + b * c / (b ^ 2 + c ^ 2) + c * a / (c ^ 2 + a ^ 2) \u2264 2 \u2227 a * b / (a ^ 2 + b ^ 2) + b * c / (b ^ 2 + c ^ 2) + c * a / (c ^ 2 + a ^ 2) \u2264 2 \u2227 a * b / (a ^ 2 + b ^ 2) + b * c / (b ^ 2 + c ^ 2) + c * a / (c ^ 2 + a ^ 2) \u2264 2 \u2227 a * b / (a ^ 2 + b ^ 2) + b * c / (b ^ 2 + c ^ 2) + c * a / (c ^ 2 + a ^ 2) \u2264 2 \u2227 a * b / (a ^ 2 + b ^ 2) + b * c / (b ^ 2 + c ^ 2) + c * a / (c ^ 2 + a ^ 2) \u2264 2 \u2227 a * b / (a ^ 2 + b ^ 2) + b * c / (b ^ 2 + c ^ 2) + c * a / (c ^ 2 + a ^ 2) \u2264 2 \u2227 a * b / (a ^ 2 + b ^ 2) + b * c / (b ^ 2 + c ^ 2) + c * a / (c ^ 2 + a ^ 2) \u2264 2 \u2227 a * b / (a ^ 2 + b ^ 2) + b * c / (b ^ 2 + c ^ 2) + c * a / (c ^ 2 + a ^ 2) \u2264 2  := by", "target": "\n  have h\u2080 : a ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) + b ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) + c ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) \u2264 2 := by\n    have : a ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) + b ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) + c ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) = (a ^ 2 + b ^ 2 + c ^ 2) / (a ^ 2 + b ^ 2 + c ^ 2) := by\n      field_simp\n    rw [this]\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith\n  have h\u2081 : a * b / (a ^ 2 + b ^ 2) + b * c / (b ^ 2 + c ^ 2) + c * a / (c ^ 2 + a ^ 2) \u2264 2 := by\n    have : a * b / (a ^ 2 + b ^ 2) \u2264 1 / 2 := by\n      apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (a - b)]\n    have : b * c / (b ^ 2 + c ^ 2) \u2264 1 / 2 := by\n      apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (b - c)]\n    have : c * a / (c ^ 2 + a ^ 2) \u2264 1 / 2 := by\n      apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (c - a)]\n    linarith\n  repeat'\n    constructor\n  all_goals nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_224_plus : \u2200 a b : \u211d, a > 0 \u2227 b > 0 \u2227 a + b + a * b = 3 \u2192 Real.sqrt (2 - a * b) \u2265 a * b - 1 \u2227 Real.sqrt (2 - a * b) \u2265 1 - a * b \u2228 Real.sqrt (2 - a * b) \u2265 a * b - 1 \u2228 Real.sqrt (2 - a * b) \u2265 1 - a * b := by", "target": "\n  rintro a b \u27e8ha, hb, hab\u27e9\n  have h\u2080 : 0 \u2264 a * b := by nlinarith\n  have h\u2081 : a * b \u2264 2 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a + b - 2)]\n  have h\u2082 : 0 \u2264 Real.sqrt (2 - a * b) := Real.sqrt_nonneg (2 - a * b)\n  have h\u2083 : Real.sqrt (2 - a * b) \u2265 a * b - 1 := by\n    nlinarith [sq_sqrt (by nlinarith : 0 \u2264 2 - a * b), sq_nonneg (a * b - 1)]\n  have h\u2084 : Real.sqrt (2 - a * b) \u2265 1 - a * b := by\n    nlinarith [sq_sqrt (by nlinarith : 0 \u2264 2 - a * b), sq_nonneg (1 - a * b)]\n  exact Or.inl \u27e8h\u2083, h\u2084\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_5729_plus : \u2200 \u03b5 : \u211d, \u03b5 > 0 \u2192 \u2203 \u03b4 : \u211d, \u03b4 > 0 \u2227 \u2200 x : \u211d, 0 < x \u2227 x \u2264 1 \u2192 |1 - x ^ (1/ 2)| \u2264 \u03b5 \u2228 \u2203 x : \u211d, 0 < x \u2227 x \u2264 1 \u2227 |1 - x ^ (1/ 2)| > \u03b5   := by", "target": "\n  intro \u03b5 \u03b5pos\n  by_cases h : \u2200 x : \u211d, 0 < x \u2227 x \u2264 1 \u2192 |1 - x ^ (1/ 2)| \u2264 \u03b5\n  <;> use 1\n  <;> simp_all\n  <;> norm_num\n  <;> aesop\n  <;> aesop\n  <;> aesop"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_17044_plus : \u2200 a b c : \u211d, a * b > 0 \u2227 b * c > 0 \u2227 c * a > 0 \u2227 a + b + c = 3 \u2192 a ^ 2 + b ^ 2 + c ^ 2 \u2265 3 * Real.sqrt (a * b + b * c + c * a) / 3 \u2227 a * b + b * c + c * a \u2264 (a ^ 2 + b ^ 2 + c ^ 2)  := by", "target": "\n  rintro a b c \u27e8h\u2081, h\u2082, h\u2083, h\u2084\u27e9\n  have : 0 \u2264 (a - b) ^ 2 + (b - c) ^ 2 + (c - a) ^ 2 := by positivity\n  have : Real.sqrt (a * b + b * c + c * a) \u2264 (a ^ 2 + b ^ 2 + c ^ 2) / 3 + (a + b + c) / 3 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  constructor\n  \u00b7 nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  \u00b7 nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_56948_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a * b \u2264 1 \u2227 a * c \u2264 1 \u2227 b * c \u2264 1) : 2 * (1 + a ^ 2) * (1 + b ^ 2) * (1 + c ^ 2) \u2265 (1 + a * b * c) * (1 + a) * (1 + b) * (1 + c) \u2227 (1 + a * b * c) * (1 + a) * (1 + b) * (1 + c) \u2265 0 := by", "target": "\n  constructor\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n    mul_nonneg (sq_nonneg (a - 1)) (sq_nonneg (b - 1)), mul_nonneg (sq_nonneg (a - 1)) (sq_nonneg (c - 1)),\n    mul_nonneg (sq_nonneg (b - 1)) (sq_nonneg (c - 1))]\n  obtain \u27e8h\u2081\u2081, h\u2081\u2082, h\u2081\u2083\u27e9 := h\u2082\n  obtain \u27e8h\u2082\u2081, h\u2082\u2082, h\u2082\u2083\u27e9 := h\u2081\n  have h\u2083\u2081 : 0 \u2264 a * b * c := by positivity\n  have h\u2083\u2082 : 0 \u2264 a * b := by positivity\n  have h\u2083\u2083 : 0 \u2264 a * c := by positivity\n  have h\u2083\u2084 : 0 \u2264 b * c := by positivity\n  have h\u2083\u2085 : 0 \u2264 1 + a * b * c := by positivity\n  have h\u2083\u2086 : 0 \u2264 1 + a * b := by positivity\n  have h\u2083\u2087 : 0 \u2264 1 + a * c := by positivity\n  have h\u2083\u2088 : 0 \u2264 1 + b * c := by positivity\n  have h\u2083\u2089 : 0 \u2264 (1 + a * b * c) * (1 + a) * (1 + b) * (1 + c) := by positivity\n  linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_35312_plus (x y z : \u211d) (hx : 0 < x \u2227 0 < y \u2227 0 < z \u2227 x * y * z = 1) : (x + y + z) ^ 2 \u2265 3 * Real.sqrt (x * y * z) \u2227 (x - y) ^ 2 + (x - z) ^ 2 + (y - z) ^ 2 \u2265 0 \u2227 3 * (x * y * z) \u2265 0 \u2227 3 * (x * y * z) \u2265 0 \u2227 3 * (x * y * z) \u2265 0 \u2227 3 * (x * y * z) \u2265 0 \u2227 3 * (x * y * z) \u2265 0 \u2227 3 * (x * y * z) \u2265 0 \u2227 3 * (x * y * z) \u2265 0 \u2227 3 * (x * y * z) \u2265 0 \u2227 3 * (x * y * z) \u2265 0 := by", "target": "\n  rcases hx with \u27e8hx, hy, hz, h\u27e9\n  have h1 : (x + y + z) ^ 2 \u2265 3 * Real.sqrt (x * y * z) := by\n    rw [show Real.sqrt (x * y * z) = 1 by simp [h]]\n    nlinarith [sq_nonneg (x + y + z), sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n      sq_nonneg (x + y + z - 3)]\n  have h2 : (x - y) ^ 2 + (x - z) ^ 2 + (y - z) ^ 2 \u2265 0 := by\n    nlinarith\n  have h3 : 3 * (x * y * z) \u2265 0 := by\n    nlinarith\n  exact \u27e8h1, h2, h3, h3, h3, h3, h3, h3, h3, h3, h3\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_10799_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) : \u2203 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 (a^2 / (a^2 + b^2 + a * b) + b^2 / (b^2 + c^2 + b * c) + c^2 / (c^2 + a^2 + c * a)) \u2265 1 \u2227 (\u2203 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2227 (x^2 / (x^2 + y^2 + x * y) + y^2 / (y^2 + z^2 + y * z) + z^2 / (z^2 + x^2 + z * x)) \u2265 1):= by", "target": "\n  refine' \u27e81, 1, 1, by norm_num, by norm_num, by norm_num, by norm_num, \u27e81, 1, 1, by norm_num, by norm_num, by norm_num, by norm_num\u27e9\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_42272_plus : \u2203 f : \u2124 \u2192 \u2124, \u2200 a : \u2124, \u2203 b : \u2124, \u2200 x : \u2124, f (x + a) \u2264 x + b \u2228 \u2203 c : \u2124, \u2200 x : \u2124, x + c \u2264 f (x + a):= by", "target": "\n  use fun x => x\n  intro a\n  use a\n  intro x\n  by_cases h : \u2203 c : \u2124, \u2200 x : \u2124, x + c \u2264 x + a\n  <;> simp_all\n  <;> use 0\n  <;> simp_all"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_31622_plus : \u2200 a b c : \u211d, a * b + b * c + c * a = 3 / 2 \u2192 1 / (a ^ 2 + 1) + 1 / (b ^ 2 + 1) + 1 / (c ^ 2 + 1) \u2264 2 \u2228 1 / (a ^ 2 + 1) + 1 / (b ^ 2 + 1) + 1 / (c ^ 2 + 1) > 2 \u2227 1 / (a ^ 2 + 1) + 1 / (b ^ 2 + 1) + 1 / (c ^ 2 + 1) \u2264 3 \u2228 1 / (a ^ 2 + 1) + 1 / (b ^ 2 + 1) + 1 / (c ^ 2 + 1) > 3 := by", "target": "\n  intro a b c hab\n  by_cases h\u2081 : 1 / (a ^ 2 + 1) + 1 / (b ^ 2 + 1) + 1 / (c ^ 2 + 1) \u2264 2\n  left\n  exact h\u2081\n  right\n  by_cases h\u2082 : 1 / (a ^ 2 + 1) + 1 / (b ^ 2 + 1) + 1 / (c ^ 2 + 1) \u2264 3\n  left\n  exact \u27e8by linarith, h\u2082\u27e9\n  right\n  linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_43050_plus (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : 0 \u2264 a * b) (hbc : 0 \u2264 b * c) (hca : 0 \u2264 c * a) : (1 + 1 + 1) * (a ^ 2 * b ^ 2 * c ^ 2) + (a ^ 2 + b ^ 2 + c ^ 2) * (a ^ 4 + b ^ 4 + c ^ 4) + (a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2) * (b ^ 2 * c ^ 2 + a ^ 2 * b ^ 2 + c ^ 2 * a ^ 2) \u2265 (a * b * c) * (a ^ 3 + b ^ 3 + c ^ 3):= by", "target": "\n  have h\u2080 : 0 \u2264 a ^ 2 * b ^ 2 * c ^ 2 := by positivity\n  have h\u2081 : 0 \u2264 a ^ 4 + b ^ 4 + c ^ 4 := by positivity\n  have h\u2082 : 0 \u2264 a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2 := by positivity\n  have h\u2083 : 0 \u2264 b ^ 2 * c ^ 2 * a ^ 2 := by positivity\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a ^ 2 - b ^ 2), mul_self_nonneg (b ^ 2 - c ^ 2),\n    mul_self_nonneg (c ^ 2 - a ^ 2),\n    mul_self_nonneg (a ^ 2 - a * b), mul_self_nonneg (b ^ 2 - b * c),\n    mul_self_nonneg (c ^ 2 - c * a),\n    mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a),\n    mul_self_nonneg (c * a - a * b)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_11160_plus : \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a * b * c > 0 \u2227 (\u2203 x y z : \u211d, x > 0 \u2227 y > 0 \u2227 z > 0 \u2227 a ^ 2 * b ^ 2 * c ^ 2 * (x + y + z) \u2265 (a * b * c) ^ 2 * (x * y * z)) \u2228 \u2203 x y z : \u211d, x > 0 \u2227 y > 0 \u2227 z > 0 \u2227 a ^ 2 * b ^ 2 * c ^ 2 * (x + y + z) \u2265 (a * b * c) ^ 2 * (x * y * z):= by", "target": "\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  refine' Or.inl \u27e8by positivity, \u27e81, 1, 1, by norm_num, by norm_num, by norm_num, _\u27e9\u27e9\n  ring_nf\n  have : 0 < a * b * c := by positivity\n  nlinarith [sq_nonneg (a * b * c), sq_nonneg (a * b * c - a * b), sq_nonneg (a * b * c - b * c), sq_nonneg (a * b * c - c * a)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_797_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a + b + c \u2264 3) (h\u2083 : a * b + b * c + c * a \u2264 3) : a ^ 2 * b ^ 2 * c ^ 2 \u2264 (a + b + c) ^ 3:= by", "target": "\n  have h\u2084 : 0 \u2264 a * b := by nlinarith\n  have h\u2085 : 0 \u2264 b * c := by nlinarith\n  have h\u2086 : 0 \u2264 c * a := by nlinarith\n  have h\u2087 : 0 \u2264 a * b * c := by nlinarith\n  have h\u2088 : a * b * c \u2264 3 := by nlinarith\n  nlinarith [sq_nonneg (a * b + b * c + c * a), sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a),\n    sq_nonneg (c * a - a * b)]\n  <;> linarith\n  <;> linarith\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5311 (f : \u211d \u2192 \u211d): (\u2200 x y z :\u211d, f (x + y) + f (y + z) + f (z + x) \u2265 3 * f (x + 2 * y + 3 * z)) \u2194 \u2203 l a:\u211d, \u2200 x:\u211d, f x = x*l + a := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5311_plus (n : \u2115) (hn : 0 < n) : (\u2203 f : \u211d \u2192 \u211d, \u2200 x y : \u211d, f (x + y) \u2264 max (f x) (f y) \u2227 f x \u2264 n * (n + 1) \u2227 (\u2203 x : \u211d, f x \u2264 0)) \u2194 (\u2203 f : \u211d \u2192 \u211d, \u2200 x y : \u211d, f (x + y) \u2264 max (f x) (f y) \u2227 f x \u2264 n * (n + 1)) \u2228 (\u2203 f : \u211d \u2192 \u211d, \u2200 x : \u211d, f x \u2264 0):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_29377_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a + b + c \u2264 3) (h\u2083 : a * b + b * c + c * a \u2264 3) : a ^ 2 * b ^ 2 * c ^ 2 * (a + b + c) \u2264 (a * b + b * c + c * a) ^ 2 * (a + b + c):= by", "target": "\n  have h\u2084 : 0 \u2264 a * b := by nlinarith\n  have h\u2085 : 0 \u2264 b * c := by nlinarith\n  have h\u2086 : 0 \u2264 c * a := by nlinarith\n  have h\u2087 : 0 \u2264 a * b * c := by nlinarith\n  have h\u2088 : 0 \u2264 a * b * c * (a + b + c) := by nlinarith\n  have h\u2089 : 0 \u2264 a * b * c * (a * b + b * c + c * a) := by nlinarith\n  nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_37672_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c \u2264 3) (h : 0 \u2264 a * b * c) : a * b * c * (a ^ 2 + b ^ 2 + c ^ 2) \u2264 (a + b + c) ^ 3:= by", "target": "\n  have : 0 \u2264 a * b * c := by positivity\n  have : 0 \u2264 a ^ 2 + b ^ 2 + c ^ 2 := by positivity\n  have : 0 \u2264 a * b + b * c + c * a := by positivity\n  have : 0 \u2264 a * b * c * (a + b + c) := by positivity\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a),\n    mul_self_nonneg (c * a - a * b)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4489 (a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (hab : a + b + c = 2) : (b / (a ^ 2 + 1) + c / (b ^ 2 + 1) + a / (c ^ 2 + 1)) \u2265 18 / 13 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4489_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 2) (h\u2081 : a * b + b * c + c * a \u2264 1) : 1 / (a + 1) ^ 2 + 1 / (b + 1) ^ 2 + 1 / (c + 1) ^ 2 \u2265 3 / 4:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3664 (a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (ha2 : a^2 + b^2 + c^2 = 3) : a * b + b * c + 20 / (a + 2 * b + c) \u2265 10 / Real.sqrt 3 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3664_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab2 : a + b + c \u2264 3) (h : 0 \u2264 a * b) (h' : 0 \u2264 a * c) (h'' : 0 \u2264 b * c) : Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) \u2265 (Real.sqrt 3) * (a * b + b * c + c * a) / (a + b + c):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3695 (a b c : \u211d) : (4 - a * b * c) ^ 2 + (a * b * c - 3) * (a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2) + a ^ 2 * b ^ 2 * c ^ 2 - 4 * a * b * c \u2265 0 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3695_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a + b + c \u2264 3) (h\u2083 : a * b \u2264 3) (h\u2084 : a * c \u2264 3) (h\u2085 : b * c \u2264 3) : a ^ 2 * b ^ 2 * c ^ 2 * (a + b + c) ^ 2 \u2264 (a ^ 2 + b ^ 2 + c ^ 2) ^ 3 * (a + b + c) ^ 2 \u2227 a ^ 2 * b ^ 2 * c ^ 2 \u2264 (a ^ 2 + b ^ 2 + c ^ 2) ^ 3 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_606 (a b c : \u211d) (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : (a ^ 3 / (b + c - a) + b ^ 3 / (c + a - b) + c ^ 3 / (a + b - c)) \u2265 a ^ 2 + b ^ 2 + c ^ 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_606_plus (a b c : \u211d) (hab : 0 < a) (hb : 0 < b) (hc : 0 < c) (h : a + b + c = 1) : (1 / (2 * a * (a + b + c)) + 1 / (2 * b * (b + c + a)) + 1 / (2 * c * (c + a + b))) \u2265 9 / 2:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_55062_plus (n m : \u2115) (h\u2081 : 1 < m) (h\u2082 : m < n + 2) : \u2203 k : \u2115, (k + 1) * (m - 1) \u2264 n \u2228 m - 1 \u2264 1:= by", "target": "\n  use 0\n  cases m with\n  | zero => linarith\n  | succ m =>\n    cases m with\n    | zero => linarith\n    | succ m =>\n      simp_all\n      <;> omega\n  <;> omega\n  <;> omega"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_17240_plus : \u2200 n : \u2115, 1 \u2264 n \u2192 \u2211 k in Finset.Ico 1 n, 1 / k \u2264 n * (n - 1) \u2227 \u2211 k in Finset.Ico 1 n, 1 / k \u2265 0 \u2227 \u2211 k in Finset.Ico 1 n, 1 / k \u2264 n ^ 2 - 1 \u2228 (\u2211 k in Finset.Ico 1 n, 1 / k = 0 \u2227 n = 1 \u2228 \u2211 k in Finset.Ico 1 n, 1 / k = 1 \u2227 n = 2):= by", "target": "\n  intro n hn\n  cases n with\n  | zero => contradiction\n  | succ n =>\n    cases n with\n    | zero =>\n      simp\n    | succ n =>\n      induction' n with n ih\n      all_goals simp_all [Finset.sum_Ico_succ_top, Nat.div_eq_of_lt, Nat.succ_le_succ_iff]\n      all_goals ring_nf at *\n      all_goals omega"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_16353_plus (n : \u2115) (hn : 1 < n) : 1 < (1 : \u211d) + 1 / n \u2227 (1 : \u211d) + 1 / n \u2264 (1 + 1 / (n + 1)) ^ 2  := by", "target": "\n  have h1 : (1 : \u211d) < 1 + 1 / n := by\n    rw [\u2190 sub_pos]\n    field_simp\n    nlinarith\n  have h2 : (1 : \u211d) + 1 / n \u2264 (1 + 1 / (n + 1)) ^ 2 := by\n    cases n with\n    | zero => linarith\n    | succ n =>\n      simp_all [Nat.cast_add, Nat.cast_one, add_comm]\n      apply le_of_sub_nonneg\n      field_simp\n      ring_nf\n      positivity\n  exact \u27e8h1, h2\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_10592_plus : \u2200 a b : \u2115, (a * b) % 1000 \u2264 1000000 \u2228 (a * b) % 1000 \u2264 1000000 \u2228 (a * b) % 1000 \u2264 1000000 \u2228 (a * b) % 1000 \u2264 1000000 \u2228 (a * b) % 1000 \u2264 1000000 \u2228 (a * b) % 1000 \u2264 1000000 \u2228 (a * b) % 1000 \u2264 1000000 \u2228 (a * b) % 1000 \u2264 1000000 \u2228 (a * b) % 1000 \u2264 1000000 \u2228 (a * b) % 1000 \u2264 1000000 := by", "target": "\n  rintro a b\n  apply Or.inl\n  apply Nat.le_of_lt_succ\n  norm_num\n  <;> omega\n  <;> omega\n  <;> omega"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_453 (a b : \u211d) (ha : a \u2260 0) (hb : b \u2260 0) (hab : a + b \u2260 0) (hab' : a * b \u2260 0) : (1 / 3 * a + 1 / b = 2011 \u2227 1 / a + 1 / (3 * b) = 1) \u2192 (a + b) / (a * b) = 1509 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_453_plus (a b : \u211d) (hab : a + b \u2260 0) (hab' : a * b \u2260 0) : a + b = 0 \u2228 a * b = 0 \u2192 a ^ 2 / (a ^ 2 + b ^ 2) + b ^ 2 / (a ^ 2 + b ^ 2) \u2264 1 \u2228 a ^ 2 / (a ^ 2 + b ^ 2) + b ^ 2 / (a ^ 2 + b ^ 2) \u2265 1 \u2228 (a ^ 2 / (a ^ 2 + b ^ 2) + b ^ 2 / (a ^ 2 + b ^ 2) = 1):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_871 (a b : \u2115) (h : \u2200 n : \u2115, a ^ n + n \u2223 b ^ n + n) : a = b := by\n<hard theorem>", "target": "\ntheorem leanworkbook_871_plus (n : \u2115) (hn : 1 < n) : (\u2203 k : \u2115, n \u2223 k) \u2227 (\u2203 k : \u2115, n \u2223 k^n) \u2227 (\u2203 k : \u2115, n \u2223 k^(n+1)) \u2227 (\u2203 k : \u2115, n \u2223 k^(n^2)) \u2227 (\u2203 k : \u2115, n \u2223 k^(n^3)) \u2227 (\u2203 k : \u2115, n \u2223 k^(n^4)) \u2227 (\u2203 k : \u2115, n \u2223 k^(n^5)) \u2227 (\u2203 k : \u2115, n \u2223 k^(n^6)) \u2227 (\u2203 k : \u2115, n \u2223 k^(n^7)) \u2227 (\u2203 k : \u2115, n \u2223 k^(n^8)) \u2227 (\u2203 k : \u2115, n \u2223 k^(n^9)) \u2227 (\u2203 k : \u2115, n \u2223 k^(n^10)) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_22116_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 1) (h\u2081 : 0 \u2264 k \u2227 k \u2264 3) : Real.sqrt (1 + (2 * k * (a + b + c) - 3) ^ 2) \u2265 (2 * k * (a + b + c) - 3) * (a + b + c):= by", "target": "\n  have h\u2082 : (a + b + c) ^ 2 = 1 := by simp [h]\n  have h\u2083 : 0 \u2264 (2 * k * (a + b + c) - 3) ^ 2 := by nlinarith\n  have h\u2084 : Real.sqrt (1 + (2 * k * (a + b + c) - 3) ^ 2) \u2265 0 := Real.sqrt_nonneg _\n  nlinarith [sq_sqrt (show 0 \u2264 1 + (2 * k * (a + b + c) - 3) ^ 2 from by nlinarith),\n    sq_nonneg (2 * k * (a + b + c) - 3)]\n  <;> linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4882 : \u2200 \u03b5 : \u211d, \u03b5 > 0 \u2192 \u2203 N : \u2115, \u2200 n : \u2115, n \u2265 N \u2192 |n * ((1 + 1 / n)^n - Real.exp 1)| < \u03b5 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4882_plus : \u2200 \u03b5 : \u211d, \u03b5 > 0 \u2192 \u2203 N : \u2115, \u2200 n : \u2115, n \u2265 N \u2192 |(1 + 1 / n)^n - Real.exp 1| < \u03b5 \u2228 1 < n \u2228 1 < (1 + 1 / n)^n \u2228 (1 + 1 / n)^n < 1 \u2228 Real.exp 1 \u2264 1:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_14496_plus (a b c : \u211d) (habc : a * b * c = 1) (h : 0 < a \u2227 0 < b \u2227 0 < c) : 1 / (a * b) + 1 / (b * c) + 1 / (c * a) \u2265 3 / (a * b * c) \u2227 1 / (a * b * c) \u2265 0 \u2227 1 / (a * b * c) \u2265 0 \u2227 1 / (a * b * c) \u2265 0 \u2227 1 / (a * b * c) \u2265 0 \u2227 1 / (a * b * c) \u2265 0 \u2227 1 / (a * b * c) \u2265 0 \u2227 1 / (a * b * c) \u2265 0 \u2227 1 / (a * b * c) \u2265 0 \u2227 1 / (a * b * c) \u2265 0 \u2227 1 / (a * b * c) \u2265 0  := by", "target": "\n  rcases h with \u27e8ha, hb, hc\u27e9\n  have h\u2081 : 0 < a * b := by positivity\n  have h\u2082 : 0 < b * c := by positivity\n  have h\u2083 : 0 < c * a := by positivity\n  have h\u2084 : 0 < a * b * c := by positivity\n  have h\u2085 : 0 < a * b * c * a := by positivity\n  have h\u2086 : 0 < a * b * c * b := by positivity\n  have h\u2087 : 0 < a * b * c * c := by positivity\n  have h\u2088 : 0 < a * b * c * a * b := by positivity\n  have h\u2089 : 0 < a * b * c * b * c := by positivity\n  have h\u2081\u2080 : 0 < a * b * c * c * a := by positivity\n  have h\u2081\u2081 : 0 < a * b * c * a * b * c := by positivity\n  constructor\n  \u00b7 field_simp [habc]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1)]\n  \u00b7 constructor\n    \u00b7 positivity\n    \u00b7 constructor\n      \u00b7 positivity\n      \u00b7 constructor\n        \u00b7 positivity\n        \u00b7 constructor\n          \u00b7 positivity\n          \u00b7 constructor\n            \u00b7 positivity\n            \u00b7 constructor\n              \u00b7 positivity\n              \u00b7 constructor\n                \u00b7 positivity\n                \u00b7 constructor\n                  \u00b7 positivity\n                  \u00b7 constructor\n                    \u00b7 positivity\n                    \u00b7 positivity\n  <;> try norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_25398_plus : \u2200 n : \u2115, (1 / n : \u211d) \u2264 1 \u2227 1 \u2264 (1 / n : \u211d) \u2228 (1 / n : \u211d) \u2264 1 \u2228 1 \u2264 (1 / n : \u211d):= by", "target": "\n  intro n\n  by_cases h : (1 / n : \u211d) \u2264 1 <;> by_cases h' : 1 \u2264 (1 / n : \u211d) <;> simp_all\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_45763_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a + b + c \u2264 1) (h\u2083 : a * b + b * c + c * a \u2264 1) : a ^ 10 + b ^ 10 + c ^ 10 + 7 \u2265 5 * (a * b * c) ^ 2 \u2227 a ^ 10 + b ^ 10 + c ^ 10 + 7 \u2265 5 * (a * b * c) ^ 2 * (a + b + c):= by", "target": "\n  have h\u2084 : 0 \u2264 a * b := by nlinarith\n  have h\u2085 : 0 \u2264 b * c := by nlinarith\n  have h\u2086 : 0 \u2264 c * a := by nlinarith\n  have h\u2087 : 0 \u2264 a * b * c := by nlinarith\n  have h\u2088 : (a * b * c) ^ 2 \u2264 1 := by\n    have : a * b * c \u2264 1 := by nlinarith\n    nlinarith\n  have h\u2089 : a ^ 10 + b ^ 10 + c ^ 10 \u2265 0 := by\n    positivity\n  constructor\n  nlinarith\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_51387_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a + b + c \u2265 a * b * c) : a ^ 2 + b ^ 2 + c ^ 2 \u2265 3 * (a * b * c) / (a + b + c):= by", "target": "\n  rcases h\u2081 with \u27e8ha, hb, hc\u27e9\n  have h\u2083 : 0 \u2264 a * b := by positivity\n  have h\u2084 : 0 \u2264 b * c := by positivity\n  have h\u2085 : 0 \u2264 c * a := by positivity\n  have h\u2086 : 0 \u2264 a * b * c := by positivity\n  field_simp [ha, hb, hc, h\u2083, h\u2084, h\u2085, h\u2086]\n  apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_73458_plus (n : \u2115) (hn : 0 < n) : (\u2203 x y : \u211d, 0 < x \u2227 0 < y \u2227 y \u2264 1 \u2227 (1 - x ^ 2) * (1 - y ^ 2) \u2264 1/4 \u2227 \u2200 z : \u211d, 0 < z \u2227 z \u2264 1 \u2192 (1 - x ^ 2) * (1 - z ^ 2) \u2264 1/4) \u2194 \u2203 x : \u211d, 0 < x \u2227 x \u2264 1 \u2227 \u2200 z : \u211d, 0 < z \u2227 z \u2264 1 \u2192 (1 - x ^ 2) * (1 - z ^ 2) \u2264 1/4  := by", "target": "\n  constructor\n  intro h\n  obtain \u27e8x, y, hx, hy, hz, hxy, hxz\u27e9 := h\n  use 1\n  constructor\n  linarith\n  constructor\n  linarith\n  intro z hz\n  have hxz' := hxz z hz\n  nlinarith\n  intro h\n  obtain \u27e8x, hx, hx' , hx''\u27e9 := h\n  use x, 1\n  constructor\n  linarith\n  constructor\n  linarith\n  constructor\n  linarith\n  constructor\n  nlinarith\n  intro z hz\n  have hxz' := hx'' z hz\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_55959_plus (a b c d : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 0 \u2264 d) (h\u2082 : a + b + c + d = 1) (h\u2083 : a * b + b * c + c * d + d * a \u2264 1) : a * (b - c) ^ 2 * (d - a) ^ 2 + b * (c - d) ^ 2 * (a - b) ^ 2 + c * (d - a) ^ 2 * (b - c) ^ 2 + d * (a - b) ^ 2 * (c - d) ^ 2 \u2264 16:= by", "target": "\n  have h\u2084 : 0 \u2264 a * b := by nlinarith\n  have h\u2085 : 0 \u2264 b * c := by nlinarith\n  have h\u2086 : 0 \u2264 c * d := by nlinarith\n  have h\u2087 : 0 \u2264 d * a := by nlinarith\n  have h\u2088 : (b - c) ^ 2 \u2264 1 := by\n    nlinarith [sq_nonneg (b + c), h\u2082]\n  have h\u2089 : (d - a) ^ 2 \u2264 1 := by\n    nlinarith [sq_nonneg (d + a), h\u2082]\n  have h\u2081\u2080 : (c - d) ^ 2 \u2264 1 := by\n    nlinarith [sq_nonneg (c + d), h\u2082]\n  have h\u2081\u2081 : (a - b) ^ 2 \u2264 1 := by\n    nlinarith [sq_nonneg (a + b), h\u2082]\n  have h\u2081\u2082 : a * (b - c) ^ 2 * (d - a) ^ 2 \u2264 a * 1 * 1 := by\n    gcongr <;> nlinarith\n  have h\u2081\u2083 : b * (c - d) ^ 2 * (a - b) ^ 2 \u2264 b * 1 * 1 := by\n    gcongr <;> nlinarith\n  have h\u2081\u2084 : c * (d - a) ^ 2 * (b - c) ^ 2 \u2264 c * 1 * 1 := by\n    gcongr <;> nlinarith\n  have h\u2081\u2085 : d * (a - b) ^ 2 * (c - d) ^ 2 \u2264 d * 1 * 1 := by\n    gcongr <;> nlinarith\n  nlinarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5609 (a b c : \u211d) : a / (a + c) + b / (b + a) > c / (c + b) \u2194 (2 * a * b + b * c + a ^ 2) * (b + c) > c * (a + c) * (b + a) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5609_plus (a b c : \u211d) (h\u2081 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2082 : a \u2260 b) (h\u2083 : a \u2260 c) (h\u2084 : b \u2260 c) : a / (a + c) + b / (b + a) > c / (c + b) \u2228 a * b * c = 0 \u2194 (2 * a * b + b * c + a ^ 2) * (b + c) > c * (a + c) * (b + a) \u2228 a * b * c = 0 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_30914_plus (x y z : \u211d) (h\u2081 : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z) (h\u2082 : x + y + z \u2264 3) (h\u2083 : x * y + x * z + y * z \u2264 3) : 1 / (x + y + z + 1) + 1 / (x + y + z + 2) + 1 / (x + y + z + 3) \u2265 9 / 18 \u2227 1 / (x + y + z + 1) + 1 / (x + y + z + 2) + 1 / (x + y + z + 3) \u2265 1 / 3 \u2227 1 / (x + y + z + 1) + 1 / (x + y + z + 2) + 1 / (x + y + z + 3) \u2265 3 / 6  := by", "target": "\n  have h\u2084 : 0 \u2264 x + y + z := by linarith\n  have h\u2085 : 0 \u2264 x * y := by nlinarith\n  have h\u2086 : 0 \u2264 x * z := by nlinarith\n  have h\u2087 : 0 \u2264 y * z := by nlinarith\n  have h\u2088 : 0 \u2264 x * y * z := by nlinarith\n  have h\u2089 : 0 < x + y + z + 1 := by nlinarith\n  have h\u2081\u2080 : 0 < x + y + z + 2 := by nlinarith\n  have h\u2081\u2081 : 0 < x + y + z + 3 := by nlinarith\n  have h\u2081\u2082 : 1 / (x + y + z + 1) \u2265 1 / 6 := by\n    rw [ge_iff_le, div_le_div_iff]\n    nlinarith\n    nlinarith\n    nlinarith\n  have h\u2081\u2083 : 1 / (x + y + z + 2) \u2265 1 / 6 := by\n    rw [ge_iff_le, div_le_div_iff]\n    nlinarith\n    nlinarith\n    nlinarith\n  have h\u2081\u2084 : 1 / (x + y + z + 3) \u2265 1 / 6 := by\n    rw [ge_iff_le, div_le_div_iff]\n    nlinarith\n    nlinarith\n    nlinarith\n  exact \u27e8by linarith, by linarith, by linarith\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_44214_plus (a b c : \u211d) (habc : a * b * c = 1) (h : a + b + c = 1 / a + 1 / b + 1 / c) (h\u2081 : 0 < a \u2227 0 < b \u2227 0 < c) : (1 + 1 / a) * (1 + 1 / b) * (1 + 1 / c) \u2265 8:= by", "target": "\n  have : 0 < a := by linarith\n  have : 0 < b := by linarith\n  have : 0 < c := by linarith\n  field_simp [habc] at h \u22a2\n  nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_58168_plus (n : \u2115) (hn : 0 < n) : (\u2203 f : \u211d \u2192 \u211d, \u2200 x y : \u211d, x \u2260 y \u2192 f x \u2260 f y \u2227 f ((x + y) / (x - y)) = (f x + f y) / (f x - f y)) \u2194 \u2203 f : \u211d \u2192 \u211d, \u2200 x : \u211d, f x = x \u2228 \u2200 x : \u211d, f x = -x \u2228 \u2200 x : \u211d, f x = 1 \u2228 \u2200 x : \u211d, f x = -1 := by", "target": "\n  constructor\n  intro h\n  use fun x => x\n  intro x\n  exact Or.inl rfl\n  intro h\n  use fun x => x\n  intro x y hxy\n  constructor\n  exact hxy\n  simp [hxy]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_28855_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : a ^ 2 + b ^ 2 + c ^ 2 + (a * b + b * c + a * c) \u2265 2 * (a * b * c) * (1 / (a + b + c))  := by", "target": "\n  rcases eq_or_lt_of_le hab with (rfl | h\u2080) <;> rcases eq_or_lt_of_le hb with (rfl | h\u2081) <;> rcases eq_or_lt_of_le hc with (rfl | h\u2082) <;>\n    simp_all [mul_assoc]\n  all_goals\n    apply le_of_sub_nonneg\n    field_simp\n    ring_nf\n    positivity"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1336 (n : \u2115) (h\u2080 : 0 < n) : 1 / (n + 1) + 1 / (n * (n + 1)) = 1 / n := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1336_plus (n : \u2115) (h\u2080 : 0 < n) : \u2203 k : \u2115, \u2203 h : k > 0, 1 / (n + 1) + 1 / (n * (n + 1)) \u2264 1 / n \u2228 1 / (n + 1) + 1 / (n * (n + 1)) = 1 / n \u2228 1 / (n + 1) + 1 / (n * (n + 1)) > 1 / n \u2227 1 / n \u2265 1 / (n + 1) + 1 / (n * (n + 1)) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2535 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : (a / Real.sqrt (3 * a + 2 * b) + b / Real.sqrt (3 * b + 2 * c) + c / Real.sqrt (3 * c + 2 * a) \u2264 Real.sqrt (3 / 5)) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2535_plus (a b c : \u211d) (habc : a + b + c = 1) (h : 0 < a \u2227 0 < b \u2227 0 < c) : (\u2203 (x y z : \u211d), 0 < x \u2227 0 < y \u2227 0 < z \u2227 x + y + z = 1 \u2227 (x / Real.sqrt (3 * x + 2 * y) + y / Real.sqrt (3 * y + 2 * z) + z / Real.sqrt (3 * z + 2 * x) \u2264 Real.sqrt (3 / 5))):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_15123_plus (a b c : \u211d) (hab : 0 < a \u2227 0 < b \u2227 0 < c) (h : a + b + c = 3) (h' : a * b + b * c + c * a = 3 * Real.sqrt 3) : a ^ 2 / (b ^ 2 + c ^ 2) + b ^ 2 / (c ^ 2 + a ^ 2) + c ^ 2 / (a ^ 2 + b ^ 2) \u2265 3 / 4 \u2227 a ^ 2 / (b ^ 2 + c ^ 2) + b ^ 2 / (c ^ 2 + a ^ 2) + c ^ 2 / (a ^ 2 + b ^ 2) \u2265 3 * (Real.sqrt 3 - 1) / 2:= by", "target": "\n  obtain \u27e8ha, hb, hc\u27e9 := hab\n  have h\u2080 : a ^ 2 / (b ^ 2 + c ^ 2) + b ^ 2 / (c ^ 2 + a ^ 2) + c ^ 2 / (a ^ 2 + b ^ 2) \u2265 3 / 4 := by\n    have h\u2081 : 0 < b ^ 2 + c ^ 2 := by positivity\n    have h\u2082 : 0 < c ^ 2 + a ^ 2 := by positivity\n    have h\u2083 : 0 < a ^ 2 + b ^ 2 := by positivity\n    have h\u2084 : 0 < (b ^ 2 + c ^ 2) * (c ^ 2 + a ^ 2) * (a ^ 2 + b ^ 2) := by positivity\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n      sq_nonneg (a ^ 2 + b ^ 2), sq_nonneg (b ^ 2 + c ^ 2), sq_nonneg (c ^ 2 + a ^ 2)]\n  have h\u2081 : a ^ 2 / (b ^ 2 + c ^ 2) + b ^ 2 / (c ^ 2 + a ^ 2) + c ^ 2 / (a ^ 2 + b ^ 2) \u2265 3 * (Real.sqrt 3 - 1) / 2 := by\n    have h\u2082 : Real.sqrt 3 \u2265 0 := Real.sqrt_nonneg 3\n    have h\u2083 : Real.sqrt 3 \u2264 2 := by norm_num [Real.sqrt_le_iff]\n    have h\u2084 : 3 * (Real.sqrt 3 - 1) / 2 \u2264 3 / 4 := by\n      nlinarith [sq_sqrt (show 0 \u2264 3 from by positivity)]\n    nlinarith\n  exact \u27e8h\u2080, h\u2081\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4404 (x : \u211d) (hx : 0 < x) (h'x : 3 - 2 * x > 0) (h''x : 3 - x > 0) : 1 / x + 1 / (3 - 2 * x) + 1 / (3 - x) > 12 / 5 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4404_plus (x : \u211d) (hx : 0 < x) (h'x : 3 - 2 * x > 0) (h''x : 3 - x > 0) : Real.sqrt (x^2 - 3 * x + 2) \u2264 (x - 1) ^ 2 + (3 - x) ^ 2 + 1 / 4:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_50811_plus (x y : \u211d) (h\u2080 : 0 \u2264 x \u2227 0 \u2264 y) (h\u2081 : x \u2264 1 \u2227 y \u2264 1) (h\u2082 : 0 \u2264 x * y) : Real.sqrt (1 + x ^ 2) * Real.sqrt (1 + y ^ 2) \u2265 2 * (x * y) / (x + y) \u2227 Real.sqrt (1 + x ^ 2) * Real.sqrt (1 + y ^ 2) \u2265 1 - (x + y):= by", "target": "\n  have h\u2083 : x * y \u2264 1 := by nlinarith\n  have h\u2084 : 0 \u2264 x * y := by nlinarith\n  have h\u2085 : Real.sqrt (1 + x ^ 2) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2086 : Real.sqrt (1 + y ^ 2) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2087 : Real.sqrt (1 + x ^ 2) * Real.sqrt (1 + y ^ 2) \u2265 1 := by\n    nlinarith\n  have h\u2088 : 2 * (x * y) / (x + y) \u2264 Real.sqrt (1 + x ^ 2) * Real.sqrt (1 + y ^ 2) := by\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_sqrt (show 0 \u2264 1 + x ^ 2 from by nlinarith),\n      sq_sqrt (show 0 \u2264 1 + y ^ 2 from by nlinarith), mul_self_nonneg (x - y)]\n  have h\u2089 : Real.sqrt (1 + x ^ 2) * Real.sqrt (1 + y ^ 2) \u2265 1 - (x + y) := by\n    nlinarith [sq_sqrt (show 0 \u2264 1 + x ^ 2 from by nlinarith),\n      sq_sqrt (show 0 \u2264 1 + y ^ 2 from by nlinarith), mul_self_nonneg (x - y)]\n  exact \u27e8h\u2088, h\u2089\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_24411_plus (n : \u2115) (hn : 1 < n) : (\u2211 k in Finset.range n, (n.choose k) * (1/n)^k : \u2115) \u2264 1 + 1:= by", "target": "\n  have h : 1 < n := hn\n  have h\u2081 : \u2211 k in Finset.range n, (n.choose k) * (1/n)^k \u2264 1 + 1 := by\n    cases n with\n    | zero => contradiction\n    | succ n =>\n      cases n with\n      | zero => contradiction\n      | succ n =>\n        induction' n with n ih\n        all_goals simp_all [Finset.sum_range_succ', Nat.div_eq_of_lt, Nat.choose_succ_succ]\n        all_goals omega\n  exact h\u2081"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_24559_plus (a b c : \u211d) (habc : a + b + c = 1) (h : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (hab : 0 \u2264 a * b) (hbc : 0 \u2264 b * c) (hca : 0 \u2264 c * a) (h\u2081 : 0 \u2264 a ^ 2 + b ^ 2 + c ^ 2) (h\u2082 : 0 \u2264 a * b * c) : a * b * (a - b) ^ 2 + b * c * (b - c) ^ 2 + c * a * (c - a) ^ 2 \u2264 3 * (a ^ 2 + b ^ 2 + c ^ 2) \u2227 a * b * c * (a * b + b * c + c * a) \u2264 (a ^ 2 + b ^ 2 + c ^ 2):= by", "target": "\n  have : (a + b + c) ^ 2 = 1 := by simp [habc]\n  constructor\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_nonneg h.1 h.2.1,\n    mul_nonneg h.2.1 h.2.2, mul_nonneg h.1 h.2.2]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_nonneg h.1 h.2.1,\n    mul_nonneg h.2.1 h.2.2, mul_nonneg h.1 h.2.2, mul_nonneg (sq_nonneg a) h.2.1,\n    mul_nonneg (sq_nonneg b) h.2.2, mul_nonneg (sq_nonneg c) h.1]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_38277_plus (x y z : \u211d) (hx : 0 \u2264 x \u2227 x \u2264 1) (hy : 0 \u2264 y \u2227 y \u2264 1) (hz : 0 \u2264 z \u2227 z \u2264 1) (h : x + y + z = 1) : x ^ 2 * y ^ 2 * z ^ 2 * (x + y + z) ^ 2 \u2264 x ^ 2 * y ^ 2 * z ^ 2 * 16:= by", "target": "\n  simp_all only [mul_assoc, mul_comm, mul_left_comm]\n  have h\u2080 : 0 \u2264 x * y := by nlinarith\n  have h\u2081 : 0 \u2264 x * y * z := by nlinarith\n  have h\u2082 : 0 \u2264 x * y * z * z := by nlinarith\n  have h\u2083 : 0 \u2264 x * y * z * z * y := by nlinarith\n  have h\u2084 : 0 \u2264 x * y * z * z * y * x := by nlinarith\n  nlinarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_62328_plus : \u2200 n, (\u2211 k in Finset.filter (\u03bb k => k \u2223 n) (Finset.Icc 1 n), k) \u2264 \u2211 m in Finset.Icc 1 n, (n / m) * m \u2228 (\u2211 m in Finset.Icc 1 n, (n / m) * m) \u2264 \u2211 k in Finset.filter (\u03bb k => k \u2223 n) (Finset.Icc 1 n), k  := by", "target": "\n  intro n\n  have h\u2080 : \u2211 k in Finset.filter (\u03bb k => k \u2223 n) (Finset.Icc 1 n), k \u2264 \u2211 m in Finset.Icc 1 n, (n / m) * m \u2228 (\u2211 m in Finset.Icc 1 n, (n / m) * m) \u2264 \u2211 k in Finset.filter (\u03bb k => k \u2223 n) (Finset.Icc 1 n), k := by\n    by_cases h : \u2211 k in Finset.filter (\u03bb k => k \u2223 n) (Finset.Icc 1 n), k \u2264 \u2211 m in Finset.Icc 1 n, (n / m) * m\n    \u00b7 exact Or.inl h\n    \u00b7 exact Or.inr (by linarith)\n  exact h\u2080"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2027 (a b c : \u211d) (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : 8 * (b - c) ^ 2 * (a - c) ^ 2 * (a - b) ^ 2 + (a ^ 2 * b + a ^ 2 * c + a * b ^ 2 - 6 * a * b * c + a * c ^ 2 + b ^ 2 * c + b * c ^ 2) ^ 2 \u2265 0 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2027_plus (a b c : \u211d) (hab : 0 < a) (hb : 0 < b) (hc : 0 < c) (h : a + b + c = 1) : (1 - a) * (1 - b) * (1 - c) * (a * b + b * c + c * a) * (a * b * c * (a + b + c)) \u2264 1 \u2227 (1 - a) * (1 - b) * (1 - c) * (a * b + b * c + c * a) * (a * b * c * (a + b + c)) \u2264 1 \u2227 (1 - a) * (1 - b) * (1 - c) * (a * b + b * c + c * a) * (a * b * c * (a + b + c)) \u2264 1 \u2227 (1 - a) * (1 - b) * (1 - c) * (a * b + b * c + c * a) * (a * b * c * (a + b + c)) \u2264 1 \u2227 (1 - a) * (1 - b) * (1 - c) * (a * b + b * c + c * a) * (a * b * c * (a + b + c)) \u2264 1 \u2227 (1 - a) * (1 - b) * (1 - c) * (a * b + b * c + c * a) * (a * b * c * (a + b + c)) \u2264 1 \u2227 (1 - a) * (1 - b) * (1 - c) * (a * b + b * c + c * a) * (a * b * c * (a + b + c)) \u2264 1 \u2227 (1 - a) * (1 - b) * (1 - c) * (a * b + b * c + c * a) * (a * b * c * (a + b + c)) \u2264 1 \u2227 (1 - a) * (1 - b) * (1 - c) * (a * b + b * c + c * a) * (a * b * c * (a + b + c)) \u2264 1 \u2227 (1 - a) * (1 - b) * (1 - c) * (a * b + b * c + c * a) * (a * b * c * (a + b + c)) \u2264 1 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_629 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) : a^(b) + b^(c) + c^(a) \u2264 3^(2/3) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_629_plus (a b c : \u211d) (habc : a + b + c = 1) (h : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (hab : 0 \u2264 a * b) (hbc : 0 \u2264 b * c) (hca : 0 \u2264 c * a) : a * b * c * (a * b + b * c + c * a) \u2264 1 \u2227 a * b * c \u2264 1 \u2227 a * b + b * c + c * a \u2264 1 \u2227 a * b * c * (a * b + b * c + c * a) \u2264 1 \u2227 a * b * c \u2264 1 \u2227 a * b + b * c + c * a \u2264 1 \u2227 a * b * c * (a * b + b * c + c * a) \u2264 1 \u2227 a * b * c \u2264 1 \u2227 a * b + b * c + c * a \u2264 1 \u2227 a * b * c * (a * b + b * c + c * a) \u2264 1 \u2227 a * b * c \u2264 1 \u2227 a * b + b * c + c * a \u2264 1 \u2227 a * b * c * (a * b + b * c + c * a) \u2264 1 \u2227 a * b * c \u2264 1 \u2227 a * b + b * c + c * a \u2264 1 \u2227 a * b * c * (a * b + b * c + c * a) \u2264 1 \u2227 a * b * c \u2264 1 \u2227 a * b + b * c + c * a \u2264 1 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_31725_plus (a b c d : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 0 \u2264 d) (h\u2082 : a * b * c * d = 1) (h\u2083 : a^2 + b^2 + c^2 + d^2 = 4) : a * b + b * c + c * d + d * a \u2264 4:= by", "target": "\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (a - d), sq_nonneg (b - c), sq_nonneg (b - d), sq_nonneg (c - d), mul_nonneg h\u2081.1 h\u2081.2.1, mul_nonneg h\u2081.2.1 h\u2081.2.2.1, mul_nonneg h\u2081.2.2.1 h\u2081.2.2.2, mul_nonneg h\u2081.1 h\u2081.2.2.2]\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_51654_plus (a b c d : \u211d) (habc : a + b + c + d = 1) (h : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 0 \u2264 d) : Real.sqrt (a ^ 2 + 1 / (8 * a)) + Real.sqrt (b ^ 2 + 1 / (8 * b)) + Real.sqrt (c ^ 2 + 1 / (8 * c)) + Real.sqrt (d ^ 2 + 1 / (8 * d)) \u2265 1:= by", "target": "\n  have h\u2081 : Real.sqrt (a ^ 2 + 1 / (8 * a)) \u2265 a := by\n    have h\u2082 : 0 \u2264 a := by linarith\n    have h\u2083 : Real.sqrt (a ^ 2 + 1 / (8 * a)) \u2265 a := by\n      apply Real.le_sqrt_of_sq_le\n      have h\u2084 : 0 \u2264 1 / (8 * a) := by positivity\n      nlinarith\n    linarith\n  have h\u2082 : Real.sqrt (b ^ 2 + 1 / (8 * b)) \u2265 b := by\n    have h\u2082 : 0 \u2264 b := by linarith\n    have h\u2083 : Real.sqrt (b ^ 2 + 1 / (8 * b)) \u2265 b := by\n      apply Real.le_sqrt_of_sq_le\n      have h\u2084 : 0 \u2264 1 / (8 * b) := by positivity\n      nlinarith\n    linarith\n  have h\u2083 : Real.sqrt (c ^ 2 + 1 / (8 * c)) \u2265 c := by\n    have h\u2082 : 0 \u2264 c := by linarith\n    have h\u2083 : Real.sqrt (c ^ 2 + 1 / (8 * c)) \u2265 c := by\n      apply Real.le_sqrt_of_sq_le\n      have h\u2084 : 0 \u2264 1 / (8 * c) := by positivity\n      nlinarith\n    linarith\n  have h\u2084 : Real.sqrt (d ^ 2 + 1 / (8 * d)) \u2265 d := by\n    have h\u2082 : 0 \u2264 d := by linarith\n    have h\u2083 : Real.sqrt (d ^ 2 + 1 / (8 * d)) \u2265 d := by\n      apply Real.le_sqrt_of_sq_le\n      have h\u2084 : 0 \u2264 1 / (8 * d) := by positivity\n      nlinarith\n    linarith\n  linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_38406_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a + b + c = 1) (h\u2083 : 0 \u2264 a * b) (h\u2084 : 0 \u2264 a * c) (h\u2085 : 0 \u2264 b * c) : (a * b) ^ 2 * (a + b) + (b * c) ^ 2 * (b + c) + (c * a) ^ 2 * (c + a) \u2264 (a ^ 2 + b ^ 2 + c ^ 2) * (a * b + b * c + c * a):= by", "target": "\n  have h\u2086 : 0 \u2264 a * b * (a + b) := by nlinarith\n  have h\u2087 : 0 \u2264 b * c * (b + c) := by nlinarith\n  have h\u2088 : 0 \u2264 c * a * (c + a) := by nlinarith\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> simp [mul_add, add_mul, mul_comm, mul_left_comm, mul_assoc, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087, h\u2088]\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_2326_plus (a b c d : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 0 \u2264 d) (h : a + b + c + d = 2) (h1 : a * b + a * c + a * d + b * c + b * d + c * d \u2264 1) : a * b * (a * b) * (a + b) + b * c * (b * c) * (b + c) + c * d * (c * d) * (c + d) + d * a * (d * a) * (d + a) \u2264 16:= by", "target": "\n  have h2 : 0 \u2264 a * b := by nlinarith\n  have h3 : 0 \u2264 a * c := by nlinarith\n  have h4 : 0 \u2264 a * d := by nlinarith\n  have h5 : 0 \u2264 b * c := by nlinarith\n  have h6 : 0 \u2264 b * d := by nlinarith\n  have h7 : 0 \u2264 c * d := by nlinarith\n  have h8 : a * b + b * c + c * d + d * a \u2264 2 := by nlinarith\n  have h9 : a * b * (a * b) * (a + b) \u2264 a * b * 2 * 2 := by\n    gcongr\n    all_goals nlinarith\n  have h10 : b * c * (b * c) * (b + c) \u2264 b * c * 2 * 2 := by\n    gcongr\n    all_goals nlinarith\n  have h11 : c * d * (c * d) * (c + d) \u2264 c * d * 2 * 2 := by\n    gcongr\n    all_goals nlinarith\n  have h12 : d * a * (d * a) * (d + a) \u2264 d * a * 2 * 2 := by\n    gcongr\n    all_goals nlinarith\n  nlinarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2198 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^2 + 3) * (b^2 + 3) * (c^2 + 3) \u2265 (4 / 27) * (3 * a * b + 3 * b * c + 3 * c * a + a * b * c)^2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2198_plus (a b c : \u211d) (habc : a * b * c = 1) (h : 0 < a \u2227 0 < b \u2227 0 < c) : (a^2 + 3) * (b^2 + 3) * (c^2 + 3) \u2265 (4 / 27) * (3 * a * b + 3 * b * c + 3 * c * a + a * b * c)^2 \u2227 (a * b * c)^2 \u2265 0 \u2227 0 \u2264 a * b * c \u2227 0 \u2264 a * b * c * (a * b * c):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_4046_plus : \u2203 x y z : \u2115, x^2 * y^4 - x^4 * y^2 + 4 * x^2 * y^2 * z^2 + x^2 * z^4 - y^2 * z^4 \u2260 0 \u2228 x^2 * y^4 - x^4 * y^2 + 4 * x^2 * y^2 * z^2 + x^2 * z^4 - y^2 * z^4 = 0 \u2227 \u2203 x y z : \u2115, x^2 * y^4 - x^4 * y^2 + 4 * x^2 * y^2 * z^2 + x^2 * z^4 - y^2 * z^4 = 0  := by", "target": "\n  use 1, 1, 0\n  simp\n  <;> use 0, 0, 0\n  <;> simp"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3105 (a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) (hab : a + b + c + d = 1 / a + 1 / b + 1 / c + 1 / d) : 11 * Real.sqrt ((a ^ 3 + b ^ 3 + c ^ 3 + d ^ 3) / (a + b + c + d)) + 8 \u2265 19 * Real.sqrt (a * b * c * d) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3105_plus (a b c d : \u211d) (hab : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) (habc : a * b * c * d = 1) : a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2 + (1 / a + 1 / b + 1 / c + 1 / d) ^ 2 \u2265 2 * (a * b + c * d) + 2 * (a * d + b * c):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_25434_plus : \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a * b * c > 0 \u2227 (\u2203 x y z : \u211d, x > 0 \u2227 y > 0 \u2227 z > 0 \u2227 a^5 - a^2 + 3 \u2265 x * (y * z) \u2227 b^5 - b^2 + 3 \u2265 y * (z * x) \u2227 c^5 - c^2 + 3 \u2265 z * (x * y))  := by", "target": "\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  have : a * b * c > 0 := by positivity\n  have h\u2081 : a ^ 5 - a ^ 2 + 3 \u2265 1 * (1 * 1) := by\n    nlinarith [sq_nonneg (a ^ 2 - 1), sq_nonneg (a - 1), sq_nonneg (a + 1)]\n  have h\u2082 : b ^ 5 - b ^ 2 + 3 \u2265 1 * (1 * 1) := by\n    nlinarith [sq_nonneg (b ^ 2 - 1), sq_nonneg (b - 1), sq_nonneg (b + 1)]\n  have h\u2083 : c ^ 5 - c ^ 2 + 3 \u2265 1 * (1 * 1) := by\n    nlinarith [sq_nonneg (c ^ 2 - 1), sq_nonneg (c - 1), sq_nonneg (c + 1)]\n  exact \u27e8by positivity, \u27e81, 1, 1, by norm_num, by norm_num, by norm_num, h\u2081, h\u2082, h\u2083\u27e9\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5350 (n : \u2115) : Nat.Coprime n (2 * n + 1) \u2194 Nat.gcd n (2 * n + 1) = 1 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5350_plus (n : \u2115) (hn : 1 < n) : (\u2203 k : \u2115, n \u2223 k \u2227 k \u2223 2 * n + 1) \u2194 (\u2203 k : \u2115, n \u2223 k \u2227 k \u2223 2 * n + 1 \u2227 k \u2264 2 * n + 1) \u2227 (\u2203 k : \u2115, n \u2223 k \u2227 k \u2223 2 * n + 1 \u2227 k \u2264 2 * n + 1) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_31989_plus : \u2200 a b c : \u211d, (1 / 2 - a) ^ 2 \u2265 0 \u2227 (1 / 2 - b) ^ 2 \u2265 0 \u2227 (1 / 2 - c) ^ 2 \u2265 0 \u2228 (1 / 2 - a) ^ 2 + (1 / 2 - b) ^ 2 + (1 / 2 - c) ^ 2 \u2265 3 * (1 / 2) * (1 / 2):= by", "target": "\n  rintro a b c\n  refine' Or.inl \u27e8by nlinarith, by nlinarith, by nlinarith\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_48463_plus (p : \u2115) (hp : p.Prime) (hp3 : 3 < p) : (\u2211 k in Finset.Ico 0 (p + 1), (p.choose k : \u2124) ^ 2) \u2265 p:= by", "target": "\n  have : (\u2211 k in Finset.Ico 0 (p + 1), (p.choose k : \u2124) ^ 2) \u2265 p := by\n    have : (\u2211 k in Finset.Ico 0 (p + 1), (p.choose k : \u2124) ^ 2) \u2265 \u2211 k in Finset.Ico 0 (p + 1), (p.choose k : \u2124) := by\n      apply Finset.sum_le_sum\n      intro x hx\n      have : (p.choose x : \u2124) \u2264 (p.choose x : \u2124) ^ 2 := by\n        nlinarith\n      nlinarith\n    have : (\u2211 k in Finset.Ico 0 (p + 1), (p.choose k : \u2124) ) \u2265 p := by\n      norm_cast\n      have : (\u2211 k in Finset.Ico 0 (p + 1), (p.choose k : \u2115) ) = 2 ^ p := by\n        rw [\u2190 Nat.sum_range_choose]\n        have : Finset.Ico 0 (p + 1) = Finset.range (p + 1) := by\n          ext x\n          simp [Nat.lt_succ_iff]\n        simp_all\n      have : (p : \u2115) \u2264 2 ^ p := by\n        exact Nat.le_of_lt (Nat.lt_pow_self (by norm_num) p)\n      norm_cast at *\n      <;> simp_all [Finset.sum_range_succ]\n    linarith\n  exact this"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_8815_plus (f : \u2115 \u00d7 \u2115 \u2192 \u2115 \u00d7 \u2115 \u2192 \u2115 \u00d7 \u2115) (f_def : \u2200 a b, f a b = (a.1 + b.1, a.2 + b.2)) : \u2200 a b c : \u2115 \u00d7 \u2115, f (f a b) c = f a (f b c) \u2228 \u2203 a b c, f (f a b) c \u2260 f a (f b c) \u2228 f (f a b) c = f a (f b c):= by", "target": "\n  intro a b c\n  exact Or.inl <| by simp [f_def, add_assoc]\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_17712_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) : \u2203 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 Real.sqrt (b + c) / a + Real.sqrt (c + a) / b + Real.sqrt (a + b) / c \u2265 3 * Real.sqrt 2 * Real.sqrt ((a + b + c) / (a * b + b * c + c * a)) \u2228 0 < a * b + b * c + c * a \u2227 Real.sqrt (b + c) / a + Real.sqrt (c + a) / b + Real.sqrt (a + b) / c \u2265 3 * Real.sqrt 2 * Real.sqrt ((a + b + c) / (a * b + b * c + c * a)) \u2228 0 < a * b + b * c + c * a \u2227 Real.sqrt (b + c) / a + Real.sqrt (c + a) / b + Real.sqrt (a + b) / c \u2265 3 * Real.sqrt 2 * Real.sqrt ((a + b + c) / (a * b + b * c + c * a)) := by", "target": "\n  refine' \u27e81, 1, 1, _\u27e9\n  norm_num\n  <;>\n  apply le_of_pow_le_pow_left two_ne_zero\n  <;>\n  ring_nf\n  <;>\n  norm_num\n  <;>\n  linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_28564_plus : \u2200 x : \u211d, 5 * x ^ 4 + x ^ 3 - 2 * x ^ 2 - x + 1 > 87 / 200 \u2228 \u2203 x : \u211d, 5 * x ^ 4 + x ^ 3 - 2 * x ^ 2 - x + 1 \u2264 87 / 200 \u2228 5 * x ^ 4 + x ^ 3 - 2 * x ^ 2 - x + 1 \u2264 87 / 200 \u2228 5 * x ^ 4 + x ^ 3 - 2 * x ^ 2 - x + 1 \u2264 87 / 200 \u2228 5 * x ^ 4 + x ^ 3 - 2 * x ^ 2 - x + 1 \u2264 87 / 200 \u2228 5 * x ^ 4 + x ^ 3 - 2 * x ^ 2 - x + 1 \u2264 87 / 200 \u2228 5 * x ^ 4 + x ^ 3 - 2 * x ^ 2 - x + 1 \u2264 87 / 200 \u2228 5 * x ^ 4 + x ^ 3 - 2 * x ^ 2 - x + 1 \u2264 87 / 200 \u2228 5 * x ^ 4 + x ^ 3 - 2 * x ^ 2 - x + 1 \u2264 87 / 200 \u2228 5 * x ^ 4 + x ^ 3 - 2 * x ^ 2 - x + 1 \u2264 87 / 200 := by", "target": "\n  intro x\n  by_cases h\u2080 : 5 * x ^ 4 + x ^ 3 - 2 * x ^ 2 - x + 1 > 87 / 200\n  exact Or.inl h\u2080\n  exact Or.inr \u27e8x, Or.inl (by linarith)\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_40919_plus (x y : \u211d) (h\u2081 : 0 \u2264 x \u2227 0 \u2264 y) (h\u2082 : x + y \u2264 1) (h\u2083 : x * y \u2264 1) : x ^ 2 * y ^ 2 * (x + y) ^ 2 * (x * y + 1) \u2264 4:= by", "target": "\n  have h\u2084 : 0 \u2264 x * y := by nlinarith\n  have h\u2085 : x * y + 1 \u2264 2 := by nlinarith\n  have h\u2086 : 0 \u2264 x * y * (x + y) := by nlinarith\n  have h\u2087 : x * y * (x + y) \u2264 1 := by nlinarith\n  have h\u2088 : 0 \u2264 x * y * (x + y) * (x * y + 1) := by nlinarith\n  have h\u2089 : x * y * (x + y) * (x * y + 1) \u2264 2 := by nlinarith\n  have h\u2081\u2080 : 0 \u2264 (x * y) ^ 2 := by nlinarith\n  have h\u2081\u2081 : (x * y) ^ 2 \u2264 1 := by nlinarith\n  have h\u2081\u2082 : 0 \u2264 (x + y) ^ 2 := by nlinarith\n  have h\u2081\u2083 : (x + y) ^ 2 \u2264 1 := by nlinarith\n  have h\u2081\u2084 : 0 \u2264 (x * y) ^ 2 * (x + y) ^ 2 := by nlinarith\n  have h\u2081\u2085 : (x * y) ^ 2 * (x + y) ^ 2 \u2264 1 := by nlinarith\n  nlinarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_18781_plus (a b c : \u211d) (habc : a * b * c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0) : (a + b + c) ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) \u2265 3 * (a * b + b * c + c * a) / (a ^ 2 + b ^ 2 + c ^ 2 + 3 * (a * b + b * c + c * a)) \u2227 (a + b + c) ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) \u2265 3 * (a * b + b * c + c * a) / (a ^ 2 + b ^ 2 + c ^ 2 + 3 * (a * b + b * c + c * a)) := by", "target": "\n  rcases h with \u27e8ha, hb, hc\u27e9\n  have : 0 < a * b := by positivity\n  have : 0 < b * c := by positivity\n  have : 0 < c * a := by positivity\n  constructor\n  \u00b7 apply le_of_sub_nonneg\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      mul_self_nonneg (a - b - c), mul_self_nonneg (b - c - a), mul_self_nonneg (c - a - b)]\n  \u00b7 apply le_of_sub_nonneg\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      mul_self_nonneg (a - b - c), mul_self_nonneg (b - c - a), mul_self_nonneg (c - a - b)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_5562_plus : \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 \u2203 a' b' c' :\u211d, a' > 0 \u2227 b' > 0 \u2227 c' > 0 \u2227 1 / (a' * (1 + b')) + 1 / (b' * (1 + c')) + 1 / (c' * (1 + a')) \u2265 3 / (1 + a' * b' * c') \u2227 a' * b' * c' \u2264 a * b * c \u2228 a * b * c \u2264 a' * b' * c'  := by", "target": "\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  refine \u27e8a, b, c, ?_\u27e9\n  simp [ha, hb, hc]\n  <;> norm_num\n  <;> apply le_of_sub_nonneg\n  <;> field_simp\n  <;> ring_nf\n  <;> positivity"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_31639_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 1) (h\u2081 : 0 \u2264 x * y) (h\u2082 : 0 \u2264 y * z) (h\u2083 : 0 \u2264 z * x) :\n   x ^ 2 * y ^ 2 * (x + y) ^ 2 * (y + z) ^ 2 * (z + x) ^ 2 \u2264 1 \u2227\n   x ^ 2 * y ^ 2 * (x + y) ^ 2 * (y + z) ^ 2 * (z + x) ^ 2 \u2264 (x + y + z) ^ 6 := by", "target": "\n  have h\u2084 : x ^ 2 + y ^ 2 + z ^ 2 \u2264 1 := by\n    nlinarith [sq_nonneg (x + y + z), h]\n  have h\u2085 : 0 \u2264 x * y * (x + y) := by\n    nlinarith\n  have h\u2086 : 0 \u2264 y * z * (y + z) := by\n    nlinarith\n  have h\u2087 : 0 \u2264 z * x * (z + x) := by\n    nlinarith\n  have h\u2088 : x ^ 2 * y ^ 2 * (x + y) ^ 2 * (y + z) ^ 2 * (z + x) ^ 2 \u2264 1 := by\n    calc\n      x ^ 2 * y ^ 2 * (x + y) ^ 2 * (y + z) ^ 2 * (z + x) ^ 2 \u2264 1 * 1 * 1 * 1 * 1 := by\n        gcongr <;> nlinarith\n      _ = 1 := by norm_num\n  have h\u2089 : x ^ 2 * y ^ 2 * (x + y) ^ 2 * (y + z) ^ 2 * (z + x) ^ 2 \u2264 (x + y + z) ^ 6 := by\n    calc\n      x ^ 2 * y ^ 2 * (x + y) ^ 2 * (y + z) ^ 2 * (z + x) ^ 2 \u2264 1 := by\n        assumption\n      _ \u2264 (x + y + z) ^ 6 := by\n        simp_all only [add_assoc, add_left_comm, add_comm]\n        nlinarith [sq_nonneg (x + y + z)]\n  exact \u27e8h\u2088, h\u2089\u27e9\n  <;> assumption\n  <;> assumption\n  <;> assumption"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_24141_plus (x y z : \u211d) (hx : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z) (h : x + y + z = 3) (h' : x * y + x * z + y * z \u2264 3) : 1 / (x + 1) ^ 2 + 1 / (y + 1) ^ 2 + 1 / (z + 1) ^ 2 \u2265 3 / (3 * (x + y + z + 3)):= by", "target": "\n  have h1 : 0 < (x + 1) ^ 2 := by nlinarith\n  have h2 : 0 < (y + 1) ^ 2 := by nlinarith\n  have h3 : 0 < (z + 1) ^ 2 := by nlinarith\n  have h4 : 1 / (x + 1) ^ 2 \u2265 1 / 16 := by\n    rw [ge_iff_le]\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (x - 3)]\n  have h5 : 1 / (y + 1) ^ 2 \u2265 1 / 16 := by\n    rw [ge_iff_le]\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (y - 3)]\n  have h6 : 1 / (z + 1) ^ 2 \u2265 1 / 16 := by\n    rw [ge_iff_le]\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (z - 3)]\n  have h7 : 1 / (x + 1) ^ 2 + 1 / (y + 1) ^ 2 + 1 / (z + 1) ^ 2 \u2265 3 / 16 := by\n    linarith\n  have h8 : 3 / 16 \u2265 3 / (3 * (x + y + z + 3)) := by\n    rw [ge_iff_le]\n    rw [div_le_div_iff]\n    nlinarith\n    positivity\n    positivity\n  linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_44832_plus (a b c : \u211d) (habc : a * b * c = 8) (h : 0 < a \u2227 0 < b \u2227 0 < c) : (\u2203 a' b' c' : \u211d, a' > 0 \u2227 b' > 0 \u2227 c' > 0 \u2227 a' * b' * c' = 8 \u2227 1 / Real.sqrt (1 + 2 * a' * b') + 1 / Real.sqrt (1 + 2 * b' * c') + 1 / Real.sqrt (1 + 2 * c' * a') \u2265 1 \u2227 (a' * b' * c' ) \u2264 8 \u2227 (1 / Real.sqrt (1 + 2 * a' * b') + 1 / Real.sqrt (1 + 2 * b' * c') + 1 / Real.sqrt (1 + 2 * c' * a') ) \u2264 10):= by", "target": "\n  use 2, 2, 2\n  repeat' constructor\n  all_goals norm_num\n  all_goals\n    apply le_of_pow_le_pow_left two_ne_zero (by positivity)\n    ring_nf\n    norm_num\n  all_goals\n    apply le_of_sub_nonneg\n    field_simp\n    ring_nf\n    norm_num\n  all_goals\n    positivity"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_47107_plus (n : \u2115) (hn : 1 \u2264 n \u2227 n \u2264 2558) : \u2211 k in Finset.Icc 1 n, k ^ 4 \u2264 \u2211 k in Finset.Icc 1 n, k ^ 6:= by", "target": "\n  rcases hn with \u27e8h1, h2\u27e9\n  have : \u2200 k \u2208 Finset.Icc 1 n, k ^ 4 \u2264 k ^ 6 := by\n    intro k hk\n    have h3 : 1 \u2264 k := by\n      simp only [Finset.mem_Icc] at hk\n      linarith\n    have h4 : k \u2264 2558 := by\n      simp only [Finset.mem_Icc] at hk\n      linarith\n    have h5 : k ^ 4 \u2264 k ^ 6 := by\n      exact Nat.pow_le_pow_of_le_right (by linarith) (by linarith)\n    exact h5\n  exact Finset.sum_le_sum this"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_17578_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : 0 \u2264 a * b) (h\u2083 : 0 \u2264 a * c) (h\u2084 : 0 \u2264 b * c) : (2 * a / (a + b) + 2 * b / (b + c) + 2 * c / (a + c)) \u2265 2 * a / (a + b + c) + 2 * b / (a + b + c) + 2 * c / (a + b + c) \u2227 (2 * a / (a + b) + 2 * b / (b + c) + 2 * c / (a + c)) \u2265 2 * a / (a + b + c) + 2 * b / (a + b + c) + 2 * c / (a + b + c):= by", "target": "\n  rcases h\u2081 with \u27e8ha, hb, hc\u27e9\n  constructor\n  \u00b7\n      rcases eq_or_ne a 0 with (rfl | ha') <;> rcases eq_or_ne b 0 with (rfl | hb') <;>\n      rcases eq_or_ne c 0 with (rfl | hc') <;>\n      simp_all [div_eq_mul_inv, mul_add, mul_comm, mul_left_comm] <;>\n      apply le_of_sub_nonneg <;>\n      field_simp <;>\n      ring_nf <;>\n      positivity\n  \u00b7\n      rcases eq_or_ne a 0 with (rfl | ha') <;> rcases eq_or_ne b 0 with (rfl | hb') <;>\n      rcases eq_or_ne c 0 with (rfl | hc') <;>\n      simp_all [div_eq_mul_inv, mul_add, mul_comm, mul_left_comm] <;>\n      apply le_of_sub_nonneg <;>\n      field_simp <;>\n      ring_nf <;>\n      positivity"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_46293_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : a ^ 2 + b ^ 2 + c ^ 2 + (a * b + b * c + c * a) ^ 2 \u2265 3 * (a * b * c * (a + b + c)) \u2227 (a ^ 2 + b ^ 2 + c ^ 2) ^ 3 \u2265 a ^ 6 + a ^ 3 * (b + c) ^ 3 + b ^ 6 + b ^ 3 * (a + c) ^ 3 + c ^ 6 + c ^ 3 * (a + b) ^ 3  := by", "target": "\n  refine' \u27e8_, _\u27e9\n  \u00b7 nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b),\n      mul_nonneg hab hb, mul_nonneg hb hc, mul_nonneg hc hab,\n      sq_nonneg (a * b + b * c + c * a), sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n  \u00b7 nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_nonneg hab hb, mul_nonneg hb hc, mul_nonneg hc hab,\n      sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n      sq_nonneg (a * b + b * c + c * a), sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a),\n      sq_nonneg (c * a - a * b), mul_nonneg (sq_nonneg a) (sq_nonneg b), mul_nonneg (sq_nonneg b) (sq_nonneg c),\n      mul_nonneg (sq_nonneg c) (sq_nonneg a)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_5651_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : \u2203 x y z : \u211d, 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z \u2227 (x + y + z) = a + b + c \u2227 (x * y + y * z + z * x) \u2264 (a * b + b * c + c * a) \u2227  Real.sqrt (x + y) * (Real.sqrt (y + z) * Real.sqrt (z + x)) \u2264 Real.sqrt (a + b) * (Real.sqrt (b + c) * Real.sqrt (c + a))  := by", "target": "\n  refine \u27e8a, b, c, hab, hb, hc,?_,?_,?_\u27e9 <;> simp [*] <;> nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> apply le_of_pow_le_pow_left two_ne_zero (by positivity)\n  <;> ring_nf\n  <;> nlinarith\n  <;> ring_nf\n  <;> nlinarith\n  <;> ring_nf\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_32959_plus (x k : \u211d) (h\u2081 : \u2016x\u2016 \u2264 1 \u2227 \u2016k\u2016 \u2264 1) : 3 * \u2016x - k\u2016 * \u2016x + k\u2016 \u2264 12 \u2227 3 * \u2016x - k\u2016 * \u2016x + k\u2016 \u2265 0 \u2227 3 * \u2016x - k\u2016 * \u2016x + k\u2016 \u2264 3 * (\u2016x\u2016 + \u2016k\u2016) * (\u2016x\u2016 + \u2016k\u2016):= by", "target": "\n  have h\u2082 : \u2016x - k\u2016 \u2265 0 := by apply norm_nonneg\n  have h\u2083 : \u2016x + k\u2016 \u2265 0 := by apply norm_nonneg\n  have h\u2084 : \u2016x - k\u2016 \u2264 \u2016x\u2016 + \u2016k\u2016 := by\n    apply norm_sub_le\n  have h\u2085 : \u2016x + k\u2016 \u2264 \u2016x\u2016 + \u2016k\u2016 := by\n    apply norm_add_le\n  have h\u2086 : 3 * \u2016x - k\u2016 * \u2016x + k\u2016 \u2264 12 := by\n    nlinarith\n  have h\u2087 : 3 * \u2016x - k\u2016 * \u2016x + k\u2016 \u2265 0 := by\n    nlinarith\n  have h\u2088 : 3 * \u2016x - k\u2016 * \u2016x + k\u2016 \u2264 3 * (\u2016x\u2016 + \u2016k\u2016) * (\u2016x\u2016 + \u2016k\u2016) := by\n    nlinarith\n  exact \u27e8h\u2086, h\u2087, h\u2088\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3651 : \u2200 n : \u2115, n \u2265 2 \u2192 (1 + (n + 1) ^ (n + 1)) / (1 + n ^ n) > (n + 2) / (n + 1) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3651_plus : \u2200 n : \u2115, n \u2265 2 \u2192 1 < n \u2227 1 < n ^ n \u2227 1 < (n + 1) ^ (n + 1) \u2227 (n + 1) ^ (n + 1) \u2265 n ^ n \u2227 (n + 1) ^ (n + 1) \u2265 n ^ n * n:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_9163_plus (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : \u2203 x y z : \u211d, (x ^ 2 + y ^ 2 + z ^ 2) = 1 \u2227 (x * y * z) \u2264 1 / 3 \u2227 (x * y + y * z + z * x) \u2264 3 * (x ^ 2 + y ^ 2 + z ^ 2) \u2227 3 * (x * y * z) \u2264 (x ^ 2 + y ^ 2 + z ^ 2):= by", "target": "\n  use 1 / 3, 2 / 3, 2 / 3\n  norm_num\n  <;> nlinarith [sq_nonneg (1 - 2 / 3), sq_nonneg (2 / 3 - 1 / 3)]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2232 : Nat.gcd 180 594 = 18 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2232_plus : Nat.gcd 180 594 \u2223 180 * 594 \u2227 Nat.gcd 180 594 \u2223 18 * 594 \u2227 Nat.gcd 180 594 \u2223 180 * 594 * 594 \u2227 Nat.gcd 180 594 \u2223 18 * 594 * 594 \u2227 Nat.gcd 180 594 \u2223 180 * 594 * 594 * 594 \u2227 Nat.gcd 180 594 \u2223 18 * 594 * 594 * 594 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_6656_plus (a b c d : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hd : 0 \u2264 d) (habc : a + b + c + d = 1) (h : 0 \u2264 a * b * c * d) : a * b ^ 2 * c ^ 2 * d ^ 2 + b * c ^ 2 * d ^ 2 * a ^ 2 + c * d ^ 2 * a ^ 2 * b ^ 2 + d * a ^ 2 * b ^ 2 * c ^ 2 \u2264 1:= by", "target": "\n  have h\u2081 : 0 \u2264 a * b := by positivity\n  have h\u2082 : 0 \u2264 c * d := by positivity\n  have h\u2083 : 0 \u2264 a * b * c := by positivity\n  have h\u2084 : 0 \u2264 a * b * d := by positivity\n  have h\u2085 : 0 \u2264 a * c * d := by positivity\n  have h\u2086 : 0 \u2264 b * c * d := by positivity\n  have h\u2087 : 0 \u2264 a * b * c * d := by positivity\n  have h\u2088 : a * b ^ 2 * c ^ 2 * d ^ 2 + b * c ^ 2 * d ^ 2 * a ^ 2 + c * d ^ 2 * a ^ 2 * b ^ 2 + d * a ^ 2 * b ^ 2 * c ^ 2 \u2264 1 := by\n    calc\n      a * b ^ 2 * c ^ 2 * d ^ 2 + b * c ^ 2 * d ^ 2 * a ^ 2 + c * d ^ 2 * a ^ 2 * b ^ 2 + d * a ^ 2 * b ^ 2 * c ^ 2 \u2264\n          a * 1 * 1 * 1 + b * 1 * 1 * 1 + c * 1 * 1 * 1 + d * 1 * 1 * 1 := by\n        gcongr\n        all_goals\n          nlinarith\n      _ = a + b + c + d := by ring\n      _ = 1 := habc\n  exact h\u2088"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2767 (x : \u211d) : \u2203 n : \u2115, \u2200 \u03b5 : \u211d, \u03b5 > 0 \u2192 |(1 + x/n)^n - \u2211 i in Finset.range n, (x^i)/i!| < \u03b5 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2767_plus (x : \u211d) (n : \u2115) (hn : 0 < n) : \u2203 k : \u2115, \u2200 \u03b5 : \u211d, \u03b5 > 0 \u2192 \u2211 i in Finset.range n, x^i / i! \u2264 (1 + x / k) ^ k \u2228 (1 + x / k) ^ k \u2264 \u2211 i in Finset.range n, x^i / i! \u2228 (1 + x / k) ^ k = \u2211 i in Finset.range n, x^i / i! := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_26418_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b) (hc : 0 \u2264 c) : a ^ 6 + b ^ 6 + c ^ 6 + 3 * (a ^ 2 * b ^ 2 * c ^ 2) \u2265 a ^ 3 * b ^ 3 + b ^ 3 * c ^ 3 + c ^ 3 * a ^ 3:= by", "target": "\n  have h\u2081 : 0 \u2264 a ^ 2 * b ^ 2 := by nlinarith\n  have h\u2082 : 0 \u2264 b ^ 2 * c ^ 2 := by nlinarith\n  have h\u2083 : 0 \u2264 c ^ 2 * a ^ 2 := by nlinarith\n  have h\u2084 : 0 \u2264 a ^ 2 * b ^ 2 * c ^ 2 := by nlinarith\n  nlinarith [sq_nonneg (a ^ 3 - b ^ 3), sq_nonneg (b ^ 3 - c ^ 3), sq_nonneg (c ^ 3 - a ^ 3),\n    sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    sq_nonneg (a ^ 2 - a * b), sq_nonneg (b ^ 2 - b * c), sq_nonneg (c ^ 2 - c * a),\n    sq_nonneg (a * b - a * c), sq_nonneg (b * c - b * a), sq_nonneg (c * a - c * b)]\n  <;> simp_all only [add_assoc, add_left_comm, add_comm]\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_3341_plus (a b c : \u211d)\n  (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c)\n  (h\u2081 : a + b + c = 3)\n  (h\u2082 : 0 < a * b * c) :\n  Real.sqrt (3 - a) / (Real.sqrt (3 - a) + Real.sqrt (3 - b) + Real.sqrt (3 - c)) +\n    Real.sqrt (3 - b) / (Real.sqrt (3 - a) + Real.sqrt (3 - b) + Real.sqrt (3 - c)) +\n    Real.sqrt (3 - c) / (Real.sqrt (3 - a) + Real.sqrt (3 - b) + Real.sqrt (3 - c)) \u2264 5 / 2 \u2227 5 / 2 \u2264 5 / 2 := by", "target": "\n  have h\u2083 : Real.sqrt (3 - a) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2084 : Real.sqrt (3 - b) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2085 : Real.sqrt (3 - c) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2086 : Real.sqrt (3 - a) / (Real.sqrt (3 - a) + Real.sqrt (3 - b) + Real.sqrt (3 - c)) +\n      Real.sqrt (3 - b) / (Real.sqrt (3 - a) + Real.sqrt (3 - b) + Real.sqrt (3 - c)) +\n      Real.sqrt (3 - c) / (Real.sqrt (3 - a) + Real.sqrt (3 - b) + Real.sqrt (3 - c)) \u2264 5 / 2 := by\n    have h\u2087 : Real.sqrt (3 - a) / (Real.sqrt (3 - a) + Real.sqrt (3 - b) + Real.sqrt (3 - c)) +\n      Real.sqrt (3 - b) / (Real.sqrt (3 - a) + Real.sqrt (3 - b) + Real.sqrt (3 - c)) +\n      Real.sqrt (3 - c) / (Real.sqrt (3 - a) + Real.sqrt (3 - b) + Real.sqrt (3 - c)) \u2264 5 / 2 := by\n      have h\u2088 : Real.sqrt (3 - a) + Real.sqrt (3 - b) + Real.sqrt (3 - c) \u2265 0 := by linarith\n      field_simp [h\u2088]\n      apply div_le_of_nonneg_of_le_mul <;> norm_num <;> nlinarith [sq_sqrt (show 0 \u2264 3 - a from by linarith),\n        sq_sqrt (show 0 \u2264 3 - b from by linarith), sq_sqrt (show 0 \u2264 3 - c from by linarith)]\n    linarith\n  exact \u27e8h\u2086, by linarith\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_661 (x y z : \u211d) : (x + y + z) ^ 2 * (x * y + y * z + z * x) ^ 2 \u2264 3 * (x ^ 2 + x * y + y ^ 2) * (y ^ 2 + y * z + z ^ 2) * (z ^ 2 + x * z + x ^ 2) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_661_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) : \u2203 (a b c : \u211d), a * b * c = 0 \u2227 a ^ 2 + b ^ 2 + c ^ 2 \u2264 3 * (x ^ 2 + x * y + y ^ 2) * (y ^ 2 + y * z + z ^ 2) * (z ^ 2 + x * z + x ^ 2):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_21882_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 3) (h' : a * b + b * c + c * a \u2264 3) :  Real.sqrt (3 - a) * Real.sqrt (3 - b) * Real.sqrt (3 - c) \u2265 (Real.sqrt (3 - (a + b + c))) * (Real.sqrt (3 - (a + b + c))):= by", "target": "\n  have h1 : Real.sqrt (3 - a) * Real.sqrt (3 - b) * Real.sqrt (3 - c) = Real.sqrt ((3 - a) * (3 - b) * (3 - c)) := by\n    rw [Real.sqrt_mul, Real.sqrt_mul] <;> nlinarith\n  have h2 : Real.sqrt (3 - (a + b + c)) * Real.sqrt (3 - (a + b + c)) = (3 - (a + b + c)) := by\n    rw [Real.mul_self_sqrt] <;> nlinarith\n  rw [h1, h2]\n  apply Real.le_sqrt_of_sq_le\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n    mul_self_nonneg (a + b + c)]\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_68989_plus : \u2200 (x : \u2115), 2*x^5 - 5*x^4 + 10*x^3 - 10*x^2 + 7*x - 2 = 0 \u2228 (\u2203 (y : \u2115), y \u2264 x \u2227 2*y^5 - 5*y^4 + 10*y^3 - 10*y^2 + 7*y - 2 = 0) \u2228 (\u2203 (y : \u2115), y \u2264 x \u2227 2*y^5 - 5*y^4 + 10*y^3 - 10*y^2 + 7*y - 2 = 0) \u2228 (\u2203 (y : \u2115), y \u2264 x \u2227 2*y^5 - 5*y^4 + 10*y^3 - 10*y^2 + 7*y - 2 = 0) \u2228 (\u2203 (y : \u2115), y \u2264 x \u2227 2*y^5 - 5*y^4 + 10*y^3 - 10*y^2 + 7*y - 2 = 0) \u2228 (\u2203 (y : \u2115), y \u2264 x \u2227 2*y^5 - 5*y^4 + 10*y^3 - 10*y^2 + 7*y - 2 = 0) := by", "target": "\n  intro x\n  by_cases h : 2 * x ^ 5 - 5 * x ^ 4 + 10 * x ^ 3 - 10 * x ^ 2 + 7 * x - 2 = 0\n  exact Or.inl h\n  exact Or.inr (Or.inl \u27e80, by norm_num, by norm_num\u27e9)"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3471 (x : \u211d) (hx : 0 < x) : (x ^ 2 / (x ^ 4 + x ^ 2 + 1)) \u2264 (x / (x ^ 3 + x + 1) + x ^ 2 / (x ^ 3 + x ^ 2 + 1)) / 2 \u2227 (x / (x ^ 3 + x + 1) + x ^ 2 / (x ^ 3 + x ^ 2 + 1)) / 2 \u2264 x / (x ^ 2 + x + 1) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3471_plus (x : \u211d) (hx : 0 < x) : \u2203 y, y \u2264 x \u2227 0 \u2264 y \u2227 y \u2264 1 \u2227 (x ^ 2 / (x ^ 4 + x ^ 2 + 1)) \u2264 y \u2227 y \u2264 (x / (x ^ 2 + x + 1)) \u2228 (x ^ 2 / (x ^ 4 + x ^ 2 + 1)) \u2264 (x / (x ^ 2 + x + 1)) \u2227 (x / (x ^ 2 + x + 1)) \u2264 (x ^ 2 / (x ^ 4 + x ^ 2 + 1)) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_35298_plus : \u2200 n : \u2115, \u2211 k in Finset.Icc 1 n, k ^ 7 \u2265 \u2211 k in Finset.Icc 1 n, k ^ 3 \u2227 \u2211 k in Finset.Icc 1 n, k ^ 3 \u2265 \u2211 k in Finset.Icc 1 n, k ^ 2 \u2227 \u2211 k in Finset.Icc 1 n, k ^ 2 \u2265 \u2211 k in Finset.Icc 1 n, k \u2227 \u2211 k in Finset.Icc 1 n, k \u2265 n:= by", "target": "\n  intro n\n  have h\u2080 : \u2200 k \u2208 Finset.Icc 1 n, k ^ 7 \u2265 k ^ 3 := by\n    intro k hk\n    have hk' : 0 < k := by\n      simp only [Finset.mem_Icc] at hk\n      linarith\n    exact Nat.pow_le_pow_of_le_right hk' (by linarith)\n  have h\u2081 : \u2200 k \u2208 Finset.Icc 1 n, k ^ 3 \u2265 k ^ 2 := by\n    intro k hk\n    have hk' : 0 < k := by\n      simp only [Finset.mem_Icc] at hk\n      linarith\n    exact Nat.pow_le_pow_of_le_right hk' (by linarith)\n  have h\u2082 : \u2200 k \u2208 Finset.Icc 1 n, k ^ 2 \u2265 k := by\n    intro k hk\n    have hk' : 0 < k := by\n      simp only [Finset.mem_Icc] at hk\n      linarith\n    exact Nat.le_self_pow (by linarith) k\n  have h\u2083 : \u2211 k in Finset.Icc 1 n, k \u2265 n := by\n    have h\u2084 : \u2211 k in Finset.Icc 1 n, k \u2265 \u2211 k in Finset.Icc 1 n, 1 := by\n      apply Finset.sum_le_sum\n      intro x hx\n      simp only [Finset.mem_Icc] at hx\n      linarith\n    simp at h\u2084\n    linarith\n  exact \u27e8Finset.sum_le_sum h\u2080, Finset.sum_le_sum h\u2081, Finset.sum_le_sum h\u2082, h\u2083\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_52531_plus (x1 x2 x3 x4 : \u211d) (h1 : 1 / 2 \u2264 x1 ^ 2 + x2 ^ 2 + x3 ^ 2 + x4 ^ 2) (h2 : x1 ^ 2 + x2 ^ 2 + x3 ^ 2 + x4 ^ 2 \u2264 1) : (x1 * x2 * x3 * x4) * (x1 * x2 * x3 * x4) \u2264 1:= by", "target": "\n  have h3 : x1 ^ 2 + x2 ^ 2 + x3 ^ 2 + x4 ^ 2 \u2264 1 := by linarith\n  have h4 : (x1 * x2) ^ 2 + (x3 * x4) ^ 2 \u2264 1 := by\n    nlinarith [sq_nonneg (x1 ^ 2 + x2 ^ 2 + x3 ^ 2 + x4 ^ 2),\n      sq_nonneg (x1 ^ 2 - x2 ^ 2 + x3 ^ 2 - x4 ^ 2),\n      sq_nonneg (x1 ^ 2 - x2 ^ 2 - x3 ^ 2 + x4 ^ 2),\n      sq_nonneg (x1 * x2 + x3 * x4),\n      sq_nonneg (x1 * x2 - x3 * x4)]\n  nlinarith [sq_nonneg (x1 * x2 - x3 * x4),\n    sq_nonneg (x1 * x2 + x3 * x4)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_751 (x y z : \u211d) (hx : x * y \u2265 1 / 3) (hy : y * z \u2265 1 / 3) (hz : z * x \u2265 1 / 3) : 3 / (1 + 9 / (x + y + z) ^ 2) \u2265 1 / (1 + 1 / x ^ 2) + 1 / (1 + 1 / y ^ 2) + 1 / (1 + 1 / z ^ 2) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_751_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) : 1 / (x + y + z) \u2264 1 / x + 1 / y + 1 / z \u2227 1 / (x * y + y * z + z * x) \u2264 3 * (1 / x + 1 / y + 1 / z):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3637 (x y z t : \u211d) (h : x ^ 2 + y ^ 2 + z ^ 2 + t ^ 2 = 4) : x * y * z * t \u2264 1 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3637_plus (x y z t : \u211d) (h\u2081 : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z \u2227 0 \u2264 t) (h\u2082 : x + y + z + t = 4) (h\u2083 : x * y * z * t \u2264 1) : x ^ 2 / (x + y) + y ^ 2 / (y + z) + z ^ 2 / (z + t) + t ^ 2 / (t + x) \u2265 0 \u2227 x ^ 2 / (x + y) + y ^ 2 / (y + z) + z ^ 2 / (z + t) + t ^ 2 / (t + x) \u2264 16 / 3 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1203 (a b c d : \u211d) : (a^2 + b^2 + c^2) * (b^2 + c^2 + d^2) * (c^2 + d^2 + a^2) \u2265 (d^2 + a^2 + b^2) * c^2 * (d + a + b)^2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1203_plus (a b c d : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 0 \u2264 d) (h\u2082 : a + b + c + d = 1) : (a * b) ^ 2 + (b * c) ^ 2 + (c * d) ^ 2 + (d * a) ^ 2 \u2264 1 \u2227 (a * b + b * c + c * d + d * a) ^ 2 \u2264 1:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_42483_plus : \u2200 \u03b5 : \u211d, \u03b5 > 0 \u2192 \u2203 N : \u2115, \u2200 a : \u211d, a > N \u2192 1 - \u03b5 < (1 + 0.01 * a) ^ (70 / a) \u2227 (1 + 0.01 * a) ^ (70 / a) \u2264 1 + \u03b5 \u2228 (1 + 0.01 * a) ^ (70 / a) \u2264 1 \u2228 (1 + 0.01 * a) ^ (70 / a) > 1 + \u03b5 \u2228 (1 + 0.01 * a) ^ (70 / a) > 1:= by", "target": "\n  intro \u03b5 h\u03b5\n  use 0\n  intro a ha\n  by_cases h\u2081 : (1 + 0.01 * a) ^ (70 / a) \u2264 1\n  <;> by_cases h\u2082 : (1 + 0.01 * a) ^ (70 / a) \u2264 1 + \u03b5\n  <;> by_cases h\u2083 : 1 - \u03b5 < (1 + 0.01 * a) ^ (70 / a)\n  <;> simp_all\n  <;> norm_num\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_7762_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) : \u2203 m : \u211d, 0 \u2264 m \u2227 m \u2264 1 \u2227 m * (x ^ 2 + y ^ 2 + z ^ 2) ^ 6 \u2264 4 * (x ^ 2 + y ^ 2 + z ^ 2) ^ 6 \u2227 (x ^ 4 + y ^ 4 + z ^ 4) * (x + y + z) ^ 4 * (x ^ 2 + y ^ 2 + z ^ 2) ^ 2 \u2264 (x ^ 4 + y ^ 4 + z ^ 4) * (x + y + z) ^ 4 * (x ^ 2 + y ^ 2 + z ^ 2) ^ 2 + x ^ 2 * y ^ 2 * z ^ 2 * (x + y + z) ^ 6  := by", "target": "\n  refine \u27e81, by norm_num, by norm_num,?_,?_\u27e9 <;> norm_num <;>\n  apply le_of_sub_nonneg <;>\n  ring_nf <;>\n  positivity"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_3124_plus (a b c d : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hd : 0 \u2264 d) (habc : a + b + c + d = 1) (h : 0 \u2264 3 * (a * b + a * c + a * d + b * c + b * d + c * d) ^ 2) : a * b ^ 2 * c ^ 2 * d ^ 2 + b * c ^ 2 * d ^ 2 * a ^ 2 + c * d ^ 2 * a ^ 2 * b ^ 2 + d * a ^ 2 * b ^ 2 * c ^ 2 \u2264 1 \u2227 a * b * c * d \u2264 1 / 4:= by", "target": "\n  have h\u2080 : 0 \u2264 a * b := by positivity\n  have h\u2081 : 0 \u2264 a * c := by positivity\n  have h\u2082 : 0 \u2264 a * d := by positivity\n  have h\u2083 : 0 \u2264 b * c := by positivity\n  have h\u2084 : 0 \u2264 b * d := by positivity\n  have h\u2085 : 0 \u2264 c * d := by positivity\n  have h\u2086 : a * b + a * c + a * d + b * c + b * d + c * d \u2264 1 := by\n    nlinarith\n  have h\u2087 : a * b ^ 2 * c ^ 2 * d ^ 2 + b * c ^ 2 * d ^ 2 * a ^ 2 + c * d ^ 2 * a ^ 2 * b ^ 2 + d * a ^ 2 * b ^ 2 * c ^ 2 \u2264 1 := by\n    have h\u2081 : a * b ^ 2 * c ^ 2 * d ^ 2 + b * c ^ 2 * d ^ 2 * a ^ 2 + c * d ^ 2 * a ^ 2 * b ^ 2 + d * a ^ 2 * b ^ 2 * c ^ 2 \u2264 1 := by\n      calc\n        a * b ^ 2 * c ^ 2 * d ^ 2 + b * c ^ 2 * d ^ 2 * a ^ 2 + c * d ^ 2 * a ^ 2 * b ^ 2 + d * a ^ 2 * b ^ 2 * c ^ 2 \u2264 a * 1 * 1 * 1 + b * 1 * 1 * 1 + c * 1 * 1 * 1 + d * 1 * 1 * 1 := by\n          gcongr <;> nlinarith\n        _ = a + b + c + d := by ring\n        _ = 1 := by linarith\n    linarith\n  have h\u2088 : a * b * c * d \u2264 1 / 4 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (c - d), sq_nonneg (a + b), sq_nonneg (c + d)]\n  exact \u27e8h\u2087, h\u2088\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2532 (a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : (1 / a + 1 / b + 1 / c + 1 / d) * (1 / (1 + a) + 1 / (1 + b) + 1 / (1 + c) + 1 / (1 + d)) \u2265 16 / (1 + a * b * c * d) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2532_plus (a b c d : \u211d) (habc : 0 < a * b * c) (habd : 0 < a * b * d) (hcd : 0 < c * d) (habcd : 0 < a * b * c * d) : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) * Real.sqrt (1 + c ^ 2) * Real.sqrt (1 + d ^ 2) \u2265 (1 + a * b * c * d):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_42974_plus (n : \u2115) (h\u2080 : 1 \u2264 n) (h\u2081 : 1 \u2264 n) : \u2203 x, 1 \u2264 x \u2227 \u2203 y, 1 \u2264 y \u2227 (x : \u211d) + y \u2264 2 * n \u2227 (x : \u211d) * y \u2264 n ^ 2 := by", "target": "\n  use 1\n  constructor\n  linarith\n  use 1\n  constructor\n  linarith\n  constructor\n  norm_cast\n  linarith\n  norm_cast\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3444 (a : \u2115 \u2192 \u2115) (a1 : a 0 = 32) (a2 : a 1 = 24) (a_rec : \u2200 n, n >= 2 \u2227 a (n + 1) = (a n)^13 * (a (n - 1))^37): a 2010 \u2261 832 [MOD 1000] := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3444_plus (n : \u2115) (h\u2081 : 3 \u2264 n) (h\u2082 : 1 \u2264 n) (h\u2083 : 0 < n) : \u2203 k : \u2115, (n^3 + 1) \u2265 (n^2 + n + 1) * k \u2227 (n^3 + 1) % (n^2 + n + 1) \u2264 k * (n^2 + n + 1):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_8551_plus (f : \u211d \u2192 \u211d) (hf: f (1/2) = 1 \u2227 \u2200 x, 0 \u2264 x \u2227 x \u2264 1 \u2192 f x \u2264 1 \u2227 \u2203 x, 0 \u2264 x \u2227 x \u2264 1 \u2227 f x = 1) : \u2203 x \u2208 Set.Icc (0:\u211d) 1, f x + f (1 - x) \u2265 1 \u2228 \u2203 x \u2208 Set.Icc (0:\u211d) 1, f (x/6) > (1/2) * f x \u2228 f (1/2013) \u2265 1/2 \u2228 f (1/2013) < 1/2 \u2228 \u2203 x \u2208 Set.Icc (0:\u211d) 1, f x > 1 \u2228 \u2203 x \u2208 Set.Icc (0:\u211d) 1, f x < 0 \u2228 \u2203 x \u2208 Set.Icc (0:\u211d) 1, f x \u2265 1 \u2228 \u2203 x \u2208 Set.Icc (0:\u211d) 1, f x \u2264 0 := by", "target": "\n  rcases hf with \u27e8h1, h2\u27e9\n  use 1/2\n  simp\n  norm_num\n  <;> aesop"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_48528_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 1) : (Real.sqrt (a^2 + 9 * b^2 + c^2 - 6 * a * b + 18 * b * c + 18 * c * a) + Real.sqrt (a^2 + b^2 + 9 * c^2 + 18 * a * b - 6 * b * c + 18 * c * a) + Real.sqrt (9 * a^2 + b^2 + c^2 + 18 * a * b + 18 * b * c - 6 * c * a)) \u2264 18 * (a + b + c):= by", "target": "\n  have h\u2081 : Real.sqrt (a^2 + 9 * b^2 + c^2 - 6 * a * b + 18 * b * c + 18 * c * a) \u2264 3 * (a + 3 * b + c):= by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  have h\u2082 : Real.sqrt (a^2 + b^2 + 9 * c^2 + 18 * a * b - 6 * b * c + 18 * c * a) \u2264 3 * (a + b + 3 * c):= by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  have h\u2083 : Real.sqrt (9 * a^2 + b^2 + c^2 + 18 * a * b + 18 * b * c - 6 * c * a) \u2264 3 * (3 * a + b + c):= by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  nlinarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_8130_plus (n : \u2115) (hn : 0 < n) : \u2211 k in Finset.range (n + 1), 1 / (m + k + 1) * (n.choose k) \u2264 (n + 1) * \u2211 k in Finset.range (n + 1), n.choose k  := by", "target": "\n  have h\u2081 : \u2200 k \u2208 Finset.range (n + 1), 1 / (m + k + 1) * (n.choose k) \u2264 n.choose k := by\n    intro k hk\n    have : 1 / (m + k + 1) \u2264 1 := by\n      apply Nat.div_le_self\n    nlinarith\n  calc\n    \u2211 k in Finset.range (n + 1), 1 / (m + k + 1) * (n.choose k) \u2264 \u2211 k in Finset.range (n + 1), n.choose k := Finset.sum_le_sum h\u2081\n    _ = \u2211 k in Finset.range (n + 1), n.choose k := rfl\n    _ \u2264 (n + 1) * \u2211 k in Finset.range (n + 1), n.choose k := by\n      cases n\n      \u00b7 simp_all\n      \u00b7 exact Nat.le_mul_of_pos_left _ (by positivity)"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_9331_plus (a b c : \u211d) (habc : a * b * c = 1) : \u2203 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a * b * c = 1 \u2227 (b + c) / (b ^ 2 + c ^ 2 + a) + (c + a) / (c ^ 2 + a ^ 2 + b) + (a + b) / (a ^ 2 + b ^ 2 + c) \u2264 2 \u2227 (\u2203 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2227 x * y * z = 1 \u2227 1 / (x ^ 2 + y ^ 2 + z) \u2265 1 / (x + y + z)) := by", "target": "\n  refine' \u27e81, 1, 1, by norm_num, by norm_num, by norm_num, by norm_num, by norm_num, _\u27e9\n  refine' \u27e81, 1, 1, by norm_num, by norm_num, by norm_num, by norm_num\u27e9\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_41823_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a + b + c = 1) (h\u2083 : 0 \u2264 a * b) (h\u2084 : 0 \u2264 a * c) (h\u2085 : 0 \u2264 b * c) : a * b * c * (a ^ 2 + b ^ 2 + c ^ 2) \u2264 1 / 9 \u2227 a * b * c * (a ^ 2 + b ^ 2 + c ^ 2) \u2264 (a + b + c) ^ 2 / 3:= by", "target": "\n  have : (a + b + c) ^ 2 = 1 := by simp [h\u2082]\n  have h\u2086 : 0 \u2264 a * b * c := by\n    nlinarith\n  have h\u2087 : a * b * c * (a ^ 2 + b ^ 2 + c ^ 2) \u2264 1 / 9 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n      mul_self_nonneg (a + b + c), mul_self_nonneg (a + b + c - 2 * a),\n      mul_self_nonneg (a + b + c - 2 * b), mul_self_nonneg (a + b + c - 2 * c)]\n  have h\u2088 : a * b * c * (a ^ 2 + b ^ 2 + c ^ 2) \u2264 (a + b + c) ^ 2 / 3 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n      mul_self_nonneg (a + b + c), mul_self_nonneg (a + b + c - 2 * a),\n      mul_self_nonneg (a + b + c - 2 * b), mul_self_nonneg (a + b + c - 2 * c)]\n  exact \u27e8h\u2087, h\u2088\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_24826_plus (f : \u2115 \u2192 \u2115) (hf: f 1 = 2 \u2227 f 2 = 0 \u2227 \u2200 k, f (3 * k) = 3 * f k + 1 \u2227 f (3 * k + 1) = 3 * f k + 2 \u2227 f (3 * k + 2) = 3 * f k) : \u2203 n, f n \u2264 n \u2228 f n = n \u2228 n < f n \u2228 \u2203 k : \u2115, f k \u2264 k \u2228 \u2203 k : \u2115, k \u2264 f k \u2228 \u2203 k : \u2115, k < f k := by", "target": "\n  use 1\n  have h1 := hf.1\n  have h2 := hf.2.1\n  have h3 := hf.2.2 0\n  simp at h1 h2 h3\n  omega\n  <;> aesop"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1486 (a b : \u211d) (ha : 0 < a) (hb : 0 < b) (hab : a + b = 1) : (2 + a) / (2 - a) + (2 + b) / (2 - b) \u2265 10 / 3 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1486_plus (a b : \u211d) (hab : a + b = 1) (h : 0 < a \u2227 0 < b) : a ^ 2 / (1 + a ^ 2) + b ^ 2 / (1 + b ^ 2) \u2265 2 * a * b / 2 \u2227 a ^ 2 / (1 + a ^ 2) + b ^ 2 / (1 + b ^ 2) \u2265 (a + b) ^ 2 / 4:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_32959_plus (x k : \u211d) (h\u2081 : \u2016x\u2016 \u2264 1 \u2227 \u2016k\u2016 \u2264 1) : 3 * \u2016x - k\u2016 * \u2016x + k\u2016 \u2264 12 \u2227 3 * \u2016x - k\u2016 * \u2016x + k\u2016 \u2265 0 \u2227 3 * \u2016x - k\u2016 * \u2016x + k\u2016 \u2264 3 * (\u2016x\u2016 + \u2016k\u2016) * (\u2016x\u2016 + \u2016k\u2016):= by", "target": "\n  have h\u2082 : \u2016x - k\u2016 \u2264 \u2016x\u2016 + \u2016k\u2016 := by\n    exact norm_sub_le _ _\n  have h\u2083 : \u2016x + k\u2016 \u2264 \u2016x\u2016 + \u2016k\u2016 := by\n    exact norm_add_le _ _\n  have h\u2084 : 0 \u2264 \u2016x - k\u2016 := by\n    exact norm_nonneg _\n  have h\u2085 : 0 \u2264 \u2016x + k\u2016 := by\n    exact norm_nonneg _\n  have h\u2086 : 0 \u2264 \u2016x\u2016 + \u2016k\u2016 := by\n    exact add_nonneg (norm_nonneg _) (norm_nonneg _)\n  have h\u2087 : 0 \u2264 3 * \u2016x - k\u2016 * \u2016x + k\u2016 := by\n    exact mul_nonneg (mul_nonneg (by norm_num) (norm_nonneg _)) (norm_nonneg _)\n  have h\u2088 : 3 * \u2016x - k\u2016 * \u2016x + k\u2016 \u2264 3 * (\u2016x\u2016 + \u2016k\u2016) * (\u2016x\u2016 + \u2016k\u2016) := by\n    nlinarith\n  exact \u27e8by nlinarith, by nlinarith, h\u2088\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3261 (f : \u2124 \u2192 \u2124) (h\u2081 : f (-1) = f 1 + 2 * f (-1) * f 0) : f (-1) = 1 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3261_plus (f : \u2124 \u2192 \u2124) (h\u2081 : \u2200 x, f x * f x = x) (h\u2082 : f 1 = 0 \u2228 \u2203 x, f x \u2260 0) : \u2203 x, f x \u2260 0 \u2228 \u2200 x, f x = 0 \u2228 x * x = 0 \u2228 x = 1 \u2228 x = -1 \u2228 x = 2 \u2228 x = -2 \u2228 x = 3 \u2228 x = -3 \u2228 x = 4 \u2228 x = -4 \u2228 x = 5 \u2228 x = -5 \u2228 x = 6 \u2228 x = -6 \u2228 x = 7 \u2228 x = -7 \u2228 x = 8 \u2228 x = -8 \u2228 x = 9 \u2228 x = -9 \u2228 x = 10 \u2228 x = -10 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4059 : \u2200 x y : \u211d, (x^2 + y^2 + 2) / (x^2 + 1) / (y^2 + 1) \u2265 (10 * x * y + 7) / (x * y + 1) / (2 * x * y + 5) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4059_plus : \u2200 a b : \u211d, (\u2203 x y : \u211d, a = x^2 + y^2 + 2 \u2227 b = x^2 + 1 \u2227 0 \u2264 x * y) \u2228 (\u2203 x y : \u211d, a = x^2 + y^2 + 2 \u2227 b = y^2 + 1 \u2227 0 \u2264 x * y) \u2192 \u2203 x y : \u211d, a = x^2 + y^2 + 2 \u2227 b = x^2 + 1 \u2227 0 \u2264 x * y \u2228 a = x^2 + y^2 + 2 \u2227 b = y^2 + 1 \u2227 0 \u2264 x * y := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_17186_plus (a b c : \u211d) (habc : a * b * c = 1) (h : 1 / a + 1 / b + 1 / c = 1) (h\u2081 : 0 < a \u2227 0 < b \u2227 0 < c)  (h\u2082 : a \u2264 1 \u2227 b \u2264 1 \u2227 c \u2264 1) : a * Real.sqrt (b * c) + b * Real.sqrt (a * c) + c * Real.sqrt (a * b) \u2264 3 \u2227 a * Real.sqrt (b * c) + b * Real.sqrt (a * c) + c * Real.sqrt (a * b) \u2265 1:= by", "target": "\n  have h\u2083 : 0 < b * c := by nlinarith\n  have h\u2084 : 0 < a * c := by nlinarith\n  have h\u2085 : 0 < a * b := by nlinarith\n  constructor\n  all_goals\n    field_simp [h\u2081.1.ne', h\u2081.2.1.ne', h\u2081.2.2.ne'] at h \u22a2\n    nlinarith [sq_nonneg (a * b - 1), sq_nonneg (b * c - 1), sq_nonneg (c * a - 1),\n      sq_nonneg (a * b * c), sq_nonneg (a * Real.sqrt (b * c) - 1), sq_nonneg (b * Real.sqrt (a * c) - 1),\n      sq_nonneg (c * Real.sqrt (a * b) - 1)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_491_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a + b + c \u2264 3) (h\u2083 : a * b + b * c + c * a \u2264 3) : a ^ 4 + b ^ 4 + c ^ 4 + a ^ 3 * b + b ^ 3 * c + c ^ 3 * a + a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2 \u2265 4 * (a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2) \u2228 (a - b) ^ 2 * (a - c) ^ 2 * (b - c) ^ 2 \u2265 0 \u2228 (a + b) ^ 2 * (b + c) ^ 2 * (c + a) ^ 2 \u2265 0 \u2228 (a - b) ^ 2 * (b - c) ^ 2 * (c - a) ^ 2 \u2265 0 \u2228 (a + b) ^ 2 * (b + c) ^ 2 * (c + a) ^ 2 \u2265 0:= by", "target": "\n  by_contra! h\n  nlinarith [mul_nonneg h\u2081.1 h\u2081.2.1, mul_nonneg h\u2081.2.1 h\u2081.2.2, mul_nonneg h\u2081.1 h\u2081.2.2,\n    mul_nonneg (sq_nonneg (a - b)) (sq_nonneg (b - c)), mul_nonneg (sq_nonneg (b - c)) (sq_nonneg (c - a)),\n    mul_nonneg (sq_nonneg (c - a)) (sq_nonneg (a - b))]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_32989_plus (a b c : \u211d) (habc : a * b * c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0) : \u2203 (x y z : \u211d), 1 / x + 1 / y + 1 / z \u2265 9 \u2227 x * y * z \u2264 1:= by", "target": "\n  use 1/3, 1/3, 1/3\n  constructor <;> norm_num [habc, h]\n  <;> linarith\n  <;> norm_num [habc, h]\n  <;> linarith\n  <;> norm_num [habc, h]\n  <;> linarith\n  <;> norm_num [habc, h]\n  <;> linarith\n  <;> norm_num [habc, h]\n  <;> linarith\n  <;> norm_num [habc, h]\n  <;> linarith\n  <;> norm_num [habc, h]\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_77026_plus : \u2200 a b c : \u211d, a * b * c * (a + b + c) \u2264 max (a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2) (a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2 + 3 * (a ^ 2 * b ^ 2 * c ^ 2)) \u2228 \u2203 a b c : \u211d, a * b * c * (a + b + c) > a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2 \u2227 a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2 + 3 * (a ^ 2 * b ^ 2 * c ^ 2) \u2264 a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2 + 3 * (a ^ 2 * b ^ 2 * c ^ 2):= by", "target": "\n  intro a b c\n  apply or_iff_not_imp_right.mpr\n  intro h\n  simp_all\n  <;> nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a),\n    mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b),\n    mul_self_nonneg (a * b + b * c), mul_self_nonneg (b * c + c * a), mul_self_nonneg (c * a + a * b)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_4085_plus (a b c d : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hd : 0 \u2264 d) (habc : a + b + c + d = 1) : a * b * d ^ 2 * c ^ 2 + b * c * a ^ 2 * d ^ 2 + c * d * b ^ 2 * a ^ 2 + d * a * c ^ 2 * b ^ 2 \u2264 1:= by", "target": "\n  have h\u2080 : 0 \u2264 a * b := by positivity\n  have h\u2081 : 0 \u2264 c * d := by positivity\n  have h\u2082 : 0 \u2264 a * b * d := by positivity\n  have h\u2083 : 0 \u2264 c * d * b := by positivity\n  have h\u2084 : 0 \u2264 a * b * d * c := by positivity\n  have h\u2085 : 0 \u2264 c * d * b * a := by positivity\n  have h\u2086 : a * b * d ^ 2 * c ^ 2 + b * c * a ^ 2 * d ^ 2 + c * d * b ^ 2 * a ^ 2 + d * a * c ^ 2 * b ^ 2 \u2264 1 := by\n    calc\n      a * b * d ^ 2 * c ^ 2 + b * c * a ^ 2 * d ^ 2 + c * d * b ^ 2 * a ^ 2 + d * a * c ^ 2 * b ^ 2 \u2264\n          a * b * 1 ^ 2 * 1 ^ 2 + b * c * 1 ^ 2 * 1 ^ 2 + c * d * 1 ^ 2 * 1 ^ 2 + d * a * 1 ^ 2 * 1 ^ 2 := by\n        gcongr <;> nlinarith\n      _ = a * b + b * c + c * d + d * a := by ring\n      _ \u2264 1 := by nlinarith\n  exact h\u2086"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_25523_plus (n : \u2115) (hn : 2 \u2264 n) : \u2211 k in Finset.Ico 2 n, 1 / (k * (k + 1)) \u2264 1:= by", "target": "\n  have : \u2200 k \u2208 Finset.Ico 2 n, 1 / (k * (k + 1)) = 0 := by\n    intro k hk\n    rw [Finset.mem_Ico] at hk\n    have : 1 < k := by linarith\n    have : 1 < k + 1 := by linarith\n    have : k * (k + 1) > 1 := by nlinarith\n    rw [Nat.div_eq_of_lt (by nlinarith)]\n  rw [Finset.sum_eq_zero (this)]\n  simp\n  <;> assumption"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4029 : \u2200 x y z : \u211d, (x ^ 5 + y ^ 5 + z ^ 5) * (x + y + z) \u2265 (x ^ 2 + y ^ 2 + z ^ 2) * (x ^ 4 + y ^ 4 + z ^ 4) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4029_plus : \u2200 a b c : \u211d, a * b > 0 \u2227 b * c > 0 \u2227 c * a > 0 \u2227 a + b + c = 3 \u2227 (a ^ 2 + b ^ 2 + c ^ 2) \u2264 9 \u2192 a ^ 3 * b ^ 3 * c ^ 3 \u2264 27 \u2227 a ^ 4 * b ^ 4 * c ^ 4 \u2264 81:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5228 : \u2200 n : \u2115, \u2211 i in Finset.range n, Real.sqrt i \u2264 n * Real.sqrt n := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5228_plus : \u2200 n : \u2115, (\u2211 k in Finset.range n, 1/(Real.sqrt k)) \u2264 2 * \u2211 k in Finset.range n, Real.sqrt k := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1913 (x y z : \u211d) : (x^4*y + y) + (y^4*z + z) + (z^4*x + x) + x*y*z*(x^3 + y^3 + z^3) \u2265 3*x*y*z*(x + y + z) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1913_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) : x ^ 2 * y ^ 2 * z ^ 2 + x ^ 2 * y ^ 2 + y ^ 2 * z ^ 2 + z ^ 2 * x ^ 2 + x * y * z * (x * y + y * z + z * x) + x * y * z * (x + y + z) \u2265 0 \u2227 x * y * z * (x + y + z) \u2265 0 \u2227 x * y * z * (x + y + z) \u2265 0 \u2227 x * y * z * (x + y + z) \u2265 0 \u2227 x * y * z * (x + y + z) \u2265 0 \u2227 x * y * z * (x + y + z) \u2265 0 \u2227 x * y * z * (x + y + z) \u2265 0 \u2227 x * y * z * (x + y + z) \u2265 0 \u2227 x * y * z * (x + y + z) \u2265 0 \u2227 x * y * z * (x + y + z) \u2265 0 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_58160_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c \u2264 3) : a * b ^ 2 * c ^ 2 + b * c ^ 2 * a ^ 2 + c * a ^ 2 * b ^ 2 \u2264 3 * (a + b + c) * (a ^ 2 + b ^ 2 + c ^ 2):= by", "target": "\n  have h1 : 0 \u2264 a * b := by positivity\n  have h2 : 0 \u2264 b * c := by positivity\n  have h3 : 0 \u2264 c * a := by positivity\n  have h4 : 0 \u2264 a * b * c := by positivity\n  have h5 : 0 \u2264 a * b * c * (a + b + c) := by positivity\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> linarith\n  <;> linarith\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_1831_plus (p q r : \u211d) (hp : p = a + b + c) (hq : q = a * b + b * c + c * a) (hr : r = a * b * c) (h : 0 < a \u2227 0 < b \u2227 0 < c) : a * b * c \u2264 (a^2 + b^2 + c^2) * (b^2 + a^2 + c^2) * (c^2 + a^2 + b^2) / (9 * (a * b * c)) \u2228 (a * b * c \u2264 0 \u2228 0 \u2264 a * b * c \u2227 (a * b * c) * (b^2 + a^2 + c^2) * (c^2 + a^2 + b^2) \u2265 0):= by", "target": "\n  rcases h with \u27e8h\u2081, h\u2082, h\u2083\u27e9\n  apply Or.inr\n  apply Or.inr\n  refine' \u27e8by positivity, _\u27e9\n  positivity"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4843 (n : \u2115) (k : \u211d) : (\u220f i in Finset.range n, (x - i)) = k \u2192 \u2203 x, (\u220f i in Finset.range n, (x - i)) = k := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4843_plus (n : \u2115) (k : \u211d) : \u2203 x, \u220f i in Finset.range n, (x - i) \u2265 k \u2228 \u220f i in Finset.range n, (x - i) \u2264 k \u2228 \u220f i in Finset.range n, (x - i) = k \u2228 \u220f i in Finset.range n, (x - i) > k \u2228 \u220f i in Finset.range n, (x - i) < k := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_27141_plus : \u2200 a b c d : \u211d, a \u2208 Set.Icc 1 2 \u2227 b \u2208 Set.Icc 1 2 \u2227 c \u2208 Set.Icc 1 2 \u2227 d \u2208 Set.Icc 1 2 \u2192 a * b * c * d \u2264 1 \u2227 a * b * c * d \u2265 1 \u2192 a * b * c * d = 1 \u2228 a * b * c * d = 1 \u2228 a * b * c * d = 1 \u2228 a * b * c * d = 1 \u2228 a * b * c * d = 1 \u2228 a * b * c * d = 1 \u2228 a * b * c * d = 1 \u2228 a * b * c * d = 1 \u2228 a * b * c * d = 1 \u2228 a * b * c * d = 1 \u2228 a * b * c * d = 1 \u2228 a * b * c * d = 1 := by", "target": "\n  rintro a b c d \u27e8\u27e8ha1, ha2\u27e9, \u27e8hb1, hb2\u27e9, \u27e8hc1, hc2\u27e9, \u27e8hd1, hd2\u27e9\u27e9 \u27e8habc, habd\u27e9\n  have : a * b * c * d = 1 := by\n    nlinarith [mul_nonneg (sub_nonneg.mpr ha1) (sub_nonneg.mpr ha2),\n      mul_nonneg (sub_nonneg.mpr hb1) (sub_nonneg.mpr hb2),\n      mul_nonneg (sub_nonneg.mpr hc1) (sub_nonneg.mpr hc2),\n      mul_nonneg (sub_nonneg.mpr hd1) (sub_nonneg.mpr hd2),\n      mul_nonneg (sub_nonneg.mpr ha1) (sub_nonneg.mpr hb1),\n      mul_nonneg (sub_nonneg.mpr ha2) (sub_nonneg.mpr hb2),\n      mul_nonneg (sub_nonneg.mpr ha1) (sub_nonneg.mpr hc1),\n      mul_nonneg (sub_nonneg.mpr ha2) (sub_nonneg.mpr hc2),\n      mul_nonneg (sub_nonneg.mpr hb1) (sub_nonneg.mpr hd1),\n      mul_nonneg (sub_nonneg.mpr hb2) (sub_nonneg.mpr hd2),\n      mul_nonneg (sub_nonneg.mpr hc1) (sub_nonneg.mpr hd1),\n      mul_nonneg (sub_nonneg.mpr hc2) (sub_nonneg.mpr hd2)]\n  simp_all"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2100 (a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (hab : a + b + c = 3) : |(a - b) * (b - c) * (c - a)| \u2264 (3 * Real.sqrt 3) / 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2100_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 3) (h\u2082 : (1 - a) * (1 - b) * (1 - c) \u2265 0) : (1 - a) * (1 - b) * (1 - c) * (a * b + b * c + c * a) \u2264 27 / 2 \u2227 (1 - a) * (1 - b) * (1 - c) * (a * b + b * c + c * a) \u2265 0:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_8208_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) : Real.sqrt (a^2 + 1) / (a + 1) + Real.sqrt (b^2 + 1) / (b + 1) + Real.sqrt (c^2 + 1) / (c + 1) \u2265 3 / 2 - 3 * (a * b + b * c + c * a) / 2:= by", "target": "\n  have h\u2081 : \u2200 x : \u211d, 0 < x \u2192 Real.sqrt (x ^ 2 + 1) / (x + 1) \u2265 1 / 2 := by\n    intro x hx\n    rw [ge_iff_le, le_div_iff (by positivity)]\n    nlinarith [Real.sqrt_nonneg (x ^ 2 + 1), Real.sq_sqrt (by positivity : 0 \u2264 x ^ 2 + 1),\n      sq_nonneg (x - 1)]\n  nlinarith [h\u2081 a hab, h\u2081 b hbc, h\u2081 c hca]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_2073_plus (a b c d : \u211d) (hab : 0 < a) (hbc : 0 < b) (hcd : 0 < c) (hda : 0 < d) (habc : a * b * c * d = 1) : Real.sqrt (a ^ 2 + 1) * Real.sqrt (b ^ 2 + 1) * Real.sqrt (c ^ 2 + 1) * Real.sqrt (d ^ 2 + 1) \u2265 (a * b * c * d) + 1:= by", "target": "\n  have : Real.sqrt (a ^ 2 + 1) * Real.sqrt (b ^ 2 + 1) * Real.sqrt (c ^ 2 + 1) * Real.sqrt (d ^ 2 + 1) = Real.sqrt ((a ^ 2 + 1) * (b ^ 2 + 1) * (c ^ 2 + 1) * (d ^ 2 + 1)) := by\n    rw [Real.sqrt_mul, Real.sqrt_mul, Real.sqrt_mul] <;> positivity\n  rw [this]\n  apply Real.le_sqrt_of_sq_le\n  nlinarith [sq_nonneg (a * b * c * d), sq_nonneg (a * b * c), sq_nonneg (a * b), sq_nonneg a,\n    sq_nonneg (c * d), sq_nonneg c, sq_nonneg d, sq_nonneg (a * b - c * d), sq_nonneg (a - b),\n    sq_nonneg (c - d)]\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_303 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^2 - b^2) / (a^2 + b^2) * a + (b^2 - c^2) / (b^2 + c^2) * b + (c^2 - a^2) / (c^2 + a^2) * c \u2265 0 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_303_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) : Real.sqrt (a^2 + 1) * (b^2 + 1) * (c^2 + 1) \u2265 a * b * c * (Real.sqrt 2):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_55043_plus : \u2200 p x : \u2115, 1 \u2264 p \u2192 3^p \u2264 x \u2227 x < 2 * 3^p \u2192 2 * 3^p + (x - 3^p) \u2264 x + 3^p \u2228 x + 3^p < 2 * 3^p + (x - 3^p):= by", "target": "\n  rintro p x h\u2080 h\u2081\n  by_cases h\u2082 : 2 * 3^p + (x - 3^p) \u2264 x + 3^p\n  exact Or.inl h\u2082\n  exact Or.inr (by omega)"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_77632_plus : \u2200 (n : \u2115) (a x : \u2115 \u2192 \u211d), (\u2200 i, 0 < a i) \u2227 (\u2200 i, 0 < x i) \u2192 \u2211 i in Finset.range n, (a i * x (i + 1)) \u2264 (\u2211 i in Finset.range n, a i) * (\u2211 i in Finset.range n, x (i + 1)) \u2228 (\u2211 i in Finset.range n, a i) * (\u2211 i in Finset.range n, x (i + 1)) \u2264 \u2211 i in Finset.range n, (a i * x (i + 1)) := by", "target": "\n  rintro n a x \u27e8ha, hx\u27e9\n  apply le_total\n  <;> simp [Finset.sum_mul, Finset.mul_sum, mul_assoc, mul_comm, mul_left_comm]\n  <;> nlinarith [ha n, hx n]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_7508_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : 0 < x * y * z) (h' : x * y * z = 1) : 2 * (x ^ 2 + y ^ 2 + z ^ 2) * (1 / x ^ 2 + 1 / y ^ 2 + 1 / z ^ 2) \u2265 9 \u2227 (x ^ 4 + y ^ 4 + z ^ 4) * (1 / x ^ 4 + 1 / y ^ 4 + 1 / z ^ 4) \u2265 9:= by", "target": "\n  have h1 : 0 < x ^ 2 := by positivity\n  have h2 : 0 < y ^ 2 := by positivity\n  have h3 : 0 < z ^ 2 := by positivity\n  have h4 : 0 < x ^ 2 * y ^ 2 := by positivity\n  have h5 : 0 < y ^ 2 * z ^ 2 := by positivity\n  have h6 : 0 < x ^ 2 * z ^ 2 := by positivity\n  have h7 : 0 < x ^ 2 * y ^ 2 * z ^ 2 := by positivity\n  constructor\n  \u00b7 field_simp [h1, h2, h3, h4, h5, h6, h7]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (x ^ 2 - z ^ 2), sq_nonneg (y ^ 2 - z ^ 2),\n      sq_nonneg (x ^ 2 * y ^ 2 - y ^ 2 * z ^ 2), sq_nonneg (y ^ 2 * z ^ 2 - x ^ 2 * z ^ 2),\n      sq_nonneg (x ^ 2 * z ^ 2 - x ^ 2 * y ^ 2)]\n  \u00b7 field_simp [h1, h2, h3, h4, h5, h6, h7]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (x ^ 2 - z ^ 2), sq_nonneg (y ^ 2 - z ^ 2),\n      sq_nonneg (x ^ 2 * y ^ 2 - y ^ 2 * z ^ 2), sq_nonneg (y ^ 2 * z ^ 2 - x ^ 2 * z ^ 2),\n      sq_nonneg (x ^ 2 * z ^ 2 - x ^ 2 * y ^ 2)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_48687_plus (f : \u211d \u2192 \u211d) (hf: \u2200 x, f x = x^2) : (\u2203 k:\u211d, \u2200 x, f x = k * x \u2228 \u2200 x, f x = k * x^2) \u2194 \u2203 k:\u211d, \u2200 x, f x = k * x^2 := by", "target": "\n  constructor\n  intro h\n  obtain \u27e8k, hk\u27e9 := h\n  use 1\n  intro x\n  simp_all [hf]\n  <;> ring_nf\n  <;> aesop\n  intro h\n  obtain \u27e8k, hk\u27e9 := h\n  use 1\n  intro x\n  simp_all [hf]\n  <;> ring_nf\n  <;> aesop"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_985 (a b : \u211d) : a ^ 4 + b ^ 4 + 1 / 12 \u2265 a * b * (1 - a * b) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_985_plus (a b : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b) (h : a + b \u2264 1) : a ^ 4 + b ^ 4 + 1 / 12 \u2265 a * b * (1 - a * b) \u2227 1 - (a + b) ^ 2 \u2265 0 \u2227 (a * b) ^ 2 \u2264 1:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_14642_plus (a b c : \u211d) (habc : a * b * c = 1) (h : a^2 + b^2 + c^2 = 3) : a * b * c * (a^3 + b^3 + c^3) \u2264 a * b * c * (a * b * c) * (a^2 + b^2 + c^2):= by", "target": "\n  simp_all only [mul_assoc]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a^2 - b^2), mul_self_nonneg (b^2 - c^2),\n    mul_self_nonneg (c^2 - a^2), mul_self_nonneg (a * b),\n    mul_self_nonneg (b * c), mul_self_nonneg (c * a)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_25804_plus (x : \u211d) (hx : 0 < x \u2227 x < Real.pi / 4) :\n  (sin x + cos x)^(sin x + cos x) \u2264 2 ^ (sin x + cos x):= by", "target": "\n  have h\u2080 : 0 < sin x := Real.sin_pos_of_pos_of_lt_pi hx.1 (by linarith : x < Real.pi)\n  have h\u2081 : 0 < cos x := Real.cos_pos_of_mem_Ioo \u27e8by linarith, by linarith [hx.2]\u27e9\n  have h\u2082 : 0 < sin x + cos x := add_pos h\u2080 h\u2081\n  have h\u2083 : sin x + cos x \u2264 2 := by\n    have h\u2084 : sin x + cos x \u2264 1 + 1 := by\n      nlinarith [Real.sin_sq_add_cos_sq x, sq_nonneg (sin x - cos x)]\n    linarith\n  exact rpow_le_rpow (by positivity) (by linarith) (by linarith)\n  <;> assumption\n  <;> assumption\n  <;> assumption"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_28566_plus (a b c : \u211d) (habc : a + b + c = 3) (h : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (hab : 0 \u2264 a * b) (hbc : 0 \u2264 b * c) (hca : 0 \u2264 c * a) : (1 / (a + b + c)) * (1 / (1 + a ^ 2 + b ^ 2 + c ^ 2)) \u2264 1 / 2 \u2227 (1 / (1 + a ^ 2 + b ^ 2 + c ^ 2)) \u2264 1 / 2 \u2227 (1 / (a + b + c)) \u2264 1 / 2  := by", "target": "\n  have : a + b + c = 3 := habc\n  have h\u2081 : (1 / (a + b + c)) * (1 / (1 + a ^ 2 + b ^ 2 + c ^ 2)) \u2264 1 / 2 := by\n    rw [this]\n    field_simp\n    rw [div_le_div_iff] <;> norm_num <;>\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  have h\u2082 : (1 / (1 + a ^ 2 + b ^ 2 + c ^ 2)) \u2264 1 / 2 := by\n    have : 1 + a ^ 2 + b ^ 2 + c ^ 2 \u2265 2 := by\n      nlinarith [sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1)]\n    rw [div_le_iff] <;> norm_num <;>\n    nlinarith\n  have h\u2083 : (1 / (a + b + c)) \u2264 1 / 2 := by\n    rw [this]\n    norm_num\n  exact \u27e8h\u2081, h\u2082, h\u2083\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2628 (a b c : \u211d) (h1 : a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1): a ^ 2 + b ^ 2 + c ^ 2 \u2265 a + b + c := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2628_plus (a b c : \u211d) (habc : a * b * c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0) : (a ^ 2 + b ^ 2 + c ^ 2) ^ 2 \u2265 3 * (a ^ 2 * b ^ 2 * c ^ 2):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_240 (x y : \u211d) : 2 * (x + y) ^ 8 + x ^ 4 * y ^ 4 - x ^ 5 * y ^ 3 - x ^ 3 * y ^ 5 \u2265 0 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_240_plus (x y : \u211d) (h\u2081 : 0 \u2264 x \u2227 0 \u2264 y) (h\u2082 : x + y \u2264 1) : x ^ 10 + y ^ 10 + x ^ 8 * y ^ 2 + x ^ 2 * y ^ 8 \u2264 1 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1071 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 3) : (ab / Real.sqrt (3 + a ^ 4) + bc / Real.sqrt (3 + b ^ 4) + ca / Real.sqrt (3 + c ^ 4)) \u2264 (Real.sqrt 3 / 2) * Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1071_plus (a b c : \u211d) (habc : a + b + c = 3) (h : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (hab : 0 \u2264 a * b) (hbc : 0 \u2264 b * c) (hca : 0 \u2264 c * a) : (1 / (a + 1) ^ 2 + 1 / (b + 1) ^ 2 + 1 / (c + 1) ^ 2) \u2265 3 / (3 * (a + b + c + 3)) \u2227 (1 / (a + 1) ^ 2 + 1 / (b + 1) ^ 2 + 1 / (c + 1) ^ 2) \u2265 3 / (3 * (a + b + c + 3)) ^ 2 := by\n</hard theorem>"}]