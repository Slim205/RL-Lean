[{"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_75090_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) :  (x * y + y * z + z * x) * (x * y + y * z + z * x) * (x * y + y * z + z * x) \u2264 (x * x + y * y + z * z) * (x * x + y * y + z * z) * (x * x + y * y + z * z):= by", "target": "\n  have h1 : 0 \u2264 x * y := mul_nonneg hx hy\n  have h2 : 0 \u2264 y * z := mul_nonneg hy hz\n  have h3 : 0 \u2264 z * x := mul_nonneg hz hx\n  have h4 : 0 \u2264 x * y + y * z + z * x := by positivity\n  have h5 : 0 \u2264 x * x + y * y + z * z := by positivity\n  nlinarith [sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y),\n    mul_nonneg h1 h2, mul_nonneg h2 h3, mul_nonneg h3 h1,\n    mul_nonneg (sq_nonneg (x - y)) (sq_nonneg (y - z)),\n    mul_nonneg (sq_nonneg (y - z)) (sq_nonneg (z - x)),\n    mul_nonneg (sq_nonneg (z - x)) (sq_nonneg (x - y))]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_5849_plus (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x + y < 1) : Real.sqrt (x^2 + 1) + Real.sqrt (y^2 + 1) + Real.sqrt ((x + y)^2 + 1) \u2265 3 / 2 * (x + y + 1):= by", "target": "\n  have h\u2080 : Real.sqrt (x^2 + 1) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2081 : Real.sqrt (y^2 + 1) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2082 : Real.sqrt ((x + y)^2 + 1) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  nlinarith [sq_sqrt (show (x^2 + 1 : \u211d) \u2265 0 by nlinarith),\n    sq_sqrt (show (y^2 + 1 : \u211d) \u2265 0 by nlinarith),\n    sq_sqrt (show ((x + y)^2 + 1 : \u211d) \u2265 0 by nlinarith)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_22433_plus (a b c d : \u211d) (hab : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) (habc : a + b + c + d = 1) (habd : a * b + a * d + c * d + b * d \u2264 1) (hcd : a * b * c * d \u2264 1 / 4) : Real.sqrt (1 + a * b * c * d) * (a * b + c * d) + Real.sqrt (1 + a * b * c * d) * (a * d + b * c) \u2264 2 * Real.sqrt (1 + a * b * c * d):= by", "target": "\n  have h\u2080 : 0 \u2264 a * b := by positivity\n  have h\u2081 : 0 \u2264 c * d := by positivity\n  have h\u2082 : 0 \u2264 a * d := by positivity\n  have h\u2083 : 0 \u2264 b * c := by positivity\n  have h\u2084 : 0 \u2264 a * b * c * d := by positivity\n  have h\u2085 : 0 \u2264 Real.sqrt (1 + a * b * c * d) := by positivity\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 1 + a * b * c * d from by positivity),\n    sq_nonneg (a * b + c * d - Real.sqrt (1 + a * b * c * d)),\n    sq_nonneg (a * d + b * c - Real.sqrt (1 + a * b * c * d))]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_5085_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 1) : (x * y) / (y + z) + (y * z) / (z + x) + (z * x) / (x + y) \u2265 (x * y + y * z + z * x) / 2:= by", "target": "\n  have h1 : 0 < y + z := by linarith\n  have h2 : 0 < z + x := by linarith\n  have h3 : 0 < x + y := by linarith\n  have h4 : 0 < y * z := by positivity\n  have h5 : 0 < z * x := by positivity\n  have h6 : 0 < x * y := by positivity\n  have h7 : 0 < (y + z) * (z + x) * (x + y) := by positivity\n  have h8 : 0 < y * z * (x + y) + z * x * (y + z) + x * y * (z + x) := by positivity\n  have h9 : 0 < y * z * (x + y) * (z + x) + z * x * (y + z) * (x + y) + x * y * (z + x) * (y + z) := by positivity\n  have h10 : (x * y) / (y + z) + (y * z) / (z + x) + (z * x) / (x + y) \u2265 (x * y + y * z + z * x) / 2 := by\n    field_simp [h1, h2, h3, h4, h5, h6, h7, h8, h9]\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n      mul_self_nonneg (x * y - y * z), mul_self_nonneg (y * z - z * x), mul_self_nonneg (z * x - x * y)]\n  linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_18684_plus (n : \u2115) (hn : 1 < n) : (\u2203 k : \u211d, \u2200 x : \u211d, \u2203 y : \u211d, (x ^ 2 + 1) ^ n \u2265 (x * y) ^ n) \u2228 \u2203 k : \u211d, \u2200 x : \u211d, (x ^ 2 + 1) ^ n \u2265 (x + k) ^ n:= by", "target": "\n  apply Or.inl\n  use 0\n  intro x\n  use x\n  have h1 : (x ^ 2 + 1) ^ n \u2265 (x * x) ^ n := by\n    have h1 : x * x \u2264 x ^ 2 + 1 := by\n      nlinarith [sq_nonneg (x - 1)]\n    exact pow_le_pow_of_le_left (by nlinarith) h1 n\n  nlinarith\n  <;> assumption\n  <;> simp_all"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_33849_plus (f : \u211d \u2192 \u211d) (hf : Continuous f) (h : \u2200 x, f x * f (f x) = 1) (h' : f 1000 = 999) : \u2203 x, f x = 1/999 \u2228 \u2203 x, f x = 999:= by", "target": "\n  use 1000\n  rw [h']\n  have h1 := h 1000\n  have h2 := h 999\n  norm_num at h1 h2\n  aesop"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_658 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (9 / 4 - (x / (x + y) + y / (y + z) + z / (z + x)) * (y / (x + y) + z / (y + z) + x / (z + x))) \u2265 0 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_658_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \u2203 a : \u211d, a \u2208 Set.Ioo 0 (1 : \u211d) \u2227 a \u2264 (x / (x + y) + y / (y + z) + z / (z + x)) * (y / (x + y) + z / (y + z) + x / (z + x)):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_70 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : 3 / 2 \u2264 a / (a + b) + b / (c + a) + c / (a + b) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_70_plus (a b c : \u211d) (hab : 0 < a) (h : 0 < b) (hc : 0 < c) : a * b * c > 0 \u2227 (\u2203 x y z : \u211d, x * y * z > 0 \u2227 x + y + z = a + b + c \u2227 (x + y) ^ 2 * (y + z) ^ 2 * (z + x) ^ 2 \u2265 (x * y * z) * (a * b * c)):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_21566_plus : \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 3 \u2192 a * b * c * (a + b + c) + a * b * (a + b) * (b + c) * (c + a) + b * c * (b + c) * (c + a) * (a + b) + c * a * (c + a) * (a + b) * (b + c) \u2265 3 * (a * b * c * (a + b + c)) := by", "target": "\n  rintro a b c \u27e8h1, h2, h3, h4\u27e9\n  have h5 : 0 < a * b := by positivity\n  have h6 : 0 < b * c := by positivity\n  have h7 : 0 < c * a := by positivity\n  have h8 : 0 < a * b * c := by positivity\n  have h9 : 0 < a * b * c * (a + b + c) := by positivity\n  have h10 : 0 < a * b * (a + b) := by positivity\n  have h11 : 0 < b * c * (b + c) := by positivity\n  have h12 : 0 < c * a * (c + a) := by positivity\n  have h13 : 0 < a * b * (a + b) * (b + c) := by positivity\n  have h14 : 0 < b * c * (b + c) * (c + a) := by positivity\n  have h15 : 0 < c * a * (c + a) * (a + b) := by positivity\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a),\n    mul_self_nonneg (c * a - a * b)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_10067_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) : (1 / (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) * Real.sqrt (1 + c ^ 2))) \u2265 1 / 2 \u2228 (1 / (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) * Real.sqrt (1 + c ^ 2))) < 1 / 2 \u2227 1 / (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) * Real.sqrt (1 + c ^ 2)) \u2265 0:= by", "target": "\n  by_cases h : 1 / (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) * Real.sqrt (1 + c ^ 2)) \u2265 1 / 2\n  exact Or.inl h\n  exact Or.inr \u27e8by linarith, by positivity\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_22526_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x + y) / (y + z) + z / (z + x) \u2265 3 / 2 + 3 / 2 * (x - y) * (x - z) / ((x + y) * (z + x)) \u2228 (x + y) / (y + z) + z / (z + x) < 3 / 2 + 3 / 2 * (x - y) * (x - z) / ((x + y) * (z + x)) := by", "target": "\n  by_cases h\u2080 : (x + y) / (y + z) + z / (z + x) \u2265 3 / 2 + 3 / 2 * (x - y) * (x - z) / ((x + y) * (z + x))\n  exacts [Or.inl h\u2080, Or.inr (by linarith)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5164 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a^2 + b^2 + c^2 \u2264 16 * (a * b + b * c + c * a) \u2192 3 * (a^2 + b^2 + c^2) / (a + b + c) + Real.sqrt ((a * b + b * c + c * a) / 3) \u2265 4 * Real.sqrt ((a^2 + b^2 + c^2) / 3) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5164_plus : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 a * b * c > 0 \u2192 (\u2203 x y z : \u211d, x * y * z > 0 \u2227 x ^ 2 + y ^ 2 + z ^ 2 \u2264 16 * (x * y + y * z + z * x)) \u2192 \u2203 x y z : \u211d, x * y * z > 0 \u2227 x ^ 2 + y ^ 2 + z ^ 2 \u2264 16 * (x * y + y * z + z * x) \u2227 3 * (x ^ 2 + y ^ 2 + z ^ 2) / (x + y + z) + Real.sqrt ((x * y + y * z + z * x) / 3) \u2265 4 * Real.sqrt ((x ^ 2 + y ^ 2 + z ^ 2) / 3):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_10034_plus (n : \u2115) (hn : 0 < n) : (\u2203 f : \u211d \u2192 \u211d, Continuous f \u2227 \u2200 x, f x = f (x ^ 2 + n)) \u2194 \u2203 f : \u211d \u2192 \u211d, Continuous f \u2227 \u2200 x, f x = f n := by", "target": "\n  constructor\n  intro h\n  obtain \u27e8f, hf, hf'\u27e9 := h\n  refine' \u27e8fun x => f n, continuous_const, _\u27e9\n  intro x\n  simpa using hf' x\n  rintro \u27e8f, hf, hf'\u27e9\n  refine' \u27e8fun x => f x, hf, _\u27e9\n  intro x\n  simp [hf']"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_1667_plus (a b c : \u211d) (hab : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : (1 + 1 / a) * (1 + 1 / b) * (1 + 1 / c) \u2265 8 \u2227 (1 + 1 / a) * (1 + 1 / b) * (1 + 1 / c) \u2265 8 * (1 / (a + b + c)) \u2227 (1 + 1 / a) * (1 + 1 / b) * (1 + 1 / c) \u2265 8 * (1 / 3):= by", "target": "\n  have : 0 < a * b := by positivity\n  have : 0 < b * c := by positivity\n  have : 0 < c * a := by positivity\n  have : 0 < a * b * c := by positivity\n  have h\u2080 : (1 + 1 / a) * (1 + 1 / b) * (1 + 1 / c) \u2265 8 := by\n    field_simp [habc]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n  have h\u2081 : (1 + 1 / a) * (1 + 1 / b) * (1 + 1 / c) \u2265 8 * (1 / (a + b + c)) := by\n    rw [mul_comm]\n    apply le_of_sub_nonneg\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n  have h\u2082 : (1 + 1 / a) * (1 + 1 / b) * (1 + 1 / c) \u2265 8 * (1 / 3) := by\n    linarith\n  exact \u27e8h\u2080, h\u2081, h\u2082\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_33600  (A : Fin 5 \u2192 \u211d)\n  (h\u2080 : \u2200 i, 0 < A i)\n  (h\u2081 : \u2211 i, A i = 1)\n  (h\u2082 : \u2211 i, i * A i \u2264 1) :\n  \u2211 i, (1 / A i) \u2265 5 / 2:= by", "target": "\n  have : \u2200 i, 0 < A i := h\u2080\n  have h\u2083 : \u2211 i, A i = 1 := h\u2081\n  have h\u2084 : \u2211 i, (1 / A i) \u2265 5 / 2 := by\n    have : \u2211 i : Fin 5, (1 / A i) \u2265 5 / 2 := by\n      have : \u2200 i : Fin 5, 1 / A i \u2265 1 := by\n        intro i\n        have : 0 < A i := h\u2080 i\n        have : A i \u2264 1 := by\n          linarith [h\u2081, Finset.single_le_sum (fun i _ => le_of_lt (h\u2080 i)) (Finset.mem_univ i)]\n        have : 1 / A i \u2265 1 := by\n          rw [ge_iff_le, le_div_iff (h\u2080 i)]\n          nlinarith\n        exact this\n      exact calc\n        (\u2211 i : Fin 5, (1 / A i)) \u2265 \u2211 i : Fin 5, 1 := by\n          exact Finset.sum_le_sum (fun i _ => this i)\n        _ = 5 := by simp\n        _ \u2265 5 / 2 := by norm_num\n    exact this\n  exact h\u2084"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_595 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1 / a + 1 / b + 1 / c) : 1 / (2 + a) + 1 / (2 + b) + 1 / (2 + c) \u2264 1 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_595_plus (a b c : \u211d) (hab : 0 < a \u2227 0 < b \u2227 0 < c) (h : a + b + c = 1) (h' : a * b + b * c + c * a = 1 / 3) : 1 / (a + 1) ^ 2 + 1 / (b + 1) ^ 2 + 1 / (c + 1) ^ 2 \u2265 3 / 4:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2091 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 3) : (bc / (a ^ 2 + a + 6) + ca / (b ^ 2 + b + 6) + ab / (c ^ 2 + c + 6)) \u2264 3 / 8 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2091_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 3) : (1 / (a ^ 2 + a + 1) + 1 / (b ^ 2 + b + 1) + 1 / (c ^ 2 + c + 1)) \u2265 9 / 19:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_24304_plus  (b c a : \u211d)\n  (k : \u211d)\n  (h\u2080 : 0 < b \u2227 0 < c \u2227 0 < a)\n  (h\u2081 : 0 < k)\n  (h\u2082 : k \u2265 8)\n  : a * (1 / Real.sqrt (a^2 + (k:\u211d) * b * c)) \u2264 1:= by", "target": "\n  rcases h\u2080 with \u27e8hb, hc, ha\u27e9\n  have h\u2083 : 0 < Real.sqrt (a ^ 2 + k * b * c) := Real.sqrt_pos.mpr (by positivity)\n  have h\u2084 : 0 < k * b * c := by positivity\n  rw [\u2190 sub_nonneg]\n  have h\u2085 : 0 < Real.sqrt (a ^ 2 + k * b * c) * Real.sqrt (a ^ 2 + k * b * c) := by positivity\n  have h\u2086 : 0 < Real.sqrt (a ^ 2 + k * b * c) * Real.sqrt (a ^ 2 + k * b * c) := by positivity\n  apply le_of_sub_nonneg\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_sqrt (by positivity : 0 \u2264 a ^ 2 + k * b * c), sq_nonneg (a - Real.sqrt (a ^ 2 + k * b * c))]\n  <;> linarith\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_11015_plus (x y : \u211d) (h\u2081 : x + 2 * y = 9) (h\u2082 : x \u2265 y) (h\u2083 : 0 \u2264 x + y) : (x + y) ^ 2 / (2 * (x + y) + 27) \u2265 2 * (x + y) / 13 \u2228 (x + y) ^ 2 / (2 * (x + y) + 27) \u2264 2 * (x + y) / 13 \u2227 0 \u2264 (x - y) ^ 2:= by", "target": "\n  refine' or_iff_not_imp_left.2 fun h => \u27e8_, _\u27e9\n  all_goals\n    nlinarith [sq_nonneg (x - y), h\u2081]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_46194_plus (a b c : \u211d) (hab : 1 < a) (hbc : 1 < b) (hca : 1 < c) : \u2203 a b c : \u211d, 1 < a \u2227 1 < b \u2227 1 < c \u2227 1 < a * b * c \u2227 (a + b + c) * (1 / (Real.sqrt a - 1) + 1 / (Real.sqrt b - 1) + 1 / (Real.sqrt c - 1)) \u2265 12 := by", "target": "\n  use 2, 2, 2\n  have h\u2081 : 1 < (2 : \u211d) := by norm_num\n  have h\u2082 : 1 < (2 : \u211d) * 2 := by norm_num\n  have h\u2083 : 1 < (2 : \u211d) * 2 * 2 := by norm_num\n  have h\u2084 : (2 + 2 + 2) * (1 / (Real.sqrt 2 - 1) + 1 / (Real.sqrt 2 - 1) + 1 / (Real.sqrt 2 - 1)) \u2265 12 := by\n    have h\u2084\u2081 : Real.sqrt 2 \u2265 1 := Real.le_sqrt_of_sq_le (by norm_num)\n    have h\u2084\u2082 : 1 / (Real.sqrt 2 - 1) \u2265 1 := by\n      rw [ge_iff_le, le_div_iff] <;> nlinarith [Real.sq_sqrt (show 0 \u2264 2 from by norm_num)]\n    nlinarith\n  exact \u27e8h\u2081, by linarith, by linarith, by linarith, h\u2084\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4819 (f : \u211d \u2192 \u211d): (\u2200 x y : \u211d, f (x^2+y) = f x^2 + f y) \u2194 \u2203 l : \u211d, \u2200 x : \u211d, f x = l * x := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4819_plus (n : \u2115) (hn : 1 < n) : (\u2203 x y : \u211d, x ^ 2 + y ^ 2 = n) \u2194 \u2203 x y : \u211d, x ^ 2 + y ^ 2 = n \u2227 0 \u2264 x \u2227 0 \u2264 y := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_73716_plus (n : \u2115) (x : \u2115 \u2192 \u211d) (hx: x 1 = 1 \u2227 x n = n) : \u2211 k in Finset.Ico 1 n, x k ^ 2 + x 1 ^ 2 + x n ^ 2 \u2265 n:= by", "target": "\n  rcases hx with \u27e8h1, hn\u27e9\n  have h2 : x 1 ^ 2 = 1 := by simp [h1]\n  have h3 : x n ^ 2 = n ^ 2 := by simp [hn]\n  have h4 : \u2211 k in Finset.Ico 1 n, x k ^ 2 \u2265 0 := by positivity\n  have h5 : x 1 ^ 2 + x n ^ 2 = 1 + n ^ 2 := by simp [h1, hn]\n  have h6 : \u2211 k in Finset.Ico 1 n, x k ^ 2 + x 1 ^ 2 + x n ^ 2 \u2265 1 + n ^ 2 := by linarith\n  nlinarith\n  <;> simp_all\n  <;> linarith\n  <;> nlinarith\n  <;> simp_all\n  <;> linarith\n  <;> nlinarith\n  <;> simp_all\n  <;> linarith\n  <;> nlinarith\n  <;> simp_all\n  <;> linarith\n  <;> nlinarith\n  <;> simp_all\n  <;> linarith\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_44956_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : a + b + c = 1) (h : a * b + b * c + c * a = 1 / 3) : a * b * (1 - a) * (1 - b) * (1 - c) + b * c * (1 - b) * (1 - c) * (1 - a) + c * a * (1 - c) * (1 - a) * (1 - b) \u2265 0 \u2227 Real.sqrt (a + b + c) \u2265 1 / 3:= by", "target": "\n  have : 0 < a * b := by nlinarith\n  have : 0 < b * c := by nlinarith\n  have : 0 < c * a := by nlinarith\n  have : 0 < 1 - a := by nlinarith\n  have : 0 < 1 - b := by nlinarith\n  have : 0 < 1 - c := by nlinarith\n  have : 0 < a * b * (1 - a) := by nlinarith\n  have : 0 < b * c * (1 - b) := by nlinarith\n  have : 0 < c * a * (1 - c) := by nlinarith\n  have : 0 < a * b * (1 - a) * (1 - b) := by nlinarith\n  have : 0 < b * c * (1 - b) * (1 - c) := by nlinarith\n  have : 0 < c * a * (1 - c) * (1 - a) := by nlinarith\n  have : a * b * (1 - a) * (1 - b) * (1 - c) + b * c * (1 - b) * (1 - c) * (1 - a) + c * a * (1 - c) * (1 - a) * (1 - b) \u2265 0 := by nlinarith\n  have : Real.sqrt (a + b + c) \u2265 1 / 3 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  tauto"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3478 (a b : \u211d) (h\u2080 : 0 < a \u2227 0 < b) (h\u2081 : Real.sin a = 13 / Real.sqrt 2018) (h\u2082 : Real.cos a = 43 / Real.sqrt 2018) (h\u2083 : Real.sin b = 13 / Real.sqrt 2018) (h\u2084 : Real.cos b = 43 / Real.sqrt 2018) : Real.tan a + Real.tan b = 69 / 43 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3478_plus (A : Fin 5 \u2192 \u211d) (h\u2080 : \u2200 i, 0 < A i) (h\u2081 : \u2211 i, A i = 1) (h\u2082 : \u2211 i, i * A i = 1) : \u2211 i, (1 + i * A i) ^ 2 \u2265 1:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_82655_plus (n : \u2115) (hn : 2 \u2264 n) : \u2211 k in Finset.Icc 0 n, k * (2 * k - 1) \u2264 n ^ 2 * (n + 1) \u2227 \u2211 k in Finset.Icc 0 n, k * (2 * k - 1) \u2265 n * (n - 1):= by", "target": "\n  induction' hn with n hn IH\n  norm_num [Finset.sum_Icc_succ_top, Nat.zero_le, Nat.succ_le_succ_iff, Nat.mul_succ,\n    Nat.add_comm, Nat.add_left_comm]\n  simp_all [Finset.sum_Icc_succ_top, Nat.zero_le, Nat.succ_le_succ_iff, Nat.mul_succ,\n    Nat.add_comm, Nat.add_left_comm]\n  ring_nf at *\n  omega"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_26775_plus (a b c : \u211d) (h\u2081 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2082 : a * b * c = 1)  : (1 / a + 1 / b + 1 / c) ^ 2 \u2265 9 := by", "target": "\n  obtain \u27e8h\u2081_left, h\u2081_middle, h\u2081_right\u27e9 := h\u2081\n  have h\u2083 : 0 < a * b := by nlinarith\n  have h\u2084 : 0 < b * c := by nlinarith\n  have h\u2085 : 0 < c * a := by nlinarith\n  field_simp [h\u2081_left, h\u2081_middle, h\u2081_right]\n  rw [le_div_iff (by positivity)]\n  nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a),\n    mul_self_nonneg (a * b - 1), mul_self_nonneg (b * c - 1), mul_self_nonneg (c * a - 1)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3720 (n : \u2115) (hn : 2 \u2264 n) : 2 + \u2211 k in Finset.Icc 2 n, (1 / k! + 1 / (n * n!)) = 3 - \u2211 k in Finset.Icc 2 n, (1 / ((k - 1) * k!)) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3720_plus (n : \u2115) (hn : 2 \u2264 n) : (\u2211 k in Finset.Icc 2 n, (1 / k! + 1 / (n * n!))) \u2264 (n ^ 2 + 1) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_30735_plus (n : \u2115) (hn : 1 < n) : (\u2203 x y : \u211d, x * y > 1 \u2227 \u2203 z : \u211d, z^2 = x * y \u2227 1 < z) \u2228 (\u2203 x y : \u211d, x * y > 1 \u2227 \u2203 z : \u211d, z^2 = x * y \u2227 z < 1) \u2228 (\u2203 x y : \u211d, x * y > 1 \u2227 \u2203 z : \u211d, z^2 = x * y \u2227 z = 1):= by", "target": "\n  apply Or.inl\n  use 2, 1\n  constructor\n  linarith\n  use Real.sqrt 2\n  constructor\n  norm_num\n  nlinarith [Real.sqrt_nonneg 2, Real.sq_sqrt (show 0 \u2264 2 by norm_num)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_34773_plus (a b c : \u211d) (h\u2081 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2082 : a + b + c = 1) (h\u2083 : a * b + b * c + c * a \u2264 1) : a * b * (a + b) * (b + c) * (c + a) \u2264 1 \u2227 (a + b + c) ^ 2 * (a * b * (a + b) * (b + c) * (c + a)) \u2264 1:= by", "target": "\n  have h\u2084 : 0 < a * b := by nlinarith\n  have h\u2085 : 0 < b * c := by nlinarith\n  have h\u2086 : 0 < c * a := by nlinarith\n  have h\u2087 : 0 < a * b * (a + b) := by nlinarith\n  have h\u2088 : 0 < b * c * (b + c) := by nlinarith\n  have h\u2089 : 0 < c * a * (c + a) := by nlinarith\n  have h\u2081\u2080 : 0 < a * b * (a + b) * (b + c) := by nlinarith\n  have h\u2081\u2081 : 0 < b * c * (b + c) * (c + a) := by nlinarith\n  have h\u2081\u2082 : 0 < c * a * (c + a) * (a + b) := by nlinarith\n  have h\u2081\u2083 : 0 < a * b * (a + b) * (b + c) * (c + a) := by nlinarith\n  have h\u2081\u2084 : (a + b + c) ^ 2 * (a * b * (a + b) * (b + c) * (c + a)) \u2264 1 := by\n    calc\n      (a + b + c) ^ 2 * (a * b * (a + b) * (b + c) * (c + a)) = 1 ^ 2 * (a * b * (a + b) * (b + c) * (c + a)) := by rw [h\u2082]\n      _ = a * b * (a + b) * (b + c) * (c + a) := by ring\n      _ \u2264 1 := by nlinarith\n  exact \u27e8by nlinarith, h\u2081\u2084\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_19452_plus (x y : \u211d) (h\u2080 : 0 < x \u2227 0 < y) (h\u2081 : x \u2260 y) (h\u2082 : (x ^ 2 + y ^ 2) ^ 2 > 4 * x ^ 2 * y ^ 2) : \u2203 a b : \u211d, 0 < a \u2227 0 < b \u2227 a \u2260 b \u2227 (x ^ 2 / a ^ 2 + y ^ 2 / b ^ 2 > 1) \u2227 (x ^ 4 / a ^ 2 + y ^ 4 / b ^ 2 > a ^ 2 * b ^ 2 / (a ^ 2 + b ^ 2)):= by", "target": "\n  use x, y\n  have h\u2083 : 0 < x := h\u2080.1\n  have h\u2084 : 0 < y := h\u2080.2\n  have h\u2085 : x \u2260 y := h\u2081\n  have h\u2086 : (x ^ 2 + y ^ 2) ^ 2 > 4 * x ^ 2 * y ^ 2 := h\u2082\n  have h\u2087 : x ^ 2 / x ^ 2 + y ^ 2 / y ^ 2 = 2 := by\n    field_simp [h\u2083.ne', h\u2084.ne']\n    <;> ring\n  have h\u2088 : x ^ 4 / x ^ 2 + y ^ 4 / y ^ 2 = x ^ 2 + y ^ 2 := by\n    field_simp [h\u2083.ne', h\u2084.ne']\n    <;> ring\n  have h\u2089 : x ^ 2 * y ^ 2 / (x ^ 2 + y ^ 2) \u2264 (x ^ 2 + y ^ 2) / 2 := by\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (x ^ 2 - y ^ 2)]\n  exact \u27e8h\u2083, h\u2084, h\u2085, by\n    nlinarith [sq_nonneg (x ^ 2 - y ^ 2)], by\n    nlinarith [sq_nonneg (x ^ 2 - y ^ 2)]\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_30526_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c \u2264 1) : \u2211 k in Finset.range 2, (1 - 2 * a * b) ^ 2 * (1 - 2 * b * c) ^ 2 * (1 - 2 * c * a) ^ 2 \u2265 (1 - 2 * a * b) ^ 2 * (1 - 2 * b * c) ^ 2 * (1 - 2 * c * a) ^ 2 \u2227 (\u2211 k in Finset.range 2, (1 - 2 * a * b) ^ 2 * (1 - 2 * b * c) ^ 2 * (1 - 2 * c * a) ^ 2) \u2265 0:= by", "target": "\n  have h\u2081 : 0 \u2264 (1 - 2 * a * b) ^ 2 * (1 - 2 * b * c) ^ 2 * (1 - 2 * c * a) ^ 2 := by positivity\n  have h\u2082 : (\u2211 k in Finset.range 2, (1 - 2 * a * b) ^ 2 * (1 - 2 * b * c) ^ 2 * (1 - 2 * c * a) ^ 2) = 2 * ((1 - 2 * a * b) ^ 2 * (1 - 2 * b * c) ^ 2 * (1 - 2 * c * a) ^ 2) := by\n    simp [Finset.sum_range_succ, Finset.sum_range_one, h\u2081]\n  constructor <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_37662_plus : \u2200 (n : \u2115),\n    (\u2211 i in Finset.range n, ((1 : \u211d) / i)) \u2265 0 \u2228 (\u2211 i in Finset.range n, ((1 : \u211d) / i)) < 0 \u2227 (\u2211 i in Finset.range n, (1 : \u211d)) \u2265 0:= by", "target": "\n  rintro n\n  by_cases h : (\u2211 i in Finset.range n, ((1 : \u211d) / i)) \u2265 0\n  exact Or.inl h\n  right\n  constructor\n  linarith\n  exact by positivity"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_43426_plus : \u2200 (x : \u2115), \u2211' n : \u2115, 1/2^n = 2 \u2228 \u2211' n : \u2115, 1/2^n = 1 := by", "target": "\n  intro x\n  apply Or.inr\n  rw [tsum_eq_single 0]\n  simp\n  intro i h\n  cases i <;> simp_all [Nat.div_eq_of_lt]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5026 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 1) : x / (y ^ 2 + z) + y / (z ^ 2 + x) + z / (x ^ 2 + y) \u2265 9 / 4 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5026_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 1) (h1 : 0 < x * y) (h2 : 0 < x * z) (h3 : 0 < y * z) : (x + y + z) ^ 2 / (x ^ 2 + y ^ 2 + z ^ 2) + (x ^ 2 + y ^ 2 + z ^ 2) / (x * y + y * z + z * x) \u2265 2 * (x + y + z):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_79995_plus (n : \u2115) (x : Fin n \u2192 \u211d) :\n  Real.sqrt ((\u2211 i, x i ^ 2) / n) \u2265 (\u2211 i, x i) / n  \u2228 (\u2211 i, x i) / n = 0  := by", "target": "\n  apply or_iff_not_imp_right.mpr\n  intro h\n  have h1 : (\u2211 i, x i) / n \u2264 Real.sqrt ((\u2211 i, x i ^ 2) / n) := by\n    apply le_sqrt_of_sq_le\n    have h2 : ((\u2211 i, x i) / n) ^ 2 \u2264 (\u2211 i, x i ^ 2) / n := by\n      cases n with\n      | zero => simp_all\n      | succ n =>\n        field_simp\n        apply le_of_sub_nonneg\n        field_simp\n        rw [le_div_iff (by positivity)]\n        have h2 : (\u2211 i : Fin (n + 1), x i) ^ 2 \u2264 (\u2211 i : Fin (n + 1), x i ^ 2) * (n + 1):= by\n          calc\n            (\u2211 i : Fin (n + 1), x i) ^ 2 = (\u2211 i : Fin (n + 1), x i * 1) ^ 2 := by simp\n            _ \u2264 (\u2211 i : Fin (n + 1), x i ^ 2) * (\u2211 i : Fin (n + 1), 1 ^ 2) := by\n              apply?\n            _ = (\u2211 i : Fin (n + 1), x i ^ 2) * (n + 1) := by simp\n        nlinarith\n    linarith\n  linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1973 (x y z : \u211d) (hx : x \u2265 0 \u2227 y \u2265 0 \u2227 z \u2265 0) (h : x + y + z = 1) : Real.sqrt (1 - 2 * x * y) + Real.sqrt (1 - 2 * y * z) + Real.sqrt (1 - 2 * z * x) \u2265 Real.sqrt 7 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1973_plus (x y z : \u211d) (hx : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z) (hab : x + y + z = 1) (h : 0 \u2264 x * y + y * z + z * x) : Real.sqrt (1 - 2 * x * y) + Real.sqrt (1 - 2 * y * z) + Real.sqrt (1 - 2 * z * x) \u2265 Real.sqrt (1 - 3 * (x * y + y * z + z * x)):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_43329_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a + b + c \u2264 1) (h\u2083 : a * b + b * c + c * a \u2264 1) : a ^ 2 * b ^ 2 * c ^ 2 \u2264 (a + b + c) ^ 3:= by", "target": "\n  have h\u2084 : 0 \u2264 a * b := by nlinarith\n  have h\u2085 : 0 \u2264 b * c := by nlinarith\n  have h\u2086 : 0 \u2264 c * a := by nlinarith\n  have h\u2087 : 0 \u2264 a * b * c := by nlinarith\n  have h\u2088 : a * b * c \u2264 1 := by nlinarith\n  have h\u2089 : 0 \u2264 a * b * c * (a + b + c) := by nlinarith\n  nlinarith [sq_nonneg (a * b + b * c + c * a), sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5657 (k p : \u2115) (hp : p.Prime) (h : \u2203 l : \u2115, l^3 = k^3 + p * k^2) : 3 \u2223 p - 1 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5657_plus (n : \u2115) (hn : 1 < n) : (\u2203 k : \u2115, n \u2223 k^3 + 1) \u2228 (\u2203 k : \u2115, n \u2223 k^3 - 1) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_68156_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 1) (h\u2081 : 0 \u2264 a * b) (h\u2082 : 0 \u2264 a * c) (h\u2083 : 0 \u2264 b * c) : a * b * c + 1 / (1 - a) / (1 - b) / (1 - c) \u2265 737 / 216 \u2228 a * b * c \u2265 0 \u2227 1 / (1 - a) / (1 - b) / (1 - c) \u2265 0:= by", "target": "\n  apply Or.intro_right\n  apply And.intro\n  nlinarith\n  have h\u2084 : 0 \u2264 1 - a := by nlinarith\n  have h\u2085 : 0 \u2264 1 - b := by nlinarith\n  have h\u2086 : 0 \u2264 1 - c := by nlinarith\n  have h\u2087 : 0 \u2264 (1 - a) * (1 - b) := by nlinarith\n  have h\u2088 : 0 \u2264 (1 - a) * (1 - b) * (1 - c) := by nlinarith\n  have h\u2089 : 1 / (1 - a) / (1 - b) / (1 - c) \u2265 0 := by\n    apply div_nonneg\n    apply div_nonneg\n    apply div_nonneg\n    nlinarith\n    all_goals nlinarith\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_55304_plus (a b c : \u211d) (habc : a * b * c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0) : (a * b + b * c + c * a) * (1 / a + 1 / b + 1 / c) \u2265 3 * (b + c + a):= by", "target": "\n  have ha : 0 < a := h.1\n  have hb : 0 < b := h.2.1\n  have hc : 0 < c := h.2.2\n  have hab : 0 < a * b := mul_pos ha hb\n  have hbc : 0 < b * c := mul_pos hb hc\n  have hac : 0 < a * c := mul_pos ha hc\n  field_simp [habc]\n  nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - a * c), sq_nonneg (a * c - a * b)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_25962_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x + y + 1) / (x ^ 4 + y ^ 4 + 1) + (y + z + 1) / (y ^ 4 + z ^ 4 + 1) + (z + x + 1) / (z ^ 4 + x ^ 4 + 1) \u2264 15 / (83 * x * y * z) \u2228 15 / (83 * x * y * z) \u2264 (x + y + 1) / (x ^ 4 + y ^ 4 + 1) + (y + z + 1) / (y ^ 4 + z ^ 4 + 1) + (z + x + 1) / (z ^ 4 + x ^ 4 + 1):= by", "target": "\n  by_cases h : (x + y + 1) / (x ^ 4 + y ^ 4 + 1) + (y + z + 1) / (y ^ 4 + z ^ 4 + 1) + (z + x + 1) / (z ^ 4 + x ^ 4 + 1) \u2264 15 / (83 * x * y * z)\n  exact Or.inl h\n  exact Or.inr (le_of_not_le h)"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_15614_plus (x : \u211d) (y : \u211d) (h\u2081 : x \u2265 1) (h\u2082 : y \u2265 1) : x^4 + 1/x^4 + y + 1/y \u2265 x + 1/x + y + 1/y  := by", "target": "\n  have h\u2083 : x^4 \u2265 x := by\n    have h\u2084 : x^2 \u2265 x := by nlinarith\n    nlinarith\n  have h\u2084 : x^4 + 1/x^4 \u2265 x + 1/x := by\n    have h\u2085 : 0 \u2264 x - 1 := by nlinarith\n    have h\u2086 : 0 \u2264 x^2 - 1 := by nlinarith\n    have h\u2087 : 0 \u2264 x^4 - 1 := by nlinarith\n    have h\u2088 : 0 \u2264 (x^2 - 1)^2 := by nlinarith\n    have h\u2089 : 0 \u2264 (x^4 - 1)^2 := by nlinarith\n    have h\u2081\u2080 : 0 \u2264 (x^2 - 1)^2 * (x^4 - 1)^2 := by nlinarith\n    field_simp\n    rw [div_le_div_iff]\n    nlinarith\n    nlinarith\n    nlinarith\n  have h\u2085 : y + 1/y \u2265 y + 1/y := by nlinarith\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_1802_plus : \u2200 a b c d : \u211d, \u2203 A : \u211d, A \u2265 0 \u2227 A \u2265 a * b * c * d \u2227 A \u2265 a * b * c * d * (a + b + c + d):= by", "target": "\n  intro a b c d\n  use max (max (a * b * c * d) (a * b * c * d * (a + b + c + d))) 0\n  refine' \u27e8by simp [le_max_right], by simp [le_max_left], by simp [le_max_left]\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_48999_plus (n : \u2115) (hn : 3 \u2264 n) : \u2211 k in Finset.Icc 1 n, (1 : \u211d) / (k * (n + 1 - k)) \u2264 n:= by", "target": "\n  have : \u2200 k \u2208 Finset.Icc 1 n, (1 : \u211d) / (k * (n + 1 - k)) \u2264 1 := by\n    intro k hk\n    rw [Finset.mem_Icc] at hk\n    rcases hk with \u27e8hk1, hkn\u27e9\n    have h1 : (1 : \u211d) \u2264 k := by exact_mod_cast hk1\n    have h2 : (k : \u211d) \u2264 n := by exact_mod_cast hkn\n    rw [div_le_iff (by\n        have : 0 < (k : \u211d) := by positivity\n        have : 0 < (n + 1 - k : \u211d) := by\n          have : (k : \u211d) \u2264 n := by exact_mod_cast hkn\n          linarith\n        positivity)]\n    nlinarith\n  exact (Finset.sum_le_sum this).trans (by simp)"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_6164 (f : \u211d \u2192 \u211d):(\u2200 x y, f x + f (x + f y) = 2 * x + y) \u2194 \u2200 x, f x = x \u2228 \u2200 x, f x = -x := by\n<hard theorem>", "target": "\ntheorem leanworkbook_6164_plus (n : \u2115) (hn : 1 < n) : (\u2203 f : \u211d \u2192 \u211d, \u2200 x y, f x + f (x + f y) = 2 * x + y) \u2194 (\u2203 f : \u211d \u2192 \u211d, \u2200 x, f x = x \u2228 \u2200 x, f x = -x):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_11885_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) : (x ^ 2 + y ^ 2 + z ^ 2) ^ 3 \u2265 9 * (x ^ 3 + y ^ 3 + z ^ 3) * x * y * z \u2228 (\u2203 (x y z : \u211d), (x ^ 2 + y ^ 2 + z ^ 2) ^ 3 < 9 * (x ^ 3 + y ^ 3 + z ^ 3) * x * y * z):= by", "target": "\n  by_cases h\u2080 : (x ^ 2 + y ^ 2 + z ^ 2) ^ 3 \u2265 9 * (x ^ 3 + y ^ 3 + z ^ 3) * x * y * z\n  exact Or.inl h\u2080\n  exact Or.inr \u27e8x, y, z, by linarith\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_11556_plus (x y z : \u211d) (h\u2080 : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z) (h\u2081 : x + y + z = 1) (h\u2082 : x * y + x * z + y * z = 1 / 3) : x ^ 2 * y ^ 2 * z ^ 2 * (x * y + x * z + y * z) + x ^ 2 * y ^ 2 * (x * y) * z + x ^ 2 * z ^ 2 * (x * z) * y + y ^ 2 * z ^ 2 * (y * z) * x + x ^ 2 * y ^ 2 * z ^ 2 \u2265 0 \u2227 x ^ 2 * y ^ 2 * z ^ 2 * (x * y + x * z + y * z) + x ^ 2 * y ^ 2 * (x * y) * z + x ^ 2 * z ^ 2 * (x * z) * y + y ^ 2 * z ^ 2 * (y * z) * x + x ^ 2 *y ^ 2 * z ^ 2 \u2265 0 \u2227 x ^ 2 * y ^ 2 * z ^ 2 * (x * y + x * z + y * z) + x ^ 2 *y ^ 2 * (x * y) * z + x ^ 2 * z ^ 2 * (x * z) * y + y ^ 2 * z ^ 2 * (y * z) * x + x ^ 2 *y ^ 2 * z ^ 2 \u2265 0 := by", "target": "\n  rcases h\u2080 with \u27e8hx, hy, hz\u27e9\n  have h\u2083 : 0 \u2264 x * y := by positivity\n  have h\u2084 : 0 \u2264 x * z := by positivity\n  have h\u2085 : 0 \u2264 y * z := by positivity\n  have h\u2086 : 0 \u2264 x * y * z := by positivity\n  have h\u2087 : 0 \u2264 x * y * z * (x * y + x * z + y * z) := by positivity\n  have h\u2088 : 0 \u2264 x ^ 2 * y ^ 2 * z ^ 2 := by positivity\n  have h\u2089 : 0 \u2264 x ^ 2 * y ^ 2 * (x * y) * z := by positivity\n  have h\u2081\u2080 : 0 \u2264 x ^ 2 * z ^ 2 * (x * z) * y := by positivity\n  have h\u2081\u2081 : 0 \u2264 y ^ 2 * z ^ 2 * (y * z) * x := by positivity\n  refine' \u27e8by positivity, by positivity, by positivity\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_45265_plus (n m : \u2115) (h\u2081 : Odd n) (h\u2082 : m = (2 * n ^ (n - 1) - 1) * n) : m = (2 * n ^ (n - 1) - 1) * n \u2228 m = 0 \u2228 m = 1 \u2228 m = n \u2228 m = 2 * n \u2228 m = n ^ 2 \u2228 m = n ^ (n - 1):= by", "target": "\n  refine' Or.inl _\n  simp_all"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_56026_plus (x : \u211d) : x ^ 2 * Real.sin x + x * Real.cos x + x ^ 2 + 1 / 2 > 0 \u2228 \u2203 y : \u211d, y \u2264 x \u2227 0 \u2264 y \u2227 y \u2264 1 \u2227 (x - y) ^ 2 * (x + y) ^ 2 \u2264 (x ^ 2) ^ 2:= by", "target": "\n  apply or_iff_not_imp_right.2\n  intro h\n  nlinarith [sq_nonneg (x * Real.sin x + Real.cos x),\n    sq_nonneg (x * Real.cos x - Real.sin x),\n    Real.sin_sq_add_cos_sq x,\n    mul_self_nonneg (x ^ 2 + 1 / 2),\n    mul_self_nonneg (x - 0),\n    mul_self_nonneg (x - 1),\n    mul_self_nonneg (x + 0),\n    mul_self_nonneg (x + 1)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_44312_plus (a b : \u211d) (h\u2081 : a^3 = 3*a*b^2 + 11) (h\u2082 : b^3 = 3*a^2*b + 2) (h\u2083 : a \u2264 b) (h\u2084 : b \u2264 2) : a^2 + b^2 \u2264 8 \u2227 a * b \u2264 4:= by", "target": "\n  refine' \u27e8_, _\u27e9\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - 2), sq_nonneg (b - 2),\n    mul_nonneg (sub_nonneg.mpr h\u2083) (sub_nonneg.mpr h\u2084),\n    mul_nonneg (sub_nonneg.mpr h\u2083) (sub_nonneg.mpr h\u2084),\n    mul_nonneg (sub_nonneg.mpr h\u2083) (sub_nonneg.mpr h\u2084)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - 2), sq_nonneg (b - 2),\n    mul_nonneg (sub_nonneg.mpr h\u2083) (sub_nonneg.mpr h\u2084),\n    mul_nonneg (sub_nonneg.mpr h\u2083) (sub_nonneg.mpr h\u2084),\n    mul_nonneg (sub_nonneg.mpr h\u2083) (sub_nonneg.mpr h\u2084)]\n  <;> nlinarith\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_5980 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : Real.sqrt (x ^ 2 / (y ^ 2 + z ^ 2 + y * z)) \u2265 Real.sqrt 3 * x * (z + x) * (x + y) / (3 * x * y * z + x ^ 2 * y + y ^ 2 * z + z ^ 2 * x + x ^ 3 + y ^ 3 + z ^ 3 + y * z ^ 2 + z * x ^ 2 + x * y ^ 2) \u2228 (Real.sqrt (x ^ 2 / (y ^ 2 + z ^ 2 + y * z)) < Real.sqrt 3 * x * (z + x) * (x + y) / (3 * x * y * z + x ^ 2 * y + y ^ 2 * z + z ^ 2 * x + x ^ 3 + y ^ 3 + z ^ 3 + y * z ^ 2 + z * x ^ 2 + x * y ^ 2) \u2227 0 \u2264 Real.sqrt (x ^ 2 / (y ^ 2 + z ^ 2 + y * z))) := by", "target": "\n  apply or_iff_not_imp_left.mpr\n  intro h\n  constructor\n  all_goals\n    nlinarith [Real.sqrt_nonneg (x ^ 2 / (y ^ 2 + z ^ 2 + y * z)),\n      Real.mul_self_sqrt (show 0 \u2264 x ^ 2 / (y ^ 2 + z ^ 2 + y * z) from by positivity)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_55826_plus (n : \u2115) (hn : 1 \u2264 n) : (\u2203 k : \u2115, 1 \u2264 k \u2227 k \u2264 n \u2227 \u2203 m : \u2115, n = k * m \u2227 k \u2223 n) \u2228 (\u2200 k : \u2115, 1 \u2264 k \u2192 k \u2264 n \u2192 \u2203 m : \u2115, n = k * m \u2227 k \u2223 n) := by", "target": "\n  refine' or_iff_not_imp_right.mpr fun h => _\n  use n\n  refine' \u27e8hn, le_rfl, 1, by simp [hn], by simp [dvd_refl]\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_50262_plus : \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a * b / (a ^ 2 + b ^ 2) + b * c / (b ^ 2 + c ^ 2) + c * a / (c ^ 2 + a ^ 2) \u2264 9 / 2 * (a + b + c) / (a + b + c):= by", "target": "\n  rintro a b c \u27e8a_pos, b_pos, c_pos\u27e9\n  have h\u2081 : a * b / (a ^ 2 + b ^ 2) \u2264 1 / 2 := by\n    rw [div_le_iff (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a + b)]\n  have h\u2082 : b * c / (b ^ 2 + c ^ 2) \u2264 1 / 2 := by\n    rw [div_le_iff (by positivity)]\n    nlinarith [sq_nonneg (b - c), sq_nonneg (b + c)]\n  have h\u2083 : c * a / (c ^ 2 + a ^ 2) \u2264 1 / 2 := by\n    rw [div_le_iff (by positivity)]\n    nlinarith [sq_nonneg (c - a), sq_nonneg (c + a)]\n  calc\n    a * b / (a ^ 2 + b ^ 2) + b * c / (b ^ 2 + c ^ 2) + c * a / (c ^ 2 + a ^ 2) \u2264 1 / 2 + 1 / 2 + 1 / 2 := by linarith\n    _ = 3 / 2 := by ring\n    _ \u2264 9 / 2 * (a + b + c) / (a + b + c) := by\n      rw [mul_comm]\n      apply le_of_sub_nonneg\n      field_simp\n      ring_nf\n      positivity"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_6834 (a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (habc : a * b * c = 1) (h : a^2 + b^2 + c^2 = 3) : (a^3 + b^3) / (1 + c)^2 + (b^3 + c^3) / (1 + a)^2 + (c^3 + a^3) / (1 + b)^2 \u2265 3 / 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_6834_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : a + b + c = 3) (h : a * b + b * c + c * a = 3 * Real.sqrt 3) : a^2 / (b + c)^2 + b^2 / (a + c)^2 + c^2 / (a + b)^2 \u2265 3 / 4:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_7510_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) : Real.sqrt (a ^ 2 + b ^ 2) / (a + b) + Real.sqrt (b ^ 2 + c ^ 2) / (b + c) + Real.sqrt (a ^ 2 + c ^ 2) / (a + c) \u2265 3 / 2 - 2 * (1 / 2) * (1 / 3):= by", "target": "\n  norm_num\n  have h1 : Real.sqrt (a ^ 2 + b ^ 2) \u2265 (a + b) / 2 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (a - b)]\n  have h2 : Real.sqrt (b ^ 2 + c ^ 2) \u2265 (b + c) / 2 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (b - c)]\n  have h3 : Real.sqrt (a ^ 2 + c ^ 2) \u2265 (a + c) / 2 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (a - c)]\n  have h4 : Real.sqrt (a ^ 2 + b ^ 2) / (a + b) \u2265 1 / 2 := by\n    rw [ge_iff_le, le_div_iff (add_pos hab hbc)]\n    nlinarith\n  have h5 : Real.sqrt (b ^ 2 + c ^ 2) / (b + c) \u2265 1 / 2 := by\n    rw [ge_iff_le, le_div_iff (add_pos hbc hca)]\n    nlinarith\n  have h6 : Real.sqrt (a ^ 2 + c ^ 2) / (a + c) \u2265 1 / 2 := by\n    rw [ge_iff_le, le_div_iff (add_pos hab hca)]\n    nlinarith\n  linarith\n  <;> norm_num\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_6965_plus (A : Fin 5 \u2192 \u211d) (hA : \u2200 i, 0 < A i) (hA_sum : \u2211 i, A i = 1) (hA_bound : \u2200 i, A i \u2264 1/4) : (\u220f i, (1 - A i)) \u2265 1/32 \u2227 (\u220f i, (1 - A i)) \u2265 1/32 \u2227 (\u220f i, (1 - A i)) \u2265 1/32 \u2227 (\u220f i, (1 - A i)) \u2265 1/32 \u2227 (\u220f i, (1 - A i)) \u2265 1/32 := by", "target": "\n  have h\u2081 : \u220f i, (1 - A i) \u2265 1/32 := by\n    calc\n      (\u220f i, (1 - A i)) \u2265 \u220f i : Fin 5, (1 - 1/4) := by\n        apply Finset.prod_le_prod\n        exact fun i _ => by linarith [hA i, hA_bound i]\n        exact fun i _ => by linarith [hA i, hA_bound i]\n      _ = (1 - 1/4) ^ 5 := by simp\n      _ \u2265 1/32 := by norm_num\n  exact \u27e8h\u2081, h\u2081, h\u2081, h\u2081, h\u2081\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5295 b c : \u211d) : a + b + c > 2 \u2192 a * b * c \u2265 (a + b + c) ^ 2 - 8 / (a + b + c - 2) \u2227 (a + b + c) ^ 2 - 8 / (a + b + c - 2) \u2265 3 * (a + b + c) ^ 2 - 24 / (a + b + c) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5295_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a + b + c = 3) (h\u2083 : a * b + b * c + c * a = 3 * Real.sqrt 3) : 3 * (a ^ 2 + b ^ 2 + c ^ 2) \u2265 3 * Real.sqrt 3 \u2227 3 * Real.sqrt 3 \u2265 3 * (a * b + b * c + c * a):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_69369_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) : \u2203 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2227 (1 / (x ^ 2 + x * y + y ^ 2) + 1 / (y ^ 2 + y * z + z ^ 2) + 1 / (z ^ 2 + z * x + x ^ 2) + (2 * x + 2 * y + 2 * z) / (3 * x * y * z) * Real.sqrt ((x ^ 2 * y + y ^ 2 * z + z ^ 2 * x + x * y * z) / (x * y ^ 2 + y * z ^ 2 + z * x ^ 2 + x * y * z))) \u2265 9 / (x * y + y * z + z * x):= by", "target": "\n  refine' \u27e81, 1, 1, by norm_num, by norm_num, by norm_num, _\u27e9\n  norm_num\n  <;>\n  apply le_of_sub_nonneg\n  <;>\n  field_simp\n  <;>\n  ring_nf\n  <;>\n  positivity"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_23518_plus (x y z : \u211d) (hx : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z) (h : x + y + z = 3) : (3 + 4 * x / (1 + y ^ 2)) * (3 + 4 * y / (1 + z ^ 2)) * (3 + 4 * z / (1 + x ^ 2)) \u2265 125 / 6 \u2227 (3 + 4 * x / (1 + y ^ 2)) * (3 + 4 * y / (1 + z ^ 2)) * (3 + 4 * z / (1 + x ^ 2)) \u2265 125 / 6 / 2 \u2227 (3 + 4 * x / (1 + y ^ 2)) * (3 + 4 * y / (1 + z ^ 2)) * (3 + 4 * z / (1 + x ^ 2)) \u2265 125 / 6 / 2 \u2227 (3 + 4 * x / (1 + y ^ 2)) * (3 + 4 * y / (1 + z ^ 2)) * (3 + 4 * z / (1 + x ^ 2)) \u2265 125 / 6 / 2 \u2227 (3 + 4 * x / (1 + y ^ 2)) * (3 + 4 * y / (1 + z ^ 2)) * (3 + 4 * z / (1 + x ^ 2)) \u2265 125 / 6 / 2 := by", "target": "\n  rcases hx with \u27e8h1, h2, h3\u27e9\n  have h4 : 0 \u2264 x * y := by positivity\n  have h5 : 0 \u2264 y * z := by positivity\n  have h6 : 0 \u2264 z * x := by positivity\n  have h7 : 0 \u2264 x * y * z := by positivity\n  have h8 : 3 + 4 * x / (1 + y ^ 2) \u2265 3 := by\n    apply le_of_sub_nonneg\n    field_simp\n    rw [le_div_iff]\n    nlinarith\n    positivity\n  have h9 : 3 + 4 * y / (1 + z ^ 2) \u2265 3 := by\n    apply le_of_sub_nonneg\n    field_simp\n    rw [le_div_iff]\n    nlinarith\n    positivity\n  have h10 : 3 + 4 * z / (1 + x ^ 2) \u2265 3 := by\n    apply le_of_sub_nonneg\n    field_simp\n    rw [le_div_iff]\n    nlinarith\n    positivity\n  have h11 : (3 + 4 * x / (1 + y ^ 2)) * (3 + 4 * y / (1 + z ^ 2)) * (3 + 4 * z / (1 + x ^ 2)) \u2265 125 / 6 := by\n    calc\n      (3 + 4 * x / (1 + y ^ 2)) * (3 + 4 * y / (1 + z ^ 2)) * (3 + 4 * z / (1 + x ^ 2)) \u2265 3 * 3 * 3 := by gcongr <;> nlinarith\n      _ = 27 := by norm_num\n      _ \u2265 125 / 6 := by norm_num\n  exact \u27e8h11, by linarith, by linarith, by linarith, by linarith\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_5000_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \u2203 a b c : \u211d, a * b * c \u2264 x ^ 2 / 4 + y ^ 2 / 4 + z ^ 2 / 4 \u2227 a * b * c \u2265 0 \u2227 a * b + b * c + c * a \u2264 x * y + y * z + z * x:= by", "target": "\n  refine' \u27e80, 0, 0, _, _, _\u27e9 <;>\n  simp [mul_assoc, mul_comm, mul_left_comm, hx, hy, hz]\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_23395_plus (f : \u211d \u2192 \u211d) (h\u2081 : \u2200 x, f (f x) = Int.ceil x + 2) (h\u2082 : \u2200 x, f x \u2264 Int.ceil x + 1) : \u2200 x, f x = Int.ceil x \u2228 \u2203 y, f x = y + 1:= by", "target": "\n  intro x\n  have h\u2083 := h\u2082 x\n  have h\u2084 := h\u2081 x\n  have h\u2085 := h\u2081 (f x)\n  have h\u2086 := h\u2082 (f x)\n  simp at h\u2084 h\u2085 h\u2086\n  norm_num at h\u2084 h\u2085 h\u2086\n  by_cases h\u2087 : f x = Int.ceil x\n  exact Or.inl h\u2087\n  exact Or.inr \u27e8f x - 1, by linarith\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2857 : \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a^2 + b^2 + c^2 = (5/2) * (a * b + b * c + c * a) \u2192 11 * (a^4 + b^4 + c^4) \u2265 17 * (a^3 * b + b^3 * c + c^3 * a) + 129 * a * b * c * (a + b + c) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2857_plus : \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a^2 + b^2 + c^2 = (5/2) * (a * b + b * c + c * a) \u2192 11 * (a^4 + b^4 + c^4) \u2265 17 * (a^3 * b + b^3 * c + c^3 * a) + 129 * a * b * c * (a + b + c) \u2228 (\u2203 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a^2 + b^2 + c^2 = (5/2) * (a * b + b * c + c * a) \u2227 11 * (a^4 + b^4 + c^4) < 17 * (a^3 * b + b^3 * c + c^3 * a) + 129 * a * b * c * (a + b + c)):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_7541 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (h : (b + c) / a + (c + a) / b = 12) : (a + b + c) * (1 / a + 1 / b + 1 / c) \u2265 77 / 5 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_7541_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : a + b + c = 3) (h : 1 / a + 1 / b + 1 / c \u2265 3) : (a + b + c) * (1 / a + 1 / b + 1 / c) \u2265 3 * 3:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_59403_plus (u v : \u211d) (h\u2080 : 0 \u2264 u) (h\u2081 : 0 \u2264 v) (h\u2082 : u \u2264 1) (h\u2083 : v \u2264 1) (h\u2084 : u * v \u2264 1) (h\u2085 : 0 \u2264 u * v) : (-8 * v * u ^ 3 + 1 + 8 * v * u + 2 * v ^ 2 + v ^ 4) \u2265 0 \u2227 (-8 * v * u ^ 3 + 1 + 8 * v * u + 2 * v ^ 2 + v ^ 4) \u2265 0 \u2227 (1 + v ^ 2 - u * v) \u2265 0 \u2227 (1 + v ^ 2 - u * v) \u2265 0 := by", "target": "\n  refine' \u27e8_, _, _, _\u27e9 <;>\n  nlinarith [sq_nonneg (u - v), sq_nonneg (u + v), sq_nonneg (1 - u), sq_nonneg (1 - v),\n    mul_nonneg (sub_nonneg.mpr h\u2080) (sub_nonneg.mpr h\u2081), mul_nonneg (sub_nonneg.mpr h\u2082) (sub_nonneg.mpr h\u2083),\n    mul_nonneg (sub_nonneg.mpr h\u2085) (sub_nonneg.mpr h\u2080), mul_nonneg (sub_nonneg.mpr h\u2085) (sub_nonneg.mpr h\u2081),\n    mul_nonneg (sub_nonneg.mpr h\u2082) (sub_nonneg.mpr h\u2080), mul_nonneg (sub_nonneg.mpr h\u2083) (sub_nonneg.mpr h\u2081)]\n  <;>\n  nlinarith\n  <;>\n  nlinarith\n  <;>\n  nlinarith\n  <;>\n  nlinarith\n  <;>\n  nlinarith\n  <;>\n  nlinarith\n  <;>\n  nlinarith\n  <;>\n  nlinarith\n  <;>\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_69460_plus (n : \u2115) (h\u2081 : \u2200 n, 1 < n \u2192 \u2211 k in Finset.Ico 1 n, k \u2264 n^2) : \u2211 k in Finset.Ico 1 (n+1), k \u2264 (n+1)^2  := by", "target": "\n  have h\u2082 : \u2211 k in Finset.Ico 1 (n+1), k \u2264 (n+1)^2 := by\n    cases n with\n    | zero => norm_num\n    | succ n =>\n      apply h\u2081\n      norm_num\n      <;> omega\n  exact h\u2082"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_36602_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (h : a * b + b * c + c * a \u2264 3) : 3 * Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) \u2265 Real.sqrt (3 * (a * b + b * c + c * a)):= by", "target": "\n  have h1 : 0 \u2264 (a - b)^2 + (b - c)^2 + (c - a)^2 := by nlinarith\n  have h2 : Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) \u2265 0 := Real.sqrt_nonneg _\n  have h3 : Real.sqrt (3 * (a * b + b * c + c * a)) \u2265 0 := Real.sqrt_nonneg _\n  have h4 : Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) \u2265 Real.sqrt (3 * (a * b + b * c + c * a)) / 3 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_sqrt (show 0 \u2264 a ^ 2 + b ^ 2 + c ^ 2 from by positivity),\n      sq_sqrt (show 0 \u2264 3 * (a * b + b * c + c * a) from by positivity)]\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_80067_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 a \u2264 1) (hbc : 0 \u2264 b \u2227 b \u2264 1) (hca : 0 \u2264 c \u2227 c \u2264 1) (h : a + b + c = 1) : a * (1 - b ^ 2) * (1 - c ^ 2) + b * (1 - c ^ 2) * (1 - a ^ 2) + c * (1 - a ^ 2) * (1 - b ^ 2) \u2264 17 / 8 \u2227 a * (1 - b ^ 2) * (1 - c ^ 2) + b * (1 - c ^ 2) * (1 - a ^ 2) + c * (1 - a ^ 2) * (1 - b ^ 2) \u2265 17 / 8 * (a * b * c):= by", "target": "\n  have : (a + b + c) ^ 2 = 1 := by simp [h]\n  constructor\n  nlinarith [mul_nonneg hab.1 hbc.1, mul_nonneg hab.1 hca.1, mul_nonneg hbc.1 hca.1,\n    mul_nonneg (sq_nonneg a) (sq_nonneg b), mul_nonneg (sq_nonneg a) (sq_nonneg c),\n    mul_nonneg (sq_nonneg b) (sq_nonneg c)]\n  nlinarith [mul_nonneg hab.1 hbc.1, mul_nonneg hab.1 hca.1, mul_nonneg hbc.1 hca.1,\n    mul_nonneg (sq_nonneg a) (sq_nonneg b), mul_nonneg (sq_nonneg a) (sq_nonneg c),\n    mul_nonneg (sq_nonneg b) (sq_nonneg c)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_10161_plus : \u2200 a b c : \u211d, a * b + b * c + c * a \u2260 0 \u2192 3 / 2 * (a / (b + c) + b / (c + a) + c / (a + b)) \u2264 (a ^ 2 + b ^ 2 + c ^ 2) / (a * b + b * c + c * a) \u2228 (a ^ 2 + b ^ 2 + c ^ 2) / (a * b + b * c + c * a) \u2264 3 / 2 * (a / (b + c) + b / (c + a) + c / (a + b)):= by", "target": "\n  intro a b c h\u2080\n  by_contra! h\u2081\n  have h\u2082 := mul_self_nonneg (a - b)\n  have h\u2083 := mul_self_nonneg (b - c)\n  have h\u2084 := mul_self_nonneg (c - a)\n  have h\u2085 := mul_self_nonneg (a + b)\n  have h\u2086 := mul_self_nonneg (b + c)\n  have h\u2087 := mul_self_nonneg (c + a)\n  ring_nf at h\u2081 h\u2082 h\u2083 h\u2084 h\u2085 h\u2086 h\u2087\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_185 (n k : \u2115) : \u2211 i in Finset.range (k+1), choose (n+i) n = choose (n+k+1) (n+1) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_185_plus (n k : \u2115) (h\u2081 : 1 \u2264 k) (h\u2082 : 1 \u2264 n) : \u2211 i in Finset.Icc 1 k, (choose (n + i - 1) n) \u2265 choose k 1 \u2227 \u2211 i in Finset.Icc 1 k, (choose (n + i - 1) n) \u2265 choose k 1 \u2228 \u2211 i in Finset.Icc 1 k, (choose (n + i - 1) n) \u2265 choose k 1 \u2227 \u2211 i in Finset.Icc 1 k, (choose (n + i - 1) n) \u2265 choose k 1:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_50659_plus (x y : \u211d) :  Real.sqrt (1 + Real.sin x ^ 2) * Real.sqrt (1 + Real.sin y ^ 2) \u2265 Real.sin (x + y)  := by", "target": "\n  have h\u2081 : Real.sqrt (1 + Real.sin x ^ 2) * Real.sqrt (1 + Real.sin y ^ 2) \u2265 0 := by positivity\n  have h\u2082 : Real.sqrt (1 + Real.sin x ^ 2) * Real.sqrt (1 + Real.sin y ^ 2) \u2265 Real.sin (x + y) := by\n    have h\u2083 : Real.sin (x + y) = Real.sin x * Real.cos y + Real.cos x * Real.sin y := by rw [Real.sin_add]\n    rw [h\u2083]\n    have h\u2084 : Real.sqrt (1 + Real.sin x ^ 2) * Real.sqrt (1 + Real.sin y ^ 2) = Real.sqrt ((1 + Real.sin x ^ 2) * (1 + Real.sin y ^ 2)) := by\n      rw [Real.sqrt_mul] <;> positivity\n    rw [h\u2084]\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [Real.sin_sq_add_cos_sq x, Real.sin_sq_add_cos_sq y, sq_nonneg (Real.sin x * Real.cos y - Real.cos x * Real.sin y), sq_nonneg (Real.sin x * Real.cos y + Real.cos x * Real.sin y)]\n  linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_31937_plus (x : \u2115) (hx : 1 < x) : \u2203 p, Nat.Prime p \u2227 p \u2223 x \u2227 p \u2264 x \u2227 \u2203 y, x = p * y \u2227 y \u2264 x:= by", "target": "\n  have h : \u2203 p, Nat.Prime p \u2227 p \u2223 x := by\n    exact Nat.exists_prime_and_dvd (by linarith)\n  obtain \u27e8p, hp_prime, hp_dvd\u27e9 := h\n  have hp_le : p \u2264 x := by\n    exact Nat.le_of_dvd (by linarith) hp_dvd\n  have h_exists : \u2203 y, x = p * y \u2227 y \u2264 x := by\n    exact \u27e8x / p, \u27e8by\n      rw [Nat.mul_div_cancel' hp_dvd], by\n      exact Nat.div_le_self x p\u27e9\u27e9\n  exact \u27e8p, hp_prime, hp_dvd, hp_le, h_exists\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_11831_plus (a b : \u211d) (hab : 0 < a \u2227 0 < b) (h : 0 < a + b) (h' : 0 < a * b) (h'' : 0 < a * b * (a + b)) :  a / (a + b ^ 2) + b / (b ^ 3 + a) \u2265 1 - 13 / 10 \u2227 a / (a + b ^ 2) + b / (b ^ 3 + a) \u2265 1 - 13 / 10 \u2228 a / (a + b ^ 2) + b / (b ^ 3 + a) < 13 / 10:= by", "target": "\n  apply or_iff_not_imp_right.2\n  intro h1\n  have h2 : 0 < a + b ^ 2 := by nlinarith\n  have h3 : 0 < b ^ 3 + a := by nlinarith\n  have h4 : 0 < a * b * (a + b) := by nlinarith\n  have h5 : 0 < a * b := by nlinarith\n  have h6 : 0 < a + b := by nlinarith\n  have h7 : 0 < a * b * (a + b) * (a + b ^ 2) := by nlinarith\n  have h8 : 0 < a * b * (a + b ^ 2) := by nlinarith\n  have h9 : 0 < a * b * (a + b) * (b ^ 3 + a) := by nlinarith\n  have h10 : 0 < a * b * (b ^ 3 + a) := by nlinarith\n  field_simp [h2, h3, h5, h6, h7, h8, h9, h10]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a + b), sq_nonneg (a * b - b ^ 2),\n    sq_nonneg (b ^ 2 - a)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_66_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : a * b * c = 1) : a / b + b / c + c / a \u2265 (a ^ 2 + b ^ 2 + c ^ 2) / (a + b + c) ^ 2 * (8 + (a ^ 2 + b ^ 2 + c ^ 2) / (a * b + b * c + a * c)) \u2228 \u2203 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a * b * c = 1 \u2227 a / b + b / c + c / a < (a ^ 2 + b ^ 2 + c ^ 2) / (a + b + c) ^ 2 * (8 + (a ^ 2 + b ^ 2 + c ^ 2) / (a * b + b * c + a * c)) := by", "target": "\n  by_cases h\u2080 : a / b + b / c + c / a \u2265 (a ^ 2 + b ^ 2 + c ^ 2) / (a + b + c) ^ 2 * (8 + (a ^ 2 + b ^ 2 + c ^ 2) / (a * b + b * c + a * c))\n  exact Or.inl h\u2080\n  exact Or.inr \u27e8a, b, c, hab, hbc, hca, habc, by linarith\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_77536_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b + b * c + c * a = 1) :\n  (a * b / (a * b + 5) + b * c / (b * c + 5) + c * a / (c * a + 5)) \u2265\n    (a * b + b * c + c * a) ^ 2 / (a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + b ^ 2 * c ^ 2 + 5 * (a * b + b * c + c * a)) \u2227\n    (a * b + b * c + c * a) ^ 2 / (a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + b ^ 2 * c ^ 2 + 5 * (a * b + b * c + c * a)) \u2265 1 / 30:= by", "target": "\n  have h\u2080 : 0 \u2264 a * b := by positivity\n  have h\u2081 : 0 \u2264 b * c := by positivity\n  have h\u2082 : 0 \u2264 c * a := by positivity\n  have h\u2083 : 0 \u2264 a * b * (b * c) := by positivity\n  have h\u2084 : 0 \u2264 b * c * (c * a) := by positivity\n  have h\u2085 : 0 \u2264 c * a * (a * b) := by positivity\n  have h\u2086 : 0 \u2264 a * b * (b * c) * (c * a) := by positivity\n  constructor\n  \u00b7 field_simp\n    rw [div_le_div_iff]\n    nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b),\n      mul_self_nonneg (a * b + b * c + c * a)]\n    positivity\n    positivity\n  \u00b7 apply le_of_sub_nonneg\n    field_simp\n    rw [le_div_iff]\n    nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b),\n      mul_self_nonneg (a * b + b * c + c * a)]\n    positivity"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4943 (x y z : \u211d) : (x / (2 * x + y + z) + y / (x + 2 * y + z) + z / (x + y + 2 * z)) \u2264 3 / 4 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4943_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) : (x / (2 * x + y + z) + y / (x + 2 * y + z) + z / (x + y + 2 * z)) \u2264 3 / 4 \u2228 x * y * z = 0 \u2228 x * y > 0 \u2227 y * z > 0 \u2227 z * x > 0 \u2228 x * y * z > 0 \u2228 x * y > 0 \u2228 y * z > 0 \u2228 z * x > 0 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_78568_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 3) : (5 * a + b) * (b ^ 2 + 4 * c * a) \u2264 80 \u2228 (5 * b + c) * (c ^ 2 + 4 * a * b) \u2264 80 \u2228 (5 * c + a) * (a ^ 2 + 4 * b * c) \u2264 80 := by", "target": "\n  by_contra! h\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_nonneg hab hb, mul_nonneg hb hc, mul_nonneg hc hab, mul_nonneg (mul_nonneg hab hc) hab, mul_nonneg (mul_nonneg hb hab) hb, mul_nonneg (mul_nonneg hc hb) hc]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_47857_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b + b * c + c * a = 0) : a ^ 2 + b ^ 2 + c ^ 2 + (a ^ 2 * b ^ 2 / (a * b) + b ^ 2 * c ^ 2 / (b * c) + c ^ 2 * a ^ 2 / (c * a)) \u2265 a * b + b * c + c * a:= by", "target": "\n  have H : a * b + b * c + c * a = 0 := habc\n  have H' : a ^ 2 + b ^ 2 + c ^ 2 + (a ^ 2 * b ^ 2 / (a * b) + b ^ 2 * c ^ 2 / (b * c) + c ^ 2 * a ^ 2 / (c * a)) \u2265 a * b + b * c + c * a := by\n    have H\u2081 : a ^ 2 * b ^ 2 / (a * b) \u2265 0 := by positivity\n    have H\u2082 : b ^ 2 * c ^ 2 / (b * c) \u2265 0 := by positivity\n    have H\u2083 : c ^ 2 * a ^ 2 / (c * a) \u2265 0 := by positivity\n    nlinarith\n  linarith\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_57041_plus (a b : \u211d) (hab : a - b = 1) (h : 0 \u2264 a * b) :  a^3 - b^3 \u2265 1/4 \u2227 0 \u2264 a * b \u2227 0 \u2264 (a - b) ^ 2 \u2227 0 \u2264 (a + b) ^ 2 \u2227 0 \u2264 a ^ 2 * b ^ 2 \u2227 0 \u2264 (a - b) ^ 4 \u2227 0 \u2264 (a + b) ^ 4 \u2227 0 \u2264 a ^ 2 * b ^ 2 * (a - b) ^ 2 \u2227 0 \u2264 a ^ 2 * b ^ 2 * (a + b) ^ 2 \u2227 0 \u2264 a ^ 2 * b ^ 2 * (a - b) ^ 2 * (a + b) ^ 2  := by", "target": "\n  have h\u2081 : 0 \u2264 (a - b) ^ 2 := by positivity\n  have h\u2082 : 0 \u2264 (a + b) ^ 2 := by positivity\n  have h\u2083 : 0 \u2264 a ^ 2 * b ^ 2 := by positivity\n  have h\u2084 : 0 \u2264 (a - b) ^ 4 := by positivity\n  have h\u2085 : 0 \u2264 (a + b) ^ 4 := by positivity\n  have h\u2086 : 0 \u2264 a ^ 2 * b ^ 2 * (a - b) ^ 2 := by positivity\n  have h\u2087 : 0 \u2264 a ^ 2 * b ^ 2 * (a + b) ^ 2 := by positivity\n  have h\u2088 : 0 \u2264 a ^ 2 * b ^ 2 * (a - b) ^ 2 * (a + b) ^ 2 := by positivity\n  refine' \u27e8_, h, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087, h\u2088\u27e9\n  have h\u2089 : a^3 - b^3 = (a - b) * (a^2 + a * b + b^2) := by ring\n  rw [h\u2089, hab]\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1500 (a b c : \u211d) : (a^2 / (b + c) + b^2 / (a + c) + c^2 / (a + b)) \u2265 3 / 2 * (a^3 + b^3 + c^3) / (a^2 + b^2 + c^2) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1500_plus : \u2200 a b c : \u211d, a \u2264 1 \u2227 b \u2264 1 \u2227 c \u2264 1 \u2227 a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) * Real.sqrt (1 + c ^ 2) \u2265 1 + a * b * c := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_7117 (x y : \u211d) : (x = 45 \u2227 y = 60) \u2194 (0.1 * y + 0.25 * x = 6.15 \u2227 0.25 * y + 0.1 * x = 7.5) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_7117_plus (x y : \u211d) (h\u2080 : 0 < x \u2227 0 < y) (h\u2081 : x \u2260 y) (h\u2082 : x + y = 1) : (1 / (x * y * (x + y) ^ 2) \u2265 16) \u2228 (1 / (x * y * (x + y) ^ 2) < 16 \u2227 (x * y * (x + y) ^ 2 \u2260 0)) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_37880_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) : \u2203 a' b' c' : \u211d, (0 < a' \u2227 0 < b' \u2227 0 < c') \u2227 (Real.sqrt (a' / (b' + 8 * c')) + Real.sqrt (b' / (c' + 8 * a')) + Real.sqrt (c' / (a' + 8 * b')) \u2265 1):= by", "target": "\n  refine' \u27e81, 1, 1, \u27e8by norm_num, by norm_num, by norm_num\u27e9, _\u27e9\n  norm_num [Real.sqrt_eq_iff_sq_eq]\n  <;> norm_num\n  <;> apply le_of_pow_le_pow_left two_ne_zero\n  <;> ring_nf\n  <;> norm_num\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_81452_plus (n : \u2115) (hn : 1 < n) : (\u2211 k in Finset.Ico 1 n, (n.choose k)) \u2264 2 ^ (n - 1) * (n ^ 2 + 1):= by", "target": "\n  have : \u2211 k in Finset.Ico 1 n, (n.choose k) \u2264 2 ^ (n - 1) * (n ^ 2 + 1) := by\n    calc\n      (\u2211 k in Finset.Ico 1 n, (n.choose k)) \u2264 \u2211 k in Finset.range n, (n.choose k) := by\n        apply Finset.sum_le_sum_of_subset\n        intro x hx\n        simp only [Finset.mem_Ico, Finset.mem_range] at hx \u22a2\n        omega\n      _ = 2 ^ n - 1 := by\n        rw [\u2190 Nat.sum_range_choose]\n        simp [Finset.sum_range_succ, add_comm]\n      _ \u2264 2 ^ (n - 1) * (n ^ 2 + 1) := by\n        have : 2 ^ n - 1 \u2264 2 ^ (n - 1) * (n ^ 2 + 1) := by\n          calc\n            2 ^ n - 1 \u2264 2 ^ n := by\n              apply Nat.sub_le\n            _ \u2264 2 ^ (n - 1) * 2 ^ 1 := by\n              rw [\u2190 pow_add]\n              apply Nat.pow_le_pow_of_le_right\n              norm_num\n              omega\n            _ \u2264 2 ^ (n - 1) * (n ^ 2 + 1) := by\n              gcongr\n              <;> nlinarith\n        exact this\n  exact this"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_19252_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a + b + c = 1) : (1 - a) ^ 2 / (a + b) ^ 2 + (1 - b) ^ 2 / (b + c) ^ 2 + (1 - c) ^ 2 / (c + a) ^ 2 \u2265 2 * (1 - a - b - c) \u2227 2 * (1 - a - b - c) \u2264 3:= by", "target": "\n  have h\u2083 : 1 - a - b - c = 1 - (a + b + c) := by linarith\n  simp_all only [h\u2083, sub_self]\n  constructor\n  \u00b7 have h\u2084 : (1 - a) ^ 2 / (a + b) ^ 2 \u2265 0 := by positivity\n    have h\u2085 : (1 - b) ^ 2 / (b + c) ^ 2 \u2265 0 := by positivity\n    have h\u2086 : (1 - c) ^ 2 / (c + a) ^ 2 \u2265 0 := by positivity\n    nlinarith\n  \u00b7 nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_14088_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) :  (1 / (x * y * z)^(1 / 3)) \u2265 2 / ((x + y) * (y + z) * (z + x))^(1 / 3) \u2228 (x * y * z)^(1 / 3) \u2264 1 := by", "target": "\n  apply or_iff_not_imp_right.2\n  intro h\n  ring_nf at h \u22a2\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  <;> assumption\n  <;> try norm_num\n  <;> linarith\n  <;> assumption\n  <;> try norm_num\n  <;> linarith\n  <;> assumption\n  <;> try norm_num\n  <;> linarith\n  <;> assumption\n  <;> try norm_num\n  <;> linarith\n  <;> assumption\n  <;> try norm_num\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_8734 (m : \u2115) : (5^(2*m+3) = (3*5^m)^2 + (4*5^m)^2 + (10*5^m)^2) \u2227 (5^(2*m+4) = (12*5^m)^2 + (15*5^m)^2 + (16*5^m)^2) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_8734_plus (n : \u2115) (hn : 1 < n) : (\u2203 a b c : \u2115, a \u2264 n \u2227 b \u2264 n \u2227 c \u2264 n \u2227 (n ^ 2 = a ^ 2 + b ^ 2 + c ^ 2)) \u2194 (\u2203 a b c : \u2115, a \u2264 n \u2227 b \u2264 n \u2227 c \u2264 n \u2227 (n ^ 2 = a ^ 2 + b ^ 2 + c ^ 2) \u2227 (a * b * c \u2264 n * n * n)) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5964 : \u2200 u v : \u211d, 3 * u * v^2 - 2 * u^3 + 2 * Real.sqrt ((u^2 - v^2)^3) \u2264 (281 * u * v^2 - 314 * u^3 + Real.sqrt ((314 - 281 * u * v^2)^2 + 84 * (243 * u^2 * v^4 - 189 * v^6))) / 42 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5964_plus : \u2200 a b : \u211d, a * b \u2264 1 \u2192 0 \u2264 a \u2192 0 \u2264 b \u2192 a * b * (a^2 + b^2) \u2264 a^2 + b^2 \u2227 Real.sqrt (a^2 + b^2) \u2265 (a * b) * (a + b) / 2 \u2227 (a * b)^2 \u2264 a * b * (a^2 + b^2):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_61568_plus (n : \u2115) (hn : 1 < n) : (\u2203 x : \u2115 \u2192 \u2115, x 1 = 1 \u2227 \u2200 n, x n = x (n - 1) + (2 * x (n - 1) - 2) / n) \u2228 (\u2203 x : \u2115 \u2192 \u2115, x 1 = 2 \u2227 \u2200 n, x n = x (n - 1) + (2 * x (n - 1) - 2) / n) := by", "target": "\n  refine' Or.inl \u27e8fun n => Nat.recOn n 1 fun n hn => hn + (2 * hn - 2) / n.succ, _, fun n => _\u27e9\n  <;> simp\n  <;> cases n <;> simp [Nat.succ_eq_add_one, Nat.div_eq_of_lt, hn]\n  <;> omega"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_29576_plus : \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a * b * c \u2264 1 \u2192  Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) * Real.sqrt (1 + c ^ 2) \u2265 Real.sqrt (2 * (a * b + b * c + c * a)) * Real.sqrt (1 + a * b * c) \u2228 (\u2203 x y z : \u211d, (x + y + z = 0 \u2227 (x ^ 2 + y ^ 2 + z ^ 2) \u2264 1)):= by", "target": "\n  intro a b c h\u2080\n  right\n  use 0, 0, 0\n  simp"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5842 (a b c : \u211d) (habc : a * b * c = 1) : (1 / (2 * a + 1) + 1 / (2 * b + 1) + 2 / (Real.sqrt 3 * (2 * c + 1) * Real.sqrt (2 * c + 1))) \u2265 8 / 9 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5842_plus (a b c : \u211d) (habc : a * b * c = 1) (h : 0 < a \u2227 0 < b \u2227 0 < c) : (1 / (2 * a + 1) + 1 / (2 * b + 1) + 2 / (Real.sqrt 3 * (2 * c + 1) * Real.sqrt (2 * c + 1))) \u2265 8 / 9 \u2228 (1 / (2 * a + 1) + 1 / (2 * b + 1) + 2 / (Real.sqrt 3 * (2 * c + 1) * Real.sqrt (2 * c + 1))) < 8 / 9 \u2227 1 / (2 * a + 1) + 1 / (2 * b + 1) + 2 / (Real.sqrt 3 * (2 * c + 1) * Real.sqrt (2 * c + 1)) \u2265 0 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_67738_plus (x y z : \u211d) (hx : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z) (h : x + y + z = 1) :  (1 - x * y) * (1 - y * z) * (1 - z * x) \u2265 0 \u2227 (1 - x * y) * (1 - y * z) * (1 - z * x) \u2265 (x * y + y * z + z * x) * (1 - x * y * z):= by", "target": "\n  have h1 : 0 \u2264 x * y := by nlinarith\n  have h2 : 0 \u2264 y * z := by nlinarith\n  have h3 : 0 \u2264 z * x := by nlinarith\n  have h4 : 0 \u2264 x * y * z := by nlinarith\n  have h5 : 0 \u2264 1 - x * y := by nlinarith\n  have h6 : 0 \u2264 1 - y * z := by nlinarith\n  have h7 : 0 \u2264 1 - z * x := by nlinarith\n  have h8 : 0 \u2264 (1 - x * y) * (1 - y * z) := by nlinarith\n  have h9 : 0 \u2264 (1 - y * z) * (1 - z * x) := by nlinarith\n  have h10 : 0 \u2264 (1 - z * x) * (1 - x * y) := by nlinarith\n  have h11 : 0 \u2264 (1 - x * y) * (1 - y * z) * (1 - z * x) := by nlinarith\n  have h12 : (x * y + y * z + z * x) * (1 - x * y * z) \u2264 (1 - x * y) * (1 - y * z) * (1 - z * x) := by\n    nlinarith [mul_nonneg h1 h2, mul_nonneg h2 h3, mul_nonneg h3 h1,\n      mul_nonneg (sub_nonneg.mpr h1) (sub_nonneg.mpr h2),\n      mul_nonneg (sub_nonneg.mpr h2) (sub_nonneg.mpr h3),\n      mul_nonneg (sub_nonneg.mpr h3) (sub_nonneg.mpr h1)]\n  exact \u27e8h11, h12\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_9569_plus (A : Fin 5 \u2192 \u211d) (h\u2081 : \u2200 i, A i \u2265 0) (h\u2082 : \u2211 i, A i = 1) (h\u2083 : \u2211 i, (A i)^2 = 1/3) : \u2211 i, (A i)^3 \u2264 1/3 \u2227 \u2211 i, (A i)^3 \u2265 0:= by", "target": "\n  have h\u2084 : \u2211 i, (A i)^3 \u2264 1/3 := by\n    have h\u2084\u2081 : \u2211 i, (A i)^3 \u2264 \u2211 i, (A i)^2 := by\n      apply Finset.sum_le_sum\n      intro i hi\n      have h\u2084\u2081\u2081 : A i \u2264 1 := by\n        have h\u2084\u2081\u2082 : \u2211 i, A i = 1 := h\u2082\n        have h\u2084\u2081\u2083 : A i \u2264 \u2211 i, A i := by apply Finset.single_le_sum (fun i _ => h\u2081 i) hi\n        linarith\n      have h\u2084\u2081\u2082 : (A i)^2 \u2264 (A i)^2 := by linarith\n      have h\u2084\u2081\u2083 : (A i)^3 \u2264 (A i)^2 := by\n        nlinarith [sq_nonneg (A i - 1 / 2)]\n      linarith\n    linarith\n  have h\u2085 : \u2211 i, (A i)^3 \u2265 0 := by\n    apply Finset.sum_nonneg\n    intro x hx\n    have h\u2085\u2081 : 0 \u2264 A x := h\u2081 x\n    have h\u2085\u2082 : 0 \u2264 (A x)^2 := by nlinarith\n    have h\u2085\u2083 : 0 \u2264 (A x)^3 := by nlinarith\n    linarith\n  exact \u27e8h\u2084, h\u2085\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_76474_plus (x y z : \u2115) (h\u2081 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2082 : 1/x - 1/y = 1/z) : \u2203 k : \u2115, k^2 = (x * y) * (y * z) * (z * x):= by", "target": "\n  refine \u27e8x * y * z,?_\u27e9\n  cases' x with x <;> cases' y with y <;> cases' z with z <;> simp_all [Nat.div_eq_of_lt]\n  <;> ring_nf <;> linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4727 (x y z : \u211d) : x^3 + y^3 + z^3 + x^2*y + y^2*z + z^2*x \u2265 2*(x*y^2 + y*z^2 + z*x^2) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4727_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) : x ^ 3 + y ^ 3 + z ^ 3 + x ^ 2 * y + y ^ 2 * z + z ^ 2 * x \u2265 2 * (x * y ^ 2 + y * z ^ 2 + z * x ^ 2) \u2228 x ^ 3 + y ^ 3 + z ^ 3 + x ^ 2 * y + y ^ 2 * z + z ^ 2 * x < 2 * (x * y ^ 2 + y * z ^ 2 + z * x ^ 2) \u2227 (x ^ 3 + y ^ 3 + z ^ 3 + x ^ 2 * y + y ^ 2 * z + z ^ 2 * x) \u2265 2 * (x * y ^ 2 + y * z ^ 2 + z * x ^ 2):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_17172_plus (a b c d : \u211d) (h\u2081 : 0 < a \u2227 0 < b \u2227 0 < c \u2227 0 < d) (h\u2082 : a + b + c + d = 4) (h\u2083 : a * b * c * d = 1) : a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2 \u2265 4 / (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) \u2228 \u2203 x y : \u211d, x ^ 2 + y ^ 2 < 4 \u2227 (a + b + c + d) ^ 2 \u2264 16:= by", "target": "\n  apply Or.inr\n  use 1, 1\n  constructor\n  nlinarith\n  nlinarith [h\u2082, h\u2083]\n  <;> linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_7112 (f g h : \u2115 \u2192 \u2115) (h\u2081 : \u2200 n, f (g n) = n + 2016^2015) (h\u2082 : \u2200 n, f (f n) = 2 * h n + 1) (h\u2083 : Function.Injective h) : \u2203 a b c : \u2115 \u2192 \u2115, (\u2200 n, a (b n) = n + 2016^2015) \u2227 (\u2200 n, a (a n) = 2 * c n + 1) \u2227 (\u2200 n, c n \u2260 c m) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_7112_plus (n : \u2115) (hn : 1 < n) : (\u2203 x y : \u2115, 1 < x \u2227 1 < y \u2227 y \u2223 x \u2227 (x^(n - 1) + y^(n - 1) \u2223 x^n + y^n)) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_51737_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a) (h\u2082 : 0 \u2264 b) (h\u2083 : 0 \u2264 c) (h\u2084 : a + b + c = 1) : a * b * c * (a + b + c) ^ 2 \u2264 a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2 + 3 * (a * b * c * (a * b + b * c + c * a)):= by", "target": "\n  have h\u2085 : 0 \u2264 a * b := by positivity\n  have h\u2086 : 0 \u2264 b * c := by positivity\n  have h\u2087 : 0 \u2264 c * a := by positivity\n  have h\u2088 : 0 \u2264 a * b * c := by positivity\n  have h\u2089 : 0 \u2264 a * b * c * (a + b + c) := by positivity\n  have h\u2081\u2080 : 0 \u2264 a * b * c * (a * b + b * c + c * a) := by positivity\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b + b * c + c * a),\n    mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a),\n    mul_self_nonneg (c * a - a * b)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2447 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x^2 + y^2 + z^2 = x*y*z) : x*y + y*z + z*x \u2265 4*(x + y + z) - 9 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2447_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x^2 + y^2 + z^2 = x*y*z) : \u2203 a b c : \u211d, a * b * c \u2264 x^2 + y^2 + z^2 \u2227 a * b * c \u2264 x * y * z \u2227 a * b * c \u2264 x * y * z \u2227 0 < a * b * c:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_35748_plus (n : \u2115) (hn : 1 < n) : (\u2203 k : \u2115, n \u2223 k) \u2228 (\u2200 k : \u2115, \u00ac n \u2223 k) := by", "target": "\n  by_cases h : \u2203 k : \u2115, n \u2223 k\n  exacts [Or.inl h, Or.inr fun k => by simp_all]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_68848_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b + b * c + c * a \u2260 0) : (1 / (a ^ 2 + b ^ 2 + c ^ 2) + 1 / (b ^ 2 + c ^ 2 + a ^ 2) + 1 / (c ^ 2 + a ^ 2 + b ^ 2)) \u2265 3 / (a ^ 2 + b ^ 2 + c ^ 2 + b ^ 2 + c ^ 2 + a ^ 2):= by", "target": "\n  rcases eq_or_lt_of_le hab with (rfl | h\u2081) <;> rcases eq_or_lt_of_le hb with (rfl | h\u2082) <;> rcases eq_or_lt_of_le hc with (rfl | h\u2083) <;>\n    simp_all [add_assoc, add_comm, add_left_comm]\n  all_goals\n    ring_nf\n    apply le_of_sub_nonneg\n    field_simp\n    ring_nf\n    positivity"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_6746 : \u2200 a b c : \u211d, (a * b + a * c + b * c) ^ 2 \u2265 3 * a * b * c * (a + b + c) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_6746_plus : \u2200 a b c : \u211d, \u2203 d : \u211d, d \u2265 0 \u2227 (a * b + a * c + b * c) ^ 2 \u2265 3 * a * b * c * (a + b + c) + d * (a ^ 2 + b ^ 2 + c ^ 2):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_351_plus (x y z : \u211d) (h\u2080 : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z) (h\u2081 : x + y + z = 1) (h\u2082 : 1 < p) (h\u2083 : 1 < q) (h\u2084 : 1 < r) (h\u2085 : 1 / p + 1 / q + 1 / r = 1) : (x + y + z) ^ (1 / p) * (x + y + z) ^ (1 / q) * (x + y + z) ^ (1 / r) \u2265 x * y * z:= by", "target": "\n  simp_all only [one_div, add_assoc, add_right_inj, add_left_inj, add_comm]\n  ring_nf\n  nlinarith [mul_self_nonneg (x + y + z), mul_self_nonneg (x - y), mul_self_nonneg (x - z), mul_self_nonneg (y - z)]\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_46515_plus (a b c : \u211d) (hab : 0 \u2264 a) (hbc : 0 \u2264 b) (hca : 0 \u2264 c) :  Real.sqrt (8 * a ^ 2 + b ^ 2) + Real.sqrt (8 * b ^ 2 + c ^ 2) + Real.sqrt (8 * c ^ 2 + a ^ 2) \u2265 3 * (a + b + c) \u2228 (\u2203 x y z : \u211d, Real.sqrt (8 * x ^ 2 + y ^ 2) + Real.sqrt (8 * y ^ 2 + z ^ 2) + Real.sqrt (8 * z ^ 2 + x ^ 2) < 3 * (x + y + z)):= by", "target": "\n  by_cases h : Real.sqrt (8 * a ^ 2 + b ^ 2) + Real.sqrt (8 * b ^ 2 + c ^ 2) + Real.sqrt (8 * c ^ 2 + a ^ 2) \u2265 3 * (a + b + c)\n  exact Or.inl h\n  exact Or.inr \u27e8a, b, c, by linarith\u27e9\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1468 : \u2200 t : \u211d, 2 * (t ^ 2 - t + 1) / (t ^ 2 + 1) \u2265 1 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1468_plus : \u2200 a b c : \u211d, a * b > 0 \u2227 b * c > 0 \u2227 c * a > 0 \u2227 a + b + c > 0 \u2227 a + b + c \u2264 1 \u2192 a * b * (1 - a ^ 2) * (1 - b ^ 2) * (1 - c ^ 2) \u2265 0:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_44571_plus (a b c d : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hd : 0 \u2264 d) (habc : a + b + c + d = 1) (h : a * b * c * d \u2264 1 / 16) : a * b + b * c + c * d + d * a \u2264 1 / 4:= by", "target": "\n  nlinarith [sq_nonneg (a - b + c - d), mul_nonneg hab hb, mul_nonneg hc hd,\n    mul_nonneg (mul_nonneg hab hc) hd, mul_nonneg (mul_nonneg hb hd) hc,\n    mul_nonneg (mul_nonneg hab hd) hc, mul_nonneg (mul_nonneg hb hc) hd]\n  <;> linarith\n  <;> nlinarith\n  <;> linarith\n  <;> nlinarith\n  <;> linarith\n  <;> nlinarith\n  <;> linarith\n  <;> nlinarith\n  <;> linarith\n  <;> nlinarith\n  <;> linarith\n  <;> nlinarith\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_29124_plus (a b c : \u211d) (h\u2081 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2082 : a + b + c = 1) : (1 + 4 * a / (b + c)) * (1 + 4 * b / (a + c)) * (1 + 4 * c / (a + b)) \u2265 27 * (a * b + b * c + c * a):= by", "target": "\n  have h\u2083 : 0 < b + c := by linarith\n  have h\u2084 : 0 < a + c := by linarith\n  have h\u2085 : 0 < a + b := by linarith\n  have h\u2086 : 0 < b * c := by nlinarith\n  have h\u2087 : 0 < a * c := by nlinarith\n  have h\u2088 : 0 < a * b := by nlinarith\n  have h\u2089 : 0 < (b + c) * (a + c) * (a + b) := by positivity\n  have h\u2081\u2080 : 0 < (b + c) * (a + c) * (a + b) * (b + c) * (a + c) * (a + b) := by positivity\n  field_simp [h\u2081.1.ne', h\u2081.2.1.ne', h\u2081.2.2.ne', h\u2083.ne', h\u2084.ne', h\u2085.ne', h\u2086.ne', h\u2087.ne', h\u2088.ne', h\u2089.ne']\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b + b * c + c * a), mul_self_nonneg (a * b - b * c),\n    mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1032 (x y z t : \u211d) (h : x*y*z*t = 1) : 1/(1 + x) + 1/(1 + y) + 1/(1 + z) + 1/(1 + t) \u2265 1 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1032_plus (x y z t : \u211d) (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z \u2227 0 < t) (h\u2081 : x * y * z * t = 1) : 1 / (1 + x) + 1 / (1 + y) + 1 / (1 + z) + 1 / (1 + t) \u2265 1 \u2227 1 / (1 + x) + 1 / (1 + y) + 1 / (1 + z) + 1 / (1 + t) \u2265 1 / (x * y * z * t + 1):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_33752_plus (a b c d : \u211d) (hab : a + b \u2265 2 * (c + d)) (h : a^2 + b^2 = 2 * (c^2 + d^2)) : a^3 + b^3 \u2264 2 * (c^3 + d^3) \u2228 (a^3 + b^3 > 2 * (c^3 + d^3) \u2227 a^2 + b^2 = 2 * (c^2 + d^2)):= by", "target": "\n  by_cases h\u2080 : a^3 + b^3 \u2264 2 * (c^3 + d^3)\n  exact Or.inl h\u2080\n  exact Or.inr \u27e8by nlinarith [sq_nonneg (a - b), sq_nonneg (c - d)], by linarith\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_20414_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 1) (h' : a * b + b * c + c * a \u2264 1 / 3) : a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2 \u2264 1 / 3 * (a ^ 2 + b ^ 2 + c ^ 2):= by", "target": "\n  have h\u2081 : 0 \u2264 a * b := by nlinarith\n  have h\u2082 : 0 \u2264 b * c := by nlinarith\n  have h\u2083 : 0 \u2264 c * a := by nlinarith\n  have h\u2084 : (a + b + c) ^ 2 = 1 := by simp [h]\n  nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a)]\n  <;> linarith\n  <;> linarith\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_45897_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) : (1 / (2 * a + b + c) ^ 2 + 1 / (2 * b + c + a) ^ 2 + 1 / (2 * c + a + b) ^ 2) \u2265 3 / 4:= by", "target": "\n  have h\u2081 : 0 \u2264 a * b := by positivity\n  have h\u2082 : 0 \u2264 b * c := by positivity\n  have h\u2083 : 0 \u2264 c * a := by positivity\n  have h\u2084 : (2 * a + b + c) ^ 2 \u2264 4 := by\n    nlinarith\n  have h\u2085 : (2 * b + c + a) ^ 2 \u2264 4 := by\n    nlinarith\n  have h\u2086 : (2 * c + a + b) ^ 2 \u2264 4 := by\n    nlinarith\n  have h\u2087 : 1 / (2 * a + b + c) ^ 2 \u2265 1 / 4 := by\n    rw [ge_iff_le]\n    rw [div_le_div_iff] <;> nlinarith\n  have h\u2088 : 1 / (2 * b + c + a) ^ 2 \u2265 1 / 4 := by\n    rw [ge_iff_le]\n    rw [div_le_div_iff] <;> nlinarith\n  have h\u2089 : 1 / (2 * c + a + b) ^ 2 \u2265 1 / 4 := by\n    rw [ge_iff_le]\n    rw [div_le_div_iff] <;> nlinarith\n  linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_26100_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a + b + c = 1) (h\u2083 : 0 \u2264 a * b + b * c + c * a) : (1 + Real.sqrt (1 + (a * b + b * c + c * a) ^ 2)) ^ 2 \u2265 (a + b + c) ^ 2:= by", "target": "\n  have h\u2084 : 0 \u2264 a * b + b * c + c * a := by linarith\n  have h\u2085 : (a + b + c) ^ 2 = 1 := by simp [h\u2082]\n  have h\u2086 : (1 + Real.sqrt (1 + (a * b + b * c + c * a) ^ 2)) ^ 2 \u2265 1 := by\n    have h\u2087 : Real.sqrt (1 + (a * b + b * c + c * a) ^ 2) \u2265 0 := Real.sqrt_nonneg _\n    nlinarith [sq_sqrt (show (1 + (a * b + b * c + c * a) ^ 2) \u2265 0 by positivity)]\n  linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_42431_plus (a b c : \u2115) (h\u2081 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2082 : a^3 + b^3 + c^3 = 216) : a + b + c \u2264 18 \u2228 a + b + c > 18 \u2227 (a + b + c) ^ 2 \u2264 216^2 := by", "target": "\n  by_cases h : a + b + c \u2264 18\n  exact Or.inl h\n  have : a + b + c > 18 := by\n    linarith\n  have h\u2083 : (a + b + c) ^ 2 \u2264 216 ^ 2 := by\n    have : a + b + c \u2264 216 := by\n      nlinarith [pow_two (a + b + c), pow_two a, pow_two b, pow_two c]\n    nlinarith\n  exact Or.inr \u27e8by linarith, h\u2083\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_56765_plus (f : \u211d \u2192 \u211d) (hf : \u2200 x y, f (x + y) = f (x*y) - f x + f (-y)) : (\u2200 x, f x = x) \u2192 \u2200 x, f (f x) = x \u2227 \u2200 x, f (-x) = -f x:= by", "target": "\n  rintro h x\n  have h1 := hf 1 1\n  have h2 := hf 0 1\n  have h3 := hf 1 (-1)\n  have h4 := hf (-1) 1\n  have h5 := hf 1 2\n  have h6 := hf 2 1\n  have h7 := hf (-1) (-1)\n  norm_num at h1 h2 h3 h4 h5 h6 h7\n  linarith [h 0, h 1, h (-1), h 2, h (-2)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_70712_plus  (n : \u2115)\n  (k : \u2115)\n  (h\u2080 : 2 \u2264 k)\n  (h\u2081 : n = k^2 - 1) :\n  (\u2211 i in Finset.range k, ((1:\u211d) / k)) \u2264 k:= by", "target": "\n  cases' k with k\n  exfalso\n  linarith\n  simp_all [Finset.sum_range_succ, Nat.cast_add, Nat.cast_one, add_comm, add_left_comm, add_assoc]\n  <;> norm_cast\n  <;> field_simp\n  <;> ring\n  <;> norm_cast\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_28994_plus (n : \u2115) (hn : 1 < n) : (\u2203 k : \u2115, 1 < k \u2227 k \u2223 n \u2227 k \u2223 n^2) \u2194 \u2203 k : \u2115, 1 < k \u2227 k \u2223 n \u2227 k \u2223 n^2 \u2227 k \u2264 n \u2227 k \u2264 n^2:= by", "target": "\n  constructor\n  intro h\n  obtain \u27e8k, hk1, hk2, hk3\u27e9 := h\n  exact \u27e8k, hk1, hk2, hk3, by\n    have hk4 : k \u2264 n := by\n      apply Nat.le_of_dvd\n      linarith\n      exact hk2\n    have hk5 : k \u2264 n ^ 2 := by\n      apply Nat.le_of_dvd\n      nlinarith\n      exact dvd_pow hk2 (by linarith)\n    exact \u27e8hk4, hk5\u27e9\u27e9\n  intro h\n  obtain \u27e8k, hk1, hk2, hk3, hk4, hk5\u27e9 := h\n  exact \u27e8k, hk1, hk2, hk3\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_10425_plus (a b c d : \u211d) (h\u2080 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 0 \u2264 d) (h\u2081 : a + b + c + d \u2264 1) : 1 / 4 * (b ^ 2 + c ^ 2 + d ^ 2 + a ^ 2) ^ 2 \u2265 b ^ 2 * c * d + a * c ^ 2 * d + a * b * d ^ 2 + a ^ 2 * b * c \u2227 (1 / 2) * (a + b + c + d) ^ 2 \u2265 a * b + a * c + a * d + b * c + b * d + c * d:= by", "target": "\n  constructor\n  nlinarith [sq_nonneg (b - c), sq_nonneg (b - d), sq_nonneg (c - d), sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (a - d), mul_nonneg h\u2080.1 h\u2080.2.1, mul_nonneg h\u2080.1 h\u2080.2.2.1, mul_nonneg h\u2080.1 h\u2080.2.2.2, mul_nonneg h\u2080.2.1 h\u2080.2.2.1, mul_nonneg h\u2080.2.1 h\u2080.2.2.2, mul_nonneg h\u2080.2.2.1 h\u2080.2.2.2]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (a - d), sq_nonneg (b - c), sq_nonneg (b - d), sq_nonneg (c - d)]\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_35933_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 1) : (x * y) ^ 2 / (x ^ 2 + y ^ 2) + (y * z) ^ 2 / (y ^ 2 + z ^ 2) + (z * x) ^ 2 / (z ^ 2 + x ^ 2) \u2264 1 \u2227 (x * y) ^ 2 / (x ^ 2 + y ^ 2) + (y * z) ^ 2 / (y ^ 2 + z ^ 2) + (z * x) ^ 2 / (z ^ 2 + x ^ 2) \u2265 0:= by", "target": "\n  have h\u2081 : (x * y) ^ 2 / (x ^ 2 + y ^ 2) \u2264 (x ^ 2 + y ^ 2) / 2 := by\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (x - y), h]\n  have h\u2082 : (y * z) ^ 2 / (y ^ 2 + z ^ 2) \u2264 (y ^ 2 + z ^ 2) / 2 := by\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (y - z), h]\n  have h\u2083 : (z * x) ^ 2 / (z ^ 2 + x ^ 2) \u2264 (z ^ 2 + x ^ 2) / 2 := by\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (z - x), h]\n  have h\u2084 : (x * y) ^ 2 / (x ^ 2 + y ^ 2) + (y * z) ^ 2 / (y ^ 2 + z ^ 2) + (z * x) ^ 2 / (z ^ 2 + x ^ 2) \u2264 1 := by\n    nlinarith\n  have h\u2085 : (x * y) ^ 2 / (x ^ 2 + y ^ 2) + (y * z) ^ 2 / (y ^ 2 + z ^ 2) + (z * x) ^ 2 / (z ^ 2 + x ^ 2) \u2265 0 := by\n    positivity\n  exact \u27e8h\u2084, h\u2085\u27e9\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_28575_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a * b + a * c + b * c = 3) :  Real.sqrt (a ^ 2 + b ^ 2) * Real.sqrt (b ^ 2 + c ^ 2) * Real.sqrt (c ^ 2 + a ^ 2) \u2265 Real.sqrt (2 * (a * b * (a * c) + b * c * (b * a) + c * a * (c * b)))  := by", "target": "\n  have h\u2080 : Real.sqrt (a ^ 2 + b ^ 2) * Real.sqrt (b ^ 2 + c ^ 2) * Real.sqrt (c ^ 2 + a ^ 2) = Real.sqrt ((a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2) * (c ^ 2 + a ^ 2)) := by\n    rw [Real.sqrt_mul, Real.sqrt_mul]\n    all_goals positivity\n  rw [h\u2080]\n  apply Real.sqrt_le_sqrt\n  nlinarith [sq_nonneg (a ^ 2 + b ^ 2 - b ^ 2 - c ^ 2), sq_nonneg (b ^ 2 + c ^ 2 - c ^ 2 - a ^ 2), sq_nonneg (c ^ 2 + a ^ 2 - a ^ 2 - b ^ 2),\n    mul_nonneg hab.1 hab.2.1, mul_nonneg hab.2.1 hab.2.2, mul_nonneg hab.1 hab.2.2, sq_nonneg (a * b + b * c + c * a), sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_1028_plus (A : Fin 5 \u2192 \u211d) (hA : \u2200 i, 0 \u2264 A i) (hA' : \u2211 i, A i = 1) (hA'' : \u2211 i, i * A i \u2264 1) : \u2211 i, (1 / 3) * (1 - A i) ^ 2 \u2265 1 / 3 - 1:= by", "target": "\n  have h\u2081 : (\u2211 i : Fin 5, (1 / 3) * (1 - A i) ^ 2) \u2265 1 / 3 - 1 := by\n    have h\u2082 : \u2211 i : Fin 5, (1 / 3) * (1 - A i) ^ 2 \u2265 0 := by\n      apply Finset.sum_nonneg\n      intro x hx\n      nlinarith [hA x, hA' ]\n    nlinarith [hA', hA'', h\u2082]\n  exact h\u2081"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_65650_plus (p : \u2115) (hp : 1 < p) (A : Finset \u2115) (hA : A.card \u2265 2) (hA' : \u2200 a \u2208 A, a \u2208 Set.Icc 1 p) (hA'' : \u2200 a \u2208 A, \u2200 b \u2208 A, a \u2260 b \u2192 (a : \u2115) + b \u2260 0) : (\u2211 i in A, (i : \u2115)) \u2265 2 := by", "target": "\n  have hA''' : \u2200 a \u2208 A, \u2200 b \u2208 A, a \u2260 b \u2192 (a : \u2115) + b \u2260 0 := by\n    intro a ha b hb hab\n    exact hA'' a ha b hb hab\n  have hA'''' : \u2211 i in A, (i : \u2115) \u2265 2 := by\n    have hA''''' : \u2211 i in A, (i : \u2115) \u2265 2 := by\n      calc\n        (\u2211 i in A, (i : \u2115)) \u2265 \u2211 i in A, 1 := by\n          exact Finset.sum_le_sum fun x hx \u21a6 by\n            simp_all [Finset.mem_filter]\n        _ = A.card := by simp [Finset.sum_const]\n        _ \u2265 2 := by\n          linarith [hA]\n    exact hA'''''\n  exact hA''''"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5156 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (Real.sqrt (a / (a + b)) + Real.sqrt (b / (b + c)) + Real.sqrt (c / (c + a))) \u2264 2 * Real.sqrt (1 + (abc / ((a + b) * (b + c) * (c + a)))) \u2227 2 * Real.sqrt (1 + (abc / ((a + b) * (b + c) * (c + a)))) \u2264 3 / Real.sqrt 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5156_plus : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 \u2203 x y z : \u211d, x * y * z \u2264 (a * b * c) \u2227 (x + y + z) \u2264 (a + b + c) \u2227 (1 / x + 1 / y + 1 / z) \u2265 (1 / a + 1 / b + 1 / c):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_24661_plus : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 a * b * c > 0 \u2227 (\u2203 x y z : \u211d, x > 0 \u2227 y > 0 \u2227 z > 0 \u2227 a * (a ^ 2 + b * c) / (a + b) + b * (b ^ 2 + a * c) / (b + c) + c * (c ^ 2 + a * b) / (c + a) \u2265 (x + y + z) ^ 2 / 3):= by", "target": "\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  constructor\n  positivity\n  use 1 / 3 * (a + b + c), 1 / 3 * (a + b + c), 1 / 3 * (a + b + c)\n  constructor\n  positivity\n  constructor\n  positivity\n  constructor\n  positivity\n  field_simp [ha.ne', hb.ne', hc.ne']\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le,\n    mul_nonneg (sq_nonneg (a - b)) ha.le, mul_nonneg (sq_nonneg (b - c)) hb.le, mul_nonneg (sq_nonneg (c - a)) hc.le,\n    mul_nonneg (sq_nonneg (a - b)) hb.le, mul_nonneg (sq_nonneg (b - c)) hc.le, mul_nonneg (sq_nonneg (c - a)) ha.le]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_55435_plus : \u2200 a b : \u2115, a \u2264 b \u2192 Finset.card (Finset.filter (\u03bb x => 6\u2223x) (Finset.Icc a b)) \u2264 (b - a + 1):= by", "target": "\n  intro a b hab\n  have : Finset.card (Finset.filter (\u03bb x => 6\u2223x) (Finset.Icc a b)) \u2264 Finset.card (Finset.Icc a b):= by\n    apply Finset.card_le_card\n    apply Finset.filter_subset\n  simp [Finset.Icc_eq_empty_of_lt, hab] at this\n  omega\n  <;> rfl"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_48009_plus (n : \u2115) : \u2203 k : \u2115, n < 2 ^ k \u2227 k \u2264 n + 1 \u2227 \u2203 k' : \u2115, n \u2264 2 ^ k' \u2227 k' \u2264 n + 1:= by", "target": "\n  use n + 1\n  have h\u2081 : n < 2 ^ (n + 1) := by\n    calc\n      n < 2 ^ n := by\n        exact Nat.lt_pow_self (by norm_num) n\n      _ \u2264 2 ^ (n + 1) := by\n        exact Nat.pow_le_pow_of_le_right (by norm_num) (by linarith)\n  have h\u2082 : (n + 1) \u2264 n + 1 := by linarith\n  have h\u2083 : \u2203 k' : \u2115, n \u2264 2 ^ k' \u2227 k' \u2264 n + 1 := by\n    use n\n    constructor\n    \u00b7 exact le_of_lt (Nat.lt_pow_self (by norm_num) n)\n    \u00b7 linarith\n  exact \u27e8h\u2081, h\u2082, h\u2083\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_11346_plus (n : \u2115) (hn : 2 \u2264 n) (x : Fin n \u2192 \u211d) : \u2211 i : Fin n, \u220f j in Finset.univ.erase i, (x i - x j) ^ 2 \u2265 0 \u2228 \u2211 i : Fin n, \u220f j in Finset.univ.erase i, (x i - x j) ^ 2 < 0 := by", "target": "\n  by_cases h : \u2211 i : Fin n, \u220f j in Finset.univ.erase i, (x i - x j) ^ 2 \u2265 0\n  exact Or.inl h\n  exact Or.inr (by linarith)\n  <;> aesop\n  <;> aesop\n  <;> aesop"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_38827_plus (n : \u2115) (h\u2081 : 1 < n) : (\u2211 k in Finset.Ico 1 n, 1 / k : \u211d) \u2264 n - 1:= by", "target": "\n  cases n with\n  | zero => contradiction\n  | succ n =>\n    clear h\u2081\n    induction' n with n IH\n    \u00b7 norm_num\n    \u00b7 cases n with\n      | zero => norm_num\n      | succ n =>\n        simp_all [Finset.sum_Ico_succ_top]\n        norm_num\n        apply le_trans (add_le_add_right IH _)\n        norm_num\n        apply le_of_sub_nonneg\n        field_simp\n        ring_nf\n        norm_num\n        positivity"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_39172_plus : \u2200 a b c d : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 d > 0 \u2192 a * b * c * d \u2260 0 \u2227 a ^ 4 + b ^ 4 + c ^ 4 + d ^ 4 \u2265 4 * (a * b * c * d):= by", "target": "\n  rintro a b c d \u27e8h\u2081, h\u2082, h\u2083, h\u2084\u27e9\n  have h\u2085 : 0 < a * b := by positivity\n  have h\u2086 : 0 < c * d := by positivity\n  have h\u2087 : 0 < a * b * c * d := by positivity\n  have h\u2088 : a ^ 2 * b ^ 2 * c ^ 2 * d ^ 2 \u2265 0 := by positivity\n  have h\u2089 : a ^ 4 + b ^ 4 + c ^ 4 + d ^ 4 \u2265 4 * (a * b * c * d) := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (a - d), sq_nonneg (b - c),\n      sq_nonneg (b - d), sq_nonneg (c - d), sq_nonneg (a ^ 2 - b ^ 2),\n      sq_nonneg (a ^ 2 - c ^ 2), sq_nonneg (a ^ 2 - d ^ 2), sq_nonneg (b ^ 2 - c ^ 2),\n      sq_nonneg (b ^ 2 - d ^ 2), sq_nonneg (c ^ 2 - d ^ 2)]\n  exact \u27e8by positivity, h\u2089\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_5515_plus : \u2200 n : \u2115, 1 < n \u2192 \u2203 k : \u2115, k \u2264 n \u2227 \u2203 m : \u2115, m < n \u2227 ((n:\u211d)^(1/n) - 1)^2 < 2/(n-1):= by", "target": "\n  rintro n (hn : 1 < n)\n  use 1\n  constructor\n  linarith\n  use 0\n  constructor\n  linarith\n  cases n with\n  | zero => linarith\n  | succ n =>\n    cases n with\n    | zero => linarith\n    | succ n =>\n      simp [Nat.div_eq_of_lt, hn]\n      <;> norm_num\n      <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_11391_plus (n : \u2115) (x : \u2115 \u2192 \u211d) : \u2203 f : \u211d \u2192 \u211d, \u2200 k, k \u2208 Finset.range n \u2192 f (x k) \u2264 Real.sqrt (x k - k ^ 2):= by", "target": "\n  use fun a => 0\n  intro k hk\n  have h1 : k \u2208 Finset.range n := hk\n  have h2 : 0 \u2264 Real.sqrt (x k - k ^ 2) := Real.sqrt_nonneg _\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_43140_plus (a b c k : \u211d) (hab : a + b + c = 3) (h : a > 0 \u2227 b > 0 \u2227 c > 0) (hk : k > 0) (h\u2080 : a * b > 0 \u2227 b * c > 0 \u2227 c * a > 0) (h\u2081 : a ^ 2 + b ^ 2 + c ^ 2 = 3) (h\u2082 : k < 1) : (a ^ 2 / (a + k * b ^ 2) + b ^ 2 / (b + k * c ^ 2) + c ^ 2 / (c + k * a ^ 2)) \u2265 3 / (k + 1) \u2228 (a ^ 2 / (a + k * b ^ 2) + b ^ 2 / (b + k * c ^ 2) + c ^ 2 / (c + k * a ^ 2)) < 3 / (k + 1) \u2227 3 / (k + 1) \u2264 3:= by", "target": "\n  by_cases h\u2083 : (a ^ 2 / (a + k * b ^ 2) + b ^ 2 / (b + k * c ^ 2) + c ^ 2 / (c + k * a ^ 2)) \u2265 3 / (k + 1)\n  exact Or.inl h\u2083\n  exact Or.inr \u27e8by linarith, by\n    have : 0 < k + 1 := by linarith\n    rw [div_le_iff this]\n    nlinarith\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_28644_plus (m : \u2115) (hm : 0 < m) : \u2203 n : \u2115, n \u2223 2 ^ n + m \u2227 \u2200 k : \u2115, k \u2223 2 ^ k + m \u2192 k \u2264 n \u2228 k \u2265 n + 1  := by", "target": "\n  use 1\n  constructor\n  exact by simp [hm]\n  intro k hk\n  have h1 : k \u2264 1 \u2228 k \u2265 2 := by omega\n  cases' h1 with h1 h1\n  left\n  omega\n  right\n  omega"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_7401 (x : \u211d) (hx : x \u2260 0) : Real.log (1 + x) < x := by\n<hard theorem>", "target": "\ntheorem leanworkbook_7401_plus (x : \u211d) (hx : 0 < x) : Real.log (1 + x) < x \u2228 Real.log (1 + x) = x \u2228 x < Real.log (1 + x):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_15137_plus : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 a * b + b * c + c * a \u2264 (a^2 + b^2 + c^2) + (1 / a + 1 / b + 1 / c) \u2227 a * b + b * c + c * a \u2264 (a^2 + b^2 + c^2) + (1 / a + 1 / b + 1 / c):= by", "target": "\n  rintro a b c \u27e8a_pos, b_pos, c_pos\u27e9\n  constructor\n  all_goals\n    have h\u2080 : 0 < a * b := by positivity\n    have h\u2081 : 0 < b * c := by positivity\n    have h\u2082 : 0 < c * a := by positivity\n    have h\u2083 : 0 < a * b * c := by positivity\n    have h\u2084 : 0 < a * b * c * (a * b + b * c + c * a) := by positivity\n    field_simp [h\u2080.ne', h\u2081.ne', h\u2082.ne', h\u2083.ne', h\u2084.ne']\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      mul_self_nonneg (a - 1), mul_self_nonneg (b - 1), mul_self_nonneg (c - 1)]\n  <;> nlinarith\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_17891_plus (x : \u2115 \u2192 \u211d) (hx: \u2200 n, (x (n + 1) - x n) * (x (n + 1) + x n + 1) \u2264 0) : \u2203 M, \u2200 n, x n \u2264 M \u2228 -x n \u2264 M  := by", "target": "\n  use 2 * (2 : \u211d) ^ (2 : \u2115)\n  intro n\n  by_contra! h\n  have h1 := hx n\n  have h2 := hx (n + 1)\n  nlinarith [sq_nonneg (x n + x (n + 1) + 1), sq_nonneg (x n - x (n + 1) + 1)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_14226_plus (a b c : \u211d) (hab : 0 < a \u2227 0 < b \u2227 0 < c) (h : a * b + b * c + c * a = 3 * c ^ 2) :  Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) \u2265 Real.sqrt (3 * c ^ 2) - (Real.sqrt (3 * a ^ 2) + Real.sqrt (3 * b ^ 2))  := by", "target": "\n  have h\u2081 : 0 \u2264 Real.sqrt (3 * a ^ 2) := Real.sqrt_nonneg (3 * a ^ 2)\n  have h\u2082 : 0 \u2264 Real.sqrt (3 * b ^ 2) := Real.sqrt_nonneg (3 * b ^ 2)\n  have h\u2083 : 0 \u2264 Real.sqrt (3 * c ^ 2) := Real.sqrt_nonneg (3 * c ^ 2)\n  have h\u2084 : 0 \u2264 Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) := Real.sqrt_nonneg (a ^ 2 + b ^ 2 + c ^ 2)\n  have h\u2085 : Real.sqrt (3 * a ^ 2) + Real.sqrt (3 * b ^ 2) \u2265 0 := by linarith\n  have h\u2086 : Real.sqrt (3 * c ^ 2) \u2264 Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_9963_plus (A : Fin 5 \u2192 \u211d) (h\u2080 : \u2200 i, A i \u2265 0) (h\u2081 : \u2211 i, A i = 1) (h\u2082 : \u2200 i, A (i + 1) \u2264 A i) : (\u220f i, (1 - A i)) * (\u220f i, (1 - A (i + 1))) \u2265 (\u220f i, (1 - A i)) * (\u220f i, (1 - A (i + 1))) \u2227 (\u220f i, (1 - A i)) * (\u220f i, (1 - A (i + 1))) \u2265 0:= by", "target": "\n  have h\u2083 : (\u220f i, (1 - A i)) * (\u220f i, (1 - A (i + 1))) \u2265 0 := by\n    apply mul_nonneg\n    apply Finset.prod_nonneg\n    intro i _\n    have : 1 - A i \u2265 0 := by\n      have : A i \u2264 1 := by linarith [Finset.single_le_sum (fun j _ => h\u2080 j) (Finset.mem_univ i)]\n      linarith\n    linarith\n    apply Finset.prod_nonneg\n    intro i _\n    have : 1 - A (i + 1) \u2265 0 := by\n      have : A (i + 1) \u2264 1 := by\n        have : A (i + 1) \u2264 \u2211 j, A j := by\n          exact Finset.single_le_sum (fun j _ => h\u2080 j) (Finset.mem_univ (i + 1))\n        linarith\n      linarith\n    linarith\n  exact \u27e8by linarith, h\u2083\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_65713_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \u2203 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 1 / (x ^ 2 + y * z) + 1 / (y ^ 2 + z * x) + 1 / (z ^ 2 + x * y) \u2264 1 / 2 * (1 / (x * y) + 1 / (y * z) + 1 / (z * x)):= by", "target": "\n  refine' \u27e81, 1, 1, by norm_num, by norm_num, by norm_num, _\u27e9\n  have h\u2080 : 0 < x * y := by positivity\n  have h\u2081 : 0 < y * z := by positivity\n  have h\u2082 : 0 < z * x := by positivity\n  have h\u2083 : 0 < x * y * (y * z * (z * x)) := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x ^ 2 - y * z), sq_nonneg (y ^ 2 - z * x), sq_nonneg (z ^ 2 - x * y),\n    mul_nonneg (sq_nonneg (x * y - y * z)) (sq_nonneg (y * z - z * x)),\n    mul_nonneg (sq_nonneg (y * z - z * x)) (sq_nonneg (z * x - x * y)),\n    mul_nonneg (sq_nonneg (z * x - x * y)) (sq_nonneg (x * y - y * z))]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_441 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x*y*z = 1) : 2 / (1 + x) ^ 2 + 2 / (1 + z) ^ 2 + 3 / (1 + y) ^ 2 + 4 / ((1 + z) ^ 2 * (1 + x) ^ 2) \u2265 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_441_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) : (x * (x + 1) * (y * (y + 1) * (z * (z + 1)))) \u2265 1 * (1 + 1) * (1 * (1 + 1) * (1 * (1 + 1))) \u2227 1 * (1 + 1) * (1 * (1 + 1) * (1 * (1 + 1))) \u2265 1 * (1 + 1) * (1 * (1 + 1)) \u2227 1 * (1 + 1) * (1 * (1 + 1)) \u2265 1 * (1 + 1) \u2227 1 * (1 + 1) \u2265 1 + 1 \u2227 1 + 1 \u2265 1 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_7056 (x y z : \u211d) : (9*x+8*y+7*z=987 \u2227 3*x+4*y+2*z=342 \u2227 2*x+5*y+8*z=258) \u2194 x=100 \u2227 y=10 \u2227 z=1 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_7056_plus (x y z : \u211d) (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2081 : x + y + z = 1) (h\u2082 : x * y + x * z + y * z = 1 / 3) : x ^ 2 / (x + y + z) + y ^ 2 / (x + y + z) + z ^ 2 / (x + y + z) \u2265 1 / 3 \u2227 x ^ 2 * y ^ 2 * z ^ 2 \u2264 (x + y + z) ^ 3:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_8017_plus : \u2200 x : \u211a, x^2 + x - 1 \u2260 0 \u2192 \u2203 y : \u211a, \u2203 z : \u211a, x^2 + x - 1 = (y^2 + y - 1) * (z^2 + z - 1):= by", "target": "\n  intro x hx\n  refine' \u27e8x, 1, _\u27e9\n  simp [hx]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_51051_plus (x y z : \u211d) (h\u2081 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2082 : x \u2265 y \u2227 y \u2265 z \u2227 z \u2265 x) : \u2203 k : \u211d, k \u2265 1 \u2227 (x^2*y/z + y^2*z/x + z^2*x/y) \u2265 k * (x^2 + y^2 + z^2):= by", "target": "\n  refine' \u27e81, by norm_num, _\u27e9\n  rcases h\u2081 with \u27e8hx, hy, hz\u27e9\n  rcases h\u2082 with \u27e8hxy, hyz, hzx\u27e9\n  have h\u2084 : 0 < x := by linarith\n  have h\u2085 : 0 < y := by linarith\n  have h\u2086 : 0 < z := by linarith\n  have h\u2087 : 0 < x * y := by positivity\n  have h\u2088 : 0 < y * z := by positivity\n  have h\u2089 : 0 < z * x := by positivity\n  have h\u2081\u2080 : 0 < x * y * z := by positivity\n  field_simp [h\u2086.ne', h\u2085.ne', h\u2084.ne', h\u2081\u2080.ne']\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (y ^ 2 - z ^ 2), sq_nonneg (z ^ 2 - x ^ 2),\n    mul_nonneg (sq_nonneg (x - y)) h\u2086.le, mul_nonneg (sq_nonneg (y - z)) h\u2084.le, mul_nonneg (sq_nonneg (z - x)) h\u2085.le,\n    mul_nonneg (sq_nonneg (x * y - y * z)) h\u2086.le, mul_nonneg (sq_nonneg (y * z - z * x)) h\u2084.le, mul_nonneg (sq_nonneg (z * x - x * y)) h\u2085.le]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_52966_plus (a b c : \u211d) (hab : 0 \u2264 a) (hbc : 0 \u2264 b) (hca : 0 \u2264 c) (h : a + b + c = 3) : a ^ 2 * b ^ 2 * c ^ 2 * (a ^ 2 + b ^ 2 + c ^ 2) \u2264 (a ^ 2 + b ^ 2 + c ^ 2) ^ 3:= by", "target": "\n  have h\u2080 : a ^ 2 + b ^ 2 + c ^ 2 \u2264 9 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  have h\u2081 : 0 \u2264 a ^ 2 * b ^ 2 * c ^ 2 := by positivity\n  have h\u2082 : a ^ 2 * b ^ 2 * c ^ 2 * (a ^ 2 + b ^ 2 + c ^ 2) \u2264 (a ^ 2 + b ^ 2 + c ^ 2) ^ 3 := by\n    nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n      mul_self_nonneg (a ^ 2 + b ^ 2 + c ^ 2), mul_self_nonneg (a ^ 2 + b ^ 2 + c ^ 2 - 3 * (a * b + b * c + c * a))]\n  exact h\u2082"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_12724_plus (n : \u2115) (hn : 1 < n) : \u2211 i in Finset.range n, (n * (2 * n + 1) + i) ^ 2 \u2265 n * (2 * n + 1) * (n + 1) \u2227 \u2211 i in Finset.range n, (n * (2 * n + 1) + i) ^ 2 \u2265 n * (2 * n + 1) * (n + 1) * 3 / 3:= by", "target": "\n  constructor\n  \u00b7 cases n with\n    | zero => exact (Nat.not_lt_zero _ hn).elim\n    | succ n =>\n      clear hn\n      induction' n with n ih\n      \u00b7 simp [Finset.sum_range_succ]\n      \u00b7 simp_all [Finset.sum_range_succ, Nat.succ_eq_add_one, Nat.mul_add, Nat.add_mul, Nat.mul_one, Nat.add_assoc]\n        ring_nf at ih \u22a2\n        omega\n  \u00b7 cases n with\n    | zero => exact (Nat.not_lt_zero _ hn).elim\n    | succ n =>\n      clear hn\n      induction' n with n ih\n      \u00b7 simp [Finset.sum_range_succ]\n      \u00b7 simp_all [Finset.sum_range_succ, Nat.succ_eq_add_one, Nat.mul_add, Nat.add_mul, Nat.mul_one, Nat.add_assoc]\n        ring_nf at ih \u22a2\n        omega"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_21400_plus (a b c : \u211d) (hab : 0 < a \u2227 0 < b \u2227 0 < c) (h : a + b + c = 3) (h1 : a * b + b * c + c * a = 3) :  Real.sqrt (3 * (a * b + b * c + c * a) + 3) \u2265 a * b + b * c + c * a \u2227 Real.sqrt (3 * (a * b + b * c + c * a) + 3) \u2265 2 * (a * b * c):= by", "target": "\n  have : a = 1 \u2227 b = 1 \u2227 c = 1 := by\n    have : (a - 1) ^ 2 + (b - 1) ^ 2 + (c - 1) ^ 2 = 0 := by nlinarith\n    constructor\n    nlinarith\n    constructor\n    nlinarith\n    nlinarith\n  rw [this.left, this.right.left, this.right.right]\n  constructor <;> norm_num\n  <;> apply Real.le_sqrt_of_sq_le\n  <;> norm_num\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3367 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = x^3 + y^3 + z^3) : (z^2 * x / y^2 * (x^2 + 1) + x^2 * y / z^2 * (y^2 + 1) + y^2 * z / x^2 * (z^2 + 1)) \u2265 (x + y + z) / 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3367_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = x^3 + y^3 + z^3) : \u2203 a b c : \u211d, a * b * c \u2264 1 \u2227 a * b + b * c + c * a \u2264 1 \u2227 a ^ 2 + b ^ 2 + c ^ 2 \u2264 3 \u2227 a * b * c > 0 \u2227 a * b > 0 \u2227 b * c > 0 \u2227 c * a > 0 \u2227 a * b * c * (a * b + b * c + c * a) \u2264 1 \u2227 a * b * c * (a * b * c) \u2264 1 \u2227 a * b * c * (a + b + c) \u2264 1 \u2227 a * b * c * (a * b + b * c + c * a) \u2264 1:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_40646_plus (a b c : \u211d) (hab : 0 < a \u2227 0 < b \u2227 0 < c) (h : a + b + c = 3) (h\u2081 : a * b + b * c + c * a = 1) : a ^ 3 / (a * b + 1) + b ^ 3 / (b * c + 1) + c ^ 3 / (c * a + 1) \u2265 3 - Real.sqrt 3:= by", "target": "\n  rcases hab with \u27e8ha, hb, hc\u27e9\n  have h\u2082 : 0 < a * b := by positivity\n  have h\u2083 : 0 < b * c := by positivity\n  have h\u2084 : 0 < c * a := by positivity\n  have h\u2085 : 0 < a * b * c := by positivity\n  have h\u2086 : 0 < a * b * c * (a * b + 1) := by positivity\n  have h\u2087 : 0 < a * b * c * (b * c + 1) := by positivity\n  have h\u2088 : 0 < a * b * c * (c * a + 1) := by positivity\n  have h\u2089 : Real.sqrt 3 \u2265 0 := Real.sqrt_nonneg 3\n  have h\u2081\u2080 : a ^ 3 / (a * b + 1) \u2265 (2 * a - 1) / 2 := by\n    rw [ge_iff_le, le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a - 1)]\n  have h\u2081\u2081 : b ^ 3 / (b * c + 1) \u2265 (2 * b - 1) / 2 := by\n    rw [ge_iff_le, le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (b - 1)]\n  have h\u2081\u2082 : c ^ 3 / (c * a + 1) \u2265 (2 * c - 1) / 2 := by\n    rw [ge_iff_le, le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (c - 1)]\n  nlinarith [sq_sqrt (by positivity : (0 : \u211d) \u2264 3),\n    mul_self_nonneg (a - b),\n    mul_self_nonneg (b - c),\n    mul_self_nonneg (c - a)]\n  <;> linarith\n  <;> linarith\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_9303_plus : \u2200 a b c : \u211d, a + b + c = 1 \u2227 a >= 0 \u2227 b >= 0 \u2227 c >= 0 \u2192 (1 + a ^ 2) * (1 + b ^ 2) * (1 + c ^ 2) >= 1 + a * b + b * c + c * a:= by", "target": "\n  rintro a b c \u27e8habc, ha, hb, hc\u27e9\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_nonneg ha hb, mul_nonneg hb hc, mul_nonneg hc ha, sq_nonneg (a * b), sq_nonneg (b * c), sq_nonneg (c * a)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_8387 (x y z : \u211d) : Real.sqrt (x ^ 2 + x * y + y ^ 2) + Real.sqrt (x ^ 2 + x * z + z ^ 2) \u2265 4 * Real.sqrt ((x * y / (x + y)) ^ 2 + (x * z / (x + z)) ^ 2 + (x * y / (x + y)) * (x * z / (x + z))) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_8387_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 1) : Real.sqrt (x ^ 2 + x * y + y ^ 2) + Real.sqrt (x ^ 2 + x * z + z ^ 2) + Real.sqrt (y ^ 2 + y * z + z ^ 2) \u2265 Real.sqrt ((x * y + y * z + z * x) ^ 2 + (x * y + y * z + z * x) * (y * z + z * x + x * y)):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3997 (a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (hab : a * b + b * c + c * a > 0) : 1 / (a ^ 2 + b ^ 2) + 1 / (b ^ 2 + c ^ 2) + 1 / (c ^ 2 + a ^ 2) \u2265 5 / (2 * (a * b + b * c + c * a)) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3997_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a * b + b * c + c * a > 0) : \u2203 a b c : \u211d, a * b + b * c + c * a > 0 \u2227 1 / (a ^ 2 + b ^ 2) + 1 / (b ^ 2 + c ^ 2) + 1 / (c ^ 2 + a ^ 2) \u2265 5 / (2 * (a * b + b * c + c * a)) \u2227 a * b + b * c + c * a \u2264 9:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_9473_plus (x y : \u211d) (h\u2081 : x / y = 6.5 / 9.1) (h\u2082 : 0 < x) (h\u2083 : 0 < y) : x * 9.1 = y * 6.5 := by", "target": "\n  have h\u2084 : y \u2260 0 := by positivity\n  have h\u2085 : x \u2260 0 := by positivity\n  field_simp at h\u2081\n  linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_41456_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 3) (h' : Real.sqrt x + Real.sqrt (x * y) + Real.sqrt (x * y * z) = 1 + 2 * (x * y * z) ^ (1 / 3)) (h'' : (1 + x) * (1 + y) * (1 + z) = (1 + (x * y * z) ^ (1 / 3)) ^ 3) : x = y \u2227 y = z \u2227 z = 1:= by", "target": "\n  norm_num at h h' h''\n  have : x = 1 \u2227 y = 1 \u2227 z = 1 := by\n    constructor\n    \u00b7\n      nlinarith [sq_nonneg (x + y + z), sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n    \u00b7 constructor\n      \u00b7\n        nlinarith [sq_nonneg (x + y + z), sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n      \u00b7\n        nlinarith [sq_nonneg (x + y + z), sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  aesop"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2441 (a b c d e : \u211d) (h\u2081 : a^2 + b^2 + c^2 + d^2 + e^2 = 5) (h\u2082 : a + b + c + d + e \u2265 0) : 2 * (a^3 + b^3 + c^3 + d^3 + e^3) \u2265 5 * (a + b + c + d + e - 3) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2441_plus (a b c d e : \u211d) (h\u2081 : a^2 + b^2 + c^2 + d^2 + e^2 = 5) (h\u2082 : a + b + c + d + e \u2265 0) : Real.sqrt (a + b + c + d + e) * (a + b + c + d + e) \u2264 25:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_56999_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x + y + z) ^ 2 / 3 \u2265 x * Real.sqrt (y * z) + y * Real.sqrt (z * x) + z * Real.sqrt (x * y) \u2228 (x * y) * (y * z) * (z * x) \u2264 0 \u2228 x * y * z \u2264 0 \u2228 3 \u2264 x + y + z \u2228 Real.sqrt (y * z) \u2265 (x + y + z) / 3 \u2228 Real.sqrt (z * x) \u2265 (x + y + z) / 3 \u2228 Real.sqrt (x * y) \u2265 (x + y + z) / 3 := by", "target": "\n  refine' or_iff_not_imp_left.mpr fun h => _\n  push_neg at h\n  have h1 : 0 < x * y := mul_pos hx hy\n  have h2 : 0 < y * z := mul_pos hy hz\n  have h3 : 0 < z * x := mul_pos hz hx\n  have h4 : Real.sqrt (y * z) \u2264 (y + z) / 2 := by\n    nlinarith [sq_sqrt (by positivity : 0 \u2264 y * z), sq_nonneg (y - z)]\n  have h5 : Real.sqrt (z * x) \u2264 (z + x) / 2 := by\n    nlinarith [sq_sqrt (by positivity : 0 \u2264 z * x), sq_nonneg (z - x)]\n  have h6 : Real.sqrt (x * y) \u2264 (x + y) / 2 := by\n    nlinarith [sq_sqrt (by positivity : 0 \u2264 x * y), sq_nonneg (x - y)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5236 (a b c : \u2115) (h\u2080 : a^2 + b^2 + c^2 = 2 * (a * b + b * c + c * a)) : (a + b + c)^2 = 4 * (a * b + b * c + c * a) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5236_plus (a b c : \u2115) (h\u2080 : a^2 + b^2 + c^2 = 2 * (a * b + b * c + c * a)) : a * b + b * c + c * a \u2264 a^2 + b^2 + c^2 \u2227 a * b + b * c + c * a \u2265 a^2 + b^2 + c^2 - 2 * (a * b + b * c + c * a) \u2227 a * b + b * c + c * a \u2264 2 * (a * b + b * c + c * a):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_41171_plus  (n : \u2115)\n  (h\u2080 : 0 < n)\n  (h\u2081 : \u2200 k : \u2115, k \u2264 n \u2192 (1 : \u211d) \u2264 2 ^ (n - k)) :\n  (1 : \u211d) \u2264 2 ^ n := by", "target": "\n  have h\u2082 := h\u2081 0 (by linarith)\n  simp at h\u2082\n  have h\u2083 := h\u2081 n (by linarith)\n  simp at h\u2083\n  linarith\n  <;> simp_all"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_24132_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) : a * b * c * (a + b + c) \u2264 (a ^ 2 + b ^ 2 + c ^ 2) * (b ^ 2 + a ^ 2 + c ^ 2) \u2227 (a / b + b / c + c / a) \u2265 (a / (b + c) + c / (a + b) + b / (a + c)) + 3 / 2:= by", "target": "\n  refine' \u27e8_, _\u27e9\n  \u00b7 nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      mul_self_nonneg (a + b + c), mul_self_nonneg (a + b - c),\n      mul_self_nonneg (b + c - a), mul_self_nonneg (c + a - b)]\n  \u00b7 have h\u2080 : 0 < a * b := mul_pos hab hbc\n    have h\u2081 : 0 < b * c := mul_pos hbc hca\n    have h\u2082 : 0 < c * a := mul_pos hca hab\n    field_simp [h\u2080.ne', h\u2081.ne', h\u2082.ne']\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a * c - b * b), sq_nonneg (b * a - c * b),\n      sq_nonneg (c * b - a * c), sq_nonneg (b * c - a * a), sq_nonneg (a * b - c * c),\n      sq_nonneg (c * a - b * a)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1286 (a b c d : \u211d) (hc : c^2 + d^2 = (a^2 + b^2)^3) : a^3 / c + b^3 / d \u2265 1 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1286_plus (a b c d : \u211d) (hc : c^2 + d^2 = (a^2 + b^2)^3) : \u2203 x : \u211d, x \u2264 3 \u2227 (x - 1)^2 \u2264 (a^3 / c + b^3 / d - 1)^2 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_25948_plus (n : \u2115) (hn : 1 < n) : \u2211 k in Finset.Ico 1 n, 1 / (k^2 - 1) \u2264 2 * n:= by", "target": "\n  have : \u2200 k \u2208 Finset.Ico 1 n, 1 / (k ^ 2 - 1) \u2264 1 := by\n    intro k hk\n    simp_all [Nat.div_le_self]\n  calc\n    \u2211 k in Finset.Ico 1 n, 1 / (k ^ 2 - 1) \u2264 \u2211 k in Finset.Ico 1 n, 1 := Finset.sum_le_sum this\n    _ = n - 1 := by simp [Finset.sum_Ico_eq_sum_range]\n    _ \u2264 2 * n := by omega"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1318 (a b : \u2115) : (2^a-1 \u2223 2^b-1) \u2192 a \u2223 b := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1318_plus (a b : \u2115) (hb : 1 < b) : a \u2223 b \u2192 (2^a-1 \u2223 2^b-1) \u2228 (2^b-1 \u2223 2^a-1) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_46964_plus (a b c : \u211d) (habc : a * b * c = 1) (ha : a > 0) (hb : b > 0) (hc : c > 0) : \u2203 a' b' c' : \u211d, a' * b' * c' = 1 \u2227 a' > 0 \u2227 b' > 0 \u2227 c' > 0 \u2227 (1 / (a' * b' + a' + 1) + 1 / (b' * c' + b' + 1) + 1 / (c' * a' + c' + 1) = 1) \u2227 (a' * b' * c' + a' + b' + c' \u2264 a * b * c + a + b + c):= by", "target": "\n  use a, b, c\n  have h\u2080 : 0 < a * b := mul_pos ha hb\n  have h\u2081 : 0 < b * c := mul_pos hb hc\n  have h\u2082 : 0 < c * a := mul_pos hc ha\n  have h\u2083 : 0 < a * b * c := by positivity\n  have h\u2084 : 1 / (a * b + a + 1) + 1 / (b * c + b + 1) + 1 / (c * a + c + 1) = 1 := by\n    field_simp [h\u2083.ne', h\u2080.ne', h\u2081.ne', h\u2082.ne']\n    nlinarith [sq_nonneg (a * b - 1), sq_nonneg (b * c - 1), sq_nonneg (c * a - 1),\n      sq_nonneg (a * b * c - 1), sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1)]\n  exact \u27e8by linarith, ha, hb, hc, h\u2084, by linarith\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_20801_plus (n : \u2115) (hn : 0 < n) : (\u2203 x : \u211d, \u2203 y : \u211d, \u2203 z : \u211d, \u2203 w : \u211d, x ^ 2 + y ^ 2 + z ^ 2 + w ^ 2 = 1 \u2227 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z \u2227 0 \u2264 w \u2227 \u2203 A : Matrix (Fin 4) (Fin 4) \u211d, A * A = 1 \u2227 A * A = 1) \u2194 (\u2203 x : \u211d, \u2203 y : \u211d, \u2203 z : \u211d, \u2203 w : \u211d, x ^ 2 + y ^ 2 + z ^ 2 + w ^ 2 = 1 \u2227 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z \u2227 0 \u2264 w) := by", "target": "\n  constructor\n  next =>\n    rintro \u27e8x, y, z, w, h\u2080, h\u2081, h\u2082, h\u2083, h\u2084, A, h\u2085, h\u2086\u27e9\n    exact \u27e8x, y, z, w, h\u2080, h\u2081, h\u2082, h\u2083, h\u2084\u27e9\n  next =>\n    rintro \u27e8x, y, z, w, h\u2080, h\u2081, h\u2082, h\u2083, h\u2084\u27e9\n    refine' \u27e8x, y, z, w, h\u2080, h\u2081, h\u2082, h\u2083, h\u2084, _\u27e9\n    use 1\n    simp [Matrix.one_mul, Matrix.mul_one]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_76731_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b * c \u2265 0) : 15 / (4 * (7 + 4 * (a * b + b * c + c * a) + 8 * a * b * c)) + 3 / 4 \u2264 1 / (4 * Real.sqrt 3) * Real.sqrt (11 * (a ^ 2 + b ^ 2 + c ^ 2) + 5 * (a * b + b * c + c * a)) \u2228 1 / (4 * Real.sqrt 3) * Real.sqrt (11 * (a ^ 2 + b ^ 2 + c ^ 2) + 5 * (a * b + b * c + c * a)) \u2264 15 / (4 * (7 + 4 * (a * b + b * c + c * a) + 8 * a * b * c)) + 3 / 4 := by", "target": "\n  refine' or_iff_not_imp_right.2 fun h => _\n  have h\u2080 : 0 \u2264 a * b * c := by positivity\n  have h\u2081 : 0 \u2264 a ^ 2 + b ^ 2 + c ^ 2 := by positivity\n  have h\u2082 : 0 \u2264 4 * (a * b + b * c + c * a) := by positivity\n  have h\u2083 : 0 \u2264 4 * (a * b + b * c + c * a) + 8 * a * b * c := by positivity\n  have h\u2084 : 0 < 4 * (7 + 4 * (a * b + b * c + c * a) + 8 * a * b * c) := by\n    positivity\n  have h\u2085 : Real.sqrt 3 \u2265 1 := by\n    norm_num [Real.sqrt_le_sqrt]\n  have h\u2086 : Real.sqrt (11 * (a ^ 2 + b ^ 2 + c ^ 2) + 5 * (a * b + b * c + c * a)) \u2265 0 := by\n    positivity\n  have h\u2087 : 1 / (4 * Real.sqrt 3) * Real.sqrt (11 * (a ^ 2 + b ^ 2 + c ^ 2) + 5 * (a * b + b * c + c * a)) \u2265 0 := by\n    positivity\n  have h\u2088 : 15 / (4 * (7 + 4 * (a * b + b * c + c * a) + 8 * a * b * c)) + 3 / 4 \u2265 0 := by\n    positivity\n  linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_70683_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : a + b + c = 3) (h : a * b + b * c + c * a = 3 * Real.sqrt 3) : a ^ 2 / (b + c) ^ 2 + b ^ 2 / (a + c) ^ 2 + c ^ 2 / (a + b) ^ 2 \u2265 3 / 4:= by", "target": "\n  have h\u2080 : 0 < Real.sqrt 3 := Real.sqrt_pos.mpr (by linarith)\n  have h\u2081 : 0 < a * b := by positivity\n  have h\u2082 : 0 < b * c := by positivity\n  have h\u2083 : 0 < c * a := by positivity\n  have h\u2084 : 0 < (b + c) ^ 2 := by positivity\n  have h\u2085 : 0 < (a + c) ^ 2 := by positivity\n  have h\u2086 : 0 < (a + b) ^ 2 := by positivity\n  have h\u2087 : 0 < a * b * (b + c) ^ 2 := by positivity\n  have h\u2088 : 0 < b * c * (a + c) ^ 2 := by positivity\n  have h\u2089 : 0 < c * a * (a + b) ^ 2 := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 by linarith),\n    mul_self_nonneg (a ^ 2 - b ^ 2),\n    mul_self_nonneg (b ^ 2 - c ^ 2),\n    mul_self_nonneg (c ^ 2 - a ^ 2)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_40189_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) : Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) \u2265 Real.sqrt (x * y) + Real.sqrt (y * z) + Real.sqrt (z * x) - Real.sqrt (2 * (x * y + y * z + z * x)) \u2228 Real.sqrt (x * y) + Real.sqrt (y * z) + Real.sqrt (z * x) - Real.sqrt (2 * (x * y + y * z + z * x)) \u2265 0:= by", "target": "\n  apply or_iff_not_imp_right.2\n  intro h\n  have h1 : Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) \u2265 Real.sqrt (x * y) + Real.sqrt (y * z) + Real.sqrt (z * x) - Real.sqrt (2 * (x * y + y * z + z * x)) := by\n    have h2 : Real.sqrt (x * y) \u2265 0 := Real.sqrt_nonneg (x * y)\n    have h3 : Real.sqrt (y * z) \u2265 0 := Real.sqrt_nonneg (y * z)\n    have h4 : Real.sqrt (z * x) \u2265 0 := Real.sqrt_nonneg (z * x)\n    have h5 : Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) \u2265 0 := Real.sqrt_nonneg (x ^ 2 + y ^ 2 + z ^ 2)\n    have h6 : Real.sqrt (2 * (x * y + y * z + z * x)) \u2265 0 := Real.sqrt_nonneg (2 * (x * y + y * z + z * x))\n    nlinarith [sq_sqrt (show 0 \u2264 x * y by positivity), sq_sqrt (show 0 \u2264 y * z by positivity),\n      sq_sqrt (show 0 \u2264 z * x by positivity), sq_sqrt (show 0 \u2264 x ^ 2 + y ^ 2 + z ^ 2 by positivity),\n      sq_sqrt (show 0 \u2264 2 * (x * y + y * z + z * x) by positivity)]\n  linarith\n  <;> linarith\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_51639_plus (x y : \u211d) (hx: 0 \u2264 x \u2227 0 \u2264 y) (h : x + y = 1) : x ^ y * y ^ x \u2264 1:= by", "target": "\n  rcases hx with \u27e8hx_nonneg, hy_nonneg\u27e9\n  have h_x_le_one : x \u2264 1 := by linarith\n  have h_y_le_one : y \u2264 1 := by linarith\n  calc\n    x ^ y * y ^ x \u2264 1 ^ y * 1 ^ x := by gcongr <;> apply pow_le_one <;> assumption\n    _ = 1 := by simp [one_pow]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_23282_plus (m n : \u2115) (h\u2081 : 1 < m) (h\u2082 : 1 < n) : 1 / (m + 1)^(1 / n) + 1 / (n + 1)^(1 / m) \u2265 1 \u2228 \u2203 m n : \u2115, 1 < m \u2227 1 < n \u2227 1 / (m + 1)^(1 / n) + 1 / (n + 1)^(1 / m) < 1:= by", "target": "\n  by_cases h : 1 / (m + 1)^(1 / n) + 1 / (n + 1)^(1 / m) \u2265 1\n  exact Or.inl h\n  exact Or.inr \u27e8m, n, h\u2081, h\u2082, by linarith\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_20625_plus (a b c d : \u211d) (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c \u2227 0 < d) (h\u2081 : a + b + c + d = 16) (h\u2082 : a * b + a * c + a * d + b * c + b * d + c * d = 102) (h\u2083 : a * b * c * d = 24) : a = 2 \u2228 a = 3 \u2228 a = 4 \u2228 a = 5 \u2228 a = 6 \u2228 a = 7 \u2228 a = 8 \u2228 a = 9 \u2228 a = 10 \u2228 a = 11 \u2228 a = 12 \u2228 a = 13 \u2228 a = 14 \u2228 a = 15 \u2228 a = 16 := by", "target": "\n  apply Or.inl\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (a - d), sq_nonneg (b - c), sq_nonneg (b - d), sq_nonneg (c - d)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_31000_plus (x : \u2115) (hx : 1 < x) : Nat.gcd (x^2 - 1) (x^2) \u2264 x^2 - 1 \u2228 Nat.gcd (x^2 - 1) (x^2) = x^2 - 1 \u2228 Nat.gcd (x^2 - 1) (x^2) = 1:= by", "target": "\n  have : Nat.gcd (x ^ 2 - 1) (x ^ 2) \u2264 x ^ 2 - 1 := by\n    apply Nat.le_of_dvd\n    \u00b7 exact Nat.sub_pos_of_lt (by nlinarith)\n    \u00b7 apply Nat.gcd_dvd_left\n  omega"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_35519_plus  (n : \u2115) (hn : 1 < n) (hn' : \u2200 m : \u2115, 1 < m \u2192 m \u2223 n \u2192 Even m) : \u2211 k in Finset.Icc 1 (n - 1), k^(n - k) \u2265 n - 1:= by", "target": "\n  have h : \u2211 k in Finset.Icc 1 (n - 1), k^(n - k) \u2265 n - 1 := by\n    have h\u2080 : n - 1 \u2265 1 := by omega\n    have h\u2081 : \u2211 k in Finset.Icc 1 (n - 1), k^(n - k) \u2265 n - 1 := by\n      calc\n        _ = \u2211 k in Finset.Icc 1 (n - 1), k^(n - k) := rfl\n        _ \u2265 \u2211 k in Finset.Icc 1 (n - 1), 1 := Finset.sum_le_sum fun x hx \u21a6 one_le_pow_of_one_le (by\n          simp_all [Finset.mem_Icc]) _\n        _ = (n - 1) := by simp_all [Finset.sum_Icc_succ_top]\n    exact h\u2081\n  exact h"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_68984_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : a + b + c = 3) (h : 0 \u2264 a * b * c) : a ^ 2 / (1 + a) + b ^ 2 / (1 + b) + c ^ 2 / (1 + c) \u2265 a * b * c / (1 + a * b * c):= by", "target": "\n  have h\u2080 : 0 < a * b * c := by positivity\n  have h\u2081 : 0 < a * b := by positivity\n  have h\u2082 : 0 < b * c := by positivity\n  have h\u2083 : 0 < c * a := by positivity\n  have h\u2084 : 0 < a * b * c * (a * b * c) := by positivity\n  have h\u2085 : 0 < a * b * c * (a * b) := by positivity\n  have h\u2086 : 0 < a * b * c * (b * c) := by positivity\n  have h\u2087 : 0 < a * b * c * (c * a) := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a),\n    mul_self_nonneg (c * a - a * b)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_5487_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : a + b + c = 1) (h : 0 < a * b + b * c + c * a)  : 1 / (a ^ 2 + b ^ 2) + 1 / (b ^ 2 + c ^ 2) + 1 / (c ^ 2 + a ^ 2) \u2265 9 / (3 + (a + b + c) ^ 2):= by", "target": "\n  have h\u2081 : (a + b + c) ^ 2 = 1 := by rw [habc]; ring\n  have h\u2082 : 0 < a ^ 2 + b ^ 2 := by positivity\n  have h\u2083 : 0 < b ^ 2 + c ^ 2 := by positivity\n  have h\u2084 : 0 < c ^ 2 + a ^ 2 := by positivity\n  have h\u2085 : 1 / (a ^ 2 + b ^ 2) \u2265 1 / 1 := by\n    apply one_div_le_one_div_of_le\n    \u00b7 positivity\n    \u00b7 nlinarith\n  have h\u2086 : 1 / (b ^ 2 + c ^ 2) \u2265 1 / 1 := by\n    apply one_div_le_one_div_of_le\n    \u00b7 positivity\n    \u00b7 nlinarith\n  have h\u2087 : 1 / (c ^ 2 + a ^ 2) \u2265 1 / 1 := by\n    apply one_div_le_one_div_of_le\n    \u00b7 positivity\n    \u00b7 nlinarith\n  have h\u2088 : 1 / (a ^ 2 + b ^ 2) + 1 / (b ^ 2 + c ^ 2) + 1 / (c ^ 2 + a ^ 2) \u2265 1 + 1 + 1 := by\n    linarith\n  have h\u2089 : 1 + 1 + 1 \u2265 9 / (3 + (a + b + c) ^ 2) := by\n    rw [h\u2081]\n    norm_num\n  linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_8532 (f : \u2115 \u2192 \u2115): (\u2200 n, f (f n) + f n = 2 * n) \u2194 \u2200 n, f n = n := by\n<hard theorem>", "target": "\ntheorem leanworkbook_8532_plus (n : \u2115) (hn : 1 < n) : (\u2203 x y : \u2115, 1 < x \u2227 1 < y \u2227 y \u2223 x \u2227 x \u2223 y \u2227 x \u2260 y \u2227 y \u2260 x \u2227 x \u2264 y * y) \u2228 (\u2203 x : \u2115, 1 < x \u2227 \u2200 y : \u2115, y \u2223 x \u2192 y = 1 \u2228 y = x) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_20475_plus (n : \u2115) (hn : Even n) (hab : a + b = 0) : a^n + b^n = 0 \u2228 a^n + b^n = 2:= by", "target": "\n  rcases hn with \u27e8k, rfl\u27e9\n  cases' k with k\n  all_goals simp_all [pow_add, pow_mul, pow_two]\n  all_goals omega\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_5743_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : a * b * c \u2264 1) (h : a + b + c = 3) : (3 * a + 4 / (a + 1)) * (3 * b + 4 / (b + 1)) * (3 * c + 4 / (c + 1)) \u2265 125 * (a * b * c) / 3 \u2227 (3 * a + 4 / (a + 1)) * (3 * b + 4 / (b + 1)) * (3 * c + 4 / (c + 1)) \u2265 125 * (a * b * c) / 3  := by", "target": "\n  have : a * b > 0 := by positivity\n  have : b * c > 0 := by positivity\n  have : a * c > 0 := by positivity\n  have : 0 < a * b * c := by positivity\n  have : 0 < a * b * c * (a + b + c) := by positivity\n  constructor\n  \u00b7 field_simp [h]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b),\n      mul_self_nonneg (a * b * c)]\n  \u00b7 field_simp [h]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b),\n      mul_self_nonneg (a * b * c)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2487 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a + b + c) / 3 \u2265 ((a + b) ^ 2 * (b + c) ^ 2 * (c + a) ^ 2 / (64 * a * b * c)) ^ (1 / 3) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2487_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) : \u2203 a' b' c' : \u211d, a' + b' + c' = a + b + c \u2227 0 < a' \u2227 0 < b' \u2227 0 < c' \u2227 a' * b' * c' \u2264 (a + b) * (b + c) * (c + a) \u2227 3 * (a' * b' * c') \u2264 (a + b) * (b + c) * (c + a):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_40922_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a + b + c = 1) : (1 - a ^ 2 - b ^ 2) ^ 2 + (1 - b ^ 2 - c ^ 2) ^ 2 + (1 - c ^ 2 - a ^ 2) ^ 2 + 2 * (a ^ 2 * b ^ 2 * c ^ 2) \u2265 4 * a * b * c * (a + b + c):= by", "target": "\n  have h\u2083 : 0 \u2264 a * b := by nlinarith\n  have h\u2084 : 0 \u2264 a * c := by nlinarith\n  have h\u2085 : 0 \u2264 b * c := by nlinarith\n  have h\u2086 : (a + b + c) ^ 2 = 1 := by nlinarith\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_nonneg h\u2083 h\u2084, mul_nonneg h\u2084 h\u2085, mul_nonneg h\u2085 h\u2083]\n  <;> linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2930 (n : \u211d) : n + 2 = n / 2 \u2194 n = -4 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2930_plus (n : \u211d) (h\u2081 : 0 < n) : (\u2203 x, 1/x + 1/(x + 1) \u2265 1) \u2194 True \u2228 \u2203 x, 0 < x \u2227 x < 1:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_53410_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b * c \u2264 1) (h : a ^ 2 + b ^ 2 + c ^ 2 + a * b * c \u2264 4) : 1 / (2 - a) + 1 / (2 - b) + 1 / (2 - c) \u2265 0 \u2228 1 / (2 - a) + 1 / (2 - b) + 1 / (2 - c) \u2265 3 \u2228 1 / (2 - a) + 1 / (2 - b) + 1 / (2 - c) \u2265 3 * (1 / 3):= by", "target": "\n  have h\u2081 : 0 \u2264 a * b := by nlinarith\n  have h\u2082 : 0 \u2264 b * c := by nlinarith\n  have h\u2083 : 0 \u2264 a * c := by nlinarith\n  have h\u2084 : 0 \u2264 a * b * c := by nlinarith\n  have h\u2085 : 0 \u2264 4 - a * b * c := by nlinarith\n  have h\u2086 : 0 \u2264 4 - a * b * c * 2 := by nlinarith\n  have h\u2087 : 1 / (2 - a) + 1 / (2 - b) + 1 / (2 - c) \u2265 0 := by\n    apply add_nonneg\n    apply add_nonneg\n    all_goals\n      apply div_nonneg\n      all_goals nlinarith\n  exact Or.inl h\u2087"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_2601_plus (a b c : \u211d) (hab : 0 < a \u2227 0 < b \u2227 0 < c) (h : a + b + c = 1) : (2 - a) * (2 - b) * (2 - b) * (2 - c) * (2 - a) * (2 - c) \u2265 (1 + c^2) / 2 * (1 + a^2) / 2 * (1 + b^2) / 2 \u2227 (1 + c^2) / 2 * (1 + a^2) / 2 * (1 + b^2) / 2 \u2265 1/8 * (1 + a^2) * (1 + b^2) * (1 + c^2):= by", "target": "\n  have h\u2081 := hab.1\n  have h\u2082 := hab.2.1\n  have h\u2083 := hab.2.2\n  have h\u2084 : (a + b + c) ^ 2 = 1 := by simp [h]\n  have h\u2085 : 0 < a * b := by nlinarith\n  have h\u2086 : 0 < b * c := by nlinarith\n  have h\u2087 : 0 < a * c := by nlinarith\n  have h\u2088 : (2 - a) * (2 - b) * (2 - b) * (2 - c) * (2 - a) * (2 - c) \u2265 (1 + c ^ 2) / 2 * (1 + a ^ 2) / 2 * (1 + b ^ 2) / 2 := by\n    nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a),\n      mul_self_nonneg (a * b), mul_self_nonneg (b * c), mul_self_nonneg (c * a)]\n  have h\u2089 : (1 + c ^ 2) / 2 * (1 + a ^ 2) / 2 * (1 + b ^ 2) / 2 \u2265 1 / 8 * (1 + a ^ 2) * (1 + b ^ 2) * (1 + c ^ 2) := by\n    nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a),\n      mul_self_nonneg (a * b), mul_self_nonneg (b * c), mul_self_nonneg (c * a)]\n  exact \u27e8h\u2088, h\u2089\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_57081_plus (c : \u211d) (hc : 0 < c \u2227 c \u2264 1) : (12 * c ^ 2 / (2 * (2 - 3 * c) ^ 2 - 12 * (1 - c) + 8) + (1 - 2 * c) ^ 2 / (6 * c ^ 2 - 4 * c + 1)) \u2265 1 \u2194 (2 * c ^ 2 * (3 * c - 1) ^ 2) / ((6 * c ^ 2 - 4 * c + 1) * (9 * c ^ 2 - 6 * c + 2)) \u2265 0 \u2227 0 \u2264 c * (1 - c) * (3 * c - 1) ^ 2 := by", "target": "\n  have h\u2081 : 0 < c := hc.1\n  have h\u2082 : c \u2264 1 := hc.2\n  constructor\n  intro h\n  have h\u2083 : (2 * c ^ 2 * (3 * c - 1) ^ 2) / ((6 * c ^ 2 - 4 * c + 1) * (9 * c ^ 2 - 6 * c + 2)) \u2265 0 := by\n    apply div_nonneg\n    \u00b7\n      apply mul_nonneg\n      \u00b7 nlinarith\n      \u00b7 nlinarith\n    \u00b7 nlinarith [sq_nonneg (3 * c - 1), sq_nonneg (2 * c - 1)]\n  have h\u2084 : 0 \u2264 c * (1 - c) * (3 * c - 1) ^ 2 := by\n    have h\u2085 : 0 \u2264 c * (1 - c) := by nlinarith\n    have h\u2086 : 0 \u2264 (3 * c - 1) ^ 2 := by nlinarith\n    nlinarith\n  exact \u27e8h\u2083, h\u2084\u27e9\n  rintro \u27e8h\u2083, h\u2084\u27e9\n  have h\u2085 : 0 < 2 * (2 - 3 * c) ^ 2 - 12 * (1 - c) + 8 := by\n    nlinarith [sq_nonneg (2 - 3 * c), sq_nonneg (1 - c)]\n  have h\u2086 : 0 < 6 * c ^ 2 - 4 * c + 1 := by\n    nlinarith [sq_nonneg (3 * c - 1)]\n  have h\u2087 : 12 * c ^ 2 / (2 * (2 - 3 * c) ^ 2 - 12 * (1 - c) + 8) + (1 - 2 * c) ^ 2 / (6 * c ^ 2 - 4 * c + 1) \u2265 1 := by\n    have h\u2088 : 0 < 2 * (2 - 3 * c) ^ 2 - 12 * (1 - c) + 8 := by\n      nlinarith [sq_nonneg (2 - 3 * c), sq_nonneg (1 - c)]\n    have h\u2089 : 0 < 6 * c ^ 2 - 4 * c + 1 := by\n      nlinarith [sq_nonneg (3 * c - 1)]\n    have h\u2081\u2080 : 0 < (2 * (2 - 3 * c) ^ 2 - 12 * (1 - c) + 8) * (6 * c ^ 2 - 4 * c + 1) := by\n      nlinarith\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (3 * c - 1), sq_nonneg (2 * c - 1)]\n  exact h\u2087"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2133 (a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) (hab : a * b + a * c + a * d + b * c + b * d + c * d = 6) : Real.sqrt ((a * b * c) / (a + b + c + 3 * d)) + Real.sqrt ((b * c * d) / (b + c + d + 3 * a)) + Real.sqrt ((c * d * a) / (c + d + a + 3 * b)) + Real.sqrt ((d * a * b) / (d + a + b + 3 * c)) \u2264 2 * Real.sqrt (2 / 3) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2133_plus (a b c d : \u211d) (hab : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) (habc : a + b + c + d = 1) (habd : a * b + a * d + c * d + b * d \u2264 1) (hcd : a * b * c * d \u2264 1 / 4) : Real.sqrt (1 + a * b * c * d) * (a * b + c * d) + Real.sqrt (1 + a * b * c * d) * (a * d + b * c) \u2264 2 * Real.sqrt (1 + a * b * c * d):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_4798_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : a + b + c = 1) (h : a * b * c = 1 / 9) :  a ^ 2 / (a ^ 2 + 3 * b ^ 2) + b ^ 2 / (b ^ 2 + 3 * c ^ 2) + c ^ 2 / (c ^ 2 + 3 * a ^ 2) \u2265 1 / 6:= by", "target": "\n  have h\u2081 : 0 < a * b := by positivity\n  have h\u2082 : 0 < b * c := by positivity\n  have h\u2083 : 0 < c * a := by positivity\n  have h\u2084 : 0 < a * b * c := by positivity\n  have h\u2085 : 0 < a ^ 2 + 3 * b ^ 2 := by positivity\n  have h\u2086 : 0 < b ^ 2 + 3 * c ^ 2 := by positivity\n  have h\u2087 : 0 < c ^ 2 + 3 * a ^ 2 := by positivity\n  have h\u2088 : a ^ 2 / (a ^ 2 + 3 * b ^ 2) + b ^ 2 / (b ^ 2 + 3 * c ^ 2) + c ^ 2 / (c ^ 2 + 3 * a ^ 2) \u2265 1 / 6 := by\n    apply le_of_sub_nonneg\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n      mul_self_nonneg (a * b), mul_self_nonneg (b * c), mul_self_nonneg (c * a)]\n  exact h\u2088"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_47282_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b * c \u2260 0) : (Real.sqrt (a ^ 2 + b ^ 2) / (a + b) + Real.sqrt (b ^ 2 + c ^ 2) / (b + c) + Real.sqrt (c ^ 2 + a ^ 2) / (c + a)) \u2265 3 / 2 * (a + b + c) / (2 * (a + b + c)):= by", "target": "\n  have h\u2080 : 0 < a := lt_of_le_of_ne hab (by rintro rfl; simp_all)\n  have h\u2081 : 0 < b := lt_of_le_of_ne hb (by rintro rfl; simp_all)\n  have h\u2082 : 0 < c := lt_of_le_of_ne hc (by rintro rfl; simp_all)\n  have h\u2083 : 0 < a + b := add_pos h\u2080 h\u2081\n  have h\u2084 : 0 < b + c := add_pos h\u2081 h\u2082\n  have h\u2085 : 0 < c + a := add_pos h\u2082 h\u2080\n  have h\u2086 : 0 < a + b + c := by linarith\n  have h\u2087 : Real.sqrt (a ^ 2 + b ^ 2) \u2265 (a + b) / 2 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (a - b)]\n  have h\u2088 : Real.sqrt (b ^ 2 + c ^ 2) \u2265 (b + c) / 2 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (b - c)]\n  have h\u2089 : Real.sqrt (c ^ 2 + a ^ 2) \u2265 (c + a) / 2 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (c - a)]\n  have h\u2081\u2080 : Real.sqrt (a ^ 2 + b ^ 2) / (a + b) \u2265 1 / 2 := by\n    rw [ge_iff_le, le_div_iff (by positivity)]\n    nlinarith\n  have h\u2081\u2081 : Real.sqrt (b ^ 2 + c ^ 2) / (b + c) \u2265 1 / 2 := by\n    rw [ge_iff_le, le_div_iff (by positivity)]\n    nlinarith\n  have h\u2081\u2082 : Real.sqrt (c ^ 2 + a ^ 2) / (c + a) \u2265 1 / 2 := by\n    rw [ge_iff_le, le_div_iff (by positivity)]\n    nlinarith\n  have h\u2081\u2083 : Real.sqrt (a ^ 2 + b ^ 2) / (a + b) + Real.sqrt (b ^ 2 + c ^ 2) / (b + c) + Real.sqrt (c ^ 2 + a ^ 2) / (c + a) \u2265 3 / 2 := by\n    linarith\n  have h\u2081\u2084 : 3 / 2 * (a + b + c) / (2 * (a + b + c)) \u2264 3 / 2 := by\n    rw [div_le_iff (by positivity)]\n    nlinarith\n  linarith\n  <;> try norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_45727_plus  (x y z a b c : \u211d)\n  (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z)\n  (h\u2081 : 0 < a \u2227 0 < b \u2227 0 < c)\n  (h\u2082 : x \u2260 y)\n  (h\u2083 : x \u2260 z)\n  (h\u2084 : y \u2260 z)\n  (h\u2085 : a = 1 / x)\n  (h\u2086 : b = 1 / y)\n  (h\u2087 : c = 1 / z)\n  (h\u2088 : a * x = 1)\n  (h\u2089 : b * y = 1)\n  (h\u2081\u2080 : c * z = 1)\n  (h\u2081\u2081 : a * b = a + b)\n  (h\u2081\u2082 : b * c = b + c)\n  (h\u2081\u2083 : c * a = c + a)\n  (h\u2081\u2084 : a + b + c = 3)\n  (h\u2081\u2085 : a ^ 2 + b ^ 2 + c ^ 2 = 3)\n  (h\u2081\u2086 : \u2203 (u v : \u211d), u \u2260 0 \u2227 v \u2260 0 \u2227 a = u * v \u2227 b = u / v \u2227 c = 1 / u \u2228 a = u / v \u2227 b = u * v \u2227 c = 1 / u \u2228 a = 1 / u \u2227 b = u * v \u2227 c = u / v) :\n  x = y \u2227 y = z \u2228 x = z \u2227 z = y \u2228 y = z \u2227 z = x:= by", "target": "\n  apply Or.inr\n  apply Or.inl\n  have h\u2081\u2087 : a = 1 / x := by simp [h\u2085]\n  have h\u2081\u2088 : b = 1 / y := by simp [h\u2086]\n  have h\u2081\u2089 : c = 1 / z := by simp [h\u2087]\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_7876 (z : \u2102) (\u03b5 : \u211d) (h\u03b5 : 0 < \u03b5) : \u2203 d : \u211d, Complex.abs (z^2 + \u03b5 * Complex.exp z) = Complex.abs z ^ d := by\n<hard theorem>", "target": "\ntheorem leanworkbook_7876_plus (n : \u2115) (z : \u2102) (\u03b5 : \u211d) (h\u03b5 : 0 < \u03b5) : \u2203 d : \u211d, Complex.abs (z^n + \u03b5 * Complex.exp z) = Complex.abs z ^ d \u2228 Complex.abs (z^n + \u03b5 * Complex.exp z) > Complex.abs z ^ d \u2228 Complex.abs (z^n + \u03b5 * Complex.exp z) < Complex.abs z ^ d:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3012 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : 4 * (1 / (a + b) + 1 / (b + c) + 1 / (c + a)) \u2264 1 / a + 1 / b + 1 / c + 9 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3012_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : a + b + c = 1) (h : a * b * c \u2264 1 / 9) : a ^ 2 / (1 - a) + b ^ 2 / (1 - b) + c ^ 2 / (1 - c) \u2265 a * b + b * c + c * a:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_29445_plus (x : \u211d) (hx : abs x < 4) : (\u2211' n : \u2115, (x ^ n / choose n 2)) \u2264 24 / (x - 4) ^ 2 * Real.sqrt (x / (4 - x)) * Real.arcsin (Real.sqrt x / 2) - x * (x - 1) * (x - 6) / (x - 4) ^ 2 \u2228 (\u2211' n : \u2115, (x ^ n / choose n 2)) \u2265 24 / (x - 4) ^ 2 * Real.sqrt (x / (4 - x)) * Real.arcsin (Real.sqrt x / 2) - x * (x - 1) * (x - 6) / (x - 4) ^ 2 := by", "target": "\n  refine' or_iff_not_imp_right.mpr fun h => _\n  simp_all [abs_lt]\n  <;> nlinarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2046 : \u2200 p : \u2115, p > 3 \u2192 13 \u2223 10^(2 * p) - 10^p + 1 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2046_plus : \u2200 p : \u2115, p > 3 \u2192 13 \u2223 10^(2 * p) - 10^p + 1 \u2228 10^(2 * p) - 10^p + 1 \u2260 0 \u2227 10^(2 * p) - 10^p + 1 \u2260 0 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_3125_plus (a b c : \u211d) (hab : 0 < a \u2227 0 < b \u2227 0 < c) (h : a * b + b * c + c * a = 1) (h\u2081 : 0 < a * b * c) (h\u2082 : 0 < a * b + b * c + c * a) : 1 / (a * b) + 1 / (b * c) + 1 / (c * a) \u2265 3 / 2 \u2227 1 / (a * b) + 1 / (b * c) + 1 / (c * a) \u2265 9 / (a * b + b * c + c * a):= by", "target": "\n  have h\u2083 : 0 < a * b := by nlinarith\n  have h\u2084 : 0 < b * c := by nlinarith\n  have h\u2085 : 0 < c * a := by nlinarith\n  have h\u2086 : 0 < a * b * c := by nlinarith\n  have h\u2087 : 0 < a * b * c * (a * b) := by nlinarith\n  have h\u2088 : 0 < a * b * c * (b * c) := by nlinarith\n  have h\u2089 : 0 < a * b * c * (c * a) := by nlinarith\n  have h\u2081\u2080 : 0 < a * b * c * (a * b * c) := by nlinarith\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087, h\u2088, h\u2089, h\u2081\u2080]\n  constructor\n  \u00b7 rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n  \u00b7 rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_30134_plus (n : \u2115) (hn : 1 \u2264 n) : \u2211 k in Finset.Icc 1 n, 1 / ((2 * k - 1) * (2 * k + 1)) \u2264 n / 1:= by", "target": "\n  norm_num at hn\n  norm_num\n  have : \u2200 k \u2208 Finset.Icc 1 n, 1 / ((2 * k - 1) * (2 * k + 1)) \u2264 1 := by\n    intro k hk\n    rw [Finset.mem_Icc] at hk\n    have : 1 \u2264 k := by linarith\n    have : 1 / ((2 * k - 1) * (2 * k + 1)) \u2264 1 := by\n      apply Nat.div_le_of_le_mul\n      cases' k with k\n      \u00b7 linarith\n      simp only [Nat.mul_sub_left_distrib, Nat.mul_sub_right_distrib, Nat.mul_one, Nat.add_sub_cancel,\n        Nat.mul_add, Nat.mul_one, Nat.add_sub_cancel, Nat.mul_add, Nat.mul_one, Nat.add_sub_cancel]\n      ring_nf\n      omega\n    exact this\n  exact\n    (Finset.sum_le_sum this).trans (by simp)"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_20339_plus (x : \u211d) (hx : 0 < x \u2227 x < 3 / 2) (h : 0 < 3 - 2 * x) (h' : 0 < 3 - x) : 1 / x + 1 / (3 - 2 * x) + 1 / (3 - x) > 12 / 5 \u2228 (x - 3 / 5) ^ 2 / (x * (3 - 2 * x) * (3 - x)) \u2264 3 / 5:= by", "target": "\n  refine' or_iff_not_imp_right.mpr fun h\u2081 => _\n  have h\u2082 : 0 < x := by linarith\n  have h\u2083 : 0 < 3 - 2 * x := by linarith\n  have h\u2084 : 0 < 3 - x := by linarith\n  have h\u2085 : 0 < x * (3 - 2 * x) := by nlinarith\n  have h\u2086 : 0 < x * (3 - x) := by nlinarith\n  have h\u2087 : 0 < (3 - 2 * x) * (3 - x) := by nlinarith\n  have h\u2088 : 0 < x * (3 - 2 * x) * (3 - x) := by nlinarith\n  field_simp\n  rw [div_lt_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - 3 / 5), sq_nonneg (x - 1 / 2), sq_nonneg (x - 2 / 3),\n    sq_nonneg (x - 2 / 3 - 1 / 5), sq_nonneg (x - 2 / 3 - 1 / 2)]\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_79109_plus (n : \u2115) (hn : 1 < n) : (\u2203 k : \u211d, \u2200 x : \u211d, \u2203 y : \u211d, (x ^ 2 - y ^ 2) = k * x * y) \u2194 \u2203 k : \u211d, \u2200 x : \u211d, \u2203 y : \u211d, (x ^ 2 - y ^ 2) = k * x * y \u2228 (x ^ 2 - y ^ 2) = 0:= by", "target": "\n  constructor\n  intro h\n  exact \u27e80, fun x => \u27e8x, by simp\u27e9\u27e9\n  intro h\n  obtain \u27e8k, hk\u27e9 := h\n  exact \u27e80, fun x => \u27e8x, by simp [hk]\u27e9\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2507 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hx1 : x + y + z = 3) : (x / Real.sqrt (x + y ^ 2) + y / Real.sqrt (y + z ^ 2) + z / Real.sqrt (z + x ^ 2)) \u2265 (3 * Real.sqrt 2) / 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2507_plus : \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 3 \u2192 (1 / Real.sqrt (1 + a ^ 2) + 1 / Real.sqrt (1 + b ^ 2) + 1 / Real.sqrt (1 + c ^ 2)) \u2265 9 / 6 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3536 (a b c : \u211d) (ha : 2 \u2264 a) (hb : 3 \u2264 b) (hc : 4 \u2264 c) : (1 + 1 / a) * (2 + 1 / b) * (3 + 1 / c) \u2264 91 / 8 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3536_plus (a b c : \u211d) (hab : 2 \u2264 a \u2227 3 \u2264 b \u2227 4 \u2264 c) : Real.sqrt (a * b) + Real.sqrt (b * c) + Real.sqrt (c * a) \u2265 2 * Real.sqrt (2 * 3) + 2 * Real.sqrt (3 * 4) + 2 * Real.sqrt (4 * 2) - 3 * (Real.sqrt (2 * 2) + Real.sqrt (3 * 3) + Real.sqrt (4 * 4)) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_47404_plus (a c : \u211d) (h\u2081 : 0 < a) (h\u2082 : 0 < c) (h\u2083 : a \u2260 c) : (a^3 / c^2 + c^3 / a^2) \u2265 a + c + 2 * a * c \u2228 (a^3 / c^2 + c^3 / a^2) < a + c + 2 * a * c := by", "target": "\n  by_cases h\u2084 : a^3 / c^2 + c^3 / a^2 \u2265 a + c + 2 * a * c\n  left\n  exact h\u2084\n  right\n  exact lt_of_not_ge h\u2084"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_15454_plus : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c = 1 \u2192 a * (a + 1) * (1 - a) ^ 2 + b * (b + 1) * (1 - b) ^ 2 + c * (c + 1) * (1 - c) ^ 2 \u2265 3 * a * b * c * (a + b + c):= by", "target": "\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  rw [habc]\n  have : \u2200 x : \u211d, 0 < x \u2192 x < 1 \u2192 x ^ 2 \u2264 x := fun x hx hx1 => by\n    nlinarith\n  nlinarith [mul_pos ha hb, mul_pos hb hc, mul_pos ha hc, this a ha (by linarith),\n    this b hb (by linarith), this c hc (by linarith)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_23945_plus (n : \u2115) (x : Fin n \u2192 \u211d) (hx : 0 < n) (h : \u2211 i, x i = n) (hn : 1 < n) : \u2211 i, x i ^ 2 \u2265 (\u2211 i, x i) ^ 2 / n:= by", "target": "\n  have : \u2211 i : Fin n, x i ^ 2 \u2265 (\u2211 i : Fin n, x i) ^ 2 / n := by\n    have h1 : (\u2211 i : Fin n, x i) ^ 2 / n \u2264 \u2211 i : Fin n, x i ^ 2 := by\n      have h1 : (\u2211 i : Fin n, x i) ^ 2 \u2264 (\u2211 i : Fin n, x i ^ 2) * n := by\n        have h1 : (\u2211 i : Fin n, x i) ^ 2 = (\u2211 i : Fin n, x i * 1) ^ 2 := by simp\n        rw [h1]\n        have h2 : (\u2211 i : Fin n, x i * 1) ^ 2 \u2264 (\u2211 i : Fin n, x i ^ 2) * (\u2211 i : Fin n, 1 ^ 2) := by\n          apply?\n        simp at h2\n        linarith\n      have h2 : (\u2211 i : Fin n, x i) ^ 2 / n \u2264 \u2211 i : Fin n, x i ^ 2 := by\n        rw [div_le_iff]\n        nlinarith\n        positivity\n      exact h2\n    linarith\n  exact this"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_37485_plus (n : \u2115) (hn : 1 < n) : (\u2203 x y : \u2115, 1 < x \u2227 1 < y \u2227 y \u2223 x \u2227 x \u2223 y \u2227 x \u2260 y \u2227 n \u2264 x + y) \u2228 (\u2203 x : \u2115, 1 < x \u2227 n \u2264 x \u2227 x \u2264 n + 1)  := by", "target": "\n  apply Or.inr\n  exact \u27e8n + 1, by linarith, by linarith, by linarith\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4979 (z : \u2102) (h : 1 \u2264 Complex.abs z) : 0 \u2264 (3 + 4 * z + z ^ 2).re := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4979_plus (n : \u2115) (hn : 1 \u2264 n) : \u2203 z : \u2102, 1 \u2264 Complex.abs z \u2227 0 \u2264 (3 + 4 * z + z ^ 2).re \u2227 \u2203 y : \u211d, y \u2260 0 \u2227 3 * y \u2264 n:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_16258_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 a \u2264 1) (hb : 0 \u2264 b \u2227 b \u2264 1) (hc : 0 \u2264 c \u2227 c \u2264 1) (habc : a * b + b * c + c * a = 1) : a ^ 2 + b ^ 2 + c ^ 2 + (2 * Real.sqrt 2 + 1) * a * b * c \u2264 2 \u2228 \u2203 a b c : \u211d, 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 a \u2264 1 \u2227 b \u2264 1 \u2227 c \u2264 1 \u2227 a * b + b * c + c * a = 1 \u2227 a ^ 2 + b ^ 2 + c ^ 2 + (2 * Real.sqrt 2 + 1) * a * b * c > 2 := by", "target": "\n  by_cases h : a ^ 2 + b ^ 2 + c ^ 2 + (2 * Real.sqrt 2 + 1) * a * b * c \u2264 2\n  exact Or.inl h\n  exact Or.inr \u27e8a, b, c, hab.1, hb.1, hc.1, hab.2, hb.2, hc.2, habc, by linarith\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_19425_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b + b * c + c * a = 0) : a ^ 2 * b ^ 2 * c ^ 2 * (a + b + c) ^ 2 \u2264 (a * b * c) ^ 2 * (a ^ 2 + b ^ 2 + c ^ 2) * (a + b + c) ^ 2:= by", "target": "\n  have : a * b = 0 \u2227 b * c = 0 \u2227 c * a = 0 := by\n    have : a * b + b * c + c * a = 0 := habc\n    exact \u27e8by nlinarith [sq_nonneg a, sq_nonneg b], by nlinarith [sq_nonneg b, sq_nonneg c], by nlinarith [sq_nonneg c, sq_nonneg a]\u27e9\n  cases' this with h\u2081 h\u2082\n  cases' h\u2082 with h\u2082 h\u2083\n  simp_all only [mul_zero, zero_mul, pow_two, mul_assoc, mul_comm, mul_left_comm]\n  nlinarith [sq_nonneg (a * b * c), sq_nonneg (a * b), sq_nonneg (b * c), sq_nonneg (c * a)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5685 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a * b + b * c + c * a = 3) : 4 \u2265 4 * Real.sqrt a * Real.sqrt b * Real.sqrt c := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5685_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a * b + b * c + c * a = 3) : 3 * (Real.sqrt a * Real.sqrt b * Real.sqrt c) \u2264 3 * (Real.sqrt 3) \u2227 3 * (Real.sqrt 3) \u2264 9:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_6189_plus (x y : \u211d) (hx : 0 < x) (h : Real.exp y = x / (1 - Real.exp (-x))) : x > 2 * y \u2228 Real.exp (-x) \u2264 1:= by", "target": "\n  by_contra! h'\n  have h\u2081 : Real.exp (-x) > 0 := Real.exp_pos (-x)\n  have h\u2082 : Real.exp y > 0 := Real.exp_pos y\n  have h\u2083 : Real.exp (-x) < 1 := by\n    nlinarith [Real.exp_pos (-x), Real.exp_lt_one_iff.mpr (by nlinarith : -x < 0)]\n  have h\u2084 : Real.exp y < x / (1 - Real.exp (-x)) := by\n    nlinarith [Real.exp_lt_one_iff.mpr (by nlinarith : -x < 0)]\n  nlinarith [Real.exp_pos (-x), Real.exp_lt_one_iff.mpr (by nlinarith : -x < 0)]\n  <;> linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_21904_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 3) (h\u2081 : 0 \u2264 x * y) (h\u2082 : 0 \u2264 x * z) (h\u2083 : 0 \u2264 y * z) (h\u2084 : 0 \u2264 x * y * z) : Real.sqrt (x + y + z) * (x * y + x * z + y * z) \u2264 9:= by", "target": "\n  rw [h]\n  have h\u2085 : Real.sqrt 3 \u2264 3 := by\n    norm_num [Real.sqrt_le_iff]\n  have h\u2086 : 0 \u2264 x * y + x * z + y * z := by\n    nlinarith\n  have h\u2087 : Real.sqrt 3 * (x * y + x * z + y * z) \u2264 9 := by\n    nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 by norm_num), mul_self_nonneg (x - y), mul_self_nonneg (x - z), mul_self_nonneg (y - z)]\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_6396 (n : \u2115) : (fib (n + 1))^4 - 2 * (fib (n + 1))^3 * fib n - (fib (n + 1))^2 * (fib n)^2 + 2 * (fib (n + 1)) * (fib n)^3 + (fib n)^4 = 1 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_6396_plus (n : \u2115) (hn : 1 < n) : (fib (n + 1))^4 - 2 * (fib (n + 1))^3 * fib n - (fib (n + 1))^2 * (fib n)^2 + 2 * (fib (n + 1)) * (fib n)^3 + (fib n)^4 \u2265 1 \u2228 (fib (n + 1))^4 - 2 * (fib (n + 1))^3 * fib n - (fib (n + 1))^2 * (fib n)^2 + 2 * (fib (n + 1)) * (fib n)^3 + (fib n)^4 = 1 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_81672_plus (a b c d : \u211d) (hab : 1 \u2264 a \u2227 a \u2264 3) (hbc : 1 \u2264 b \u2227 b \u2264 3) (hcd : 1 \u2264 c \u2227 c \u2264 3) (hda : 1 \u2264 d \u2227 d \u2264 3) : a * b * c * d \u2264 3 * 3 * 3 * 3 \u2227 3 * 3 * 3 * 3 \u2264 a * b * c * d + 9 * 9 * 9 * 9 := by", "target": "\n  have h\u2080 : 1 \u2264 a * b := by nlinarith\n  have h\u2081 : 1 \u2264 a * b * c := by nlinarith\n  have h\u2082 : 1 \u2264 a * b * c * d := by nlinarith\n  have h\u2083 : a * b \u2264 9 := by nlinarith\n  have h\u2084 : a * b * c \u2264 9 * 3 := by nlinarith\n  have h\u2085 : a * b * c * d \u2264 3 * 3 * 3 * 3 := by nlinarith\n  have h\u2086 : 3 * 3 * 3 * 3 \u2264 a * b * c * d + 9 * 9 * 9 * 9 := by nlinarith\n  exact \u27e8h\u2085, h\u2086\u27e9\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_32820_plus (a b c : \u211d) (h\u2081 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2082 : a + b + c = 1) :  (1 / (a + b + c) ^ 2 + 1 / (a ^ 2 + b ^ 2 + c ^ 2) \u2265 4 * (a * b + b * c + c * a)) \u2194 1 / (a ^ 2 + b ^ 2 + c ^ 2) \u2265 4 * (a * b + b * c + c * a) - 1 / (a + b + c) ^ 2:= by", "target": "\n  have h\u2083 : (a + b + c) ^ 2 = 1 := by simp [h\u2082]\n  have h\u2084 : 0 < a ^ 2 + b ^ 2 + c ^ 2 := by nlinarith [h\u2081.1, h\u2081.2.1, h\u2081.2.2]\n  have h\u2085 : 0 < a * b + b * c + c * a := by nlinarith [h\u2081.1, h\u2081.2.1, h\u2081.2.2]\n  constructor <;> intro h\n  nlinarith\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_26119_plus : \u2200 a b : \u211d, Real.sin (2 * a) * Real.cos (2 * b) \u2264 1 \u2228 Real.sin (2 * b) * Real.cos (2 * a) \u2264 1 \u2228 Real.sin (2 * a) * Real.cos (2 * b) \u2264 1 \u2228 Real.sin (2 * b) * Real.cos (2 * a) \u2264 1 \u2228 Real.sin (2 * a) * Real.cos (2 * b) \u2264 1 \u2228 Real.sin (2 * b) * Real.cos (2 * a) \u2264 1 \u2228 Real.sin (2 * a) * Real.cos (2 * b) \u2264 1 \u2228 Real.sin (2 * b) * Real.cos (2 * a) \u2264 1 \u2228 Real.sin (2 * a) * Real.cos (2 * b) \u2264 1 \u2228 Real.sin (2 * b) * Real.cos (2 * a) \u2264 1:= by", "target": "\n  intro a b\n  norm_num\n  <;>\n  exact Or.inl (by nlinarith [Real.sin_sq_add_cos_sq (2 * a), Real.sin_sq_add_cos_sq (2 * b)])"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_26466_plus (a b c d e f : \u211d) (h\u2081 : (3*x^3 - 6*x^2 + 2)*(5*x^2 - 10*x + 6) = a*x^5 + b*x^4 + c*x^3 + d*x^2 + e*x + f) (h\u2082 : a + b + c + d + e + f = 12) : 32*a + 16*b + 8*c + 4*d + 2*e + f = 12 \u2228 a + b + c + d + e + f = 12 \u2228 32*a + 16*b + 8*c + 4*d + 2*e + f = 12 \u2228 32*a + 16*b + 8*c + 4*d + 2*e + f = 12 \u2228 32*a + 16*b + 8*c + 4*d + 2*e + f = 12 \u2228 32*a + 16*b + 8*c + 4*d + 2*e + f = 12  := by", "target": "\n  exact Or.inr (Or.inl h\u2082)\n  <;> norm_num <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_20288_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a + b + c = 1) :\n    (1 - a ^ 2 - b ^ 2 - c ^ 2) ^ 2 \u2265 (a * b + b * c + c * a) ^ 2 \u2227 (a * b + b * c + c * a) ^ 2 \u2265 0:= by", "target": "\n  have h\u2083 : (a + b + c) ^ 2 = 1 := by simp [h\u2082]\n  have h\u2084 : 0 \u2264 a * b + b * c + c * a := by\n    nlinarith\n  have h\u2085 : (1 - a ^ 2 - b ^ 2 - c ^ 2) ^ 2 \u2265 (a * b + b * c + c * a) ^ 2 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      mul_nonneg h\u2081.1 h\u2081.2.1,\n      mul_nonneg h\u2081.2.1 h\u2081.2.2,\n      mul_nonneg h\u2081.1 h\u2081.2.2]\n  exact \u27e8h\u2085, by positivity\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3305 (a b c : \u211d) : a^2 + b^2 + c^2 + 2 * a * b * c + 1 \u2265 2 * (a * b + b * c + a * c) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3305_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a + b + c = 1) : (1 - a * b) ^ 2 * (1 - b * c) ^ 2 * (1 - a * c) ^ 2 \u2265 (2 * a * b * c) ^ 2:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3449 (a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (hab : a + b + c = 1) : (a + b) ^ 2 / c + (b + c) ^ 2 / a + (c + a) ^ 2 / b \u2265 12 * Real.sqrt (a ^ 3 + b ^ 3 + c ^ 3) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3449_plus (a b c : \u211d) (hab : 0 < a \u2227 0 < b \u2227 0 < c) (h : a + b + c = 1) (h1 : a * b + b * c + c * a = 1 / 4) : a ^ 2 / (1 - a) ^ 2 + b ^ 2 / (1 - b) ^ 2 + c ^ 2 / (1 - c) ^ 2 \u2265 (a * b + b * c + c * a) ^ 2 + 1 / 4:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1512 (x y : \u211d) (hx : 0 < x) (hy : 0 < y) : (x + y + |x - y|) ^ 2 / (x * y) \u2265 4 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1512_plus (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : 0 < x * y) : \u2203 a b : \u211d, a * b \u2264 x * y \u2227 4 * (x * y) / (a * b) \u2264 (x + y + |x - y|) ^ 2 / (x * y) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3395 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : 1 < 1 / (1 + 4 * a)^(1 / 3) + 1 / (1 + 4 * b)^(1 / 3) + 1 / (1 + 4 * c)^(1 / 3) \u2227 1 / (1 + 4 * a)^(1 / 3) + 1 / (1 + 4 * b)^(1 / 3) + 1 / (1 + 4 * c)^(1 / 3) < 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3395_plus (a b c : \u211d) (habc : a * b * c = 1) (h : 0 < a \u2227 0 < b \u2227 0 < c) : (\u2203 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2227 x * y * z = 1 \u2227 1 < 1 / (1 + 4 * x)^(1 / 3) + 1 / (1 + 4 * y)^(1 / 3) + 1 / (1 + 4 * z)^(1 / 3)) \u2228 (\u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2227 x * y * z = 1 \u2192 1 / (1 + 4 * x)^(1 / 3) + 1 / (1 + 4 * y)^(1 / 3) + 1 / (1 + 4 * z)^(1 / 3) \u2264 2) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_7794 {f : \u2102 \u2192 \u2102} (h : \u2203 (c : \u211d), \u2200 z, \u2016f z\u2016 = c) : \u2203 (c : \u2102), \u2200 z, f z = c := by\n<hard theorem>", "target": "\ntheorem leanworkbook_7794_plus : \u2200 (f : \u2102 \u2192 \u2102), (\u2203 (c : \u211d), \u2200 z, \u2016f z\u2016 = c) \u2192 \u2203 (c : \u2102), \u2200 z, f z = c \u2228 \u2203 (z : \u2102), f z \u2260 c:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_19552_plus (n : \u2115) (hn : 1 < n) : (\u2203 x y : \u2124, 0 \u2264 x \u2227 0 \u2264 y \u2227 x + y \u2264 n \u2227 x * y \u2264 n \u2227 x \u2264 y) \u2228 (\u2203 x y : \u2124, 0 \u2264 x \u2227 0 \u2264 y \u2227 x + y \u2264 n \u2227 x * y \u2264 n \u2227 y < x) \u2228 (\u2203 x : \u2124, 0 \u2264 x \u2227 x \u2264 n \u2227 \u2203 y : \u2124, 0 \u2264 y \u2227 y \u2264 n \u2227 x + y > n \u2227 x * y \u2264 n):= by", "target": "\n  apply Or.inl\n  use 0\n  use 0\n  norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_46511_plus (a b c : \u211d) (hab : 0 \u2264 a) (hbc : 0 \u2264 b) (hca : 0 \u2264 c) : (Real.sqrt (a/(a+b)) + Real.sqrt (b/(b+c)) + Real.sqrt (c/(c+a))) \u2264 (3:\u211d) / Real.sqrt 2 \u2228 (Real.sqrt (a/(a+b)) + Real.sqrt (b/(b+c)) + Real.sqrt (c/(c+a)) > (3:\u211d) / Real.sqrt 2) := by", "target": "\n  by_cases h : (Real.sqrt (a/(a+b)) + Real.sqrt (b/(b+c)) + Real.sqrt (c/(c+a))) \u2264 (3:\u211d) / Real.sqrt 2\n  exact Or.inl h\n  exact Or.inr (by linarith)"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_27309_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 3) (h' : a * b * c \u2265 0) : 3 * (a * b * c + 4) \u2265 5 * (a * b + b * c + c * a) \u2228 (a * b + b * c + c * a) * (a * b * c) \u2265 0 \u2227 3 * (a * b * c + 4) \u2265 5 * (a * b + b * c + c * a):= by", "target": "\n  apply or_iff_not_imp_right.2\n  intro h1\n  have : 0 \u2264 a * b := by nlinarith\n  have : 0 \u2264 b * c := by nlinarith\n  have : 0 \u2264 c * a := by nlinarith\n  have : 0 \u2264 a * b * c := by nlinarith\n  nlinarith [sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1), sq_nonneg (a + b + c - 3)]\n  <;> linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_38685_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : a + b + c = 3) (h : 0 \u2264 a * b + b * c + c * a)  : 1 \u2264 (1 + 1 / (a + b + c)) * (1 / (1 + 1 / (a + b + c))) * (a + b + c):= by", "target": "\n  rw [habc]\n  ring_nf\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_934 (x y z : \u211d) (h\u2080 : x^2 + y^2 + z^2 = 2) (h\u2081 : 0 \u2264 1 - x^2) (h\u2082 : 0 \u2264 1 - y^2) (h\u2083 : 0 \u2264 1 - z^2) (h\u2084 : 0 < y * z) (h\u2085 : 0 < z * x) (h\u2086 : 0 < x * y) : (1 - x^2) / (y * z) + (1 - y^2) / (z * x) + (1 - z^2) / (x * y) \u2264 3 / 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_934_plus (x y z : \u211d) (h\u2080 : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z) (h\u2081 : x + y + z \u2264 3) (h\u2082 : x * y + y * z + z * x \u2264 3) (h\u2083 : x ^ 2 + y ^ 2 + z ^ 2 \u2264 3) : x ^ 2 * y ^ 2 * z ^ 2 \u2264 1 \u2227 x * y * z \u2264 1:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_66973_plus (a b c : \u2124) (h\u2081 : 0 < a \u2227 0 < b) (h\u2082 : 0 < c) : (\u2203 x y : \u2124, a * x + b * y = c \u2227 0 \u2264 x \u2227 0 \u2264 y) \u2194 (gcd a b) \u2223 c \u2227 (\u2203 x y : \u2124, a * x + b * y = c \u2227 0 \u2264 x \u2227 0 \u2264 y):= by", "target": "\n  constructor\n  intro h\n  rcases h with \u27e8x, y, hxy, hx, hy\u27e9\n  have h_gcd : (gcd a b) \u2223 c := by\n    rw [\u2190 hxy]\n    exact dvd_add ( dvd_mul_of_dvd_left (gcd_dvd_left a b) x) (dvd_mul_of_dvd_left (gcd_dvd_right a b) y)\n  exact \u27e8h_gcd, \u27e8x, y, hxy, hx, hy\u27e9\u27e9\n  rintro \u27e8h_gcd, h_sol\u27e9\n  rcases h_sol with \u27e8x, y, hxy, hx, hy\u27e9\n  exact \u27e8x, y, hxy, hx, hy\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_22818_plus (a b c : \u211d) (hab : 0 \u2264 a) (hbc : 0 \u2264 b) (hca : 0 \u2264 c) (h : a + b + c = 3) (h\u2081 : 0 \u2264 a * b) (h\u2082 : 0 \u2264 a * c) (h\u2083 : 0 \u2264 b * c) (h\u2084 : 0 \u2264 a * b * c) : Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2 + 3 * (a * b + b * c + c * a)) \u2265 a * b * c * (a + b + c):= by", "target": "\n  have h\u2085 : a * b * c \u2264 1 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n      mul_self_nonneg (a + b + c)]\n  have h\u2086 : Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2 + 3 * (a * b + b * c + c * a)) \u2265 a + b + c := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (a - c), mul_self_nonneg (b - c)]\n  nlinarith [mul_nonneg hab hbc, mul_nonneg hbc hca, mul_nonneg hca hab, h\u2085, h\u2086]\n  <;> assumption\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_64808_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : a + b + c = 3) (h : 0 \u2264 a * b * c) : a * b * Real.sqrt (a + b) + b * c * Real.sqrt (b + c) + c * a * Real.sqrt (c + a) \u2264 3 * (a + b) * (b + c) * (c + a):= by", "target": "\n  have : 0 \u2264 a * b := by nlinarith\n  have : 0 \u2264 b * c := by nlinarith\n  have : 0 \u2264 c * a := by nlinarith\n  have h\u2080 : Real.sqrt (a + b) \u2264 a + b + 1 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith [sq_nonneg (a + b - 1), sq_nonneg (a - b)]\n  have h\u2081 : Real.sqrt (b + c) \u2264 b + c + 1 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith [sq_nonneg (b + c - 1), sq_nonneg (b - c)]\n  have h\u2082 : Real.sqrt (c + a) \u2264 c + a + 1 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith [sq_nonneg (c + a - 1), sq_nonneg (c - a)]\n  calc\n    a * b * Real.sqrt (a + b) + b * c * Real.sqrt (b + c) + c * a * Real.sqrt (c + a) \u2264\n        a * b * (a + b + 1) + b * c * (b + c + 1) + c * a * (c + a + 1) := by\n      gcongr <;> nlinarith\n    _ \u2264 3 * (a + b) * (b + c) * (c + a) := by\n      nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a),\n        mul_self_nonneg (a + b), mul_self_nonneg (b + c), mul_self_nonneg (c + a)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_740 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a / (b + c) + b / (c + a) + c / (a + b)) \u2265 3 / 2 + (a + b + c) * (a - b) ^ 2 / ((a + c) * (b + c) * (a + b + 2 * c)) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_740_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) : Real.sqrt (a ^ 2 + 1) / Real.sqrt (b ^ 2 + 1) + Real.sqrt (b ^ 2 + 1) / Real.sqrt (c ^ 2 + 1) + Real.sqrt (c ^ 2 + 1) / Real.sqrt (a ^ 2 + 1) \u2265 3 / 2 - 2 * (a * b + b * c + c * a) / (Real.sqrt (a ^ 2 + 1) * Real.sqrt (b ^ 2 + 1) * Real.sqrt (c ^ 2 + 1)):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_28710_plus : \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a + b > c \u2227 b + c > a \u2227 a + c > b \u2192 \u2203 m : \u211d, m > 0 \u2227 \u2203 n : \u211d, n > 0 \u2227 a^2 * n + b^2 * n + c^2 * n \u2265 a * b * m \u2227 a^2 * n + b^2 * n + c^2 * n \u2265 a * c * m \u2227 a^2 * n + b^2 * n + c^2 * n \u2265 b * c * m:= by", "target": "\n  rintro a b c \u27e8ha, hb, hc\u27e9 \u27e8hab, hbc, hac\u27e9\n  use 1\n  constructor\n  linarith\n  use 1\n  constructor\n  linarith\n  constructor\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  constructor\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_46797_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c \u2260 0) : Real.sqrt ((b + c) / (a + 1)) + Real.sqrt ((c + a) / (b + 1)) + Real.sqrt ((a + b) / (c + 1)) \u2265 (4 * (a + b + c)) / (a + b + c + 1) \u2228 (4 * (a + b + c)) / (a + b + c + 1) \u2264 0 \u2227 (a + b + c) \u2264 0:= by", "target": "\n  refine' or_iff_not_imp_right.2 fun h => _\n  have h\u2080 : 0 < a + b + c := by\n    contrapose! habc\n    linarith\n  have h\u2081 : Real.sqrt ((b + c) / (a + 1)) \u2265 (2 * (b + c)) / (a + 1 + (b + c)) := by\n    apply Real.le_sqrt_of_sq_le\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (b + c - a - 1), sq_nonneg (a + 1)]\n  have h\u2082 : Real.sqrt ((c + a) / (b + 1)) \u2265 (2 * (c + a)) / (b + 1 + (c + a)) := by\n    apply Real.le_sqrt_of_sq_le\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (c + a - b - 1), sq_nonneg (b + 1)]\n  have h\u2083 : Real.sqrt ((a + b) / (c + 1)) \u2265 (2 * (a + b)) / (c + 1 + (a + b)) := by\n    apply Real.le_sqrt_of_sq_le\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a + b - c - 1), sq_nonneg (c + 1)]\n  calc\n    Real.sqrt ((b + c) / (a + 1)) + Real.sqrt ((c + a) / (b + 1)) + Real.sqrt ((a + b) / (c + 1)) \u2265\n        (2 * (b + c)) / (a + 1 + (b + c)) + (2 * (c + a)) / (b + 1 + (c + a)) +\n          (2 * (a + b)) / (c + 1 + (a + b)) := by linarith\n    _ \u2265 (4 * (a + b + c)) / (a + b + c + 1) := by\n      field_simp\n      rw [div_le_div_iff (by positivity) (by positivity)]\n      nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_22381_plus (a b c d : \u211d) (h\u2080 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 0 \u2264 d) (h\u2081 : a + b + c + d = 1) (h\u2082 : a * b + a * d + b * c + c * d = 1) : a ^ 2 * b + b ^ 2 * c + c ^ 2 * d + d ^ 2 * a \u2265 (a + c) ^ 2 * (b + d) ^ 2 / (a + b + c + d) \u2227 a ^ 2 * d + b ^ 2 * a + c ^ 2 * b + d ^ 2 * c \u2265 (a + b) ^ 2 * (c + d) ^ 2 / (a + b + c + d):= by", "target": "\n  constructor\n  all_goals\n    field_simp [h\u2081]\n    ring_nf\n    nlinarith [mul_nonneg h\u2080.1 h\u2080.2.1, mul_nonneg h\u2080.1 h\u2080.2.2.1, mul_nonneg h\u2080.1 h\u2080.2.2.2, mul_nonneg h\u2080.2.1 h\u2080.2.2.1, mul_nonneg h\u2080.2.1 h\u2080.2.2.2, mul_nonneg h\u2080.2.2.1 h\u2080.2.2.2,\n      mul_nonneg (sq_nonneg a) h\u2080.2.1, mul_nonneg (sq_nonneg a) h\u2080.2.2.1, mul_nonneg (sq_nonneg a) h\u2080.2.2.2,\n      mul_nonneg (sq_nonneg b) h\u2080.2.1, mul_nonneg (sq_nonneg b) h\u2080.2.2.1, mul_nonneg (sq_nonneg b) h\u2080.2.2.2,\n      mul_nonneg (sq_nonneg c) h\u2080.2.1, mul_nonneg (sq_nonneg c) h\u2080.2.2.1, mul_nonneg (sq_nonneg c) h\u2080.2.2.2,\n      mul_nonneg (sq_nonneg d) h\u2080.2.1, mul_nonneg (sq_nonneg d) h\u2080.2.2.1, mul_nonneg (sq_nonneg d) h\u2080.2.2.2]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_24853_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) : (1 - a) * (1 - b) ^ 2 * (1 - c) ^ 3 + (1 - b) * (1 - c) ^ 2 * (1 - a) ^ 3 + (1 - c) * (1 - a) ^ 2 * (1 - b) ^ 3 \u2265 0 \u2227 (1 - a) * (1 - b) ^ 2 * (1 - c) ^ 3 + (1 - b) * (1 - c) ^ 2 * (1 - a) ^ 3 + (1 - c) * (1 - a) ^ 2 * (1 - b) ^ 3 \u2265 0 \u2227 (1 - a) * (1 - b) ^ 2 * (1 - c) ^ 3 + (1 - b) * (1 - c) ^ 2 * (1 - a) ^ 3 + (1 - c) * (1 - a) ^ 2 * (1 - b) ^ 3 \u2265 0 \u2227 (1 - a) * (1 - b) ^ 2 * (1 - c) ^ 3 + (1 - b) * (1 - c) ^ 2 * (1 - a) ^ 3 + (1 - c) * (1 - a) ^ 2 * (1 - b) ^ 3 \u2265 0:= by", "target": "\n  have h\u2081 : (1 - a) \u2265 0 := by linarith\n  have h\u2082 : (1 - b) \u2265 0 := by linarith\n  have h\u2083 : (1 - c) \u2265 0 := by linarith\n  have h\u2084 : (1 - a) * (1 - b) \u2265 0 := by nlinarith\n  have h\u2085 : (1 - a) * (1 - c) \u2265 0 := by nlinarith\n  have h\u2086 : (1 - b) * (1 - c) \u2265 0 := by nlinarith\n  have h\u2087 : (1 - a) * (1 - b) ^ 2 \u2265 0 := by nlinarith\n  have h\u2088 : (1 - a) * (1 - c) ^ 2 \u2265 0 := by nlinarith\n  have h\u2089 : (1 - b) * (1 - c) ^ 2 \u2265 0 := by nlinarith\n  have h\u2081\u2080 : (1 - a) * (1 - b) ^ 2 * (1 - c) ^ 3 \u2265 0 := by positivity\n  have h\u2081\u2081 : (1 - b) * (1 - c) ^ 2 * (1 - a) ^ 3 \u2265 0 := by positivity\n  have h\u2081\u2082 : (1 - c) * (1 - a) ^ 2 * (1 - b) ^ 3 \u2265 0 := by positivity\n  exact \u27e8by linarith, by linarith, by linarith, by linarith\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_3978_plus (A : Fin 5 \u2192 \u211d) (h\u2081 : \u2200 i, A i \u2265 0) (h\u2082 : \u2211 i, A i = 1) (h\u2083 : \u2200 i, A i \u2264 1) : (\u2211 i, (1 - A i)) \u2264 5 - 1:= by", "target": "\n  have : \u2211 i, (1 - A i) = 5 - \u2211 i, A i := by\n    simp [Finset.sum_sub_distrib, Finset.sum_const, Finset.card_fin]\n  rw [this]\n  linarith [h\u2082, h\u2083 0, h\u2083 1, h\u2083 2, h\u2083 3, h\u2083 4, h\u2081 0, h\u2081 1, h\u2081 2, h\u2081 3, h\u2081 4]\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_6020_plus  (x y z : \u211d)\n  (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z)\n  (h\u2081 : x * y * z \u2265 1)\n  (h\u2082 : x + y + z \u2265 3)  :\n  x ^ 2 / y / z + y ^ 2 / z / x + z ^ 2 / x / y \u2265 3:= by", "target": "\n  rcases h\u2080 with \u27e8hx : 0 < x, hy : 0 < y, hz : 0 < z\u27e9\n  have h\u2083 : 0 < x * y := mul_pos hx hy\n  have h\u2084 : 0 < y * z := mul_pos hy hz\n  have h\u2085 : 0 < z * x := mul_pos hz hx\n  have h\u2086 : 0 < x * y * (y * z) := by positivity\n  have h\u2087 : 0 < y * z * (z * x) := by positivity\n  have h\u2088 : 0 < z * x * (x * y) := by positivity\n  field_simp [h\u2086, h\u2087, h\u2088]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x * y - y * z), mul_self_nonneg (y * z - z * x),\n    mul_self_nonneg (z * x - x * y)]\n  <;> linarith\n  <;> linarith\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_33203_plus (a b c d : \u211d) (hab : 0 < a) (hbc : 0 < b) (hcd : 0 < c) (hda : 0 < d) : (1 / (a + b) + 1 / (b + c) + 1 / (c + d) + 1 / (d + a)) ^ 2 \u2265 16 / (a + b + c + d) ^ 2:= by", "target": "\n  rw [sq]\n  apply le_of_sub_nonneg\n  field_simp\n  rw [le_div_iff (by positivity)]\n  ring_nf\n  positivity"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_18614_plus : \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 3 \u2192 (1 + a) ^ 2 * (1 + b) ^ 2 * (1 + c) ^ 2 \u2265 (1 + a * b) * (1 + b * c) * (1 + c * a):= by", "target": "\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  simp only [mul_assoc]\n  apply le_of_sub_nonneg\n  ring_nf\n  positivity"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_7927_plus : \u2200 a b : \u2115, a \u2264 b \u2192 (\u2211 k in Finset.Icc a b, k * Real.sqrt (Nat.choose b k)) \u2264 (\u2211 k in Finset.Icc a b, b * Real.sqrt (Nat.choose b k)) \u2227 (\u2211 k in Finset.Icc a b, b * Real.sqrt (Nat.choose b k)) \u2264 b * (\u2211 k in Finset.Icc a b, Real.sqrt (Nat.choose b k)) := by", "target": "\n  intro a b hab\n  have h\u2080 : \u2200 k \u2208 Finset.Icc a b, (k : \u211d) \u2264 b := by\n    intro k hk\n    simp only [Finset.mem_Icc] at hk\n    norm_cast\n    linarith\n  have h\u2081 : \u2200 k \u2208 Finset.Icc a b, Real.sqrt (Nat.choose b k) \u2265 0 := by\n    intro k hk\n    positivity\n  have h\u2082 : \u2211 k in Finset.Icc a b, k * Real.sqrt (Nat.choose b k) \u2264 \u2211 k in Finset.Icc a b, b * Real.sqrt (Nat.choose b k) := by\n    apply Finset.sum_le_sum\n    intro x hx\n    have hx' : (x : \u211d) \u2264 b := h\u2080 x hx\n    have hx'' : Real.sqrt (Nat.choose b x) \u2265 0 := h\u2081 x hx\n    nlinarith\n  have h\u2083 : \u2211 k in Finset.Icc a b, b * Real.sqrt (Nat.choose b k) \u2264 b * \u2211 k in Finset.Icc a b, Real.sqrt (Nat.choose b k) := by\n    simp_rw [Finset.mul_sum]\n    exact Finset.sum_le_sum fun x hx => by\n      nlinarith [h\u2080 x hx, h\u2081 x hx]\n  exact \u27e8h\u2082, h\u2083\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_36427_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : a + b + c = 1) (h : a ^ 2 / (b + c) + b ^ 2 / (c + a) + c ^ 2 / (a + b) \u2265 3 * (a * b + b * c + c * a) / 2) : a ^ 2 / (b + c) + b ^ 2 / (c + a) + c ^ 2 / (a + b) \u2265 3 * (a * b + b * c + c * a) / 2 \u2227 1 / (a + b) + 1 / (b + c) + 1 / (c + a) \u2265 9 / 2:= by", "target": "\n  refine' \u27e8h, _\u27e9\n  have h\u2081 : 0 < b + c := by linarith\n  have h\u2082 : 0 < c + a := by linarith\n  have h\u2083 : 0 < a + b := by linarith\n  have h\u2084 : 0 < b * c := by positivity\n  have h\u2085 : 0 < c * a := by positivity\n  have h\u2086 : 0 < a * b := by positivity\n  have h\u2087 : 0 < (b + c) * (c + a) * (a + b) := by positivity\n  have h\u2088 : 0 < (b + c) * (c + a) * (a + b) * (a + b + c) := by positivity\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087, h\u2088]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_8054 (a b c : \u211d) (hab : a \u2260 b) (hbc : b \u2260 c) (hca : c \u2260 a) : |(a + b) / (a - b)| + |(b + c) / (b - c)| + |(c + a) / (c - a)| \u2265 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_8054_plus (a b c : \u211d) (hab : a \u2260 b) (hbc : b \u2260 c) (hca : c \u2260 a) (h : a + b + c = 0) : \u2203 x y z : \u211d, x \u2260 0 \u2227 y \u2260 0 \u2227 z \u2260 0 \u2227 x + y + z = 0 \u2227 |(x + y) / (x - y)| + |(y + z) / (y - z)| + |(z + x) / (z - x)| \u2265 2 \u2228 |(x + y) / (x - y)| + |(y + z) / (y - z)| + |(z + x) / (z - x)| \u2265 2 \u2228 |(x + y) / (x - y)| + |(y + z) / (y - z)| + |(z + x) / (z - x)| \u2265 2 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_70952_plus (a b : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) : Real.sqrt (a * b) + 3 / (Real.sqrt (a^2 + 1) + Real.sqrt (b^2 + 1)) \u2264 3 + a * b:= by", "target": "\n  have h\u2080 : 0 \u2264 a * b := by positivity\n  have h\u2081 : 0 \u2264 Real.sqrt (a * b) := Real.sqrt_nonneg (a * b)\n  have h\u2082 : 0 \u2264 Real.sqrt (a ^ 2 + 1) := Real.sqrt_nonneg (a ^ 2 + 1)\n  have h\u2083 : 0 \u2264 Real.sqrt (b ^ 2 + 1) := Real.sqrt_nonneg (b ^ 2 + 1)\n  have h\u2084 : 0 \u2264 Real.sqrt (a ^ 2 + 1) * Real.sqrt (b ^ 2 + 1) := by positivity\n  have h\u2085 : Real.sqrt (a * b) \u2264 a * b + 1 := by\n    nlinarith [sq_sqrt (show 0 \u2264 a * b by positivity), sq_nonneg (a - b), sq_nonneg (a * b - 1)]\n  have h\u2086 : 3 / (Real.sqrt (a ^ 2 + 1) + Real.sqrt (b ^ 2 + 1)) \u2264 3 / 2 := by\n    rw [div_le_iff (by positivity)]\n    nlinarith [sq_sqrt (show 0 \u2264 a ^ 2 + 1 by positivity), sq_sqrt (show 0 \u2264 b ^ 2 + 1 by positivity),\n      sq_nonneg (a - b), sq_nonneg (a * b - 1)]\n  nlinarith\n  <;> try norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5778 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 3) : (a / (2 + b ^ 3) + b / (2 + c ^ 3) + c / (2 + b ^ 3)) \u2265 (1 / 6) * (5 + a * b * c) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5778_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c \u2264 3) (h : 0 \u2264 a * b * c) : a * b * c * (a + b + c) ^ 2 \u2264 3 * (a ^ 2 + b ^ 2 + c ^ 2) * (b ^ 2 + a ^ 2 + c ^ 2):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_18197_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c \u2264 1) (h : 0 \u2264 a * b + b * c + c * a) : a ^ 2 * b ^ 2 * (a + b) + b ^ 2 * c ^ 2 * (b + c) + c ^ 2 * a ^ 2 * (c + a) \u2264 4 * (a * b + b * c + c * a) * (a + b + c):= by", "target": "\n  have h1 : 0 \u2264 a * b := by positivity\n  have h2 : 0 \u2264 b * c := by positivity\n  have h3 : 0 \u2264 c * a := by positivity\n  have h4 : (a + b + c) ^ 2 \u2264 1 := by\n    nlinarith\n  nlinarith [sq_nonneg (a * b + b * c + c * a), mul_nonneg h1 h2, mul_nonneg h2 h3, mul_nonneg h3 h1]\n  <;> linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_7752 (x y z : \u211d) (hx : 1 \u2264 x \u2227 x \u2264 2) (hy : 3 \u2264 y \u2227 y \u2264 4) (hz : 5 \u2264 z \u2227 z \u2264 6) : (2560 + 1792 * Real.sqrt 7) / 9 \u2265 x*y*z*(x-y)*(y-z)*(z-x) \u2227 x*y*z*(x-y)*(y-z)*(z-x) \u2265 180 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_7752_plus (x y z : \u211d) (hx : 1 \u2264 x \u2227 x \u2264 2) (hy : 3 \u2264 y \u2227 y \u2264 4) (hz : 5 \u2264 z \u2227 z \u2264 6) : Real.sqrt 7 \u2265 1 \u2227 Real.sqrt 7 \u2265 0 \u2227 Real.sqrt 7 \u2265 Real.sqrt 3 \u2227 Real.sqrt 3 \u2265 1 \u2227 Real.sqrt 3 \u2265 0 \u2227 Real.sqrt 3 \u2265 Real.sqrt 2 \u2227 Real.sqrt 2 \u2265 1 \u2227 Real.sqrt 2 \u2265 0 \u2227 Real.sqrt 2 \u2265 Real.sqrt 1 \u2227 Real.sqrt 1 \u2265 0 \u2227 Real.sqrt 1 \u2265 1 \u2227 Real.sqrt 1 \u2265 0 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_29104_plus (a b c : \u211d) (hab : 0 \u2264 a) (hbc : 0 \u2264 b) (hca : 0 \u2264 c) (habc : a * b + b * c + c * a = 1) :  Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) * Real.sqrt (1 + c ^ 2) \u2265 1 + a * b * c := by", "target": "\n  have : 0 \u2264 a * b := by positivity\n  have : 0 \u2264 b * c := by positivity\n  have : 0 \u2264 c * a := by positivity\n  have h\u2080 : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) * Real.sqrt (1 + c ^ 2) = Real.sqrt ((1 + a ^ 2) * (1 + b ^ 2) * (1 + c ^ 2)) := by\n    rw [Real.sqrt_mul, Real.sqrt_mul] <;> positivity\n  rw [h\u2080]\n  apply le_sqrt_of_sq_le\n  nlinarith [sq_nonneg (a * b * c), sq_nonneg (a * b - c), sq_nonneg (b * c - a), sq_nonneg (c * a - b)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_2213_plus (a b c : \u211d) (h\u2080 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2081 : a + b + c = 1) : (1 - a) * (1 - b) * (1 - c) \u2265 0 \u2227 (1 - a) * (1 - b) * (1 - c) \u2265 a * b * c * (a + b + c):= by", "target": "\n  have h\u2082 : 0 \u2264 a * b := by nlinarith\n  have h\u2083 : 0 \u2264 b * c := by nlinarith\n  have h\u2084 : 0 \u2264 c * a := by nlinarith\n  have h\u2085 : 0 \u2264 a * b * c := by nlinarith\n  have h\u2086 : (1 - a) * (1 - b) * (1 - c) \u2265 0 := by\n    have h\u2087 : 0 \u2264 1 - a := by nlinarith\n    have h\u2088 : 0 \u2264 1 - b := by nlinarith\n    have h\u2089 : 0 \u2264 1 - c := by nlinarith\n    have h\u2081\u2080 : (1 - a) * (1 - b) \u2265 0 := by nlinarith\n    nlinarith\n  have h\u2087 : (1 - a) * (1 - b) * (1 - c) \u2265 a * b * c * (a + b + c) := by\n    nlinarith\n  exact \u27e8h\u2086, h\u2087\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_6965_plus (A : Fin 5 \u2192 \u211d) (hA : \u2200 i, 0 < A i) (hA_sum : \u2211 i, A i = 1) (hA_bound : \u2200 i, A i \u2264 1/4) : (\u220f i, (1 - A i)) \u2265 1/32 \u2227 (\u220f i, (1 - A i)) \u2265 1/32 \u2227 (\u220f i, (1 - A i)) \u2265 1/32 \u2227 (\u220f i, (1 - A i)) \u2265 1/32 \u2227 (\u220f i, (1 - A i)) \u2265 1/32 := by", "target": "\n  have h\u2081 : \u220f i, (1 - A i) \u2265 1/32 := by\n    have : \u220f i, (1 - A i) \u2265 \u220f i : Fin 5, (1 - 1/4) := by\n      apply Finset.prod_le_prod\n      \u00b7 intro i _\n        nlinarith [hA i, hA_bound i]\n      \u00b7 intro i _\n        nlinarith [hA i, hA_bound i]\n    simp at this\n    norm_num at this\n    linarith\n  exact \u27e8h\u2081, h\u2081, h\u2081, h\u2081, h\u2081\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_38474_plus (a b c d : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hd : 0 \u2264 d) (habc : a + b + c + d = 1) (h : a * b + b * c + c * d + d * a \u2264 1 / 2) : a ^ 2 * b ^ 2 * c ^ 2 * d ^ 2 \u2264 (1 / 2) ^ 4:= by", "target": "\n  have h\u2081 : 0 \u2264 a * b := by positivity\n  have h\u2082 : 0 \u2264 b * c := by positivity\n  have h\u2083 : 0 \u2264 c * d := by positivity\n  have h\u2084 : 0 \u2264 d * a := by positivity\n  have h\u2085 : (a + b + c + d) ^ 2 = 1 := by simp [habc]\n  have h\u2086 : 0 \u2264 a * b * c * d := by positivity\n  have h\u2087 : a * b * c * d \u2264 1 / 2 := by\n    nlinarith [sq_nonneg (a - b + c - d), sq_nonneg (a + b - c - d), sq_nonneg (a - b - c + d),\n      sq_nonneg (a + b + c + d)]\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_8619 (a : \u2115 \u2192 \u211d) (a_n : \u2200 n, a n = 1 / n - 1 / (n + 1)) : \u2211' n : \u2115, a n - a (n + 1) = 1 / 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_8619_plus (n : \u2115) (hn : 0 < n) : (\u2211' i : \u2115, 1 / (i ^ 2 + 1) - 1 / (n ^ 2 + 1)) \u2264 1:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_11424_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 1) :  (1 - x ^ 2 - y ^ 2 - z ^ 2) ^ 2 \u2265 (x * y + x * z + y * z) ^ 2 \u2227 (x * y + x * z + y * z) ^ 2 \u2265 x ^ 2 * y ^ 2 + x ^ 2 * z ^ 2 + y ^ 2 * z ^ 2:= by", "target": "\n  have h1 : (x + y + z) ^ 2 = 1 := by simp [h]\n  have h2 : 0 \u2264 x * y + x * z + y * z := by\n    nlinarith\n  have h3 : (1 - x ^ 2 - y ^ 2 - z ^ 2) ^ 2 \u2265 (x * y + x * z + y * z) ^ 2 := by\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n      mul_nonneg hx hy, mul_nonneg hx hz, mul_nonneg hy hz]\n  have h4 : (x * y + x * z + y * z) ^ 2 \u2265 x ^ 2 * y ^ 2 + x ^ 2 * z ^ 2 + y ^ 2 * z ^ 2 := by\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n      mul_nonneg hx hy, mul_nonneg hx hz, mul_nonneg hy hz]\n  exact \u27e8h3, h4\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4998 (a b c : \u211d) (ha : a ^ 4 + b ^ 4 + c ^ 4 = 3) : (a * b) ^ 5 + (b * c) ^ 5 + (c * a) ^ 5 \u2264 3 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4998_plus (a b c : \u211d) (habc : a * b * c = 1) (h : a ^ 2 + b ^ 2 + c ^ 2 = 3) : a ^ 4 + b ^ 4 + c ^ 4 \u2264 40 \u2227 a ^ 6 + b ^ 6 + c ^ 6 \u2264 270 \u2227 a ^ 8 + b ^ 8 + c ^ 8 \u2264 2187:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_4274 (a b c : \u211d) (ha : a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 3) : a ^ 3 + b ^ 2 + c ^ 3 + a * b ^ 2 * c \u2265 4 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_4274_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 a + b + c = 3) (h : 0 \u2264 a * b \u2227 0 \u2264 a * c \u2227 0 \u2264 b * c) : a ^ 2 * (b + c) ^ 2 + b ^ 2 * (a + c) ^ 2 + c ^ 2 * (a + b) ^ 2 + 3 * a * b * c * (a + b + c) \u2265 a ^ 2 * b ^ 2 * c + a ^ 2 * b * c ^ 2 + a * b ^ 2 * c ^ 2 + 3 * a * b * c * (a * b + a * c + b * c):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_37531_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : a * b + b * c + c * a \u2264 (a ^ 2 + b ^ 2 + c ^ 2) \u2228 (Real.sqrt (a * b) + Real.sqrt (b * c) + Real.sqrt (c * a)) \u2264 Real.sqrt (2 * (a ^ 2 + b ^ 2 + c ^ 2)):= by", "target": "\n  apply or_iff_not_imp_right.2\n  intro h\n  have h1 : 0 \u2264 (a - b) ^ 2 + (b - c) ^ 2 + (c - a) ^ 2 := by positivity\n  have h2 : 0 \u2264 Real.sqrt (2 * (a ^ 2 + b ^ 2 + c ^ 2)) := by positivity\n  nlinarith [sq_sqrt (by positivity : 0 \u2264 2 * (a ^ 2 + b ^ 2 + c ^ 2)),\n    sq_sqrt (by positivity : 0 \u2264 a * b), sq_sqrt (by positivity : 0 \u2264 b * c), sq_sqrt (by positivity : 0 \u2264 c * a)]\n  <;> linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_3705_plus (a b c : \u211d)\n    (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c)\n    (h\u2081 : a + b + c = 1)\n    (h\u2082 : a * b + b * c + c * a \u2264 1/3)\n    (h\u2083 : 0 < a * b * c) :\n    Real.sqrt (a * b) + Real.sqrt (b * c) + Real.sqrt (c * a) \u2265 3 * (a * b * c) := by", "target": "\n  cases' h\u2080 with ha hb\n  cases' hb with hb hc\n  have h\u2084 : 0 < a * b := by positivity\n  have h\u2085 : 0 < b * c := by positivity\n  have h\u2086 : 0 < c * a := by positivity\n  have h\u2087 : a * b + b * c + c * a \u2264 1 / 3 := h\u2082\n  have h\u2088 : 0 < a * b * c := h\u2083\n  have h\u2089 : Real.sqrt (a * b) \u2265 a * b := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2081\u2080 : Real.sqrt (b * c) \u2265 b * c := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2081\u2081 : Real.sqrt (c * a) \u2265 c * a := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  nlinarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_53801_plus (n : \u2115) (hn : 1 < n) : (\u2203 a b : \u211d, \u2200 x, (\u2211 k in Finset.range n, (1 : \u211d) / (k + 1)) * x = a * x + b) \u2194 \u2203 a b : \u211d, \u2200 x, (\u2211 k in Finset.range n, (1 : \u211d) / (k + 1)) * x = a * x + b \u2227 a = (\u2211 k in Finset.range n, (1 : \u211d) / (k + 1)) \u2227 b = 0:= by", "target": "\n  constructor\n  next =>\n    rintro \u27e8a, b, h\u27e9\n    refine \u27e8(\u2211 k in Finset.range n, (1 : \u211d) / (k + 1)), 0, ?_\u27e9\n    intro x\n    simp_all\n  next =>\n    rintro \u27e8a, b, h\u27e9\n    refine \u27e8a, b, ?_\u27e9\n    intro x\n    simp_all"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_25898_plus (x : \u211d) (hx : 0 \u2264 x) : 1 + x \u2264 exp x + x ^ 2  := by", "target": "\n  have h\u2080 : 0 \u2264 x ^ 2 := sq_nonneg x\n  have h\u2081 : 0 \u2264 exp x := exp_pos x |>.le\n  nlinarith [add_one_le_exp x, sq_nonneg (x - 1)]\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_5629 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : (1 / (1 + 2 * a ^ 3 * b) + 1 / (1 + 2 * b ^ 3 * a) + 1 / (1 + 2 * c ^ 3 * a) \u2265 (a + b + c) / (a ^ 2 + b ^ 2 + c ^ 2)) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_5629_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b * c \u2264 1) (h : 0 \u2264 a * b + b * c + c * a) : a ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) + b ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) + c ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) \u2264 1 + (a * b + b * c + c * a) / (a ^ 2 + b ^ 2 + c ^ 2):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_34188_plus (a b c : \u211d) (hab : 0 \u2264 a) (hbc : 0 \u2264 b) (hca : 0 \u2264 c) (h : a + b + c = 2) : a ^ 2 / (2 + a) + b ^ 2 / (2 + b) + c ^ 2 / (2 + c) \u2265 (a * b + b * c + c * a - 2 * a * b * c) / 4:= by", "target": "\n  have h\u2080 : 0 \u2264 a * b := by positivity\n  have h\u2081 : 0 \u2264 b * c := by positivity\n  have h\u2082 : 0 \u2264 c * a := by positivity\n  have h\u2083 : 0 \u2264 a * b * c := by positivity\n  have h\u2084 : a ^ 2 / (2 + a) \u2265 a ^ 2 / 4 := by\n    gcongr\n    linarith\n  have h\u2085 : b ^ 2 / (2 + b) \u2265 b ^ 2 / 4 := by\n    gcongr\n    linarith\n  have h\u2086 : c ^ 2 / (2 + c) \u2265 c ^ 2 / 4 := by\n    gcongr\n    linarith\n  have h\u2087 : a ^ 2 / 4 + b ^ 2 / 4 + c ^ 2 / 4 \u2265 (a * b + b * c + c * a - 2 * a * b * c) / 4 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  nlinarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_62826_plus (n : \u2115) (a : \u2115 \u2192 \u211d) (a1 : a 0 \u2265 2) (a_rec : \u2200 n, a (n + 1) = a n * Real.sqrt ((a n ^ 3 + 2) / (2 * (a n ^ 3 + 1)))) (hn : 1 < n) : (\u2203 k : \u211d, 0 < k \u2227 k < 1 \u2227 (1 - k) ^ (n - 1) \u2264 1 / (n - 1)) \u2228 (\u2203 k : \u211d, 1 < k \u2227 (1 - 1 / k) ^ (n - 1) \u2264 1 / (n - 1)) \u2228 (\u2203 k : \u211d, k \u2264 1 \u2227 (1 - 1 / k) ^ (n - 1) \u2264 1 / (n - 1)):= by", "target": "\n  right\n  right\n  refine' \u27e81, by norm_num, _\u27e9\n  cases n with\n  | zero => exfalso; linarith\n  | succ n =>\n    cases n with\n    | zero => exfalso; linarith\n    | succ n =>\n      simp_all [Nat.div_eq_of_lt]\n      <;> norm_num\n      <;> apply le_of_sub_nonneg\n      <;> field_simp\n      <;> ring_nf\n      <;> positivity"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_36074_plus (x y z : \u211d) (h\u2080 : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z) (h\u2081 : x + y + z = 1) (h\u2082 : x * y + y * z + z * x = 1 / 3) : (x - 1 / 3) ^ 2 * (y - 1 / 3) ^ 2 * (z - 1 / 3) ^ 2 \u2265 0 \u2227 (x + y + z) ^ 2 * (y + z + x) ^ 2 * (z + x + y) ^ 2 \u2265 0:= by", "target": "\n  constructor <;> positivity\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_8628_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a + b + c = 1) (h\u2083 : a * b + b * c + c * a \u2264 1) : 8 * (a ^ 4 + b ^ 4 + c ^ 4) \u2265 3 * (a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2) * (c ^ 2 + a ^ 2) \u2227 3 * (a ^ 2 * b * c + b ^ 2 * a * c + c ^ 2 * a * b) \u2264 3 * (a + b + c) * (b + c + a) * (c + a + b):= by", "target": "\n  have h\u2084 : (a + b + c) ^ 2 = 1 := by simp [h\u2082]\n  have h\u2085 : 0 \u2264 a * b := by nlinarith\n  have h\u2086 : 0 \u2264 b * c := by nlinarith\n  have h\u2087 : 0 \u2264 c * a := by nlinarith\n  have h\u2088 : (a + b + c) ^ 2 = 1 := by simp [h\u2082]\n  have h\u2089 : 8 * (a ^ 4 + b ^ 4 + c ^ 4) \u2265 3 * (a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2) * (c ^ 2 + a ^ 2) := by\n    nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n      mul_self_nonneg (a ^ 2 + b ^ 2 - c ^ 2), mul_self_nonneg (b ^ 2 + c ^ 2 - a ^ 2),\n      mul_self_nonneg (c ^ 2 + a ^ 2 - b ^ 2)]\n  have h\u2081\u2080 : 3 * (a ^ 2 * b * c + b ^ 2 * a * c + c ^ 2 * a * b) \u2264 3 * (a + b + c) * (b + c + a) * (c + a + b) := by\n    nlinarith [mul_nonneg h\u2085 h\u2086, mul_nonneg h\u2086 h\u2087, mul_nonneg h\u2087 h\u2085,\n      mul_nonneg (sq_nonneg a) (sq_nonneg b), mul_nonneg (sq_nonneg b) (sq_nonneg c),\n      mul_nonneg (sq_nonneg c) (sq_nonneg a)]\n  exact \u27e8h\u2089, h\u2081\u2080\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_38674_plus  (x y z : \u2124) (h\u2080 : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z) :\n  (x^2 + 1) * (y^2 + 1) * (z^2 + 1) \u2265 2 * x * y * z \u2227 (x^2 + 1) * (y^2 + 1) * (z^2 + 1) \u2265 x * y + y * z + z * x:= by", "target": "\n  have h\u2081 : 0 \u2264 x * y := by nlinarith\n  have h\u2082 : 0 \u2264 y * z := by nlinarith\n  have h\u2083 : 0 \u2264 z * x := by nlinarith\n  have h\u2084 : 0 \u2264 x * y * z := by nlinarith\n  have h\u2085 : 0 \u2264 (x * y) * (y * z) := by nlinarith\n  have h\u2086 : 0 \u2264 (y * z) * (z * x) := by nlinarith\n  have h\u2087 : 0 \u2264 (z * x) * (x * y) := by nlinarith\n  constructor <;> nlinarith [sq_nonneg (x * y * z), sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y)]\n  <;> simp only [sq]\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_8252_plus (a b c : \u211d) (h\u2080 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2081 : a + b + c = 1) : (1 - a ^ 2 - b ^ 2 - c ^ 2) ^ 2 \u2265 (a * b + b * c + c * a) ^ 2 := by", "target": "\n  have h\u2082 : (a + b + c) ^ 2 = 1 := by simp [h\u2081]\n  nlinarith [mul_nonneg h\u2080.1 h\u2080.2.1, mul_nonneg h\u2080.2.1 h\u2080.2.2, mul_nonneg h\u2080.1 h\u2080.2.2,\n    mul_nonneg (sq_nonneg (a - b)) (sq_nonneg (b - c)), mul_nonneg (sq_nonneg (b - c)) (sq_nonneg (c - a)),\n    mul_nonneg (sq_nonneg (c - a)) (sq_nonneg (a - b))]\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_9146_plus (z : \u2102) (h\u2081 : z ^ 3 = 1) (h\u2082 : z \u2260 1) : z ^ 2 + z + 1 = 0 \u2228 z ^ 2 - z - 1 = 0 \u2228 z ^ 2 = -2 * z \u2228 z ^ 2 = 2 * z \u2228 z = 0 \u2228 z = 1 \u2228 z = -1:= by", "target": "\n  have h\u2083 : z ^ 3 - 1 = 0 := by rw [h\u2081]; simp\n  have h\u2084 : (z - 1) * (z ^ 2 + z + 1) = 0 := by ring_nf; linear_combination h\u2083\n  have h\u2085 : z - 1 \u2260 0 := by simp [sub_eq_zero, h\u2082]\n  have h\u2086 : z ^ 2 + z + 1 = 0 := by\n    apply mul_left_cancel\u2080 h\u2085\n    rw [\u2190 sub_eq_zero]\n    linear_combination h\u2084\n  exact Or.inl h\u2086"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_33414_plus : \u2200 n : \u2115, 1/(n*(n+1)) = 1/n - 1/(n+1) \u2228 1/(n*(n+1)) = 0:= by", "target": "\n  intro n\n  cases n with\n  | zero => simp\n  | succ n =>\n    rw [Nat.div_eq_of_lt] <;> norm_num <;>\n    ring_nf <;>\n    omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_44770_plus (n : \u2115) (hn : 0 < n) : (\u2203 k : \u2115, n \u2264 2 ^ k) \u2228 (\u2203 k : \u2115, 2 ^ k \u2264 n)  := by", "target": "\n  by_cases h : n \u2264 2 ^ n\n  \u00b7 left\n    exact \u27e8n, h\u27e9\n  \u00b7 right\n    push_neg at h\n    exact \u27e8n, by linarith\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2007 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a + (ab)^(1/2) + (abc)^(1/3)) / 3 \u2264 (a * (a + b) / 2 * (a + b + c) / 3)^(1/3) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2007_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : a ^ 2 / (b + c) ^ 2 \u2264 1 \u2228 b ^ 2 / (a + c) ^ 2 \u2264 1 \u2228 c ^ 2 / (a + b) ^ 2 \u2264 1 \u2192 a ^ 2 / (b + c) ^ 2 + b ^ 2 / (a + c) ^ 2 + c ^ 2 / (a + b) ^ 2 \u2264 3 * (a ^ 2 / (b + c) ^ 2 + b ^ 2 / (a + c) ^ 2 + c ^ 2 / (a + b) ^ 2):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_14650_plus (a b c d : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 0 \u2264 d) (h\u2082 : a + b + c + d = 1) (h\u2083 : a^2 + b^2 + c^2 + d^2 \u2264 1) :\n    a * (1 - a) ^ 2 + b * (1 - b) ^ 2 + c * (1 - c) ^ 2 + d * (1 - d) ^ 2 \u2264 1:= by", "target": "\n  have h\u2084 : a * (1 - a) ^ 2 \u2264 a := by\n    nlinarith [sq_nonneg (a - 1 / 2)]\n  have h\u2085 : b * (1 - b) ^ 2 \u2264 b := by\n    nlinarith [sq_nonneg (b - 1 / 2)]\n  have h\u2086 : c * (1 - c) ^ 2 \u2264 c := by\n    nlinarith [sq_nonneg (c - 1 / 2)]\n  have h\u2087 : d * (1 - d) ^ 2 \u2264 d := by\n    nlinarith [sq_nonneg (d - 1 / 2)]\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_27306_plus : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 a * b * c > 0 \u2227 (\u2203 x y z : \u211d, x * y * z > 0 \u2227 x + y + z = a + b + c \u2227 (x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2) \u2265 3) \u2228 (\u2203 x y z : \u211d, x * y * z > 0 \u2227 x + y + z = a + b + c \u2227 (x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2) \u2265 3 \u2227 \u2203 x y z : \u211d, x * y * z > 0 \u2227 x + y + z = a + b + c \u2227 (x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2) \u2265 3):= by", "target": "\n  rintro a b c \u27e8ha : 0 < a, hb : 0 < b, hc : 0 < c\u27e9\n  have : a * b * c > 0 := by positivity\n  refine' Or.inl \u27e8this, \u27e8a, b, c, by positivity, by linarith, _\u27e9\u27e9\n  have : a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2 \u2265 3 := by\n    have : 0 < b ^ 2 := by positivity\n    have : 0 < c ^ 2 := by positivity\n    have : 0 < a ^ 2 := by positivity\n    have : 0 < a ^ 2 * b ^ 2 := by positivity\n    have : 0 < b ^ 2 * c ^ 2 := by positivity\n    have : 0 < c ^ 2 * a ^ 2 := by positivity\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2)]\n  linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3162 (x y z : \u211d) (hx : x > 0 \u2227 y > 0 \u2227 z > 0) (hx1 : x + y + z = 3) : (x^2 + yz) / Real.sqrt (2 * (x^2 * y + x^2 * z)) + (y^2 + zx) / Real.sqrt (2 * (y^2 * z + y^2 * x)) + (z^2 + xy) / Real.sqrt (2 * (z^2 * x + z^2 * y)) \u2265 3 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3162_plus (x y z : \u211d) (hx : 0 < x \u2227 0 < y \u2227 0 < z) (hx1 : x + y + z = 3) (hxy : 0 < x * y) (hxz : 0 < x * z) (hyz : 0 < y * z) : (x^2 + yz) / Real.sqrt (2 * (x^2 * y + x^2 * z)) + (y^2 + zx) / Real.sqrt (2 * (y^2 * z + y^2 * x)) + (z^2 + xy) / Real.sqrt (2 * (z^2 * x + z^2 * y)) \u2265 3 \u2228 (x * y) * (x * z) * (y * z) \u2264 1:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_43233_plus (a b c d : \u211d) (hab : a + b + c + d = 1) (h : a * b + a * c + a * d + b * c + b * d + c * d \u2264 1) :  a ^ 2 / (1 + b ^ 2) + b ^ 2 / (1 + c ^ 2) + c ^ 2 / (1 + d ^ 2) + d ^ 2 / (1 + a ^ 2) \u2265 a * b + b * c + c * d + d * a - 1:= by", "target": "\n  have : a ^ 2 / (1 + b ^ 2) \u2265 0 := by positivity\n  have : b ^ 2 / (1 + c ^ 2) \u2265 0 := by positivity\n  have : c ^ 2 / (1 + d ^ 2) \u2265 0 := by positivity\n  have : d ^ 2 / (1 + a ^ 2) \u2265 0 := by positivity\n  have : a * b + b * c + c * d + d * a \u2264 1 := by\n    nlinarith [sq_nonneg (a - b + c - d)]\n  nlinarith [sq_nonneg (a - b + c - d)]\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_6531 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 3) : (1 / (a^3 + b^3 + 3) + 1 / (b^3 + c^3 + 3) + 1 / (c^3 + a^3 + 3) \u2264 3 / 5 \u2227 1 / (a^2 + b^2 + 2) + 1 / (b^2 + c^2 + 2) + 1 / (c^2 + a^2 + 2) \u2264 3 / 4 \u2227 a / (a^2 + b^2 + 2) + b / (b^2 + c^2 + 2) + c / (c^2 + a^2 + 2) \u2264 3 / 4 \u2227 ab / (b^2 + c^2 + 2) + bc / (c^2 + a^2 + 2) + ca / (a^2 + b^2 + 2) \u2264 3 / 4 \u2227 ab / (c^2 + a^2 + b + 1) + bc / (a^2 + b^2 + c + 1) + ca / (b^2 + c^2 + a + 1) \u2264 3 / 4 \u2227 1 / (a^2 + b^2 + c + 1) + 1 / (b^2 + c^2 + a + 1) + 1 / (c^2 + a^2 + b + 1) \u2264 3 / 4) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_6531_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c \u2264 3) (h : 0 \u2264 a * b) (h' : 0 \u2264 a * c) (h'' : 0 \u2264 b * c) (h''' : 0 \u2264 a * b * c) : 3 * (a * b * c) ^ 2 \u2264 (a + b + c) ^ 2 * (a * b + a * c + b * c) \u2227 3 * (a * b * c) \u2264 (a + b + c) * (a * b + a * c + b * c):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1481 {a b c : \u211d} (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a / (b + c) + (Real.sqrt (b * c) / a) + 1 / 2) * (b / (c + a) + (Real.sqrt (c * a) / b) + 1 / 2) * (c / (a + b) + (Real.sqrt (a * b) / c) + 1 / 2) \u2265 8 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1481_plus : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 a * b * c > 0 \u2227 (\u2203 x y z : \u211d, x * y * z > 0 \u2227 x + y + z = a + b + c \u2227 (x / (y + z) + (Real.sqrt (y * z) / x) + 1 / 2) * (y / (x + z) + (Real.sqrt (x * z) / y) + 1 / 2) * (z / (x + y) + (Real.sqrt (x * y) / z) + 1 / 2) \u2265 8 / 9):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_53559_plus (x y : \u2124) (h\u2081 : 0 < x) (h\u2082 : 0 < y) : (x^3 + 21*y^2 + 5 \u2261 x^3 - 2 [ZMOD 7]) \u2228 (x^3 + 21*y^2 + 5 \u2261 x^3 - 2 [ZMOD 7]):= by", "target": "\n  by_cases h\u2083 : x^3 + 21*y^2 + 5 \u2261 x^3 - 2 [ZMOD 7]\n  exact Or.inl h\u2083\n  apply Or.inr\n  simp only [Int.ModEq, Int.emod_eq_of_lt] at *\n  omega\n  <;> norm_num\n  <;> omega\n  <;> norm_num\n  <;> omega\n  <;> norm_num\n  <;> omega\n  <;> norm_num\n  <;> omega\n  <;> norm_num\n  <;> omega\n  <;> norm_num\n  <;> omega\n  <;> norm_num\n  <;> omega"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_43947_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) : (1 / (a + b + c) ^ 2) * (a ^ 2 * b ^ 2 * c ^ 2) \u2264 (a * b) ^ 2 + (b * c) ^ 2 + (c * a) ^ 2  := by", "target": "\n  simp only [habc, one_pow, mul_one, add_assoc]\n  have h1 : 0 \u2264 a * b := by positivity\n  have h2 : 0 \u2264 b * c := by positivity\n  have h3 : 0 \u2264 c * a := by positivity\n  have h4 : 0 \u2264 a * b * (b * c) := by positivity\n  have h5 : 0 \u2264 a * b * (c * a) := by positivity\n  have h6 : 0 \u2264 b * c * (c * a) := by positivity\n  have h7 : 0 \u2264 a * b * c := by positivity\n  have h8 : 0 \u2264 a * b * c * (a * b) := by positivity\n  have h9 : 0 \u2264 a * b * c * (b * c) := by positivity\n  have h10 : 0 \u2264 a * b * c * (c * a) := by positivity\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_651_plus (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) : Real.sqrt (3 * (3 + x * y + y * z + z * x)) \u2265 Real.sqrt (1 + x * y) + Real.sqrt (1 + y * z) + Real.sqrt (1 + z * x) - 3:= by", "target": "\n  have h\u2081 : Real.sqrt (3 * (3 + x * y + y * z + z * x)) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2082 : Real.sqrt (1 + x * y) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2083 : Real.sqrt (1 + y * z) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2084 : Real.sqrt (1 + z * x) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2085 : Real.sqrt (1 + x * y) + Real.sqrt (1 + y * z) + Real.sqrt (1 + z * x) \u2264 Real.sqrt (3 * (3 + x * y + y * z + z * x)) := by\n    apply le_sqrt_of_sq_le\n    nlinarith [sq_sqrt (show 0 \u2264 1 + x * y from by nlinarith),\n      sq_sqrt (show 0 \u2264 1 + y * z from by nlinarith),\n      sq_sqrt (show 0 \u2264 1 + z * x from by nlinarith),\n      sq_nonneg (Real.sqrt (1 + x * y) - Real.sqrt (1 + y * z)),\n      sq_nonneg (Real.sqrt (1 + y * z) - Real.sqrt (1 + z * x)),\n      sq_nonneg (Real.sqrt (1 + z * x) - Real.sqrt (1 + x * y))]\n  linarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_8125 (f : \u211d \u2192 \u211d) (x : \u211d) (h : f = fun (x : \u211d) => x - 1) : f x = x - 1 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_8125_plus (n : \u2115) (hn : 1 < n) : (\u2203 x y : \u211d, 1 < x \u2227 1 < y \u2227 x \u2223 y \u2227 y \u2223 x \u2227 x \u2260 y) \u2228 \u2200 x y : \u211d, 1 < x \u2227 1 < y \u2192 (x \u2223 y \u2192 y \u2223 x \u2192 x = y):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_7566 (n : \u2115) (hn : 3 \u2264 n) : (4:\u211d)^n * n^((Real.sqrt n) : \u211d) \u2264 9^n := by\n<hard theorem>", "target": "\ntheorem leanworkbook_7566_plus (n : \u2115) (hn : 3 \u2264 n) : (4:\u211d)^n * n^((Real.sqrt n) : \u211d) \u2264 9^n \u2228 \u2203 z : \u2115, z \u2264 n \u2227 1 \u2264 z \u2227 (4:\u211d)^n * n^((Real.sqrt n) : \u211d) > 9^n:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_27339_plus (a b c : \u211d) (hab : 0 \u2264 a) (hbc : 0 \u2264 b) (hca : 0 \u2264 c) (habc : a + b + c = 1) : (1 - a) * (1 - b) * (1 - c) \u2265 8 * (Real.sqrt a - 1) * (Real.sqrt b - 1) * (Real.sqrt c - 1):= by", "target": "\n  have h\u2080 : 0 \u2264 a * b := by positivity\n  have h\u2081 : 0 \u2264 b * c := by positivity\n  have h\u2082 : 0 \u2264 c * a := by positivity\n  have h\u2083 : 0 \u2264 a * b * c := by positivity\n  have h\u2084 : Real.sqrt a \u2264 1 := by\n    nlinarith [sq_sqrt (show 0 \u2264 a from hab), habc]\n  have h\u2085 : Real.sqrt b \u2264 1 := by\n    nlinarith [sq_sqrt (show 0 \u2264 b from hbc), habc]\n  have h\u2086 : Real.sqrt c \u2264 1 := by\n    nlinarith [sq_sqrt (show 0 \u2264 c from hca), habc]\n  have h\u2087 : Real.sqrt a - 1 \u2264 0 := by\n    nlinarith [h\u2084]\n  have h\u2088 : Real.sqrt b - 1 \u2264 0 := by\n    nlinarith [h\u2085]\n  have h\u2089 : Real.sqrt c - 1 \u2264 0 := by\n    nlinarith [h\u2086]\n  have h\u2081\u2080 : (Real.sqrt a - 1) * (Real.sqrt b - 1) \u2265 0 := by\n    nlinarith [h\u2087, h\u2088]\n  have h\u2081\u2081 : (Real.sqrt a - 1) * (Real.sqrt b - 1) * (Real.sqrt c - 1) \u2264 0 := by\n    nlinarith [h\u2089, h\u2081\u2080]\n  have h\u2081\u2082 : (1 - a) * (1 - b) * (1 - c) \u2265 0 := by\n    apply mul_nonneg\n    all_goals nlinarith\n  nlinarith [h\u2081\u2081, h\u2081\u2082]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_10141_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c \u2264 3) (h : 0 \u2264 a * b * c) : a ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) + b ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) + c ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) \u2264 3 / 2 \u2227 a * b / (a + b) + b * c / (b + c) + c * a / (c + a) \u2264 3 / 2 * (a + b + c):= by", "target": "\n  have h\u2081 : a ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) + b ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) + c ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) \u2264 3 / 2 := by\n    have : a ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) + b ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) + c ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) = (a ^ 2 + b ^ 2 + c ^ 2) / (a ^ 2 + b ^ 2 + c ^ 2) := by\n      field_simp [hab, hb, hc, habc, h]\n    rw [this]\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  have h\u2082 : a * b / (a + b) + b * c / (b + c) + c * a / (c + a) \u2264 3 / 2 * (a + b + c) := by\n    have : a * b / (a + b) \u2264 (a + b) / 4 := by\n      apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (a - b)]\n    have : b * c / (b + c) \u2264 (b + c) / 4 := by\n      apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (b - c)]\n    have : c * a / (c + a) \u2264 (c + a) / 4 := by\n      apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (c - a)]\n    nlinarith\n  exact \u27e8h\u2081, h\u2082\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_45982_plus (a b c : \u211d) (h\u2081 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2082 : a + b + c = 3)  (h\u2083 : a * b + b * c + c * a = 3 * (a * b * c)) : a ^ 2 * b + b ^ 2 * c + c ^ 2 * a \u2264 3 * (a ^ 2 * b + b ^ 2 * c + c ^ 2 * a) \u2227 5 * (a ^ 3 + b ^ 3 + c ^ 3) + 3 * a * b * c \u2265 3 * (a ^ 2 * b + b ^ 2 * c + c ^ 2 * a):= by", "target": "\n  have h\u2084 : 0 \u2264 a * b := by nlinarith\n  have h\u2085 : 0 \u2264 b * c := by nlinarith\n  have h\u2086 : 0 \u2264 c * a := by nlinarith\n  have h\u2087 : 0 \u2264 a * b * c := by nlinarith\n  constructor <;> nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_21638_plus (A : Fin 5 \u2192 \u211d) (h\u2080 : \u2200 i, 0 \u2264 A i) (h\u2081 : \u2211 i, A i = 10) (h\u2082 : \u2200 i, A i \u2264 3) : \u2211 i, A i ^ 2 \u2264 30 := by", "target": "\n  have : \u2200 i, A i ^ 2 \u2264 3 * A i := by\n    intro i\n    have h\u2083 : 0 \u2264 A i := h\u2080 i\n    have h\u2084 : A i \u2264 3 := h\u2082 i\n    nlinarith\n  calc\n    (\u2211 i, A i ^ 2) \u2264 \u2211 i, 3 * A i := by\n      apply Finset.sum_le_sum\n      intro x hx\n      exact this x\n    _ = 3 * \u2211 i, A i := by\n      simp [Finset.mul_sum]\n    _ = 3 * 10 := by rw [h\u2081]\n    _ = 30 := by norm_num"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_42889_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 3) (h\u2081 : a * b * c \u2264 1) : a ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) + b ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) + c ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) \u2264 1 \u2228 (1 / (2 * a ^ 2 - a + 1) + 1 / (2 * b ^ 2 - b + 1) + 1 / (2 * c ^ 2 - c + 1)) \u2265 3 / 2  := by", "target": "\n  have : a ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) + b ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) + c ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) \u2264 1 := by\n    have : (a ^ 2 + b ^ 2 + c ^ 2) \u2265 3 * (a * b * c) := by\n      nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c), sq_nonneg (a + b + c)]\n    field_simp [hab.1, hab.2.1, hab.2.2]\n    apply div_le_one_of_le\n    nlinarith\n    nlinarith\n  apply Or.inl\n  exact this"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_533_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) : \u2203 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 1 / (a + 2 * b) * (a + 2 * c) + 1 / (b + 2 * c) * (b + 2 * a) + 1 / (c + 2 * a) * (c + 2 * b) \u2264 1 / (a * b + b * c + c * a) \u2227 a * b * c \u2264 1:= by", "target": "\n  use 1 / 3, 1 / 3, 1 / 3\n  constructor\n  <;> norm_num\n  <;> ring_nf\n  <;> norm_num\n  <;> apply le_of_sub_nonneg\n  <;> field_simp\n  <;> ring_nf\n  <;> norm_num\n  <;> positivity"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_32796_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b + b * c + c * a = 1) : a ^ 2 + b ^ 2 + c ^ 2 + (a * b + b * c + c * a) ^ 2 \u2265 2 * (a * b) * (b * c) * (c * a):= by", "target": "\n  have h\u2081 : 0 \u2264 a * b := by positivity\n  have h\u2082 : 0 \u2264 b * c := by positivity\n  have h\u2083 : 0 \u2264 c * a := by positivity\n  have h\u2084 : 0 \u2264 a * b * (b * c) := by positivity\n  have h\u2085 : 0 \u2264 a * b * (c * a) := by positivity\n  have h\u2086 : 0 \u2264 b * c * (c * a) := by positivity\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> assumption\n  <;> simp_all only [add_assoc, add_left_comm, add_comm]\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_6067 (x : \u211d) (h\u2080 : x + 1/x = Real.sqrt 29) : x^2 - 2 + 1/(x^2) = 25 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_6067_plus (x : \u211d) (h\u2080 : x + 1/x = Real.sqrt 29) : x^2 - 2 + 1/(x^2) \u2265 0 \u2228 \u2203 a : \u211d, a^2 \u2265 4 \u2227 (x^2 - 2 + 1/(x^2)) < a^2:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_35323_plus : \u2200 p : \u2115, p.Prime \u2227 (p \u2261 1 [ZMOD 3] \u2228 p \u2261 2 [ZMOD 3]) \u2192 3 \u2223 p^2 - 1 := by", "target": "\n  rintro p \u27e8hp, h1 | h2\u27e9\n  all_goals simp [Int.ModEq] at *\n  all_goals\n    have h : p^2 % 3 = 1 := by\n      have h : p % 3 = 1 \u2228 p % 3 = 2 := by omega\n      rcases h with (h | h) <;> simp [h, Nat.pow_succ, Nat.mul_mod, Nat.add_mod]\n    omega"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_19229_plus (a b : \u211d) (h\u2081 : 0 < a \u2227 0 < b) (h\u2082 : a * Real.sqrt (1 - b ^ 2) + b * Real.sqrt (1 - a ^ 2) = 1) : a * b * (a * Real.sqrt (1 - b ^ 2) + b * Real.sqrt (1 - a ^ 2)) \u2264 a * b * 1:= by", "target": "\n  nlinarith [sq_nonneg (a - b), Real.sqrt_nonneg (1 - a ^ 2), Real.sqrt_nonneg (1 - b ^ 2),\n    mul_nonneg (le_of_lt h\u2081.1) (le_of_lt h\u2081.2),\n    mul_nonneg (sq_nonneg a) (le_of_lt h\u2081.2),\n    mul_nonneg (sq_nonneg b) (le_of_lt h\u2081.1)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_4085_plus : \u2200 a b c d : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 d \u2265 0 \u2192 (\u2203 x y : \u211d, x \u2265 0 \u2227 y \u2265 0 \u2227 (a + b) * (a + c) * (a + d) * (b + c) * (b + d) * (c + d) \u2265 4 * a * b * c * d * (x + y) ^ 2 \u2227 x \u2264 a + b + c + d \u2227 y \u2264 a + b + c + d):= by", "target": "\n  rintro a b c d \u27e8ha, hb, hc, hd\u27e9\n  refine' \u27e80, 0, by norm_num, by norm_num, _, by linarith, by linarith\u27e9\n  refine' le_of_sub_nonneg _\n  ring_nf\n  positivity"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_2099_plus (A : Fin 5 \u2192 \u211d) (h\u2081 : \u2200 i, 0 \u2264 A i) (h\u2082 : \u2211 i, A i = 1) (h\u2083 : \u2200 i, A i \u2264 1) : \u2211 i, (1 - A i) \u2264 5 - 1:= by", "target": "\n  have h\u2084 : \u2211 i, (1 - A i) \u2264 \u2211 i : Fin 5, 1 := by\n    apply Finset.sum_le_sum\n    intro i _\n    have h\u2085 : 0 \u2264 A i := h\u2081 i\n    have h\u2086 : A i \u2264 1 := h\u2083 i\n    linarith\n  simp_all"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_12516_plus (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a * b + b * c + c * a \u2264 1) : a * b * (1 - a * b) \u2265 0 \u2227 b * c * (1 - b * c) \u2265 0 \u2227 c * a * (1 - c * a) \u2265 0 \u2227 Real.sqrt (4 - 3 * a * b) \u2265 0 \u2227 Real.sqrt (4 - 3 * b * c) \u2265 0 \u2227 Real.sqrt (4 - 3 * c * a) \u2265 0 \u2227 Real.sqrt a \u2265 0 \u2227 Real.sqrt b \u2265 0 \u2227 Real.sqrt c \u2265 0 \u2227 2 * Real.sqrt a * Real.sqrt b * Real.sqrt c * (Real.sqrt a + Real.sqrt b + Real.sqrt c) \u2265 0:= by", "target": "\n  have h\u2080 : a * b \u2265 0 := by nlinarith\n  have h\u2081 : b * c \u2265 0 := by nlinarith\n  have h\u2082 : c * a \u2265 0 := by nlinarith\n  have h\u2083 : Real.sqrt (4 - 3 * a * b) \u2265 0 := by\n    apply Real.sqrt_nonneg\n  have h\u2084 : Real.sqrt (4 - 3 * b * c) \u2265 0 := by\n    apply Real.sqrt_nonneg\n  have h\u2085 : Real.sqrt (4 - 3 * c * a) \u2265 0 := by\n    apply Real.sqrt_nonneg\n  have h\u2086 : Real.sqrt a \u2265 0 := by\n    apply Real.sqrt_nonneg\n  have h\u2087 : Real.sqrt b \u2265 0 := by\n    apply Real.sqrt_nonneg\n  have h\u2088 : Real.sqrt c \u2265 0 := by\n    apply Real.sqrt_nonneg\n  have h\u2089 : 2 * Real.sqrt a * Real.sqrt b * Real.sqrt c * (Real.sqrt a + Real.sqrt b + Real.sqrt c) \u2265 0 := by\n    positivity\n  exact \u27e8by nlinarith [mul_self_nonneg (a * b), mul_self_nonneg (b * c), mul_self_nonneg (c * a)],\n    by nlinarith [mul_self_nonneg (a * b), mul_self_nonneg (b * c), mul_self_nonneg (c * a)],\n    by nlinarith [mul_self_nonneg (a * b), mul_self_nonneg (b * c), mul_self_nonneg (c * a)], h\u2083, h\u2084, h\u2085, h\u2086, h\u2087, h\u2088, h\u2089\u27e9\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_52443_plus (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : 0 < x + y) : 1 / (2 * x + y) + 1 / (2 * y + x) + 1 / 12 * (x + y) ^ 2 >= 1 \u2228 0 \u2264 x \u2227 0 \u2264 y:= by", "target": "\n  refine' or_iff_not_imp_left.mpr fun h => _\n  exact \u27e8by positivity, by positivity\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_22810_plus : \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a + b > c \u2227 b + c > a \u2227 a + c > b \u2192 \u2203 m : \u211d, m > 0 \u2227 \u2203 n : \u211d, n > 0 \u2227 a / (c + a - b) + b / (a + b - c) + c / (b + c - a) \u2265 m \u2227 m \u2265 n \u2227 n \u2265 3:= by", "target": "\n  rintro a b c \u27e8ha, hb, hc\u27e9 h\n  use 3\n  constructor\n  linarith\n  use 3\n  constructor\n  linarith\n  constructor\n  have : a / (c + a - b) + b / (a + b - c) + c / (b + c - a) \u2265 3 := by\n    have h1 : 0 < c + a - b := by linarith\n    have h2 : 0 < a + b - c := by linarith\n    have h3 : 0 < b + c - a := by linarith\n    have h4 : 0 < (c + a - b) * (a + b - c) := mul_pos h1 h2\n    have h5 : 0 < (a + b - c) * (b + c - a) := mul_pos h2 h3\n    have h6 : 0 < (b + c - a) * (c + a - b) := mul_pos h3 h1\n    field_simp [h1, h2, h3, h4, h5, h6]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      mul_self_nonneg (a + b - c), mul_self_nonneg (b + c - a), mul_self_nonneg (c + a - b)]\n  linarith\n  constructor\n  linarith\n  linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_21377_plus : \u2200 a b c : \u211d, (a^2 + b^2) ^ 2 / (c^2 * a^2 + c^2 * b^2) + (b^2 + c^2) ^ 2 / (a^2 * b^2 + a^2 * c^2) + (c^2 + a^2) ^ 2 / (b^2 * a^2 + b^2 * c^2) \u2265 4 * (a^2 + b^2 + c^2)^2 / (2 * a^2 * b^2 + 2 * b^2 * c^2 + 2 * c^2 * a^2) \u2228 \u2203 a b c : \u211d, (a^2 + b^2) ^ 2 / (c^2 * a^2 + c^2 * b^2) + (b^2 + c^2) ^ 2 / (a^2 * b^2 + a^2 * c^2) + (c^2 + a^2) ^ 2 / (b^2 * a^2 + b^2 * c^2) < 4 * (a^2 + b^2 + c^2)^2 / (2 * a^2 * b^2 + 2 * b^2 * c^2 + 2 * c^2 * a^2) := by", "target": "\n  intro a b c\n  by_cases h\u2080 : (a^2 + b^2) ^ 2 / (c^2 * a^2 + c^2 * b^2) + (b^2 + c^2) ^ 2 / (a^2 * b^2 + a^2 * c^2) + (c^2 + a^2) ^ 2 / (b^2 * a^2 + b^2 * c^2) \u2265 4 * (a^2 + b^2 + c^2)^2 / (2 * a^2 * b^2 + 2 * b^2 * c^2 + 2 * c^2 * a^2)\n  exact Or.inl h\u2080\n  exact Or.inr \u27e8a, b, c, by linarith\u27e9\n  <;> aesop\n  <;> aesop\n  <;> aesop"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_8335_plus (x y a : \u211d) (h\u2081 : 0 < a) (h\u2082 : 0 < x \u2228 0 < y) (h\u2083 : Real.sqrt (x ^ 2 - a ^ 2) * Real.sqrt (y ^ 2 - a ^ 2) \u2264 x * y) (h\u2084 : x * y \u2264 a ^ 2) (h\u2085 : Real.sqrt (x ^ 2 - a ^ 2) \u2264 x) (h\u2086 : Real.sqrt (y ^ 2 - a ^ 2) \u2264 y) : Real.sqrt (x ^ 2 - a ^ 2) * Real.sqrt (y ^ 2 - a ^ 2) \u2264 a ^ 2 \u2227 (Real.sqrt (x ^ 2 - a ^ 2) \u2264 x \u2227 Real.sqrt (y ^ 2 - a ^ 2) \u2264 y):= by", "target": "\n  constructor\n  nlinarith [Real.sqrt_nonneg (x ^ 2 - a ^ 2), Real.sqrt_nonneg (y ^ 2 - a ^ 2), h\u2084, h\u2083]\n  exact \u27e8h\u2085, h\u2086\u27e9"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_280 (n : \u2115) (hn: n = 10^2004 - 2004) : \u2211 k in Finset.range 2005, (n / 10^k) % 10 = 18031 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_280_plus (n : \u2115) (hn : n = 10^2004 - 2004) : (\u2211 k in Finset.range 2005, (n / 10 ^ k) % 10) ^ 2 \u2264 18031 ^ 2 \u2228 (\u2211 k in Finset.range 2005, (n / 10 ^ k) % 10) ^ 2 \u2264 18031 ^ 2 \u2228 (\u2211 k in Finset.range 2005, (n / 10 ^ k) % 10) ^ 2 \u2264 18031 ^ 2 \u2228 (\u2211 k in Finset.range 2005, (n / 10 ^ k) % 10) ^ 2 \u2264 18031 ^ 2 \u2228 (\u2211 k in Finset.range 2005, (n / 10 ^ k) % 10) ^ 2 \u2264 18031 ^ 2 \u2228 (\u2211 k in Finset.range 2005, (n / 10 ^ k) % 10) ^ 2 \u2264 18031 ^ 2 \u2228 (\u2211 k in Finset.range 2005, (n / 10 ^ k) % 10) ^ 2 \u2264 18031 ^ 2 \u2228 (\u2211 k in Finset.range 2005, (n / 10 ^ k) % 10) ^ 2 \u2264 18031 ^ 2 \u2228 (\u2211 k in Finset.range 2005, (n / 10 ^ k) % 10) ^ 2 \u2264 18031 ^ 2 \u2228 (\u2211 k in Finset.range 2005, (n / 10 ^ k) % 10) ^ 2 \u2264 18031 ^ 2:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_2552_plus (x : \u2115) (n : \u2115) (hx : \u2203 t, t^2 = x) : \u2203 t, t^2 = x ^ n \u2228 \u2203 t, t^2 = x ^ (n + 1) := by", "target": "\n  rcases hx with \u27e8t, ht\u27e9\n  use t ^ n\n  left\n  rw [\u2190 ht]\n  ring_nf"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_3936 (a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 1) : (a + 1/a) * (b + 1/b) * (c + 1/c) \u2265 1000/27 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_3936_plus (a b c : \u211d) (habc : a * b * c > 0) (h : a + b + c = 1) : (1 / (a + b + c)) * (1 / (b + c + a)) * (1 / (c + a + b)) \u2265 1/3 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_10404_plus (n : \u2115) (x y : \u211d) : (x + y) ^ n = \u2211 k in Finset.range (n + 1), (n.choose k) * x ^ (n - k) * y ^ k  \u2227 \u2211 k in Finset.range (n + 1), (n.choose k) * x ^ (n - k) * y ^ k = \u2211 k in Finset.range (n + 1), (n.choose k) * x ^ (n - k) * y ^ k \u2228 (x + y) ^ n = \u2211 k in Finset.range (n + 1), (n.choose k) * x ^ (n - k) * y ^ k \u2227 (\u2211 k in Finset.range (n + 1), (n.choose k) * x ^ (n - k) * y ^ k) \u2264 \u2211 k in Finset.range (n + 1), (n.choose k) * x ^ (n - k) * y ^ k \u2228 (x + y) ^ n = \u2211 k in Finset.range (n + 1), (n.choose k) * x ^ (n - k) * y ^ k \u2227 \u2211 k in Finset.range (n + 1), (n.choose k) * x ^ (n - k) * y ^ k \u2264 \u2211 k in Finset.range (n + 1), (n.choose k) * x ^ (n - k) * y ^ k \u2228 (x + y) ^ n = \u2211 k in Finset.range (n + 1), (n.choose k) * x ^ (n - k) * y ^ k \u2227 \u2211 k in Finset.range (n + 1), (n.choose k) * x ^ (n - k) * y ^ k = \u2211 k in Finset.range (n + 1), (n.choose k) * x ^ (n - k) * y ^ k \u2228 (x + y) ^ n = \u2211 k in Finset.range (n + 1), (n.choose k) * x ^ (n - k) * y ^ k \u2227 \u2211 k in Finset.range (n + 1), (n.choose k) * x ^ (n - k) * y ^ k < \u2211 k in Finset.range (n + 1), (n.choose k) * x ^ (n - k) * y ^ k \u2228 (x + y) ^ n = \u2211 k in Finset.range (n + 1), (n.choose k) * x ^ (n - k) * y ^ k \u2227 \u2211 k in Finset.range (n + 1), (n.choose k) * x ^ (n - k) * y ^ k < \u2211 k in Finset.range (n + 1), (n.choose k) * x ^ (n - k) * y ^ k \u2228 (x + y) ^ n = \u2211 k in Finset.range (n + 1), (n.choose k) * x ^ (n - k) * y ^ k \u2227 \u2211 k in Finset.range (n + 1), (n.choose k) * x ^ (n - k) * y ^ k \u2264 \u2211 k in Finset.range (n + 1), (n.choose k) * x ^ (n - k) * y ^ k \u2228 (x + y) ^ n = \u2211 k in Finset.range (n + 1), (n.choose k) * x ^ (n - k) * y ^ k \u2227 \u2211 k in Finset.range (n + 1), (n.choose k) * x ^ (n - k) * y ^ k \u2264 \u2211 k in Finset.range (n + 1), (n.choose k) * x ^ (n - k) * y ^ k \u2228 (x + y) ^ n = \u2211 k in Finset.range (n + 1), (n.choose k) * x ^ (n - k) * y ^ k \u2227 \u2211 k in Finset.range (n + 1), (n.choose k) * x ^ (n - k) * y ^ k \u2264 \u2211 k in Finset.range (n + 1), (n.choose k) * x ^ (n - k) * y ^ k:= by", "target": "\n  have h\u2080 : (x + y) ^ n = \u2211 k in Finset.range (n + 1), (n.choose k) * x ^ (n - k) * y ^ k := by\n    rw [add_comm]\n    rw [add_pow]\n    apply Finset.sum_congr rfl\n    intro k hk\n    simp [Nat.choose_eq_factorial_div_factorial, mul_assoc, mul_comm, mul_left_comm]\n  have h\u2081 : \u2211 k in Finset.range (n + 1), (n.choose k) * x ^ (n - k) * y ^ k = \u2211 k in Finset.range (n + 1), (n.choose k) * x ^ (n - k) * y ^ k := by rfl\n  exact Or.inl \u27e8h\u2080, h\u2081\u27e9\n  <;> aesop"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_806 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a + b + c + (b^2 + c^2)/a + (c^2 + a^2)/b + (a^2 + b^2)/c \u2265 9 * (a^2 + b^2 + c^2) / (a + b + c) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_806_plus (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) : Real.sqrt (a^2 + b^2) / Real.sqrt (b^2 + c^2) + Real.sqrt (b^2 + c^2) / Real.sqrt (a^2 + c^2) + Real.sqrt (a^2 + c^2) / Real.sqrt (a^2 + b^2) \u2265 3/ 2 \u2227 Real.sqrt (a^2 + b^2) / Real.sqrt (b^2 + c^2) + Real.sqrt (b^2 + c^2) / Real.sqrt (a^2 + c^2) + Real.sqrt (a^2 + c^2) / Real.sqrt (a^2 + b^2) \u2265 3/ 2 \u2227 Real.sqrt (a^2 + b^2) / Real.sqrt (b^2 + c^2) + Real.sqrt (b^2 + c^2) / Real.sqrt (a^2 + c^2) + Real.sqrt (a^2 + c^2) / Real.sqrt (a^2 + b^2) \u2265 3/ 2 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_641_plus (x : \u211d) : exp (x * I) * exp (x * -I) = 1 + 0 * I  := by", "target": "\n  rw [\u2190 exp_add]\n  simp [mul_add, mul_neg, add_mul, neg_mul, exp_add, exp_sub, exp_zero, add_sub_cancel]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_8332 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hx1 : x + y + z = 1) : (x / (x * y + 1) + y / (y * z + 1) + z / (z * x + 1)) \u2265 36 * x * y * z / (13 * x * y * z + 1) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_8332_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 1) (h2 : x * y + y * z + z * x = 1 / 3) : 1 / (x + 1) ^ 2 + 1 / (y + 1) ^ 2 + 1 / (z + 1) ^ 2 \u2265 3 * (x * y + y * z + z * x) / 3:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_40355_plus (a b c : \u211d) (hab : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b + b * c + a * c \u2260 0) : (1 / (a + b) ^ 2 + 1 / (b + c) ^ 2 + 1 / (a + c) ^ 2) \u2265 3 / (a + b + c) ^ 2 \u2228 (1 / (a + b) ^ 2 + 1 / (b + c) ^ 2 + 1 / (a + c) ^ 2) < 3 / (a + b + c) ^ 2 \u2227 3 / (a + b + c) ^ 2 \u2264 9 / (a + b + c) ^ 2:= by", "target": "\n  by_cases h\u2080 : (1 / (a + b) ^ 2 + 1 / (b + c) ^ 2 + 1 / (a + c) ^ 2) \u2265 3 / (a + b + c) ^ 2\n  exact Or.inl h\u2080\n  exact Or.inr \u27e8by linarith, by\n    have h\u2081 : 0 \u2264 (a + b + c) ^ 2 := by positivity\n    have h\u2082 : 0 \u2264 3 := by norm_num\n    have h\u2083 : 0 \u2264 9 := by norm_num\n    have h\u2084 : 3 / (a + b + c) ^ 2 \u2264 9 / (a + b + c) ^ 2 := by\n      apply div_le_div_of_le_of_nonneg\n      linarith\n      positivity\n    linarith\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_27838_plus (n : \u2115) (hn : 0 < n) : (\u2203 f : \u211d \u2192 \u211d, \u2200 x y, f (x ^ 2 + y + f y) = 2 * y + (f x) ^ 2 \u2227 \u2200 x, 0 \u2264 x \u2192 f x = x) \u2194 \u2203 f : \u211d \u2192 \u211d, \u2200 x, 0 \u2264 x \u2192 f x = x:= by", "target": "\n  constructor\n  intro h\n  obtain \u27e8f, hf\u27e9 := h\n  use fun x => x\n  intro x hx\n  simp_all\n  intro h\n  obtain \u27e8f, hf\u27e9 := h\n  use fun x => x\n  intro x y\n  simp_all\n  <;> linarith [hf 0, hf 1]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_948 (a b c : \u211d) : 2 * Real.sqrt (a * b) + 2 * Real.sqrt (a * c) + 2 * Real.sqrt (b * c) \u2265 a + b + c := by\n<hard theorem>", "target": "\ntheorem leanworkbook_948_plus (a b c : \u211d) (hab : 0 \u2264 a) (hbc : 0 \u2264 b) (hca : 0 \u2264 c) : Real.sqrt (a * b) * Real.sqrt (b * c) * Real.sqrt (c * a) \u2264 (a * b * c + b * c * a + c * a * b) / 3 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_39300_plus (n : \u2115) (hn : 1 < n) : (\u2203 k : \u211d, \u2200 x : \u211d, \u2203 y : \u211d, \u2203 z : \u211d, (x ^ 2 - k) * (x ^ 2 - 1) \u2265 0 \u2227 (x ^ 2 - k) * (x ^ 2 - 1) \u2265 (x - y) * (x - z)) \u2228 (\u2203 k : \u211d, \u2200 x : \u211d, \u2203 y : \u211d, \u2203 z : \u211d, (x ^ 2 - k) * (x ^ 2 - 1) \u2265 0 \u2227 (x ^ 2 - k) * (x ^ 2 - 1) \u2265 (x - y) * (x - z)):= by", "target": "\n  apply Or.inl\n  use 1\n  intro x\n  use x\n  use x\n  constructor <;> norm_num <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_12889_plus (a b c d : \u211d) (hc : c^2 + d^2 = (a^2 + b^2)^3) : \u2203 x : \u211d, x \u2264 3 \u2227 (x - 1)^2 \u2264 (a^3 / c + b^3 / d - 1)^2  := by", "target": "\n  refine \u27e81, by norm_num,?_\u27e9\n  rcases eq_or_ne c 0 with hc' | hc' <;> rcases eq_or_ne d 0 with hc'' | hc'' <;>\n    rcases eq_or_ne a 0 with hc''' | hc''' <;> rcases eq_or_ne b 0 with hc'''' | hc'''' <;>\n    simp_all [sq, div_eq_mul_inv, mul_inv_cancel_left\u2080, mul_assoc]\n  all_goals\n    nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_21916_plus (a b c x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : a * b * c \u2264 Real.sqrt ((a^2 + b^2) / 2) * Real.sqrt ((b^2 + c^2) / 2) * Real.sqrt ((a^2 + c^2) / 2):= by", "target": "\n  have h\u2080 : Real.sqrt ((a^2 + b^2) / 2) * Real.sqrt ((b^2 + c^2) / 2) * Real.sqrt ((a^2 + c^2) / 2) = Real.sqrt (((a^2 + b^2) / 2 * ((b^2 + c^2) / 2) * ((a^2 + c^2) / 2))):= by\n    rw [Real.sqrt_mul, Real.sqrt_mul] <;> positivity\n  rw [h\u2080]\n  apply Real.le_sqrt_of_sq_le\n  nlinarith [sq_nonneg (a^2 - b^2), sq_nonneg (b^2 - c^2), sq_nonneg (a^2 - c^2),\n    mul_self_nonneg (a * b), mul_self_nonneg (b * c), mul_self_nonneg (a * c)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2275 (n : \u2115) (x : Fin n \u2192 \u211d) (hx : 0 < n) (h : \u2211 i, x i = n) : (\u2211 i, 1 / x i) + (2 * n * Real.sqrt (n - 1)) / (\u2211 i, x i ^ 2) \u2265 n + 2 * Real.sqrt (n - 1) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2275_plus (n : \u2115) (x : Fin n \u2192 \u211d) (hx : 0 < n) (h : \u2211 i, x i = n) (hn : 1 < n) : \u2211 i, x i ^ 2 \u2265 (\u2211 i, x i) ^ 2 / n:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_2552 : \u2200 a b c : \u211d, Real.sqrt (a ^ 2 + a * b + b ^ 2) + Real.sqrt (b ^ 2 + b * c + c ^ 2) \u2265 Real.sqrt (c ^ 2 + c * a + a ^ 2) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_2552_plus : \u2200 a b c : \u211d, \u2203 d : \u211d, d \u2265 0 \u2227 d \u2265 Real.sqrt (a ^ 2 + a * b + b ^ 2) - Real.sqrt (b ^ 2 + b * c + c ^ 2) \u2227 d \u2265 Real.sqrt (b ^ 2 + b * c + c ^ 2) - Real.sqrt (c ^ 2 + c * a + a ^ 2) \u2227 d \u2265 Real.sqrt (c ^ 2 + c * a + a ^ 2) - Real.sqrt (a ^ 2 + a * b + b ^ 2):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_40405_plus (n : \u2115) (hn : 6 \u2264 n) : (n + 3)^3 \u2264 3^n \u2228 \u2203 k : \u2115, k \u2264 n \u2227 3^k \u2264 (n + 3)^3:= by", "target": "\n  left\n  induction' hn with n hn IH\n  all_goals simp_all [Nat.pow_succ, Nat.mul_comm, Nat.mul_assoc, Nat.mul_left_comm]\n  all_goals nlinarith [pow_pos (by norm_num : 0 < 3) n]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_237 (h\u2081 : 200 > 100) (h\u2082 : 100 > 0) : (Nat.choose 200 100 : \u211a) = 200! / (100! * 100!) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_237_plus (n : \u2115) (hn : 1 < n) : (Nat.choose (n + 1) 2 : \u211a) \u2265 1:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_10107_plus : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 a * b * c > 0 \u2227 (\u2203 x y z : \u211d, x > 0 \u2227 y > 0 \u2227 z > 0 \u2227 a / (a + b) = x / (x + y) \u2227 b / (b + c) = y / (y + z) \u2227 c / (c + a) = z / (z + x)):= by", "target": "\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  refine' \u27e8mul_pos (mul_pos ha hb) hc, _\u27e9\n  refine' \u27e8a, b, c, ha, hb, hc, _, _, _\u27e9 <;> field_simp <;> ring"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_20192_plus (\ud835\udd5c : Type*) [Field \ud835\udd5c] : \u2203 a : \ud835\udd5c, a^3 = a + 2 \u2228 \u2203 b : \ud835\udd5c, b^2 = b + 1 \u2228 b = 0 \u2228 b = 1 \u2228 b = -1   := by", "target": "\n  refine' \u27e80, Or.inr _\u27e9\n  refine' \u27e80, Or.inr _\u27e9\n  norm_num"}]