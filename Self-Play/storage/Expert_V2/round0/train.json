[
 {
  "old": "(a b c : \u211d) : (1 / (a ^ 2 + b ^ 2) + 1 / (c ^ 2 + b ^ 2) + 1 / (a ^ 2 + c ^ 2) + 11 / (a ^ 2 + b ^ 2 + c ^ 2)) \u2265 32 / (a + b + c) ^ 2 := by",
  "new": ": \u2200 x : \u211d, x > 0 \u2192 (1 / x ^ 2 + 1 / x ^ 2 + 1 / (x ^ 2 + 0) + 1 / (x ^ 2 + 0) + 1 / x ^ 2 + 1 / (x ^ 2 + 0) + 1 / (x ^ 2 + 0) + 1 / (x ^ 2 + 0) + 1 / (x ^ 2 + 0)) \u2265 9 / x ^ 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 x : \u211d, x > 0 \u2192 (1 / x ^ 2 + 1 / x ^ 2 + 1 / (x ^ 2 + 0) + 1 / (x ^ 2 + 0) + 1 / x ^ 2 + 1 / (x ^ 2 + 0) + 1 / (x ^ 2 + 0) + 1 / (x ^ 2 + 0) + 1 / (x ^ 2 + 0)) \u2265 9 / x ^ 2:= by\n  intro x hx\n  have h\u2082 : 0 < x ^ 2 := by positivity\n  have h\u2083 : 0 < x ^ 2 + 0 := by positivity\n  have h\u2084 : 0 < x ^ 2 + 0 := by positivity\n  have h\u2085 : 0 < x ^ 2 + 0 := by positivity\n  have h\u2086 : 0 < x ^ 2 + 0 := by positivity\n  have h\u2087 : 0 < x ^ 2 + 0 := by positivity\n  have h\u2088 : 0 < x ^ 2 + 0 := by positivity\n  field_simp [h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087, h\u2088]\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (x ^ 2 - 3 * x), sq_nonneg (x - 1)]\n  positivity\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 x : \u211d, x > 0 \u2192 (1 / x ^ 2 + 1 / x ^ 2 + 1 / (x ^ 2 + 0) + 1 / (x ^ 2 + 0) + 1 / x ^ 2 + 1 / (x ^ 2 + 0) + 1 / (x ^ 2 + 0) + 1 / (x ^ 2 + 0) + 1 / (x ^ 2 + 0)) \u2265 9 / x ^ 2:= by\n  intro x hx\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (x ^ 2 - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 x : \u211d, x > 0 \u2192 (1 / x ^ 2 + 1 / x ^ 2 + 1 / (x ^ 2 + 0) + 1 / (x ^ 2 + 0) + 1 / x ^ 2 + 1 / (x ^ 2 + 0) + 1 / (x ^ 2 + 0) + 1 / (x ^ 2 + 0) + 1 / (x ^ 2 + 0)) \u2265 9 / x ^ 2:= by\n  intro x hx; field_simp [sq]; ring_nf; norm_num\n  <;>\n  apply le_of_sub_nonneg\n  <;>\n  field_simp [sq]\n  <;>\n  ring_nf\n  <;>\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 x : \u211d, x > 0 \u2192 (1 / x ^ 2 + 1 / x ^ 2 + 1 / (x ^ 2 + 0) + 1 / (x ^ 2 + 0) + 1 / x ^ 2 + 1 / (x ^ 2 + 0) + 1 / (x ^ 2 + 0) + 1 / (x ^ 2 + 0) + 1 / (x ^ 2 + 0)) \u2265 9 / x ^ 2:= by\n  rintro x (hx : x > 0)\n  simp only [one_div, add_assoc, add_right_comm, add_left_comm]\n  norm_num\n  apply le_of_sub_nonneg\n  field_simp\n  ring_nf\n  positivity"
  ]
 },
 {
  "old": "(a b c : \u211d) (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2081 : 0 < a + b + c) (h\u2082 : a * b * c = 1) : 1 / 3 * (a / b + b / c + c / a) \u2265 2 / 9 * (a / b + b / c + c / a) + 4 / 9 := by",
  "new": "(x y z : \u211d) (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2081 : x * y * z = 1) : 1 / (x + y + z) \u2264 1 / x + 1 / y + 1 / z:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d)\n    (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z)\n    (h\u2081 : x * y * z = 1) :\n   1 / (x + y + z) \u2264 1 / x + 1 / y + 1 / z:= by\n  rcases h\u2080 with \u27e8h\u2080x, h\u2080y, h\u2080z\u27e9\n  have h\u2081x : 0 < x := by linarith\n  have h\u2081y : 0 < y := by linarith\n  have h\u2081z : 0 < z := by linarith\n  apply le_of_sub_nonneg\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [mul_self_nonneg (x - y), mul_self_nonneg (x - z),\n    mul_self_nonneg (y - z), mul_self_nonneg (x + y + z)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d)\n    (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z)\n    (h\u2081 : x * y * z = 1) :\n   1 / (x + y + z) \u2264 1 / x + 1 / y + 1 / z:= by\n  rcases h\u2080 with \u27e8x_pos, y_pos, z_pos\u27e9\n  rw [add_assoc]\n  apply le_of_sub_nonneg\n  field_simp [x_pos, y_pos, z_pos]\n  rw [le_div_iff (by positivity)]\n  nlinarith [mul_self_nonneg (x - y), mul_self_nonneg (x - z),\n    mul_self_nonneg (y - z), mul_self_nonneg (x - 1),\n    mul_self_nonneg (y - 1), mul_self_nonneg (z - 1)]\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d)\n    (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z)\n    (h\u2081 : x * y * z = 1) :\n   1 / (x + y + z) \u2264 1 / x + 1 / y + 1 / z:= by\n  rcases h\u2080 with \u27e8hx, hy, hz\u27e9\n  have h\u2080 : 0 < x * y := mul_pos hx hy\n  have h\u2081 : 0 < x * z := mul_pos hx hz\n  have h\u2082 : 0 < y * z := mul_pos hy hz\n  field_simp [h\u2080.ne', h\u2081.ne', h\u2082.ne', h\u2081]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [mul_self_nonneg (x - y), mul_self_nonneg (x - z), mul_self_nonneg (y - z),\n    mul_self_nonneg (x * y - 1), mul_self_nonneg (x * z - 1), mul_self_nonneg (y * z - 1)]\n  <;> linarith\n  <;> positivity\n  <;> linarith\n  <;> positivity\n  <;> linarith\n  <;> positivity\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d)\n    (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z)\n    (h\u2081 : x * y * z = 1) :\n   1 / (x + y + z) \u2264 1 / x + 1 / y + 1 / z:= by\n  rcases h\u2080 with \u27e8hx, hy, hz\u27e9\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [mul_pos hx hy, mul_pos hx hz, mul_pos hy hz]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0)(hab : a + b + c = 1) : a^3 + b^3 + c^3 + 6 * a * b * c \u2265 1 / 4 := by",
  "new": "(a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  rcases Nat.eq_one_of_mul_eq_one_right h with (rfl | rfl) <;> simp [Nat.coprime_one_left]\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  rcases Nat.eq_zero_or_pos a with ha | ha\n  all_goals rcases Nat.eq_zero_or_pos b with hb | hb\n  all_goals simp_all [Nat.mul_eq_zero, Nat.Coprime]\n  all_goals omega\n  all_goals omega"
  ]
 },
 {
  "old": "(m : \u211d) (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a + b + c) ^ m * (a ^ (m + 1) / b ^ m + b ^ (m + 1) / c ^ m + c ^ (m + 1) / a ^ m) \u2265 3 ^ m * (a ^ (m + 1) + b ^ (m + 1) + c ^ (m + 1)) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hx1 : x + y + z = 1) : x ^ 2 * y ^ 2 * z ^ 2 * (x + y + z) \u2264 x ^ 2 * y ^ 2 * (x + y) + y ^ 2 * z ^ 2 * (y + z) + z ^ 2 * x ^ 2 * (z + x):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hx1 : x + y + z = 1) : \n   x ^ 2 * y ^ 2 * z ^ 2 * (x + y + z) \u2264 x ^ 2 * y ^ 2 * (x + y) + y ^ 2 * z ^ 2 * (y + z) + z ^ 2 * x ^ 2 * (z + x):= by\n  rw [hx1]\n  have h1 : 0 < x * y := by positivity\n  have h2 : 0 < y * z := by positivity\n  have h3 : 0 < z * x := by positivity\n  have h4 : 0 < x * y * z := by positivity\n  have h5 : 0 < x * y * z * (x * y + y * z + z * x) := by positivity\n  nlinarith [sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y)]\n  <;> assumption\n  <;> try norm_num\n  <;> linarith\n  <;> assumption\n  <;> try norm_num\n  <;> linarith\n  <;> assumption"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : 1 / (a^4 + 4 * b^2 + 7) + 1 / (b^4 + 4 * c^2 + 7) + 1 / (c^4 + 4 * a^2 + 7) \u2264 1 / 4 := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192 1 / (a^4 + 4 * b^2 + 7) + 1 / (b^4 + 4 * c^2 + 7) + 1 / (c^4 + 4 * a^2 + 7) \u2264 1 / 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192\n   1 / (a^4 + 4 * b^2 + 7) + 1 / (b^4 + 4 * c^2 + 7) + 1 / (c^4 + 4 * a^2 + 7) \u2264 1 / 4:= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a * b - c), sq_nonneg (b * c - a), sq_nonneg (c * a - b),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le,\n    mul_nonneg (sq_nonneg (a ^ 2 - 1)) (sq_nonneg (b ^ 2 - 1)),\n    mul_nonneg (sq_nonneg (b ^ 2 - 1)) (sq_nonneg (c ^ 2 - 1)),\n    mul_nonneg (sq_nonneg (c ^ 2 - 1)) (sq_nonneg (a ^ 2 - 1))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192\n   1 / (a^4 + 4 * b^2 + 7) + 1 / (b^4 + 4 * c^2 + 7) + 1 / (c^4 + 4 * a^2 + 7) \u2264 1 / 4:= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a * b - c), sq_nonneg (b * c - a), sq_nonneg (c * a - b),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le,\n    mul_nonneg (sq_nonneg (a ^ 2 - 1)) (sq_nonneg (b ^ 2 - 1)),\n    mul_nonneg (sq_nonneg (b ^ 2 - 1)) (sq_nonneg (c ^ 2 - 1)),\n    mul_nonneg (sq_nonneg (a ^ 2 - 1)) (sq_nonneg (c ^ 2 - 1))]\n  <;> simp [ha, hb, hc, habc]\n  <;> nlinarith\n  <;> simp [ha, hb, hc, habc]\n  <;> nlinarith\n  <;> simp [ha, hb, hc, habc]\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192\n   1 / (a^4 + 4 * b^2 + 7) + 1 / (b^4 + 4 * c^2 + 7) + 1 / (c^4 + 4 * a^2 + 7) \u2264 1 / 4:= by\n  rintro a b c \u27e8ha, hb, hc, h\u27e9\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b * c), sq_nonneg (b - c * a), sq_nonneg (c - a * b),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le,\n    mul_nonneg (sq_nonneg (a ^ 2 - 1)) (sq_nonneg (b ^ 2 - 1)), mul_nonneg (sq_nonneg (b ^ 2 - 1)) (sq_nonneg (c ^ 2 - 1)),\n    mul_nonneg (sq_nonneg (a ^ 2 - 1)) (sq_nonneg (c ^ 2 - 1))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192\n   1 / (a^4 + 4 * b^2 + 7) + 1 / (b^4 + 4 * c^2 + 7) + 1 / (c^4 + 4 * a^2 + 7) \u2264 1 / 4:= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  field_simp [add_comm]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a * b * c - 1), sq_nonneg (a * b - c), sq_nonneg (b * c - a),\n    sq_nonneg (c * a - b), mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le,\n    mul_nonneg (sq_nonneg (a ^ 2 - 1)) (sq_nonneg (b ^ 2 - 1)),\n    mul_nonneg (sq_nonneg (b ^ 2 - 1)) (sq_nonneg (c ^ 2 - 1)),\n    mul_nonneg (sq_nonneg (c ^ 2 - 1)) (sq_nonneg (a ^ 2 - 1))]"
  ]
 },
 {
  "old": "(f : \u211d \u2192 \u211d) (hf : \u2200 x, \u2016f x\u2016 \u2264 1) (h1556 : \u2200 x, f (x + 15 / 56) + f x = f (x + 1 / 8) + f (x + 1 / 7)) : \u2203 T > 0, \u2200 x, f x = f (x + T) := by",
  "new": "(x y : \u211d) (f : \u211d \u2192 \u211d) (hf: \u2200 x, \u2016f x\u2016 \u2264 1 \u2227 \u2200 x, f (x + 15 / 56) + f x = f (x + 1 / 8) + f (x + 1 / 7)) : \u2016f x + f y\u2016 \u2264 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (x y : \u211d) (f : \u211d \u2192 \u211d) (hf: \u2200 x, \u2016f x\u2016 \u2264 1 \u2227 \u2200 x, f (x + 15 / 56) + f x = f (x + 1 / 8) + f (x + 1 / 7)) : \u2016f x + f y\u2016 \u2264 2:= by\n  have h := hf x\n  have h1 := hf y\n  have h2 := hf 0\n  simp at h h1 h2\n  have h3 := hf (x + y)\n  simp at h3\n  have h4 : \u2016f x + f y\u2016 \u2264 2 := by\n    have h5 : \u2016f x + f y\u2016 \u2264 \u2016f x\u2016 + \u2016f y\u2016 := by\n      apply norm_add_le\n    have h6 : \u2016f x\u2016 \u2264 1 := by\n      apply le_trans (h.1)\n      simp\n    have h7 : \u2016f y\u2016 \u2264 1 := by\n      apply le_trans (h1.1)\n      simp\n    have h8 : \u2016f x\u2016 + \u2016f y\u2016 \u2264 2 := by\n      linarith\n    linarith\n  exact h4"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 3) : (a^(7 / 4) / (b + a) * (a + c) + b^(7 / 4) / (c + b) * (b + a) + c^(7 / 4) / (b + c) * (c + a)) \u2265 3 / 4 := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : Real.sqrt (a / (b + a + c)) + Real.sqrt (b / (c + b + a)) + Real.sqrt (c / (b + c + a)) \u2265 Real.sqrt 2 - 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) :  Real.sqrt (a / (b + a + c)) + Real.sqrt (b / (c + b + a)) + Real.sqrt (c / (b + c + a)) \u2265 Real.sqrt 2 - 1:= by\n  have h\u2081 : Real.sqrt (a / (b + a + c)) \u2265 a / 3 := by\n    apply Real.le_sqrt_of_sq_le\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a - (b + a + c) / 3)]\n  have h\u2082 : Real.sqrt (b / (c + b + a)) \u2265 b / 3 := by\n    apply Real.le_sqrt_of_sq_le\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (b - (c + b + a) / 3)]\n  have h\u2083 : Real.sqrt (c / (b + c + a)) \u2265 c / 3 := by\n    apply Real.le_sqrt_of_sq_le\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (c - (b + c + a) / 3)]\n  nlinarith [sq_sqrt (by positivity : 0 \u2264 (2 : \u211d)),\n    Real.sqrt_nonneg (2 : \u211d),\n    Real.sqrt_nonneg (2 : \u211d)]\n  <;> linarith\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) :  Real.sqrt (a / (b + a + c)) + Real.sqrt (b / (c + b + a)) + Real.sqrt (c / (b + c + a)) \u2265 Real.sqrt 2 - 1:= by\n  have h\u2080 : Real.sqrt 2 \u2264 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor <;> norm_num\n  have h\u2081 : Real.sqrt (a / (b + a + c)) \u2265 a / 3 := by\n    apply Real.le_sqrt_of_sq_le\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n      mul_self_nonneg (a + b + c)]\n  have h\u2082 : Real.sqrt (b / (c + b + a)) \u2265 b / 3 := by\n    apply Real.le_sqrt_of_sq_le\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n      mul_self_nonneg (a + b + c)]\n  have h\u2083 : Real.sqrt (c / (b + c + a)) \u2265 c / 3 := by\n    apply Real.le_sqrt_of_sq_le\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n      mul_self_nonneg (a + b + c)]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) :  Real.sqrt (a / (b + a + c)) + Real.sqrt (b / (c + b + a)) + Real.sqrt (c / (b + c + a)) \u2265 Real.sqrt 2 - 1:= by\n  have h : Real.sqrt 2 \u2264 2 := by\n    norm_num [Real.sqrt_le_iff]\n  have h\u2081 : Real.sqrt (a / (b + a + c)) \u2265 a / 3 := by\n    apply Real.le_sqrt_of_sq_le\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c)]\n  have h\u2082 : Real.sqrt (b / (c + b + a)) \u2265 b / 3 := by\n    apply Real.le_sqrt_of_sq_le\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (b - c), sq_nonneg (b - a), sq_nonneg (c - a)]\n  have h\u2083 : Real.sqrt (c / (b + c + a)) \u2265 c / 3 := by\n    apply Real.le_sqrt_of_sq_le\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (c - b), sq_nonneg (c - a), sq_nonneg (b - a)]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) :  Real.sqrt (a / (b + a + c)) + Real.sqrt (b / (c + b + a)) + Real.sqrt (c / (b + c + a)) \u2265 Real.sqrt 2 - 1:= by\n  have : 0 \u2264 Real.sqrt 2 := Real.sqrt_nonneg _\n  have h : Real.sqrt 2 \u2264 2 := by norm_num [Real.sqrt_le_iff]\n  have h\u2081 : Real.sqrt (a / (b + a + c)) \u2265 a / 3 := by\n    apply Real.le_sqrt_of_sq_le\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n      mul_pos ha hb, mul_pos ha hc, mul_pos hb hc]\n  have h\u2082 : Real.sqrt (b / (c + b + a)) \u2265 b / 3 := by\n    apply Real.le_sqrt_of_sq_le\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n      mul_pos hb ha, mul_pos hb hc, mul_pos ha hc]\n  have h\u2083 : Real.sqrt (c / (b + c + a)) \u2265 c / 3 := by\n    apply Real.le_sqrt_of_sq_le\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n      mul_pos hc ha, mul_pos hc hb, mul_pos ha hb]\n  nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) : (a^3 / b + b^3 / c + c^3 / a + a^2 * c / b + b^2 * a / c + c^2 * b / a) * (a * b + b * c + c * a + b * c + c * a + a * b) \u2265 (a^2 + b^2 + c^2 + a * c + b * a + a * c)^2 := by",
  "new": "(a b c : \u211d) : a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 2 + b ^ 2 * c ^ 2 * a ^ 2 + a ^ 2 * c ^ 2 * b ^ 2 + a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 2 \u2265 a ^ 2 * b ^ 2 * c ^ 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) :\n    a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 2 + b ^ 2 * c ^ 2 * a ^ 2 +\n    a ^ 2 * c ^ 2 * b ^ 2 + a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 2 \u2265\n    a ^ 2 * b ^ 2 * c ^ 2:= by\n  nlinarith [sq_nonneg (a * b * c)]\n  <;> simp_all only [sq, mul_assoc]\n  <;> nlinarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) :\n    a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 2 + b ^ 2 * c ^ 2 * a ^ 2 +\n    a ^ 2 * c ^ 2 * b ^ 2 + a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 2 \u2265\n    a ^ 2 * b ^ 2 * c ^ 2:= by\n  nlinarith [sq_nonneg (a * b), sq_nonneg (a * c), sq_nonneg (b * c),\n    mul_self_nonneg (a + b + c), mul_self_nonneg (a - b), mul_self_nonneg (a - c),\n    mul_self_nonneg (b - c), mul_self_nonneg (a - b + c), mul_self_nonneg (a + b - c),\n    mul_self_nonneg (b - a + c), mul_self_nonneg (b + a - c)]\n  <;> simp\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) :\n    a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 2 + b ^ 2 * c ^ 2 * a ^ 2 +\n    a ^ 2 * c ^ 2 * b ^ 2 + a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 2 \u2265\n    a ^ 2 * b ^ 2 * c ^ 2:= by\n  ring_nf\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2),\n    sq_nonneg (c ^ 2 - a ^ 2), sq_nonneg (a * b), sq_nonneg (b * c),\n    sq_nonneg (a * c)]\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) :\n    a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 2 + b ^ 2 * c ^ 2 * a ^ 2 +\n    a ^ 2 * c ^ 2 * b ^ 2 + a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 2 \u2265\n    a ^ 2 * b ^ 2 * c ^ 2:= by\n  nlinarith [sq_nonneg (a * b * c), sq_nonneg (a - b), sq_nonneg (a + b), sq_nonneg (c - a),\n    sq_nonneg (c + a), sq_nonneg (b - c), sq_nonneg (b + c)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 3) : 6 \u2264 Real.sqrt (a^3 + b + 2) + Real.sqrt (b^3 + c + 2) + Real.sqrt (c^3 + a + 2) := by",
  "new": "{a b c : \u211d} (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 3) : ( a + b + c = 3 \u2227 a * b * c = 0 ) \u2228 ( a + b + c = 3 \u2227 a * b * c > 0 ) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_nonneg_of_sum_eq_three {a b c : \u211d} (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 3) : ( a + b + c = 3 \u2227  a * b * c = 0 ) \u2228 ( a + b + c = 3 \u2227  a * b * c > 0 ) := by\n  rcases eq_or_lt_of_le ha with rfl | ha' <;> rcases eq_or_lt_of_le hb with rfl | hb' <;> rcases eq_or_lt_of_le hc with rfl | hc' <;>\n  simp_all [add_assoc, add_comm, add_left_comm, mul_eq_mul_left_iff, mul_eq_mul_right_iff]\n  <;> norm_num <;> nlinarith\n  <;> linarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_nonneg_of_sum_eq_three {a b c : \u211d} (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 3) : ( a + b + c = 3 \u2227  a * b * c = 0 ) \u2228 ( a + b + c = 3 \u2227  a * b * c > 0 ) := by\n  cases' eq_or_lt_of_le ha with ha' ha' <;> cases' eq_or_lt_of_le hb with hb' hb' <;> cases' eq_or_lt_of_le hc with hc' hc' <;> simp_all\n  <;> try norm_num <;> aesop"
  ]
 },
 {
  "old": "(a b c : \u211d) : a^3 * b + b^3 * c + c^3 * a \u2264 (8/81) * (a + b + c)^4 := by",
  "new": "(x y z : \u211d) : 2 * Real.sqrt (x^2 * y^2) + 2 * Real.sqrt (y^2 * z^2) + 2 * Real.sqrt (z^2 * x^2) \u2264 2 * (Real.sqrt (x^2) + Real.sqrt (y^2) + Real.sqrt (z^2)) * (Real.sqrt (x^2) + Real.sqrt (y^2) + Real.sqrt (z^2)):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) : 2 * Real.sqrt (x^2 * y^2) + 2 * Real.sqrt (y^2 * z^2) + 2 * Real.sqrt (z^2 * x^2) \u2264 2 * (Real.sqrt (x^2) + Real.sqrt (y^2) + Real.sqrt (z^2)) * (Real.sqrt (x^2) + Real.sqrt (y^2) + Real.sqrt (z^2)):= by\n  have h\u2080 : 0 \u2264 Real.sqrt (x^2) := Real.sqrt_nonneg _\n  have h\u2081 : 0 \u2264 Real.sqrt (y^2) := Real.sqrt_nonneg _\n  have h\u2082 : 0 \u2264 Real.sqrt (z^2) := Real.sqrt_nonneg _\n  have h\u2083 : Real.sqrt (x^2 * y^2) \u2264 Real.sqrt (x^2) * Real.sqrt (y^2) := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_sqrt (show 0 \u2264 x^2 by positivity), sq_sqrt (show 0 \u2264 y^2 by positivity)]\n  have h\u2084 : Real.sqrt (y^2 * z^2) \u2264 Real.sqrt (y^2) * Real.sqrt (z^2) := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_sqrt (show 0 \u2264 y^2 by positivity), sq_sqrt (show 0 \u2264 z^2 by positivity)]\n  have h\u2085 : Real.sqrt (z^2 * x^2) \u2264 Real.sqrt (z^2) * Real.sqrt (x^2) := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_sqrt (show 0 \u2264 z^2 by positivity), sq_sqrt (show 0 \u2264 x^2 by positivity)]\n  nlinarith [sq_sqrt (show 0 \u2264 x^2 by positivity), sq_sqrt (show 0 \u2264 y^2 by positivity), sq_sqrt (show 0 \u2264 z^2 by positivity)]"
  ]
 },
 {
  "old": ": \u2200 a b : \u211d, a > 0 \u2227 b > 0 \u2192 a^2 + b^2 + 1 / 12 \u2265 3 * a * b * (1 - a * b) \u2227 a^3 + b^3 + 5 / 16 \u2265 3 * a * b * (1 - a * b) \u2227 a^4 + b^4 + 1 / 12 \u2265 a * b * (1 - a * b) \u2227 a^6 + b^6 + 44 / 27 \u2265 a * b * (4 - a * b) := by",
  "new": ": \u2200 a b : \u211d, 0 \u2264 a \u2227 0 \u2264 b \u2192 (a^3 + b^3) ^ 2 \u2265 a * b * (a ^ 2 + b ^ 2) ^ 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 a b : \u211d, 0 \u2264 a \u2227 0 \u2264 b \u2192 (a^3 + b^3) ^ 2 \u2265 a * b * (a ^ 2 + b ^ 2) ^ 2:= by\n  refine' fun a b h => _\n  cases' h with h\u2081 h\u2082\n  ring_nf\n  nlinarith [sq_nonneg (a - b), mul_nonneg h\u2081 h\u2082, sq_nonneg (a ^ 2 - b ^ 2),\n    sq_nonneg (a ^ 2 + b ^ 2), mul_nonneg (sq_nonneg a) (sq_nonneg b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 a b : \u211d, 0 \u2264 a \u2227 0 \u2264 b \u2192 (a^3 + b^3) ^ 2 \u2265 a * b * (a ^ 2 + b ^ 2) ^ 2:= by\n  rintro a b \u27e8ha, hb\u27e9\n  have habs : 0 \u2264 a * b := mul_nonneg ha hb\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (a * b), sq_nonneg (a - b),\n    mul_self_nonneg (a ^ 2 - 2 * a * b + b ^ 2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 a b : \u211d, 0 \u2264 a \u2227 0 \u2264 b \u2192 (a^3 + b^3) ^ 2 \u2265 a * b * (a ^ 2 + b ^ 2) ^ 2:= by\n  rintro a b \u27e8ha, hb\u27e9\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a * b), sq_nonneg (a ^ 2 - b ^ 2),\n    mul_nonneg ha hb, pow_nonneg ha 3, pow_nonneg hb 3]"
  ]
 },
 {
  "old": "(a b c d e : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (hd : d > 0) (he : e > 0) (habcde : a + b + c + d + e = 5) : (1 / a + 1 / b + 1 / c + 1 / d + 1 / e + (7 * Real.sqrt 5) / Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2 + e ^ 2)) \u2265 12 := by",
  "new": ": Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2 + e ^ 2) \u2265 (Real.sqrt 5) / 5 * (a + b + c + d + e):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2 + e ^ 2) \u2265 (Real.sqrt 5) / 5 * (a + b + c + d + e):= by\n  have : (Real.sqrt 5) ^ 2 = 5 := Real.sq_sqrt (by positivity)\n  apply Real.le_sqrt_of_sq_le\n  ring_nf\n  norm_num\n  have : 0 \u2264 (a - b) ^ 2 + (a - c) ^ 2 + (a - d) ^ 2 + (a - e) ^ 2 + (b - c) ^ 2 + (b - d) ^ 2 + (b - e) ^ 2 + (c - d) ^ 2 + (c - e) ^ 2 + (d - e) ^ 2 := by positivity\n  nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (ha2 : a^2 + b^2 + c^2 = 1) : (4 * a^2 + 3 * b * c + 1) / (b^2 + 3 * b * c + c^2) + (4 * b^2 + 3 * c * a + 2) / (c^2 + 3 * c * a + a^2) + (4 * c^2 + 3 * a * b + 3) / (a^2 + 3 * a * b + b^2) \u2265 6 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) : (x + y + z) * (x^2 + y^2 + z^2) \u2265 6 * x * y * z \u2227 (x + y + z)^2 \u2265 9 * x * y * z:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) :\n       (x + y + z) * (x^2 + y^2 + z^2) \u2265 6 * x * y * z \u2227 (x + y + z)^2 \u2265 9 * x * y * z:= by\n  have hx1 : 0 < x * y := by positivity\n  have hy1 : 0 < y * z := by positivity\n  have hz1 : 0 < x * z := by positivity\n  constructor\n  \u00b7 nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n      sq_nonneg (x - 1), sq_nonneg (y - 1), sq_nonneg (z - 1)]\n  \u00b7 nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n      sq_nonneg (x - 1), sq_nonneg (y - 1), sq_nonneg (z - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) :\n       (x + y + z) * (x^2 + y^2 + z^2) \u2265 6 * x * y * z \u2227 (x + y + z)^2 \u2265 9 * x * y * z:= by\n  have h1 : 0 < x * y := mul_pos hx hy\n  have h2 : 0 < y * z := mul_pos hy hz\n  have h3 : 0 < z * x := mul_pos hz hx\n  have h4 : 0 < x^2 + y^2 + z^2 := by positivity\n  have h5 : 0 < x^2 * y + y^2 * z + z^2 * x := by positivity\n  have h6 : 0 < x * y * z * (x + y + z) := by positivity\n  constructor\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x), sq_nonneg (x - 1),\n    sq_nonneg (y - 1), sq_nonneg (z - 1)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x), sq_nonneg (x + y + z - 3)]\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) :\n       (x + y + z) * (x^2 + y^2 + z^2) \u2265 6 * x * y * z \u2227 (x + y + z)^2 \u2265 9 * x * y * z:= by\n  have h\u2081 : 0 < x * y := mul_pos hx hy\n  have h\u2082 : 0 < y * z := mul_pos hy hz\n  have h\u2083 : 0 < z * x := mul_pos hz hx\n  constructor\n  \u00b7 nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n      sq_nonneg (x * y - 1), sq_nonneg (y * z - 1), sq_nonneg (z * x - 1)]\n  \u00b7 nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n      sq_nonneg (x * y - 1), sq_nonneg (y * z - 1), sq_nonneg (z * x - 1)]"
  ]
 },
 {
  "old": "(a b c : \u211d) : a * b^2 * (b + c - 2 * a)^2 + b^2 * c * (a - b)^2 + c^2 * a * (b - c)^2 \u2265 0 := by",
  "new": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : a * b^2 * (b + c - 2 * a)^2 + b^2 * c * (a - b)^2 + c^2 * a * (b - c)^2 \u2265 0 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) :\n     a * b^2 * (b + c - 2 * a)^2 + b^2 * c * (a - b)^2 + c^2 * a * (b - c)^2 \u2265 0  := by\n  simp only [mul_assoc, mul_comm, mul_left_comm]\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) :\n     a * b^2 * (b + c - 2 * a)^2 + b^2 * c * (a - b)^2 + c^2 * a * (b - c)^2 \u2265 0  := by\n  nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b), mul_nonneg ha (sq_nonneg b), mul_nonneg hb (sq_nonneg c), mul_nonneg hc (sq_nonneg a), mul_nonneg ha (sq_nonneg c), mul_nonneg hb (sq_nonneg a), mul_nonneg hc (sq_nonneg b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) :\n     a * b^2 * (b + c - 2 * a)^2 + b^2 * c * (a - b)^2 + c^2 * a * (b - c)^2 \u2265 0  := by\n  have h\u2080 : 0 \u2264 a * b ^ 2 := by positivity\n  have h\u2081 : 0 \u2264 b ^ 2 * c := by positivity\n  have h\u2082 : 0 \u2264 c ^ 2 * a := by positivity\n  nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]"
  ]
 },
 {
  "old": "{a b c : \u211d} (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : 6 * (a^2 * b^2 + b^2 * c^2 + c^2 * a^2) \u2265 4 * a * b * c * (a + b + c) + a * b * (a^2 + b^2) + b * c * (b^2 + c^2) + c * a * (c^2 + a^2) := by",
  "new": "{a b c : \u211d} (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : 9 * (a^2 * b^2 + b^2 * c^2 + c^2 * a^2) + 4 * a * b * c * (a + b + c) + 3 * (a * b + b * c + c * a) ^ 2 \u2265 4 * a * b * c * (a + b + c) + a * b * (a ^ 2 + b ^ 2) + b * c * (b ^ 2 + c ^ 2) + c * a * (c ^ 2 + a ^ 2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {a b c : \u211d} (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : 9 * (a^2 * b^2 + b^2 * c^2 + c^2 * a^2) + 4 * a * b * c * (a + b + c) + 3 * (a * b + b * c + c * a) ^ 2 \u2265 4 * a * b * c * (a + b + c) + a * b * (a ^ 2 + b ^ 2) + b * c * (b ^ 2 + c ^ 2) + c * a * (c ^ 2 + a ^ 2):= by\n  simp only [sq]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_nonneg (sub_nonneg.mpr hab.le) (sub_nonneg.mpr hbc.le), mul_nonneg (sub_nonneg.mpr hbc.le) (sub_nonneg.mpr hca.le), mul_nonneg (sub_nonneg.mpr hca.le) (sub_nonneg.mpr hab.le)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {a b c : \u211d} (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : 9 * (a^2 * b^2 + b^2 * c^2 + c^2 * a^2) + 4 * a * b * c * (a + b + c) + 3 * (a * b + b * c + c * a) ^ 2 \u2265 4 * a * b * c * (a + b + c) + a * b * (a ^ 2 + b ^ 2) + b * c * (b ^ 2 + c ^ 2) + c * a * (c ^ 2 + a ^ 2):= by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_nonneg (sub_nonneg.mpr hab.le) (sub_nonneg.mpr hbc.le),\n    mul_nonneg (sub_nonneg.mpr hbc.le) (sub_nonneg.mpr hca.le),\n    mul_nonneg (sub_nonneg.mpr hca.le) (sub_nonneg.mpr hab.le)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {a b c : \u211d} (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : 9 * (a^2 * b^2 + b^2 * c^2 + c^2 * a^2) + 4 * a * b * c * (a + b + c) + 3 * (a * b + b * c + c * a) ^ 2 \u2265 4 * a * b * c * (a + b + c) + a * b * (a ^ 2 + b ^ 2) + b * c * (b ^ 2 + c ^ 2) + c * a * (c ^ 2 + a ^ 2):= by\n  nlinarith [mul_pos (sub_pos.mpr hab) (sub_pos.mpr hbc), mul_pos (sub_pos.mpr hbc) (sub_pos.mpr hca), mul_pos (sub_pos.mpr hca) (sub_pos.mpr hab)]\n  <;> simp_all\n  <;> nlinarith\n  <;> simp_all\n  <;> nlinarith\n  <;> simp_all\n  <;> nlinarith\n  <;> simp_all\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {a b c : \u211d} (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : 9 * (a^2 * b^2 + b^2 * c^2 + c^2 * a^2) + 4 * a * b * c * (a + b + c) + 3 * (a * b + b * c + c * a) ^ 2 \u2265 4 * a * b * c * (a + b + c) + a * b * (a ^ 2 + b ^ 2) + b * c * (b ^ 2 + c ^ 2) + c * a * (c ^ 2 + a ^ 2):= by\n  simp only [mul_assoc, mul_add, add_assoc, add_left_comm]\n  nlinarith [mul_pos (sub_pos.mpr hab) (sub_pos.mpr hbc), mul_pos (sub_pos.mpr hbc) (sub_pos.mpr hca), mul_pos (sub_pos.mpr hca) (sub_pos.mpr hab), sq_nonneg (a + b - c), sq_nonneg (b + c - a), sq_nonneg (c + a - b)]"
  ]
 },
 {
  "old": "(m : \u2115) (hm : 0 < m) : \u2203 n, m \u2223 fib n := by",
  "new": "{n : \u2115} (hn : 1 < n) : \u2203 m, n.Coprime (fib m):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_one {n : \u2115} (hn : 1 < n) : \u2203 m, n.Coprime (fib m):= by\n  use 1\n  simpa [hn] using coprime_one_left (fib n)"
  ]
 },
 {
  "old": ": \u2200 m n : \u2115, Nat.gcd (2^n - 1) (2^m - 1) = 2^(Nat.gcd m n) - 1 := by",
  "new": "(m n : \u2115) : (Nat.Coprime m n) \u2228 \u00ac (Nat.Coprime m n):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (m n : \u2115) : (Nat.Coprime m n) \u2228 \u00ac (Nat.Coprime m n):= by\n  apply by_cases\n  intro h\n  apply Or.inl\n  exact h\n  intro h\n  apply Or.inr\n  exact h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (m n : \u2115) : (Nat.Coprime m n) \u2228 \u00ac (Nat.Coprime m n):= by\n  by_cases h : Nat.Coprime m n\n  left\n  exact h\n  right\n  exact h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (m n : \u2115) : (Nat.Coprime m n) \u2228 \u00ac (Nat.Coprime m n):= by\n  by_cases h : Nat.Coprime m n\n  exact Or.inl h\n  exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (m n : \u2115) : (Nat.Coprime m n) \u2228 \u00ac (Nat.Coprime m n):= by\n  cases Nat.eq_zero_or_pos m\n  <;> cases Nat.eq_zero_or_pos n\n  <;> simp [Nat.Coprime, *]\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega"
  ]
 },
 {
  "old": "(a b : \u211d) (h\u2081 : a * b = 1) (h\u2082 : 0 < a \u2227 0 < b) : a^8 / (b * (a^4 + b^4)) + b^8 / (a * (b^4 + a^4)) \u2265 1 := by",
  "new": "(x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x * y = 1) : 1 \u2264 (x^3 + y^3)^2 / (x^2 + y^2) ^ 2 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x * y = 1) :\n    1 \u2264 (x^3 + y^3)^2 / (x^2 + y^2) ^ 2  := by\n  have h1 : 0 < x^2 + y^2 := by positivity\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x * y), sq_nonneg (x^2 - y^2), hxy]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x * y = 1) :\n    1 \u2264 (x^3 + y^3)^2 / (x^2 + y^2) ^ 2  := by\n  have h\u2081 : 0 < x * y := by positivity\n  have h\u2082 : 0 < x ^ 2 + y ^ 2 := by positivity\n  have h\u2083 : 0 < x ^ 2 * y ^ 2 := by positivity\n  have h\u2084 : 0 < x ^ 2 * y ^ 2 * (x ^ 2 + y ^ 2) := by positivity\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (x ^ 2 + y ^ 2),\n    sq_nonneg (x ^ 2 * y + x * y ^ 2), sq_nonneg (x ^ 2 * y - x * y ^ 2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x * y = 1) :\n    1 \u2264 (x^3 + y^3)^2 / (x^2 + y^2) ^ 2  := by\n  have h\u2081 : 0 < x ^ 3 := pow_pos hx 3\n  have h\u2082 : 0 < y ^ 3 := pow_pos hy 3\n  apply le_of_sub_nonneg\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x * y), sq_nonneg (x ^ 2 - y ^ 2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x * y = 1) :\n    1 \u2264 (x^3 + y^3)^2 / (x^2 + y^2) ^ 2  := by\n  have key : 0 < x * y := by nlinarith\n  field_simp [key]\n  rw [le_div_iff]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x + y), sq_nonneg (x^2 - y^2),\n    sq_nonneg (x^2 + y^2)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x + y), sq_nonneg (x^2 - y^2),\n    sq_nonneg (x^2 + y^2)]"
  ]
 },
 {
  "old": "(a b c : \u211d) : (b - c) ^ 2 * (4 * a ^ 3 * b + 11 * a ^ 2 * b ^ 2 + 4 * a ^ 3 * c + 11 * a ^ 2 * c ^ 2 - 3 * a ^ 4) + (b - a) * (c - a) * (3 * b * c * (b + c) ^ 2 + 2 * a * (b + c) * (4 * b ^ 2 - 7 * b * c + 4 * c ^ 2) + a ^ 2 * (6 * b ^ 2 - b * c + 6 * c ^ 2)) \u2265 0 := by",
  "new": "(a b c : \u211d) : a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c + 4 * a ^ 2 * b * c ^ 2 + 4 * a * b ^ 2 * c ^ 2 + (a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + a ^ 2 * c ^ 2) \u2265 3 * a * b * c * (a * b + b * c + a * c):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) :\n      a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c + 4 * a ^ 2 * b * c ^ 2 + 4 * a * b ^ 2 * c ^ 2 +\n        (a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + a ^ 2 * c ^ 2) \u2265 3 * a * b * c * (a * b + b * c + a * c):= by\n  nlinarith [sq_nonneg (a * b - c * b), sq_nonneg (a * c - b * c), sq_nonneg (b * a - c * a),\n    sq_nonneg (c * b - a * b), sq_nonneg (a * b + c * b), sq_nonneg (a * c + b * c),\n    sq_nonneg (b * a + c * a), sq_nonneg (c * b + a * b), sq_nonneg (a * c + b * c + c * a),\n    sq_nonneg (a * b + b * c + c * b), sq_nonneg (a * b + b * c + c * a - 3 * a * b * c),\n    sq_nonneg (a * b + b * c + c * a + 3 * a * b * c)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 1) : (64 / 27) \u2264 (3 * a ^ 2 + 1) * (3 * b ^ 2 + 1) * (3 * c ^ 2 + 1) \u2227 (3 * a ^ 2 + 1) * (3 * b ^ 2 + 1) * (3 * c ^ 2 + 1) \u2264 4 := by",
  "new": "(i : \u2115) (hi : 0 < i) : (\u2203 d, 1 + d = i) \u2228 \u2203 d, 1 + d = 2 * i:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : 0 < i) : (\u2203 d, 1 + d = i) \u2228 \u2203 d, 1 + d = 2 * i:= by\n  cases' i with i\n  exfalso\n  linarith\n  left\n  use i\n  <;> ring",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : 0 < i) : (\u2203 d, 1 + d = i) \u2228 \u2203 d, 1 + d = 2 * i:= by\n  cases' Nat.exists_eq_succ_of_ne_zero (Nat.pos_iff_ne_zero.mp hi) with i' h\n  left\n  use i'\n  linarith\n  <;> aesop"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : 3 / 2 \u2264 1 / (b * (a + b)) + 1 / (c * (b + c)) + 1 / (a * (c + a)) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z \u2264 9) : 1 / (x + y) ^ 2 + 1 / (y + z) ^ 2 + 1 / (z + x) ^ 2 \u2265 4 / 2 / 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z \u2264 9) :\n    1 / (x + y) ^ 2 + 1 / (y + z) ^ 2 + 1 / (z + x) ^ 2 \u2265 4  / 2 / 3:= by\n  have h\u2083 : (x + y + z) ^ 2 = 1 := by simp [h\u2081]\n  have h\u2084 : 0 < x * y := by nlinarith\n  have h\u2085 : 0 < y * z := by nlinarith\n  have h\u2086 : 0 < z * x := by nlinarith\n  have h\u2087 : 0 < (x + y) ^ 2 := by nlinarith\n  have h\u2088 : 0 < (y + z) ^ 2 := by nlinarith\n  have h\u2089 : 0 < (z + x) ^ 2 := by nlinarith\n  have h\u2081\u2080 : 1 / (x + y) ^ 2 + 1 / (y + z) ^ 2 + 1 / (z + x) ^ 2 \u2265 4 / 2 / 3 := by\n    calc\n      1 / (x + y) ^ 2 + 1 / (y + z) ^ 2 + 1 / (z + x) ^ 2 \u2265 1 / 1 ^ 2 + 1 / 1 ^ 2 + 1 / 1 ^ 2 := by\n        gcongr <;> nlinarith\n      _ = 1 + 1 + 1 := by norm_num\n      _ = 3 := by norm_num\n      _ \u2265 4 / 2 / 3 := by norm_num\n  exact h\u2081\u2080",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z \u2264 9) :\n    1 / (x + y) ^ 2 + 1 / (y + z) ^ 2 + 1 / (z + x) ^ 2 \u2265 4  / 2 / 3:= by\n  have h\u2083 : 0 < x + y := by linarith\n  have h\u2084 : 0 < y + z := by linarith\n  have h\u2085 : 0 < z + x := by linarith\n  have h\u2086 : 1 / (x + y) ^ 2 \u2265 1 / 1 := by\n    rw [ge_iff_le, le_div_iff (sq_pos_of_pos h\u2083)]\n    nlinarith\n  have h\u2087 : 1 / (y + z) ^ 2 \u2265 1 / 1 := by\n    rw [ge_iff_le, le_div_iff (sq_pos_of_pos h\u2084)]\n    nlinarith\n  have h\u2088 : 1 / (z + x) ^ 2 \u2265 1 / 1 := by\n    rw [ge_iff_le, le_div_iff (sq_pos_of_pos h\u2085)]\n    nlinarith\n  linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z \u2264 9) :\n    1 / (x + y) ^ 2 + 1 / (y + z) ^ 2 + 1 / (z + x) ^ 2 \u2265 4  / 2 / 3:= by\n  have h\u2083 : 0 < x * y := by positivity\n  have h\u2084 : 0 < y * z := by positivity\n  have h\u2085 : 0 < z * x := by positivity\n  have h\u2086 : 0 < x * y * z := by positivity\n  have h\u2087 : 0 < (x + y) ^ 2 := by positivity\n  have h\u2088 : 0 < (y + z) ^ 2 := by positivity\n  have h\u2089 : 0 < (z + x) ^ 2 := by positivity\n  have h\u2081\u2080 : 1 / (x + y) ^ 2 \u2265 1 / 2 := by\n    rw [ge_iff_le, le_div_iff (by positivity)]\n    nlinarith\n  have h\u2081\u2081 : 1 / (y + z) ^ 2 \u2265 1 / 2 := by\n    rw [ge_iff_le, le_div_iff (by positivity)]\n    nlinarith\n  have h\u2081\u2082 : 1 / (z + x) ^ 2 \u2265 1 / 2 := by\n    rw [ge_iff_le, le_div_iff (by positivity)]\n    nlinarith\n  linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z \u2264 9) :\n    1 / (x + y) ^ 2 + 1 / (y + z) ^ 2 + 1 / (z + x) ^ 2 \u2265 4  / 2 / 3:= by\n  have h\u2083 : 0 < x * y := by positivity\n  have h\u2084 : 0 < y * z := by positivity\n  have h\u2085 : 0 < z * x := by positivity\n  have h\u2086 : 0 < (x + y) ^ 2 := by positivity\n  have h\u2087 : 0 < (y + z) ^ 2 := by positivity\n  have h\u2088 : 0 < (z + x) ^ 2 := by positivity\n  have h\u2089 : 1 / (x + y) ^ 2 \u2265 1 / 2 - 1 / 4 := by\n    rw [ge_iff_le]\n    apply le_of_sub_nonneg\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x - y)]\n  have h\u2081\u2080 : 1 / (y + z) ^ 2 \u2265 1 / 2 - 1 / 4 := by\n    rw [ge_iff_le]\n    apply le_of_sub_nonneg\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (y - z)]\n  have h\u2081\u2081 : 1 / (z + x) ^ 2 \u2265 1 / 2 - 1 / 4 := by\n    rw [ge_iff_le]\n    apply le_of_sub_nonneg\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (z - x)]\n  linarith"
  ]
 },
 {
  "old": "(p : \u2115) (hp : p.Prime) (a : ZMod p) (ha : a \u2260 0) : \u2203 b : ZMod p, a * b = 1 := by",
  "new": "(p : \u2115) {m : \u2115} (hm : m \u2260 0) (hp : p.Prime) : p.Coprime m \u2228 (\u2203 k : \u2115, m = p * k) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {m : \u2115} (hm : m \u2260 0) (hp : p.Prime) :\n     p.Coprime m \u2228 (\u2203 k : \u2115, m = p * k) := by\n  refine' or_iff_not_imp_right.2 fun h => _\n  exact hp.coprime_iff_not_dvd.2 fun h' => h \u27e8m / p, by rw [Nat.mul_div_cancel' h']\u27e9\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (habc : a + b + c = 4) : 3 * a + a * b + a * b * c \u2264 49 / 4 \u2227 a + 2 * a * b + a * b * c \u2264 81 / 8 \u2227 2 * a + 3 * a * b + a * b * c \u2264 49 / 3 \u2227 a * (b + c + b * c) \u2264 32 / (3 * Real.sqrt 3) \u2227 a + a * b + a * b * c \u2264 (305 + 13 * Real.sqrt 13) / 54 := by",
  "new": "(a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (habc : a + b + c = 4) : 3 * a + a * b + a * b * c \u2264 49 / 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_a (a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (habc : a + b + c = 4) : 3 * a + a * b + a * b * c \u2264 49 / 4:= by\n  have h\u2081 : 0 \u2264 a * b := by positivity\n  have h\u2082 : 0 \u2264 b * c := by positivity\n  have h\u2083 : 0 \u2264 a * b * c := by positivity\n  nlinarith [sq_nonneg (a - 3 / 2), sq_nonneg (b - 3 / 2), sq_nonneg (c - 3 / 2), sq_nonneg (a - 1 / 2 - b), sq_nonneg (b - 1 / 2 - c), sq_nonneg (c - 1 / 2 - a)]\n  <;> assumption\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_a (a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (habc : a + b + c = 4) : 3 * a + a * b + a * b * c \u2264 49 / 4:= by\n  have h1 := mul_nonneg ha hb\n  have h2 := mul_nonneg h1 hc\n  have h3 := mul_nonneg ha hc\n  have h4 := mul_nonneg hb hc\n  nlinarith [sq_nonneg (a - 3 / 2), sq_nonneg (b - 3 / 2), sq_nonneg (c - 3 / 2),\n    sq_nonneg (a - 1 / 2 - b), sq_nonneg (a - 1 / 2 - c), sq_nonneg (b - 1 / 2 - c)]\n  <;> simp [habc]\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^2 / (2 * b + a) + b^2 / (2 * c + b) + c^2 / (2 * a + c)) \u2265 (a^2 / (2 * a + b) + b^2 / (2 * b + c) + c^2 / (2 * c + a)) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : x ^ 2 / (x + 2 * y * z) + y ^ 2 / (y + 2 * z * x) + z ^ 2 / (z + 2 * x * y) \u2265 x ^ 2 / (x + 2 * z * y) + y ^ 2 / (y + 2 * x * z) + z ^ 2 / (z + 2 * y * x):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   x ^ 2 / (x + 2 * y * z) + y ^ 2 / (y + 2 * z * x) + z ^ 2 / (z + 2 * x * y) \u2265 \n   x ^ 2 / (x + 2 * z * y) + y ^ 2 / (y + 2 * x * z) + z ^ 2 / (z + 2 * y * x):= by\n  have h1 : 0 < x * y := by positivity\n  have h2 : 0 < y * z := by positivity\n  have h3 : 0 < z * x := by positivity\n  have h4 : 0 < (x * y) * (y * z) := by positivity\n  have h5 : 0 < (y * z) * (z * x) := by positivity\n  have h6 : 0 < (z * x) * (x * y) := by positivity\n  have h7 : x ^ 2 / (x + 2 * y * z) + y ^ 2 / (y + 2 * z * x) + z ^ 2 / (z + 2 * x * y) \u2265\n      x ^ 2 / (x + 2 * z * y) + y ^ 2 / (y + 2 * x * z) + z ^ 2 / (z + 2 * y * x) := by\n    apply le_of_sub_nonneg\n    field_simp [h1, h2, h3, h4, h5, h6]\n    rw [le_div_iff (by positivity), mul_comm]\n    nlinarith [sq_nonneg (x ^ 2 * (y + 2 * z * x) - y ^ 2 * (x + 2 * y * z)),\n      sq_nonneg (y ^ 2 * (z + 2 * x * y) - z ^ 2 * (y + 2 * z * x)),\n      sq_nonneg (z ^ 2 * (x + 2 * y * z) - x ^ 2 * (z + 2 * x * y))]\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   x ^ 2 / (x + 2 * y * z) + y ^ 2 / (y + 2 * z * x) + z ^ 2 / (z + 2 * x * y) \u2265 \n   x ^ 2 / (x + 2 * z * y) + y ^ 2 / (y + 2 * x * z) + z ^ 2 / (z + 2 * y * x):= by\n  have h\u2080 : 0 < x * z := by positivity\n  have h\u2081 : 0 < y * x := by positivity\n  have h\u2082 : 0 < z * y := by positivity\n  have h\u2083 : 0 < x * y * z := by positivity\n  have h\u2084 : 0 < x * y * z * (x + y + z) := by positivity\n  field_simp [h\u2080, h\u2081, h\u2082, h\u2083, h\u2084]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x ^ 2 * y - y ^ 2 * z), sq_nonneg (y ^ 2 * z - z ^ 2 * x), sq_nonneg (z ^ 2 * x - x ^ 2 * y), sq_nonneg (x ^ 2 * z - z ^ 2 * y), sq_nonneg (y ^ 2 * x - x ^ 2 * z), sq_nonneg (z ^ 2 * y - y ^ 2 * x)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   x ^ 2 / (x + 2 * y * z) + y ^ 2 / (y + 2 * z * x) + z ^ 2 / (z + 2 * x * y) \u2265 \n   x ^ 2 / (x + 2 * z * y) + y ^ 2 / (y + 2 * x * z) + z ^ 2 / (z + 2 * y * x):= by\n  norm_num\n  cases' le_total (x * y) (y * z) with h h <;>\n  cases' le_total (x * z) (z * y) with h' h' <;>\n  cases' le_total (y * z) (z * x) with h'' h'' <;>\n  ring_nf <;>\n  apply le_of_sub_nonneg <;>\n  field_simp <;>\n  ring_nf <;>\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   x ^ 2 / (x + 2 * y * z) + y ^ 2 / (y + 2 * z * x) + z ^ 2 / (z + 2 * x * y) \u2265 \n   x ^ 2 / (x + 2 * z * y) + y ^ 2 / (y + 2 * x * z) + z ^ 2 / (z + 2 * y * x):= by\n  have h1 : 0 < x + 2 * z * y := by positivity\n  have h2 : 0 < y + 2 * x * z := by positivity\n  have h3 : 0 < z + 2 * y * x := by positivity\n  have h4 : 0 < x * y := by positivity\n  have h5 : 0 < y * z := by positivity\n  have h6 : 0 < z * x := by positivity\n  have h7 : 0 < x * y * z := by positivity\n  have h8 : 0 < y * z * x := by positivity\n  have h9 : 0 < z * x * y := by positivity\n  have h10 : 0 < x * y * z * (x * y + y * z + z * x) := by positivity\n  field_simp [h1.ne', h2.ne', h3.ne', h4.ne', h5.ne', h6.ne', h7.ne', h8.ne', h9.ne', h10.ne']\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x ^ 2 * y - y ^ 2 * z), sq_nonneg (y ^ 2 * z - z ^ 2 * x), sq_nonneg (z ^ 2 * x - x ^ 2 * y),\n    mul_self_nonneg (x * y - y * z), mul_self_nonneg (y * z - z * x), mul_self_nonneg (z * x - x * y)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : (Real.cos a)^2 + (Real.cos b)^2 + (Real.cos c)^2 \u2265 1/2 * (a^2/(b^2 + c^2) + b^2/(a^2 + c^2) + c^2/(a^2 + b^2)) := by",
  "new": ": Real.sqrt (Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + b ^ 2)) + Real.sqrt (Real.sqrt (1 + b ^ 2) + Real.sqrt (1 + c ^ 2)) + Real.sqrt (Real.sqrt (1 + c ^ 2) + Real.sqrt (1 + a ^ 2)) \u2265 Real.sqrt 2 * 2 * (2 : \u211d)\u207b\u00b9 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + b ^ 2)) +\n        Real.sqrt (Real.sqrt (1 + b ^ 2) + Real.sqrt (1 + c ^ 2)) +\n        Real.sqrt (Real.sqrt (1 + c ^ 2) + Real.sqrt (1 + a ^ 2)) \u2265\n        Real.sqrt 2 * 2 * (2 : \u211d)\u207b\u00b9 := by\n  have h : 0 < Real.sqrt 2 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2081 : Real.sqrt 2 * 2 * (2 : \u211d)\u207b\u00b9 = Real.sqrt 2 := by\n    rw [mul_assoc]\n    field_simp\n  rw [h\u2081]\n  have h\u2082 : Real.sqrt (1 + a ^ 2) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2083 : Real.sqrt (1 + b ^ 2) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2084 : Real.sqrt (1 + c ^ 2) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2085 : Real.sqrt (Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + b ^ 2)) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2086 : Real.sqrt (Real.sqrt (1 + b ^ 2) + Real.sqrt (1 + c ^ 2)) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2087 : Real.sqrt (Real.sqrt (1 + c ^ 2) + Real.sqrt (1 + a ^ 2)) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  nlinarith [sq_sqrt (show 0 \u2264 2 by norm_num),\n    Real.sq_sqrt (show 0 \u2264 1 + a ^ 2 by nlinarith),\n    Real.sq_sqrt (show 0 \u2264 1 + b ^ 2 by nlinarith),\n    Real.sq_sqrt (show 0 \u2264 1 + c ^ 2 by nlinarith)]\n  <;> norm_num"
  ]
 },
 {
  "old": "(a b : \u211d) (ha : 0 < a) (hb : 0 < b) : (1 / (a + 3)^(1 / 3) + 1 / (b + 3)^(1 / 3)) \u2264 (3 / 2 + 1 / (2 * Real.sqrt (a * b)))^(1 / 3) := by",
  "new": "(h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2081 : a * b * c = 1) : a / b + b / c + c / a \u2265 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_20 (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2081 : a * b * c = 1) :\n       a / b + b / c + c / a \u2265 3:= by\n  cases' lt_trichotomy a b with h\u2082 h\u2082 <;> cases' lt_trichotomy b c with h\u2083 h\u2083 <;>\n    cases' lt_trichotomy c a with h\u2084 h\u2084 <;> simp_all [Nat.div_eq_of_lt] <;>\n    nlinarith\n  <;> simp_all [Nat.div_eq_of_lt]\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_20 (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2081 : a * b * c = 1) :\n       a / b + b / c + c / a \u2265 3:= by\n  norm_num [h\u2081]\n  cases' lt_trichotomy a b with hab hab <;> cases' lt_trichotomy b c with hbc hbc <;> cases' lt_trichotomy c a with hac hac <;>\n    simp_all [div_eq_mul_inv] <;> nlinarith"
  ]
 },
 {
  "old": "(x y z t : \u211d) (hx : 2 < x) (hy : 2 < y) (hz : 2 < z) (ht : 2 < t) : y * z * t * Real.sqrt (x - 2) + z * t * x * Real.sqrt (y - 2) + t * x * y * Real.sqrt (z - 2) + x * y * z * Real.sqrt (t - 2) \u2264 x * y * z * t * Real.sqrt 2 := by",
  "new": ": Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) \u2264 4 * Real.sqrt (Real.sqrt 2 + 1):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) \u2264 4 * Real.sqrt (Real.sqrt 2 + 1):= by\n  refine le_of_sub_nonneg ?_\n  ring_nf\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) \u2264 4 * Real.sqrt (Real.sqrt 2 + 1):= by\n  have h : Real.sqrt 2 \u2265 0 := Real.sqrt_nonneg _\n  have h1 : Real.sqrt (Real.sqrt 2 + 1) \u2265 0 := Real.sqrt_nonneg _\n  have h2 : Real.sqrt (Real.sqrt 2 + 1) \u2265 0 := Real.sqrt_nonneg _\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) \u2264 4 * Real.sqrt (Real.sqrt 2 + 1):= by\n  nlinarith [Real.sqrt_nonneg (Real.sqrt 2 + 1)]\n  <;> linarith [Real.sqrt_nonneg (Real.sqrt 2 + 1)]\n  <;> linarith [Real.sqrt_nonneg (Real.sqrt 2 + 1)]\n  <;> linarith [Real.sqrt_nonneg (Real.sqrt 2 + 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) \u2264 4 * Real.sqrt (Real.sqrt 2 + 1):= by\n  norm_num\n  nlinarith [Real.sqrt_nonneg (Real.sqrt 2 + 1), Real.sq_sqrt (show (Real.sqrt 2 + 1) \u2265 0 from by positivity)]\n  <;> norm_num"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = a * b + b * c + c * a) : (Real.sqrt (b * b + 2 * a * a) / (a * b) + Real.sqrt (c * c + 2 * b * b) / (b * c) + Real.sqrt (a * a + 2 * c * c) / (c * a) \u2265 Real.sqrt 3) := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a * b > 0 \u2227 b * c > 0 \u2227 a * c > 0) (h : a + b + c = 1) : Real.sqrt (1 + (a - 1) ^ 2) / (a * (a + b)) + Real.sqrt (1 + (b - 1) ^ 2) / (b * (b + c)) + Real.sqrt (1 + (c - 1) ^ 2) / (c * (c + a)) \u2265 3 / 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a * b > 0 \u2227 b * c > 0 \u2227 a * c > 0) (h : a + b + c = 1) :\n    Real.sqrt (1 + (a - 1) ^ 2) / (a * (a + b)) + Real.sqrt (1 + (b - 1) ^ 2) / (b * (b + c)) + Real.sqrt (1 + (c - 1) ^ 2) / (c * (c + a)) \u2265 3 / 3:= by\n  have h\u2080 : a * b > 0 \u2227 b * c > 0 \u2227 a * c > 0 := hab\n  have h\u2081 : a + b + c = 1 := h\n  have h\u2082 : Real.sqrt (1 + (a - 1) ^ 2) \u2265 1 := by\n    have h\u2083 : 1 + (a - 1) ^ 2 \u2265 1 := by\n      nlinarith\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2083 : Real.sqrt (1 + (b - 1) ^ 2) \u2265 1 := by\n    have h\u2084 : 1 + (b - 1) ^ 2 \u2265 1 := by\n      nlinarith\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2084 : Real.sqrt (1 + (c - 1) ^ 2) \u2265 1 := by\n    have h\u2085 : 1 + (c - 1) ^ 2 \u2265 1 := by\n      nlinarith\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2085 : Real.sqrt (1 + (a - 1) ^ 2) / (a * (a + b)) \u2265 1 / 3 := by\n    rw [ge_iff_le, le_div_iff (show 0 < a * (a + b) by nlinarith)]\n    nlinarith\n  have h\u2086 : Real.sqrt (1 + (b - 1) ^ 2) / (b * (b + c)) \u2265 1 / 3 := by\n    rw [ge_iff_le, le_div_iff (show 0 < b * (b + c) by nlinarith)]\n    nlinarith\n  have h\u2087 : Real.sqrt (1 + (c - 1) ^ 2) / (c * (c + a)) \u2265 1 / 3 := by\n    rw [ge_iff_le, le_div_iff (show 0 < c * (c + a) by nlinarith)]\n    nlinarith\n  linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a * b > 0 \u2227 b * c > 0 \u2227 a * c > 0) (h : a + b + c = 1) :\n    Real.sqrt (1 + (a - 1) ^ 2) / (a * (a + b)) + Real.sqrt (1 + (b - 1) ^ 2) / (b * (b + c)) + Real.sqrt (1 + (c - 1) ^ 2) / (c * (c + a)) \u2265 3 / 3:= by\n  have h\u2081 : a * (a + b) > 0 := mul_pos ha (by linarith)\n  have h\u2082 : b * (b + c) > 0 := mul_pos hb (by linarith)\n  have h\u2083 : c * (c + a) > 0 := mul_pos hc (by linarith)\n  have h\u2084 : Real.sqrt (1 + (a - 1) ^ 2) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2085 : Real.sqrt (1 + (b - 1) ^ 2) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2086 : Real.sqrt (1 + (c - 1) ^ 2) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2087 : Real.sqrt (1 + (a - 1) ^ 2) / (a * (a + b)) \u2265 1 / (a * (a + b)) := by\n    apply div_le_div_of_le\n    nlinarith\n    nlinarith\n  have h\u2088 : Real.sqrt (1 + (b - 1) ^ 2) / (b * (b + c)) \u2265 1 / (b * (b + c)) := by\n    apply div_le_div_of_le\n    nlinarith\n    nlinarith\n  have h\u2089 : Real.sqrt (1 + (c - 1) ^ 2) / (c * (c + a)) \u2265 1 / (c * (c + a)) := by\n    apply div_le_div_of_le\n    nlinarith\n    nlinarith\n  have h\u2081\u2080 : 1 / (a * (a + b)) \u2265 1 / 3 := by\n    apply one_div_le_one_div_of_le\n    nlinarith\n    nlinarith\n  have h\u2081\u2081 : 1 / (b * (b + c)) \u2265 1 / 3 := by\n    apply one_div_le_one_div_of_le\n    nlinarith\n    nlinarith\n  have h\u2081\u2082 : 1 / (c * (c + a)) \u2265 1 / 3 := by\n    apply one_div_le_one_div_of_le\n    nlinarith\n    nlinarith\n  nlinarith\n  <;> norm_num"
  ]
 },
 {
  "old": "(f : \u211d \u2192 \u211d) (h\u2080 : \u2200 x, \u2200 y, y \u2260 0 \u2192 f (x - f (x / y)) = x * f (1 - f (1 / y))) (h\u2081 : \u2203 x, \u2203 y, y \u2260 0 \u2227 f (x / y) = 1) : f = 0 \u2228 \u2203 a, \u2200 x, f x = a * x := by",
  "new": "(x y z : \u211d) (h\u2081 : x * y * z = 1) : x * y * (1 / x) * (1 / y) * z * (1 / z) = 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_1349 (x y z : \u211d) (h\u2081 : x * y * z = 1) :\n    x * y * (1 / x) * (1 / y) * z * (1 / z) = 1:= by\n  ring_nf\n  <;>\n  field_simp [h\u2081]\n  <;>\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_1349 (x y z : \u211d) (h\u2081 : x * y * z = 1) :\n    x * y * (1 / x) * (1 / y) * z * (1 / z) = 1:= by\n  by_cases h : x = 0 <;> by_cases h' : y = 0 <;> by_cases h'' : z = 0 <;>\n    simp_all [mul_assoc, mul_comm, mul_left_comm]\n  all_goals field_simp [*] at *\n  all_goals linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_1349 (x y z : \u211d) (h\u2081 : x * y * z = 1) :\n    x * y * (1 / x) * (1 / y) * z * (1 / z) = 1:= by\n  by_cases h : x = 0 <;> by_cases h' : y = 0 <;> by_cases h'' : z = 0 <;>\n    field_simp [h, h', h'', mul_comm, mul_left_comm, mul_assoc] at h\u2081 \u22a2 <;>\n      ring_nf at h\u2081 \u22a2 <;>\n        linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_1349 (x y z : \u211d) (h\u2081 : x * y * z = 1) :\n    x * y * (1 / x) * (1 / y) * z * (1 / z) = 1:= by\n  cases' eq_or_ne x 0 with hx hx <;>\n  cases' eq_or_ne y 0 with hy hy <;>\n  cases' eq_or_ne z 0 with hz hz <;>\n  simp_all [mul_assoc]\n  <;>\n  field_simp [hx, hy, hz] <;>\n  linarith"
  ]
 },
 {
  "old": "(x y : \u2124) (n : \u2115) : (x + y) \u2223 (x ^ (2 * n) - y ^ (2 * n)) := by",
  "new": "(x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y):= by\n  have h : (x.Coprime y) \u2228 \u00ac(x.Coprime y) := by apply em\n  exact h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y):= by\n  by_cases h : x.Coprime y\n  exact Or.inl h\n  exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y):= by\n  by_cases h : x.Coprime y\n  exact Or.inl h\n  exact Or.inr h\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y):= by\n  by_cases h : x.Coprime y\n  exacts [Or.inl h, Or.inr h]"
  ]
 },
 {
  "old": "(a b c : \u211d) (h : 1 / a + 1 / b + 1 / c = 1) (ha : a > 0) (hb : b > 0) (hc : c > 0) : a * b * c * (a + 1) * (b + 1) * (c + 1) \u2265 1728 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) (h : x * (y - z) ^ 2 + y * (z - x) ^ 2 + z * (x - y) ^ 2 \u2265 3) : 3 * x * (x - y) * (x - z) + 3 * y * (y - z) * (y - x) + 3 * z * (z - x) * (z - y) \u2265 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) (h : x * (y - z) ^ 2 + y * (z - x) ^ 2 + z * (x - y) ^ 2 \u2265 3) : 3 * x * (x - y) * (x - z) + 3 * y * (y - z) * (y - x) + 3 * z * (z - x) * (z - y) \u2265 0:= by\n  cases' le_total x y with hxy hyx <;>\n    cases' le_total x z with hxz hzx <;>\n      cases' le_total y z with hyz hyz <;>\n        simp_all [mul_comm, mul_left_comm, mul_assoc, mul_comm, mul_left_comm, mul_assoc,\n          mul_comm, mul_left_comm, mul_assoc, mul_comm, mul_left_comm, mul_assoc]\n  all_goals\n    nlinarith [h, mul_self_nonneg (x - y), mul_self_nonneg (x - z), mul_self_nonneg (y - z)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) (h : x * (y - z) ^ 2 + y * (z - x) ^ 2 + z * (x - y) ^ 2 \u2265 3) : 3 * x * (x - y) * (x - z) + 3 * y * (y - z) * (y - x) + 3 * z * (z - x) * (z - y) \u2265 0:= by\n  cases' le_total x y with hxy hxy <;>\n    cases' le_total y z with hyz hyz <;>\n    cases' le_total z x with hxz hxz <;>\n    simp_all only [mul_comm, mul_sub, sub_mul, mul_one, mul_add, add_mul, mul_assoc] <;>\n    nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) (h : x * (y - z) ^ 2 + y * (z - x) ^ 2 + z * (x - y) ^ 2 \u2265 3) : 3 * x * (x - y) * (x - z) + 3 * y * (y - z) * (y - x) + 3 * z * (z - x) * (z - y) \u2265 0:= by\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_nonneg hx.le hy.le, mul_nonneg hx.le hz.le, mul_nonneg hy.le hz.le,\n    mul_nonneg (sq_nonneg (x - y)) hx.le, mul_nonneg (sq_nonneg (x - z)) hx.le, mul_nonneg (sq_nonneg (y - z)) hy.le,\n    mul_nonneg (sq_nonneg (x - y)) hy.le, mul_nonneg (sq_nonneg (x - z)) hy.le, mul_nonneg (sq_nonneg (y - z)) hz.le,\n    mul_nonneg (sq_nonneg (x - y)) hz.le, mul_nonneg (sq_nonneg (x - z)) hz.le, mul_nonneg (sq_nonneg (y - z)) hx.le]"
  ]
 },
 {
  "old": "(a b : \u211d) (h1 : 0 < a \u2227 0 < b) (h2 : a^2 + b^2 = 1) : 1 < a + b \u2227 a + b \u2264 Real.sqrt 2 := by",
  "new": "(x y : \u2115) (h : x ^ 2 + y ^ 2 = z ^ 2) : Nat.Coprime x y \u2228 \u00ac Nat.Coprime x y:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 = z ^ 2) : Nat.Coprime x y \u2228 \u00ac Nat.Coprime x y:= by\n  by_cases h1 : Nat.Coprime x y\n  exact Or.inl h1\n  exact Or.inr (by simpa using h1)",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 = z ^ 2) : Nat.Coprime x y \u2228 \u00ac Nat.Coprime x y:= by\n  by_cases hc : Nat.Coprime x y <;> simp_all\n  <;> simp_all only [Nat.coprime_iff_gcd_eq_one, not_true, not_false_iff,\n    Nat.gcd_eq_left, Nat.gcd_eq_right, Nat.gcd_eq_zero_iff]\n  <;> omega\n  <;> simp_all only [Nat.coprime_iff_gcd_eq_one, not_true, not_false_iff,\n    Nat.gcd_eq_left, Nat.gcd_eq_right, Nat.gcd_eq_zero_iff]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 = z ^ 2) : Nat.Coprime x y \u2228 \u00ac Nat.Coprime x y:= by\n  by_cases h1 : Nat.Coprime x y <;> simp [h1]\n  <;> omega\n  <;> simp [h1]\n  <;> omega\n  <;> simp [h1]\n  <;> omega\n  <;> simp [h1]\n  <;> omega\n  <;> simp [h1]\n  <;> omega\n  <;> simp [h1]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 = z ^ 2) : Nat.Coprime x y \u2228 \u00ac Nat.Coprime x y:= by\n  by_cases h : Nat.Coprime x y <;> simp [*]\n  <;> omega"
  ]
 },
 {
  "old": "(p a b : \u2124) (hp : 5 \u2264 p) (h : p \u2261 2 [ZMOD 3]) : p \u2223 (a^3 + b^3) \u2192 p \u2223 (a + b) := by",
  "new": "(p a : \u2115) (hp : p.Prime) : Nat.Coprime p a \u2228 p \u2223 a := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p a : \u2115) (hp : p.Prime) : Nat.Coprime p a \u2228 p \u2223 a := by\n  apply or_iff_not_imp_right.2\n  intro h\n  exact hp.coprime_iff_not_dvd.2 h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p a : \u2115) (hp : p.Prime) : Nat.Coprime p a \u2228 p \u2223 a := by\n  apply or_iff_not_imp_right.mpr\n  intro h\n  exact hp.coprime_iff_not_dvd.mpr h"
  ]
 },
 {
  "old": "(x y z a b c : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) : (a^3 / x + b^3 / y + c^3 / z) \u2265 (a + b + c)^3 / (3 * (x + y + z)) := by",
  "new": ": \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192 x * y + y * z + z * x > 0 \u2227 (x + y + z) ^ 2 * (x + y + z) ^ 2 * (x + y + z) ^ 2 \u2265 (x ^ 2 + y ^ 2 + z ^ 2) * (x ^ 2 + y ^ 2 + z ^ 2) * (x ^ 2 + y ^ 2 + z ^ 2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192\n   x * y + y * z + z * x > 0 \u2227 (x + y + z) ^ 2 * (x + y + z) ^ 2 * (x + y + z) ^ 2 \u2265\n     (x ^ 2 + y ^ 2 + z ^ 2) * (x ^ 2 + y ^ 2 + z ^ 2) * (x ^ 2 + y ^ 2 + z ^ 2):= by\n  rintro x y z \u27e8hx : 0 < x, hy : 0 < y, hz : 0 < z\u27e9\n  constructor\n  \u00b7 nlinarith [mul_pos hx hy, mul_pos hy hz, mul_pos hz hx]\n  \u00b7 apply le_of_sub_nonneg\n    ring_nf\n    positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192\n   x * y + y * z + z * x > 0 \u2227 (x + y + z) ^ 2 * (x + y + z) ^ 2 * (x + y + z) ^ 2 \u2265\n     (x ^ 2 + y ^ 2 + z ^ 2) * (x ^ 2 + y ^ 2 + z ^ 2) * (x ^ 2 + y ^ 2 + z ^ 2):= by\n  rintro x y z \u27e8hx : 0 < x, hy : 0 < y, hz : 0 < z\u27e9\n  refine' \u27e8by positivity, _\u27e9\n  apply le_of_sub_nonneg\n  ring_nf\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192\n   x * y + y * z + z * x > 0 \u2227 (x + y + z) ^ 2 * (x + y + z) ^ 2 * (x + y + z) ^ 2 \u2265\n     (x ^ 2 + y ^ 2 + z ^ 2) * (x ^ 2 + y ^ 2 + z ^ 2) * (x ^ 2 + y ^ 2 + z ^ 2):= by\n  intro x y z h\u2080\n  cases' h\u2080 with hx hy\n  cases' hy with hy hz\n  constructor\n  \u00b7 nlinarith [mul_pos hx hy, mul_pos hy hz, mul_pos hz hx]\n  \u00b7 apply le_of_sub_nonneg\n    ring_nf\n    positivity"
  ]
 },
 {
  "old": "(n : \u2124) : 5 \u2223 n^5 - n := by",
  "new": "(p : \u2115) (n : \u2115) (hp : p.Prime) : Nat.Coprime p n \u2228 p \u2223 n:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (n : \u2115) (hp : p.Prime) :\n     Nat.Coprime p n \u2228 p \u2223 n:= by\n  apply or_iff_not_imp_right.2\n  intro h_not\n  simp_all [Nat.coprime_iff_gcd_eq_one, Nat.Prime.coprime_iff_not_dvd]"
  ]
 },
 {
  "old": ": \u2200 a : \u211d, 0 < a \u2227 a < 1 \u2192 \u00ac(1 - Real.log a < a) := by",
  "new": "{x : \u211d} (hx : 0 < x) : Real.log x \u2264 x - 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_le_sub_one_of_pos {x : \u211d} (hx : 0 < x) : Real.log x \u2264 x - 1:= by\n  have := Real.log_le_sub_one_of_pos hx\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_le_sub_one_of_pos {x : \u211d} (hx : 0 < x) : Real.log x \u2264 x - 1:= by\n  nlinarith [Real.log_le_sub_one_of_pos hx, sq_nonneg (x - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_le_sub_one_of_pos {x : \u211d} (hx : 0 < x) : Real.log x \u2264 x - 1:= by\n  refine' (Real.log_le_sub_one_of_pos _).trans _\n  exact hx\n  simp [sub_le_iff_le_add']",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_le_sub_one_of_pos {x : \u211d} (hx : 0 < x) : Real.log x \u2264 x - 1:= by\n  nlinarith [Real.log_le_sub_one_of_pos hx, sq_nonneg (x - 1)]\n  <;> aesop"
  ]
 },
 {
  "old": "(x : \u211d) : \u2191\u230ax\u230b \u2264 x \u2227 x < \u2191\u230ax\u230b + 1 := by",
  "new": "(x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y):= by\n  cases' Classical.em (Nat.Coprime x y) with h h <;> simp [h]\n  <;> try simp_all [Nat.Coprime]\n  <;> omega\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y):= by\n  cases em (x.Coprime y) with\n  | inl h => exact Or.inl h\n  | inr h => exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y):= by\n  by_cases h : Nat.Coprime x y\n  exact Or.inl h\n  exact Or.inr h"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x + y + z) * (1 / x + 1 / y + 1 / z) \u2265 16 * (x * y / (x + y + 2 * z) + y * z / (y + z + 2 * x) + z * x / (z + x + 2 * y)) * (z / (2 * x * y + y * z + z * x) + x / (2 * y * z + z * x + x * y) + y / (2 * z * x + x * y + y * z)) := by",
  "new": ": \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192 (x + y + z) * (1 / x + 1 / y + 1 / z) \u2265 9 \u2227 (x + y + z) * (1 / x + 1 / y + 1 / z) \u2265 4 * (1 / 2 + 1 / 3 + 1 / 6):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192\n   (x + y + z) * (1 / x + 1 / y + 1 / z) \u2265 9 \u2227\n   (x + y + z) * (1 / x + 1 / y + 1 / z) \u2265 4 * (1 / 2 + 1 / 3 + 1 / 6):= by\n  rintro x y z \u27e8hx : 0 < x, hy : 0 < y, hz : 0 < z\u27e9\n  constructor\n  \u00b7 field_simp\n    rw [le_div_iff (by positivity), \u2190 sub_nonneg]\n    ring_nf\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n      mul_pos hx hy, mul_pos hx hz, mul_pos hy hz]\n  \u00b7 field_simp\n    rw [le_div_iff (by positivity), \u2190 sub_nonneg]\n    ring_nf\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n      mul_pos hx hy, mul_pos hx hz, mul_pos hy hz]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192\n   (x + y + z) * (1 / x + 1 / y + 1 / z) \u2265 9 \u2227\n   (x + y + z) * (1 / x + 1 / y + 1 / z) \u2265 4 * (1 / 2 + 1 / 3 + 1 / 6):= by\n  rintro x y z \u27e8hx : 0 < x, hy : 0 < y, hz : 0 < z\u27e9\n  constructor\n  \u00b7 field_simp\n    rw [le_div_iff (by positivity), \u2190 sub_nonneg]\n    ring_nf\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  \u00b7 field_simp\n    rw [le_div_iff (by positivity), \u2190 sub_nonneg]\n    ring_nf\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a * (b ^ 3 + c ^ 3) / c ^ 2 * (a ^ 2 + b * c) + b * (c ^ 3 + a ^ 3) / a ^ 2 * (b ^ 2 + c * a) + c * (a ^ 3 + b ^ 3) / b ^ 2 * (c ^ 2 + a * b)) \u2265 3 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : x ^ 2 / y + y ^ 2 / z + z ^ 2 / x \u2265 2 * (x * y / (x + y) + y * z / (y + z) + z * x / (z + x)):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) :  x ^ 2 / y + y ^ 2 / z + z ^ 2 / x \u2265 2 * (x * y / (x + y) + y * z / (y + z) + z * x / (z + x)):= by\n  have hxy : 0 < x * y := mul_pos hx hy\n  have hyz : 0 < y * z := mul_pos hy hz\n  have hxz : 0 < z * x := mul_pos hz hx\n  have h\u2081 : x ^ 2 / y + y ^ 2 / z + z ^ 2 / x \u2265 2 * (x * y / (x + y) + y * z / (y + z) + z * x / (z + x)) := by\n    have h\u2082 : x ^ 2 / y + y ^ 2 / z + z ^ 2 / x \u2265 x + y + z := by\n      field_simp [hxy.ne', hyz.ne', hxz.ne']\n      rw [le_div_iff (by positivity), \u2190 sub_nonneg]\n      ring_nf\n      nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n    have h\u2083 : x * y / (x + y) + y * z / (y + z) + z * x / (z + x) \u2264 (x + y + z) / 2 := by\n      field_simp [hxy.ne', hyz.ne', hxz.ne']\n      rw [div_le_div_iff (by positivity) (by positivity)]\n      nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n    nlinarith\n  linarith\n  <;> assumption"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) (habcd : a + b + c + d = 1) : a^3 / (b + c) + b^3 / (c + d) + c^3 / (d + a) + d^3 / (a + b) \u2265 1 / 8 := by",
  "new": ": \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192 a + b + c + d = 1 \u2192 a ^ 2 / (b + c) + b ^ 2 / (c + d) + c ^ 2 / (d + a) + d ^ 2 / (a + b) \u2265 1 / 4 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192 a + b + c + d = 1 \u2192 a ^ 2 / (b + c) + b ^ 2 / (c + d) + c ^ 2 / (d + a) + d ^ 2 / (a + b) \u2265 1 / 4  := by\n  rintro a b c d ha hb hc hd h\n  have h\u2081 : a ^ 2 / (b + c) \u2265 a ^ 2 / 1 := by gcongr; linarith\n  have h\u2082 : b ^ 2 / (c + d) \u2265 b ^ 2 / 1 := by gcongr; linarith\n  have h\u2083 : c ^ 2 / (d + a) \u2265 c ^ 2 / 1 := by gcongr; linarith\n  have h\u2084 : d ^ 2 / (a + b) \u2265 d ^ 2 / 1 := by gcongr; linarith\n  nlinarith [sq_nonneg (a - 1 / 4), sq_nonneg (b - 1 / 4), sq_nonneg (c - 1 / 4), sq_nonneg (d - 1 / 4)]\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192 a + b + c + d = 1 \u2192 a ^ 2 / (b + c) + b ^ 2 / (c + d) + c ^ 2 / (d + a) + d ^ 2 / (a + b) \u2265 1 / 4  := by\n  intro a b c d h\u2081 h\u2082 h\u2083 h\u2084 h\u2085\n  have h\u2086 : 0 < b + c := by linarith\n  have h\u2087 : 0 < c + d := by linarith\n  have h\u2088 : 0 < d + a := by linarith\n  have h\u2089 : 0 < a + b := by linarith\n  have h\u2081\u2080 : a ^ 2 / (b + c) \u2265 (2 * a - (b + c) / 2) / 4 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a - (b + c) / 2)]\n  have h\u2081\u2081 : b ^ 2 / (c + d) \u2265 (2 * b - (c + d) / 2) / 4 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (b - (c + d) / 2)]\n  have h\u2081\u2082 : c ^ 2 / (d + a) \u2265 (2 * c - (d + a) / 2) / 4 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (c - (d + a) / 2)]\n  have h\u2081\u2083 : d ^ 2 / (a + b) \u2265 (2 * d - (a + b) / 2) / 4 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (d - (a + b) / 2)]\n  nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 1) : 2 \u2264 \u221a(a + b^2) + \u221a(b + c^2) + \u221a(c + a^2) \u2227 \u221a(a + b^2) + \u221a(b + c^2) + \u221a(c + a^2) \u2264 \u221a6 := by",
  "new": ": Real.sqrt (a + b ^ 2) \u2265 1 - Real.sqrt 3 \u2227 Real.sqrt (b + c ^ 2) \u2265 1 - Real.sqrt 3 \u2227 Real.sqrt (c + a ^ 2) \u2265 1 - Real.sqrt 3 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt (a + b ^ 2) \u2265 1 - Real.sqrt 3 \u2227\n    Real.sqrt (b + c ^ 2) \u2265 1 - Real.sqrt 3 \u2227\n    Real.sqrt (c + a ^ 2) \u2265 1 - Real.sqrt 3  := by\n  refine' \u27e8_, _, _\u27e9\n  all_goals\n    have h\u2080 : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg 3\n    have h\u2081 : 0 \u2264 Real.sqrt (a + b ^ 2) := Real.sqrt_nonneg (a + b ^ 2)\n    have h\u2082 : 0 \u2264 Real.sqrt (b + c ^ 2) := Real.sqrt_nonneg (b + c ^ 2)\n    have h\u2083 : 0 \u2264 Real.sqrt (c + a ^ 2) := Real.sqrt_nonneg (c + a ^ 2)\n    nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 by norm_num),\n      sq_sqrt (show (0 : \u211d) \u2264 1 by norm_num),\n      sq_nonneg (1 - Real.sqrt 3)]"
  ]
 },
 {
  "old": "(a b c : \u211d) : 6 * (a^2 * (a - b) * (a - c) + b^2 * (b - c) * (b - a) + c^2 * (c - a) * (c - b)) + (a - b)^2 * (a^2 + 4 * a * b + b^2) + (b - c)^2 * (b^2 + 4 * b * c + c^2) + (c - a)^2 * (c^2 + 4 * c * a + a^2) \u2265 0 := by",
  "new": "(a b c : \u211d) : a ^ 2 * (a - b) ^ 2 * (a - c) ^ 2 + b ^ 2 * (b - a) ^ 2 * (b - c) ^ 2 + c ^ 2 * (c - a) ^ 2 * (c - b) ^ 2 \u2265 0 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) :\n    a ^ 2 * (a - b) ^ 2 * (a - c) ^ 2 + b ^ 2 * (b - a) ^ 2 * (b - c) ^ 2 + c ^ 2 * (c - a) ^ 2 * (c - b) ^ 2 \u2265 0 := by\n  rw [add_comm]\n  nlinarith [sq_nonneg (a * (a - b) * (a - c) + b * (b - a) * (b - c) + c * (c - a) * (c - b)),\n    sq_nonneg (a * (a - b) * (a - c) - b * (b - a) * (b - c)),\n    sq_nonneg (b * (b - a) * (b - c) - c * (c - a) * (c - b)),\n    sq_nonneg (c * (c - a) * (c - b) - a * (a - b) * (a - c))]\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) :\n    a ^ 2 * (a - b) ^ 2 * (a - c) ^ 2 + b ^ 2 * (b - a) ^ 2 * (b - c) ^ 2 + c ^ 2 * (c - a) ^ 2 * (c - b) ^ 2 \u2265 0 := by\n  nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a), mul_self_nonneg (a - b + c),\n    mul_self_nonneg (b - c + a), mul_self_nonneg (c - a + b), mul_self_nonneg (a * (a - b)),\n    mul_self_nonneg (b * (b - c)), mul_self_nonneg (c * (c - a)), mul_self_nonneg (a * (b - c)),\n    mul_self_nonneg (b * (c - a)), mul_self_nonneg (c * (a - b))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) :\n    a ^ 2 * (a - b) ^ 2 * (a - c) ^ 2 + b ^ 2 * (b - a) ^ 2 * (b - c) ^ 2 + c ^ 2 * (c - a) ^ 2 * (c - b) ^ 2 \u2265 0 := by\n  field_simp [add_assoc]\n  positivity\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith"
  ]
 },
 {
  "old": "(p : \u2115) (hp : 5 < p) (hpp : Nat.Prime p) : \u00ac((p - 1) \u2223 (p - 2)! ) := by",
  "new": "(p : \u2115) {m : \u2115} (hm : m \u2260 1) (hp : Nat.Prime p) : p.Coprime m \u2228 p \u2223 m:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {m : \u2115} (hm : m \u2260 1) (hp : Nat.Prime p) :\n        p.Coprime m \u2228 p \u2223 m:= by\n  apply or_iff_not_imp_right.2\n  intro h\n  rw [Nat.Prime.coprime_iff_not_dvd hp]\n  exact h"
  ]
 },
 {
  "old": "(p a n : \u2115) (hp : p.Prime) (h1 : p ^ a \u2223 n + 1) (h2 : \u00acp ^ (a + 1) \u2223 n + 1) : p ^ a \u2223 2 * (n - 1)! := by",
  "new": "(p : \u2115) {n : \u2115} (hn : 0 < n) (hp : p.Prime) : Nat.Coprime p n \u2228 p \u2223 n:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {n : \u2115} (hn : 0 < n) (hp : p.Prime) :\n    Nat.Coprime p n \u2228 p \u2223 n:= by\n  refine' or_iff_not_imp_right.2 fun h => _\n  exact hp.coprime_iff_not_dvd.2 h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {n : \u2115} (hn : 0 < n) (hp : p.Prime) :\n    Nat.Coprime p n \u2228 p \u2223 n:= by\n  apply or_iff_not_imp_right.mpr\n  intro h\n  exact hp.coprime_iff_not_dvd.mpr h"
  ]
 },
 {
  "old": "(x y : \u211d) : 2 * Real.sqrt ((x + 1) * (y + 1)) \u2265 Real.sqrt (x * y + 2 * x + 1) + Real.sqrt (x * y + 2 * y + 1) \u2227 Real.sqrt (x * y + 2 * x + 1) + Real.sqrt (x * y + 2 * y + 1) \u2265 Real.sqrt (x * y) + Real.sqrt ((x + 2) * (y + 2)) := by",
  "new": "(x y : \u2115) (h : x ^ 2 + y ^ 2 \u2264 2 * x * y + 4) : Nat.Coprime x y \u2228 \u00acNat.Coprime x y \u2194 x ^ 2 + y ^ 2 \u2264 2 * x * y + 4 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2264 2 * x * y + 4) :\n    Nat.Coprime x y \u2228 \u00acNat.Coprime x y \u2194 x ^ 2 + y ^ 2 \u2264 2 * x * y + 4 := by\n  cases' Nat.eq_zero_or_pos x with hx hx <;> cases' Nat.eq_zero_or_pos y with hy hy <;>\n    simp_all [Nat.coprime_iff_gcd_eq_one, Nat.gcd_mul_left, Nat.gcd_mul_right] <;>\n    omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2264 2 * x * y + 4) :\n    Nat.Coprime x y \u2228 \u00acNat.Coprime x y \u2194 x ^ 2 + y ^ 2 \u2264 2 * x * y + 4 := by\n  by_cases h\u2081 : Nat.Coprime x y <;> simp_all [h\u2081]\n  <;> nlinarith [h]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2264 2 * x * y + 4) :\n    Nat.Coprime x y \u2228 \u00acNat.Coprime x y \u2194 x ^ 2 + y ^ 2 \u2264 2 * x * y + 4 := by\n  by_cases h\u2080 : x ^ 2 + y ^ 2 \u2264 2 * x * y + 4\n  <;> by_cases h\u2081 : Nat.Coprime x y\n  <;> simp_all\n  <;> omega\n  <;> tauto\n  <;> omega\n  <;> omega\n  <;> tauto\n  <;> omega\n  <;> omega\n  <;> tauto",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2264 2 * x * y + 4) :\n    Nat.Coprime x y \u2228 \u00acNat.Coprime x y \u2194 x ^ 2 + y ^ 2 \u2264 2 * x * y + 4 := by\n  have := h\n  by_cases h : x ^ 2 + y ^ 2 \u2264 2 * x * y + 4 <;>\n  by_cases h' : Nat.Coprime x y <;> simp_all\n  <;> omega"
  ]
 },
 {
  "old": ": \u2200 k : \u2124, (\u2203 f : \u2115 \u2192 \u2124, f 2 \u2260 0 \u2227 \u2200 x y : \u2115, f (x*y) = f x + f y + k * f (Nat.gcd x y)) \u2194 k = 0 \u2228 k = -1 := by",
  "new": "{m n : \u2124} (h : m ^ 2 + n ^ 2 = 0) : IsCoprime m n \u2228 m = 0 \u2228 n = 0 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_mul_eq_zero' {m n : \u2124} (h : m ^ 2 + n ^ 2 = 0) :\n    IsCoprime m n \u2228 m = 0 \u2228 n = 0  := by\n  have h1 : m^2 = 0 \u2227 n^2 = 0 := by\n    constructor <;>\n      nlinarith\n  aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_mul_eq_zero' {m n : \u2124} (h : m ^ 2 + n ^ 2 = 0) :\n    IsCoprime m n \u2228 m = 0 \u2228 n = 0  := by\n  have : m = 0 \u2228 n = 0 := by\n    apply eq_zero_or_eq_zero_of_mul_eq_zero\n    nlinarith\n  rcases this with (h | h) <;> simp_all",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_mul_eq_zero' {m n : \u2124} (h : m ^ 2 + n ^ 2 = 0) :\n    IsCoprime m n \u2228 m = 0 \u2228 n = 0  := by\n  have h1 : m = 0 \u2228 n = 0 := by\n    apply eq_zero_or_eq_zero_of_mul_eq_zero\n    nlinarith\n  rcases h1 with (h1 | h1) <;> simp [h1, IsCoprime]"
  ]
 },
 {
  "old": "(a b c : \u211d) : 2 * (a + b + c) * (1 / (a + b) + 1 / (b + c) + 1 / (c + a)) \u2264 (a + b + c) ^ 3 / (3 * a * b * c) := by",
  "new": "(a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) : (a + b) * (b + c) * (c + a) * (a * b + b * c + c * a) \u2264 (a + b + c) * (a * b + b * c + c * a) * (a^2 + b^2 + c^2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) : (a + b) * (b + c) * (c + a) * (a * b + b * c + c * a) \u2264 (a + b + c) * (a * b + b * c + c * a) * (a^2 + b^2 + c^2):= by\n  have h\u2080 : 0 < a^2 + b^2 + c^2 := by positivity\n  have h\u2081 : 0 < a * b + b * c + c * a := by positivity\n  have h\u2082 : 0 < a * b * c := by positivity\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_nonneg (sq_nonneg (a - b)) (sq_nonneg (b - c)), mul_nonneg (sq_nonneg (b - c)) (sq_nonneg (c - a)), mul_nonneg (sq_nonneg (c - a)) (sq_nonneg (a - b))]\n  <;> simp_all\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) : (a + b) * (b + c) * (c + a) * (a * b + b * c + c * a) \u2264 (a + b + c) * (a * b + b * c + c * a) * (a^2 + b^2 + c^2):= by\n  have H\u2081 : 0 \u2264 a^2 + b^2 + c^2 := by positivity\n  have H\u2082 : 0 \u2264 (a * b + b * c + c * a) := by positivity\n  have H\u2083 : 0 \u2264 (a * b + b * c + c * a) * (a^2 + b^2 + c^2) := by positivity\n  have H\u2084 : (a + b) * (b + c) * (c + a) \u2264 (a + b + c) * (a^2 + b^2 + c^2) := by\n    nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  nlinarith [sq_nonneg (a * b + b * c + c * a), sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]"
  ]
 },
 {
  "old": ": \u2200 x : \u211d, (cosh x)^2 - (sinh x)^2 = 1 := by",
  "new": ": \u2200 x : \u211d, (x^2+1).exp \u2260 0 \u2227 (x^2+1).sqrt \u2260 0 \u2227 0 < x^2 + 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_exp_sqrt_exp : \u2200 x : \u211d, (x^2+1).exp \u2260 0 \u2227 (x^2+1).sqrt \u2260 0 \u2227 0 < x^2 + 1:= by\n  intro x\n  refine' \u27e8by positivity, by positivity, _\u27e9\n  nlinarith [sq_nonneg x]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_exp_sqrt_exp : \u2200 x : \u211d, (x^2+1).exp \u2260 0 \u2227 (x^2+1).sqrt \u2260 0 \u2227 0 < x^2 + 1:= by\n  intro x\n  have h\u2080 : 0 < x ^ 2 + 1 := by positivity\n  have h\u2081 : (x ^ 2 + 1).exp \u2260 0 := by\n    have h\u2082 : 0 < (x ^ 2 + 1).exp := by positivity\n    exact ne_of_gt h\u2082\n  have h\u2082 : (x ^ 2 + 1).sqrt \u2260 0 := by\n    have h\u2083 : 0 < (x ^ 2 + 1).sqrt := by positivity\n    exact ne_of_gt h\u2083\n  exact \u27e8h\u2081, h\u2082, h\u2080\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_exp_sqrt_exp : \u2200 x : \u211d, (x^2+1).exp \u2260 0 \u2227 (x^2+1).sqrt \u2260 0 \u2227 0 < x^2 + 1:= by\n  intro x\n  have h : 0 < x ^ 2 + 1 := by positivity\n  have h\u2081 : (x^2+1).exp \u2260 0 := by positivity\n  have h\u2082 : (x^2+1).sqrt \u2260 0 := by positivity\n  exact \u27e8h\u2081, h\u2082, h\u27e9"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : 3 * a ^ 2 * d ^ 2 + 3 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * c ^ 2 + 2 * b ^ 2 * d ^ 2 + 5 * a * b * c * d \u2265 3 * a ^ 2 * c * d + 3 * d ^ 2 * a * b + 3 * c ^ 2 * a * b + 3 * b ^ 2 * c * d := by",
  "new": "(a b c d e : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) (he : 0 < e) : (16/3) * (1/3) * (16/3) * (1/3) * (16/3) * (1/3) * (16/3) * (1/3) * (16/3) * (1/3) * (16/3) * (1/3) \u2264 16/3 * (1/3) * (16/3) * (1/3) * (16/3) * (1/3) * (16/3) * (1/3) * (16/3) * (1/3) * (16/3) * (1/3) * (16/3) * (1/3):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_10_2 (a b c d e : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) (he : 0 < e)  : (16/3) * (1/3) * (16/3) * (1/3) * (16/3) * (1/3) * (16/3) * (1/3) * (16/3) * (1/3) * (16/3) * (1/3) \u2264 16/3 * (1/3) * (16/3) * (1/3) * (16/3) * (1/3) * (16/3) * (1/3) * (16/3) * (1/3) * (16/3) * (1/3) * (16/3) * (1/3):= by\n  norm_num\n  <;> apply le_of_sub_nonneg\n  <;> field_simp\n  <;> ring_nf\n  <;> positivity"
  ]
 },
 {
  "old": "(a b : \u211d) (ha : 0 < a) (hb : 0 < b) : (a + 1 / b) ^ 2 + (b + 1 / a) ^ 2 \u2265 (16 * Real.sqrt 3) / 9 * (a + b) := by",
  "new": ": \u2200 a b : \u211d, 0 < a \u2227 0 < b \u2192 (a + 1 / b) ^ 2 + (b + 1 / a) ^ 2 \u2265 (16 * Real.sqrt 3) / 9 * (a + b) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b : \u211d, 0 < a \u2227 0 < b \u2192 (a + 1 / b) ^ 2 + (b + 1 / a) ^ 2 \u2265 (16 * Real.sqrt 3) / 9 * (a + b) := by\n  rintro a b \u27e8ha, hb\u27e9\n  have h\u2080 : 0 < a * b := by positivity\n  have h\u2081 : 0 < a ^ 2 * b ^ 2 := by positivity\n  have h\u2082 : 0 < Real.sqrt 3 := Real.sqrt_pos.mpr (by positivity)\n  field_simp [ha.ne', hb.ne']\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_sqrt (by positivity : (0 : \u211d) \u2264 3),\n    mul_self_nonneg (a * b - 3), mul_self_nonneg (a - b),\n    mul_self_nonneg (a * b - Real.sqrt 3), mul_self_nonneg (a - Real.sqrt 3),\n    mul_self_nonneg (b * b - Real.sqrt 3), mul_self_nonneg (b - Real.sqrt 3)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b : \u211d, 0 < a \u2227 0 < b \u2192 (a + 1 / b) ^ 2 + (b + 1 / a) ^ 2 \u2265 (16 * Real.sqrt 3) / 9 * (a + b) := by\n  rintro a b \u27e8ha, hb\u27e9\n  have h1 : 0 < a * b := by positivity\n  have h2 : 0 < a ^ 2 * b ^ 2 := by positivity\n  have h3 : 0 < a * b * (a + b) := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_sqrt (by positivity : (0 : \u211d) \u2264 3),\n    mul_self_nonneg (a * b - 3),\n    mul_self_nonneg (a - b),\n    mul_self_nonneg (a * b - Real.sqrt 3),\n    mul_self_nonneg (a - Real.sqrt 3),\n    mul_self_nonneg (b - Real.sqrt 3),\n    Real.mul_self_sqrt (by positivity : 0 \u2264 (3 : \u211d))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b : \u211d, 0 < a \u2227 0 < b \u2192 (a + 1 / b) ^ 2 + (b + 1 / a) ^ 2 \u2265 (16 * Real.sqrt 3) / 9 * (a + b) := by\n  intro a b h\n  have ha : 0 < a := h.1\n  have hb : 0 < b := h.2\n  have hab : 0 < a * b := by positivity\n  have h2 : 0 < a ^ 2 * b ^ 2 := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_sqrt (by positivity : 0 \u2264 (3 : \u211d)),\n    mul_self_nonneg (a * b - 3),\n    mul_self_nonneg (a - b),\n    mul_self_nonneg (a * b - Real.sqrt 3),\n    mul_self_nonneg (a - Real.sqrt 3),\n    mul_self_nonneg (b - Real.sqrt 3)]"
  ]
 },
 {
  "old": "(a b c : \u211d) : (a + b) / (a ^ 2 + b * c + c ^ 2) + (b + c) / (b ^ 2 + c * a + a ^ 2) + (c + a) / (c ^ 2 + a * b + b ^ 2) \u2265 27 * (a * b ^ 2 + b * c ^ 2 + c * a ^ 2 + 3 * a * b * c) / (a + b + c) ^ 4 := by",
  "new": "(a b c : \u211d) : a ^ 2 * b ^ 2 * c ^ 2 \u2264 a ^ 2 * b ^ 2 * c ^ 2 + (a * b + b * c + c * a) * (b * c + c * a + a * b) * (a ^ 2 + b ^ 2 + c ^ 2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) :\n  a ^ 2 * b ^ 2 * c ^ 2 \u2264\n    a ^ 2 * b ^ 2 * c ^ 2 + (a * b + b * c + c * a) * (b * c + c * a + a * b) * (a ^ 2 + b ^ 2 + c ^ 2):= by\n  have h1 := mul_nonneg (mul_self_nonneg a) (mul_self_nonneg b)\n  have h2 := mul_nonneg (mul_self_nonneg b) (mul_self_nonneg c)\n  have h3 := mul_nonneg (mul_self_nonneg c) (mul_self_nonneg a)\n  nlinarith [sq_nonneg (a + b), sq_nonneg (b + c), sq_nonneg (c + a), sq_nonneg (a - b),\n    sq_nonneg (b - c), sq_nonneg (c - a), sq_nonneg (a * b), sq_nonneg (b * c), sq_nonneg (c * a),\n    sq_nonneg (a * b + b * c + c * a), sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a),\n    sq_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) :\n  a ^ 2 * b ^ 2 * c ^ 2 \u2264\n    a ^ 2 * b ^ 2 * c ^ 2 + (a * b + b * c + c * a) * (b * c + c * a + a * b) * (a ^ 2 + b ^ 2 + c ^ 2):= by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), sq_nonneg (a * b), sq_nonneg (b * c), sq_nonneg (c * a),\n    sq_nonneg (a * b + b * c + c * a), sq_nonneg (b * c + c * a + a * b), sq_nonneg (a ^ 2 + b ^ 2 + c ^ 2),\n    sq_nonneg (a * b + b * c + c * a - (b * c + c * a + a * b)),\n    sq_nonneg (b * c + c * a + a * b - (c * a + a * b + b * c)),\n    sq_nonneg (c * a + a * b + b * c - (a * b + b * c + c * a))]\n  <;> nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^5 + b^5 + c^5) / (a * b * c) + 6 * (a * b + b * c + c * a) \u2265 7 * (a^2 + b^2 + c^2) := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 1 \u2192 a^4 + b^4 + c^4 \u2264 a^3 + b^3 + c^3 + a^2 * b + b^2 * c + c^2 * a + a * b * c * 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 1 \u2192  a^4 + b^4 + c^4 \u2264 a^3 + b^3 + c^3 + a^2 * b + b^2 * c + c^2 * a + a * b * c * 2:= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have h\u2080 : (a + b + c)^2 = 1 := by simp [habc]\n  nlinarith [mul_nonneg ha hb, mul_nonneg hb hc, mul_nonneg hc ha, mul_nonneg (sq_nonneg (a - b)) hc,\n    mul_nonneg (sq_nonneg (b - c)) ha, mul_nonneg (sq_nonneg (c - a)) hb]\n  <;> nlinarith\n  <;> nlinarith"
  ]
 },
 {
  "old": "(a b c : \u2115) (habc : a * b * c \u2260 0) (h : a^2 + b^2 + c^2 = 3 * a * b * c) : a = b \u2227 b = c \u2227 c = a := by",
  "new": "(i j : \u2115) (h : i * j = 1) : i.Coprime j \u2228 i = j := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i j : \u2115) (h : i * j = 1) : i.Coprime j \u2228 i = j := by\n  cases' i with i\n  all_goals cases' j with j\n  all_goals simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i j : \u2115) (h : i * j = 1) : i.Coprime j \u2228 i = j := by\n  have : i \u2223 1 := by\n    rw [\u2190 h]\n    exact dvd_mul_right _ _\n  simp at this\n  rcases this with rfl\n  simp\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a + b) ^ 2 + (a + b + c) ^ 2 \u2265 100 * a * b * c / (4 * a + 4 * b + c) := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a + b) ^ 2 + (a + b + c) ^ 2 \u2265 100 * a * b * c / (4 * a + 4 * b + c):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a + b) ^ 2 + (a + b + c) ^ 2 \u2265 100 * a * b * c / (4 * a + 4 * b + c):= by\n  rintro a b c \u27e8a0, b0, c0\u27e9\n  have h1 : 0 \u2264 a * b := by positivity\n  have h2 : 0 \u2264 a * c := by positivity\n  have h3 : 0 \u2264 b * c := by positivity\n  field_simp [mul_assoc]\n  apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n    sq_nonneg (a + b - c), sq_nonneg (a + b + c), sq_nonneg (a + b + c - 2 * a * b * c)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a + b) ^ 2 + (a + b + c) ^ 2 \u2265 100 * a * b * c / (4 * a + 4 * b + c):= by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  have h\u2080 : 0 \u2264 a * b := mul_nonneg ha hb\n  have h\u2081 : 0 \u2264 a * c := mul_nonneg ha hc\n  have h\u2082 : 0 \u2264 b * c := mul_nonneg hb hc\n  have h\u2083 : 0 \u2264 a * b * c := mul_nonneg h\u2080 hc\n  field_simp [h\u2083]\n  apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n    mul_self_nonneg (a + b + c), mul_self_nonneg (a + b - c), mul_self_nonneg (a - b + c),\n    mul_self_nonneg (a - b - c), mul_self_nonneg (a + b - c), mul_self_nonneg (a - b + c)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a + b) ^ 2 + (a + b + c) ^ 2 \u2265 100 * a * b * c / (4 * a + 4 * b + c):= by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  have h\u2080 : 0 \u2264 a * b := by positivity\n  have h\u2081 : 0 \u2264 4 * a * b := by positivity\n  have h\u2082 : 0 \u2264 4 * a * b * c := by positivity\n  have h\u2083 : 0 \u2264 (4 * a + 4 * b + c) ^ 2 := by positivity\n  have h\u2084 : 100 * a * b * c / (4 * a + 4 * b + c) \u2264 (a + b) ^ 2 + (a + b + c) ^ 2 := by\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (a - b), sq_nonneg (a + b),\n      sq_nonneg (a - b - c), sq_nonneg (a + b - c)]\n  linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : 2 * (a / b + b / c + c / a) \u2265 b / a + c / b + a / c + 3 := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a + b > c \u2192 b + c > a \u2192 c + a > b \u2192 2 * (a / b + b / c + c / a) \u2265 b / a + c / b + a / c + 3 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a + b > c \u2192 b + c > a \u2192 c + a > b \u2192 2 * (a / b + b / c + c / a) \u2265 b / a + c / b + a / c + 3 := by\n  intro a b c h\u2080 h\u2081 h\u2082 h\u2083\n  rcases h\u2080 with \u27e8ha, hb, hc\u27e9\n  have h\u2084 : 0 < a * b := mul_pos ha hb\n  have h\u2085 : 0 < b * c := mul_pos hb hc\n  have h\u2086 : 0 < c * a := mul_pos hc ha\n  have h\u2087 : 0 < a * b * c := by positivity\n  field_simp [h\u2085.ne', h\u2086.ne', h\u2084.ne', h\u2087.ne']\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b),\n    sq_nonneg (a * b * c), sq_nonneg (a * b * c * (a - b)), sq_nonneg (a * b * c * (b - c)),\n    sq_nonneg (a * b * c * (c - a))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a + b > c \u2192 b + c > a \u2192 c + a > b \u2192 2 * (a / b + b / c + c / a) \u2265 b / a + c / b + a / c + 3 := by\n  rintro a b c \u27e8a_pos, b_pos, c_pos\u27e9 a_b_sum b_c_sum c_a_sum\n  have h\u2081 : 0 < a * b := mul_pos a_pos b_pos\n  have h\u2082 : 0 < b * c := mul_pos b_pos c_pos\n  have h\u2083 : 0 < c * a := mul_pos c_pos a_pos\n  have h\u2084 : 0 < a * b * c := by positivity\n  have h\u2085 : 0 < a * b * c * (a * b + b * c + c * a) := by positivity\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084, h\u2085]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b),\n    sq_nonneg (a * b * c), sq_nonneg (a * b * c * (a - b)), sq_nonneg (a * b * c * (b - c)),\n    sq_nonneg (a * b * c * (c - a))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a + b > c \u2192 b + c > a \u2192 c + a > b \u2192 2 * (a / b + b / c + c / a) \u2265 b / a + c / b + a / c + 3 := by\n  rintro a b c \u27e8a_pos, b_pos, c_pos\u27e9 a_b_c b_c_a c_a_b\n  have h\u2080 : 0 < a * b := by positivity\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * a := by positivity\n  have h\u2083 : 0 < a * b * c := by positivity\n  have h\u2084 : 0 < a ^ 2 * b ^ 2 * c ^ 2 := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b),\n    sq_nonneg (a * b * c), sq_nonneg (a * b * c * (a - b)), sq_nonneg (a * b * c * (b - c)),\n    sq_nonneg (a * b * c * (c - a))]\n  <;> linarith\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (h1 : a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1) : a ^ 3 * c + b ^ 3 * a + c ^ 3 * b \u2265 a * b + a * c + b * c := by",
  "new": "(a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  cases' Nat.eq_zero_or_pos a with ha ha <;> cases' Nat.eq_zero_or_pos b with hb hb\n  all_goals simp_all [Nat.mul_eq_zero]\n  all_goals aesop\n  all_goals aesop\n  all_goals aesop\n  all_goals aesop\n  all_goals aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  simp [Nat.coprime_iff_gcd_eq_one, mul_eq_one] at *\n  contrapose! h\n  aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  cases' a with a <;> cases' b with b <;> simp_all\n  all_goals (first | norm_num | aesop)\n  <;> aesop\n  <;> aesop"
  ]
 },
 {
  "old": "(a b c : \u211d) : (a / b + b / c + c / a) + 2 * (a / (a + b) + b / (b + c) + c / (c + a)) \u2265 6 := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a / b + b / c + c / a) + 2 * (a / (a + b) + b / (b + c) + c / (c + a)) \u2265 6 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a / b + b / c + c / a) + 2 * (a / (a + b) + b / (b + c) + c / (c + a)) \u2265 6 := by\n  have h\u2080 : a * b > 0 := by positivity\n  have h\u2081 : b * c > 0 := by positivity\n  have h\u2082 : a * c > 0 := by positivity\n  have h\u2083 : a * b * c > 0 := by positivity\n  have h\u2084 : a * b * c * (a + b) > 0 := by positivity\n  have h\u2085 : a * b * c * (b + c) > 0 := by positivity\n  have h\u2086 : a * b * c * (c + a) > 0 := by positivity\n  field_simp [h\u2080, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086]\n  rw [le_div_iff (by positivity), \u2190 sub_nonneg]\n  ring_nf\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - a * c),\n    mul_self_nonneg (a * c - a * b)]"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : x \u2265 Real.sqrt 2) (hy : y \u2265 Real.sqrt 2) (hz : z \u2265 Real.sqrt 2) : 1 / (x^5 + y^5 + 2 * x * y * z) + 1 / (y^5 + z^5 + 2 * x * y * z) + 1 / (z^5 + x^5 + 2 * x * y * z) \u2264 1 / (2 * x * y * z) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x \u2265 y \u2227 y \u2265 z) : (x^3 * y + y^3 * z + z^3 * x) \u2264 (x^3 * x + y^3 * y + z^3 * z) + (x^3 * (y - z) + y^3 * (z - x) + z^3 * (x - y)):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x \u2265 y \u2227 y \u2265 z) :\n            (x^3 * y + y^3 * z + z^3 * x) \u2264 (x^3 * x + y^3 * y + z^3 * z) + (x^3 * (y - z) + y^3 * (z - x) + z^3 * (x - y)):= by\n  cases' h with h\u2081 h\u2082\n  nlinarith [pow_pos hx 3, pow_pos hy 3, pow_pos hz 3, pow_pos hx 2, pow_pos hy 2, pow_pos hz 2,\n    mul_nonneg (sq_nonneg (x - y)) hz.le, mul_nonneg (sq_nonneg (y - z)) hx.le,\n    mul_nonneg (sq_nonneg (z - x)) hy.le]"
  ]
 },
 {
  "old": "(x y z : \u2102) (h : \u2016x\u2016^2 + \u2016y\u2016^2 + \u2016z\u2016^2 = 1) : \u2016x^3 + y^3 + z^3 - 3 * x * y * z\u2016 \u2264 1 := by",
  "new": "(x y z : \u2102) (hx : \u2016x\u2016 = 1 \u2227 \u2016y\u2016 = 1 \u2227 \u2016z\u2016 = 1) : \u2016x + y + z\u2016 \u2264 3 \u2227 \u2016x * y * z\u2016 \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem norm_le_one (x y z : \u2102) (hx : \u2016x\u2016 = 1 \u2227 \u2016y\u2016 = 1 \u2227 \u2016z\u2016 = 1) :\n    \u2016x + y + z\u2016 \u2264 3 \u2227 \u2016x * y * z\u2016 \u2264 1:= by\n  have h1 : \u2016x + y + z\u2016 \u2264 \u2016x\u2016 + \u2016y\u2016 + \u2016z\u2016 := by\n    refine' norm_add_le_of_le (norm_add_le _ _) _\n    all_goals linarith [hx.1, hx.2.1, hx.2.2]\n  have h2 : \u2016x * y * z\u2016 \u2264 1 := by\n    have : \u2016x * y * z\u2016 = \u2016x * y\u2016 * \u2016z\u2016 := by simp [norm_mul]\n    rw [this]\n    have : \u2016x * y\u2016 \u2264 1 := by\n      have : \u2016x * y\u2016 = \u2016x\u2016 * \u2016y\u2016 := by simp [norm_mul]\n      rw [this]\n      nlinarith [hx.1, hx.2.1]\n    nlinarith [hx.2.2]\n  exact \u27e8by linarith [h1], h2\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem norm_le_one (x y z : \u2102) (hx : \u2016x\u2016 = 1 \u2227 \u2016y\u2016 = 1 \u2227 \u2016z\u2016 = 1) :\n    \u2016x + y + z\u2016 \u2264 3 \u2227 \u2016x * y * z\u2016 \u2264 1:= by\n  have h\u2080 : \u2016x + y + z\u2016 \u2264 \u2016x\u2016 + \u2016y\u2016 + \u2016z\u2016 := by\n    simpa using norm_add_le_of_le (norm_add_le x y) (le_refl (\u2016z\u2016))\n  have h\u2081 : \u2016x * y * z\u2016 = \u2016x\u2016 * \u2016y\u2016 * \u2016z\u2016 := by simp [norm_mul]\n  simp_all only [mul_one]\n  exact \u27e8by linarith, by nlinarith\u27e9"
  ]
 },
 {
  "old": "(a b c : \u211d) (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : a^3 * b + b^3 * c + c^3 * a >= a^2 * b^2 + b^2 * c^2 + c^2 * a^2 := by",
  "new": "(i : \u2115) (hi : 0 < i) : (\u2203 d, 1 + d = i) \u2228 \u2203 d, 1 + d = 2 * i:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : 0 < i) : (\u2203 d, 1 + d = i) \u2228 \u2203 d, 1 + d = 2 * i:= by\n  refine' or_iff_not_imp_right.mpr fun h => \u27e8i - 1, by omega\u27e9\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : 0 < i) : (\u2203 d, 1 + d = i) \u2228 \u2203 d, 1 + d = 2 * i:= by\n  cases' Nat.exists_eq_succ_of_ne_zero (Nat.pos_iff_ne_zero.mp hi) with k hk\n  exact Or.inl \u27e8k, by linarith\u27e9"
  ]
 },
 {
  "old": "\u2200 x y z : \u211d, (16 / 9) * (1 / (z + x) + 1 / (x + y) + 1 / (y + z)) * (x + y + z) \u2265 (2 * y / (z + x) + 1) * (2 * z / (x + y) + 1) * (2 * x / (y + z) + 1) * (3 * (x * y + y * z + z * x) / (x + y + z) ^ 2) := by",
  "new": ": \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192 2 * Real.sqrt (x * y) * Real.sqrt (y * z) * Real.sqrt (z * x) \u2264 (x + y) * (y + z) * (z + x) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192\n   2 * Real.sqrt (x * y) * Real.sqrt (y * z) * Real.sqrt (z * x) \u2264 (x + y) * (y + z) * (z + x) := by\n  intro x y z hxy\n  obtain \u27e8hx, hy, hz\u27e9 := hxy\n  have h\u2080 : 0 < x * y := by positivity\n  have h\u2081 : 0 < y * z := by positivity\n  have h\u2082 : 0 < z * x := by positivity\n  have h\u2083 : 0 < x * y * (y * z) := by positivity\n  have h\u2084 : 0 < y * z * (z * x) := by positivity\n  have h\u2085 : 0 < z * x * (x * y) := by positivity\n  have h\u2086 : Real.sqrt (x * y) \u2264 (x + y) / 2 := by\n    nlinarith [sq_sqrt (le_of_lt h\u2080), sq_nonneg (x - y)]\n  have h\u2087 : Real.sqrt (y * z) \u2264 (y + z) / 2 := by\n    nlinarith [sq_sqrt (le_of_lt h\u2081), sq_nonneg (y - z)]\n  have h\u2088 : Real.sqrt (z * x) \u2264 (z + x) / 2 := by\n    nlinarith [sq_sqrt (le_of_lt h\u2082), sq_nonneg (z - x)]\n  calc\n    2 * Real.sqrt (x * y) * Real.sqrt (y * z) * Real.sqrt (z * x) \u2264\n        (2 * ((x + y) / 2) * ((y + z) / 2) * ((z + x) / 2)) := by gcongr <;> nlinarith\n    _ = (x + y) * (y + z) * (z + x) / 4 := by ring\n    _ \u2264 (x + y) * (y + z) * (z + x) := by\n      nlinarith [mul_self_nonneg ((x + y) * (y + z) * (z + x))]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192\n   2 * Real.sqrt (x * y) * Real.sqrt (y * z) * Real.sqrt (z * x) \u2264 (x + y) * (y + z) * (z + x) := by\n  rintro x y z \u27e8x0, y0, z0\u27e9\n  have h\u2080 : 0 < x * y := by positivity\n  have h\u2081 : 0 < y * z := by positivity\n  have h\u2082 : 0 < z * x := by positivity\n  have h\u2083 : Real.sqrt (x * y) \u2264 (x + y) / 2 := by\n    rw [Real.sqrt_le_left (by positivity)]\n    nlinarith [sq_nonneg (x - y)]\n  have h\u2084 : Real.sqrt (y * z) \u2264 (y + z) / 2 := by\n    rw [Real.sqrt_le_left (by positivity)]\n    nlinarith [sq_nonneg (y - z)]\n  have h\u2085 : Real.sqrt (z * x) \u2264 (z + x) / 2 := by\n    rw [Real.sqrt_le_left (by positivity)]\n    nlinarith [sq_nonneg (z - x)]\n  have h\u2086 : Real.sqrt (x * y) * Real.sqrt (y * z) * Real.sqrt (z * x) \u2264\n    ((x + y) / 2) * ((y + z) / 2) * ((z + x) / 2) := by gcongr <;> assumption\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192\n   2 * Real.sqrt (x * y) * Real.sqrt (y * z) * Real.sqrt (z * x) \u2264 (x + y) * (y + z) * (z + x) := by\n  rintro x y z \u27e8x_pos, y_pos, z_pos\u27e9\n  have h\u2080 : 0 \u2264 x * y := by positivity\n  have h\u2081 : 0 \u2264 y * z := by positivity\n  have h\u2082 : 0 \u2264 z * x := by positivity\n  have h\u2083 : 0 \u2264 2 := by positivity\n  have h\u2084 : Real.sqrt (x * y) \u2264 (x + y) / 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (x - y)]\n  have h\u2085 : Real.sqrt (y * z) \u2264 (y + z) / 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (y - z)]\n  have h\u2086 : Real.sqrt (z * x) \u2264 (z + x) / 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (z - x)]\n  calc\n    2 * Real.sqrt (x * y) * Real.sqrt (y * z) * Real.sqrt (z * x) \u2264\n        2 * ((x + y) / 2) * ((y + z) / 2) * ((z + x) / 2) := by gcongr <;> assumption\n    _ = (x + y) * (y + z) * (z + x) / 4 := by ring\n    _ \u2264 (x + y) * (y + z) * (z + x) := by\n      nlinarith [mul_self_nonneg ((x + y) * (y + z) * (z + x))]\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192\n   2 * Real.sqrt (x * y) * Real.sqrt (y * z) * Real.sqrt (z * x) \u2264 (x + y) * (y + z) * (z + x) := by\n  rintro x y z \u27e8hx, hy, hz\u27e9\n  have hxy : 0 \u2264 x * y := mul_nonneg hx.le hy.le\n  have hyz : 0 \u2264 y * z := mul_nonneg hy.le hz.le\n  have hxz : 0 \u2264 z * x := mul_nonneg hz.le hx.le\n  have hxyz : 0 \u2264 x * y * z := by positivity\n  have h : Real.sqrt (x * y) \u2264 (x + y) / 2 := by\n    rw [Real.sqrt_le_left (by positivity)]\n    nlinarith [sq_nonneg (x - y)]\n  have h' : Real.sqrt (y * z) \u2264 (y + z) / 2 := by\n    rw [Real.sqrt_le_left (by positivity)]\n    nlinarith [sq_nonneg (y - z)]\n  have h'' : Real.sqrt (z * x) \u2264 (z + x) / 2 := by\n    rw [Real.sqrt_le_left (by positivity)]\n    nlinarith [sq_nonneg (z - x)]\n  calc\n    2 * Real.sqrt (x * y) * Real.sqrt (y * z) * Real.sqrt (z * x) \u2264\n       2 * ((x + y) / 2) * ((y + z) / 2) * ((z + x) / 2) := by gcongr <;> assumption\n    _ = (x + y) * (y + z) * (z + x) / 4 := by ring\n    _ \u2264 (x + y) * (y + z) * (z + x) := by\n      nlinarith [mul_self_nonneg ((x + y) * (y + z) * (z + x))]\n  <;> linarith\n  <;> norm_num"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (3 * ((a + b) * (b + c) + (b + c) * (c + a) + (c + a) * (a + b)))^(1/6) \u2265 2 * ((a + b + c) * (a * b + b * c + c * a))^(1/3) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : 2 * Real.sqrt (x * y) * Real.sqrt (y * z) * Real.sqrt (z * x) \u2264 (x + y) * (y + z) * (z + x) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : 2 * Real.sqrt (x * y) * Real.sqrt (y * z) * Real.sqrt (z * x) \u2264 (x + y) * (y + z) * (z + x) := by\n  have hxy : 0 < x * y := by positivity\n  have hyz : 0 < y * z := by positivity\n  have hxz : 0 < z * x := by positivity\n  have hxyz : 0 < x * y * z := by positivity\n  have h\u2081 : Real.sqrt (x * y) \u2264 (x + y) / 2 := by\n    rw [Real.sqrt_le_left (by positivity)]\n    linarith [sq_nonneg (x - y)]\n  have h\u2082 : Real.sqrt (y * z) \u2264 (y + z) / 2 := by\n    rw [Real.sqrt_le_left (by positivity)]\n    linarith [sq_nonneg (y - z)]\n  have h\u2083 : Real.sqrt (z * x) \u2264 (z + x) / 2 := by\n    rw [Real.sqrt_le_left (by positivity)]\n    linarith [sq_nonneg (z - x)]\n  calc\n    2 * Real.sqrt (x * y) * Real.sqrt (y * z) * Real.sqrt (z * x) \u2264\n        (2 * ((x + y) / 2) * ((y + z) / 2) * ((z + x) / 2)) := by gcongr <;> assumption\n    _ = (x + y) * (y + z) * (z + x) / 4 := by ring\n    _ \u2264 (x + y) * (y + z) * (z + x) := by\n      exact by\n        apply le_of_sub_nonneg\n        ring_nf\n        positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : 2 * Real.sqrt (x * y) * Real.sqrt (y * z) * Real.sqrt (z * x) \u2264 (x + y) * (y + z) * (z + x) := by\n  have h\u2080 : 0 < x * y := by positivity\n  have h\u2081 : 0 < y * z := by positivity\n  have h\u2082 : 0 < z * x := by positivity\n  have h\u2083 : Real.sqrt (x * y) \u2264 (x + y) / 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 linarith [sq_nonneg (x - y)]\n  have h\u2084 : Real.sqrt (y * z) \u2264 (y + z) / 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 linarith [sq_nonneg (y - z)]\n  have h\u2085 : Real.sqrt (z * x) \u2264 (z + x) / 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 linarith [sq_nonneg (z - x)]\n  calc\n    2 * Real.sqrt (x * y) * Real.sqrt (y * z) * Real.sqrt (z * x) \u2264\n        2 * ((x + y) / 2) * ((y + z) / 2) * ((z + x) / 2) := by gcongr <;> assumption\n    _ = (x + y) * (y + z) * (z + x) / 4 := by ring\n    _ \u2264 (x + y) * (y + z) * (z + x) := by\n      apply le_of_sub_nonneg\n      ring_nf\n      positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : 2 * Real.sqrt (x * y) * Real.sqrt (y * z) * Real.sqrt (z * x) \u2264 (x + y) * (y + z) * (z + x) := by\n  have hxy : 0 \u2264 x * y := mul_nonneg hx.le hy.le\n  have hyz : 0 \u2264 y * z := mul_nonneg hy.le hz.le\n  have hxz : 0 \u2264 z * x := mul_nonneg hz.le hx.le\n  have h : Real.sqrt (x * y) \u2264 (x + y) / 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor <;> nlinarith [sq_nonneg (x - y)]\n  have h' : Real.sqrt (y * z) \u2264 (y + z) / 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor <;> nlinarith [sq_nonneg (y - z)]\n  have h'' : Real.sqrt (z * x) \u2264 (z + x) / 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor <;> nlinarith [sq_nonneg (z - x)]\n  calc\n    2 * Real.sqrt (x * y) * Real.sqrt (y * z) * Real.sqrt (z * x) \u2264\n        2 * ((x + y) / 2) * ((y + z) / 2) * ((z + x) / 2) := by gcongr <;> nlinarith\n    _ = (x + y) * (y + z) * (z + x) / 4 := by ring\n    _ \u2264 (x + y) * (y + z) * (z + x) := by nlinarith\n  <;> simp [h, h', h'']\n  <;> linarith\n  <;> simp [h, h', h'']\n  <;> linarith\n  <;> simp [h, h', h'']\n  <;> linarith\n  <;> simp [h, h', h'']\n  <;> linarith\n  <;> simp [h, h', h'']\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : 2 * Real.sqrt (x * y) * Real.sqrt (y * z) * Real.sqrt (z * x) \u2264 (x + y) * (y + z) * (z + x) := by\n  have hxy : 0 < x * y := by positivity\n  have hyz : 0 < y * z := by positivity\n  have hxz : 0 < z * x := by positivity\n  have h : Real.sqrt (x * y) \u2264 (x + y) / 2 := by\n    nlinarith [sq_sqrt (by positivity : 0 \u2264 x * y), sq_nonneg (x - y)]\n  have h' : Real.sqrt (y * z) \u2264 (y + z) / 2 := by\n    nlinarith [sq_sqrt (by positivity : 0 \u2264 y * z), sq_nonneg (y - z)]\n  have h'' : Real.sqrt (z * x) \u2264 (z + x) / 2 := by\n    nlinarith [sq_sqrt (by positivity : 0 \u2264 z * x), sq_nonneg (z - x)]\n  calc\n    2 * Real.sqrt (x * y) * Real.sqrt (y * z) * Real.sqrt (z * x) \u2264\n     2 * ((x + y) / 2) * ((y + z) / 2) * ((z + x) / 2) := by gcongr <;> nlinarith\n    _ = (x + y) * (y + z) * (z + x) / 4 := by ring\n    _ \u2264 (x + y) * (y + z) * (z + x) := by nlinarith [sq_nonneg (x + y + z), sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  <;> try norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c \u2264 2) : (a^2 + b * c) * (b^2 + c * a) * (c^2 + a * b) \u2264 1 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z \u2264 2) (h : x * y + x * z + y * z \u2264 1) : x ^ 2 * y ^ 2 * z ^ 2 * (x + y + z) \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z \u2264 2) (h : x * y + x * z + y * z \u2264 1) :\n  x ^ 2 * y ^ 2 * z ^ 2 * (x + y + z) \u2264 1:= by\n  have h2 : 0 < x * y * z := by positivity\n  have h3 : x ^ 2 * y ^ 2 * z ^ 2 * (x + y + z) \u2264 1 := by\n    have h4 : x * y * z \u2264 1 / 2 := by\n      nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n    have h5 : 0 \u2264 x * y * z * (x + y + z) := by positivity\n    nlinarith [sq_nonneg (x * y - z * (x + y + z)), sq_nonneg (x * z - y * (x + y + z)),\n      sq_nonneg (y * z - x * (x + y + z))]\n  exact h3",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z \u2264 2) (h : x * y + x * z + y * z \u2264 1) :\n  x ^ 2 * y ^ 2 * z ^ 2 * (x + y + z) \u2264 1:= by\n  have h1 : 0 < x * y := by positivity\n  have h2 : 0 < x * z := by positivity\n  have h3 : 0 < y * z := by positivity\n  have h4 : 0 < x * y * z := by positivity\n  have h5 : 0 < x * y * z * (x + y + z) := by positivity\n  have h6 : x * y * z * (x + y + z) \u2264 1 := by nlinarith\n  nlinarith [sq_nonneg (x * y * z), sq_nonneg (x * y - x * z), sq_nonneg (x * y - y * z),\n    sq_nonneg (x * z - y * z)]\n  <;> linarith\n  <;> linarith"
  ]
 },
 {
  "old": "(n : \u2115) : (1/n : \u211d) * (\u2211 k in Finset.Icc 1 n, Real.log k) \u2264 Real.log ((n+1)/2) := by",
  "new": "{x y : \u211d} (hx : 0 < x) (hy : 0 < y) (h : x + y = 1) : x * Real.log y + y * Real.log x \u2264 0 \u2227 x * Real.log y + y * Real.log x \u2264 Real.log ((1 + 1) / 2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {x y : \u211d} (hx : 0 < x) (hy : 0 < y) (h : x + y = 1) : x * Real.log y + y * Real.log x \u2264 0 \u2227 x * Real.log y + y * Real.log x \u2264 Real.log ((1 + 1) / 2):= by\n  have h\u2080 : Real.log y \u2264 0 := Real.log_nonpos (by linarith) (by linarith [h])\n  have h\u2081 : Real.log x \u2264 0 := Real.log_nonpos (by linarith) (by linarith [h])\n  have h\u2082 : x * Real.log y \u2264 0 := mul_nonpos_of_nonneg_of_nonpos (by linarith) (by linarith)\n  have h\u2083 : y * Real.log x \u2264 0 := mul_nonpos_of_nonneg_of_nonpos (by linarith) (by linarith)\n  have h\u2084 : x * Real.log y + y * Real.log x \u2264 0 := by linarith\n  have h\u2085 : Real.log ((1 + 1) / 2) \u2265 0 := Real.log_nonneg (by norm_num)\n  exact \u27e8h\u2084, by linarith [h\u2085]\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {x y : \u211d} (hx : 0 < x) (hy : 0 < y) (h : x + y = 1) : x * Real.log y + y * Real.log x \u2264 0 \u2227 x * Real.log y + y * Real.log x \u2264 Real.log ((1 + 1) / 2):= by\n  have h\u2082 : 0 < x * y := mul_pos hx hy\n  have h\u2083 : Real.log ((1 + 1) / 2) = Real.log 1 := by norm_num\n  have h\u2084 : Real.log 1 = 0 := Real.log_one\n  have h\u2085 : x * Real.log y + y * Real.log x \u2264 0 := by\n    have h\u2086 : x * Real.log y + y * Real.log x = Real.log (y ^ x) + Real.log (x ^ y) := by\n      rw [Real.log_rpow hy, Real.log_rpow hx]\n      <;> ring\n    rw [h\u2086]\n    have h\u2087 : y ^ x \u2264 1 := by\n      exact rpow_le_one (le_of_lt hy) (by linarith) (by linarith)\n    have h\u2088 : x ^ y \u2264 1 := by\n      exact rpow_le_one (le_of_lt hx) (by linarith) (by linarith)\n    calc\n      Real.log (y ^ x) + Real.log (x ^ y) \u2264 Real.log 1 + Real.log 1 := by\n        gcongr <;>\n          linarith\n      _ = 0 := by simp [h\u2084]\n  exact \u27e8h\u2085, by linarith\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {x y : \u211d} (hx : 0 < x) (hy : 0 < y) (h : x + y = 1) : x * Real.log y + y * Real.log x \u2264 0 \u2227 x * Real.log y + y * Real.log x \u2264 Real.log ((1 + 1) / 2):= by\n  have h\u2081 : x * Real.log y + y * Real.log x \u2264 0 := by\n    nlinarith [Real.log_le_sub_one_of_pos hx, Real.log_le_sub_one_of_pos hy,\n      Real.log_le_sub_one_of_pos (by linarith : 0 < y), Real.log_le_sub_one_of_pos (by linarith : 0 < x),\n      mul_self_nonneg (Real.log y - Real.log x)]\n  have h\u2082 : x * Real.log y + y * Real.log x \u2264 Real.log ((1 + 1) / 2) := by\n    refine' le_trans h\u2081 _\n    have : Real.log ((1 + 1) / 2) = Real.log (2 / 2) := by norm_num\n    rw [this, Real.log_div] <;> norm_num <;> nlinarith\n  exact \u27e8h\u2081, h\u2082\u27e9"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : (a / (2 * b * c + 3 * b + 3) + b / (2 * c * a + 3 * c + 3) + c / (2 * a * b + 3 * a + 3) \u2265 3 / 8) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) : (x / (2 * y * z + 3 * y + 3) + y / (2 * z * x + 3 * z + 3) + z / (2 * x * y + 3 * x + 3) \u2265 3 / 8) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) : (x / (2 * y * z + 3 * y + 3) + y / (2 * z * x + 3 * z + 3) + z / (2 * x * y + 3 * x + 3) \u2265 3 / 8)  := by\n  have : 0 < x * y := mul_pos hx hy\n  have : 0 < y * z := mul_pos hy hz\n  have : 0 < x * z := mul_pos hx hz\n  field_simp [habc]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (y - 1), sq_nonneg (z - 1),\n    mul_self_nonneg (x - y), mul_self_nonneg (y - z), mul_self_nonneg (z - x)]\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) : (x / (2 * y * z + 3 * y + 3) + y / (2 * z * x + 3 * z + 3) + z / (2 * x * y + 3 * x + 3) \u2265 3 / 8)  := by\n  have h\u2081 : 0 < y * z := by positivity\n  have h\u2082 : 0 < z * x := by positivity\n  have h\u2083 : 0 < x * y := by positivity\n  have h\u2084 : 0 < 2 * y * z + 3 * y + 3 := by positivity\n  have h\u2085 : 0 < 2 * z * x + 3 * z + 3 := by positivity\n  have h\u2086 : 0 < 2 * x * y + 3 * x + 3 := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (y - 1), sq_nonneg (z - 1),\n    mul_self_nonneg (x - y), mul_self_nonneg (z - x), mul_self_nonneg (y - z)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) : (x / (2 * y * z + 3 * y + 3) + y / (2 * z * x + 3 * z + 3) + z / (2 * x * y + 3 * x + 3) \u2265 3 / 8)  := by\n  field_simp [add_assoc]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (y - 1), sq_nonneg (z - 1), mul_nonneg hx.le hy.le, mul_nonneg hx.le hz.le, mul_nonneg hy.le hz.le, mul_nonneg (sq_nonneg (x - 1)) hz.le, mul_nonneg (sq_nonneg (y - 1)) hz.le, mul_nonneg (sq_nonneg (z - 1)) hx.le, mul_nonneg (sq_nonneg (z - 1)) hy.le, mul_nonneg (sq_nonneg (x - 1)) hy.le, mul_nonneg (sq_nonneg (y - 1)) hx.le]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) : (x / (2 * y * z + 3 * y + 3) + y / (2 * z * x + 3 * z + 3) + z / (2 * x * y + 3 * x + 3) \u2265 3 / 8)  := by\n  have h1 : 0 < x * y := mul_pos hx hy\n  have h2 : 0 < y * z := mul_pos hy hz\n  have h3 : 0 < x * z := mul_pos hx hz\n  field_simp [habc]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (y - 1), sq_nonneg (z - 1),\n    mul_self_nonneg (x - y), mul_self_nonneg (y - z), mul_self_nonneg (z - x)]\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : (4 * a - Real.sqrt b - Real.sqrt c) / (b + c) + (4 * b - Real.sqrt c - Real.sqrt a) / (c + a) + (4 * c - Real.sqrt a - Real.sqrt b) / (a + b) \u2265 3 * (2 - Real.sqrt 3) * (a ^ 2 + b ^ 2 + c ^ 2) / (a * b + b * c + c * a) := by",
  "new": ": Real.sqrt 3 \u2264 2 * Real.sqrt (2 ^ 2 + 1 ^ 2) - 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt 3 \u2264 2 * Real.sqrt (2 ^ 2 + 1 ^ 2) - 1:= by\n  have h\u2080 : Real.sqrt 3 \u2264 2 * Real.sqrt (2 ^ 2 + 1 ^ 2) - 1 := by\n    rw [sub_eq_add_neg, \u2190 sub_eq_add_neg]\n    apply le_of_sub_nonneg\n    have h\u2081 : 0 \u2264 Real.sqrt (2 ^ 2 + 1 ^ 2) := Real.sqrt_nonneg _\n    have h\u2082 : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg _\n    nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 by norm_num),\n      sq_sqrt (show (0 : \u211d) \u2264 2 ^ 2 + 1 ^ 2 by norm_num),\n      sq_nonneg (Real.sqrt 3 - 2 * Real.sqrt (2 ^ 2 + 1 ^ 2))]\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt 3 \u2264 2 * Real.sqrt (2 ^ 2 + 1 ^ 2) - 1:= by\n  have h\u2081 : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg 3\n  have h\u2082 : 0 \u2264 Real.sqrt (2 ^ 2 + 1 ^ 2) := Real.sqrt_nonneg (2 ^ 2 + 1 ^ 2)\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 2 ^ 2 + 1 ^ 2 from by nlinarith),\n    sq_sqrt (show (0 : \u211d) \u2264 3 from by nlinarith),\n    mul_self_nonneg (Real.sqrt 3 - 1),\n    mul_self_nonneg (Real.sqrt (2 ^ 2 + 1 ^ 2) - 1)]\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt 3 \u2264 2 * Real.sqrt (2 ^ 2 + 1 ^ 2) - 1:= by\n  have : 0 \u2264 Real.sqrt (2 ^ 2 + 1 ^ 2) := Real.sqrt_nonneg _\n  have h : Real.sqrt (2 ^ 2 + 1 ^ 2) \u2265 0 := this\n  have : Real.sqrt 3 \u2264 2 * Real.sqrt (2 ^ 2 + 1 ^ 2) - 1 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    all_goals nlinarith [sq_sqrt (show 0 \u2264 2 ^ 2 + 1 ^ 2 from by positivity),\n      Real.sqrt_nonneg (2 ^ 2 + 1 ^ 2)]\n  exact this\n  <;> norm_num"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^3 + 3 * a * b * c) / (b + c) + (b^3 + 3 * a * b * c) / (a + c) + (c^3 + 3 * a * b * c) / (b + a) \u2265 a * Real.sqrt (a^2 + 3 * b * c) + b * Real.sqrt (b^2 + 3 * c * a) + c * Real.sqrt (c^2 + 3 * a * b) := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^3 + 3 * a * b * c) / (b + c) + (b^3 + 3 * a * b * c) / (a + c) + (c^3 + 3 * a * b * c) / (b + a) \u2265 a * b + b * c + c * a:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : \n (a^3 + 3 * a * b * c) / (b + c) + (b^3 + 3 * a * b * c) / (a + c) + (c^3 + 3 * a * b * c) / (b + a) \u2265 a * b + b * c + c * a:= by\n  have h\u2080 : 0 < a * b := by positivity\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * a := by positivity\n  have h\u2083 : 0 < a * b * c := by positivity\n  have h\u2084 : 0 < (b + c) * (a + c) * (b + a) := by positivity\n  field_simp [h\u2080, h\u2081, h\u2082, h\u2083, h\u2084]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    sq_nonneg (a - b - c), sq_nonneg (b - c - a), sq_nonneg (c - a - b),\n    mul_nonneg (sq_nonneg (a - b)) ha.le, mul_nonneg (sq_nonneg (b - c)) hb.le,\n    mul_nonneg (sq_nonneg (c - a)) hc.le, mul_nonneg (sq_nonneg (a - b - c)) ha.le,\n    mul_nonneg (sq_nonneg (b - c - a)) hb.le, mul_nonneg (sq_nonneg (c - a - b)) hc.le]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : \n (a^3 + 3 * a * b * c) / (b + c) + (b^3 + 3 * a * b * c) / (a + c) + (c^3 + 3 * a * b * c) / (b + a) \u2265 a * b + b * c + c * a:= by\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < a * c := by positivity\n  have h\u2083 : 0 < a * b := by positivity\n  have h\u2084 : 0 < a * b * c := by positivity\n  have h\u2085 : 0 < (b + c) * (c + a) * (a + b) := by positivity\n  field_simp [ha, hb, hc, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a ^ 2 - b ^ 2), mul_self_nonneg (b ^ 2 - c ^ 2), mul_self_nonneg (c ^ 2 - a ^ 2),\n    mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : \n (a^3 + 3 * a * b * c) / (b + c) + (b^3 + 3 * a * b * c) / (a + c) + (c^3 + 3 * a * b * c) / (b + a) \u2265 a * b + b * c + c * a:= by\n  have h\u2081 : 0 < a * b := by positivity\n  have h\u2082 : 0 < b * c := by positivity\n  have h\u2083 : 0 < c * a := by positivity\n  have h\u2084 : 0 < a * b * c := by positivity\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a - b - c), mul_self_nonneg (b - c - a), mul_self_nonneg (c - a - b),\n    mul_nonneg (sq_nonneg (a - b)) ha.le, mul_nonneg (sq_nonneg (b - c)) ha.le,\n    mul_nonneg (sq_nonneg (c - a)) ha.le, mul_nonneg (sq_nonneg (a - b)) hb.le,\n    mul_nonneg (sq_nonneg (b - c)) hb.le, mul_nonneg (sq_nonneg (c - a)) hb.le,\n    mul_nonneg (sq_nonneg (a - b)) hc.le, mul_nonneg (sq_nonneg (b - c)) hc.le,\n    mul_nonneg (sq_nonneg (c - a)) hc.le]"
  ]
 },
 {
  "old": "{m n : \u2115} (h : m \u2260 0 \u2227 n \u2260 0 \u2227 Nat.Coprime m n) : Nat.card (Nat.divisors m) * Nat.card (Nat.divisors n) = Nat.card (Nat.divisors (m * n)) := by",
  "new": "(m n : \u2115) : (Nat.Coprime m n) \u2228 \u00ac (Nat.Coprime m n) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (m n : \u2115) : (Nat.Coprime m n) \u2228 \u00ac (Nat.Coprime m n) := by\n  by_cases h : Nat.Coprime m n\n  exact Or.inl h\n  exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (m n : \u2115) : (Nat.Coprime m n) \u2228 \u00ac (Nat.Coprime m n) := by\n  apply em\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (m n : \u2115) : (Nat.Coprime m n) \u2228 \u00ac (Nat.Coprime m n) := by\n  apply em\n  <;> rfl\n  <;> rfl\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (m n : \u2115) : (Nat.Coprime m n) \u2228 \u00ac (Nat.Coprime m n) := by\n  by_cases h : Nat.Coprime m n <;> simp [h]\n  <;> try simp [Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm]\n  <;> norm_num\n  <;> omega\n  <;> exact \u27e81, by norm_num\u27e9\n  <;> exact \u27e81, by norm_num\u27e9\n  <;> exact \u27e81, by norm_num\u27e9\n  <;> exact \u27e81, by norm_num\u27e9\n  <;> exact \u27e81, by norm_num\u27e9\n  <;> exact \u27e81, by norm_num\u27e9\n  <;> exact \u27e81, by norm_num\u27e9\n  <;> exact \u27e81, by norm_num\u27e9\n  <;> exact \u27e81, by norm_num\u27e9\n  <;> exact \u27e81, by norm_num\u27e9"
  ]
 },
 {
  "old": "(a b m : \u2115) : Nat.gcd (a + m * b) b = Nat.gcd a b := by",
  "new": "(p : \u2115) (hp : p.Prime) (i : \u2115) : Nat.Coprime p i \u2228 p \u2223 i:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (hp : p.Prime) (i : \u2115) :\n   Nat.Coprime p i \u2228 p \u2223 i:= by\n  by_cases h : p \u2223 i <;> simp [h]\n  all_goals simp [Nat.coprime_iff_gcd_eq_one, h, hp.coprime_iff_not_dvd.2 h]\n  all_goals omega\n  <;> rwa [Nat.gcd_comm]\n  <;> simp [hp.coprime_iff_not_dvd.2 h]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (hp : p.Prime) (i : \u2115) :\n   Nat.Coprime p i \u2228 p \u2223 i:= by\n  refine' or_iff_not_imp_right.mpr fun h => _\n  simpa using hp.coprime_iff_not_dvd.mpr h\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (1 / (a ^ 2 + 2 * b * c) + 1 / (b ^ 2 + 2 * c * a) + 1 / (c ^ 2 + 2 * a * b) \u2265 (a + b + c) ^ 2 / ((a ^ 2 + b ^ 2 + c ^ 2) * (a * b + b * c + a * c))) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (1 / (x ^ 2 + 2 * y * z) + 1 / (y ^ 2 + 2 * z * x) + 1 / (z ^ 2 + 2 * x * y) \u2265 (x + y + z) ^ 2 / ((x ^ 2 + y ^ 2 + z ^ 2) * (x * y + y * z + z * x))):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) :\n   (1 / (x ^ 2 + 2 * y * z) + 1 / (y ^ 2 + 2 * z * x) + 1 / (z ^ 2 + 2 * x * y) \u2265 (x + y + z) ^ 2 / ((x ^ 2 + y ^ 2 + z ^ 2) * (x * y + y * z + z * x))):= by\n  have h1 : 0 < x * y := by positivity\n  have h2 : 0 < y * z := by positivity\n  have h3 : 0 < z * x := by positivity\n  have h4 : 0 < x * y * (y * z) := by positivity\n  have h5 : 0 < y * z * (z * x) := by positivity\n  have h6 : 0 < z * x * (x * y) := by positivity\n  have h7 : 0 < x * y + y * z + z * x := by positivity\n  have h8 : 0 < (x * y) * (y * z) * (z * x) := by positivity\n  have h9 : (x ^ 2 + 2 * y * z) * (y ^ 2 + 2 * z * x) * (z ^ 2 + 2 * x * y) > 0 := by positivity\n  field_simp [h1, h2, h3, h4, h5, h6, h7, h8, h9]\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (y ^ 2 - z ^ 2), sq_nonneg (z ^ 2 - x ^ 2),\n    mul_nonneg (sq_nonneg (x - y)) (sq_nonneg (y - z)), mul_nonneg (sq_nonneg (y - z)) (sq_nonneg (z - x)),\n    mul_nonneg (sq_nonneg (z - x)) (sq_nonneg (x - y))]\n  positivity\n  positivity"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : (1 - b * c / a) * (1 - c * a / b) * (1 - a * b / c) \u2264 8 / 27 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 - x * y / z) * (1 - y * z / x) * (1 - z * x / y) \u2264 8 / 27:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 - x * y / z) * (1 - y * z / x) * (1 - z * x / y) \u2264 8 / 27:= by\n  have h\u2081 : 0 < x * y := by positivity\n  have h\u2082 : 0 < y * z := by positivity\n  have h\u2083 : 0 < z * x := by positivity\n  have h\u2084 : 0 < x * y * z := by positivity\n  have h\u2085 : (x + y + z) ^ 2 = 1 := by simp [hab]\n  have h\u2086 : 0 < z := by positivity\n  have h\u2087 : 0 < x * y * z := by positivity\n  have h\u2088 : 0 < x * y * z := by positivity\n  have h\u2089 : 0 < x * y * z := by positivity\n  field_simp [h\u2086, h\u2087, h\u2088, h\u2089]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_self_nonneg (x * y + y * z + z * x), mul_self_nonneg (x * y - y * z),\n    mul_self_nonneg (y * z - z * x), mul_self_nonneg (z * x - x * y)]"
  ]
 },
 {
  "old": "(x y : \u2124) (h : \u00ac x \u2223 y) : \u00ac x^2 \u2223 y^2 := by",
  "new": "(x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y):= by\n  by_cases h : x.Coprime y\n  exact Or.inl h\n  exact Or.inr h\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y):= by\n  by_cases h : x.Coprime y <;> simp [h]\n  <;> try norm_num\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y):= by\n  by_cases h : x.Coprime y\n  exact Or.inl h\n  exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y):= by\n  apply em\n  <;> simp [Coprime, Nat.Prime]\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (habc : a * b * c = 1) : (a^3 + b^3 + c^3 + 3) / 4 \u2265 b / (a + c) + c / (a + b) + a / (b + c) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (x ^ 2 / (x + y) + y ^ 2 / (y + z) + z ^ 2 / (z + x) + (3 / 4) * (x * y / (x + y) + y * z / (y + z) + z * x / (z + x))) \u2265 1 / 2 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (x ^ 2 / (x + y) + y ^ 2 / (y + z) + z ^ 2 / (z + x) + (3 / 4) * (x * y / (x + y) + y * z / (y + z) + z * x / (z + x))) \u2265 1 / 2 := by\n  have H\u2081 : x ^ 2 / (x + y) + y ^ 2 / (y + z) + z ^ 2 / (z + x) \u2265 1 / 2 := by\n    have H\u2082 : 0 < x + y + z := by linarith\n    have H\u2083 : 0 < x * y := by positivity\n    have H\u2084 : 0 < y * z := by positivity\n    have H\u2085 : 0 < z * x := by positivity\n    have H\u2086 : 0 < x + y := by linarith\n    have H\u2087 : 0 < y + z := by linarith\n    have H\u2088 : 0 < z + x := by linarith\n    have H\u2089 : x ^ 2 / (x + y) \u2265 (2 * x - (x + y) / 2) / 2 := by\n      rw [ge_iff_le]\n      rw [le_div_iff (by positivity)]\n      nlinarith [sq_nonneg (x - (x + y) / 2)]\n    have H\u2081\u2080 : y ^ 2 / (y + z) \u2265 (2 * y - (y + z) / 2) / 2 := by\n      rw [ge_iff_le]\n      rw [le_div_iff (by positivity)]\n      nlinarith [sq_nonneg (y - (y + z) / 2)]\n    have H\u2081\u2081 : z ^ 2 / (z + x) \u2265 (2 * z - (z + x) / 2) / 2 := by\n      rw [ge_iff_le]\n      rw [le_div_iff (by positivity)]\n      nlinarith [sq_nonneg (z - (z + x) / 2)]\n    nlinarith\n  have H\u2082 : 3 / 4 * (x * y / (x + y) + y * z / (y + z) + z * x / (z + x)) \u2265 0 := by positivity\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (x ^ 2 / (x + y) + y ^ 2 / (y + z) + z ^ 2 / (z + x) + (3 / 4) * (x * y / (x + y) + y * z / (y + z) + z * x / (z + x))) \u2265 1 / 2 := by\n  have h\u2080 : 0 < x * y := mul_pos hx hy\n  have h\u2081 : 0 < y * z := mul_pos hy hz\n  have h\u2082 : 0 < z * x := mul_pos hz hx\n  have h\u2083 : x * y / (x + y) + y * z / (y + z) + z * x / (z + x) \u2265 0 := by positivity\n  have h\u2084 : x ^ 2 / (x + y) + y ^ 2 / (y + z) + z ^ 2 / (z + x) \u2265 1 / 2:= by\n    have : x ^ 2 / (x + y) + y ^ 2 / (y + z) + z ^ 2 / (z + x) \u2265 (x + y + z) / 2 := by\n      rw [hab]\n      rw [add_comm]\n      have : 0 < x + y := by linarith\n      have : 0 < y + z := by linarith\n      have : 0 < z + x := by linarith\n      have : 0 < (x + y) * (y + z) * (z + x) := by positivity\n      field_simp\n      rw [div_le_div_iff]\n      nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n      positivity\n      positivity\n    linarith\n  linarith"
  ]
 },
 {
  "old": "(a b : \u211d) (h\u2081 : a ^ 5 = b ^ 5) : a = b := by",
  "new": "(a b : \u2115) (h\u2081 : a * b = 1) : a = 1 \u2227 b = 1 \u2228 a = 0 \u2227 b = 1 \u2228 a = 1 \u2227 b = 0 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h\u2081 : a * b = 1) : a = 1 \u2227 b = 1 \u2228 a = 0 \u2227 b = 1 \u2228 a = 1 \u2227 b = 0 := by\n  cases' Nat.eq_zero_or_pos a with ha ha <;> cases' Nat.eq_zero_or_pos b with hb hb <;>\n    simp_all [Nat.eq_one_of_mul_eq_one_right]\n  all_goals omega\n  <;> omega\n  <;> omega\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h\u2081 : a * b = 1) : a = 1 \u2227 b = 1 \u2228 a = 0 \u2227 b = 1 \u2228 a = 1 \u2227 b = 0 := by\n  cases' a with a\n  all_goals cases' b with b\n  all_goals simp_all\n  all_goals omega\n  all_goals simp_all\n  all_goals omega\n  all_goals simp_all\n  all_goals omega\n  all_goals simp_all\n  all_goals omega"
  ]
 },
 {
  "old": "(a b c : \u211d) (h : a ^ 2 + b ^ 2 + c ^ 2 = 1) : |(b + c) / (1 + b * c) + (c + a) / (1 + c * a) + (a + b) / (1 + a * b)| \u2264 3 * Real.sqrt 3 / 2 := by",
  "new": "(x y z : \u211d) (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2081 : x \u2260 y) (h\u2082 : y \u2260 z) (h\u2083 : z \u2260 x) : Real.sqrt (x + y) / Real.sqrt (y + z) + Real.sqrt (y + z) / Real.sqrt (z + x) + Real.sqrt (z + x) / Real.sqrt (x + y) \u2265 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2081 : x \u2260 y) (h\u2082 : y \u2260 z) (h\u2083 : z \u2260 x) :\n   Real.sqrt (x + y) / Real.sqrt (y + z) + Real.sqrt (y + z) / Real.sqrt (z + x) + Real.sqrt (z + x) / Real.sqrt (x + y) \u2265 3:= by\n  rcases h\u2080 with \u27e8x_pos, y_pos, z_pos\u27e9\n  have h\u2084 : 0 < Real.sqrt (x + y) := Real.sqrt_pos.mpr (by linarith)\n  have h\u2085 : 0 < Real.sqrt (y + z) := Real.sqrt_pos.mpr (by linarith)\n  have h\u2086 : 0 < Real.sqrt (z + x) := Real.sqrt_pos.mpr (by linarith)\n  have h\u2087 : 0 < Real.sqrt (x + y) * Real.sqrt (y + z) := mul_pos h\u2084 h\u2085\n  have h\u2088 : 0 < Real.sqrt (y + z) * Real.sqrt (z + x) := mul_pos h\u2085 h\u2086\n  have h\u2089 : 0 < Real.sqrt (z + x) * Real.sqrt (x + y) := mul_pos h\u2086 h\u2084\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_sqrt (by positivity : 0 \u2264 x + y), sq_sqrt (by positivity : 0 \u2264 y + z),\n    sq_sqrt (by positivity : 0 \u2264 z + x), mul_self_nonneg (Real.sqrt (x + y) - Real.sqrt (y + z)),\n    mul_self_nonneg (Real.sqrt (y + z) - Real.sqrt (z + x)),\n    mul_self_nonneg (Real.sqrt (z + x) - Real.sqrt (x + y))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2081 : x \u2260 y) (h\u2082 : y \u2260 z) (h\u2083 : z \u2260 x) :\n   Real.sqrt (x + y) / Real.sqrt (y + z) + Real.sqrt (y + z) / Real.sqrt (z + x) + Real.sqrt (z + x) / Real.sqrt (x + y) \u2265 3:= by\n  have h\u2084 : 0 < x := by linarith\n  have h\u2085 : 0 < y := by linarith\n  have h\u2086 : 0 < z := by linarith\n  have h\u2087 : 0 < Real.sqrt (x + y) := Real.sqrt_pos.mpr (by linarith)\n  have h\u2088 : 0 < Real.sqrt (y + z) := Real.sqrt_pos.mpr (by linarith)\n  have h\u2089 : 0 < Real.sqrt (z + x) := Real.sqrt_pos.mpr (by linarith)\n  have h\u2081\u2080 : 0 < Real.sqrt (x + y) * Real.sqrt (y + z) := by positivity\n  have h\u2081\u2081 : 0 < Real.sqrt (y + z) * Real.sqrt (z + x) := by positivity\n  have h\u2081\u2082 : 0 < Real.sqrt (z + x) * Real.sqrt (x + y) := by positivity\n  field_simp [h\u2087, h\u2088, h\u2089, h\u2081\u2080, h\u2081\u2081, h\u2081\u2082]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_sqrt (by positivity : 0 \u2264 x + y), sq_sqrt (by positivity : 0 \u2264 y + z), sq_sqrt (by positivity : 0 \u2264 z + x),\n    sq_nonneg (Real.sqrt (x + y) - Real.sqrt (y + z)), sq_nonneg (Real.sqrt (y + z) - Real.sqrt (z + x)), sq_nonneg (Real.sqrt (z + x) - Real.sqrt (x + y))]"
  ]
 },
 {
  "old": "(p n : \u2115) (hp : p.Prime) : p^n \u2223 (p^n).choose p - p^(n-1) := by",
  "new": "(p m : \u2115) (hp : p.Prime) : Nat.Coprime p m \u2228 p \u2223 m := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p m : \u2115) (hp : p.Prime) : Nat.Coprime p m \u2228 p \u2223 m := by\n  apply or_iff_not_imp_right.2\n  intro h\n  exact hp.coprime_iff_not_dvd.2 h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p m : \u2115) (hp : p.Prime) : Nat.Coprime p m \u2228 p \u2223 m := by\n  apply or_iff_not_imp_right.mpr\n  intro h\n  exact hp.coprime_iff_not_dvd.mpr h"
  ]
 },
 {
  "old": "(n : \u2115) (a : \u2115 \u2192 \u211d) (b : \u2115 \u2192 \u211d) (ha : \u2200 i, 0 < a i) (hb : \u2200 i, 0 < b i) (hab : 0 < \u2211 i in Finset.range n, a i) (hab : 0 < \u2211 i in Finset.range n, b i) : (\u2211 i in Finset.range n, (a i * b i) / (a i + b i)) \u2264 (\u2211 i in Finset.range n, a i) * (\u2211 i in Finset.range n, b i) / (\u2211 i in Finset.range n, a i + \u2211 i in Finset.range n, b i) := by",
  "new": "(x y : \u2115 \u2192 \u211d) (n : \u2115) (hx : \u2200 i, 0 < x i) (hy : \u2200 i, 0 < y i) (hxy : \u2211 i in Finset.range n, x i = 1) (hxy : \u2211 i in Finset.range n, y i = 1) : (\u2211 i in Finset.range n, (x i * y i) / (x i + y i)) \u2264 (\u2211 i in Finset.range n, x i) * (\u2211 i in Finset.range n, y i) / (\u2211 i in Finset.range n, x i + \u2211 i in Finset.range n, y i) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u2115 \u2192 \u211d) (n : \u2115) (hx : \u2200 i, 0 < x i) (hy : \u2200 i, 0 < y i) (hxy : \u2211 i in Finset.range n, x i = 1) (hxy : \u2211 i in Finset.range n, y i = 1) : (\u2211 i in Finset.range n, (x i * y i) / (x i + y i)) \u2264 (\u2211 i in Finset.range n, x i) * (\u2211 i in Finset.range n, y i) / (\u2211 i in Finset.range n, x i + \u2211 i in Finset.range n, y i) := by\n  have h\u2081 : \u2200 i \u2208 Finset.range n, (x i * y i) / (x i + y i) \u2264 (x i + y i) / 4 := by\n    intro i _\n    have hx' : 0 < x i := hx i\n    have hy' : 0 < y i := hy i\n    have hxy' : 0 < x i + y i := add_pos hx' hy'\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (x i - y i), hx', hy']\n  calc\n    (\u2211 i in Finset.range n, (x i * y i) / (x i + y i)) \u2264 \u2211 i in Finset.range n, (x i + y i) / 4 := by\n      apply Finset.sum_le_sum\n      intro i hi\n      exact h\u2081 i hi\n    _ = (\u2211 i in Finset.range n, (x i + y i)) / 4 := by\n      simp [Finset.sum_div]\n    _ = (\u2211 i in Finset.range n, x i + \u2211 i in Finset.range n, y i) / 4 := by\n      simp [Finset.sum_add_distrib]\n    _ \u2264 (\u2211 i in Finset.range n, x i) * (\u2211 i in Finset.range n, y i) / (\u2211 i in Finset.range n, x i + \u2211 i in Finset.range n, y i) := by\n      have : 0 \u2264 \u2211 i in Finset.range n, x i := Finset.sum_nonneg fun i _ => le_of_lt (hx i)\n      have : 0 \u2264 \u2211 i in Finset.range n, y i := Finset.sum_nonneg fun i _ => le_of_lt (hy i)\n      have : 0 \u2264 \u2211 i in Finset.range n, x i + \u2211 i in Finset.range n, y i := by positivity\n      have : 0 \u2264 (\u2211 i in Finset.range n, x i) * (\u2211 i in Finset.range n, y i) := by positivity\n      field_simp [hxy]\n      rw [div_le_div_iff (by positivity) (by positivity)]\n      nlinarith [sq_nonneg (\u2211 i in Finset.range n, x i - \u2211 i in Finset.range n, y i)]\n  <;> assumption"
  ]
 },
 {
  "old": "(a b c : \u211d) (hab : a > 1 \u2227 b > 1 \u2227 c > 1) : (a^a / b^b + b^b / c^c + c^c / a^a) \u2265 a / b + b / c + c / a := by",
  "new": ": \u2200 x : \u211d, x > 1 \u2192 (x^x / (x + 1) ^ (x + 1) + (x + 1) ^ (x + 1) / (x + 2) ^ (x + 2) + (x + 2) ^ (x + 2) / x ^ x) \u2265 1 / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 1 \u2192 (x^x / (x + 1) ^ (x + 1) + (x + 1) ^ (x + 1) / (x + 2) ^ (x + 2) + (x + 2) ^ (x + 2) / x ^ x) \u2265 1 / 2:= by\n  intro x hx\n  have h\u2080 : x ^ x / (x + 1) ^ (x + 1) + (x + 1) ^ (x + 1) / (x + 2) ^ (x + 2) + (x + 2) ^ (x + 2) / x ^ x \u2265 1 / 2 := by\n    have : x ^ x / (x + 1) ^ (x + 1) \u2265 0 := by positivity\n    have : (x + 1) ^ (x + 1) / (x + 2) ^ (x + 2) \u2265 0 := by positivity\n    have : (x + 2) ^ (x + 2) / x ^ x \u2265 1 / 2 := by\n      have : x ^ x \u2264 (x + 2) ^ (x + 2) := by\n        calc\n          x ^ x \u2264 (x + 2) ^ x := by gcongr <;> linarith\n          _ \u2264 (x + 2) ^ (x + 2) := by gcongr <;> linarith\n      have : (x + 2) ^ (x + 2) / x ^ x \u2265 1 := by\n        rw [ge_iff_le, le_div_iff (by positivity)]\n        nlinarith\n      linarith\n    linarith\n  exact h\u2080",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 1 \u2192 (x^x / (x + 1) ^ (x + 1) + (x + 1) ^ (x + 1) / (x + 2) ^ (x + 2) + (x + 2) ^ (x + 2) / x ^ x) \u2265 1 / 2:= by\n  intro x hx\n  have h\u2080 : 0 < x := by positivity\n  have h\u2081 : 0 < x ^ x := by positivity\n  have h\u2082 : 0 < (x + 1) ^ (x + 1) := by positivity\n  have h\u2083 : 0 < (x + 2) ^ (x + 2) := by positivity\n  have h\u2084 : 0 < x ^ x * (x + 1) ^ (x + 1) := by positivity\n  have h\u2085 : 0 < (x + 1) ^ (x + 1) * (x + 2) ^ (x + 2) := by positivity\n  have h\u2086 : 0 < x ^ x * (x + 2) ^ (x + 2) := by positivity\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x ^ x - (x + 1) ^ (x + 1)), sq_nonneg ((x + 1) ^ (x + 1) - (x + 2) ^ (x + 2)),\n    sq_nonneg ((x + 2) ^ (x + 2) - x ^ x)]"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x^2*y/z + y^2*z/x + z^2*x/y + 2*(y/(x*z) + z/(x*y) + x/(y*z))) \u2265 9 := by",
  "new": ": x_bar * (x_bar - 2 * (x_bar_1)) + x_bar_1 * (x_bar_1 - 2 * (x_bar_0)) \u2264 x_bar * (x_bar - 2 * (x_bar_1)) + x_bar_1 * (x_bar_1 - 2 * (x_bar_0)) + (x_bar - x_bar_1) * (x_bar_1 - x_bar_0) * (x_bar_0 - x_bar) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    x_bar * (x_bar - 2 * (x_bar_1)) + x_bar_1 * (x_bar_1 - 2 * (x_bar_0)) \u2264\n       x_bar * (x_bar - 2 * (x_bar_1)) + x_bar_1 * (x_bar_1 - 2 * (x_bar_0)) +\n        (x_bar - x_bar_1) * (x_bar_1 - x_bar_0) * (x_bar_0 - x_bar) := by\n  have h\u2080 : (x_bar - x_bar_1) * (x_bar_1 - x_bar_0) \u2265 0 := by\n    nlinarith\n  have h\u2081 : x_bar_0 - x_bar \u2265 0 := by\n    nlinarith\n  have h\u2082 : x_bar_1 - x_bar \u2265 0 := by\n    nlinarith\n  nlinarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    x_bar * (x_bar - 2 * (x_bar_1)) + x_bar_1 * (x_bar_1 - 2 * (x_bar_0)) \u2264\n       x_bar * (x_bar - 2 * (x_bar_1)) + x_bar_1 * (x_bar_1 - 2 * (x_bar_0)) +\n        (x_bar - x_bar_1) * (x_bar_1 - x_bar_0) * (x_bar_0 - x_bar) := by\n  cases' le_total x_bar x_bar_1 with h h <;>\n  cases' le_total x_bar_1 x_bar_0 with h' h' <;>\n  cases' le_total x_bar_0 x_bar with h'' h'' <;>\n  simp_all [mul_comm, mul_left_comm, mul_assoc, sub_eq_add_neg,\n    add_assoc, add_left_comm, add_comm]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (hab : a + b + c = 3) : (2 / 3) * (a * b + b * c + c * a) \u2264 1 + a * b / (a + b + 1) + b * c / (b + c + 1) + c * a / (c + a + 1) := by",
  "new": "(x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (hab : x + y + z = 1) : (x ^ 2 + y ^ 2 + z ^ 2) ^ 2 \u2264 (x + y + z) ^ 2 * (x ^ 2 + y ^ 2 + z ^ 2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (hab : x + y + z = 1) : (x ^ 2 + y ^ 2 + z ^ 2) ^ 2 \u2264 (x + y + z) ^ 2 * (x ^ 2 + y ^ 2 + z ^ 2):= by\n  have : (x + y + z) ^ 2 = 1 := by simp [hab]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z), mul_nonneg hx hy, mul_nonneg hx hz, mul_nonneg hy hz]\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (hab : x + y + z = 1) : (x ^ 2 + y ^ 2 + z ^ 2) ^ 2 \u2264 (x + y + z) ^ 2 * (x ^ 2 + y ^ 2 + z ^ 2):= by\n  have h\u2080 : x ^ 2 + y ^ 2 + z ^ 2 \u2264 1 := by\n    nlinarith [sq_nonneg (x + y + z), sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  nlinarith [mul_nonneg hx hy, mul_nonneg hx hz, mul_nonneg hy hz]\n  <;> simp [*]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (hab : x + y + z = 1) : (x ^ 2 + y ^ 2 + z ^ 2) ^ 2 \u2264 (x + y + z) ^ 2 * (x ^ 2 + y ^ 2 + z ^ 2):= by\n  rw [hab]\n  nlinarith [sq_nonneg (x ^ 2 + y ^ 2 + z ^ 2 - x - y - z), sq_nonneg x, sq_nonneg y, sq_nonneg z, mul_nonneg hx hy, mul_nonneg hx hz, mul_nonneg hy hz]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (hab : x + y + z = 1) : (x ^ 2 + y ^ 2 + z ^ 2) ^ 2 \u2264 (x + y + z) ^ 2 * (x ^ 2 + y ^ 2 + z ^ 2):= by\n  simp only [add_assoc, add_left_comm, pow_two]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x), mul_nonneg hx hy, mul_nonneg hy hz, mul_nonneg hz hx, mul_nonneg (sq_nonneg (x + y)) hz, mul_nonneg (sq_nonneg (y + z)) hx, mul_nonneg (sq_nonneg (z + x)) hy]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a * b * c \u2265 (a ^ 3 + b ^ 3 + c ^ 3 + a * b * c) / (4 * a * b * c) * (a + b - c) * (b + c - a) * (c + a - b) := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : 0 \u2264 a * b - a * c + c * b - a * b * (a + b - c) / (a + b + c) + a * c * (a + c - b) / (a + c + b) - b * c * (b + c - a) / (b + c + a):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n 0 \u2264 a * b - a * c + c * b - a * b * (a + b - c) / (a + b + c) + a * c * (a + c - b) / (a + c + b) - b * c * (b + c - a) / (b + c + a):= by\n  have hab := mul_pos ha hb\n  have hac := mul_pos ha hc\n  have hbc := mul_pos hb hc\n  field_simp [hab.ne', hac.ne', hbc.ne']\n  ring_nf\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n 0 \u2264 a * b - a * c + c * b - a * b * (a + b - c) / (a + b + c) + a * c * (a + c - b) / (a + c + b) - b * c * (b + c - a) / (b + c + a):= by\n  apply le_of_sub_nonneg\n  field_simp [ha.ne', hb.ne', hc.ne', add_comm]\n  ring_nf\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n 0 \u2264 a * b - a * c + c * b - a * b * (a + b - c) / (a + b + c) + a * c * (a + c - b) / (a + c + b) - b * c * (b + c - a) / (b + c + a):= by\n  refine' le_of_sub_nonneg _\n  field_simp [ha, hb, hc]\n  ring\n  positivity"
  ]
 },
 {
  "old": "(x y : \u211d) : \u00ac\u2203 c : \u211d, 0 < c \u2227 \u2200 a b : \u2124, a \u2260 0 \u2227 b \u2260 0 \u2192 |a * x - b * y| > c := by",
  "new": "(x y : \u2124) (h : x \u2260 0 \u2227 y \u2260 0) : (\u2203 z : \u2124, x * z = y) \u2228 (\u2203 z : \u2124, x * z \u2260 y):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2124) (h : x \u2260 0 \u2227 y \u2260 0) :\n    (\u2203 z : \u2124, x * z = y) \u2228 (\u2203 z : \u2124, x * z \u2260 y):= by\n  by_cases h1 : \u2203 z : \u2124, x * z = y\n  exact Or.inl h1\n  exact Or.inr (by simp_all)\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2124) (h : x \u2260 0 \u2227 y \u2260 0) :\n    (\u2203 z : \u2124, x * z = y) \u2228 (\u2203 z : \u2124, x * z \u2260 y):= by\n  by_cases h\u2081 : \u2203 z : \u2124, x * z = y\n  <;> by_cases h\u2082 : \u2203 z : \u2124, x * z \u2260 y\n  <;> simp_all\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2124) (h : x \u2260 0 \u2227 y \u2260 0) :\n    (\u2203 z : \u2124, x * z = y) \u2228 (\u2203 z : \u2124, x * z \u2260 y):= by\n  by_cases hxy : (\u2203 z : \u2124, x * z = y)\n  exact Or.inl hxy\n  exact Or.inr (by simp_all)"
  ]
 },
 {
  "old": ": \u2200 x : \u211d, (cos x)^3 - (cos x)^2 = (cos x)^2 * (cos x - 1) \u2227 (cos x)^2 * (cos x - 1) \u2264 0 := by",
  "new": ": \u2200 x : \u211d, Real.sqrt (x^2+1) + 2 * Real.sqrt (x^2+1) * Real.sqrt (x^2+2) \u2265 0 \u2227 Real.sqrt (x^2+1) + 2 * Real.sqrt (x^2+1) * Real.sqrt (x^2+2) \u2265 0 \u2227 2 * Real.sqrt (x^2+1) * Real.sqrt (x^2+2) \u2265 0 \u2194 \u2200 x : \u211d, Real.sqrt (x^2+1) \u2265 0 \u2227 Real.sqrt (x^2+2) \u2265 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test :\n   \u2200 x : \u211d,  Real.sqrt (x^2+1) + 2 * Real.sqrt (x^2+1) * Real.sqrt (x^2+2) \u2265 0 \u2227  Real.sqrt (x^2+1) + 2 * Real.sqrt (x^2+1) * Real.sqrt (x^2+2) \u2265 0 \u2227 2 * Real.sqrt (x^2+1) * Real.sqrt (x^2+2) \u2265 0 \u2194 \u2200 x : \u211d, Real.sqrt (x^2+1) \u2265 0 \u2227 Real.sqrt (x^2+2) \u2265 0:= by\n  intro x\n  constructor\n  \u00b7 intro h\n    intro x\n    constructor\n    \u00b7 exact Real.sqrt_nonneg _\n    \u00b7 exact Real.sqrt_nonneg _\n  \u00b7 intro h\n    constructor\n    \u00b7 nlinarith [h x]\n    \u00b7 constructor\n      \u00b7 nlinarith [h x]\n      \u00b7 nlinarith [h x]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test :\n   \u2200 x : \u211d,  Real.sqrt (x^2+1) + 2 * Real.sqrt (x^2+1) * Real.sqrt (x^2+2) \u2265 0 \u2227  Real.sqrt (x^2+1) + 2 * Real.sqrt (x^2+1) * Real.sqrt (x^2+2) \u2265 0 \u2227 2 * Real.sqrt (x^2+1) * Real.sqrt (x^2+2) \u2265 0 \u2194 \u2200 x : \u211d, Real.sqrt (x^2+1) \u2265 0 \u2227 Real.sqrt (x^2+2) \u2265 0:= by\n  intro x\n  constructor\n  intro h\n  exact fun x => \u27e8Real.sqrt_nonneg (x ^ 2 + 1), Real.sqrt_nonneg (x ^ 2 + 2)\u27e9\n  intro h\n  have h\u2081 := h x\n  exact \u27e8by nlinarith [h\u2081.1, h\u2081.2], by nlinarith [h\u2081.1, h\u2081.2], by nlinarith [h\u2081.1, h\u2081.2]\u27e9"
  ]
 },
 {
  "old": "(a b c : \u211d) (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : (72 * a * b * c * (a + b + c) ^ 2) / (a + b) / (b + c) / (c + a) + 7 * (a ^ 2 + b ^ 2 + c ^ 2) \u2264 34 * (a * b + b * c + c * a) := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a + b > c \u2192 b + c > a \u2192 c + a > b \u2192 (72 * a * b * c * (a + b + c) ^ 2) / (a + b) / (b + c) / (c + a) + 7 * (a ^ 2 + b ^ 2 + c ^ 2) \u2264 34 * (a * b + b * c + c * a) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a + b > c \u2192 b + c > a \u2192 c + a > b \u2192 (72 * a * b * c * (a + b + c) ^ 2) / (a + b) / (b + c) / (c + a) + 7 * (a ^ 2 + b ^ 2 + c ^ 2) \u2264 34 * (a * b + b * c + c * a)  := by\n  rintro a b c \u27e8h\u2080a, h\u2080b, h\u2080c\u27e9 h\u2081 h\u2082 h\u2083\n  field_simp\n  rw [div_le_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_nonneg (sub_nonneg.mpr h\u2081.le) (sub_nonneg.mpr h\u2082.le),\n    mul_nonneg (sub_nonneg.mpr h\u2082.le) (sub_nonneg.mpr h\u2083.le),\n    mul_nonneg (sub_nonneg.mpr h\u2083.le) (sub_nonneg.mpr h\u2081.le),\n    mul_nonneg (sq_nonneg (a - b)) (sub_nonneg.mpr h\u2082.le),\n    mul_nonneg (sq_nonneg (b - c)) (sub_nonneg.mpr h\u2083.le),\n    mul_nonneg (sq_nonneg (c - a)) (sub_nonneg.mpr h\u2081.le),\n    mul_nonneg (sq_nonneg (a + b - 3 * c)) (sub_nonneg.mpr h\u2081.le),\n    mul_nonneg (sq_nonneg (b + c - 3 * a)) (sub_nonneg.mpr h\u2082.le),\n    mul_nonneg (sq_nonneg (c + a - 3 * b)) (sub_nonneg.mpr h\u2083.le)]"
  ]
 },
 {
  "old": "(p : \u2115) (hp : p.Prime) (k : \u2115) (n : \u2115) : p \u2223 choose (p^n) k := by",
  "new": "(p : \u2115) {n : \u2115} (hn : n \u2260 0) (hp : p.Prime) : p \u2223 n \u2228 (Nat.Coprime p n):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {n : \u2115} (hn : n \u2260 0) (hp : p.Prime) :\n     p \u2223 n \u2228 (Nat.Coprime p n):= by\n  refine' or_iff_not_imp_left.2 fun h\u2080 => _\n  exact hp.coprime_iff_not_dvd.2 h\u2080",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {n : \u2115} (hn : n \u2260 0) (hp : p.Prime) :\n     p \u2223 n \u2228 (Nat.Coprime p n):= by\n  by_cases h : p \u2223 n <;> by_cases h' : n = 1 <;> simp_all [Nat.coprime_iff_gcd_eq_one,\n    hp.coprime_iff_not_dvd.2, h']\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega"
  ]
 },
 {
  "old": "(a b c : \u2115) (hab : a \u2223 b^3) (hbc : b \u2223 c^3) (hca : c \u2223 a^3) : a * b * c \u2223 (a + b + c)^13 := by",
  "new": "(a b : \u2115) (h : \u2200 (d : \u2115), d \u2223 a \u2192 d \u2223 b \u2192 d = 1) : a.Coprime b := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_of_dvd' (a b : \u2115) (h : \u2200 (d : \u2115), d \u2223 a \u2192 d \u2223 b \u2192 d = 1) : a.Coprime b := by\n  rw [Nat.coprime_iff_gcd_eq_one]\n  have h' := h (Nat.gcd a b) (Nat.gcd_dvd_left a b) (Nat.gcd_dvd_right a b)\n  simp_all\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_of_dvd' (a b : \u2115) (h : \u2200 (d : \u2115), d \u2223 a \u2192 d \u2223 b \u2192 d = 1) : a.Coprime b := by\n  rw [Nat.coprime_iff_gcd_eq_one]\n  apply h\n  exact Nat.gcd_dvd_left a b\n  exact Nat.gcd_dvd_right a b",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_of_dvd' (a b : \u2115) (h : \u2200 (d : \u2115), d \u2223 a \u2192 d \u2223 b \u2192 d = 1) : a.Coprime b := by\n  rw [Nat.coprime_iff_gcd_eq_one]\n  apply h\n  exact Nat.gcd_dvd_left a b\n  exact Nat.gcd_dvd_right a b\n  <;> simp\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_of_dvd' (a b : \u2115) (h : \u2200 (d : \u2115), d \u2223 a \u2192 d \u2223 b \u2192 d = 1) : a.Coprime b := by\n  simp only [Nat.coprime_iff_gcd_eq_one, Nat.gcd_eq_gcd_ab]\n  have := h (Nat.gcd a b) (Nat.gcd_dvd_left a b) (Nat.gcd_dvd_right a b)\n  simp [this]"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (hd : d \u2265 0) (hab : a + b + c + d = 1) : ((a + b) * (b + c) * (c + d) * (d + a))^(3 / 2) \u2265 4 * a * b * c * d := by",
  "new": "(x y z: \u211d) (hx: 0 \u2264 x) (hy: 0 \u2264 y) (hz: 0 \u2264 z) (hab : x + y + z = 1) : (x * (x + y) * (y + z) * (y + z) + y * (x + y) * (x + z) * (x + z) + z * (x + z) * (y + z) * (x + y)) * (x * z + y * x + z * y) \u2265 4 * x ^ 2 * y ^ 2 * z ^ 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z: \u211d) (hx: 0 \u2264 x) (hy: 0 \u2264 y) (hz: 0 \u2264 z) (hab : x + y + z = 1) : (x * (x + y) * (y + z) * (y + z) + y * (x + y) * (x + z) * (x + z) + z * (x + z) * (y + z) * (x + y)) * (x * z + y * x + z * y) \u2265 4 * x ^ 2 * y ^ 2 * z ^ 2:= by\n  have h\u2080 : 0 \u2264 x * y := by positivity\n  have h\u2081 : 0 \u2264 y * z := by positivity\n  have h\u2082 : 0 \u2264 z * x := by positivity\n  have h\u2083 : 0 \u2264 x * y * z := by positivity\n  have h\u2084 : 0 \u2264 x * y * z * (x * z + y * x + z * y) := by positivity\n  have h\u2085 : 0 \u2264 x * z + y * x + z * y := by positivity\n  have h\u2086 : 0 \u2264 x * (x + y) * (y + z) * (y + z) := by positivity\n  have h\u2087 : 0 \u2264 y * (x + y) * (x + z) * (x + z) := by positivity\n  have h\u2088 : 0 \u2264 z * (x + z) * (y + z) * (x + y) := by positivity\n  nlinarith [sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y)]\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z: \u211d) (hx: 0 \u2264 x) (hy: 0 \u2264 y) (hz: 0 \u2264 z) (hab : x + y + z = 1) : (x * (x + y) * (y + z) * (y + z) + y * (x + y) * (x + z) * (x + z) + z * (x + z) * (y + z) * (x + y)) * (x * z + y * x + z * y) \u2265 4 * x ^ 2 * y ^ 2 * z ^ 2:= by\n  have h\u2080 : 0 \u2264 x * y := by positivity\n  have h\u2081 : 0 \u2264 y * z := by positivity\n  have h\u2082 : 0 \u2264 z * x := by positivity\n  have h\u2083 : 0 \u2264 x * y * z := by positivity\n  have h\u2084 : 0 \u2264 x * (x + y) * (y + z) * (y + z) := by positivity\n  have h\u2085 : 0 \u2264 y * (x + y) * (x + z) * (x + z) := by positivity\n  have h\u2086 : 0 \u2264 z * (x + z) * (y + z) * (x + y) := by positivity\n  nlinarith [sq_nonneg (x * y + y * z + z * x),\n    sq_nonneg (x * y - y * z),\n    sq_nonneg (y * z - z * x),\n    sq_nonneg (z * x - x * y)]\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (1 / (a + b) + 1 / (b + c) + 1 / (c + a)) \u2264 (1 / 2) * (1 / a + 1 / b + 1 / c) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x^2 + y^2 + z^2) * (y^2 + x^2 + z^2) * (z^2 + x^2 + y^2) \u2265 2 * (x * y) * (y * z) * (z * x):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   (x^2 + y^2 + z^2) * (y^2 + x^2 + z^2) * (z^2 + x^2 + y^2) \u2265 2 * (x * y) * (y * z) * (z * x):= by\n  simp only [mul_assoc]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z), sq_nonneg (x^2 - y^2), sq_nonneg (x^2 - z^2), sq_nonneg (y^2 - z^2), mul_nonneg hx.le hy.le, mul_nonneg hx.le hz.le, mul_nonneg hy.le hz.le, mul_nonneg (sq_nonneg x) (sq_nonneg y), mul_nonneg (sq_nonneg x) (sq_nonneg z), mul_nonneg (sq_nonneg y) (sq_nonneg z)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   (x^2 + y^2 + z^2) * (y^2 + x^2 + z^2) * (z^2 + x^2 + y^2) \u2265 2 * (x * y) * (y * z) * (z * x):= by\n  have h1 : \u2200 a b : \u211d, a ^ 2 + b ^ 2 \u2265 2 * a * b := by\n    intro a b\n    linarith [sq_nonneg (a - b)]\n  nlinarith [h1 x y, h1 y z, h1 z x, h1 (x ^ 2) (y ^ 2), h1 (y ^ 2) (z ^ 2),\n    h1 (z ^ 2) (x ^ 2), h1 (x * y) (y * z), h1 (y * z) (z * x),\n    h1 (z * x) (x * y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   (x^2 + y^2 + z^2) * (y^2 + x^2 + z^2) * (z^2 + x^2 + y^2) \u2265 2 * (x * y) * (y * z) * (z * x):= by\n  have hxy : 0 < x * y := by positivity\n  have hyz : 0 < y * z := by positivity\n  have hxz : 0 < z * x := by positivity\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    sq_nonneg (x^2 - y^2), sq_nonneg (y^2 - z^2), sq_nonneg (z^2 - x^2),\n    mul_nonneg hxy.le hyz.le, mul_nonneg hyz.le hxz.le, mul_nonneg hxz.le hxy.le,\n    mul_nonneg (sq_nonneg (x - y)) (sq_nonneg (y - z)),\n    mul_nonneg (sq_nonneg (y - z)) (sq_nonneg (z - x)),\n    mul_nonneg (sq_nonneg (z - x)) (sq_nonneg (x - y))]\n  <;> try norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   (x^2 + y^2 + z^2) * (y^2 + x^2 + z^2) * (z^2 + x^2 + y^2) \u2265 2 * (x * y) * (y * z) * (z * x):= by\n  have H : \u2200 t : \u211d, t^2 \u2265 0 := by\n    intro t\n    exact sq_nonneg t\n  nlinarith [H (x^2 - y^2), H (y^2 - z^2), H (z^2 - x^2),\n    H (x * y - y * z), H (y * z - z * x), H (z * x - x * y),\n    H (x * y + y * z), H (y * z + z * x), H (z * x + x * y)]\n  <;> simp\n  <;> nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2081 : a + b + c = 1) : 5 / 3 * (a * b + b * c + c * a) \u2264 4 / 9 * (a + b + c) ^ 3 + 3 * a * b * c := by",
  "new": "(x y z : \u211d) (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2081 : x + y + z = 1) : 4 / 9 * (x + y + z) ^ 3 + 3 * x * y * z \u2265 5 / 3 * (x * y + y * z + z * x):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d)\n  (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z)\n  (h\u2081 : x + y + z = 1) :\n  4 / 9 * (x + y + z) ^ 3 + 3 * x * y * z \u2265 5 / 3 * (x * y + y * z + z * x):= by\n  have h\u2082 : 0 < x * y := by\n    nlinarith\n  have h\u2083 : 0 < y * z := by\n    nlinarith\n  have h\u2084 : 0 < z * x := by\n    nlinarith\n  have h\u2085 : 0 < x * y * z := by\n    nlinarith\n  have h\u2086 : 0 < x * y + y * z + z * x := by\n    nlinarith\n  nlinarith [mul_self_nonneg (x - y), mul_self_nonneg (y - z),\n    mul_self_nonneg (z - x), mul_self_nonneg (x + y + z - 3 * x),\n    mul_self_nonneg (x + y + z - 3 * y), mul_self_nonneg (x + y + z - 3 * z)]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d)\n  (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z)\n  (h\u2081 : x + y + z = 1) :\n  4 / 9 * (x + y + z) ^ 3 + 3 * x * y * z \u2265 5 / 3 * (x * y + y * z + z * x):= by\n  simp only [h\u2081, mul_one, mul_comm]\n  nlinarith [mul_self_nonneg (x - 1 / 3), mul_self_nonneg (y - 1 / 3), mul_self_nonneg (z - 1 / 3),\n    mul_self_nonneg (x + y + z - 1), mul_self_nonneg (x - y), mul_self_nonneg (y - z), mul_self_nonneg (z - x)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) : (b^2 + c^2) / (a + b) + (c^2 + a^2) / (b + c) + (a^2 + b^2) / (a + c) \u2265 3 * Real.sqrt (3 * (a^3 * b + b^3 * c + c^3 * a)) := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) : a^2 / (b + c) + b^2 / (a + c) + c^2 / (a + b) \u2265 a * (b + c) / 2 + b * (a + c) / 2 + c * (a + b) / 2 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) :\n       a^2 / (b + c) + b^2 / (a + c) + c^2 / (a + b) \u2265\n       a * (b + c) / 2 + b * (a + c) / 2 + c * (a + b) / 2 := by\n  have h\u2081 : 0 < b + c := by linarith\n  have h\u2082 : 0 < a + c := by linarith\n  have h\u2083 : 0 < a + b := by linarith\n  have h\u2084 : 0 < a * b := by positivity\n  have h\u2085 : 0 < b * c := by positivity\n  have h\u2086 : 0 < a * c := by positivity\n  have h\u2087 : 0 < (b + c) * (a + c) * (a + b) := by positivity\n  have h\u2088 : 0 < (b + c) * (a + c) * (a + b) * (a + b + c) := by positivity\n  field_simp [ha, hb, hc, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087, h\u2088]\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  positivity\n  positivity"
  ]
 },
 {
  "old": "(a b c k : \u211d) (h : 0 < a \u2227 0 < b \u2227 0 < c) (h2 : a + b + c = 1) (h3 : 0 < k \u2227 k \u2264 1) : 9*a*b*c*(a+b+c)*k^2 - 4*(a+b+c)^2*(a^2+b^2+c^2)*k + 9*(a^2+b^2+c^2)^2 \u2265 0 := by",
  "new": "(a b c : \u211d) (h1 : a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0) (h2 : a + b + c = 1) : 9 * (a * b * c) ^ 2 + 9 * (a ^ 2 * b ^ 2 * c ^ 2) \u2264 (a + b + c) ^ 2 * (a ^ 2 + b ^ 2 + c ^ 2 + 3 * (a * b + b * c + c * a) ^ 2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (a b c : \u211d) (h1 : a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0) (h2 : a + b + c = 1) :  9 * (a * b * c) ^ 2 + 9 * (a ^ 2 * b ^ 2 * c ^ 2) \u2264 (a + b + c) ^ 2 * (a ^ 2 + b ^ 2 + c ^ 2 + 3 * (a * b + b * c + c * a) ^ 2):= by\n  have : (a + b + c) ^ 2 = 1 := by simp [h2]\n  nlinarith [sq_nonneg (a * b + b * c + c * a), mul_nonneg h1.1 h1.2.1, mul_nonneg h1.2.1 h1.2.2, mul_nonneg h1.1 h1.2.2, sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n  <;> norm_num"
  ]
 },
 {
  "old": "(k : \u2115) : \u2203 x y : \u2124, x^2 + 7*y^2 = 2^k := by",
  "new": "(x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y):= by\n  have h : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y) := by\n    by_cases h : Nat.Coprime x y\n    exact Or.inl h\n    exact Or.inr h\n  exact h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y):= by\n  by_cases h : Nat.Coprime x y <;> simp [h]\n  <;> simp [Nat.coprime_iff_gcd_eq_one, h]\n  <;> omega\n  <;> simp_all",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y):= by\n  by_cases h : Nat.Coprime x y\n  exact Or.inl h\n  exact Or.inr h"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : x \u2265 2 \u2227 y \u2265 2 \u2227 z \u2265 2) : (x^3 + y) * (y^3 + z) * (z^3 + x) \u2265 125 * x * y * z := by",
  "new": "(n m : \u2115) (hn : n \u2265 2) (hm : m \u2265 2) : Nat.Coprime n m \u2228 \u2203 p : \u2115, p \u2264 m \u2227 p \u2264 n \u2227 Nat.Coprime p n \u2227 Nat.Coprime p m := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_small_coprime (n m : \u2115) (hn : n \u2265 2) (hm : m \u2265 2) : Nat.Coprime n m \u2228 \u2203 p : \u2115, p \u2264 m \u2227 p \u2264 n \u2227 Nat.Coprime p n \u2227 Nat.Coprime p m  := by\n  refine' or_iff_not_imp_left.2 fun h => _\n  exact \u27e81, by omega, by omega, by simp [Nat.coprime_one_left], by simp [Nat.coprime_one_right]\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_small_coprime (n m : \u2115) (hn : n \u2265 2) (hm : m \u2265 2) : Nat.Coprime n m \u2228 \u2203 p : \u2115, p \u2264 m \u2227 p \u2264 n \u2227 Nat.Coprime p n \u2227 Nat.Coprime p m  := by\n  by_cases h : Nat.Coprime n m\n  exacts [Or.inl h, Or.inr \u27e81, by omega, by omega, by simp [Nat.coprime_one_left], by simp [Nat.coprime_one_left]\u27e9]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_small_coprime (n m : \u2115) (hn : n \u2265 2) (hm : m \u2265 2) : Nat.Coprime n m \u2228 \u2203 p : \u2115, p \u2264 m \u2227 p \u2264 n \u2227 Nat.Coprime p n \u2227 Nat.Coprime p m  := by\n  refine' or_iff_not_imp_left.mpr fun h => _\n  exact \u27e81, by omega, by omega, by simp [Nat.coprime_one_left], by simp [Nat.coprime_one_left]\u27e9\n  <;> omega\n  <;> simp [Nat.coprime_one_left]"
  ]
 },
 {
  "old": "(m n : \u2115) : Nat.gcd (2^m - 1) (2^n - 1) = 2^Nat.gcd m n - 1 := by",
  "new": "(m n : \u2115) : (Nat.Coprime m n) \u2228 \u00ac(Nat.Coprime m n):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (m n : \u2115) : (Nat.Coprime m n) \u2228 \u00ac(Nat.Coprime m n):= by\n  by_cases h : Nat.Coprime m n\n  left; exact h\n  right; exact h\n  <;> simp_all\n  <;> simp_all\n  <;> simp_all\n  <;> simp_all",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (m n : \u2115) : (Nat.Coprime m n) \u2228 \u00ac(Nat.Coprime m n):= by\n  by_cases h : Nat.Coprime m n\n  exact Or.inl h\n  exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (m n : \u2115) : (Nat.Coprime m n) \u2228 \u00ac(Nat.Coprime m n):= by\n  cases em (Nat.Coprime m n)\n  case inl h => exact Or.inl h\n  case inr h => exact Or.inr h"
  ]
 },
 {
  "old": ": \u00ac 3 \u2223 n \u2192 \u00ac 3 \u2223 n^2 - 6*n + 12 := by",
  "new": "(a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by\n  by_cases h : Nat.Coprime a b <;> simp_all\n  <;> try simp_all [Nat.Coprime, Nat.gcd_eq_right]\n  <;> linarith\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by\n  by_cases h : Nat.Coprime a b\n  case pos => exact Or.inl h\n  case neg => exact Or.inr h"
  ]
 },
 {
  "old": "(a b c : \u211d) : (a^4 + b^4 + c^4) / 3 \u2265 (a + b + c)^4 / 81 \u2227 (a + b + c)^4 / 81 \u2265 (a + b + c) / 3 := by",
  "new": "(a b c : \u211d) : a ^ 2 / b ^ 2 \u2264 3 \u2227 b ^ 2 / a ^ 2 \u2264 3 \u2192 a ^ 4 / b ^ 4 \u2264 9:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210 (a b c : \u211d) : a ^ 2 / b ^ 2 \u2264 3 \u2227 b ^ 2 / a ^ 2 \u2264 3 \u2192 a ^ 4 / b ^ 4 \u2264 9:= by\n  rintro \u27e8h\u2081, h\u2082\u27e9\n  have h\u2083 : a ^ 4 / b ^ 4 = (a ^ 2 / b ^ 2) ^ 2 := by ring\n  rw [h\u2083]\n  have h\u2084 : (a ^ 2 / b ^ 2) ^ 2 \u2264 3 ^ 2 := by gcongr <;> assumption\n  linarith\n  <;> assumption\n  <;> assumption"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (2 * y / (z + x) + 1) * (2 * z / (x + y) + 1) * (2 * x / (y + z) + 1) \u2265 16 / 9 * (1 / (z + x) + 1 / (x + y) + 1 / (y + z)) * (x + y + z) := by",
  "new": ": \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192 (2 * y / (z + x) + 1) * (2 * z / (x + y) + 1) * (2 * x / (y + z) + 1) \u2265 16 / 9 * (1 / (z + x) + 1 / (x + y) + 1 / (y + z)) * (x + y + z):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192\n   (2 * y / (z + x) + 1) * (2 * z / (x + y) + 1) * (2 * x / (y + z) + 1) \u2265\n   16 / 9 * (1 / (z + x) + 1 / (x + y) + 1 / (y + z)) * (x + y + z):= by\n  rintro x y z \u27e8hx, hy, hz\u27e9\n  have h1 : 0 < x + y := add_pos hx hy\n  have h2 : 0 < x + z := add_pos hx hz\n  have h3 : 0 < y + z := add_pos hy hz\n  have h4 : 0 < x * y := mul_pos hx hy\n  have h5 : 0 < x * z := mul_pos hx hz\n  have h6 : 0 < y * z := mul_pos hy hz\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (y ^ 2 - z ^ 2), sq_nonneg (z ^ 2 - x ^ 2),\n    sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192\n   (2 * y / (z + x) + 1) * (2 * z / (x + y) + 1) * (2 * x / (y + z) + 1) \u2265\n   16 / 9 * (1 / (z + x) + 1 / (x + y) + 1 / (y + z)) * (x + y + z):= by\n  rintro x y z \u27e8hx, hy, hz\u27e9\n  have : 0 < x * y := mul_pos hx hy\n  have : 0 < y * z := mul_pos hy hz\n  have : 0 < z * x := mul_pos hz hx\n  field_simp [add_comm]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (y ^ 2 - z ^ 2), sq_nonneg (z ^ 2 - x ^ 2),\n    sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192\n   (2 * y / (z + x) + 1) * (2 * z / (x + y) + 1) * (2 * x / (y + z) + 1) \u2265\n   16 / 9 * (1 / (z + x) + 1 / (x + y) + 1 / (y + z)) * (x + y + z):= by\n  intro x y z h\n  rcases h with \u27e8h\u2080, h\u2081, h\u2082\u27e9\n  field_simp [add_comm, add_left_comm, mul_comm, mul_left_comm]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (x ^ 2 - z ^ 2), sq_nonneg (y ^ 2 - z ^ 2),\n    mul_nonneg h\u2080.le h\u2081.le, mul_nonneg h\u2080.le h\u2082.le, mul_nonneg h\u2081.le h\u2082.le,\n    mul_nonneg (sq_nonneg (x - y)) h\u2081.le, mul_nonneg (sq_nonneg (x - z)) h\u2080.le,\n    mul_nonneg (sq_nonneg (y - z)) h\u2080.le, mul_nonneg (sq_nonneg (x - y)) h\u2082.le,\n    mul_nonneg (sq_nonneg (x - z)) h\u2081.le, mul_nonneg (sq_nonneg (y - z)) h\u2081.le]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192\n   (2 * y / (z + x) + 1) * (2 * z / (x + y) + 1) * (2 * x / (y + z) + 1) \u2265\n   16 / 9 * (1 / (z + x) + 1 / (x + y) + 1 / (y + z)) * (x + y + z):= by\n  rintro x y z \u27e8hx, hy, hz\u27e9\n  have hxy : 0 < x * y := by positivity\n  have hyz : 0 < y * z := by positivity\n  have hxz : 0 < x * z := by positivity\n  field_simp [add_comm]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (y ^ 2 - z ^ 2), sq_nonneg (z ^ 2 - x ^ 2),\n    sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y)]"
  ]
 },
 {
  "old": ": \u2200 p : \u2115, p >= 5 \u2227 Nat.Prime p \u2192 24 \u2223 p^2 - 1 := by",
  "new": "(a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  by_cases h : Nat.Coprime a b\n  exact Or.inl h\n  exact Or.inr h\n  <;> rfl\n  <;> simp_all\n  <;> simp_all\n  <;> rfl\n  <;> rfl\n  <;> simp_all\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  have h : a.Coprime b \u2228 \u00aca.Coprime b := by apply em\n  exact h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  cases em (Nat.Coprime a b) with\n  | inl h => exact Or.inl h\n  | inr h => exact Or.inr h"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : (4 * a * b + 4 * b * c + 4 * c * a - 5) * (a^2 * b + b^2 * c + c^2 * a) + (a + b + c) * (a * b + b * c + c * a) + 107 >= 14 * (a + b + c) + 31 * (a * b + b * c + c * a) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) (h : x * y + y * z + z * x = 1 / 3) : 3 * (x^2 * z^2) / (x * z) + 3 * (y^2 * x^2) / (y * x) + 3 * (z^2 * y^2) / (z * y) \u2265 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) (h : x * y + y * z + z * x = 1 / 3) : 3 * (x^2 * z^2) / (x * z) + 3 * (y^2 * x^2) / (y * x) + 3 * (z^2 * y^2) / (z * y) \u2265 1:= by\n  have h\u2080 : x * z > 0 := by nlinarith\n  have h\u2081 : y * x > 0 := by nlinarith\n  have h\u2082 : z * y > 0 := by nlinarith\n  have h\u2083 : 3 * (x^2 * z^2) / (x * z) = 3 * x * z := by\n    field_simp [h\u2080]\n    ring\n  have h\u2084 : 3 * (y^2 * x^2) / (y * x) = 3 * y * x := by\n    field_simp [h\u2081]\n    ring\n  have h\u2085 : 3 * (z^2 * y^2) / (z * y) = 3 * z * y := by\n    field_simp [h\u2082]\n    ring\n  nlinarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) (h : x * y + y * z + z * x = 1 / 3) : 3 * (x^2 * z^2) / (x * z) + 3 * (y^2 * x^2) / (y * x) + 3 * (z^2 * y^2) / (z * y) \u2265 1:= by\n  have h\u2080 : 0 < x * y := by positivity\n  have h\u2081 : 0 < y * z := by positivity\n  have h\u2082 : 0 < z * x := by positivity\n  have h\u2083 : 0 < x * y * (y * z) := by positivity\n  have h\u2084 : 0 < y * z * (z * x) := by positivity\n  have h\u2085 : 0 < z * x * (x * y) := by positivity\n  have h\u2086 : 0 < (x * y) * (y * z) * (z * x) := by positivity\n  field_simp [h\u2080, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x * y + y * z + z * x), sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) (h : x * y + y * z + z * x = 1 / 3) : 3 * (x^2 * z^2) / (x * z) + 3 * (y^2 * x^2) / (y * x) + 3 * (z^2 * y^2) / (z * y) \u2265 1:= by\n  have : 0 < x * z := by positivity\n  have : 0 < y * x := by positivity\n  have : 0 < z * y := by positivity\n  have : 3 * (x^2 * z^2) / (x * z) = 3 * x * z := by\n    field_simp\n    ring\n  have : 3 * (y^2 * x^2) / (y * x) = 3 * y * x := by\n    field_simp\n    ring\n  have : 3 * (z^2 * y^2) / (z * y) = 3 * z * y := by\n    field_simp\n    ring\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) (h : x * y + y * z + z * x = 1 / 3) : 3 * (x^2 * z^2) / (x * z) + 3 * (y^2 * x^2) / (y * x) + 3 * (z^2 * y^2) / (z * y) \u2265 1:= by\n  have hx1 : 0 < x * z := by nlinarith\n  have hy1 : 0 < y * x := by nlinarith\n  have hz1 : 0 < z * y := by nlinarith\n  have hxy : 0 < x * y := by nlinarith\n  have hxz : 0 < x * z := by nlinarith\n  have hyz : 0 < y * z := by nlinarith\n  have h1 : 3 * (x ^ 2 * z ^ 2) / (x * z) = 3 * x * z := by\n    field_simp [mul_assoc, mul_comm, mul_left_comm]\n    ring\n  have h2 : 3 * (y ^ 2 * x ^ 2) / (y * x) = 3 * y * x := by\n    field_simp [mul_assoc, mul_comm, mul_left_comm]\n    ring\n  have h3 : 3 * (z ^ 2 * y ^ 2) / (z * y) = 3 * z * y := by\n    field_simp [mul_assoc, mul_comm, mul_left_comm]\n    ring\n  nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) : 3 * (1 / a + 1 / b + 1 / c) - 1 \u2265 (4 / 3) * ( (1 + a) / a + (1 + b) / b + (1 + c) / c) := by",
  "new": "(a b c : \u211d) (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2081 : a \u2260 b \u2227 b \u2260 c \u2227 c \u2260 a) : 4 / 3 * (1 / a + 1 / b + 1 / c) \u2264 3 * (1 / a + 1 / b + 1 / c) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_step1 (a b c : \u211d) (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2081 : a \u2260 b \u2227 b \u2260 c \u2227 c \u2260 a) : \n  4 / 3 * (1 / a + 1 / b + 1 / c) \u2264 3 * (1 / a + 1 / b + 1 / c) := by\n  have h\u2082 : 0 < a := h\u2080.1\n  have h\u2083 : 0 < b := h\u2080.2.1\n  have h\u2084 : 0 < c := h\u2080.2.2\n  have h\u2085 : 0 < a * b := by positivity\n  have h\u2086 : 0 < b * c := by positivity\n  have h\u2087 : 0 < c * a := by positivity\n  have h\u2088 : 0 < a * b * c := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a)]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_step1 (a b c : \u211d) (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2081 : a \u2260 b \u2227 b \u2260 c \u2227 c \u2260 a) : \n  4 / 3 * (1 / a + 1 / b + 1 / c) \u2264 3 * (1 / a + 1 / b + 1 / c) := by\n  rcases h\u2080 with \u27e8ha : 0 < a, hb : 0 < b, hc : 0 < c\u27e9\n  have hab : 0 < a + b := add_pos ha hb\n  have hbc : 0 < b + c := add_pos hb hc\n  have hac : 0 < a + c := add_pos ha hc\n  apply le_of_sub_nonneg\n  field_simp\n  ring_nf\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_step1 (a b c : \u211d) (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2081 : a \u2260 b \u2227 b \u2260 c \u2227 c \u2260 a) : \n  4 / 3 * (1 / a + 1 / b + 1 / c) \u2264 3 * (1 / a + 1 / b + 1 / c) := by\n  have : 0 < 1 / a + 1 / b + 1 / c := by\n    rcases h\u2080 with \u27e8ha, hb, hc\u27e9\n    positivity\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_step1 (a b c : \u211d) (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2081 : a \u2260 b \u2227 b \u2260 c \u2227 c \u2260 a) : \n  4 / 3 * (1 / a + 1 / b + 1 / c) \u2264 3 * (1 / a + 1 / b + 1 / c) := by\n  have h\u2082 : 0 < a := by linarith\n  have h\u2083 : 0 < b := by linarith\n  have h\u2084 : 0 < c := by linarith\n  have h\u2085 : 0 < a * b := by positivity\n  have h\u2086 : 0 < b * c := by positivity\n  have h\u2087 : 0 < c * a := by positivity\n  have h\u2088 : 0 < a * b * c := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 3) : (a^3 + b * c) / (a * b^2 + c^2) + (b^3 + c * a) / (b * c^2 + a^2) + (c^3 + a * b) / (c * a^2 + b^2) >= 3 := by",
  "new": "(a b c : \u211d) (habc : a + b + c = 3) (h1 : 0 < a \u2227 0 < b \u2227 0 < c) (h2 : a * b * c = 1) (h3 : 0 < a * b \u2227 0 < b * c \u2227 0 < c * a) : (a^3 + b * c) / (a * b^2 + c^2) + (b^3 + c * a) / (b * c^2 + a^2) + (c^3 + a * b) / (c * a^2 + b^2) \u2265 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (a b c : \u211d) (habc : a + b + c = 3) (h1 : 0 < a \u2227 0 < b \u2227 0 < c)  (h2 : a * b * c = 1)  (h3 : 0 < a * b \u2227 0 < b * c \u2227 0 < c * a) : (a^3 + b * c) / (a * b^2 + c^2) + (b^3 + c * a) / (b * c^2 + a^2) + (c^3 + a * b) / (c * a^2 + b^2) \u2265 3:= by\n  rcases h1 with \u27e8ha, hb, hc\u27e9\n  have h : a = 1 \u2227 b = 1 \u2227 c = 1 := by\n    have h : a + b + c = 3 := habc\n    have h1 : a * b * c = 1 := h2\n    have h2 : 0 < a * b \u2227 0 < b * c \u2227 0 < c * a := h3\n    constructor\n    \u00b7 nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c), sq_nonneg (a + b), sq_nonneg (a + c), sq_nonneg (b + c)]\n    \u00b7 constructor\n      \u00b7 nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c), sq_nonneg (a + b), sq_nonneg (a + c), sq_nonneg (b + c)]\n      \u00b7 nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c), sq_nonneg (a + b), sq_nonneg (a + c), sq_nonneg (b + c)]\n  rw [h.1, h.2.1, h.2.2]\n  norm_num"
  ]
 },
 {
  "old": "(p : \u2115) (h\u2081 : Nat.Prime p) (h\u2082 : p >= 5): p^2 \u2261 1 [ZMOD 12] := by",
  "new": "(p q : \u2115) (hp : Nat.Prime p) (hq : Nat.Prime q) : Nat.Coprime p q \u2228 \u00ac Nat.Coprime p q := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (p q : \u2115) (hp : Nat.Prime p) (hq : Nat.Prime q) : \n     Nat.Coprime p q \u2228 \u00ac Nat.Coprime p q := by\n  by_cases h : Nat.Coprime p q\n  exact Or.inl h\n  exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (p q : \u2115) (hp : Nat.Prime p) (hq : Nat.Prime q) : \n     Nat.Coprime p q \u2228 \u00ac Nat.Coprime p q := by\n  by_cases h : Nat.Coprime p q\n  case pos => exact Or.inl h\n  case neg => exact Or.inr h\n  <;> simp [h]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (p q : \u2115) (hp : Nat.Prime p) (hq : Nat.Prime q) : \n     Nat.Coprime p q \u2228 \u00ac Nat.Coprime p q := by\n  by_cases h : Nat.Coprime p q\n  exact Or.inl h\n  exact Or.inr h\n  <;> simp_all\n  <;> linarith [hp.two_le, hq.two_le]"
  ]
 },
 {
  "old": ": \u2200 a b c : \u211d, 2 * (a + b + c) ^ 3 + 2 * (a + b + c) * (a * b + b * c + c * a) \u2265 9 * ((a + b + c) * (a * b + b * c + c * a) - a * b * c) := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 1 \u2192 a * b ^ 2 + b * c ^ 2 + c * a ^ 2 \u2264 1 \u2192 a ^ 2 * b + b ^ 2 * c + c ^ 2 * a \u2264 1 \u2192 a ^ 2 * b ^ 2 * c ^ 2 \u2264 (a + b + c) * (a * b + b * c + c * a):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 1 \u2192  a * b ^ 2 + b * c ^ 2 + c * a ^ 2 \u2264 1 \u2192 a ^ 2 * b + b ^ 2 * c + c ^ 2 * a \u2264 1 \u2192 a ^ 2 * b ^ 2 * c ^ 2 \u2264 (a + b + c) * (a * b + b * c + c * a):= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9 h\u2081 h\u2082\n  have h\u2083 : 0 \u2264 a * b := by nlinarith\n  have h\u2084 : 0 \u2264 b * c := by nlinarith\n  have h\u2085 : 0 \u2264 c * a := by nlinarith\n  have h\u2086 : 0 \u2264 a * b * c := by nlinarith\n  have h\u2087 : a * b * c \u2264 a + b + c := by nlinarith\n  have h\u2088 : 0 \u2264 a * b + b * c + c * a := by nlinarith\n  have h\u2089 : 0 \u2264 a ^ 2 * b ^ 2 * c ^ 2 := by nlinarith\n  nlinarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 1 \u2192  a * b ^ 2 + b * c ^ 2 + c * a ^ 2 \u2264 1 \u2192 a ^ 2 * b + b ^ 2 * c + c ^ 2 * a \u2264 1 \u2192 a ^ 2 * b ^ 2 * c ^ 2 \u2264 (a + b + c) * (a * b + b * c + c * a):= by\n  rintro a b c \u27e8h\u2081, h\u2082, h\u2083, h\u2084\u27e9 h\u2085 h\u2086\n  have h\u2087 : 0 \u2264 a * b := by positivity\n  have h\u2088 : 0 \u2264 b * c := by positivity\n  have h\u2089 : 0 \u2264 c * a := by positivity\n  have h\u2081\u2080 : 0 \u2264 a * b * c := by positivity\n  have h\u2081\u2081 : a * b * c \u2264 a + b + c := by nlinarith\n  have h\u2081\u2082 : 0 \u2264 a * b * c * (a + b + c) := by positivity\n  nlinarith\n  <;> linarith\n  <;> linarith\n  <;> linarith"
  ]
 },
 {
  "old": "(a b : \u211a) (hab : a < b) : \u2203 x : \u211d, a < x \u2227 x < b \u2227 (\u2200 r : \u211a, x \u2260 r) := by",
  "new": "(a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by\n  apply em\n  <;> simp_all\n  <;> omega\n  <;> linarith\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by\n  by_cases h : Nat.Coprime a b\n  exacts [Or.inl h, Or.inr (by simpa using h)]"
  ]
 },
 {
  "old": "(n x y : \u211d) (hn : n \u2265 2) (hx : x > 0) (hy : y > 0) : x^n + y^n + (1/(x*y))^n + (6*n-3) \u2265 2*n * (x + y + 1/(x*y)) := by",
  "new": ": \u2200 x : \u211d, x > 0 \u2192 \u2200 n : \u2115, n \u2265 2 \u2192 x^n + 1/(x^n) \u2265 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 \u2200 n : \u2115, n \u2265 2 \u2192 x^n + 1/(x^n) \u2265 2:= by\n  intro x hx n hn\n  have h\u2081 : x ^ n > 0 := by positivity\n  have h\u2082 : x ^ n + 1 / x ^ n \u2265 2 := by\n    field_simp [h\u2081]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x ^ n - 1)]\n  exact h\u2082\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 \u2200 n : \u2115, n \u2265 2 \u2192 x^n + 1/(x^n) \u2265 2:= by\n  intro x hx n hn\n  have h1 : 0 < x := by positivity\n  have h2 : 0 < x^n := by positivity\n  have h3 : x^n + 1/(x^n) \u2265 2 := by\n    rw [ge_iff_le]\n    have h4 : x^n + 1/(x^n) - 2 \u2265 0 := by\n      field_simp\n      rw [le_div_iff h2, \u2190 sub_nonneg]\n      nlinarith [sq_nonneg (x^n - 1)]\n    linarith\n  exact h3",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 \u2200 n : \u2115, n \u2265 2 \u2192 x^n + 1/(x^n) \u2265 2:= by\n  intro x hx n hn\n  have h\u2080 : x ^ n > 0 := pow_pos hx n\n  have h\u2081 : x ^ n + 1 / x ^ n \u2265 2 := by\n    have h\u2082 : x ^ n + 1 / x ^ n - 2 = (x ^ n - 1) ^ 2 / x ^ n := by\n      field_simp\n      ring\n    have h\u2083 : 0 < x ^ n := by positivity\n    have h\u2084 : (x ^ n - 1) ^ 2 / x ^ n \u2265 0 := by\n      apply div_nonneg\n      \u00b7 apply sq_nonneg\n      \u00b7 positivity\n    linarith\n  linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = ab + bc + ca) : a + b + c \u2265 4 - 8 * a * b * c / (a + b) / (b + c) / (c + a) := by",
  "new": "(x y z : \u211d) (h : 0 < x \u2227 0 < y \u2227 0 < z) (h1 : x * y + y * z + z * x = 1) : x + y + z \u2265 3 * (x * y + y * z + z * x) / 3 \u2227 x * y + y * z + z * x \u2264 x * y + y * z + z * x:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (h : 0 < x \u2227 0 < y \u2227 0 < z) (h1 : x * y + y * z + z * x = 1) :\n            x + y + z \u2265 3 * (x * y + y * z + z * x) / 3 \u2227 x * y + y * z + z * x \u2264 x * y + y * z + z * x:= by\n  cases' h with hx hy\n  cases' hy with hy hz\n  constructor\n  all_goals\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (h : 0 < x \u2227 0 < y \u2227 0 < z) (h1 : x * y + y * z + z * x = 1) :\n            x + y + z \u2265 3 * (x * y + y * z + z * x) / 3 \u2227 x * y + y * z + z * x \u2264 x * y + y * z + z * x:= by\n  have h2 : 0 < x * y + y * z + z * x := by linarith\n  have h3 : x + y + z \u2265 3 * (x * y + y * z + z * x) / 3 := by\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n      sq_nonneg (x + y + z - 3 * (x * y + y * z + z * x) / 3)]\n  have h4 : x * y + y * z + z * x \u2264 x * y + y * z + z * x := by linarith\n  exact \u27e8h3, h4\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (h : 0 < x \u2227 0 < y \u2227 0 < z) (h1 : x * y + y * z + z * x = 1) :\n            x + y + z \u2265 3 * (x * y + y * z + z * x) / 3 \u2227 x * y + y * z + z * x \u2264 x * y + y * z + z * x:= by\n  cases' h with hx hy\n  cases' hy with hy hz\n  constructor\n  \u00b7 nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  \u00b7 nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (h : 0 < x \u2227 0 < y \u2227 0 < z) (h1 : x * y + y * z + z * x = 1) :\n            x + y + z \u2265 3 * (x * y + y * z + z * x) / 3 \u2227 x * y + y * z + z * x \u2264 x * y + y * z + z * x:= by\n  cases' h with hx hy\n  cases' hy with hy hz\n  constructor\n  all_goals nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (x - z),\n    sq_nonneg (x + y + z - 3), sq_nonneg (x * y + y * z + z * x - 1)]\n  <;> linarith\n  <;> norm_num\n  <;> nlinarith\n  <;> norm_num\n  <;> nlinarith"
  ]
 },
 {
  "old": "(x y z : \u211d) : (1 / 8) * (y + z) ^ 3 + (1 / 8) * (z + x) ^ 3 + (1 / 8) * (x + y) ^ 3 \u2265 (1 / 6) * (Real.sqrt (x ^ 2 + y ^ 2 + 2 * y * z) + Real.sqrt (y ^ 2 + z ^ 2 + 2 * z * x) + Real.sqrt (z ^ 2 + x ^ 2 + 2 * x * y)) * (x * y + z * x + y * z) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : x / (x + y + z) + y / (x + y + z) + z / (x + y + z) \u2264 3 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem copos_ineq\n    (x y z : \u211d)\n    (hx : 0 < x)\n    (hy : 0 < y)\n    (hz : 0 < z) :\n    x / (x + y + z) + y / (x + y + z) + z / (x + y + z) \u2264 3 := by\n  rw [add_assoc, add_comm]\n  field_simp [hx.ne', hy.ne', hz.ne']\n  apply div_le_of_nonneg_of_le_mul <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem copos_ineq\n    (x y z : \u211d)\n    (hx : 0 < x)\n    (hy : 0 < y)\n    (hz : 0 < z) :\n    x / (x + y + z) + y / (x + y + z) + z / (x + y + z) \u2264 3 := by\n  rw [add_assoc]\n  field_simp [hx, hy, hz]\n  rw [add_comm]\n  apply le_of_sub_nonneg\n  field_simp [hx, hy, hz]\n  ring_nf\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem copos_ineq\n    (x y z : \u211d)\n    (hx : 0 < x)\n    (hy : 0 < y)\n    (hz : 0 < z) :\n    x / (x + y + z) + y / (x + y + z) + z / (x + y + z) \u2264 3 := by\n  have h\u2081 : 0 < x + y + z := by linarith\n  rw [add_assoc, add_comm]\n  field_simp [h\u2081.ne']\n  rw [div_le_iff h\u2081]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem copos_ineq\n    (x y z : \u211d)\n    (hx : 0 < x)\n    (hy : 0 < y)\n    (hz : 0 < z) :\n    x / (x + y + z) + y / (x + y + z) + z / (x + y + z) \u2264 3 := by\n  rw [add_assoc]\n  have h1 : 0 < x + y + z := add_pos (add_pos hx hy) hz\n  have h2 : 0 < x + y + z + 1 := by linarith\n  field_simp [h1, h2]\n  rw [div_le_iff h1]\n  linarith\n  <;> assumption\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) (habc : a * b * c = 1) (h : a^3 + b^3 + c^3 = 3 * d^3) (h' : b^4 + c^4 + d^4 = 3 * a^4) (h'' : c^5 + d^5 + a^5 = 3 * b^5) : a = b \u2227 b = c \u2227 c = d := by",
  "new": "(a b : \u2115) (hab : a * b = 1) : a = 1 \u2227 b = 1 \u2228 a = b:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (hab : a * b = 1) : a = 1 \u2227 b = 1 \u2228 a = b:= by\n  rcases Nat.eq_zero_or_pos a with rfl | ha\n  <;> rcases Nat.eq_zero_or_pos b with rfl | hb\n  <;> simp_all [Nat.mul_eq_zero]\n  <;> omega\n  <;> simp_all only [Nat.mul_eq_zero, Nat.one_ne_zero, false_or_iff]\n  <;> omega\n  <;> simp_all\n  <;> omega\n  <;> simp_all\n  <;> omega\n  <;> simp_all\n  <;> omega\n  <;> simp_all\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (hab : a * b = 1) : a = 1 \u2227 b = 1 \u2228 a = b:= by\n  cases a <;> cases b <;> simp_all (config := {decide := true})\n  <;> decide\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (hab : a * b = 1) : a = 1 \u2227 b = 1 \u2228 a = b:= by\n  have h := Nat.eq_one_of_mul_eq_one_right hab\n  aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (hab : a * b = 1) : a = 1 \u2227 b = 1 \u2228 a = b:= by\n  simp [Nat.eq_one_of_mul_eq_one_left, Nat.eq_one_of_mul_eq_one_right] at hab\n  aesop"
  ]
 },
 {
  "old": ": \u2200 x y : \u211d, cos x * cos y = 1 / 2 * (cos (x + y) + cos (x - y)) := by",
  "new": ": \u2200 x y : \u211d, cos x - cos y = -2 * sin ((x + y) / 2) * sin ((x - y) / 2) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem cos_sub_cos : \u2200 x y : \u211d, cos x - cos y = -2 * sin ((x + y) / 2) * sin ((x - y) / 2) := by\n  intro x y\n  have h\u2081 := cos_add ((x + y) / 2) ((x - y) / 2)\n  have h\u2082 := cos_sub ((x + y) / 2) ((x - y) / 2)\n  ring_nf at h\u2081 h\u2082 \u22a2\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem cos_sub_cos : \u2200 x y : \u211d, cos x - cos y = -2 * sin ((x + y) / 2) * sin ((x - y) / 2) := by\n  intro x y\n  have h\u2081 : cos x - cos y = -2 * sin ((x + y) / 2) * sin ((x - y) / 2) := by\n    have h\u2082 := cos_add ((x + y) / 2) ((x - y) / 2)\n    have h\u2083 := cos_sub ((x + y) / 2) ((x - y) / 2)\n    ring_nf at h\u2082 h\u2083 \u22a2\n    linarith\n  exact h\u2081",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem cos_sub_cos : \u2200 x y : \u211d, cos x - cos y = -2 * sin ((x + y) / 2) * sin ((x - y) / 2) := by\n  intro x y\n  have := cos_add ((x + y) / 2) ((x - y) / 2)\n  have := cos_sub ((x + y) / 2) ((x - y) / 2)\n  ring_nf at *\n  linarith\n  <;> simp [add_mul, mul_add, mul_comm, mul_left_comm, mul_assoc, add_assoc, add_comm, add_left_comm]\n  <;> linarith\n  <;> simp [add_mul, mul_add, mul_comm, mul_left_comm, mul_assoc, add_assoc, add_comm, add_left_comm]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem cos_sub_cos : \u2200 x y : \u211d, cos x - cos y = -2 * sin ((x + y) / 2) * sin ((x - y) / 2) := by\n  intro x y\n  have h\u2081 : cos x - cos y = -2 * sin ((x + y) / 2) * sin ((x - y) / 2) := by\n    have h\u2082 := Real.cos_sub_cos x y\n    ring_nf at h\u2082 \u22a2\n    linarith\n  exact h\u2081"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (b + c) / a + a^2 / (b * c) \u2265 3 + (c - a)^2 / (c * (a + b)) := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a + b) * c + b * a + c * a + (a + b) * b + a * c + b * c + b * b + a * b + c * c \u2264 a ^ 2 + b ^ 2 + c ^ 2 + (a + b) ^ 2 + (b + c) ^ 2 + (a + c) ^ 2 \u2192 a * b * c \u2264 1 \u2192 a * b * c \u2264 (a * b + b * c + c * a) / 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a + b) * c + b * a + c * a + (a + b) * b + a * c + b * c + b * b + a * b + c * c \u2264 a ^ 2 + b ^ 2 + c ^ 2 + (a + b) ^ 2 + (b + c) ^ 2 + (a + c) ^ 2 \u2192 a * b * c \u2264 1 \u2192 a * b * c \u2264 (a * b + b * c + c * a) / 3:= by\n  rintro a b c \u27e8a0, b0, c0\u27e9 h\u2080 h\u2081\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_nonneg a0 b0, mul_nonneg b0 c0, mul_nonneg c0 a0, mul_nonneg (sq_nonneg (a - b)) a0, mul_nonneg (sq_nonneg (b - c)) b0, mul_nonneg (sq_nonneg (c - a)) c0, mul_nonneg (sq_nonneg (a - b)) b0, mul_nonneg (sq_nonneg (b - c)) c0, mul_nonneg (sq_nonneg (c - a)) a0]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a + b) * c + b * a + c * a + (a + b) * b + a * c + b * c + b * b + a * b + c * c \u2264 a ^ 2 + b ^ 2 + c ^ 2 + (a + b) ^ 2 + (b + c) ^ 2 + (a + c) ^ 2 \u2192 a * b * c \u2264 1 \u2192 a * b * c \u2264 (a * b + b * c + c * a) / 3:= by\n  rintro a b c \u27e8ha, hb, hc\u27e9 h\u2080 h\u2081\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (a - c), mul_nonneg ha hb, mul_nonneg hb hc, mul_nonneg ha hc, h\u2080, h\u2081]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a + b) * c + b * a + c * a + (a + b) * b + a * c + b * c + b * b + a * b + c * c \u2264 a ^ 2 + b ^ 2 + c ^ 2 + (a + b) ^ 2 + (b + c) ^ 2 + (a + c) ^ 2 \u2192 a * b * c \u2264 1 \u2192 a * b * c \u2264 (a * b + b * c + c * a) / 3:= by\n  rintro a b c \u27e8a_nonneg, b_nonneg, c_nonneg\u27e9 h\u2080 h\u2081\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a + b + c), mul_nonneg a_nonneg b_nonneg, mul_nonneg b_nonneg c_nonneg,\n    mul_nonneg c_nonneg a_nonneg]"
  ]
 },
 {
  "old": "(A B C : \u211d) : (sin A / (sin B * sin C) + sin B / (sin C * sin A) + sin C / (sin A * sin B) + 2 * (1 / sin A + 1 / sin B + 1 / sin C)) \u2265 6 * Real.sqrt 3 := by",
  "new": ": Real.sqrt 3 \u2264 1 / 2 * (1 / Real.sqrt 3 + 3) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 3 \u2264 1 / 2 * (1 / Real.sqrt 3 + 3) := by\n  rw [mul_comm]\n  rw [mul_comm]\n  have h : 0 < Real.sqrt 3 := by\n    exact Real.sqrt_pos.mpr (by norm_num)\n  have h2 : 0 < 3 := by norm_num\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 by norm_num), h2]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 3 \u2264 1 / 2 * (1 / Real.sqrt 3 + 3) := by\n  have h\u2081 : 0 < Real.sqrt 3 := Real.sqrt_pos.mpr (by norm_num)\n  rw [\u2190 sub_nonneg]\n  field_simp [h\u2081.ne']\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 by norm_num)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 3 \u2264 1 / 2 * (1 / Real.sqrt 3 + 3) := by\n  have h\u2080 : 0 < Real.sqrt 3 := Real.sqrt_pos.mpr (by norm_num)\n  field_simp [h\u2080]\n  rw [le_div_iff (by positivity)]\n  ring_nf\n  norm_num\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 by norm_num)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 3 \u2264 1 / 2 * (1 / Real.sqrt 3 + 3) := by\n  have h\u2080 : Real.sqrt 3 > 0 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2081 : Real.sqrt 3 ^ 2 = 3 := by norm_num\n  rw [\u2190 sub_nonneg]\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith"
  ]
 },
 {
  "old": "(p : \u2115) (hp : p.Prime) (\u03b1 : \u2115) : (2^(p^\u03b1) - 2^(p^(\u03b1-1))) % p^\u03b1 = 0 := by",
  "new": "(p : \u2115) {n : \u2115} (hn : n \u2260 0) (hp : p.Prime) : p \u2223 n \u2228 (Nat.Coprime p n):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {n : \u2115} (hn : n \u2260 0) (hp : p.Prime) :\n     p \u2223 n \u2228 (Nat.Coprime p n):= by\n  by_cases h : p \u2223 n\n  case pos => exact Or.inl h\n  case neg => exact Or.inr (hp.coprime_iff_not_dvd.mpr h)\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {n : \u2115} (hn : n \u2260 0) (hp : p.Prime) :\n     p \u2223 n \u2228 (Nat.Coprime p n):= by\n  by_cases h : p \u2223 n <;> simp [h, Nat.Prime.coprime_iff_not_dvd hp, hp.ne_zero]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 3) : (Real.sqrt (a^2 * b + b^2 * c) + Real.sqrt (b^2 * c + c^2 * a) + Real.sqrt (c^2 * a + a^2 * b)) \u2264 3 * Real.sqrt 2 := by",
  "new": "{a b c : \u2115} (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 3) (h : a ^ 2 * b + b ^ 2 * c + c ^ 2 * a = 2 * (a * b + b * c + c * a)) : a.Coprime b \u2228 b.Coprime c \u2228 c.Coprime a \u2228 a = 0 \u2227 b = 0 \u2228 a = 0 \u2227 c = 0 \u2228 b = 0 \u2227 c = 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_nonneg_of_sum_eq_two_mul_three {a b c : \u2115} (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 3) (h : a ^ 2 * b + b ^ 2 * c + c ^ 2 * a = 2 * (a * b + b * c + c * a)) : a.Coprime b \u2228 b.Coprime c \u2228 c.Coprime a \u2228 a = 0 \u2227 b = 0 \u2228 a = 0 \u2227 c = 0 \u2228 b = 0 \u2227 c = 0:= by\n  rw [mul_comm] at h\n  have : a \u2264 3 := by linarith\n  have : b \u2264 3 := by linarith\n  have : c \u2264 3 := by linarith\n  interval_cases a <;> interval_cases b <;> interval_cases c <;> simp_all (config := {decide := true})\n  <;> decide\n  <;> decide\n  <;> decide\n  <;> decide\n  <;> decide\n  <;> decide",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_nonneg_of_sum_eq_two_mul_three {a b c : \u2115} (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 3) (h : a ^ 2 * b + b ^ 2 * c + c ^ 2 * a = 2 * (a * b + b * c + c * a)) : a.Coprime b \u2228 b.Coprime c \u2228 c.Coprime a \u2228 a = 0 \u2227 b = 0 \u2228 a = 0 \u2227 c = 0 \u2228 b = 0 \u2227 c = 0:= by\n  have h1 : a \u2264 3 := by linarith\n  have h2 : b \u2264 3 := by linarith\n  have h3 : c \u2264 3 := by linarith\n  interval_cases a <;> interval_cases b <;> interval_cases c <;> simp_all (config := {decide := true})",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_nonneg_of_sum_eq_two_mul_three {a b c : \u2115} (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 3) (h : a ^ 2 * b + b ^ 2 * c + c ^ 2 * a = 2 * (a * b + b * c + c * a)) : a.Coprime b \u2228 b.Coprime c \u2228 c.Coprime a \u2228 a = 0 \u2227 b = 0 \u2228 a = 0 \u2227 c = 0 \u2228 b = 0 \u2227 c = 0:= by\n  rcases a with (_ | _ | _) <;> rcases b with (_ | _ | _) <;> rcases c with (_ | _ | _) <;> simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right, Nat.gcd_eq_zero_iff, Nat.mul_eq_zero]\n  <;> omega\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_nonneg_of_sum_eq_two_mul_three {a b c : \u2115} (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 3) (h : a ^ 2 * b + b ^ 2 * c + c ^ 2 * a = 2 * (a * b + b * c + c * a)) : a.Coprime b \u2228 b.Coprime c \u2228 c.Coprime a \u2228 a = 0 \u2227 b = 0 \u2228 a = 0 \u2227 c = 0 \u2228 b = 0 \u2227 c = 0:= by\n  have h\u2080 : a \u2264 3 \u2227 b \u2264 3 \u2227 c \u2264 3 := by\n    constructor\n    \u00b7 nlinarith\n    constructor\n    \u00b7 nlinarith\n    nlinarith\n  rcases h\u2080 with \u27e8h\u2081, h\u2082, h\u2083\u27e9\n  interval_cases a <;> interval_cases b <;> interval_cases c <;> norm_num at h <;> norm_num\n    at habc \u22a2\n  <;> omega"
  ]
 },
 {
  "old": "(m n : \u2124) (hm : 0 < m) (hn : 0 < n) : (Int.lcm m n) + (Int.gcd m n) = m + n \u2192 m \u2223 n \u2228 n \u2223 m := by",
  "new": "(m n : \u2115) : (Nat.Coprime m n) \u2228 \u00ac(Nat.Coprime m n):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (m n : \u2115) : (Nat.Coprime m n) \u2228 \u00ac(Nat.Coprime m n):= by\n  cases em (Nat.Coprime m n) with\n  | inl h => exact Or.inl h\n  | inr h => exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (m n : \u2115) : (Nat.Coprime m n) \u2228 \u00ac(Nat.Coprime m n):= by\n  by_cases h : Nat.Coprime m n <;> simp [h]\n  <;> tauto\n  <;> tauto\n  <;> tauto"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : a / (b + c + 1) + b / (c + a + 1) + c / (a + b + 1) \u2265 1 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z = 1) : 1 / (x + y + z) + 1 / (x + y + z) + 1 / (x + y + z) \u2265 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z = 1) : 1 / (x + y + z) + 1 / (x + y + z) + 1 / (x + y + z) \u2265 1:= by\n  simp_all only [one_div, add_assoc, add_right_comm, add_left_comm]\n  ring_nf\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z = 1) : 1 / (x + y + z) + 1 / (x + y + z) + 1 / (x + y + z) \u2265 1:= by\n  simp [h\u2081, h\u2082, add_assoc, add_left_comm, add_comm]\n  all_goals\n    ring_nf\n    nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z = 1) : 1 / (x + y + z) + 1 / (x + y + z) + 1 / (x + y + z) \u2265 1:= by\n  field_simp [add_assoc, add_comm, add_left_comm] at h\u2082 \u22a2\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z), mul_pos hx hy, mul_pos hx hz, mul_pos hy hz]\n  <;> linarith\n  <;> assumption\n  <;> norm_num\n  <;> assumption\n  <;> norm_num\n  <;> assumption\n  <;> norm_num\n  <;> assumption\n  <;> norm_num\n  <;> assumption\n  <;> norm_num\n  <;> assumption\n  <;> norm_num\n  <;> assumption"
  ]
 },
 {
  "old": "{a b c : \u211d} : (b * c * (b + c) + c * a * (c + a) + a * b * (a + b)) ^ 2 * (b ^ 2 * c ^ 2 / (b + c) + c ^ 2 * a ^ 2 / (c + a) + a ^ 2 * b ^ 2 / (a + b)) \u2265 (a * b + b * c + c * a) ^ 3 := by",
  "new": "(a b c : \u211d) : a ^ 2 * b ^ 2 * c ^ 2 * (1 / a ^ 2 + 1 / b ^ 2 + 1 / c ^ 2) + (a * b + b * c + c * a) ^ 2 + (a * b * c * (a + b + c)) ^ 2 + (a * b * (a - b) ^ 2 + b * c * (b - c) ^ 2 + c * a * (c - a) ^ 2) ^ 2 + (a * b * (b * c - a * b) * (c * a - b * c) + b * c * (c * a - b * c) * (a * b - c * a) + c * a * (a * b - c * a) * (b * c - a * b)) ^ 2 \u2265 (a * b + b * c + c * a) ^ 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) :\n      a ^ 2 * b ^ 2 * c ^ 2 * (1 / a ^ 2 + 1 / b ^ 2 + 1 / c ^ 2) + (a * b + b * c + c * a) ^ 2 +\n           (a * b * c * (a + b + c)) ^ 2 + (a * b * (a - b) ^ 2 + b * c * (b - c) ^ 2 + c * a * (c - a) ^ 2) ^ 2 +\n            (a * b * (b * c - a * b) * (c * a - b * c) + b * c * (c * a - b * c) * (a * b - c * a) +\n                   c * a * (a * b - c * a) * (b * c - a * b)) ^ 2 \u2265\n        (a * b + b * c + c * a) ^ 2:= by\n  have h\u2080 : 0 \u2264 a ^ 2 * b ^ 2 * c ^ 2 * (1 / a ^ 2 + 1 / b ^ 2 + 1 / c ^ 2) := by positivity\n  have h\u2081 : 0 \u2264 (a * b + b * c + c * a) ^ 2 := by positivity\n  have h\u2082 : 0 \u2264 (a * b * c * (a + b + c)) ^ 2 := by positivity\n  have h\u2083 : 0 \u2264 (a * b * (a - b) ^ 2 + b * c * (b - c) ^ 2 + c * a * (c - a) ^ 2) ^ 2 := by positivity\n  have h\u2084 : 0 \u2264 (a * b * (b * c - a * b) * (c * a - b * c) + b * c * (c * a - b * c) * (a * b - c * a) +\n                   c * a * (a * b - c * a) * (b * c - a * b)) ^ 2 := by positivity\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) :\n      a ^ 2 * b ^ 2 * c ^ 2 * (1 / a ^ 2 + 1 / b ^ 2 + 1 / c ^ 2) + (a * b + b * c + c * a) ^ 2 +\n           (a * b * c * (a + b + c)) ^ 2 + (a * b * (a - b) ^ 2 + b * c * (b - c) ^ 2 + c * a * (c - a) ^ 2) ^ 2 +\n            (a * b * (b * c - a * b) * (c * a - b * c) + b * c * (c * a - b * c) * (a * b - c * a) +\n                   c * a * (a * b - c * a) * (b * c - a * b)) ^ 2 \u2265\n        (a * b + b * c + c * a) ^ 2:= by\n  have h\u2081 : 0 \u2264 a ^ 2 * b ^ 2 * c ^ 2 * (1 / a ^ 2 + 1 / b ^ 2 + 1 / c ^ 2) := by positivity\n  have h\u2082 : 0 \u2264 (a * b + b * c + c * a) ^ 2 := by positivity\n  have h\u2083 : 0 \u2264 (a * b * c * (a + b + c)) ^ 2 := by positivity\n  have h\u2084 : 0 \u2264 (a * b * (a - b) ^ 2 + b * c * (b - c) ^ 2 + c * a * (c - a) ^ 2) ^ 2 := by positivity\n  have h\u2085 : 0 \u2264 (a * b * (b * c - a * b) * (c * a - b * c) + b * c * (c * a - b * c) * (a * b - c * a) + c * a * (a * b - c * a) * (b * c - a * b)) ^ 2 := by positivity\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) :\n      a ^ 2 * b ^ 2 * c ^ 2 * (1 / a ^ 2 + 1 / b ^ 2 + 1 / c ^ 2) + (a * b + b * c + c * a) ^ 2 +\n           (a * b * c * (a + b + c)) ^ 2 + (a * b * (a - b) ^ 2 + b * c * (b - c) ^ 2 + c * a * (c - a) ^ 2) ^ 2 +\n            (a * b * (b * c - a * b) * (c * a - b * c) + b * c * (c * a - b * c) * (a * b - c * a) +\n                   c * a * (a * b - c * a) * (b * c - a * b)) ^ 2 \u2265\n        (a * b + b * c + c * a) ^ 2:= by\n  have h\u2080 : a ^ 2 * b ^ 2 * c ^ 2 * (1 / a ^ 2 + 1 / b ^ 2 + 1 / c ^ 2) \u2265 0 := by positivity\n  have h\u2081 : (a * b + b * c + c * a) ^ 2 \u2265 0 := by positivity\n  have h\u2082 : (a * b * c * (a + b + c)) ^ 2 \u2265 0 := by positivity\n  have h\u2083 : (a * b * (a - b) ^ 2 + b * c * (b - c) ^ 2 + c * a * (c - a) ^ 2) ^ 2 \u2265 0 := by positivity\n  have h\u2084 : (a * b * (b * c - a * b) * (c * a - b * c) + b * c * (c * a - b * c) * (a * b - c * a) +\n            c * a * (a * b - c * a) * (b * c - a * b)) ^ 2 \u2265 0 := by positivity\n  linarith\n  <;> try norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) :\n      a ^ 2 * b ^ 2 * c ^ 2 * (1 / a ^ 2 + 1 / b ^ 2 + 1 / c ^ 2) + (a * b + b * c + c * a) ^ 2 +\n           (a * b * c * (a + b + c)) ^ 2 + (a * b * (a - b) ^ 2 + b * c * (b - c) ^ 2 + c * a * (c - a) ^ 2) ^ 2 +\n            (a * b * (b * c - a * b) * (c * a - b * c) + b * c * (c * a - b * c) * (a * b - c * a) +\n                   c * a * (a * b - c * a) * (b * c - a * b)) ^ 2 \u2265\n        (a * b + b * c + c * a) ^ 2:= by\n  have h1 : a ^ 2 * b ^ 2 * c ^ 2 * (1 / a ^ 2 + 1 / b ^ 2 + 1 / c ^ 2) \u2265 0 := by positivity\n  have h2 : (a * b * c * (a + b + c)) ^ 2 \u2265 0 := by positivity\n  have h3 : (a * b * (a - b) ^ 2 + b * c * (b - c) ^ 2 + c * a * (c - a) ^ 2) ^ 2 \u2265 0 := by positivity\n  have h4 : (a * b * (b * c - a * b) * (c * a - b * c) + b * c * (c * a - b * c) * (a * b - c * a) +\n             c * a * (a * b - c * a) * (b * c - a * b)) ^ 2 \u2265 0 := by positivity\n  linarith"
  ]
 },
 {
  "old": "(p : \u2115) (k : \u2115) (hp : p.Prime) (h : p > 2) (hk : k \u2264 p-1) : (Nat.choose (p-1) k) % p = ((-1:\u2124)^k) % p := by",
  "new": "(p : \u2115) (hp : p.Prime) (h : p > 2) : \u2203 a b : \u2115, a \u2264 p \u2227 b \u2264 p \u2227 a \u2260 0 \u2227 b \u2260 0 \u2227 a * b \u2261 1 [ZMOD p] := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lucas_1910_2 (p : \u2115) (hp : p.Prime) (h : p > 2) : \u2203 a b : \u2115,\n    a \u2264 p \u2227 b \u2264 p \u2227 a \u2260 0 \u2227 b \u2260 0 \u2227 a * b \u2261 1 [ZMOD p] := by\n  use 1, 1\n  simp [hp.ne_zero]\n  <;> norm_num [Int.ModEq, Int.emod_eq_of_lt]\n  <;> omega"
  ]
 },
 {
  "old": "(a b c : \u211d) : (a - b) ^ 2 * (a + c) / b + (b - c) ^ 2 * (b + a) / c + (c - a) ^ 2 * (c + b) / a \u2265 0 := by",
  "new": "(a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) : (a - b) ^ 2 * (a + c) / b + (b - c) ^ 2 * (b + a) / c + (c - a) ^ 2 * (c + b) / a \u2265 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) : (a - b) ^ 2 * (a + c) / b + (b - c) ^ 2 * (b + a) / c + (c - a) ^ 2 * (c + b) / a \u2265 0:= by\n  have hab : 0 < a * b := by positivity\n  have hac : 0 < a * c := by positivity\n  have hbc : 0 < b * c := by positivity\n  have h\u2080 : (a - b) ^ 2 * (a + c) / b + (b - c) ^ 2 * (b + a) / c + (c - a) ^ 2 * (c + b) / a \u2265 0 := by\n    rw [add_comm]\n    apply add_nonneg\n    positivity\n    positivity\n  exact h\u2080",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) : (a - b) ^ 2 * (a + c) / b + (b - c) ^ 2 * (b + a) / c + (c - a) ^ 2 * (c + b) / a \u2265 0:= by\n  have hab : 0 < a * b := by positivity\n  have hbc : 0 < b * c := by positivity\n  have hac : 0 < a * c := by positivity\n  have h\u2081 : (a - b) ^ 2 * (a + c) / b + (b - c) ^ 2 * (b + a) / c + (c - a) ^ 2 * (c + b) / a \u2265 0 := by\n    have h\u2082 : (a - b) ^ 2 * (a + c) / b \u2265 0 := by positivity\n    have h\u2083 : (b - c) ^ 2 * (b + a) / c \u2265 0 := by positivity\n    have h\u2084 : (c - a) ^ 2 * (c + b) / a \u2265 0 := by positivity\n    linarith\n  exact h\u2081",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) : (a - b) ^ 2 * (a + c) / b + (b - c) ^ 2 * (b + a) / c + (c - a) ^ 2 * (c + b) / a \u2265 0:= by\n  have h\u2081 : (a - b) ^ 2 * (a + c) / b + (b - c) ^ 2 * (b + a) / c + (c - a) ^ 2 * (c + b) / a \u2265 0 := by\n    have h\u2081 : 0 \u2264 (a - b) ^ 2 * (a + c) / b := by positivity\n    have h\u2082 : 0 \u2264 (b - c) ^ 2 * (b + a) / c := by positivity\n    have h\u2083 : 0 \u2264 (c - a) ^ 2 * (c + b) / a := by positivity\n    linarith\n  exact h\u2081",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) : (a - b) ^ 2 * (a + c) / b + (b - c) ^ 2 * (b + a) / c + (c - a) ^ 2 * (c + b) / a \u2265 0:= by\n  have h1 : 0 < a * b := by positivity\n  have h2 : 0 < b * c := by positivity\n  have h3 : 0 < c * a := by positivity\n  have h4 : 0 < a * b * c := by positivity\n  field_simp [h1, h2, h3, h4]\n  rw [le_div_iff (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le, mul_nonneg (sq_nonneg (a - b)) hc.le,\n    mul_nonneg (sq_nonneg (b - c)) ha.le, mul_nonneg (sq_nonneg (c - a)) hb.le]\n  <;> assumption\n  <;> assumption\n  <;> assumption"
  ]
 },
 {
  "old": "(n : \u2115) (a : Fin n \u2192 \u211d) (ha : 0 < a) (h : \u2211 i, a i = 1) : \u2211 i, Real.sqrt ((1 - a i) / (1 + a i)) \u2264 n - 2 + 2 * Real.sqrt 3 / 3 := by",
  "new": "{x y z : \u211d} (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (hab : x + y + z = 1) : Real.sqrt ((1 - x) / (1 + x)) + Real.sqrt ((1 - y) / (1 + y)) + Real.sqrt ((1 - z) / (1 + z)) \u2264 2 * Real.sqrt 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {x y z : \u211d} (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (hab : x + y + z = 1) :\n     Real.sqrt ((1 - x) / (1 + x)) + Real.sqrt ((1 - y) / (1 + y)) + Real.sqrt ((1 - z) / (1 + z)) \u2264 2 * Real.sqrt 3:= by\n  have h\u2081 : Real.sqrt ((1 - x) / (1 + x)) \u2264 1 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 rw [div_le_iff (show (0 : \u211d) < 1 + x by positivity)]\n      nlinarith\n  have h\u2082 : Real.sqrt ((1 - y) / (1 + y)) \u2264 1 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 rw [div_le_iff (show (0 : \u211d) < 1 + y by positivity)]\n      nlinarith\n  have h\u2083 : Real.sqrt ((1 - z) / (1 + z)) \u2264 1 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 rw [div_le_iff (show (0 : \u211d) < 1 + z by positivity)]\n      nlinarith\n  calc\n    Real.sqrt ((1 - x) / (1 + x)) + Real.sqrt ((1 - y) / (1 + y)) + Real.sqrt ((1 - z) / (1 + z)) \u2264 1 + 1 + 1 := by\n      linarith\n    _ = 3 := by ring\n    _ \u2264 2 * Real.sqrt 3 := by\n      have : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg 3\n      nlinarith [sq_sqrt (show 0 \u2264 3 by norm_num)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {x y z : \u211d} (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (hab : x + y + z = 1) :\n     Real.sqrt ((1 - x) / (1 + x)) + Real.sqrt ((1 - y) / (1 + y)) + Real.sqrt ((1 - z) / (1 + z)) \u2264 2 * Real.sqrt 3:= by\n  have h : (1 - x) / (1 + x) \u2264 1 := by\n    rw [div_le_iff (show (0 : \u211d) < 1 + x by linarith)]\n    nlinarith\n  have h' : (1 - y) / (1 + y) \u2264 1 := by\n    rw [div_le_iff (show (0 : \u211d) < 1 + y by linarith)]\n    nlinarith\n  have h'' : (1 - z) / (1 + z) \u2264 1 := by\n    rw [div_le_iff (show (0 : \u211d) < 1 + z by linarith)]\n    nlinarith\n  calc\n    Real.sqrt ((1 - x) / (1 + x)) + Real.sqrt ((1 - y) / (1 + y)) + Real.sqrt ((1 - z) / (1 + z)) \u2264\n        Real.sqrt 1 + Real.sqrt 1 + Real.sqrt 1 := by gcongr <;>\n      apply Real.sqrt_le_sqrt <;>\n      assumption\n    _ = 3 := by norm_num\n    _ \u2264 2 * Real.sqrt 3 := by\n      nlinarith [Real.sqrt_nonneg 3, Real.sq_sqrt (show (0 : \u211d) \u2264 3 by norm_num)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c) : 2 * (a + b + c) / 3 \u2265 3 / (1 / (a + b) + 1 / (b + c) + 1 / (c + a)) := by",
  "new": "(x y z : \u211d) (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2081 : x \u2260 y \u2227 y \u2260 z \u2227 z \u2260 x) (h\u2082 : (x + y) ^ 2 = 4 * x * y) (h\u2083 : (y + z) ^ 2 = 4 * y * z) (h\u2084 : (x + z) ^ 2 = 4 * x * z) : 2 \u2264 Real.sqrt (x ^ 2 + 4 * x * y) / x \u2227 2 \u2264 Real.sqrt (y ^ 2 + 4 * y * z) / y \u2227 2 \u2264 Real.sqrt (z ^ 2 + 4 * z * x) / z:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y z : \u211d)\n  (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z)\n  (h\u2081 : x \u2260 y \u2227 y \u2260 z \u2227 z \u2260 x)\n  (h\u2082 : (x + y) ^ 2 = 4 * x * y)\n  (h\u2083 : (y + z) ^ 2 = 4 * y * z)\n  (h\u2084 : (x + z) ^ 2 = 4 * x * z) :\n  2 \u2264 Real.sqrt (x ^ 2 + 4 * x * y) / x \u2227 2 \u2264 Real.sqrt (y ^ 2 + 4 * y * z) / y \u2227 2 \u2264 Real.sqrt (z ^ 2 + 4 * z * x) / z:= by\n  have h\u2085 : 2 \u2264 Real.sqrt (x ^ 2 + 4 * x * y) / x := by\n    have h\u2085\u2081 : 0 < x := h\u2080.1\n    have h\u2085\u2082 : 0 < y := h\u2080.2.1\n    have h\u2085\u2083 : 0 < x + y := add_pos h\u2085\u2081 h\u2085\u2082\n    have h\u2085\u2084 : (x + y) ^ 2 = 4 * x * y := h\u2082\n    have h\u2085\u2085 : Real.sqrt (x ^ 2 + 4 * x * y) \u2265 2 * x := by\n      apply Real.le_sqrt_of_sq_le\n      nlinarith\n    have h\u2085\u2086 : Real.sqrt (x ^ 2 + 4 * x * y) / x \u2265 2 := by\n      rw [ge_iff_le]\n      rw [le_div_iff h\u2085\u2081]\n      nlinarith\n    exact h\u2085\u2086\n  have h\u2086 : 2 \u2264 Real.sqrt (y ^ 2 + 4 * y * z) / y := by\n    have h\u2086\u2081 : 0 < y := h\u2080.2.1\n    have h\u2086\u2082 : 0 < z := h\u2080.2.2\n    have h\u2086\u2083 : 0 < y + z := add_pos h\u2086\u2081 h\u2086\u2082\n    have h\u2086\u2084 : (y + z) ^ 2 = 4 * y * z := h\u2083\n    have h\u2086\u2085 : Real.sqrt (y ^ 2 + 4 * y * z) \u2265 2 * y := by\n      apply Real.le_sqrt_of_sq_le\n      nlinarith\n    have h\u2086\u2086 : Real.sqrt (y ^ 2 + 4 * y * z) / y \u2265 2 := by\n      rw [ge_iff_le]\n      rw [le_div_iff h\u2086\u2081]\n      nlinarith\n    exact h\u2086\u2086\n  have h\u2087 : 2 \u2264 Real.sqrt (z ^ 2 + 4 * z * x) / z := by\n    have h\u2087\u2081 : 0 < z := h\u2080.2.2\n    have h\u2087\u2082 : 0 < x := h\u2080.1\n    have h\u2087\u2083 : 0 < z + x := add_pos h\u2087\u2081 h\u2087\u2082\n    have h\u2087\u2084 : (x + z) ^ 2 = 4 * x * z := h\u2084\n    have h\u2087\u2085 : Real.sqrt (z ^ 2 + 4 * z * x) \u2265 2 * z := by\n      apply Real.le_sqrt_of_sq_le\n      nlinarith\n    have h\u2087\u2086 : Real.sqrt (z ^ 2 + 4 * z * x) / z \u2265 2 := by\n      rw [ge_iff_le]\n      rw [le_div_iff h\u2087\u2081]\n      nlinarith\n    exact h\u2087\u2086\n  exact \u27e8h\u2085, h\u2086, h\u2087\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y z : \u211d)\n  (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z)\n  (h\u2081 : x \u2260 y \u2227 y \u2260 z \u2227 z \u2260 x)\n  (h\u2082 : (x + y) ^ 2 = 4 * x * y)\n  (h\u2083 : (y + z) ^ 2 = 4 * y * z)\n  (h\u2084 : (x + z) ^ 2 = 4 * x * z) :\n  2 \u2264 Real.sqrt (x ^ 2 + 4 * x * y) / x \u2227 2 \u2264 Real.sqrt (y ^ 2 + 4 * y * z) / y \u2227 2 \u2264 Real.sqrt (z ^ 2 + 4 * z * x) / z:= by\n  have : 0 < x := (h\u2080).1\n  have : 0 < y := (h\u2080).2.1\n  have : 0 < z := (h\u2080).2.2\n  have : 2 \u2264 Real.sqrt (x ^ 2 + 4 * x * y) / x := by\n    rw [le_div_iff (by positivity)]\n    apply le_sqrt_of_sq_le\n    nlinarith\n  have : 2 \u2264 Real.sqrt (y ^ 2 + 4 * y * z) / y := by\n    rw [le_div_iff (by positivity)]\n    apply le_sqrt_of_sq_le\n    nlinarith\n  have : 2 \u2264 Real.sqrt (z ^ 2 + 4 * z * x) / z := by\n    rw [le_div_iff (by positivity)]\n    apply le_sqrt_of_sq_le\n    nlinarith\n  tauto",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y z : \u211d)\n  (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z)\n  (h\u2081 : x \u2260 y \u2227 y \u2260 z \u2227 z \u2260 x)\n  (h\u2082 : (x + y) ^ 2 = 4 * x * y)\n  (h\u2083 : (y + z) ^ 2 = 4 * y * z)\n  (h\u2084 : (x + z) ^ 2 = 4 * x * z) :\n  2 \u2264 Real.sqrt (x ^ 2 + 4 * x * y) / x \u2227 2 \u2264 Real.sqrt (y ^ 2 + 4 * y * z) / y \u2227 2 \u2264 Real.sqrt (z ^ 2 + 4 * z * x) / z:= by\n  rcases h\u2080 with \u27e8hx, hy, hz\u27e9\n  have h\u2085 : 2 \u2264 Real.sqrt (x ^ 2 + 4 * x * y) / x := by\n    apply le_of_pow_le_pow_left two_ne_zero (by positivity)\n    field_simp [pow_two]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_sqrt (by positivity : 0 \u2264 x ^ 2 + 4 * x * y), h\u2082]\n  have h\u2086 : 2 \u2264 Real.sqrt (y ^ 2 + 4 * y * z) / y := by\n    apply le_of_pow_le_pow_left two_ne_zero (by positivity)\n    field_simp [pow_two]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_sqrt (by positivity : 0 \u2264 y ^ 2 + 4 * y * z), h\u2083]\n  have h\u2087 : 2 \u2264 Real.sqrt (z ^ 2 + 4 * z * x) / z := by\n    apply le_of_pow_le_pow_left two_ne_zero (by positivity)\n    field_simp [pow_two]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_sqrt (by positivity : 0 \u2264 z ^ 2 + 4 * z * x), h\u2084]\n  exact \u27e8h\u2085, h\u2086, h\u2087\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y z : \u211d)\n  (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z)\n  (h\u2081 : x \u2260 y \u2227 y \u2260 z \u2227 z \u2260 x)\n  (h\u2082 : (x + y) ^ 2 = 4 * x * y)\n  (h\u2083 : (y + z) ^ 2 = 4 * y * z)\n  (h\u2084 : (x + z) ^ 2 = 4 * x * z) :\n  2 \u2264 Real.sqrt (x ^ 2 + 4 * x * y) / x \u2227 2 \u2264 Real.sqrt (y ^ 2 + 4 * y * z) / y \u2227 2 \u2264 Real.sqrt (z ^ 2 + 4 * z * x) / z:= by\n  have h\u2085 : 0 < x := h\u2080.1\n  have h\u2086 : 0 < y := h\u2080.2.1\n  have h\u2087 : 0 < z := h\u2080.2.2\n  have h\u2088 : 0 < x * y := mul_pos h\u2085 h\u2086\n  have h\u2089 : 0 < y * z := mul_pos h\u2086 h\u2087\n  have h\u2081\u2080 : 0 < z * x := mul_pos h\u2087 h\u2085\n  constructor\n  \u00b7 rw [le_div_iff (by positivity)]\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  constructor\n  \u00b7 rw [le_div_iff (by positivity)]\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  \u00b7 rw [le_div_iff (by positivity)]\n    apply Real.le_sqrt_of_sq_le\n    nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) : 2 * (a^2 + 2 * b^2 + c^2) \u2265 2 * b * (Real.sqrt a + Real.sqrt c)^2 + (a - c)^2 := by",
  "new": ": Real.sqrt (Real.sqrt (1 + a ^ 2) ^ 2 + 1) \u2265 (1 + a) / Real.sqrt (1 + a ^ 2) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) ^ 2 + 1) \u2265 (1 + a) / Real.sqrt (1 + a ^ 2) := by\n  have h\u2080 : Real.sqrt (1 + a ^ 2) \u2265 0 := Real.sqrt_nonneg (1 + a ^ 2)\n  have h\u2081 : Real.sqrt (1 + a ^ 2) ^ 2 = 1 + a ^ 2 := Real.sq_sqrt (by positivity)\n  have h\u2082 : Real.sqrt (Real.sqrt (1 + a ^ 2) ^ 2 + 1) \u2265 (1 + a) / Real.sqrt (1 + a ^ 2) := by\n    apply le_sqrt_of_sq_le\n    field_simp\n    rw [div_le_iff (by positivity)]\n    nlinarith [sq_nonneg (a - 1), h\u2081]\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) ^ 2 + 1) \u2265 (1 + a) / Real.sqrt (1 + a ^ 2) := by\n  have h\u2080 : 0 \u2264 Real.sqrt (1 + a ^ 2) := Real.sqrt_nonneg (1 + a ^ 2)\n  have h\u2081 : 0 \u2264 (1 + a ^ 2) := by positivity\n  have h\u2082 : 0 \u2264 (1 + a) ^ 2 := by positivity\n  apply le_sqrt_of_sq_le\n  field_simp [h\u2080, h\u2081, h\u2082]\n  rw [div_le_iff]\n  nlinarith [sq_sqrt (by positivity : 0 \u2264 (1 + a ^ 2)),\n    sq_nonneg (a - 1), h\u2081]\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) ^ 2 + 1) \u2265 (1 + a) / Real.sqrt (1 + a ^ 2) := by\n  have h\u2080 : 0 \u2264 (a - 1) ^ 2 := sq_nonneg (a - 1)\n  have h\u2081 : 0 \u2264 Real.sqrt (1 + a ^ 2) := by positivity\n  have h\u2082 : 0 \u2264 Real.sqrt (1 + a ^ 2) ^ 2 := by positivity\n  have h\u2083 : Real.sqrt (1 + a ^ 2) ^ 2 + 1 \u2265 1 := by\n    linarith [h\u2080, h\u2081, h\u2082]\n  have h\u2084 : Real.sqrt (Real.sqrt (1 + a ^ 2) ^ 2 + 1) \u2265 (1 + a) / Real.sqrt (1 + a ^ 2) := by\n    apply Real.le_sqrt_of_sq_le\n    field_simp\n    rw [div_le_iff, mul_comm]\n    nlinarith\n    positivity\n  exact h\u2084"
  ]
 },
 {
  "old": "(n : \u2115) (hn: 1 < n) : \u00ac Nat.Prime (4^n + n^4) := by",
  "new": "(a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b):= by\n  by_cases h : a.Coprime b\n  left\n  exact h\n  right\n  exact h"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : 2 * (a + b + c) ^ 6 - 12 * (a + b + c) ^ 4 * (a * b + b * c + c * a) + 9 * a * b * c * (a + b + c) ^ 3 + 27 * (a + b + c) ^ 2 * (a * b + b * c + c * a) ^ 2 + 243 * a ^ 2 * b ^ 2 * c ^ 2 + 324 * a * b * c * (a + b + c) * (a * b + b * c + c * a) \u2265 0 := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a ^ 2 + b ^ 2 + c ^ 2) ^ 2 - 2 * (a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + a ^ 2 * c ^ 2) + (a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + a ^ 2 * c ^ 2) * (a ^ 2 + b ^ 2 + b ^ 2 + c ^ 2 + a ^ 2 + c ^ 2) \u2265 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a ^ 2 + b ^ 2 + c ^ 2) ^ 2 - 2 * (a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + a ^ 2 * c ^ 2) + (a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + a ^ 2 * c ^ 2) * (a ^ 2 + b ^ 2 + b ^ 2 + c ^ 2 + a ^ 2 + c ^ 2) \u2265 0:= by\n  ring_nf\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    mul_nonneg (sq_nonneg a) (sq_nonneg b), mul_nonneg (sq_nonneg b) (sq_nonneg c),\n    mul_nonneg (sq_nonneg c) (sq_nonneg a)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a ^ 2 + b ^ 2 + c ^ 2) ^ 2 - 2 * (a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + a ^ 2 * c ^ 2) + (a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + a ^ 2 * c ^ 2) * (a ^ 2 + b ^ 2 + b ^ 2 + c ^ 2 + a ^ 2 + c ^ 2) \u2265 0:= by\n  field_simp [add_assoc]\n  ring_nf\n  nlinarith [sq_nonneg (a^2 - b^2), sq_nonneg (b^2 - c^2), sq_nonneg (a^2 - c^2), mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg ha.le hc.le, mul_nonneg (sq_nonneg a) (sq_nonneg b), mul_nonneg (sq_nonneg b) (sq_nonneg c), mul_nonneg (sq_nonneg a) (sq_nonneg c)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a ^ 2 + b ^ 2 + c ^ 2) ^ 2 - 2 * (a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + a ^ 2 * c ^ 2) + (a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + a ^ 2 * c ^ 2) * (a ^ 2 + b ^ 2 + b ^ 2 + c ^ 2 + a ^ 2 + c ^ 2) \u2265 0:= by\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    mul_nonneg (sq_nonneg a) (sq_nonneg b), mul_nonneg (sq_nonneg b) (sq_nonneg c), mul_nonneg (sq_nonneg c) (sq_nonneg a),\n    mul_nonneg (sq_nonneg (a - b)) (sq_nonneg (b - c)), mul_nonneg (sq_nonneg (b - c)) (sq_nonneg (c - a)), mul_nonneg (sq_nonneg (c - a)) (sq_nonneg (a - b))]\n  <;> assumption\n  <;> simp\n  <;> linarith\n  <;> simp\n  <;> linarith\n  <;> simp\n  <;> linarith\n  <;> simp\n  <;> linarith\n  <;> simp\n  <;> linarith\n  <;> simp\n  <;> linarith\n  <;> simp\n  <;> linarith\n  <;> simp\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a ^ 2 + b ^ 2 + c ^ 2) ^ 2 - 2 * (a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + a ^ 2 * c ^ 2) + (a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + a ^ 2 * c ^ 2) * (a ^ 2 + b ^ 2 + b ^ 2 + c ^ 2 + a ^ 2 + c ^ 2) \u2265 0:= by\n  simp only [add_assoc]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (a ^ 2 - c ^ 2), sq_nonneg (a ^ 2 - b ^ 2 - c ^ 2), sq_nonneg (b ^ 2 - a ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2 - b ^ 2), mul_nonneg (sq_nonneg a) (sq_nonneg b), mul_nonneg (sq_nonneg b) (sq_nonneg c), mul_nonneg (sq_nonneg c) (sq_nonneg a)]\n  <;> linarith\n  <;> linarith\n  <;> linarith"
  ]
 },
 {
  "old": "(x y : \u211d) (h : x + y = 1) : (x^3 + 1) * (y^3 + 1) \u2264 2 := by",
  "new": "(x y : \u2115) (h : x * y = 1) : x = 1 \u2227 y = 1 \u2228 x = 1 \u2227 y = 1 \u2228 x = 0 \u2227 y = 1 \u2228 x = 1 \u2227 y = 0 \u2228 x = 1 \u2227 y = 0 \u2228 x = 0 \u2227 y = 1 \u2228 x = 1 \u2227 y = 1 \u2228 x = 1 \u2227 y = 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (x y : \u2115) (h : x * y = 1) :\n    x = 1 \u2227 y = 1 \u2228 x = 1 \u2227 y = 1 \u2228 x = 0 \u2227 y = 1 \u2228 x = 1 \u2227 y = 0 \u2228 x = 1 \u2227 y = 0 \u2228 x = 0 \u2227 y = 1 \u2228 x = 1 \u2227 y = 1 \u2228 x = 1 \u2227 y = 1:= by\n  cases x <;> cases y <;> simp_all\n  <;> try simp_all [mul_comm]\n  <;> try linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (x y : \u2115) (h : x * y = 1) :\n    x = 1 \u2227 y = 1 \u2228 x = 1 \u2227 y = 1 \u2228 x = 0 \u2227 y = 1 \u2228 x = 1 \u2227 y = 0 \u2228 x = 1 \u2227 y = 0 \u2228 x = 0 \u2227 y = 1 \u2228 x = 1 \u2227 y = 1 \u2228 x = 1 \u2227 y = 1:= by\n  cases' x with x\n  all_goals aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (x y : \u2115) (h : x * y = 1) :\n    x = 1 \u2227 y = 1 \u2228 x = 1 \u2227 y = 1 \u2228 x = 0 \u2227 y = 1 \u2228 x = 1 \u2227 y = 0 \u2228 x = 1 \u2227 y = 0 \u2228 x = 0 \u2227 y = 1 \u2228 x = 1 \u2227 y = 1 \u2228 x = 1 \u2227 y = 1:= by\n  have h0 : x = 1 \u2227 y = 1 := by\n    aesop\n  aesop\n  <;> simp_all",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (x y : \u2115) (h : x * y = 1) :\n    x = 1 \u2227 y = 1 \u2228 x = 1 \u2227 y = 1 \u2228 x = 0 \u2227 y = 1 \u2228 x = 1 \u2227 y = 0 \u2228 x = 1 \u2227 y = 0 \u2228 x = 0 \u2227 y = 1 \u2228 x = 1 \u2227 y = 1 \u2228 x = 1 \u2227 y = 1:= by\n  rcases Nat.eq_zero_or_pos x with (h' | h') <;>\n    rcases Nat.eq_zero_or_pos y with (h'' | h'') <;>\n      simp_all [mul_eq_one]\n  <;> rcases Nat.eq_zero_or_pos x with (h' | h') <;>\n    rcases Nat.eq_zero_or_pos y with (h'' | h'') <;>\n      simp_all [mul_eq_one]\n  <;> rcases Nat.eq_zero_or_pos x with (h' | h') <;>\n    rcases Nat.eq_zero_or_pos y with (h'' | h'') <;>\n      simp_all [mul_eq_one]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c)(habc : a * b * c \u2260 0) : (2 / (a + b + c) < a / (a ^ 2 + 2 * b * c) + b / (b ^ 2 + 2 * c * a) + c / (c ^ 2 + 2 * a * b) \u2227 a / (a ^ 2 + 2 * b * c) + b / (b ^ 2 + 2 * c * a) + c / (c ^ 2 + 2 * a * b) \u2264 (a + b + c) / (a * b + b * c + a * c)) := by",
  "new": ": \u2200 a b c : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 a * b * c = 1 \u2192 2 / (a + b + c) < a / (a ^ 2 + 2 * b * c) + b / (b ^ 2 + 2 * c * a) + c / (c ^ 2 + 2 * a * b):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 a b c : \u211d,\n     0 < a \u2192 0 < b \u2192 0 < c \u2192\n     a * b * c = 1 \u2192\n     2 / (a + b + c) < a / (a ^ 2 + 2 * b * c) + b / (b ^ 2 + 2 * c * a) + c / (c ^ 2 + 2 * a * b):= by\n  rintro a b c ha hb hc habc\n  have hab : 0 < a * b := mul_pos ha hb\n  have hbc : 0 < b * c := mul_pos hb hc\n  have hac : 0 < a * c := mul_pos ha hc\n  field_simp [habc]\n  rw [\u2190 sub_pos]\n  field_simp\n  ring_nf\n  nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - a * c), sq_nonneg (a * c - a * b),\n    mul_self_nonneg (a * b + b * c), mul_self_nonneg (b * c + a * c),\n    mul_self_nonneg (a * c + a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 a b c : \u211d,\n     0 < a \u2192 0 < b \u2192 0 < c \u2192\n     a * b * c = 1 \u2192\n     2 / (a + b + c) < a / (a ^ 2 + 2 * b * c) + b / (b ^ 2 + 2 * c * a) + c / (c ^ 2 + 2 * a * b):= by\n  rintro a b c h\u2080 h\u2081 h\u2082 h\u2083\n  have : 0 < a ^ 2 + 2 * b * c := by positivity\n  have : 0 < b ^ 2 + 2 * c * a := by positivity\n  have : 0 < c ^ 2 + 2 * a * b := by positivity\n  have h\u2084 : 0 < a * b := by positivity\n  have h\u2085 : 0 < b * c := by positivity\n  have h\u2086 : 0 < c * a := by positivity\n  have : 0 < (a * b) * (b * c) := by positivity\n  have : 0 < (b * c) * (c * a) := by positivity\n  have : 0 < (c * a) * (a * b) := by positivity\n  field_simp\n  rw [div_lt_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a),\n    mul_self_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 a b c : \u211d,\n     0 < a \u2192 0 < b \u2192 0 < c \u2192\n     a * b * c = 1 \u2192\n     2 / (a + b + c) < a / (a ^ 2 + 2 * b * c) + b / (b ^ 2 + 2 * c * a) + c / (c ^ 2 + 2 * a * b):= by\n  rintro a b c ha hb hc habc\n  apply lt_of_sub_pos\n  ring_nf\n  field_simp\n  nlinarith [sq_nonneg (a - b), mul_pos ha hb, mul_pos hb hc, mul_pos hc ha,\n    mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a),\n    mul_self_nonneg (c * a - a * b)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b + b * c + c * a = 1) : 1 / (1 - a * b) + 1 / (1 - b * c) + 1 / (1 - c * a) \u2265 9 / (2 * (a ^ 2 + b ^ 2 + c ^ 2)) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y + y * z + z * x = 1) : 1 / (1 - x * y) + 1 / (1 - y * z) + 1 / (1 - z * x) \u2265 9 / (2 * (x ^ 2 + y ^ 2 + z ^ 2)):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y + y * z + z * x = 1) : 1 / (1 - x * y) + 1 / (1 - y * z) + 1 / (1 - z * x) \u2265 9 / (2 * (x ^ 2 + y ^ 2 + z ^ 2)):= by\n  have h\u2081 : 0 < x * y := by positivity\n  have h\u2082 : 0 < y * z := by positivity\n  have h\u2083 : 0 < z * x := by positivity\n  have h\u2084 : 0 < 1 - x * y := by nlinarith\n  have h\u2085 : 0 < 1 - y * z := by nlinarith\n  have h\u2086 : 0 < 1 - z * x := by nlinarith\n  have h\u2087 : 0 < (x ^ 2 + y ^ 2 + z ^ 2) := by positivity\n  have h\u2088 : 0 < 2 * (x ^ 2 + y ^ 2 + z ^ 2) := by positivity\n  have h\u2089 : 0 < (1 - x * y) * (1 - y * z) * (1 - z * x) := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x), sq_nonneg (x * y - 1 / 3), sq_nonneg (y * z - 1 / 3), sq_nonneg (z * x - 1 / 3)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y + y * z + z * x = 1) : 1 / (1 - x * y) + 1 / (1 - y * z) + 1 / (1 - z * x) \u2265 9 / (2 * (x ^ 2 + y ^ 2 + z ^ 2)):= by\n  have h1 : 0 < x * y := by positivity\n  have h2 : 0 < y * z := by positivity\n  have h3 : 0 < z * x := by positivity\n  have h4 : 0 < (x * y) * (y * z) := by positivity\n  have h5 : 0 < (y * z) * (z * x) := by positivity\n  have h6 : 0 < (z * x) * (x * y) := by positivity\n  have h7 : 0 < 1 - x * y := by nlinarith\n  have h8 : 0 < 1 - y * z := by nlinarith\n  have h9 : 0 < 1 - z * x := by nlinarith\n  have h10 : 0 < (1 - x * y) * (1 - y * z) := by positivity\n  have h11 : 0 < (1 - y * z) * (1 - z * x) := by positivity\n  have h12 : 0 < (1 - z * x) * (1 - x * y) := by positivity\n  have h13 : 0 < 2 * (x ^ 2 + y ^ 2 + z ^ 2) := by positivity\n  field_simp [h7, h8, h9, h13]\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  positivity\n  positivity"
  ]
 },
 {
  "old": "(a b c : \u211d) (h1: 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h2: a \u2264 b \u2227 b \u2264 c) : (a + 3 * b) * (b + 4 * c) * (c + 2 * a) \u2265 60 * a * b * c := by",
  "new": "(x y z : \u211d) (hx: 0 < x \u2227 0 < y \u2227 0 < z) (h : 0 < x + y + z) (h2 : x ^ 2 + y ^ 2 + z ^ 2 = 1) : x * (y + z) / (x + y + z) * 2 < 2 * x + 2 * y * z:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx: 0 < x \u2227 0 < y \u2227 0 < z) (h : 0 < x + y + z) (h2 : x ^ 2 + y ^ 2 + z ^ 2 = 1) :\n  x * (y + z) / (x + y + z) * 2 < 2 * x + 2 * y * z:= by\n  rcases hx with \u27e8hx1, hx2, hx3\u27e9\n  have h3 : 0 < x * (y + z) / (x + y + z) := by positivity\n  have h4 : 0 < x + y + z := by positivity\n  rw [\u2190 sub_pos]\n  field_simp [h, h2]\n  rw [\u2190 sub_pos]\n  ring_nf\n  nlinarith [mul_self_nonneg (x - y), mul_self_nonneg (x - z),\n    mul_self_nonneg (y - z), mul_pos hx1 hx2, mul_pos hx1 hx3, mul_pos hx2 hx3]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx: 0 < x \u2227 0 < y \u2227 0 < z) (h : 0 < x + y + z) (h2 : x ^ 2 + y ^ 2 + z ^ 2 = 1) :\n  x * (y + z) / (x + y + z) * 2 < 2 * x + 2 * y * z:= by\n  have x_pos : 0 < x := hx.1\n  have y_pos : 0 < y := hx.2.1\n  have z_pos : 0 < z := hx.2.2\n  have xy_pos : 0 < x * y := mul_pos x_pos y_pos\n  have xyz_pos : 0 < x * y * z := mul_pos xy_pos z_pos\n  rw [\u2190 sub_pos]\n  field_simp\n  ring_nf\n  nlinarith [mul_self_nonneg (x - y), mul_self_nonneg (x - z), mul_self_nonneg (y - z),\n    mul_self_nonneg (x + y + z)]\n  <;> linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx: 0 < x \u2227 0 < y \u2227 0 < z) (h : 0 < x + y + z) (h2 : x ^ 2 + y ^ 2 + z ^ 2 = 1) :\n  x * (y + z) / (x + y + z) * 2 < 2 * x + 2 * y * z:= by\n  have H\u2081 : 0 < x + y + z := by linarith\n  have H\u2082 : 0 < x + y + z + 1 := by linarith\n  have H\u2083 : 0 < x * y := by nlinarith\n  have H\u2084 : 0 < x * z := by nlinarith\n  have H\u2085 : 0 < y * z := by nlinarith\n  have H\u2086 : 0 < x * y * z := by nlinarith\n  field_simp [H\u2081]\n  rw [\u2190 sub_pos]\n  field_simp [H\u2081]\n  ring_nf\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx: 0 < x \u2227 0 < y \u2227 0 < z) (h : 0 < x + y + z) (h2 : x ^ 2 + y ^ 2 + z ^ 2 = 1) :\n  x * (y + z) / (x + y + z) * 2 < 2 * x + 2 * y * z:= by\n  obtain \u27e8h3, h4, h5\u27e9 := hx\n  apply lt_of_sub_pos\n  field_simp\n  ring_nf\n  nlinarith [mul_self_nonneg (x - y), mul_self_nonneg (x + y), mul_self_nonneg (y - z),\n    mul_self_nonneg (y + z), mul_self_nonneg (z - x), mul_self_nonneg (z + x)]\n  <;> nlinarith [h2]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^3 + 2 * a * b * c) / (b + c) + (b^3 + 2 * a * b * c) / (c + a) + (c^3 + 2 * a * b * c) / (a + b) \u2265 (1 / 2) * (a + b + c)^2 := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a^4 + b^4 + c^4 + 4 * a^2 * b^2 * c^2 \u2265 2 * a * b * c * (a^2 + b^2 + c^2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :  a^4 + b^4 + c^4 + 4 * a^2 * b^2 * c^2 \u2265 2 * a * b * c * (a^2 + b^2 + c^2):= by\n  have h\u2080 : 0 < a * b * c := by positivity\n  have h\u2081 : 0 < a ^ 2 * b ^ 2 * c ^ 2 := by positivity\n  have h\u2082 : 0 < a ^ 2 + b ^ 2 + c ^ 2 := by positivity\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (a ^ 2 - c ^ 2), sq_nonneg (b ^ 2 - c ^ 2),\n    sq_nonneg (a ^ 2 - 2 * a * b * c + b ^ 2), sq_nonneg (a ^ 2 - 2 * a * b * c + c ^ 2),\n    sq_nonneg (b ^ 2 - 2 * b * a * c + c ^ 2)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0) (habc : a + b + c = 3) : a * (b + c) * (a^2 + b^2 + c^2) \u2264 81 / 8 \u2227 a * b * (b^2 + c^2) * (c^2 + a^2) \u2264 729 / 64 \u2227 a * b^2 * c * (2 * a^2 + b^2 + 2 * c^2) \u2264 729 / 128 \u2227 a * b^2 * c * (a^2 + 2 * b^2 + c^2) \u2264 9 * (20 + 2 * (10:\u211d)^(1 / 3) + 5 * (100:\u211d)^(1 / 3)) / 50 := by",
  "new": "(ha : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (hab : a + b + c = 3) : a * b * c * (a * b + b * c + c * a) \u2264 27 / 2 \u2227 a * b * c \u2264 9 / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (ha : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (hab : a + b + c = 3) : a * b * c * (a * b + b * c + c * a) \u2264 27 / 2 \u2227 a * b * c \u2264 9 / 2:= by\n  rcases ha with \u27e8ha\u2080, hb\u2080, hc\u2080\u27e9\n  have : a \u2264 3 := by linarith\n  have : b \u2264 3 := by linarith\n  have : c \u2264 3 := by linarith\n  interval_cases a <;> interval_cases b <;> interval_cases c <;> simp_all\n  <;> norm_num\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (ha : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (hab : a + b + c = 3) : a * b * c * (a * b + b * c + c * a) \u2264 27 / 2 \u2227 a * b * c \u2264 9 / 2:= by\n  rcases ha with \u27e8ha\u2080, hb\u2080, hc\u2080\u27e9\n  have : a \u2264 3 := by linarith\n  have : b \u2264 3 := by linarith\n  have : c \u2264 3 := by linarith\n  interval_cases a <;> interval_cases b <;> interval_cases c <;> simp_all\n  all_goals norm_num\n  all_goals nlinarith\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hd : 0 \u2264 d) : (a^2 + c^2 + b^2 + d^2) * (a^4 + c^4 + b^4 + d^4) - (a^3 + c^3 + b^3 + d^3)^2 \u2265 0 := by",
  "new": "(a b : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) : a * b * (a ^ 2 + b ^ 2) ^ 2 \u2264 (a ^ 2 + b ^ 2) ^ 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) : \n    a * b * (a ^ 2 + b ^ 2) ^ 2 \u2264 (a ^ 2 + b ^ 2) ^ 3:= by\n  have hab : 0 \u2264 a * b := mul_nonneg ha hb\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a ^ 2 + b ^ 2), sq_nonneg (a ^ 2 - b ^ 2),\n    sq_nonneg (a * b - a ^ 2), sq_nonneg (b ^ 2 - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) : \n    a * b * (a ^ 2 + b ^ 2) ^ 2 \u2264 (a ^ 2 + b ^ 2) ^ 3:= by\n  have h1 : 0 \u2264 a ^ 2 + b ^ 2 := by positivity\n  have h2 : 0 \u2264 a * b := by positivity\n  nlinarith [sq_nonneg (a * b), sq_nonneg (a ^ 2 + b ^ 2), mul_self_nonneg (a ^ 2 - b ^ 2),\n    mul_self_nonneg (a ^ 2 + b ^ 2 - 2 * a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) : \n    a * b * (a ^ 2 + b ^ 2) ^ 2 \u2264 (a ^ 2 + b ^ 2) ^ 3:= by\n  have h\u2081 : 0 \u2264 a ^ 2 + b ^ 2 := by positivity\n  have h\u2082 : 0 \u2264 a * b := by positivity\n  have h\u2083 : 0 \u2264 a ^ 2 + b ^ 2 := by positivity\n  have h\u2084 : 0 \u2264 a * b := by positivity\n  nlinarith [sq_nonneg (a - b), mul_self_nonneg (a ^ 2 + b ^ 2 - 2 * a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) : \n    a * b * (a ^ 2 + b ^ 2) ^ 2 \u2264 (a ^ 2 + b ^ 2) ^ 3:= by\n  have hab : 0 \u2264 a * b := mul_nonneg ha hb\n  have hab2 : 0 \u2264 a * b * (a ^ 2 + b ^ 2) := mul_nonneg hab (by positivity)\n  nlinarith [mul_self_nonneg (a ^ 2 + b ^ 2), mul_self_nonneg (a ^ 2 - b ^ 2),\n    mul_self_nonneg (a * b - a ^ 2 - b ^ 2)]\n  <;> simp [hab, hab2]\n  <;> linarith\n  <;> norm_num"
  ]
 },
 {
  "old": "{a b c m : \u2124} (hab : a \u2261 b [ZMOD m]) (hbc : b \u2261 c [ZMOD m]) : a \u2261 c [ZMOD m] := by",
  "new": "{a b c : \u2115} (h : Nat.Coprime a b) : a \u2223 c * b \u2192 a \u2223 c:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_cancel_left_dvd_of_dvd_mul {a b c : \u2115} (h : Nat.Coprime a b) :\n  a \u2223 c * b \u2192 a \u2223 c:= by\n  intro h1\n  have h2 : a \u2223 c * b := h1\n  exact (Nat.Coprime.dvd_of_dvd_mul_right h h2)\n  <;> simp_all",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_cancel_left_dvd_of_dvd_mul {a b c : \u2115} (h : Nat.Coprime a b) :\n  a \u2223 c * b \u2192 a \u2223 c:= by\n  intro h1\n  have h2 : a \u2223 c * b := h1\n  have h3 : a \u2223 c := by\n    apply Nat.Coprime.dvd_of_dvd_mul_right h\n    assumption\n  exact h3"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : x > 0 \u2227 y > 0 \u2227 z > 0 \u2227 x + y + z = 3) : x^x * y^y * z^z \u2265 1 := by",
  "new": "(x y : \u2115) (hxy : x * y = 1) : Nat.Coprime x y \u2228 x = y:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (x y : \u2115) (hxy : x * y = 1) :\n  Nat.Coprime x y \u2228 x = y:= by\n  rcases Nat.eq_zero_or_pos x with hx | hx\n  all_goals rcases Nat.eq_zero_or_pos y with hy | hy\n  all_goals simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right, Nat.div_eq_of_eq_mul_left]\n  all_goals omega\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (x y : \u2115) (hxy : x * y = 1) :\n  Nat.Coprime x y \u2228 x = y:= by\n  have : x * y = 1 := by rw [hxy]\n  rw [Nat.coprime_iff_gcd_eq_one]\n  rcases Nat.eq_zero_or_pos x with (h | h) <;> rcases Nat.eq_zero_or_pos y with (h' | h') <;>\n    simp_all [Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (x y : \u2115) (hxy : x * y = 1) :\n  Nat.Coprime x y \u2228 x = y:= by\n  rw [Nat.mul_comm] at hxy\n  rw [Nat.mul_comm] at hxy\n  cases' Nat.eq_zero_or_pos x with hx hx <;> cases' Nat.eq_zero_or_pos y with hy hy\n  all_goals simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  all_goals omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (x y : \u2115) (hxy : x * y = 1) :\n  Nat.Coprime x y \u2228 x = y:= by\n  have : x = 1 \u2227 y = 1 := by\n    rw [eq_comm]\n    aesop\n  aesop"
  ]
 },
 {
  "old": "(a b c : \u211d) : a ^ 3 / b / c + b ^ 3 / c / a + c ^ 3 / a / b \u2265 (a ^ 2 + b ^ 2) / 2 / c + (b ^ 2 + c ^ 2) / 2 / a + (c ^ 2 + a ^ 2) / 2 / b := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a ^ 3 / b / c + b ^ 3 / c / a + c ^ 3 / a / b \u2265 (a ^ 2 + b ^ 2) / 2 / c + (b ^ 2 + c ^ 2) / 2 / a + (c ^ 2 + a ^ 2) / 2 / b:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n  a ^ 3 / b / c + b ^ 3 / c / a + c ^ 3 / a / b \u2265\n    (a ^ 2 + b ^ 2) / 2 / c + (b ^ 2 + c ^ 2) / 2 / a + (c ^ 2 + a ^ 2) / 2 / b:= by\n  have : 0 < a * b := by positivity\n  have : 0 < b * c := by positivity\n  have : 0 < c * a := by positivity\n  have h\u2080 : 0 < a * b * c := by positivity\n  have h\u2081 : 0 < a * b * c * (a * b * c) := by positivity\n  field_simp [h\u2080.ne', h\u2081.ne']\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    sq_nonneg (a ^ 2 - 2 * a * b + b ^ 2), sq_nonneg (b ^ 2 - 2 * b * c + c ^ 2),\n    sq_nonneg (c ^ 2 - 2 * c * a + a ^ 2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n  a ^ 3 / b / c + b ^ 3 / c / a + c ^ 3 / a / b \u2265\n    (a ^ 2 + b ^ 2) / 2 / c + (b ^ 2 + c ^ 2) / 2 / a + (c ^ 2 + a ^ 2) / 2 / b:= by\n  have h\u2081 : 0 < a * b := by positivity\n  have h\u2082 : 0 < b * c := by positivity\n  have h\u2083 : 0 < c * a := by positivity\n  have h\u2084 : 0 < a * b * c := by positivity\n  have h\u2085 : 0 < a * b * c * (a * b * c) := by positivity\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084, h\u2085]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    sq_nonneg (a ^ 2 - 2 * a * b + b ^ 2), sq_nonneg (b ^ 2 - 2 * b * c + c ^ 2),\n    sq_nonneg (c ^ 2 - 2 * c * a + a ^ 2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n  a ^ 3 / b / c + b ^ 3 / c / a + c ^ 3 / a / b \u2265\n    (a ^ 2 + b ^ 2) / 2 / c + (b ^ 2 + c ^ 2) / 2 / a + (c ^ 2 + a ^ 2) / 2 / b:= by\n  simp only [add_comm, add_left_comm, add_assoc, div_eq_mul_inv, mul_comm, mul_left_comm, mul_assoc]\n  have h\u2081 : 0 < a * b := by positivity\n  have h\u2082 : 0 < b * c := by positivity\n  have h\u2083 : 0 < c * a := by positivity\n  have h\u2084 : 0 < a * b * c := by positivity\n  have h\u2085 : 0 < a * b * c * (a * b * c) := by positivity\n  field_simp [h\u2081.ne', h\u2082.ne', h\u2083.ne', h\u2084.ne', h\u2085.ne']\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    sq_nonneg (a ^ 2 - 2 * a * b + b ^ 2), sq_nonneg (b ^ 2 - 2 * b * c + c ^ 2),\n    sq_nonneg (c ^ 2 - 2 * c * a + a ^ 2)]"
  ]
 },
 {
  "old": "(a b : \u2115) : Nat.lcm a b * Nat.gcd a b = a * b := by",
  "new": "(a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  by_cases h : Nat.Coprime a b\n  left\n  exact h\n  right\n  exact h"
  ]
 },
 {
  "old": ": sin (10 : \u211d) ^ 3 = 1 / 4 * (3 * sin 10 - sin 30) := by",
  "new": ": sin (3 * \u03b8) = 3 * sin \u03b8 - 4 * sin \u03b8 ^ 3 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_three_mul : sin (3 * \u03b8) = 3 * sin \u03b8 - 4 * sin \u03b8 ^ 3 := by\n  have : \u03b8 + 2 * \u03b8 = 3 * \u03b8 := by ring\n  rw [\u2190 this, sin_add \u03b8 (2 * \u03b8)]\n  simp only [cos_two_mul, sin_two_mul, cos_sq']\n  have : cos \u03b8 * (2 * sin \u03b8 * cos \u03b8) = 2 * sin \u03b8 * cos \u03b8 ^ 2 := by ring\n  rw [this, cos_sq']\n  ring",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_three_mul : sin (3 * \u03b8) = 3 * sin \u03b8 - 4 * sin \u03b8 ^ 3 := by\n  have h : \u03b8 + 2 * \u03b8 = 3 * \u03b8 := by ring\n  rw [\u2190 h, sin_add \u03b8 (2 * \u03b8)]\n  simp only [cos_two_mul, sin_two_mul, cos_sq']\n  have h\u2082 : cos \u03b8 * (2 * sin \u03b8 * cos \u03b8) = 2 * sin \u03b8 * cos \u03b8 ^ 2 := by ring\n  rw [h\u2082, cos_sq']\n  ring",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_three_mul : sin (3 * \u03b8) = 3 * sin \u03b8 - 4 * sin \u03b8 ^ 3 := by\n  rw [\u2190 Complex.ofReal_inj]\n  simp [Complex.sin_three_mul, Complex.sin_ofReal_re, Complex.mul_re, Complex.sub_re, Complex.ofReal_re]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_three_mul : sin (3 * \u03b8) = 3 * sin \u03b8 - 4 * sin \u03b8 ^ 3 := by\n  have h : \u03b8 + 2 * \u03b8 = 3 * \u03b8 := by ring\n  rw [\u2190 h, sin_add \u03b8 (2 * \u03b8)]\n  simp only [sin_two_mul, cos_two_mul, sin_sq, mul_neg, neg_mul, neg_neg, mul_one]\n  have h\u2081 : 0 \u2264 (sin \u03b8 + 1) ^ 2 := by positivity\n  have h\u2082 : 0 \u2264 (sin \u03b8 - 1) ^ 2 := by positivity\n  have h\u2083 : 0 \u2264 (sin \u03b8) ^ 2 := by positivity\n  nlinarith [sin_sq_add_cos_sq \u03b8]\n  <;> linarith"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (Real.sqrt (y * z^2 + x^2 * z + x * y^2) + Real.sqrt (x^2 * y + y^2 * z + z^2 * x)) / Real.sqrt (x * y * z) \u2265 2 * Real.sqrt (2 * x / (y + z) + 2 * y / (z + x) + 2 * z / (x + y) + 2 * (y + z) / (z + 2 * x + y) + 2 * (z + x) / (2 * y + z + x) + 2 * (x + y) / (2 * z + x + y) - 3) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (Real.sqrt (y * z^2 + x^2 * z + x * y^2) + Real.sqrt (x^2 * y + y^2 * z + z^2 * x)) / Real.sqrt (x * y * z) \u2265 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (Real.sqrt (y * z^2 + x^2 * z + x * y^2) + Real.sqrt (x^2 * y + y^2 * z + z^2 * x)) / Real.sqrt (x * y * z) \u2265   2:= by\n  have h\u2080 : 0 < x * y := mul_pos hx hy\n  have h\u2081 : 0 < y * z := mul_pos hy hz\n  have h\u2082 : 0 < z * x := mul_pos hz hx\n  have h\u2083 : 0 < x * y * z := by positivity\n  have h\u2084 : Real.sqrt (x * y * z) > 0 := Real.sqrt_pos.mpr h\u2083\n  have h\u2085 : Real.sqrt (y * z^2 + x^2 * z + x * y^2) \u2265 Real.sqrt (x * y * z) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith\n  have h\u2086 : Real.sqrt (x^2 * y + y^2 * z + z^2 * x) \u2265 Real.sqrt (x * y * z) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith\n  have h\u2087 : (Real.sqrt (y * z^2 + x^2 * z + x * y^2) + Real.sqrt (x^2 * y + y^2 * z + z^2 * x)) / Real.sqrt (x * y * z) \u2265 2 := by\n    rw [ge_iff_le]\n    rw [le_div_iff h\u2084]\n    nlinarith [Real.sq_sqrt (by positivity : 0 \u2264 x * y * z), h\u2085, h\u2086]\n  exact h\u2087",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (Real.sqrt (y * z^2 + x^2 * z + x * y^2) + Real.sqrt (x^2 * y + y^2 * z + z^2 * x)) / Real.sqrt (x * y * z) \u2265   2:= by\n  have h\u2081 : 0 < x * y := by positivity\n  have h\u2082 : 0 < y * z := by positivity\n  have h\u2083 : 0 < z * x := by positivity\n  have h\u2084 : Real.sqrt (x * y * z) > 0 := Real.sqrt_pos.mpr (by positivity)\n  have h\u2085 : Real.sqrt (y * z^2 + x^2 * z + x * y^2) \u2265 Real.sqrt (x * y * z) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  have h\u2086 : Real.sqrt (x^2 * y + y^2 * z + z^2 * x) \u2265 Real.sqrt (x * y * z) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  have h\u2087 : (Real.sqrt (y * z^2 + x^2 * z + x * y^2) + Real.sqrt (x^2 * y + y^2 * z + z^2 * x)) /\n      Real.sqrt (x * y * z) \u2265 2 := by\n    rw [ge_iff_le]\n    rw [le_div_iff h\u2084]\n    nlinarith [sq_sqrt (show (0 : \u211d) \u2264 x * y * z by positivity), h\u2085, h\u2086]\n  exact h\u2087",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (Real.sqrt (y * z^2 + x^2 * z + x * y^2) + Real.sqrt (x^2 * y + y^2 * z + z^2 * x)) / Real.sqrt (x * y * z) \u2265   2:= by\n  have h1 : 0 < x * y := by positivity\n  have h2 : 0 < y * z := by positivity\n  have h3 : 0 < z * x := by positivity\n  have h4 : Real.sqrt (x * y * z) > 0 := Real.sqrt_pos.mpr (by positivity)\n  have h5 : Real.sqrt (x^2 * y + y^2 * z + z^2 * x) \u2265 Real.sqrt (x * y * z) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith\n  have h6 : Real.sqrt (y * z^2 + x^2 * z + x * y^2) \u2265 Real.sqrt (x * y * z) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith\n  have h7 : (Real.sqrt (y * z^2 + x^2 * z + x * y^2) + Real.sqrt (x^2 * y + y^2 * z + z^2 * x)) / Real.sqrt (x * y * z) \u2265 2 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_sqrt (by positivity : 0 \u2264 x * y * z), sq_sqrt (by positivity : 0 \u2264 x^2 * y + y^2 * z + z^2 * x),\n      sq_sqrt (by positivity : 0 \u2264 y * z^2 + x^2 * z + x * y^2)]\n  exact h7",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (Real.sqrt (y * z^2 + x^2 * z + x * y^2) + Real.sqrt (x^2 * y + y^2 * z + z^2 * x)) / Real.sqrt (x * y * z) \u2265   2:= by\n  have h2 : 0 < Real.sqrt (x * y * z) := Real.sqrt_pos.mpr (by positivity)\n  have h3 : 0 \u2264 x * y := by positivity\n  have h4 : 0 \u2264 y * z := by positivity\n  have h5 : 0 \u2264 z * x := by positivity\n  have h6 : Real.sqrt (x * y * z) \u2260 0 := ne_of_gt h2\n  have h7 : Real.sqrt (y * z^2 + x^2 * z + x * y^2) \u2265 Real.sqrt (x * y * z) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith\n  have h8 : Real.sqrt (x^2 * y + y^2 * z + z^2 * x) \u2265 Real.sqrt (x * y * z) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith\n  have h9 : (Real.sqrt (y * z^2 + x^2 * z + x * y^2) + Real.sqrt (x^2 * y + y^2 * z + z^2 * x)) / Real.sqrt (x * y * z) \u2265 2:= by\n    rw [ge_iff_le]\n    rw [le_div_iff h2]\n    nlinarith\n  exact h9"
  ]
 },
 {
  "old": "(x a : \u211d) (h\u2080 : 0 < x \u2227 x \u2260 1) (h\u2081 : 0 < a) : 1 / (1 - x) + a * 4 / (a * x^2) \u2265 (a + 1) * (4^a / ((1 - x) * x^(2 * a)))^(1 / (a + 1)) := by",
  "new": "(x a : \u211d) (h\u2080 : 0 < x \u2227 x \u2260 1) (h\u2081 : 0 < a) : a * 4 / (a * x ^ 2) \u2265 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_20 (x a : \u211d) (h\u2080 : 0 < x \u2227 x \u2260 1) (h\u2081 : 0 < a) : \n       a * 4 / (a * x ^ 2) \u2265 0:= by\n  have h\u2082 : a * x ^ 2 > 0 := mul_pos h\u2081 (pow_pos (by linarith) 2)\n  apply div_nonneg (mul_nonneg (by linarith) (by linarith)) (by linarith)\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_20 (x a : \u211d) (h\u2080 : 0 < x \u2227 x \u2260 1) (h\u2081 : 0 < a) : \n       a * 4 / (a * x ^ 2) \u2265 0:= by\n  have ha : 0 < a := h\u2081\n  have hx : 0 < x := h\u2080.1\n  have h : 0 < a * x ^ 2 := by positivity\n  exact div_nonneg (by positivity) (by positivity)",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_20 (x a : \u211d) (h\u2080 : 0 < x \u2227 x \u2260 1) (h\u2081 : 0 < a) : \n       a * 4 / (a * x ^ 2) \u2265 0:= by\n  have hx : 0 < x := by linarith\n  have : a * 4 / (a * x ^ 2) \u2265 0 := by\n    apply div_nonneg\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_20 (x a : \u211d) (h\u2080 : 0 < x \u2227 x \u2260 1) (h\u2081 : 0 < a) : \n       a * 4 / (a * x ^ 2) \u2265 0:= by\n  have h\u2082 : 0 < a * x ^ 2 := mul_pos h\u2081 (pow_pos (by linarith) 2)\n  positivity"
  ]
 },
 {
  "old": "(a : \u211d) (p : \u211d) (hp : 2 \u2264 p) (ha : 0 \u2264 a \u2227 a \u2264 1) : (1 + a ^ (1 / p)) ^ p + (1 - a ^ (1 / p)) ^ p \u2264 2 * (1 + a ^ (1 / (p - 1))) ^ (p - 1) := by",
  "new": "(a b : \u211d) (ha : 0 \u2264 a \u2227 a \u2264 1) (hb : 0 \u2264 b \u2227 b \u2264 1) (hab : a + b \u2264 1) (n : \u2115) : (1 + a ^ (1 / (n + 1))) ^ (n + 1) + (1 + b ^ (1 / (n + 1))) ^ (n + 1) \u2265 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_aux10 (a b : \u211d) (ha : 0 \u2264 a \u2227 a \u2264 1) (hb : 0 \u2264 b \u2227 b \u2264 1)\n  (hab : a + b \u2264 1) (n : \u2115) :\n   (1 + a ^ (1 / (n + 1))) ^ (n + 1) + (1 + b ^ (1 / (n + 1))) ^ (n + 1) \u2265 2:= by\n  rcases ha with \u27e8ha_left, ha_right\u27e9\n  rcases hb with \u27e8hb_left, hb_right\u27e9\n  have h : (1 + a ^ (1 / (n + 1))) ^ (n + 1) \u2265 1 := by\n    have : 0 \u2264 a ^ (1 / (n + 1)) := by positivity\n    exact one_le_pow_of_one_le (by linarith) (n + 1)\n  have h' : (1 + b ^ (1 / (n + 1))) ^ (n + 1) \u2265 1 := by\n    have : 0 \u2264 b ^ (1 / (n + 1)) := by positivity\n    exact one_le_pow_of_one_le (by linarith) (n + 1)\n  linarith\n  <;> assumption\n  <;> try norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_aux10 (a b : \u211d) (ha : 0 \u2264 a \u2227 a \u2264 1) (hb : 0 \u2264 b \u2227 b \u2264 1)\n  (hab : a + b \u2264 1) (n : \u2115) :\n   (1 + a ^ (1 / (n + 1))) ^ (n + 1) + (1 + b ^ (1 / (n + 1))) ^ (n + 1) \u2265 2:= by\n  rcases ha with \u27e8ha_nonneg, ha_le_one\u27e9\n  rcases hb with \u27e8hb_nonneg, hb_le_one\u27e9\n  have h : a ^ (1 / (n + 1)) \u2265 0 := pow_nonneg ha_nonneg (1 / (n + 1))\n  have h\u2081 : a ^ (1 / (n + 1)) \u2264 1 := by\n    apply pow_le_one\n    \u00b7 linarith\n    \u00b7 linarith\n  have h\u2082 : b ^ (1 / (n + 1)) \u2265 0 := pow_nonneg hb_nonneg (1 / (n + 1))\n  have h\u2083 : b ^ (1 / (n + 1)) \u2264 1 := by\n    apply pow_le_one\n    \u00b7 linarith\n    \u00b7 linarith\n  have h\u2084 : (1 + a ^ (1 / (n + 1))) ^ (n + 1) \u2265 1 := by\n    apply one_le_pow_of_one_le\n    linarith\n  have h\u2085 : (1 + b ^ (1 / (n + 1))) ^ (n + 1) \u2265 1 := by\n    apply one_le_pow_of_one_le\n    linarith\n  linarith\n  <;> norm_num"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c > 0) : (a / (3 * a + 4 * b + 2 * c) ^ 2 + b / (2 * a + 3 * b + 4 * c) ^ 2 + c / (4 * a + 2 * b + 3 * c) ^ 2) \u2265 1 / (9 * (a + b + c)) := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : (a * b * c) * (1 / (a * b) + 1 / (b * c) + 1 / (c * a)) \u2264 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_of_exp_bound (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : (a * b * c) * (1 / (a * b) + 1 / (b * c) + 1 / (c * a)) \u2264 3:= by\n  have h\u2081 : 0 < a * b := by positivity\n  have h\u2082 : 0 < b * c := by positivity\n  have h\u2083 : 0 < c * a := by positivity\n  have h\u2084 : 0 < (a * b) * (b * c) := by positivity\n  have h\u2085 : 0 < (a * b) * (c * a) := by positivity\n  have h\u2086 : 0 < (b * c) * (c * a) := by positivity\n  have h\u2087 : 0 < a * b * b * c * c * a := by positivity\n  have h\u2088 : 0 < a * b * c := by positivity\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087, h\u2088]\n  rw [div_le_iff (by positivity)]\n  nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_of_exp_bound (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : (a * b * c) * (1 / (a * b) + 1 / (b * c) + 1 / (c * a)) \u2264 3:= by\n  have h\u2081 : 0 < a * b := by positivity\n  have h\u2082 : 0 < b * c := by positivity\n  have h\u2083 : 0 < c * a := by positivity\n  have h\u2084 : (a * b * c) * (1 / (a * b) + 1 / (b * c) + 1 / (c * a)) = c + a + b := by\n    field_simp\n    ring\n  rw [h\u2084]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_of_exp_bound (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : (a * b * c) * (1 / (a * b) + 1 / (b * c) + 1 / (c * a)) \u2264 3:= by\n  have hab : 0 < a * b := mul_pos ha hb\n  have hbc : 0 < b * c := mul_pos hb hc\n  have hac : 0 < c * a := mul_pos hc ha\n  have h\u2081 : 0 < a * b * c := by positivity\n  have h\u2082 : (a * b * c) * (1 / (a * b) + 1 / (b * c) + 1 / (c * a)) = a + b + c := by\n    field_simp\n    ring\n  rw [h\u2082, habc]\n  all_goals norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_of_exp_bound (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : (a * b * c) * (1 / (a * b) + 1 / (b * c) + 1 / (c * a)) \u2264 3:= by\n  have h\u2080 : 0 < a * b := mul_pos ha hb\n  have h\u2081 : 0 < b * c := mul_pos hb hc\n  have h\u2082 : 0 < c * a := mul_pos hc ha\n  have h\u2083 : 0 < a * b * c := by positivity\n  have h\u2084 : a * b * c * (1 / (a * b) + 1 / (b * c) + 1 / (c * a)) \u2264 3 := by\n    have h\u2085 : a * b * c * (1 / (a * b) + 1 / (b * c) + 1 / (c * a)) = a + b + c := by\n      field_simp\n      ring\n    rw [h\u2085, habc]\n    linarith\n  exact h\u2084"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x^3 + y^3 + z^3 + x * y * z)^2 \u2265 2 * (x^2 + y^2) * (x^2 + z^2) * (y^2 + z^2) := by",
  "new": "(x y : \u2115) (h : x ^ 2 + y ^ 2 \u2265 2 * x * y) : (Nat.Coprime x y) \u2228 \u00ac Nat.Coprime x y := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2265 2 * x * y) : (Nat.Coprime x y) \u2228 \u00ac Nat.Coprime x y := by\n  by_cases hc : Nat.Coprime x y\n  exact Or.inl hc\n  exact Or.inr hc",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2265 2 * x * y) : (Nat.Coprime x y) \u2228 \u00ac Nat.Coprime x y := by\n  by_cases hxy : Nat.Coprime x y\n  exact Or.inl hxy\n  exact Or.inr hxy\n  <;> try assumption\n  <;> try assumption\n  <;> try assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2265 2 * x * y) : (Nat.Coprime x y) \u2228 \u00ac Nat.Coprime x y := by\n  by_cases h1 : x.Coprime y <;> simp [h1]\n  <;>\n  rcases Nat.eq_zero_or_pos x with (rfl | hx) <;>\n    rcases Nat.eq_zero_or_pos y with (rfl | hy) <;>\n    simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;>\n  omega\n  <;>\n  linarith\n  <;>\n  linarith\n  <;>\n  linarith\n  <;>\n  linarith\n  <;>\n  linarith\n  <;>\n  linarith\n  <;>\n  linarith\n  <;>\n  linarith\n  <;>\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2265 2 * x * y) : (Nat.Coprime x y) \u2228 \u00ac Nat.Coprime x y := by\n  by_cases hx : x = 0 <;> by_cases hy : y = 0 <;> simp [hx, hy, Nat.coprime_iff_gcd_eq_one, Nat.gcd_mul_left,\n    Nat.gcd_mul_right, Nat.gcd_comm]\n  all_goals\n    apply or_iff_not_imp_left.mpr\n    intro h\n    omega"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 1 \u2264 a) (hb : 1 \u2264 b) (hc : 1 \u2264 c) : 1 / 2 * (a + b + c + 1 / a + 1 / b + 1 / c) \u2265 Real.sqrt (3 * (a + b + c - 1 / a - 1 / b - 1 / c)) := by",
  "new": "(a b c : \u211d) (ha : 1 \u2264 a) (hb : 1 \u2264 b) (hc : 1 \u2264 c) : a * b * c * (a + b + c + 1 / a + 1 / b + 1 / c) \u2265 a + b + c:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 1 \u2264 a) (hb : 1 \u2264 b) (hc : 1 \u2264 c) :\n     a * b * c * (a + b + c + 1 / a + 1 / b + 1 / c) \u2265 a + b + c:= by\n  have : 0 \u2264 a * b := by positivity\n  have : 0 \u2264 b * c := by positivity\n  have : 0 \u2264 a * b * c := by positivity\n  have h\u2081 : 0 \u2264 a + b + c := by positivity\n  have h\u2082 : 0 \u2264 1 / a + 1 / b + 1 / c := by positivity\n  have : 0 \u2264 a * b * c * (1 / a + 1 / b + 1 / c) := by positivity\n  nlinarith [mul_le_mul_of_nonneg_right ha (by positivity : 0 \u2264 b * c),\n    mul_le_mul_of_nonneg_right hb (by positivity : 0 \u2264 a * c),\n    mul_le_mul_of_nonneg_right hc (by positivity : 0 \u2264 a * b)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (1 / (a + b) + 2 / (b + c) + 3 / (c + a)) * (a + b + c) \u2265 3 + Real.sqrt 2 + Real.sqrt 3 + Real.sqrt 6 := by",
  "new": ": Real.sqrt 2 \u2264 2 / \u221a3 + \u221a6:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2264 2 / \u221a3 + \u221a6:= by\n  rw [add_comm]\n  have h : 0 < \u221a3 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2082 : 0 < \u221a6 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2083 : 0 < Real.sqrt 2 := Real.sqrt_pos.mpr (by norm_num)\n  rw [\u2190 sub_nonneg]\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 2 by norm_num),\n    sq_sqrt (show (0 : \u211d) \u2264 3 by norm_num),\n    sq_sqrt (show (0 : \u211d) \u2264 6 by norm_num),\n    mul_self_nonneg (Real.sqrt 2 - 1),\n    mul_self_nonneg (Real.sqrt 3 - Real.sqrt 6)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2264 2 / \u221a3 + \u221a6:= by\n  have h\u2080 : 0 < \u221a3 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2081 : 0 < \u221a6 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2082 : 0 < \u221a2 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2083 : 0 < \u221a3 * \u221a6 := mul_pos h\u2080 h\u2081\n  have h\u2084 : 0 < \u221a3 * \u221a6 * \u221a2 := mul_pos h\u2083 h\u2082\n  rw [mul_comm] at h\u2084\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  \u00b7 positivity\n  \u00b7 norm_num\n    apply le_of_sub_nonneg\n    field_simp\n    ring_nf\n    norm_num\n    ring_nf\n    norm_num\n    positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2264 2 / \u221a3 + \u221a6:= by\n  have h\u2080 : 0 \u2264 \u221a6 := Real.sqrt_nonneg 6\n  have h\u2081 : 0 \u2264 \u221a3 := Real.sqrt_nonneg 3\n  have h\u2082 : 0 \u2264 \u221a2 := Real.sqrt_nonneg 2\n  have h\u2083 : 0 \u2264 2 / \u221a3 := by positivity\n  have h\u2084 : 0 \u2264 2 / \u221a3 + \u221a6 := by positivity\n  have h\u2085 : (Real.sqrt 2) ^ 2 = 2 := Real.sq_sqrt (by positivity)\n  have h\u2086 : (2 / \u221a3) ^ 2 = 4 / 3 := by\n    field_simp\n    <;> ring_nf\n    <;> norm_num\n  have h\u2087 : (\u221a6) ^ 2 = 6 := Real.sq_sqrt (by positivity)\n  have h\u2088 : 2 / \u221a3 + \u221a6 \u2265 Real.sqrt 2 := by\n    nlinarith [sq_sqrt (show 0 \u2264 2 by norm_num),\n      sq_sqrt (show 0 \u2264 6 by norm_num),\n      sq_sqrt (show 0 \u2264 3 by norm_num),\n      sq_nonneg (2 / \u221a3 - \u221a6)]\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2264 2 / \u221a3 + \u221a6:= by\n  have h\u2080 : 0 < Real.sqrt 2 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2081 : 0 < \u221a3 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2082 : 0 < \u221a6 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2083 : 0 < Real.sqrt 2 * \u221a3 := by positivity\n  have h\u2084 : 0 < Real.sqrt 2 * \u221a6 := by positivity\n  have h\u2085 : 0 < \u221a3 * \u221a6 := by positivity\n  field_simp [h\u2080, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 2 by norm_num),\n    sq_sqrt (show (0 : \u211d) \u2264 3 by norm_num),\n    sq_sqrt (show (0 : \u211d) \u2264 6 by norm_num),\n    sq_nonneg (Real.sqrt 2 - Real.sqrt 3),\n    sq_nonneg (Real.sqrt 2 - Real.sqrt 6)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a = 1 + 2 * Real.cos (\u03c0 / 9)) (hb : b = 1 + 2 * Real.cos (2 * \u03c0 / 9)) (hc : c = -1) : a ^ 4 + b ^ 4 + c ^ 4 + a * b ^ 3 + b * c ^ 3 + c * a ^ 3 \u2265 2 * (a ^ 3 * b + b ^ 3 * c + c ^ 3 * a) := by",
  "new": ": Real.sqrt (Real.sqrt (1 + Real.sqrt 2) + Real.sqrt (2 + Real.sqrt 2)) \u2264 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + Real.sqrt 2) + Real.sqrt (2 + Real.sqrt 2)) \u2264 2:= by\n  have h\u2080 : 0 \u2264 Real.sqrt 2 := Real.sqrt_nonneg 2\n  have h\u2081 : Real.sqrt 2 ^ 2 = 2 := Real.sq_sqrt (by positivity)\n  have h\u2082 : Real.sqrt (1 + Real.sqrt 2) \u2264 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith\n  have h\u2083 : Real.sqrt (2 + Real.sqrt 2) \u2264 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  \u00b7 positivity\n  \u00b7 nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + Real.sqrt 2) + Real.sqrt (2 + Real.sqrt 2)) \u2264 2:= by\n  have : Real.sqrt (1 + Real.sqrt 2) \u2264 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [Real.sqrt_nonneg 2, Real.sq_sqrt (show 0 \u2264 2 from by positivity)]\n  have : Real.sqrt (2 + Real.sqrt 2) \u2264 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [Real.sqrt_nonneg 2, Real.sq_sqrt (show 0 \u2264 2 from by positivity)]\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  \u00b7 positivity\n  \u00b7 nlinarith [Real.sqrt_nonneg (Real.sqrt (1 + Real.sqrt 2)), Real.sq_sqrt (show 0 \u2264 Real.sqrt (1 + Real.sqrt 2) from by positivity),\n      Real.sqrt_nonneg (Real.sqrt (2 + Real.sqrt 2)), Real.sq_sqrt (show 0 \u2264 Real.sqrt (2 + Real.sqrt 2) from by positivity)]\n  <;> linarith\n  <;> norm_num\n  <;> apply le_of_pow_le_pow_left two_ne_zero (by positivity)\n  <;> nlinarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + Real.sqrt 2) + Real.sqrt (2 + Real.sqrt 2)) \u2264 2:= by\n  have h\u2080 : Real.sqrt (1 + Real.sqrt 2) \u2264 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [Real.sqrt_nonneg 2, Real.sq_sqrt (show 0 \u2264 2 by norm_num)]\n  have h\u2081 : Real.sqrt (2 + Real.sqrt 2) \u2264 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [Real.sqrt_nonneg 2, Real.sq_sqrt (show 0 \u2264 2 by norm_num)]\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  \u00b7 positivity\n  \u00b7 nlinarith [Real.sqrt_nonneg (1 + Real.sqrt 2), Real.sq_sqrt (show 0 \u2264 1 + Real.sqrt 2 by positivity),\n      Real.sqrt_nonneg (2 + Real.sqrt 2), Real.sq_sqrt (show 0 \u2264 2 + Real.sqrt 2 by positivity)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 2) : (1 / Real.sqrt (3 * (a + b)) + 1 / Real.sqrt (3 * (b + c)) + 1 / Real.sqrt (3 * (c + a))) \u2265 2 / (a ^ 2 + b ^ 2 + c ^ 2) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 2) : (x * y) * (y * z) * (z * x) \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 2) :\n       (x * y) * (y * z) * (z * x) \u2264 1:= by\n  have h\u2081 : 0 < x * y := by positivity\n  have h\u2082 : 0 < y * z := by positivity\n  have h\u2083 : 0 < z * x := by positivity\n  have h\u2084 : 0 < x * y * z := by positivity\n  have h\u2085 : 0 < x * y * z * x := by positivity\n  have h\u2086 : 0 < x * y * z * x * y := by positivity\n  have h\u2087 : 0 < x * y * z * x * y * z := by positivity\n  nlinarith [mul_self_nonneg (x - 1), mul_self_nonneg (y - 1), mul_self_nonneg (z - 1)]\n  <;> linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 2) :\n       (x * y) * (y * z) * (z * x) \u2264 1:= by\n  have : x + y + z = 2 := h\n  have h\u2081 : x * y \u2264 1 := by\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x + y), h]\n  have h\u2082 : y * z \u2264 1 := by\n    nlinarith [sq_nonneg (y - z), sq_nonneg (y + z), h]\n  have h\u2083 : z * x \u2264 1 := by\n    nlinarith [sq_nonneg (z - x), sq_nonneg (z + x), h]\n  calc\n    (x * y) * (y * z) * (z * x) \u2264 1 * 1 * 1 := by gcongr <;> assumption\n    _ = 1 := by norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 2) :\n       (x * y) * (y * z) * (z * x) \u2264 1:= by\n  have h\u2080 : (x + y + z) ^ 2 = 4 := by\n    nlinarith\n  have h\u2081 : 0 < x * y := by\n    nlinarith\n  have h\u2082 : 0 < y * z := by\n    nlinarith\n  have h\u2083 : 0 < z * x := by\n    nlinarith\n  have h\u2084 : 0 < (x * y) * (y * z) := by\n    nlinarith\n  have h\u2085 : 0 < (y * z) * (z * x) := by\n    nlinarith\n  have h\u2086 : 0 < (x * y) * (y * z) * (z * x) := by\n    nlinarith\n  nlinarith [mul_self_nonneg (x - 1), mul_self_nonneg (y - 1),\n    mul_self_nonneg (z - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 2) :\n       (x * y) * (y * z) * (z * x) \u2264 1:= by\n  have h\u2080 : x + y + z = 2 := h\n  have h\u2081 : x * y \u2264 1 := by\n    nlinarith [sq_nonneg (x - y), h\u2080]\n  have h\u2082 : y * z \u2264 1 := by\n    nlinarith [sq_nonneg (y - z), h\u2080]\n  have h\u2083 : z * x \u2264 1 := by\n    nlinarith [sq_nonneg (z - x), h\u2080]\n  calc\n    (x * y) * (y * z) * (z * x) \u2264 1 * 1 * 1 := by gcongr <;> assumption\n    _ = 1 := by norm_num"
  ]
 },
 {
  "old": "(a b c : \u211d) (habc : a + b + c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0) (h_ineq : a * b + b * c + c * a > 0) (k : \u211d) (h_k : 3 \u2264 k) : (b + c) ^ k / a + (c + a) ^ k / b + (a + b) ^ k / c \u2265 (2 ^ k / 3 ^ (k - 3)) * (a * b + b * c + c * a) := by",
  "new": "(a b c : \u211d) (habc : a + b + c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0) (h_ineq : a * b + b * c + c * a > 0) : (b + c) ^ 3 / a + (c + a) ^ 3 / b + (a + b) ^ 3 / c \u2265 (2 ^ 3 / 3 ^ (3 - 3)) * (a * b + b * c + c * a) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (habc : a + b + c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0) (h_ineq : a * b + b * c + c * a > 0) :\n      (b + c) ^ 3 / a + (c + a) ^ 3 / b + (a + b) ^ 3 / c \u2265 (2 ^ 3 / 3 ^ (3 - 3)) * (a * b + b * c + c * a)  := by\n  norm_num\n  have h\u2081 : 0 < a := by linarith\n  have h\u2082 : 0 < b := by linarith\n  have h\u2083 : 0 < c := by linarith\n  have h\u2084 : 0 < a * b := by positivity\n  have h\u2085 : 0 < b * c := by positivity\n  have h\u2086 : 0 < c * a := by positivity\n  have h\u2087 : 0 < a * b + b * c + c * a := by positivity\n  have h\u2088 : 0 < a * b * c := by positivity\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087, h\u2088]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (habc : a + b + c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0) (h_ineq : a * b + b * c + c * a > 0) :\n      (b + c) ^ 3 / a + (c + a) ^ 3 / b + (a + b) ^ 3 / c \u2265 (2 ^ 3 / 3 ^ (3 - 3)) * (a * b + b * c + c * a)  := by\n  rcases h with \u27e8ha, hb, hc\u27e9\n  field_simp [ha, hb, hc, h_ineq]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le,\n    mul_nonneg (sq_nonneg (a - b)) ha.le, mul_nonneg (sq_nonneg (a - c)) ha.le, mul_nonneg (sq_nonneg (b - c)) ha.le,\n    mul_nonneg (sq_nonneg (a - b)) hb.le, mul_nonneg (sq_nonneg (a - c)) hb.le, mul_nonneg (sq_nonneg (b - c)) hb.le,\n    mul_nonneg (sq_nonneg (a - b)) hc.le, mul_nonneg (sq_nonneg (a - c)) hc.le, mul_nonneg (sq_nonneg (b - c)) hc.le]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (habc : a * b * c = 1) : (1 / Real.sqrt (2 * a + 2 * a * b + 1) + 1 / Real.sqrt (2 * b + 2 * b * c + 1) + 1 / Real.sqrt (2 * c + 2 * c * a + 1)) \u2265 1 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) : 1 / Real.sqrt (2 * x + 2 * x * y + 1) + 1 / Real.sqrt (2 * y + 2 * y * z + 1) + 1 / Real.sqrt (2 * z + 2 * z * x + 1) \u2265 1 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) :\n      1 / Real.sqrt (2 * x + 2 * x * y + 1) + 1 / Real.sqrt (2 * y + 2 * y * z + 1) +\n    1 / Real.sqrt (2 * z + 2 * z * x + 1) \u2265 1 := by\n  have : 0 < x * y := mul_pos hx hy\n  have : 0 < y * z := mul_pos hy hz\n  have : 0 < z * x := mul_pos hz hx\n  have h\u2080 : Real.sqrt (2 * x + 2 * x * y + 1) \u2264 1 + x + x * y := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith\n  have h\u2081 : Real.sqrt (2 * y + 2 * y * z + 1) \u2264 1 + y + y * z := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith\n  have h\u2082 : Real.sqrt (2 * z + 2 * z * x + 1) \u2264 1 + z + z * x := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith\n  calc\n    1 / Real.sqrt (2 * x + 2 * x * y + 1) + 1 / Real.sqrt (2 * y + 2 * y * z + 1) +\n        1 / Real.sqrt (2 * z + 2 * z * x + 1) \u2265\n      1 / (1 + x + x * y) + 1 / (1 + y + y * z) + 1 / (1 + z + z * x) := by\n      gcongr <;> nlinarith\n    _ \u2265 1 := by\n      field_simp [h, add_comm]\n      rw [le_div_iff (by positivity)]\n      nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) :\n      1 / Real.sqrt (2 * x + 2 * x * y + 1) + 1 / Real.sqrt (2 * y + 2 * y * z + 1) +\n    1 / Real.sqrt (2 * z + 2 * z * x + 1) \u2265 1 := by\n  have h1 : 0 < x * y := by positivity\n  have h2 : 0 < y * z := by positivity\n  have h3 : 0 < z * x := by positivity\n  have h4 : Real.sqrt (2 * x + 2 * x * y + 1) \u2264 1 + x + x * y := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith\n  have h5 : Real.sqrt (2 * y + 2 * y * z + 1) \u2264 1 + y + y * z := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith\n  have h6 : Real.sqrt (2 * z + 2 * z * x + 1) \u2264 1 + z + z * x := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith\n  calc\n      1 / Real.sqrt (2 * x + 2 * x * y + 1) + 1 / Real.sqrt (2 * y + 2 * y * z + 1) +\n          1 / Real.sqrt (2 * z + 2 * z * x + 1) \u2265\n        1 / (1 + x + x * y) + 1 / (1 + y + y * z) + 1 / (1 + z + z * x) := by\n        gcongr <;> nlinarith\n      _ \u2265 1 := by\n        field_simp\n        rw [le_div_iff (by positivity)]\n        nlinarith [mul_self_nonneg (x - 1), mul_self_nonneg (y - 1), mul_self_nonneg (z - 1),\n          mul_self_nonneg (x * y - 1), mul_self_nonneg (y * z - 1), mul_self_nonneg (z * x - 1),\n          mul_self_nonneg (x * y * z - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) :\n      1 / Real.sqrt (2 * x + 2 * x * y + 1) + 1 / Real.sqrt (2 * y + 2 * y * z + 1) +\n    1 / Real.sqrt (2 * z + 2 * z * x + 1) \u2265 1 := by\n  have : 0 < x * y := mul_pos hx hy\n  have : 0 < y * z := mul_pos hy hz\n  have : 0 < z * x := mul_pos hz hx\n  have h\u2081 : Real.sqrt (2 * x + 2 * x * y + 1) \u2264 1 + x + x * y := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith\n  have h\u2082 : Real.sqrt (2 * y + 2 * y * z + 1) \u2264 1 + y + y * z := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith\n  have h\u2083 : Real.sqrt (2 * z + 2 * z * x + 1) \u2264 1 + z + z * x := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith\n  calc\n    1 / Real.sqrt (2 * x + 2 * x * y + 1) + 1 / Real.sqrt (2 * y + 2 * y * z + 1) +\n        1 / Real.sqrt (2 * z + 2 * z * x + 1) \u2265\n      1 / (1 + x + x * y) + 1 / (1 + y + y * z) + 1 / (1 + z + z * x) := by\n      gcongr <;> nlinarith\n    _ \u2265 1 := by\n      field_simp\n      rw [le_div_iff, mul_comm]\n      nlinarith [sq_nonneg (x * y - 1), sq_nonneg (y * z - 1), sq_nonneg (z * x - 1)]\n      positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) :\n      1 / Real.sqrt (2 * x + 2 * x * y + 1) + 1 / Real.sqrt (2 * y + 2 * y * z + 1) +\n    1 / Real.sqrt (2 * z + 2 * z * x + 1) \u2265 1 := by\n  have : 0 < x * y := mul_pos hx hy\n  have : 0 < y * z := mul_pos hy hz\n  have : 0 < z * x := mul_pos hz hx\n  have h\u2080 : Real.sqrt (2 * x + 2 * x * y + 1) \u2264 1 + x + x * y := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith\n  have h\u2081 : Real.sqrt (2 * y + 2 * y * z + 1) \u2264 1 + y + y * z := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith\n  have h\u2082 : Real.sqrt (2 * z + 2 * z * x + 1) \u2264 1 + z + z * x := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith\n  calc\n    1 / Real.sqrt (2 * x + 2 * x * y + 1) + 1 / Real.sqrt (2 * y + 2 * y * z + 1) +\n        1 / Real.sqrt (2 * z + 2 * z * x + 1) \u2265\n      1 / (1 + x + x * y) + 1 / (1 + y + y * z) + 1 / (1 + z + z * x) := by\n      gcongr <;> nlinarith\n    _ \u2265 1 := by\n      have : 0 < x * y * z := by positivity\n      have : 0 < x * y * z * (x * y + y * z + z * x) := by positivity\n      field_simp [h]\n      rw [le_div_iff (by positivity)]\n      nlinarith [sq_nonneg (x - 1), sq_nonneg (y - 1), sq_nonneg (z - 1),\n        mul_self_nonneg (x * y - 1), mul_self_nonneg (y * z - 1),\n        mul_self_nonneg (z * x - 1)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (habc : a * b * c = 1) : a / (b + c + 1) + b / (a + c + 1) + c / (a + b + 1) \u2265 1 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) : x / (y + z + 1) + y / (z + x + 1) + z / (x + y + 1) \u2265 1 - 3 * (2 * (x + y + z) - 1) * (2 * (x * y + y * z + z * x) - 1):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h : x * y * z = 1) :\n    x / (y + z + 1) + y / (z + x + 1) + z / (x + y + 1) \u2265 1 - 3 * (2 * (x + y + z) - 1) * (2 * (x * y + y * z + z * x) - 1):= by\n  rw [add_assoc]\n  have h\u2081 : 0 < x * y := mul_pos hx hy\n  have h\u2082 : 0 < y * z := mul_pos hy hz\n  have h\u2083 : 0 < z * x := mul_pos hz hx\n  have h\u2084 : 0 \u2264 x / (y + z + 1) := by positivity\n  have h\u2085 : 0 \u2264 y / (z + x + 1) := by positivity\n  have h\u2086 : 0 \u2264 z / (x + y + 1) := by positivity\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (y - 1), sq_nonneg (z - 1), sq_nonneg (x * y - 1), sq_nonneg (y * z - 1), sq_nonneg (z * x - 1)]"
  ]
 },
 {
  "old": "(n : \u2124) (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hn : n \u2265 4) : (a * b ^ (n - 1) / c ^ n + b * c ^ (n - 1) / a ^ n + c * a ^ (n - 1) / b ^ n) \u2265 a / b + b / c + c / a := by",
  "new": ": \u2200 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1), \u2211 k in Finset.Icc 1 3, (1 / a + 1 / b + 1 / c) \u2265 9 / (a + b + c):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1),\n   \u2211 k in Finset.Icc 1 3, (1 / a + 1 / b + 1 / c) \u2265 9 / (a + b + c):= by\n  rintro a b c (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1)\n  simp [habc]\n  have : a + b + c > 0 := by linarith\n  have h\u2080 : 0 < a * b := by nlinarith\n  have h\u2081 : 0 < b * c := by nlinarith\n  have h\u2082 : 0 < c * a := by nlinarith\n  field_simp [h\u2080, h\u2081, h\u2082]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), sq_nonneg (a * b - 1),\n    sq_nonneg (b * c - 1), sq_nonneg (c * a - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1),\n   \u2211 k in Finset.Icc 1 3, (1 / a + 1 / b + 1 / c) \u2265 9 / (a + b + c):= by\n  intro a b c ha hb hc habc\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n    mul_self_nonneg (a + b + c), mul_self_nonneg (a + b - c), mul_self_nonneg (a + c - b),\n    mul_self_nonneg (b + c - a)]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1),\n   \u2211 k in Finset.Icc 1 3, (1 / a + 1 / b + 1 / c) \u2265 9 / (a + b + c):= by\n  rintro a b c ha hb hc habc\n  simp [Finset.sum_Icc_succ_top, Nat.lt_succ_iff, add_assoc, add_comm, add_left_comm]\n  field_simp [habc]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c), mul_pos ha hb, mul_pos ha hc,\n    mul_pos hb hc]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1),\n   \u2211 k in Finset.Icc 1 3, (1 / a + 1 / b + 1 / c) \u2265 9 / (a + b + c):= by\n  intro a b c ha hb hc habc\n  ring_nf\n  cases' le_total a b with hab hab <;> cases' le_total a c with hac hac <;>\n    cases' le_total b c with hbc hbc <;> simp_all [hab, hac, hbc, le_of_lt, mul_comm, mul_left_comm,\n      mul_assoc]\n  all_goals\n    apply le_of_sub_nonneg\n    field_simp\n    ring_nf\n    positivity"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : (a + b) / Real.sqrt (a ^ 2 + 1) + (b + c) / Real.sqrt (b ^ 2 + 1) + (c + a) / Real.sqrt (c ^ 2 + 1) \u2265 3 * Real.sqrt 2 := by",
  "new": ": Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) \u2264 3 * Real.sqrt (2 * (Real.sqrt 2 + 1)):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) \u2264\n      3 * Real.sqrt (2 * (Real.sqrt 2 + 1)):= by\n  have h\u2080 : 0 \u2264 Real.sqrt 2 := by positivity\n  have h\u2081 : 0 \u2264 Real.sqrt (Real.sqrt 2 + 1) := by positivity\n  have h\u2082 : 0 \u2264 Real.sqrt 2 + 1 := by positivity\n  nlinarith [sq_sqrt (show 0 \u2264 Real.sqrt 2 + 1 from h\u2082),\n    Real.sqrt_nonneg (2 * (Real.sqrt 2 + 1)),\n    sq_sqrt (show 0 \u2264 2 * (Real.sqrt 2 + 1) from by positivity),\n    sq_sqrt (show 0 \u2264 Real.sqrt 2 from h\u2080),\n    sq_sqrt (show 0 \u2264 Real.sqrt 2 + 1 from h\u2082)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) \u2264\n      3 * Real.sqrt (2 * (Real.sqrt 2 + 1)):= by\n  have h\u2081 : 0 \u2264 Real.sqrt 2 := Real.sqrt_nonneg 2\n  have h\u2082 : 0 \u2264 Real.sqrt 2 + 1 := by linarith\n  have h\u2083 : 0 \u2264 Real.sqrt (Real.sqrt 2 + 1) := Real.sqrt_nonneg (Real.sqrt 2 + 1)\n  have h\u2084 : 0 \u2264 3 := by linarith\n  nlinarith [sq_sqrt (by positivity : 0 \u2264 (Real.sqrt 2 + 1)),\n    sq_sqrt (by positivity : 0 \u2264 (2 * (Real.sqrt 2 + 1))),\n    sq_sqrt (by positivity : 0 \u2264 (3 * Real.sqrt (2 * (Real.sqrt 2 + 1)))),\n    sq_nonneg (Real.sqrt 2 + 1 - 2 * Real.sqrt (2 * (Real.sqrt 2 + 1)))]\n  <;> norm_num\n  <;> norm_num\n  <;> norm_num\n  <;> norm_num\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) \u2264\n      3 * Real.sqrt (2 * (Real.sqrt 2 + 1)):= by\n  have h\u2080 : 0 \u2264 Real.sqrt 2 := Real.sqrt_nonneg 2\n  have h\u2081 : 0 \u2264 Real.sqrt 2 + 1 := by linarith\n  have h\u2082 : 0 \u2264 Real.sqrt (2 * (Real.sqrt 2 + 1)) := by\n    apply Real.sqrt_nonneg\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 2 * (Real.sqrt 2 + 1) by linarith),\n    sq_sqrt (show (0 : \u211d) \u2264 Real.sqrt 2 + 1 by linarith),\n    sq_sqrt (show (0 : \u211d) \u2264 2 by linarith),\n    sq_nonneg (Real.sqrt (Real.sqrt 2 + 1) - Real.sqrt (2 * (Real.sqrt 2 + 1)))]\n  <;> norm_num"
  ]
 },
 {
  "old": "(n : \u2115) : 0 < n \u2192 \u03c6 n = n * \u220f p in n.factors.toFinset, (1 - 1 / p) := by",
  "new": "(n : \u2115) : \u2200 x \u2208 n.factors.toFinset, \u2200 y \u2208 n.factors.toFinset, x \u2260 y \u2192 Nat.Coprime x y := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_factors_prod_coprime (n : \u2115) : \u2200 x \u2208 n.factors.toFinset, \u2200 y \u2208 n.factors.toFinset, x \u2260 y \u2192 Nat.Coprime x y  := by\n  intro x hx y hy hxy\n  have h\u2080 : Nat.Coprime x y := by\n    rw [Nat.coprime_iff_gcd_eq_one]\n    have h\u2081 : (x.gcd y) \u2223 x := Nat.gcd_dvd_left x y\n    have h\u2082 : (x.gcd y) \u2223 y := Nat.gcd_dvd_right x y\n    have h\u2083 : (x.gcd y) \u2223 (x.gcd y) := dvd_rfl\n    rw [Nat.dvd_prime (Nat.prime_of_mem_factors (List.mem_toFinset.mp hx))] at h\u2081\n    rw [Nat.dvd_prime (Nat.prime_of_mem_factors (List.mem_toFinset.mp hy))] at h\u2082\n    aesop\n  exact h\u2080\n  <;> try norm_num <;> try aesop\n  <;> simp_all\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_factors_prod_coprime (n : \u2115) : \u2200 x \u2208 n.factors.toFinset, \u2200 y \u2208 n.factors.toFinset, x \u2260 y \u2192 Nat.Coprime x y  := by\n  intro x hx y hy hxy\n  have h1 : Nat.Prime x := by\n    have h2 : x \u2208 n.factors := by\n      simp_all [List.mem_toFinset]\n    exact Nat.prime_of_mem_factors h2\n  have h2 : Nat.Prime y := by\n    have h2 : y \u2208 n.factors := by\n      simp_all [List.mem_toFinset]\n    exact Nat.prime_of_mem_factors h2\n  exact Nat.coprime_primes h1 h2 |>.mpr (by\n    intro h\n    simp_all [h])"
  ]
 },
 {
  "old": "(a b c : \u211d) (hab : a > 0 \u2227 b > 0 \u2227 c > 0) (habc : a + b + c = a * b + b * c + c * a) : a / b^2 + b / c^2 + c / a^2 \u2265 a + b + c := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192 a * b + b * c + c * a \u2264 3 \u2192 a / b^2 + b / c^2 + c / a^2 \u2265 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192 a * b + b * c + c * a \u2264 3 \u2192\n    a / b^2 + b / c^2 + c / a^2 \u2265 3:= by\n  rintro a b c \u27e8h1, h2, h3, h4\u27e9 h5\n  have h6 : 0 < b * c := by positivity\n  have h7 : 0 < a * c := by positivity\n  have h8 : 0 < a * b := by positivity\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b + b * c + c * a),\n    mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a),\n    mul_self_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192 a * b + b * c + c * a \u2264 3 \u2192\n    a / b^2 + b / c^2 + c / a^2 \u2265 3:= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9 hab\n  have h\u2080 : 0 < a * b := mul_pos ha hb\n  have h\u2081 : 0 < b * c := mul_pos hb hc\n  have h\u2082 : 0 < c * a := mul_pos hc ha\n  field_simp [habc]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b + b * c + c * a), mul_self_nonneg (a * b - b * c),\n    mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b)]\n  <;> assumption\n  <;> assumption\n  <;> assumption"
  ]
 },
 {
  "old": "(f : \u211d \u2192 \u211d):(\u2200 x y, f (x * f (x + y) + y ^ 2) = y * f (x + y) + x * f x) \u2194 \u2200 x, f x = 0 \u2228 \u2200 x, f x = x := by",
  "new": "(f : \u211d \u2192 \u211d) (hf: f (1/3) = 1) (h\u2081 : \u2200 x y, f (x * f (x + y) + y ^ 2) = y * f (x + y) + x * f x): \u2200 x, f x = 0 \u2228 \u2200 x, f x = x := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem h7716 (f : \u211d \u2192 \u211d) (hf: f (1/3) = 1) (h\u2081 : \u2200 x y, f (x * f (x + y) + y ^ 2) = y * f (x + y) + x * f x): \u2200 x, f x = 0 \u2228 \u2200 x, f x = x := by\n  have h\u2082 := h\u2081 (1 / 3) 0\n  have h\u2083 := h\u2081 0 0\n  have h\u2084 := h\u2081 0 1\n  have h\u2085 := h\u2081 1 0\n  have h\u2086 := h\u2081 1 1\n  have h\u2087 := h\u2081 (-1) 0\n  have h\u2088 := h\u2081 (-1) 1\n  norm_num at *\n  <;> simp_all\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem h7716 (f : \u211d \u2192 \u211d) (hf: f (1/3) = 1) (h\u2081 : \u2200 x y, f (x * f (x + y) + y ^ 2) = y * f (x + y) + x * f x): \u2200 x, f x = 0 \u2228 \u2200 x, f x = x := by\n  have h\u2082 := h\u2081 0 0\n  have h\u2083 := h\u2081 0 (1 / 3)\n  have h\u2084 := h\u2081 (1 / 3) 0\n  have h\u2085 := h\u2081 (1 / 3) (1 / 3)\n  norm_num at h\u2082 h\u2083 h\u2084 h\u2085 <;> simp_all"
  ]
 },
 {
  "old": "(n : \u2115) (x : \u2115 \u2192 \u211d) (hx : \u2200 i, 0 < x i) : (2 * Real.sqrt n - 1) / (5 * Real.sqrt n - 1) \u2264 \u2211 i in Finset.range n, (2 + x i) / (5 + x i) \u2227 \u2211 i in Finset.range n, (2 + x i) / (5 + x i) \u2264 (2 * Real.sqrt n + 1) / (5 * Real.sqrt n + 1) := by",
  "new": "(n : \u2115) (x : \u2115 \u2192 \u211d) (hx : \u2200 i, 0 < x i) : \u2211 k in Finset.range n, (2 * x k + 1) / (5 * x k + 3) \u2264 (2 * n + 1) / 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (n : \u2115) (x : \u2115 \u2192 \u211d) (hx : \u2200 i, 0 < x i) : \n  \u2211 k in Finset.range n, (2 * x k + 1) / (5 * x k + 3) \u2264 (2 * n + 1) / 3:= by\n  have h\u2081 : \u2200 k \u2208 Finset.range n, (2 * x k + 1) / (5 * x k + 3) \u2264 1 / 2 := by\n    intro k hk\n    have hxk : 0 < x k := hx k\n    rw [div_le_div_iff]\n    nlinarith\n    nlinarith\n    nlinarith\n  calc\n    \u2211 k in Finset.range n, (2 * x k + 1) / (5 * x k + 3) \u2264 \u2211 k in Finset.range n, 1 / 2 := Finset.sum_le_sum h\u2081\n    _ = (n : \u211d) * (1 / 2) := by simp [Finset.sum_const]\n    _ = n / 2 := by ring\n    _ \u2264 (2 * n + 1) / 3 := by\n      rw [div_le_div_iff] <;> norm_cast <;> nlinarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (n : \u2115) (x : \u2115 \u2192 \u211d) (hx : \u2200 i, 0 < x i) : \n  \u2211 k in Finset.range n, (2 * x k + 1) / (5 * x k + 3) \u2264 (2 * n + 1) / 3:= by\n  have : \u2200 k \u2208 Finset.range n, (2 * x k + 1) / (5 * x k + 3) \u2264 1 / 2 := by\n    intro k hk\n    have hxk : 0 < x k := hx k\n    rw [div_le_iff (by positivity)]\n    linarith\n  calc\n    \u2211 k in Finset.range n, (2 * x k + 1) / (5 * x k + 3) \u2264 \u2211 k in Finset.range n, 1 / 2 := Finset.sum_le_sum this\n    _ = n * (1 / 2) := by simp [mul_one_div]\n    _ = n / 2 := by ring\n    _ \u2264 (2 * n + 1) / 3 := by\n      cases n with\n      | zero => norm_num\n      | succ n =>\n        ring_nf\n        norm_num\n        apply le_of_sub_nonneg\n        field_simp\n        ring_nf\n        positivity\n  <;> norm_num"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^2 / Real.sqrt (3 * a^4 + b^4) + b^2 / Real.sqrt (3 * b^4 + c^4) + c^2 / Real.sqrt (3 * c^4 + a^4)) \u2264 (1 / 2) * (a / b + b / c + c / a) := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 1 \u2192 b \u2265 1 \u2192 c \u2265 1 \u2192 a * b * c = 1 \u2192 a ^ 2 / Real.sqrt (3 * a ^ 4 + b ^ 4) + b ^ 2 / Real.sqrt (3 * b ^ 4 + c ^ 4) + c ^ 2 / Real.sqrt (3 * c ^ 4 + a ^ 4) \u2264 3 / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 1 \u2192 b \u2265 1 \u2192 c \u2265 1 \u2192 a * b * c = 1 \u2192\n    a ^ 2 / Real.sqrt (3 * a ^ 4 + b ^ 4) + b ^ 2 / Real.sqrt (3 * b ^ 4 + c ^ 4) + c ^ 2 / Real.sqrt (3 * c ^ 4 + a ^ 4) \u2264 3 / 2:= by\n  rintro a b c ha hb hc habc\n  have h\u2081 : a = 1 := by\n    nlinarith [sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1), mul_nonneg (sub_nonneg.mpr ha) (sub_nonneg.mpr hb),\n      mul_nonneg (sub_nonneg.mpr hb) (sub_nonneg.mpr hc), mul_nonneg (sub_nonneg.mpr ha) (sub_nonneg.mpr hc)]\n  have h\u2082 : b = 1 := by\n    nlinarith [sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1), mul_nonneg (sub_nonneg.mpr ha) (sub_nonneg.mpr hb),\n      mul_nonneg (sub_nonneg.mpr hb) (sub_nonneg.mpr hc), mul_nonneg (sub_nonneg.mpr ha) (sub_nonneg.mpr hc)]\n  have h\u2083 : c = 1 := by\n    nlinarith [sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1), mul_nonneg (sub_nonneg.mpr ha) (sub_nonneg.mpr hb),\n      mul_nonneg (sub_nonneg.mpr hb) (sub_nonneg.mpr hc), mul_nonneg (sub_nonneg.mpr ha) (sub_nonneg.mpr hc)]\n  subst_vars\n  norm_num\n  <;> apply le_of_pow_le_pow_left two_ne_zero\n  <;> ring_nf\n  <;> norm_num"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : (a / (b + c)^(1 / 3) + b / (c + d)^(1 / 3) + c / (d + a)^(1 / 3) + d / (a + b)^(1 / 3)) \u2265 2 := by",
  "new": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : a / b + b / c + c / d + d / a \u2265 2 + 2 / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_2 (a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : \n  a / b + b / c + c / d + d / a \u2265 2 + 2 / 2:= by\n  have h\u2080 : 0 < b * c := by positivity\n  have h\u2081 : 0 < c * d := by positivity\n  have h\u2082 : 0 < d * a := by positivity\n  have h\u2083 : 0 < b * d := by positivity\n  have h\u2084 : 0 < c * a := by positivity\n  have h\u2085 : 0 < b * c * d := by positivity\n  have h\u2086 : 0 < c * d * a := by positivity\n  have h\u2087 : 0 < d * a * b := by positivity\n  have h\u2088 : 0 < a * b * c := by positivity\n  have h\u2089 : 0 < 2 := by positivity\n  have h\u2081\u2080 : 0 < a * b * c * d := by positivity\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - d), sq_nonneg (d - a),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le hd.le, mul_nonneg hd.le ha.le,\n    mul_nonneg (sq_nonneg (a - b)) hd.le, mul_nonneg (sq_nonneg (b - c)) ha.le,\n    mul_nonneg (sq_nonneg (c - d)) hb.le, mul_nonneg (sq_nonneg (d - a)) hc.le]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_2 (a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : \n  a / b + b / c + c / d + d / a \u2265 2 + 2 / 2:= by\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * d := by positivity\n  have h\u2083 : 0 < d * a := by positivity\n  have h\u2084 : 0 < b * d := by positivity\n  have h\u2085 : 0 < a * b * c := by positivity\n  have h\u2086 : 0 < a * b * d := by positivity\n  have h\u2087 : 0 < a * c * d := by positivity\n  have h\u2088 : 0 < b * c * d := by positivity\n  have h\u2089 : 0 < a * b * c * d := by positivity\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - d), sq_nonneg (d - a),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le hd.le, mul_nonneg hd.le ha.le,\n    mul_nonneg (sq_nonneg (a - b)) hd.le, mul_nonneg (sq_nonneg (b - c)) ha.le, mul_nonneg (sq_nonneg (c - d)) hb.le, mul_nonneg (sq_nonneg (d - a)) hc.le]"
  ]
 },
 {
  "old": "(n : \u2115) (a b : \u2115 \u2192 \u211d) : (\u2211 i in Finset.range n, a i * b i) ^ 2 \u2264 (\u2211 i in Finset.range n, a i ^ 2) * (\u2211 i in Finset.range n, b i ^ 2) := by",
  "new": "(i : \u2115) (hi : \u2200 k, 0 < k \u2192 1 < i ^ 2 - k) : i = 1 \u2228 i = 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_mul_eq_one (i : \u2115) (hi : \u2200 k, 0 < k \u2192 1 < i ^ 2 - k) : i = 1 \u2228 i = 0:= by\n  by_contra! h\n  have h1 := hi 1\n  have h2 := hi (i ^ 2)\n  simp_all\n  <;> omega\n  <;> linarith\n  <;> omega\n  <;> linarith\n  <;> omega\n  <;> linarith\n  <;> omega\n  <;> linarith\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_mul_eq_one (i : \u2115) (hi : \u2200 k, 0 < k \u2192 1 < i ^ 2 - k) : i = 1 \u2228 i = 0:= by\n  by_cases h\u2080 : 1 < i <;> by_cases h\u2081 : i = 0 <;> simp_all\n  all_goals\n    have h\u2082 := hi 1 (by norm_num)\n    have h\u2083 := hi (i ^ 2 - 1) (by\n      have h\u2084 : 0 < i ^ 2 - 1 := by\n        nlinarith\n      omega)\n    omega"
  ]
 },
 {
  "old": "(a b c : \u211d) : a^3 * b + b^3 * c + c^3 * a + (473 / 256) * a * b * c * (a + b + c) \u2264 (27 / 256) * (a + b + c)^4 := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2 + 2 * (a * b * c) / (b * b * a) + 2 * (b * c * a) / (c * c * b) + 2 * (c * a * b) / (a * a * c) \u2265 6:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_10_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n        a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2 + 2 * (a * b * c) / (b * b * a) +\n           2 * (b * c * a) / (c * c * b) + 2 * (c * a * b) / (a * a * c) \u2265 6:= by\n  have h : 0 < a * b * c := by positivity\n  have h\u2082 : a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2 \u2265 3 := by\n    have h\u2083 : 0 < b ^ 2 := by positivity\n    have h\u2084 : 0 < c ^ 2 := by positivity\n    have h\u2085 : 0 < a ^ 2 := by positivity\n    have h\u2086 : 0 < b ^ 2 * c ^ 2 := by positivity\n    have h\u2087 : 0 < a ^ 2 * b ^ 2 := by positivity\n    have h\u2088 : 0 < a ^ 2 * c ^ 2 := by positivity\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2)]\n  have h\u2083 : 2 * (a * b * c) / (b * b * a) + 2 * (b * c * a) / (c * c * b) + 2 * (c * a * b) / (a * a * c) \u2265 3 := by\n    have h\u2084 : 2 * (a * b * c) / (b * b * a) = 2 * (c / b) := by\n      field_simp\n      ring\n    have h\u2085 : 2 * (b * c * a) / (c * c * b) = 2 * (a / c) := by\n      field_simp\n      ring\n    have h\u2086 : 2 * (c * a * b) / (a * a * c) = 2 * (b / a) := by\n      field_simp\n      ring\n    rw [h\u2084, h\u2085, h\u2086]\n    have h\u2087 : 0 < b := by positivity\n    have h\u2088 : 0 < c := by positivity\n    have h\u2089 : 0 < a := by positivity\n    have h\u2081\u2080 : 2 * (c / b) + 2 * (a / c) + 2 * (b / a) \u2265 3 := by\n      have h\u2081\u2081 : 0 < c * b := by positivity\n      have h\u2081\u2082 : 0 < a * b := by positivity\n      have h\u2081\u2083 : 0 < c * a := by positivity\n      have h\u2081\u2084 : 0 < b * a := by positivity\n      have h\u2081\u2085 : 0 < c * b * (a * b) := by positivity\n      have h\u2081\u2086 : 0 < c * a * (b * a) := by positivity\n      have h\u2081\u2087 : 0 < a * b * (c * b) := by positivity\n      have h\u2081\u2088 : 0 < a * b * (c * a) := by positivity\n      field_simp\n      rw [le_div_iff (by positivity)]\n      nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n    linarith\n  linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : 7 + (a ^ 2 + b ^ 2 + c ^ 2) / (a * b + b * c + a * c) \u2264 (2 * a / (b + c) + 1) * (2 * b / (a + c) + 1) * (2 * c / (a + b) + 1) \u2227 (2 * a / (b + c) + 1) * (2 * b / (a + c) + 1) * (2 * c / (a + b) + 1) \u2264 6 + 2 * (a ^ 2 + b ^ 2 + c ^ 2) / (a * b + b * c + a * c) := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (2 * a / (b + c) + 1) * (2 * b / (a + c) + 1) * (2 * c / (a + b) + 1) \u2265 6 + (a ^ 2 + b ^ 2 + c ^ 2) / (a * b + b * c + a * c):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p13 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : \n   (2 * a / (b + c) + 1) * (2 * b / (a + c) + 1) * (2 * c / (a + b) + 1) \u2265 6 + (a ^ 2 + b ^ 2 + c ^ 2) / (a * b + b * c + a * c):= by\n  have h1 : 0 < a * b := by positivity\n  have h2 : 0 < b * c := by positivity\n  have h3 : 0 < a * c := by positivity\n  have h4 : 0 < a * b * c := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    sq_nonneg (a * b - b * c), sq_nonneg (b * c - a * c), sq_nonneg (a * c - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p13 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : \n   (2 * a / (b + c) + 1) * (2 * b / (a + c) + 1) * (2 * c / (a + b) + 1) \u2265 6 + (a ^ 2 + b ^ 2 + c ^ 2) / (a * b + b * c + a * c):= by\n  have h\u2081 : 0 < a * b := by positivity\n  have h\u2082 : 0 < b * c := by positivity\n  have h\u2083 : 0 < c * a := by positivity\n  have h\u2084 : 0 < a * b * c := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a ^ 2 - b ^ 2), mul_self_nonneg (b ^ 2 - c ^ 2), mul_self_nonneg (c ^ 2 - a ^ 2),\n    mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p13 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : \n   (2 * a / (b + c) + 1) * (2 * b / (a + c) + 1) * (2 * c / (a + b) + 1) \u2265 6 + (a ^ 2 + b ^ 2 + c ^ 2) / (a * b + b * c + a * c):= by\n  have h1 : 0 < a * b := mul_pos ha hb\n  have h2 : 0 < b * c := mul_pos hb hc\n  have h3 : 0 < a * c := mul_pos ha hc\n  have h4 : 0 < a * b * c := by positivity\n  have h5 : 0 < a * b + b * c + a * c := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a ^ 2 - b ^ 2), mul_self_nonneg (b ^ 2 - c ^ 2),\n    mul_self_nonneg (c ^ 2 - a ^ 2), mul_self_nonneg (a * b - b * c),\n    mul_self_nonneg (b * c - a * c), mul_self_nonneg (a * c - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p13 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : \n   (2 * a / (b + c) + 1) * (2 * b / (a + c) + 1) * (2 * c / (a + b) + 1) \u2265 6 + (a ^ 2 + b ^ 2 + c ^ 2) / (a * b + b * c + a * c):= by\n  have h\u2080 : 0 < a * b := mul_pos ha hb\n  have h\u2081 : 0 < b * c := mul_pos hb hc\n  have h\u2082 : 0 < a * c := mul_pos ha hc\n  have h\u2083 : 0 < a * b * c := by positivity\n  have h\u2084 : 0 < a * b * (a + b) := by positivity\n  have h\u2085 : 0 < b * c * (b + c) := by positivity\n  have h\u2086 : 0 < a * c * (a + c) := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    sq_nonneg (a * b - b * c), sq_nonneg (b * c - a * c), sq_nonneg (a * c - a * b)]"
  ]
 },
 {
  "old": ": \u2200 n : \u2115, 2 \u2223 (1111^n - 1109^n) := by",
  "new": "(a b : \u2115) (h\u2080 : 1 < a \u2227 1 < b) (h\u2081 : (a : \u2115) ^ b = a ^ 4 + a ^ 2 + 1) (h\u2082 : a \u2223 a ^ b) : a = 2 \u2228 a = 3 \u2228 a = 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mathd_numbertheory_127 (a b : \u2115) (h\u2080 : 1 < a \u2227 1 < b) (h\u2081 : (a : \u2115) ^ b = a ^ 4 + a ^ 2 + 1) (h\u2082 : a \u2223 a ^ b) :\n a = 2 \u2228 a = 3 \u2228 a = 4:= by\n  rcases h\u2080 with \u27e8ha\u2081, hb\u2081\u27e9\n  have h\u2081' : a \u2223 a ^ b := by simp_all\n  have h\u2082 : a \u2223 a ^ 4 + a ^ 2 + 1 := by simp_all\n  have h\u2083 : a \u2223 a ^ 4 := by\n    exact dvd_pow_self a (by linarith)\n  have h\u2084 : a \u2223 a ^ 2 := by\n    exact dvd_pow_self a (by linarith)\n  have h\u2085 : a \u2223 1 := by\n    simp_all [Nat.dvd_add_right, Nat.dvd_add_left]\n  have h\u2086 : a = 1 := by\n    exact Nat.eq_one_of_dvd_one h\u2085\n  simp_all",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mathd_numbertheory_127 (a b : \u2115) (h\u2080 : 1 < a \u2227 1 < b) (h\u2081 : (a : \u2115) ^ b = a ^ 4 + a ^ 2 + 1) (h\u2082 : a \u2223 a ^ b) :\n a = 2 \u2228 a = 3 \u2228 a = 4:= by\n  rw [h\u2081] at h\u2082\n  have : a \u2223 a ^ 4 + a ^ 2 + 1 := h\u2082\n  have h\u2083 : a \u2223 a ^ 4 := by\n    exact dvd_pow_self a (by omega)\n  have h\u2084 : a \u2223 a ^ 2 := by\n    exact dvd_pow_self a (by omega)\n  have h\u2085 : a \u2223 1 := by\n    simp_all [Nat.dvd_add_right, Nat.dvd_add_left]\n  have h\u2086 : a = 1 := by\n    exact Nat.eq_one_of_dvd_one h\u2085\n  simp_all"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) (habc : a * b * c = 1) : (2 * a + b + d) / (a + c + d) + (2 * b + c + a) / (b + d + a) + (2 * c + d + b) / (c + a + b) + (2 * d + a + c) / (d + b + c) \u2265 16 / 3 := by",
  "new": ": \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192 a * b * c = 1 \u2192 a * b * d = 1 \u2192 a * c * d = 1 \u2192 b * c * d = 1 \u2192 (2 * a + b + d) / (a + c + d) + (2 * b + c + a) / (b + d + a) + (2 * c + d + b) / (c + a + b) + (2 * d + a + c) / (d + b + c) \u2265 16 / 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192 a * b * c = 1 \u2192 a * b * d = 1 \u2192 a * c * d = 1 \u2192 b * c * d = 1 \u2192 (2 * a + b + d) / (a + c + d) + (2 * b + c + a) / (b + d + a) + (2 * c + d + b) / (c + a + b) + (2 * d + a + c) / (d + b + c) \u2265 16 / 3:= by\n  intro a b c d h\u2080 h\u2081 h\u2082 h\u2083 h\u2084 h\u2085 h\u2086 h\u2087\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (a - d), sq_nonneg (b - c),\n    sq_nonneg (b - d), sq_nonneg (c - d), mul_pos h\u2080 h\u2081, mul_pos h\u2080 h\u2082, mul_pos h\u2080 h\u2083,\n    mul_pos h\u2081 h\u2082, mul_pos h\u2081 h\u2083, mul_pos h\u2082 h\u2083]\n  <;>\n    linarith\n  <;>\n    linarith\n  <;>\n    linarith\n  <;>\n    linarith\n  <;>\n    linarith\n  <;>\n    linarith\n  <;>\n    linarith\n  <;>\n    linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192 a * b * c = 1 \u2192 a * b * d = 1 \u2192 a * c * d = 1 \u2192 b * c * d = 1 \u2192 (2 * a + b + d) / (a + c + d) + (2 * b + c + a) / (b + d + a) + (2 * c + d + b) / (c + a + b) + (2 * d + a + c) / (d + b + c) \u2265 16 / 3:= by\n  intro a b c d h\u2080 h\u2081 h\u2082 h\u2083 h\u2084 h\u2085 h\u2086 h\u2087\n  have : 0 < b * c := by positivity\n  have : 0 < c * d := by positivity\n  have : 0 < a * d := by positivity\n  have : 0 < a * b := by positivity\n  have : 0 < b * d := by positivity\n  have : 0 < a * c := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (a - d), sq_nonneg (b - c), sq_nonneg (b - d), sq_nonneg (c - d)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192 a * b * c = 1 \u2192 a * b * d = 1 \u2192 a * c * d = 1 \u2192 b * c * d = 1 \u2192 (2 * a + b + d) / (a + c + d) + (2 * b + c + a) / (b + d + a) + (2 * c + d + b) / (c + a + b) + (2 * d + a + c) / (d + b + c) \u2265 16 / 3:= by\n  rintro a b c d h1 h2 h3 h4 h5 h6 h7 h8\n  field_simp [h1, h2, h3, h4, h5, h6, h7, h8]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (a - d), sq_nonneg (b - c), sq_nonneg (b - d), sq_nonneg (c - d),\n    mul_pos h1 h2, mul_pos h1 h3, mul_pos h1 h4, mul_pos h2 h3, mul_pos h2 h4, mul_pos h3 h4]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192 a * b * c = 1 \u2192 a * b * d = 1 \u2192 a * c * d = 1 \u2192 b * c * d = 1 \u2192 (2 * a + b + d) / (a + c + d) + (2 * b + c + a) / (b + d + a) + (2 * c + d + b) / (c + a + b) + (2 * d + a + c) / (d + b + c) \u2265 16 / 3:= by\n  rintro a b c d ha hb hc hd habc habd hacd hbcd\n  have : 0 < a * b := by positivity\n  have : 0 < a * c := by positivity\n  have : 0 < a * d := by positivity\n  have : 0 < b * c := by positivity\n  have : 0 < b * d := by positivity\n  have : 0 < c * d := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (a - d), sq_nonneg (b - c), sq_nonneg (b - d), sq_nonneg (c - d)]"
  ]
 },
 {
  "old": "(x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x + y = 1) : x * Real.log x + y * Real.log y \u2265 Real.log (1 / 2) := by",
  "new": "{x : \u211d} (hx : 0 < x) : Real.log x \u2264 x - 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_le_sub_one_of_pos {x : \u211d} (hx : 0 < x) : Real.log x \u2264 x - 1:= by\n  refine' (Real.log_le_sub_one_of_pos hx).trans _\n  simp [sub_le_sub_right]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_le_sub_one_of_pos {x : \u211d} (hx : 0 < x) : Real.log x \u2264 x - 1:= by\n  nlinarith [Real.log_le_sub_one_of_pos hx]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_le_sub_one_of_pos {x : \u211d} (hx : 0 < x) : Real.log x \u2264 x - 1:= by\n  rw [\u2190 sub_nonneg]\n  nlinarith [Real.log_le_sub_one_of_pos hx, hx]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_le_sub_one_of_pos {x : \u211d} (hx : 0 < x) : Real.log x \u2264 x - 1:= by\n  have := Real.log_le_sub_one_of_pos hx\n  linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : (a / (1 / a + 1 / c) + b / (1 / b + 1 / a) + c / (1 / c + 1 / b) \u2265 3 / 2) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x * y * z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x * y * z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9 := by\n  have hxy : 0 < x * y := mul_pos hx hy\n  have hyz : 0 < y * z := mul_pos hy hz\n  have hxz : 0 < x * z := mul_pos hx hz\n  field_simp [hab]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z), sq_nonneg (x * y - 1),\n    sq_nonneg (y * z - 1), sq_nonneg (x * z - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x * y * z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9 := by\n  have h\u2081 : 0 < x * y := mul_pos hx hy\n  have h\u2082 : 0 < y * z := mul_pos hy hz\n  have h\u2083 : 0 < z * x := mul_pos hz hx\n  field_simp [hab]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z), sq_nonneg (x * y - 1), sq_nonneg (y * z - 1), sq_nonneg (z * x - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x * y * z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9 := by\n  have h1 : 0 < x * y := by positivity\n  have h2 : 0 < y * z := by positivity\n  have h3 : 0 < z * x := by positivity\n  field_simp [hab]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    sq_nonneg (x * y - 1), sq_nonneg (y * z - 1), sq_nonneg (z * x - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x * y * z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9 := by\n  have h : 0 < x * y := by positivity\n  have h' : 0 < y * z := by positivity\n  have h'' : 0 < x * z := by positivity\n  field_simp [hab]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    sq_nonneg (x * y - 1), sq_nonneg (y * z - 1), sq_nonneg (x * z - 1)]\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) : (Real.sqrt ((b + c) / a) + Real.sqrt ((c + a) / b) + Real.sqrt ((a + b) / c)) \u2265 3 * Real.sqrt 2 := by",
  "new": ": Real.sqrt 2 \u2264 2 / \u221a3 + \u221a (3 / 2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2264 2 / \u221a3 + \u221a (3 / 2):= by\n  have h\u2080 : 0 \u2264 Real.sqrt 2 := Real.sqrt_nonneg _\n  have h\u2081 : 0 \u2264 2 / \u221a3 := by positivity\n  have h\u2082 : 0 \u2264 Real.sqrt (3 / 2) := Real.sqrt_nonneg _\n  have h\u2083 : 0 \u2264 2 / \u221a3 + \u221a (3 / 2) := by positivity\n  have h\u2084 : (Real.sqrt 2) ^ 2 = 2 := Real.sq_sqrt (by positivity)\n  have h\u2085 : (2 / \u221a3) ^ 2 = 4 / 3 := by\n    field_simp\n    ring_nf\n  have h\u2086 : (\u221a (3 / 2)) ^ 2 = 3 / 2 := Real.sq_sqrt (by positivity)\n  nlinarith [sq_sqrt (show 0 \u2264 2 by positivity),\n    sq_sqrt (show 0 \u2264 3 / 2 by positivity),\n    sq_sqrt (show 0 \u2264 3 by positivity)]\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2264 2 / \u221a3 + \u221a (3 / 2):= by\n  have h\u2080 : 0 < Real.sqrt 3 := Real.sqrt_pos.2 (by norm_num)\n  have h\u2081 : 0 < \u221a (3 / 2) := Real.sqrt_pos.2 (by norm_num)\n  have h\u2082 : 0 < Real.sqrt 2 := Real.sqrt_pos.2 (by norm_num)\n  have h\u2083 : 0 < Real.sqrt 3 * \u221a (3 / 2) := by positivity\n  apply le_of_pow_le_pow_left two_ne_zero (by positivity)\n  field_simp [h\u2080, h\u2081, h\u2082, h\u2083]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 by norm_num),\n    sq_sqrt (show (0 : \u211d) \u2264 2 by norm_num),\n    sq_sqrt (show (0 : \u211d) \u2264 3 / 2 by norm_num),\n    sq_nonneg (Real.sqrt 2 - 1)]"
  ]
 },
 {
  "old": "(u v : \u2115 \u2192 \u2115) (a b : \u2115) : \u2211 k in (Finset.Ico a b), u k * (v (k + 1) - v k) = u b * v b - u a * v a - \u2211 k in Finset.Ico a b, v (k + 1) * (u (k + 1) - u k) := by",
  "new": "(f : \u2115 \u2192 \u2124) (n : \u2115) (h : (\u2211 k in Finset.Ico 0 n, f k) = 1) : IsCoprime (\u2211 k in Finset.Ico 0 n, (f k)^2) 1 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_cancel_left_sum (f : \u2115 \u2192 \u2124) (n : \u2115) (h : (\u2211 k in Finset.Ico 0 n, f k) = 1) :\n     IsCoprime (\u2211 k in Finset.Ico 0 n, (f k)^2) 1 := by\n  cases n\n  all_goals simp_all [Int.isCoprime_iff_gcd_eq_one, Finset.sum_range_succ]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a * b + b * c + c * a = 1) : 8 * a ^ 2 * b ^ 2 * c ^ 2 \u2265 (1 - a ^ 2) * (1 - b ^ 2) * (1 - c ^ 2) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z = 1) : 1 / (x + y + z) * (x ^ 2 + y ^ 2 + z ^ 2) + 1 / (x ^ 2 + y ^ 2 + z ^ 2) * (x * y + y * z + z * x) \u2265 2 * (x * y + y * z + z * x) / (x + y + z):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z = 1) : 1 / (x + y + z) * (x ^ 2 + y ^ 2 + z ^ 2) + 1 / (x ^ 2 + y ^ 2 + z ^ 2) * (x * y + y * z + z * x) \u2265 2 * (x * y + y * z + z * x) / (x + y + z):= by\n  field_simp at h\u2081 h\u2082 \u22a2\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_nonneg hx.le hy.le, mul_nonneg hy.le hz.le, mul_nonneg hz.le hx.le]\n  <;> linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b + c = 3) : 9 / (a * b * c) \u2265 2 * (a / b + b / c + c / a) + 3 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9 * (x + y + z):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9 * (x + y + z):= by\n  have h\u2080 : 0 < x * y := by positivity\n  have h\u2081 : 0 < x * z := by positivity\n  have h\u2082 : 0 < y * z := by positivity\n  have h\u2083 : 0 < x * y * z := by positivity\n  have h\u2084 : (x + y + z) ^ 2 = 1 := by simp [hab]\n  have h\u2085 : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9 * (x + y + z) := by\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n      mul_self_nonneg (x * y - x * z), mul_self_nonneg (x * y - y * z), mul_self_nonneg (x * z - y * z)]\n  linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9 * (x + y + z):= by\n  have h1 : 0 < x * y := by positivity\n  have h2 : 0 < y * z := by positivity\n  have h3 : 0 < z * x := by positivity\n  have h4 : 0 < x * y * z := by positivity\n  have h5 : 1 / x + 1 / y + 1 / z \u2265 3 := by\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z), hab]\n  nlinarith [sq_nonneg (1 / x + 1 / y + 1 / z - 3), hab]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9 * (x + y + z):= by\n  rw [hab]\n  have h1 : 1 / x + 1 / y + 1 / z \u2265 9 := by\n    have hx1 : 0 < x := by linarith\n    have hy1 : 0 < y := by linarith\n    have hz1 : 0 < z := by linarith\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n      mul_self_nonneg (x + y + z)]\n  nlinarith\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9 * (x + y + z):= by\n  have : 1 / x + 1 / y + 1 / z \u2265 9 := by\n    field_simp [add_comm]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z), mul_pos hx hy, mul_pos hx hz, mul_pos hy hz]\n  nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : Real.sqrt (a ^ 4 + b ^ 4 / 2 + c ^ 4 / 2) + Real.sqrt (b ^ 4 + c ^ 4 / 2 + a ^ 4 / 2) + Real.sqrt (c ^ 4 + a ^ 4 / 2 + b ^ 4 / 2) \u2265 Real.sqrt (a ^ 4 + b ^ 3 * c) + Real.sqrt (b ^ 4 + c ^ 3 * a) + Real.sqrt (c ^ 4 + a ^ 3 * b) := by",
  "new": "{a b c : \u2115} (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 2 * 3) (h : a ^ 2 + b ^ 2 + c ^ 2 = 2 * (a * b + b * c + c * a)) : a.Coprime b \u2228 b.Coprime c \u2228 c.Coprime a \u2228 a = 0 \u2228 b = 0 \u2228 c = 0 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_nonneg_of_sum_eq_two_mul_three {a b c : \u2115} (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 2 * 3) (h : a ^ 2 + b ^ 2 + c ^ 2 = 2 * (a * b + b * c + c * a)) : a.Coprime b \u2228 b.Coprime c \u2228 c.Coprime a \u2228 a = 0 \u2228 b = 0 \u2228 c = 0 := by\n  have : a \u2264 6 \u2227 b \u2264 6 \u2227 c \u2264 6 := by\n    refine' \u27e8_, _, _\u27e9 <;>\n    nlinarith\n  rcases this with \u27e8h\u2080, h\u2081, h\u2082\u27e9\n  interval_cases a <;> interval_cases b <;> interval_cases c <;>\n  simp_all (config := {decide := true})\n  <;>\n  decide",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_nonneg_of_sum_eq_two_mul_three {a b c : \u2115} (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 2 * 3) (h : a ^ 2 + b ^ 2 + c ^ 2 = 2 * (a * b + b * c + c * a)) : a.Coprime b \u2228 b.Coprime c \u2228 c.Coprime a \u2228 a = 0 \u2228 b = 0 \u2228 c = 0 := by\n  simp only [Nat.mul_comm, Nat.mul_left_comm] at habc h\n  have : a \u2264 6 := by nlinarith\n  have : b \u2264 6 := by nlinarith\n  have : c \u2264 6 := by nlinarith\n  interval_cases a <;> interval_cases b <;> interval_cases c <;> simp_all (config := {decide := true})",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_nonneg_of_sum_eq_two_mul_three {a b c : \u2115} (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 2 * 3) (h : a ^ 2 + b ^ 2 + c ^ 2 = 2 * (a * b + b * c + c * a)) : a.Coprime b \u2228 b.Coprime c \u2228 c.Coprime a \u2228 a = 0 \u2228 b = 0 \u2228 c = 0 := by\n  norm_num\n  have : a \u2264 6 := by nlinarith\n  have : b \u2264 6 := by nlinarith\n  have : c \u2264 6 := by nlinarith\n  interval_cases a <;> interval_cases b <;> interval_cases c <;> simp_all (config := {decide := true})\n  <;> try norm_num\n  <;> try decide\n  <;> try ring_nf\n  <;> try simp_all\n  <;> try decide\n  <;> try ring_nf\n  <;> try simp_all\n  <;> try decide\n  <;> try ring_nf\n  <;> try simp_all\n  <;> try decide"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 3) : a * Real.sqrt (a + b) + b * Real.sqrt (b + c) + c * Real.sqrt (c + a) \u2265 3 * Real.sqrt 2 := by",
  "new": ": Real.sqrt 2 \u2264 2 / \u221a3 + \u221a (2 / 3):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2264 2 / \u221a3 + \u221a (2 / 3):= by\n  have h\u2080 : 0 < 3 := by norm_num\n  have h\u2081 : 0 < Real.sqrt 3 := Real.sqrt_pos.mpr (by positivity)\n  have h\u2082 : 0 < Real.sqrt (2 / 3) := Real.sqrt_pos.mpr (by positivity)\n  have h\u2083 : 0 < Real.sqrt 3 * Real.sqrt (2 / 3) := by positivity\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  \u00b7 positivity\n  \u00b7 rw [\u2190 sub_nonneg]\n    field_simp\n    ring_nf\n    norm_num\n    <;> linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2264 2 / \u221a3 + \u221a (2 / 3):= by\n  have h\u2080 : (0 : \u211d) < Real.sqrt 2 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2081 : (0 : \u211d) < \u221a3 := by positivity\n  have h\u2082 : (0 : \u211d) < 2 / \u221a3 := by positivity\n  have h\u2083 : (0 : \u211d) < 2 / 3 := by positivity\n  have h\u2084 : (0 : \u211d) < Real.sqrt (2 / 3) := Real.sqrt_pos.mpr (by positivity)\n  have h\u2085 : Real.sqrt 2 \u2264 2 / \u221a3 + \u221a (2 / 3) := by\n    rw [\u2190 sub_nonneg]\n    apply le_of_sub_nonneg\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_sqrt (by positivity : 0 \u2264 (2 : \u211d)),\n      sq_sqrt (by positivity : 0 \u2264 (3 : \u211d)),\n      sq_sqrt (by positivity : 0 \u2264 (2 / 3 : \u211d)),\n      sq_nonneg (Real.sqrt 3 - Real.sqrt 2),\n      sq_nonneg (Real.sqrt (2 / 3) - Real.sqrt 2),\n      sq_nonneg (Real.sqrt (2 / 3) - Real.sqrt (2 / 3 * (3 / 2)))]\n  exact h\u2085",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2264 2 / \u221a3 + \u221a (2 / 3):= by\n  have h\u2080 : 0 \u2264 (2 / \u221a3 + \u221a (2 / 3)) ^ 2 := sq_nonneg _\n  rw [sq] at h\u2080\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  \u00b7 positivity\n  \u00b7 rw [\u2190 sub_nonneg]\n    field_simp\n    ring_nf\n    norm_num\n    <;> positivity\n  <;> norm_num\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (hab : a + b + c = 3) : (a / (8041 * b - 1683 * c ^ 2 + 15201) ^ (1 / 2) + b / (8041 * c - 1683 * a ^ 2 + 15201) ^ (1 / 2) + c / (8041 * a - 1683 * b ^ 2 + 15201) ^ (1 / 2)) \u2265 3 / (21559) ^ (1 / 2) := by",
  "new": "(a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (hab : a + b + c = 3) : a ^ 2 / (a + 1) + b ^ 2 / (b + 1) + c ^ 2 / (c + 1) \u2264 21 / 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (hab : a + b + c = 3) : a ^ 2 / (a + 1) + b ^ 2 / (b + 1) + c ^ 2 / (c + 1) \u2264 21 / 4:= by\n  field_simp [add_comm, add_left_comm]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_nonneg ha hb, mul_nonneg hb hc, mul_nonneg ha hc, mul_nonneg (sq_nonneg a) hb, mul_nonneg (sq_nonneg b) hc, mul_nonneg (sq_nonneg c) ha]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (hab : a + b + c = 3) : a ^ 2 / (a + 1) + b ^ 2 / (b + 1) + c ^ 2 / (c + 1) \u2264 21 / 4:= by\n  have h\u2081 : a ^ 2 / (a + 1) \u2264 a := by\n    rw [div_le_iff (show (0 : \u211d) < a + 1 by linarith)]\n    nlinarith\n  have h\u2082 : b ^ 2 / (b + 1) \u2264 b := by\n    rw [div_le_iff (show (0 : \u211d) < b + 1 by linarith)]\n    nlinarith\n  have h\u2083 : c ^ 2 / (c + 1) \u2264 c := by\n    rw [div_le_iff (show (0 : \u211d) < c + 1 by linarith)]\n    nlinarith\n  linarith\n  <;> assumption\n  <;> try norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (hab : a + b + c = 3) : a ^ 2 / (a + 1) + b ^ 2 / (b + 1) + c ^ 2 / (c + 1) \u2264 21 / 4:= by\n  have H\u2080 : a ^ 2 / (a + 1) \u2264 2 * a / 2 := by\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a - 1), ha]\n  have H\u2081 : b ^ 2 / (b + 1) \u2264 2 * b / 2 := by\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (b - 1), hb]\n  have H\u2082 : c ^ 2 / (c + 1) \u2264 2 * c / 2 := by\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (c - 1), hc]\n  linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (hab : a + b + c = 3) : a ^ 2 / (a + 1) + b ^ 2 / (b + 1) + c ^ 2 / (c + 1) \u2264 21 / 4:= by\n  have h\u2080 : a ^ 2 / (a + 1) \u2264 3 / 2 * a := by\n    rw [div_le_iff (show (0 : \u211d) < a + 1 by linarith)]\n    ring_nf\n    nlinarith\n  have h\u2081 : b ^ 2 / (b + 1) \u2264 3 / 2 * b := by\n    rw [div_le_iff (show (0 : \u211d) < b + 1 by linarith)]\n    ring_nf\n    nlinarith\n  have h\u2082 : c ^ 2 / (c + 1) \u2264 3 / 2 * c := by\n    rw [div_le_iff (show (0 : \u211d) < c + 1 by linarith)]\n    ring_nf\n    nlinarith\n  linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : 1 / (a^5 * (b + 2 * c)^2) + 1 / (b^5 * (c + 2 * a)^2) + 1 / (c^5 * (a + 2 * b)^2) \u2265 1 / 3 := by",
  "new": "(h\u2080 : \u2200 (x : \u2115), x \u2264 3 \u2192 1 < 1 + x) : \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192 1 / (a^5 * (b + 2 * c)^2) + 1 / (b^5 * (c + 2 * a)^2) + 1 / (c^5 * (a + 2 * b)^2) \u2265 1 / 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_of_three_inequalities (h\u2080 : \u2200 (x : \u2115), x \u2264 3 \u2192 1 < 1 + x)  :\n    \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192\n        1 / (a^5 * (b + 2 * c)^2) + 1 / (b^5 * (c + 2 * a)^2) + 1 / (c^5 * (a + 2 * b)^2) \u2265 1 / 3:= by\n  intro a b c\n  intro h\u2081\n  ring_nf at h\u2081 \u22a2\n  nlinarith [h\u2080 0 (by norm_num), h\u2080 1 (by norm_num), h\u2080 2 (by norm_num), h\u2080 3 (by norm_num)]\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) : (a^2 + b * c) / Real.sqrt (b^2 + b * c + c^2) + (b^2 + c * a) / Real.sqrt (c^2 + c * a + a^2) + (c^2 + a * b) / Real.sqrt (a^2 + a * b + b^2) \u2265 2 / Real.sqrt 3 * (a + b + c) := by",
  "new": ": Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) + 1 \u2264 4 * Real.sqrt (Real.sqrt 2 + 1):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) + 1 \u2264 4 * Real.sqrt (Real.sqrt 2 + 1):= by\n  have h : Real.sqrt (Real.sqrt 2 + 1) \u2265 0 := Real.sqrt_nonneg (Real.sqrt 2 + 1)\n  have h' : Real.sqrt 2 \u2265 0 := Real.sqrt_nonneg 2\n  nlinarith [sq_sqrt (show (Real.sqrt 2 + 1) \u2265 0 by linarith), sq_sqrt (show 2 \u2265 0 by linarith)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) + 1 \u2264 4 * Real.sqrt (Real.sqrt 2 + 1):= by\n  have h\u2081 : 0 < Real.sqrt (Real.sqrt 2 + 1) := by positivity\n  have h\u2082 : 0 < Real.sqrt 2 + 1 := by positivity\n  have h\u2083 : 0 < Real.sqrt 2 := by positivity\n  have h\u2084 : 0 < 4 := by positivity\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 Real.sqrt 2 + 1 from by positivity),\n    sq_sqrt (show (0 : \u211d) \u2264 Real.sqrt 2 from by positivity),\n    sq_nonneg (Real.sqrt (Real.sqrt 2 + 1) - 1)]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) + 1 \u2264 4 * Real.sqrt (Real.sqrt 2 + 1):= by\n  have h\u2080 : 0 \u2264 Real.sqrt 2 := Real.sqrt_nonneg _\n  have h\u2081 : Real.sqrt 2 \u2264 2 := by\n    nlinarith [sq_sqrt (show (0 : \u211d) \u2264 2 by linarith), sq_sqrt (show (0 : \u211d) \u2264 2 by linarith)]\n  have h\u2082 : 0 \u2264 Real.sqrt (Real.sqrt 2 + 1) := Real.sqrt_nonneg _\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 Real.sqrt 2 + 1 by positivity),\n    sq_sqrt (show (0 : \u211d) \u2264 Real.sqrt 2 + 1 by positivity),\n    sq_sqrt (show (0 : \u211d) \u2264 Real.sqrt 2 + 1 by positivity)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (1 / Real.sqrt (20 * a + 23 * b) + 1 / Real.sqrt (20 * b + 23 * c) + 1 / Real.sqrt (20 * c + 23 * a)) \u2265 (9 * Real.sqrt 86) / (86 * Real.sqrt (a + b + c)) := by",
  "new": ": \u2200 x : \u211d, x > 0 \u2192 (1 / Real.sqrt (20 * x + 23)) \u2265 (1 / Real.sqrt (20 * x + 23 * (1 + 1 / 9))) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 (1 / Real.sqrt (20 * x + 23)) \u2265 (1 / Real.sqrt (20 * x + 23 * (1 + 1 / 9))) := by\n  intro x hx\n  apply one_div_le_one_div_of_le\n  exact Real.sqrt_pos.mpr (by positivity)\n  have h\u2081 : 0 < x := by positivity\n  have h\u2082 : (0 : \u211d) < 23 := by positivity\n  have h\u2083 : (0 : \u211d) < 20 * x + 23 := by positivity\n  have h\u2084 : (0 : \u211d) < 20 * x + 23 * (1 + 1 / 9) := by positivity\n  have h\u2085 : Real.sqrt (20 * x + 23) \u2264 Real.sqrt (20 * x + 23 * (1 + 1 / 9)) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 (1 / Real.sqrt (20 * x + 23)) \u2265 (1 / Real.sqrt (20 * x + 23 * (1 + 1 / 9))) := by\n  intro x hx\n  apply one_div_le_one_div_of_le\n  \u00b7 positivity\n  \u00b7 rw [Real.sqrt_le_sqrt_iff]\n    \u00b7 nlinarith\n    \u00b7 positivity"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^2 + b^2 + c^2) / (a * b + b * c + a * c) + 1 / 3 \u2265 8 / 9 * (a / (b + c) + b / (c + a) + c / (a + b)) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x^2 + y^2 + z^2) / (x * y + y * z + x * z) \u2265 1 / 3 \u2194 (x^2 + y^2 + z^2) \u2265 (x * y + y * z + x * z):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   (x^2 + y^2 + z^2) / (x * y + y * z + x * z) \u2265 1 / 3 \u2194 (x^2 + y^2 + z^2) \u2265 (x * y + y * z + x * z):= by\n  apply Iff.intro\n  \u00b7 intro h\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  \u00b7 intro h\n    apply le_of_sub_nonneg\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : x > 0 \u2227 y > 0 \u2227 z > 0) (h : x + y + z = 3) : 5 * (Real.sqrt x + Real.sqrt y + Real.sqrt z) + 9 \u2265 3 * (x + y) * (y + z) * (z + x) := by",
  "new": "(n : \u2115) (hn : n > 1) : (\u2203 x y : \u2115, x.Coprime y \u2227 n = x * y) \u2228 (\u2200 x y : \u2115, x.Coprime y \u2192 n \u2260 x * y) \u2227 n \u2264 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_small_coprime (n : \u2115) (hn : n > 1) :\n    (\u2203 x y : \u2115, x.Coprime y \u2227 n = x * y) \u2228 (\u2200 x y : \u2115, x.Coprime y \u2192 n \u2260 x * y) \u2227 n \u2264 4:= by\n  left\n  exact \u27e81, n, by simp, by simp [hn]\u27e9\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_small_coprime (n : \u2115) (hn : n > 1) :\n    (\u2203 x y : \u2115, x.Coprime y \u2227 n = x * y) \u2228 (\u2200 x y : \u2115, x.Coprime y \u2192 n \u2260 x * y) \u2227 n \u2264 4:= by\n  refine' or_iff_not_imp_right.mpr fun h => \u27e8n, 1, by simp [hn], by simp\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_small_coprime (n : \u2115) (hn : n > 1) :\n    (\u2203 x y : \u2115, x.Coprime y \u2227 n = x * y) \u2228 (\u2200 x y : \u2115, x.Coprime y \u2192 n \u2260 x * y) \u2227 n \u2264 4:= by\n  refine' or_iff_not_imp_right.mpr fun h => _\n  push_neg at h\n  exact \u27e81, n, by aesop, by simp [hn]\u27e9"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^2 + 16 * b * c) / (b^2 + b * c + c^2) + (b^2 + 16 * c * a) / (c^2 + c * a + a^2) + (c^2 + 16 * a * b) / (a^2 + a * b + b^2) \u2265 20 / 3 := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 (a^2 + 16 * b * c) / (b^2 + b * c + c^2) + (b^2 + 16 * c * a) / (c^2 + c * a + a^2) + (c^2 + 16 * a * b) / (a^2 + a * b + b^2) \u2265 20 / 3 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192\n   (a^2 + 16 * b * c) / (b^2 + b * c + c^2) + (b^2 + 16 * c * a) / (c^2 + c * a + a^2) + (c^2 + 16 * a * b) / (a^2 + a * b + b^2) \u2265 20 / 3  := by\n  intro a b c h\n  rcases h with \u27e8ha, hb, hc\u27e9\n  have h\u2080 : 0 < a * b := by positivity\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * a := by positivity\n  have h\u2083 : 0 < a * b * c := by positivity\n  have h\u2084 : 0 < (a * b) * (b * c) := by positivity\n  have h\u2085 : 0 < (b * c) * (c * a) := by positivity\n  have h\u2086 : 0 < (c * a) * (a * b) := by positivity\n  field_simp [h\u2080, h\u2081, h\u2082]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a^2 - b^2), sq_nonneg (b^2 - c^2), sq_nonneg (c^2 - a^2),\n    sq_nonneg (a^2 - 2 * a * b + b^2), sq_nonneg (b^2 - 2 * b * c + c^2),\n    sq_nonneg (c^2 - 2 * c * a + a^2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192\n   (a^2 + 16 * b * c) / (b^2 + b * c + c^2) + (b^2 + 16 * c * a) / (c^2 + c * a + a^2) + (c^2 + 16 * a * b) / (a^2 + a * b + b^2) \u2265 20 / 3  := by\n  rintro a b c \u27e8a_pos, b_pos, c_pos\u27e9\n  have h\u2080 : 0 < b * c := by positivity\n  have h\u2081 : 0 < c * a := by positivity\n  have h\u2082 : 0 < a * b := by positivity\n  have h\u2083 : 0 < a * b * (b * c) := by positivity\n  have h\u2084 : 0 < b * c * (c * a) := by positivity\n  have h\u2085 : 0 < c * a * (a * b) := by positivity\n  field_simp [h\u2080, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085]\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    sq_nonneg (a ^ 2 - 2 * a * b + b ^ 2), sq_nonneg (b ^ 2 - 2 * b * c + c ^ 2),\n    sq_nonneg (c ^ 2 - 2 * a * c + a ^ 2)]\n  positivity\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192\n   (a^2 + 16 * b * c) / (b^2 + b * c + c^2) + (b^2 + 16 * c * a) / (c^2 + c * a + a^2) + (c^2 + 16 * a * b) / (a^2 + a * b + b^2) \u2265 20 / 3  := by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  have h\u2080 : 0 < a * b := by positivity\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * a := by positivity\n  have h\u2083 : 0 < a * b * (b * c) := by positivity\n  have h\u2084 : 0 < b * c * (c * a) := by positivity\n  have h\u2085 : 0 < c * a * (a * b) := by positivity\n  field_simp [ha, hb, hc, h\u2080, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a^2 - b^2), sq_nonneg (b^2 - c^2), sq_nonneg (c^2 - a^2),\n    sq_nonneg (a^2 - 2 * a * b + b^2), sq_nonneg (b^2 - 2 * b * c + c^2), sq_nonneg (c^2 - 2 * c * a + a^2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192\n   (a^2 + 16 * b * c) / (b^2 + b * c + c^2) + (b^2 + 16 * c * a) / (c^2 + c * a + a^2) + (c^2 + 16 * a * b) / (a^2 + a * b + b^2) \u2265 20 / 3  := by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  have h\u2080 : 0 < b * c := by positivity\n  have h\u2081 : 0 < c * a := by positivity\n  have h\u2082 : 0 < a * b := by positivity\n  have h\u2083 : 0 < (b * c) * (c * a) := by positivity\n  have h\u2084 : 0 < (c * a) * (a * b) := by positivity\n  have h\u2085 : 0 < (a * b) * (b * c) := by positivity\n  field_simp [h\u2080, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a^2 - b^2), sq_nonneg (b^2 - c^2), sq_nonneg (c^2 - a^2),\n    sq_nonneg (a^2 - 2 * a * b + b^2), sq_nonneg (b^2 - 2 * b * c + c^2), sq_nonneg (c^2 - 2 * c * a + a^2)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a / (2 * a + 3 * b))^(2 / 5) + (b / (2 * b + 3 * c))^(2 / 5) + (c / (2 * c + 3 * a))^(2 / 5) \u2264 3 / (5^(2 / 5)) := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : Real.sqrt ((a * b) / (a ^ 2 + b ^ 2)) + Real.sqrt ((b * c) / (b ^ 2 + c ^ 2)) + Real.sqrt ((a * c) / (a ^ 2 + c ^ 2)) \u2264 (Real.sqrt (2) + 1) * 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n  Real.sqrt ((a * b) / (a ^ 2 + b ^ 2)) +\n    Real.sqrt ((b * c) / (b ^ 2 + c ^ 2)) +\n    Real.sqrt ((a * c) / (a ^ 2 + c ^ 2)) \u2264 (Real.sqrt (2) + 1) * 2:= by\n  have h\u2080 : 0 \u2264 Real.sqrt 2 := Real.sqrt_nonneg 2\n  have h\u2081 : Real.sqrt ((a * b) / (a ^ 2 + b ^ 2)) \u2264 1 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 rw [div_le_iff (by positivity)]\n      nlinarith [sq_nonneg (a - b)]\n  have h\u2082 : Real.sqrt ((b * c) / (b ^ 2 + c ^ 2)) \u2264 1 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 rw [div_le_iff (by positivity)]\n      nlinarith [sq_nonneg (b - c)]\n  have h\u2083 : Real.sqrt ((a * c) / (a ^ 2 + c ^ 2)) \u2264 1 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 rw [div_le_iff (by positivity)]\n      nlinarith [sq_nonneg (a - c)]\n  nlinarith [sq_sqrt (show 0 \u2264 2 by norm_num)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n  Real.sqrt ((a * b) / (a ^ 2 + b ^ 2)) +\n    Real.sqrt ((b * c) / (b ^ 2 + c ^ 2)) +\n    Real.sqrt ((a * c) / (a ^ 2 + c ^ 2)) \u2264 (Real.sqrt (2) + 1) * 2:= by\n  have h\u2080 : Real.sqrt ((a * b) / (a ^ 2 + b ^ 2)) \u2264 1 := by\n    have : (a * b) / (a ^ 2 + b ^ 2) \u2264 1 := by\n      rw [div_le_iff (add_pos (sq_pos_of_pos ha) (sq_pos_of_pos hb))]\n      nlinarith [sq_nonneg (a - b)]\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  have h\u2081 : Real.sqrt ((b * c) / (b ^ 2 + c ^ 2)) \u2264 1 := by\n    have : (b * c) / (b ^ 2 + c ^ 2) \u2264 1 := by\n      rw [div_le_iff (add_pos (sq_pos_of_pos hb) (sq_pos_of_pos hc))]\n      nlinarith [sq_nonneg (b - c)]\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  have h\u2082 : Real.sqrt ((a * c) / (a ^ 2 + c ^ 2)) \u2264 1 := by\n    have : (a * c) / (a ^ 2 + c ^ 2) \u2264 1 := by\n      rw [div_le_iff (add_pos (sq_pos_of_pos ha) (sq_pos_of_pos hc))]\n      nlinarith [sq_nonneg (a - c)]\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  calc\n    Real.sqrt ((a * b) / (a ^ 2 + b ^ 2)) + Real.sqrt ((b * c) / (b ^ 2 + c ^ 2)) +\n      Real.sqrt ((a * c) / (a ^ 2 + c ^ 2)) \u2264\n        1 + 1 + 1 := by linarith\n    _ = 3 := by norm_num\n    _ \u2264 (Real.sqrt 2 + 1) * 2 := by\n      nlinarith [Real.sqrt_nonneg 2, Real.sq_sqrt (show 0 \u2264 2 by norm_num)]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n  Real.sqrt ((a * b) / (a ^ 2 + b ^ 2)) +\n    Real.sqrt ((b * c) / (b ^ 2 + c ^ 2)) +\n    Real.sqrt ((a * c) / (a ^ 2 + c ^ 2)) \u2264 (Real.sqrt (2) + 1) * 2:= by\n  have h\u2081 : Real.sqrt ((a * b) / (a ^ 2 + b ^ 2)) \u2264 1 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    positivity\n    rw [div_le_iff (by positivity)]\n    nlinarith [sq_nonneg (a - b)]\n  have h\u2082 : Real.sqrt ((b * c) / (b ^ 2 + c ^ 2)) \u2264 1 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    positivity\n    rw [div_le_iff (by positivity)]\n    nlinarith [sq_nonneg (b - c)]\n  have h\u2083 : Real.sqrt ((a * c) / (a ^ 2 + c ^ 2)) \u2264 1 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    positivity\n    rw [div_le_iff (by positivity)]\n    nlinarith [sq_nonneg (a - c)]\n  nlinarith [Real.sqrt_nonneg 2, sq_sqrt (show 0 \u2264 2 by norm_num),\n    Real.sqrt_nonneg (a * b / (a ^ 2 + b ^ 2) + b * c / (b ^ 2 + c ^ 2) + a * c / (a ^ 2 + c ^ 2))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n  Real.sqrt ((a * b) / (a ^ 2 + b ^ 2)) +\n    Real.sqrt ((b * c) / (b ^ 2 + c ^ 2)) +\n    Real.sqrt ((a * c) / (a ^ 2 + c ^ 2)) \u2264 (Real.sqrt (2) + 1) * 2:= by\n  have : Real.sqrt ((a * b) / (a ^ 2 + b ^ 2)) \u2264 1 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 rw [div_le_iff (by positivity)]\n      nlinarith [sq_nonneg (a - b), mul_self_nonneg (a + b)]\n  have : Real.sqrt ((b * c) / (b ^ 2 + c ^ 2)) \u2264 1 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 rw [div_le_iff (by positivity)]\n      nlinarith [sq_nonneg (b - c), mul_self_nonneg (b + c)]\n  have : Real.sqrt ((a * c) / (a ^ 2 + c ^ 2)) \u2264 1 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 rw [div_le_iff (by positivity)]\n      nlinarith [sq_nonneg (a - c), mul_self_nonneg (a + c)]\n  nlinarith [Real.sqrt_nonneg 2, sq_sqrt (show 0 \u2264 2 by norm_num),\n    Real.sqrt_le_sqrt (show 2 \u2264 4 by norm_num)]"
  ]
 },
 {
  "old": ": \u00ac (\u2203 n : \u2115, 0 < n \u2227 39 = \u03c6 n) := by",
  "new": "(n : \u2115) (hn : 0 < n) : \u2200 p \u2208 Nat.factors n, 1 < p := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_factors_ge_one (n : \u2115) (hn : 0 < n) : \u2200 p \u2208 Nat.factors n, 1 < p  := by\n  intro p hp\n  have h := Nat.prime_of_mem_factors hp\n  exact Nat.Prime.one_lt h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_factors_ge_one (n : \u2115) (hn : 0 < n) : \u2200 p \u2208 Nat.factors n, 1 < p  := by\n  intro p hp\n  have h := Nat.prime_of_mem_factors hp\n  exact h.one_lt"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a^4 / b + b^4 / c + c^4 / a \u2265 a^3 + b^3 + c^3 + 25 * (a - b) * (b - c) * (c - a) := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a \u2264 b \u2227 b \u2264 c \u2192 a * (a - b) ^ 2 * (b - c) ^ 2 * c + b * (b - c) ^ 2 * (c - a) ^ 2 * a + c * (c - a) ^ 2 * (a - b) ^ 2 * b \u2265 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a \u2264 b \u2227 b \u2264 c \u2192\n    a * (a - b) ^ 2 * (b - c) ^ 2 * c + b * (b - c) ^ 2 * (c - a) ^ 2 * a + c * (c - a) ^ 2 * (a - b) ^ 2 * b \u2265 0:= by\n  rintro a b c \u27e8ha, hb, hc, hab, hbc\u27e9\n  have h\u2081 : a * (a - b) ^ 2 * (b - c) ^ 2 * c + b * (b - c) ^ 2 * (c - a) ^ 2 * a + c * (c - a) ^ 2 * (a - b) ^ 2 * b =\n      a * (a - b) ^ 2 * (b - c) ^ 2 * c + b * (b - c) ^ 2 * (c - a) ^ 2 * a + c * (c - a) ^ 2 * (a - b) ^ 2 * b := by\n    simp\n  rw [h\u2081]\n  have h\u2082 : 0 \u2264 a * (a - b) ^ 2 * (b - c) ^ 2 * c := by positivity\n  have h\u2083 : 0 \u2264 b * (b - c) ^ 2 * (c - a) ^ 2 * a := by positivity\n  have h\u2084 : 0 \u2264 c * (c - a) ^ 2 * (a - b) ^ 2 * b := by positivity\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a \u2264 b \u2227 b \u2264 c \u2192\n    a * (a - b) ^ 2 * (b - c) ^ 2 * c + b * (b - c) ^ 2 * (c - a) ^ 2 * a + c * (c - a) ^ 2 * (a - b) ^ 2 * b \u2265 0:= by\n  rintro a b c \u27e8h1, h2, h3, h4, h5\u27e9\n  have h6 : 0 \u2264 a * b := by nlinarith\n  have h7 : 0 \u2264 b * c := by nlinarith\n  have h8 : 0 \u2264 c * a := by nlinarith\n  have h9 : 0 \u2264 (a - b) ^ 2 := by nlinarith\n  have h10 : 0 \u2264 (b - c) ^ 2 := by nlinarith\n  have h11 : 0 \u2264 (c - a) ^ 2 := by nlinarith\n  positivity\n  <;> nlinarith\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a \u2264 b \u2227 b \u2264 c \u2192\n    a * (a - b) ^ 2 * (b - c) ^ 2 * c + b * (b - c) ^ 2 * (c - a) ^ 2 * a + c * (c - a) ^ 2 * (a - b) ^ 2 * b \u2265 0:= by\n  rintro a b c \u27e8ha, hb, hc, hab, hbc\u27e9\n  have : 0 \u2264 a * b := by nlinarith\n  have : 0 \u2264 b * c := by nlinarith\n  have : 0 \u2264 c * a := by nlinarith\n  have : 0 \u2264 (a - b) ^ 2 := by nlinarith\n  have : 0 \u2264 (b - c) ^ 2 := by nlinarith\n  have : 0 \u2264 (c - a) ^ 2 := by nlinarith\n  positivity"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 3) : 17 / 8 * (a - b) ^ 2 + (b - c) ^ 2 + (c - a) ^ 2 \u2265 (a - b * c) ^ 2 + (b - c * a) ^ 2 + (c - a * b) ^ 2 \u2227 (a - b * c) ^ 2 + (b - c * a) ^ 2 + (c - a * b) ^ 2 \u2265 1 / 2 * ((a - b) ^ 2 + (b - c) ^ 2 + (c - a) ^ 2) := by",
  "new": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : 2 * (a * b + b * c + c * a) * (1 / 2 * ((a - b) ^ 2 + (b - c) ^ 2 + (c - a) ^ 2)) \u2265 (a - b) ^ 2 * (b * c) + (b - c) ^ 2 * (c * a) + (c - a) ^ 2 * (a * b):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_of_three_nonneg (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : 2 * (a * b + b * c + c * a) * (1 / 2 * ((a - b) ^ 2 + (b - c) ^ 2 + (c - a) ^ 2)) \u2265 (a - b) ^ 2 * (b * c) + (b - c) ^ 2 * (c * a) + (c - a) ^ 2 * (a * b):= by\n  ring_nf\n  nlinarith [mul_nonneg ha hb, mul_nonneg hb hc, mul_nonneg hc ha, sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_of_three_nonneg (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : 2 * (a * b + b * c + c * a) * (1 / 2 * ((a - b) ^ 2 + (b - c) ^ 2 + (c - a) ^ 2)) \u2265 (a - b) ^ 2 * (b * c) + (b - c) ^ 2 * (c * a) + (c - a) ^ 2 * (a * b):= by\n  simp only [mul_assoc, mul_comm, mul_left_comm]\n  nlinarith [mul_nonneg ha hb, mul_nonneg hb hc, mul_nonneg hc ha,\n    mul_nonneg (sq_nonneg (a - b)) hb, mul_nonneg (sq_nonneg (b - c)) hc,\n    mul_nonneg (sq_nonneg (c - a)) ha]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_of_three_nonneg (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : 2 * (a * b + b * c + c * a) * (1 / 2 * ((a - b) ^ 2 + (b - c) ^ 2 + (c - a) ^ 2)) \u2265 (a - b) ^ 2 * (b * c) + (b - c) ^ 2 * (c * a) + (c - a) ^ 2 * (a * b):= by\n  ring_nf\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_nonneg ha hb, mul_nonneg hb hc, mul_nonneg hc ha,\n    mul_nonneg (sq_nonneg (a - b)) ha, mul_nonneg (sq_nonneg (b - c)) hb, mul_nonneg (sq_nonneg (c - a)) hc,\n    mul_nonneg (sq_nonneg (a - b)) hb, mul_nonneg (sq_nonneg (b - c)) hc, mul_nonneg (sq_nonneg (c - a)) ha]"
  ]
 },
 {
  "old": "(p n : \u2115) (hp : p.Prime) (hp1 : 1 < n \u2227 n \u2264 p) : (Nat.totient (\u2211 k in Finset.range p, n^k)) % p = 0 := by",
  "new": "(p m : \u2115) (hp : p.Prime) : Nat.Coprime p m \u2228 p \u2223 m := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p m : \u2115) (hp : p.Prime) : Nat.Coprime p m \u2228 p \u2223 m := by\n  apply or_iff_not_imp_right.2\n  intro hmn\n  exact hp.coprime_iff_not_dvd.2 hmn",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p m : \u2115) (hp : p.Prime) : Nat.Coprime p m \u2228 p \u2223 m := by\n  refine' or_iff_not_imp_right.mpr fun h => _\n  simp_all [Nat.coprime_iff_gcd_eq_one, Nat.Prime.coprime_iff_not_dvd]"
  ]
 },
 {
  "old": "(a b c : \u211d) (h : a>0 \u2227 b>0 \u2227 c>0 \u2227 a * b * c = 1): a ^ 3 * b ^ 3 + b ^ 3 * c ^ 3 + c ^ 3 * a ^ 3 + 15 \u2265 6 * (a + b + c) := by",
  "new": "(a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 a = 1 \u2227 b = 1 \u2228 a = 0 \u2227 b = 1 \u2228 a = 1 \u2227 b = 0 \u2228 a = 1 \u2227 b = 1 \u2228 a = 0 \u2227 b = 1 \u2228 a = 1 \u2227 b = 0 \u2228 a = 1 \u2227 b = 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) :\n    a = 1 \u2227 b = 1 \u2228 a = 1 \u2227 b = 1 \u2228 a = 0 \u2227 b = 1 \u2228 a = 1 \u2227 b = 0 \u2228 a = 1 \u2227 b = 1 \u2228 a = 0 \u2227 b = 1 \u2228 a = 1 \u2227 b = 0 \u2228 a = 1 \u2227 b = 1:= by\n  rw [mul_comm] at h\n  rcases Nat.eq_one_of_mul_eq_one_right h with (h | h) <;>\n    aesop\n  <;>\n    aesop\n  <;>\n    aesop\n  <;>\n    aesop\n  <;>\n    aesop\n  <;>\n    aesop\n  <;>\n    aesop\n  <;>\n    aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) :\n    a = 1 \u2227 b = 1 \u2228 a = 1 \u2227 b = 1 \u2228 a = 0 \u2227 b = 1 \u2228 a = 1 \u2227 b = 0 \u2228 a = 1 \u2227 b = 1 \u2228 a = 0 \u2227 b = 1 \u2228 a = 1 \u2227 b = 0 \u2228 a = 1 \u2227 b = 1:= by\n  cases a <;> cases b <;> simp_all [mul_comm, mul_left_comm, mul_assoc]\n  <;> omega\n  <;> simp_all\n  <;> omega\n  <;> simp_all\n  <;> omega\n  <;> simp_all\n  <;> omega\n  <;> simp_all\n  <;> omega\n  <;> simp_all\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) :\n    a = 1 \u2227 b = 1 \u2228 a = 1 \u2227 b = 1 \u2228 a = 0 \u2227 b = 1 \u2228 a = 1 \u2227 b = 0 \u2228 a = 1 \u2227 b = 1 \u2228 a = 0 \u2227 b = 1 \u2228 a = 1 \u2227 b = 0 \u2228 a = 1 \u2227 b = 1:= by\n  have h\u2081 : a = 1 \u2227 b = 1 := by\n    cases a <;> cases b <;> simp_all\n  tauto\n  <;> simp_all\n  <;> aesop\n  <;> simp_all\n  <;> aesop\n  <;> simp_all\n  <;> aesop\n  <;> simp_all\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) :\n    a = 1 \u2227 b = 1 \u2228 a = 1 \u2227 b = 1 \u2228 a = 0 \u2227 b = 1 \u2228 a = 1 \u2227 b = 0 \u2228 a = 1 \u2227 b = 1 \u2228 a = 0 \u2227 b = 1 \u2228 a = 1 \u2227 b = 0 \u2228 a = 1 \u2227 b = 1:= by\n  cases a <;> cases b <;> simp_all\n  <;> try omega\n  <;> simp_all\n  <;> try omega\n  <;> simp_all\n  <;> try omega\n  <;> simp_all\n  <;> try omega"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (Real.sqrt ((2 * a) / (b + c)) + Real.sqrt ((2 * b) / (c + a)) + Real.sqrt ((2 * c) / (a + b))) \u2264 3 := by",
  "new": ": Real.sqrt (Real.sqrt (2 / 7) + 1) + Real.sqrt (Real.sqrt (2 / 7) + 1) \u2264 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (2 / 7) + 1) + Real.sqrt (Real.sqrt (2 / 7) + 1) \u2264 3:= by\n  have h : Real.sqrt (2 / 7) \u2264 1 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 linarith\n    \u00b7 norm_num\n  have h' : Real.sqrt (Real.sqrt (2 / 7) + 1) \u2264 Real.sqrt (1 + 1) := by\n    apply Real.sqrt_le_sqrt\n    linarith\n  have h'' : Real.sqrt (1 + 1) \u2264 3 / 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 linarith\n    \u00b7 norm_num\n  linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) : a * \u221a(a^2 + b^2) + b * \u221a(b^2 + c^2) + c * \u221a(c^2 + a^2) \u2264 (a + b + c)^2 / 2 := by",
  "new": ": Real.sqrt (Real.sqrt (2 * 16 + 3 * 3) + 2 * 2) \u2264 5:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt (Real.sqrt (2 * 16 + 3 * 3) + 2 * 2) \u2264 5:= by\n  have h\u2080 : Real.sqrt (2 * 16 + 3 * 3) \u2264 7 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  have h\u2081 : Real.sqrt (Real.sqrt (2 * 16 + 3 * 3) + 2 * 2) \u2264 5 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  exact h\u2081"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b + c = 1) : (2 * a ^ 2 + b ^ 2 + c ^ 2) / (2 * (1 - c)) + (2 * b ^ 2 + c ^ 2 + a ^ 2) / (2 * (1 - b)) + (2 * c ^ 2 + a ^ 2 + b ^ 2) / (2 * (1 - a)) \u2265 1 / (3 * (a * b + b * c + c * a)) := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 1 \u2192 a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2 + a ^ 2 * c ^ 2 + b ^ 2 * c ^ 2 + a ^ 2 + b ^ 2 + c ^ 2 \u2265 a ^ 2 * b * c + b ^ 2 * a * c + c ^ 2 * a * b + a * b + b * c + c * a:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 1 \u2192\n    a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2 + a ^ 2 * c ^ 2 + b ^ 2 * c ^ 2 + a ^ 2 + b ^ 2 + c ^ 2 \u2265 a ^ 2 * b * c + b ^ 2 * a * c + c ^ 2 * a * b + a * b + b * c + c * a:= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have h\u2081 : 0 < a * b := mul_pos ha hb\n  have h\u2082 : 0 < b * c := mul_pos hb hc\n  have h\u2083 : 0 < c * a := mul_pos hc ha\n  have h\u2084 : 0 < a * b * c := by positivity\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 1 \u2192\n    a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2 + a ^ 2 * c ^ 2 + b ^ 2 * c ^ 2 + a ^ 2 + b ^ 2 + c ^ 2 \u2265 a ^ 2 * b * c + b ^ 2 * a * c + c ^ 2 * a * b + a * b + b * c + c * a:= by\n  rintro a b c \u27e8ha : 0 < a, hb : 0 < b, hc : 0 < c, habc : a + b + c = 1\u27e9\n  have : 0 < a * b := by positivity\n  have : 0 < b * c := by positivity\n  have : 0 < c * a := by positivity\n  have : 0 < a * b * c := by positivity\n  nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a),\n    mul_self_nonneg (a - b * c), mul_self_nonneg (b - a * c), mul_self_nonneg (c - a * b)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^2 / (a^2 + 2 * b * c) + b^2 / (b^2 + 2 * c * a) + c^2 / (c^2 + 2 * a * b) \u2265 2 * a^3 * b / ((a^2 + b^2) * (2 * a^2 + b^2)) + 2 * b^3 * c / ((b^2 + c^2) * (2 * b^2 + c^2)) + 2 * c^3 * a / ((c^2 + a^2) * (2 * c^2 + a^2))) := by",
  "new": "(ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^2 / (a^2 + 2 * b * c) + b^2 / (b^2 + 2 * c * a) + c^2 / (c^2 + 2 * a * b) \u2265 3 / 4) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^2 / (a^2 + 2 * b * c) + b^2 / (b^2 + 2 * c * a) + c^2 / (c^2 + 2 * a * b) \u2265 3 / 4) := by\n  cases' le_total a b with hab hab <;>\n  cases' le_total b c with hbc hbc <;>\n  cases' le_total c a with hca hca <;>\n  simp_all [add_assoc, add_comm, add_left_comm] <;>\n  apply le_of_sub_nonneg <;>\n  field_simp <;>\n  ring_nf <;>\n  positivity\n  <;> nlinarith"
  ]
 },
 {
  "old": "(a b : \u211d) (ha : 0 < a) (hb : 0 < b) : (a / (a + 2 * b ^ 4) + b / (b + 2 * a ^ 4)) \u2265 1 / (1 + a ^ 2 * b ^ 2) := by",
  "new": "(x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : 0 < x * y) : (x + y) * (1 / (x + y)) * (1 / (x * y)) \u2264 1 / (x * y) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : 0 < x * y) : (x + y) * (1 / (x + y)) * (1 / (x * y)) \u2264 1 / (x * y) := by\n  have h : (x + y) * (1 / (x + y)) = 1 := by\n    field_simp [hxy]\n  have h2 : (x * y) * (1 / (x * y)) = 1 := by\n    field_simp [hxy]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : 0 < x * y) : (x + y) * (1 / (x + y)) * (1 / (x * y)) \u2264 1 / (x * y) := by\n  rcases eq_or_ne (x * y) 0 with hxy2 | hxy2\n  <;> simp_all\n  <;> apply le_of_sub_nonneg\n  <;> field_simp\n  <;> ring_nf\n  <;> positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : 0 < x * y) : (x + y) * (1 / (x + y)) * (1 / (x * y)) \u2264 1 / (x * y) := by\n  have h\u2080 : 0 < x * y := hxy\n  have h\u2081 : (x + y) * (1 / (x + y)) = 1 := by\n    have h\u2082 : x + y > 0 := by linarith\n    field_simp [h\u2082]\n  have h\u2082 : (x + y) * (1 / (x + y)) * (1 / (x * y)) \u2264 1 / (x * y) := by\n    rw [h\u2081]\n    linarith\n  exact h\u2082"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : (c + d + 4 * a) / (a + b) + (d + a + 4 * b) / (b + c) + (a + b + 4 * c) / (c + d) + (b + c + 4 * d) / (d + a) \u2265 12 := by",
  "new": ": \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192 (c + d + 4 * a) / (a + b) + (d + a + 4 * b) / (b + c) + (a + b + 4 * c) / (c + d) + (b + c + 4 * d) / (d + a) \u2265 12:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192\n   (c + d + 4 * a) / (a + b) + (d + a + 4 * b) / (b + c) + (a + b + 4 * c) / (c + d) + (b + c + 4 * d) / (d + a) \u2265 12:= by\n  intro a b c d ha hb hc hd\n  field_simp [add_comm]\n  rw [le_div_iff (by positivity), mul_comm]\n  nlinarith [sq_nonneg (a - b + c - d), sq_nonneg (a + b - c - d), sq_nonneg (a - b - c + d),\n    sq_nonneg (a + b + c - d), mul_pos ha hb, mul_pos ha hc, mul_pos ha hd, mul_pos hb hc,\n    mul_pos hb hd, mul_pos hc hd, mul_pos (mul_pos ha hb) hc, mul_pos (mul_pos ha hb) hd,\n    mul_pos (mul_pos ha hc) hd, mul_pos (mul_pos hb hd) ha, mul_pos (mul_pos hc hd) ha,\n    mul_pos (mul_pos hb hd) hc]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192\n   (c + d + 4 * a) / (a + b) + (d + a + 4 * b) / (b + c) + (a + b + 4 * c) / (c + d) + (b + c + 4 * d) / (d + a) \u2265 12:= by\n  intro a b c d ha hb hc hd\n  field_simp [add_assoc]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b + c - d), sq_nonneg (a + b - c - d), sq_nonneg (a - b - c + d),\n    mul_pos ha hb, mul_pos hc hd, mul_pos ha hc, mul_pos hd ha, mul_pos hb hd, mul_pos ha hb,\n    mul_pos hd hc, mul_pos hb hc, mul_pos hd hd]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192\n   (c + d + 4 * a) / (a + b) + (d + a + 4 * b) / (b + c) + (a + b + 4 * c) / (c + d) + (b + c + 4 * d) / (d + a) \u2265 12:= by\n  intro a b c d h\u2080 h\u2081 h\u2082 h\u2083\n  field_simp [add_assoc]\n  rw [le_div_iff (by positivity), \u2190 sub_nonneg]\n  ring_nf\n  nlinarith [sq_nonneg (a - b + c - d),\n    sq_nonneg (a + b - c - d),\n    sq_nonneg (a - b - c + d),\n    sq_nonneg (a + b + c + d),\n    mul_pos h\u2080 h\u2081, mul_pos h\u2080 h\u2082, mul_pos h\u2080 h\u2083, mul_pos h\u2081 h\u2082, mul_pos h\u2081 h\u2083, mul_pos h\u2082 h\u2083]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : (3 * a + b) / (b + c) + (3 * b + c) / (c + a) + (3 * c + a) / (a + b) \u2265 6 * Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) / (a + b + c) := by",
  "new": ": \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 (a * b) ^ 2 / b ^ 2 + (b * c) ^ 2 / c ^ 2 + (c * a) ^ 2 / a ^ 2 \u2265 a * b + b * c + c * a - (a + b + c):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192\n   (a * b) ^ 2 / b ^ 2 + (b * c) ^ 2 / c ^ 2 + (c * a) ^ 2 / a ^ 2 \u2265 a * b + b * c + c * a - (a + b + c):= by\n  intro a b c \u27e8ha, hb, hc\u27e9\n  have h\u2081 : 0 < a * b := by positivity\n  have h\u2082 : 0 < b * c := by positivity\n  have h\u2083 : 0 < c * a := by positivity\n  have h\u2084 : (a * b) ^ 2 / b ^ 2 = a ^ 2 := by field_simp; ring\n  have h\u2085 : (b * c) ^ 2 / c ^ 2 = b ^ 2 := by field_simp; ring\n  have h\u2086 : (c * a) ^ 2 / a ^ 2 = c ^ 2 := by field_simp; ring\n  have h\u2087 : a ^ 2 + b ^ 2 + c ^ 2 \u2265 a * b + b * c + c * a := by\n    linarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192\n   (a * b) ^ 2 / b ^ 2 + (b * c) ^ 2 / c ^ 2 + (c * a) ^ 2 / a ^ 2 \u2265 a * b + b * c + c * a - (a + b + c):= by\n  intro a b c habc\n  have ha : 0 < a := habc.1\n  have hb : 0 < b := habc.2.1\n  have hc : 0 < c := habc.2.2\n  have h\u2080 : (a * b) ^ 2 / b ^ 2 = a ^ 2 := by\n    field_simp\n    ring\n  have h\u2081 : (b * c) ^ 2 / c ^ 2 = b ^ 2 := by\n    field_simp\n    ring\n  have h\u2082 : (c * a) ^ 2 / a ^ 2 = c ^ 2 := by\n    field_simp\n    ring\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> simp [h\u2080, h\u2081, h\u2082]\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192\n   (a * b) ^ 2 / b ^ 2 + (b * c) ^ 2 / c ^ 2 + (c * a) ^ 2 / a ^ 2 \u2265 a * b + b * c + c * a - (a + b + c):= by\n  rintro a b c \u27e8h\u2081, h\u2082, h\u2083\u27e9\n  have : 0 < a * b := by positivity\n  have : 0 < b * c := by positivity\n  have : 0 < c * a := by positivity\n  have : (a * b) ^ 2 / b ^ 2 + (b * c) ^ 2 / c ^ 2 + (c * a) ^ 2 / a ^ 2 \u2265 a * b + b * c + c * a - (a + b + c) := by\n    have : (a * b) ^ 2 / b ^ 2 = (a ^ 2) := by field_simp; ring\n    have : (b * c) ^ 2 / c ^ 2 = (b ^ 2) := by field_simp; ring\n    have : (c * a) ^ 2 / a ^ 2 = (c ^ 2) := by field_simp; ring\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  exact this"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : (a^8 / (b * (a^4 + b^4)) + b^8 / (c * (b^4 + c^4)) + c^8 / (a * (c^4 + a^4))) \u2265 3 / 2 := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : 0 < a * b) (hbc : 0 < b * c) (hca : 0 < c * a) (habc : a * b * c = 1) : (a^4 + b^4 + c^4) * (b^4 + a^4 + c^4) * (c^4 + a^4 + b^4) \u2265 (a^2 * b^2 + b^2 * c^2 + c^2 * a^2) * (a^2 * b^2 + b^2 * c^2 + c^2 * a^2) * (a^2 * b^2 + b^2 * c^2 + c^2 * a^2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0  < c) (hab : 0 < a * b) (hbc : 0 < b * c) (hca : 0 < c * a) (habc : a * b * c = 1) : (a^4 + b^4 + c^4) * (b^4 + a^4 + c^4) * (c^4 + a^4 + b^4) \u2265 (a^2 * b^2 + b^2 * c^2 + c^2 * a^2) * (a^2 * b^2 + b^2 * c^2 + c^2 * a^2) * (a^2 * b^2 + b^2 * c^2 + c^2 * a^2):= by\n  refine' mul_le_mul (mul_le_mul _ _ (by positivity) (by positivity)) _ (by positivity) (by positivity)\n  all_goals nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0  < c) (hab : 0 < a * b) (hbc : 0 < b * c) (hca : 0 < c * a) (habc : a * b * c = 1) : (a^4 + b^4 + c^4) * (b^4 + a^4 + c^4) * (c^4 + a^4 + b^4) \u2265 (a^2 * b^2 + b^2 * c^2 + c^2 * a^2) * (a^2 * b^2 + b^2 * c^2 + c^2 * a^2) * (a^2 * b^2 + b^2 * c^2 + c^2 * a^2):= by\n  refine'\n    mul_le_mul\n      (mul_le_mul _ _ (by positivity) (by positivity))\n      _\n      (by positivity)\n      (by positivity)\n  all_goals\n    nlinarith [sq_nonneg (a^2 - b^2), sq_nonneg (b^2 - c^2), sq_nonneg (c^2 - a^2),\n      mul_self_nonneg (a^2 - b^2), mul_self_nonneg (b^2 - c^2), mul_self_nonneg (c^2 - a^2)]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (habc : a * b * c = 1) : 9 / (2 * (a * b + b * c + c * a)) \u2264 a * b / (a + b) + b * c / (b + c) + c * a / (c + a) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) : x^2 / (x + y) + y^2 / (y + z) + z^2 / (z + x) \u2265 x * y / (x + y + z) + y * z / (x + y + z) + z * x / (x + y + z):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h : x * y * z = 1) :\n    x^2 / (x + y) + y^2 / (y + z) + z^2 / (z + x) \u2265 x * y / (x + y + z) + y * z / (x + y + z) + z * x / (x + y + z):= by\n  have h\u2081 : 0 < x + y := by linarith\n  have h\u2082 : 0 < y + z := by linarith\n  have h\u2083 : 0 < z + x := by linarith\n  have h\u2084 : 0 < (x + y) * (y + z) * (z + x) := by positivity\n  have h\u2085 : 0 < x * y + y * z + z * x := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (y ^ 2 - z ^ 2), sq_nonneg (z ^ 2 - x ^ 2),\n    sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h : x * y * z = 1) :\n    x^2 / (x + y) + y^2 / (y + z) + z^2 / (z + x) \u2265 x * y / (x + y + z) + y * z / (x + y + z) + z * x / (x + y + z):= by\n  have H\u2080 : 0 < x + y + z := by linarith\n  have H\u2081 : 0 < x * y := by positivity\n  have H\u2082 : 0 < y * z := by positivity\n  have H\u2083 : 0 < z * x := by positivity\n  have H\u2084 : 0 < (x + y) * (y + z) * (z + x) := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x ^ 2 - y * z), sq_nonneg (y ^ 2 - z * x), sq_nonneg (z ^ 2 - x * y),\n    sq_nonneg (x ^ 2 + y * z - y ^ 2 - z * x), sq_nonneg (y ^ 2 + z * x - z ^ 2 - x * y),\n    sq_nonneg (z ^ 2 + x * y - x ^ 2 - y * z)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a \u2260 b) (hbc : b \u2260 c) (hca : a \u2260 c) : (a^3 / b + b^3 / c + c^3 / a) \u2265 a^2 + b^2 + c^2 + (120 * (a - b)^2 * (b - c)^2 * (c - a)^2)^(1 / 3) := by",
  "new": ": \u2200 a b c : \u211d, a \u2260 b \u2192 b \u2260 c \u2192 c \u2260 a \u2192 0 < a \u2192 0 < b \u2192 0 < c \u2192 a + b + c = 3 \u2192 (a^3 / b + b^3 / c + c^3 / a) \u2265 a^2 + b^2 + c^2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2260 b \u2192 b \u2260 c \u2192 c \u2260 a \u2192 0 < a \u2192 0 < b \u2192 0 < c \u2192 a + b + c = 3 \u2192\n   (a^3 / b + b^3 / c + c^3 / a) \u2265 a^2 + b^2 + c^2:= by\n  rintro a b c h\u2080 h\u2081 h\u2082 h\u2083 h\u2084 h\u2085 h\u2086\n  have : 0 < a * b := by positivity\n  have : 0 < b * c := by positivity\n  have : 0 < c * a := by positivity\n  have : 0 < a * b * c := by positivity\n  field_simp [h\u2080, h\u2081, h\u2082]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_nonneg (sq_nonneg (a - b)) h\u2083.le, mul_nonneg (sq_nonneg (b - c)) h\u2084.le,\n    mul_nonneg (sq_nonneg (c - a)) h\u2085.le]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2260 b \u2192 b \u2260 c \u2192 c \u2260 a \u2192 0 < a \u2192 0 < b \u2192 0 < c \u2192 a + b + c = 3 \u2192\n   (a^3 / b + b^3 / c + c^3 / a) \u2265 a^2 + b^2 + c^2:= by\n  intro a b c h1 h2 h3 h4 h5 h6 h7\n  have h8 : 0 < a + b + c := by linarith\n  have h9 : 0 < a * b := by positivity\n  have h10 : 0 < b * c := by positivity\n  have h11 : 0 < c * a := by positivity\n  have h12 : 0 < a * b * c := by positivity\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a^2 - b * c), mul_self_nonneg (b^2 - c * a),\n    mul_self_nonneg (c^2 - a * b)]\n  <;> linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2260 b \u2192 b \u2260 c \u2192 c \u2260 a \u2192 0 < a \u2192 0 < b \u2192 0 < c \u2192 a + b + c = 3 \u2192\n   (a^3 / b + b^3 / c + c^3 / a) \u2265 a^2 + b^2 + c^2:= by\n  intro a b c h\u2081 h\u2082 h\u2083 h\u2084 h\u2085 h\u2086 h\u2087\n  have h\u2088 : 0 < b * c := by nlinarith\n  have h\u2089 : 0 < c * a := by nlinarith\n  have h\u2081\u2080 : 0 < a * b := by nlinarith\n  have h\u2081\u2081 : 0 < a * b * c := by nlinarith\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087, h\u2088, h\u2089, h\u2081\u2080, h\u2081\u2081]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a^2 - b * c), mul_self_nonneg (b^2 - c * a), mul_self_nonneg (c^2 - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2260 b \u2192 b \u2260 c \u2192 c \u2260 a \u2192 0 < a \u2192 0 < b \u2192 0 < c \u2192 a + b + c = 3 \u2192\n   (a^3 / b + b^3 / c + c^3 / a) \u2265 a^2 + b^2 + c^2:= by\n  intro a b c h\u2081 h\u2082 h\u2083 h\u2084 h\u2085 h\u2086 h\u2087\n  have h\u2088 : 0 < a * b := by positivity\n  have h\u2089 : 0 < b * c := by positivity\n  have h\u2081\u2080 : 0 < c * a := by positivity\n  have h\u2081\u2081 : 0 < a * b * c := by positivity\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2088, h\u2089, h\u2081\u2080, h\u2081\u2081]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a^2 - b * c), mul_self_nonneg (b^2 - c * a), mul_self_nonneg (c^2 - a * b)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a + b) ^ 2 / a / b + (b + c) ^ 2 / b / c + (c + a) ^ 2 / c / a \u2265 9 + 2 * (a / (b + c) + b / (c + a) + c / (a + b)) := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 (a + b) ^ 2 / a / b + (b + c) ^ 2 / b / c + (c + a) ^ 2 / c / a \u2265 9 + 2 * (a / (b + c) + b / (c + a) + c / (a + b)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 (a + b) ^ 2 / a / b + (b + c) ^ 2 / b / c + (c + a) ^ 2 / c / a \u2265 9 + 2 * (a / (b + c) + b / (c + a) + c / (a + b)) := by\n  rintro a b c \u27e8a_pos, b_pos, c_pos\u27e9\n  have h1 : 0 < a * b := mul_pos a_pos b_pos\n  have h2 : 0 < b * c := mul_pos b_pos c_pos\n  have h3 : 0 < c * a := mul_pos c_pos a_pos\n  have h4 : 0 < a * b * c := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b),\n    sq_nonneg (a * b * c), sq_nonneg (a * b * c * (a - b)), sq_nonneg (a * b * c * (b - c)),\n    sq_nonneg (a * b * c * (c - a)), sq_nonneg (a * b * c * (a * b - a * c)),\n    sq_nonneg (a * b * c * (b * c - a * b)), sq_nonneg (a * b * c * (c * a - b * c))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 (a + b) ^ 2 / a / b + (b + c) ^ 2 / b / c + (c + a) ^ 2 / c / a \u2265 9 + 2 * (a / (b + c) + b / (c + a) + c / (a + b)) := by\n  rintro a b c \u27e8ha : 0 < a, hb : 0 < b, hc : 0 < c\u27e9\n  have h\u2081 : 0 < a * b := by positivity\n  have h\u2082 : 0 < b * c := by positivity\n  have h\u2083 : 0 < c * a := by positivity\n  have h\u2084 : 0 < a * b * c := by positivity\n  have h\u2085 : 0 < (a * b) * (b * c) := by positivity\n  have h\u2086 : 0 < (b * c) * (c * a) := by positivity\n  have h\u2087 : 0 < a * b * c * (a * b + b * c + c * a) := by positivity\n  field_simp [ha, hb, hc, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b),\n    sq_nonneg (a * b * c), sq_nonneg (a * b * c * (a - b)), sq_nonneg (a * b * c * (b - c)),\n    sq_nonneg (a * b * c * (c - a)), sq_nonneg (a * b * c * (a * b - a * c)),\n    sq_nonneg (a * b * c * (b * c - a * b)), sq_nonneg (a * b * c * (c * a - b * c))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 (a + b) ^ 2 / a / b + (b + c) ^ 2 / b / c + (c + a) ^ 2 / c / a \u2265 9 + 2 * (a / (b + c) + b / (c + a) + c / (a + b)) := by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  have : 0 < a * b := by positivity\n  have : 0 < b * c := by positivity\n  have : 0 < c * a := by positivity\n  have h\u2080 : 0 < a * b * c := by positivity\n  have h\u2081 : 0 < a ^ 2 * b ^ 2 * c ^ 2 := by positivity\n  field_simp [h\u2080, h\u2081]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b),\n    sq_nonneg (a * b * c), sq_nonneg (a * b * c * (a - b)), sq_nonneg (a * b * c * (b - c)),\n    sq_nonneg (a * b * c * (c - a)), sq_nonneg (a * b * c * (a * b - b * c)),\n    sq_nonneg (a * b * c * (b * c - c * a)), sq_nonneg (a * b * c * (c * a - a * b))]"
  ]
 },
 {
  "old": "(k : \u211d) (h : k \u2265 1) (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : (a^k / (1 - a^2) + b^k / (1 - b^2) + c^k / (1 - c^2)) \u2265 3^(3 - k) / 8 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 1) : x^((1:\u211d) / 3) + y^((1:\u211d) / 3) + z^((1:\u211d) / 3) \u2264 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 1) :\n       x^((1:\u211d) / 3) + y^((1:\u211d) / 3) + z^((1:\u211d) / 3) \u2264 3:= by\n  have h\u2080 : x + y + z = 1 := h\n  have h\u2081 : x^((1:\u211d) / 3) \u2264 1 := by\n    exact rpow_le_one (by linarith) (by linarith) (by linarith)\n  have h\u2082 : y^((1:\u211d) / 3) \u2264 1 := by\n    exact rpow_le_one (by linarith) (by linarith) (by linarith)\n  have h\u2083 : z^((1:\u211d) / 3) \u2264 1 := by\n    exact rpow_le_one (by linarith) (by linarith) (by linarith)\n  linarith\n  <;> simp [h\u2080, h\u2081, h\u2082, h\u2083]\n  <;> linarith\n  <;> simp [h\u2080, h\u2081, h\u2082, h\u2083]\n  <;> linarith\n  <;> simp [h\u2080, h\u2081, h\u2082, h\u2083]\n  <;> linarith\n  <;> simp [h\u2080, h\u2081, h\u2082, h\u2083]\n  <;> linarith"
  ]
 },
 {
  "old": "(x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x + y = 1) : x^3 * y^3 * (x^3 + y^3) \u2264 2 := by",
  "new": "(x y : \u2115) (hxy : x * y = 1) : Nat.Coprime x y \u2228 x = y:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (x y : \u2115) (hxy : x * y = 1) :\n  Nat.Coprime x y \u2228 x = y:= by\n  rcases Nat.eq_zero_or_pos x with hx | hx\n  all_goals rcases Nat.eq_zero_or_pos y with hy | hy\n  all_goals simp_all [Nat.coprime_iff_gcd_eq_one, Nat.gcd_mul_left, Nat.gcd_mul_right]\n  all_goals omega\n  all_goals omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (x y : \u2115) (hxy : x * y = 1) :\n  Nat.Coprime x y \u2228 x = y:= by\n  rcases Nat.eq_zero_or_pos x with (rfl | hx) <;>\n  rcases Nat.eq_zero_or_pos y with (rfl | hy) <;>\n  simp_all [Nat.mul_eq_zero]\n  <;>\n  simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;>\n  omega"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a * Real.sqrt (b * c) / Real.sqrt ((a + b) * (a + c)) + b * Real.sqrt (c * a) / Real.sqrt ((b + c) * (b + a)) + c * Real.sqrt (a * b) / Real.sqrt ((c + a) * (c + b))) \u2264 (a * b * c) / 2 * (1 / a ^ 2 + 1 / b ^ 2 + 1 / c ^ 2) := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a * b * c * (1 / a ^ 2 + 1 / b ^ 2 + 1 / c ^ 2) \u2265 a * b * c * (1 / a * (1 / b + 1 / c)):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_aux10 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c)  :\n     a * b * c * (1 / a ^ 2 + 1 / b ^ 2 + 1 / c ^ 2) \u2265 a * b * c * (1 / a * (1 / b + 1 / c)):= by\n  ring_nf at ha hb hc \u22a2\n  nlinarith [sq_nonneg (a\u207b\u00b9 - b\u207b\u00b9), sq_nonneg (a\u207b\u00b9 - c\u207b\u00b9), sq_nonneg (b\u207b\u00b9 - c\u207b\u00b9), mul_pos ha hb, mul_pos ha hc, mul_pos hb hc, mul_pos ha (mul_pos hb hc)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_aux10 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c)  :\n     a * b * c * (1 / a ^ 2 + 1 / b ^ 2 + 1 / c ^ 2) \u2265 a * b * c * (1 / a * (1 / b + 1 / c)):= by\n  apply mul_le_mul_of_nonneg_left _ (mul_nonneg (mul_nonneg ha.le hb.le) hc.le)\n  ring_nf\n  nlinarith [sq_nonneg (a\u207b\u00b9 - b\u207b\u00b9), sq_nonneg (a\u207b\u00b9 - c\u207b\u00b9), sq_nonneg (b\u207b\u00b9 - c\u207b\u00b9),\n    mul_self_nonneg (a * b), mul_self_nonneg (b * c), mul_self_nonneg (c * a)]"
  ]
 },
 {
  "old": "(a b : \u211d) : 8 * Real.sqrt (2 * (a ^ 2 + b ^ 2)) \u2265 7 * (a + b) + (4 * (a ^ 3 + b ^ 3))^(1/3) := by",
  "new": ": \u2200 a b : \u211d, 8 * Real.sqrt (2 * (a ^ 2 + b ^ 2)) \u2265 7 * (a + b) + (4 * (a ^ 3 + b ^ 3))^(1/3) \u2227 (\u2200 x y : \u211d, (x + y) ^ 2 / (x ^ 2 + y ^ 2) \u2264 2) \u2192 (\u2200 a b : \u211d, (a - b) ^ 2 / (a ^ 2 + b ^ 2) \u2264 2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_8337 : \u2200 a b : \u211d, 8 * Real.sqrt (2 * (a ^ 2 + b ^ 2)) \u2265 7 * (a + b) + (4 * (a ^ 3 + b ^ 3))^(1/3) \u2227 (\u2200 x y : \u211d, (x + y) ^ 2 / (x ^ 2 + y ^ 2) \u2264 2) \u2192 (\u2200 a b : \u211d, (a - b) ^ 2 / (a ^ 2 + b ^ 2) \u2264 2):= by\n  intro a b h\u2080\n  intro a b\n  have h\u2081 : (a - b) ^ 2 / (a ^ 2 + b ^ 2) \u2264 2 := by\n    apply div_le_of_nonneg_of_le_mul\n    all_goals nlinarith [sq_nonneg (a - b), sq_nonneg (a + b)]\n  exact h\u2081",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_8337 : \u2200 a b : \u211d, 8 * Real.sqrt (2 * (a ^ 2 + b ^ 2)) \u2265 7 * (a + b) + (4 * (a ^ 3 + b ^ 3))^(1/3) \u2227 (\u2200 x y : \u211d, (x + y) ^ 2 / (x ^ 2 + y ^ 2) \u2264 2) \u2192 (\u2200 a b : \u211d, (a - b) ^ 2 / (a ^ 2 + b ^ 2) \u2264 2):= by\n  intro a b h\n  intro x y\n  have h\u2081 : (x - y) ^ 2 / (x ^ 2 + y ^ 2) \u2264 2 := by\n    have h\u2082 : (x - y) ^ 2 \u2264 2 * (x ^ 2 + y ^ 2) := by\n      nlinarith [sq_nonneg (x + y), sq_nonneg (x - y)]\n    exact div_le_of_nonneg_of_le_mul (add_nonneg (sq_nonneg x) (sq_nonneg y)) (by linarith) h\u2082\n  exact h\u2081"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a * b + b * c + c * a > 0) : (a / (b + c)) ^ 2 + (b / (c + a)) ^ 2 + (c / (a + b)) ^ 2 >= 9 * (a ^ 3 + b ^ 3 + c ^ 3) / (4 * (a ^ 2 + b ^ 2 + c ^ 2) * (a + b + c)) := by",
  "new": "(ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) : a * b / (b + c) + b * c / (c + a) + c * a / (a + b) \u2264 3 / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) :\n    a * b / (b + c) + b * c / (c + a) + c * a / (a + b) \u2264 3 / 2:= by\n  rcases eq_or_lt_of_le ha with (rfl | ha) <;>\n  rcases eq_or_lt_of_le hb with (rfl | hb) <;>\n  rcases eq_or_lt_of_le hc with (rfl | hc) <;>\n  simp_all [Nat.div_eq_of_lt, add_comm, add_left_comm, add_assoc] <;>\n  linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1): a^3 / (b + 1) / (c + 1) + b^3 / (c + 1) / (a + 1) + c^3 / (a + 1) / (b + 1) \u2265 3 / 4 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) : x^2 / y / z + y^2 / z / x + z^2 / x / y \u2265 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h : x * y * z = 1) :\n    x^2 / y / z + y^2 / z / x + z^2 / x / y \u2265 3:= by\n  have h1 : 0 < x * y := by positivity\n  have h2 : 0 < y * z := by positivity\n  have h3 : 0 < z * x := by positivity\n  have h4 : 0 < x * y * (y * z) := by positivity\n  have h5 : 0 < y * z * (z * x) := by positivity\n  have h6 : 0 < z * x * (x * y) := by positivity\n  field_simp [h]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h : x * y * z = 1) :\n    x^2 / y / z + y^2 / z / x + z^2 / x / y \u2265 3:= by\n  have h1 : 0 < x * y := by positivity\n  have h2 : 0 < y * z := by positivity\n  have h3 : 0 < z * x := by positivity\n  have h4 : 0 < x * y * (y * z) := by positivity\n  have h5 : 0 < y * z * (z * x) := by positivity\n  have h6 : 0 < z * x * (x * y) := by positivity\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h : x * y * z = 1) :\n    x^2 / y / z + y^2 / z / x + z^2 / x / y \u2265 3:= by\n  have h1 : 0 < x * y := mul_pos hx hy\n  have h2 : 0 < y * z := mul_pos hy hz\n  have h3 : 0 < z * x := mul_pos hz hx\n  have h4 : 0 < x * y * z := by positivity\n  have h5 : 0 < x * y * z * x := by positivity\n  have h6 : 0 < x * y * z * y := by positivity\n  have h7 : 0 < x * y * z * z := by positivity\n  have h8 : 0 < x * y * z * x * y := by positivity\n  have h9 : 0 < x * y * z * y * z := by positivity\n  have h10 : 0 < x * y * z * x * z := by positivity\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h : x * y * z = 1) :\n    x^2 / y / z + y^2 / z / x + z^2 / x / y \u2265 3:= by\n  have h1 : 0 < x * y := by positivity\n  have h2 : 0 < y * z := by positivity\n  have h3 : 0 < z * x := by positivity\n  have h4 : 0 < x * y * z := by positivity\n  have h5 : 0 < x * y * z * z := by positivity\n  have h6 : 0 < x * y * z * x := by positivity\n  have h7 : 0 < x * y * z * y := by positivity\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x * y - 1), mul_self_nonneg (y * z - 1), mul_self_nonneg (z * x - 1)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 3) : a^2 * b^2 * c^2 \u2265 (3 - 2 * a) * (3 - 2 * b) * (3 - 2 * c) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (x ^ 2 / (x + y) + y ^ 2 / (y + z) + z ^ 2 / (z + x) ) \u2265 (1 - (x - y) ^ 2 - (y - z) ^ 2 - (z - x) ^ 2) / 4 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (x ^ 2 / (x + y) + y ^ 2 / (y + z) + z ^ 2 / (z + x) ) \u2265 (1 - (x - y) ^ 2 - (y - z) ^ 2 - (z - x) ^ 2) / 4  := by\n  have h\u2080 : 0 < x + y := by linarith\n  have h\u2081 : 0 < y + z := by linarith\n  have h\u2082 : 0 < z + x := by linarith\n  have h\u2083 : 0 < (x + y) * (y + z) * (z + x) := by positivity\n  have h\u2084 : 0 < (x + y) * (y + z) * (z + x) * (x + y + z) := by positivity\n  have h\u2085 : (x + y) * (y + z) * (z + x) \u2260 0 := by positivity\n  field_simp [h\u2085]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x * (y + z) - y * (z + x)), sq_nonneg (y * (z + x) - z * (x + y)), sq_nonneg (z * (x + y) - x * (y + z))]\n  <;> linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (x ^ 2 / (x + y) + y ^ 2 / (y + z) + z ^ 2 / (z + x) ) \u2265 (1 - (x - y) ^ 2 - (y - z) ^ 2 - (z - x) ^ 2) / 4  := by\n  have h\u2081 : 0 < x + y := by linarith\n  have h\u2082 : 0 < y + z := by linarith\n  have h\u2083 : 0 < z + x := by linarith\n  have h\u2084 : 0 < x * y := by positivity\n  have h\u2085 : 0 < y * z := by positivity\n  have h\u2086 : 0 < z * x := by positivity\n  have h\u2087 : 0 < (x + y) * (y + z) * (z + x) := by positivity\n  have h\u2088 : 0 < (x + y) * (y + z) * (z + x) * (x + y + z) := by positivity\n  field_simp [hab]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (x ^ 2 / (x + y) + y ^ 2 / (y + z) + z ^ 2 / (z + x) ) \u2265 (1 - (x - y) ^ 2 - (y - z) ^ 2 - (z - x) ^ 2) / 4  := by\n  have h\u2080 : (x + y + z) ^ 2 = 1 := by simp [hab]\n  have h\u2081 : 0 \u2264 x * y + y * z + z * x := by nlinarith\n  have h\u2082 : (x + y) ^ 2 + (y + z) ^ 2 + (z + x) ^ 2 \u2265 3 * (x * y + y * z + z * x) := by\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  have h\u2083 : (x ^ 2 / (x + y) + y ^ 2 / (y + z) + z ^ 2 / (z + x)) \u2265 (1 - (x - y) ^ 2 - (y - z) ^ 2 - (z - x) ^ 2) / 4 := by\n    have h\u2084 : 0 < x + y := by nlinarith\n    have h\u2085 : 0 < y + z := by nlinarith\n    have h\u2086 : 0 < z + x := by nlinarith\n    have h\u2087 : 0 < (x + y) * (y + z) * (z + x) := by positivity\n    field_simp [h\u2084, h\u2085, h\u2086, h\u2087]\n    rw [div_le_div_iff]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n    positivity\n    positivity\n  exact h\u2083",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (x ^ 2 / (x + y) + y ^ 2 / (y + z) + z ^ 2 / (z + x) ) \u2265 (1 - (x - y) ^ 2 - (y - z) ^ 2 - (z - x) ^ 2) / 4  := by\n  rw [add_assoc] at hab\n  have h1 : 0 < x + y := by linarith\n  have h2 : 0 < y + z := by linarith\n  have h3 : 0 < z + x := by linarith\n  have h4 : 0 < x * y := by positivity\n  have h5 : 0 < y * z := by positivity\n  have h6 : 0 < z * x := by positivity\n  have h7 : 0 < (x + y) * (y + z) * (z + x) := by positivity\n  have h8 : 0 < (x + y) * (y + z) * (z + x) * (z + x + y + z) := by positivity\n  field_simp [h1, h2, h3, h4, h5, h6, h7, h8]\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  positivity\n  positivity"
  ]
 },
 {
  "old": "(a b c : \u211d) : 3 * (a * b ^ 3 + b * c ^ 3 + c * a ^ 3) + a * c ^ 3 + b * a ^ 3 + c * b ^ 3 + a * b + b * c + c * a \u2264 (4 / 3) * (a ^ 2 + b ^ 2 + c ^ 2) ^ 2 + 2 * (a ^ 2 + b ^ 2 + c ^ 2) := by",
  "new": ": \u2200 x : \u211d, x ^ 2 + 2 * Real.sqrt ((x ^ 2 - 1) ^ 2) \u2264 4 * Real.sqrt ((x ^ 2 + 1) ^ 2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x ^ 2 + 2 * Real.sqrt ((x ^ 2 - 1) ^ 2) \u2264 4 * Real.sqrt ((x ^ 2 + 1) ^ 2):= by\n  intro x\n  have h\u2081 : 0 \u2264 Real.sqrt ((x ^ 2 + 1) ^ 2) := Real.sqrt_nonneg _\n  have h\u2082 : 0 \u2264 Real.sqrt ((x ^ 2 - 1) ^ 2) := Real.sqrt_nonneg _\n  have h\u2083 : 0 \u2264 x ^ 2 := by nlinarith\n  have h\u2084 : 0 \u2264 (x ^ 2 - 1) ^ 2 := by nlinarith\n  have h\u2085 : 0 \u2264 (x ^ 2 + 1) ^ 2 := by nlinarith\n  have h\u2086 : Real.sqrt ((x ^ 2 - 1) ^ 2) \u2264 Real.sqrt ((x ^ 2 + 1) ^ 2) :=\n    Real.sqrt_le_sqrt (by nlinarith)\n  nlinarith [sq_sqrt h\u2083, sq_sqrt h\u2084, sq_sqrt h\u2085, h\u2086]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x ^ 2 + 2 * Real.sqrt ((x ^ 2 - 1) ^ 2) \u2264 4 * Real.sqrt ((x ^ 2 + 1) ^ 2):= by\n  intro x\n  have h : 0 \u2264 Real.sqrt ((x ^ 2 + 1) ^ 2) := by positivity\n  have h\u2081 : 0 \u2264 Real.sqrt ((x ^ 2 - 1) ^ 2) := by positivity\n  have h\u2082 : x ^ 2 \u2264 Real.sqrt ((x ^ 2 + 1) ^ 2) := by\n    apply le_sqrt_of_sq_le\n    nlinarith [sq_nonneg x]\n  nlinarith [sq_sqrt (show 0 \u2264 (x ^ 2 - 1) ^ 2 from by positivity),\n    sq_sqrt (show 0 \u2264 (x ^ 2 + 1) ^ 2 from by positivity)]\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x ^ 2 + 2 * Real.sqrt ((x ^ 2 - 1) ^ 2) \u2264 4 * Real.sqrt ((x ^ 2 + 1) ^ 2):= by\n  intro x\n  have h\u2080 : 0 \u2264 Real.sqrt ((x ^ 2 + 1) ^ 2) := Real.sqrt_nonneg _\n  have h\u2081 : 0 \u2264 Real.sqrt ((x ^ 2 - 1) ^ 2) := Real.sqrt_nonneg _\n  have h\u2082 : 0 \u2264 x ^ 2 + 1 := by nlinarith\n  have h\u2083 : 0 \u2264 (x ^ 2 - 1) ^ 2 := by nlinarith\n  have h\u2084 : 0 \u2264 (x ^ 2 + 1) ^ 2 := by nlinarith\n  have h\u2085 : 0 \u2264 Real.sqrt ((x ^ 2 - 1) ^ 2) * Real.sqrt ((x ^ 2 + 1) ^ 2) := by positivity\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 (x ^ 2 - 1) ^ 2 by nlinarith),\n    sq_sqrt (show (0 : \u211d) \u2264 (x ^ 2 + 1) ^ 2 by nlinarith),\n    mul_self_nonneg (x ^ 2 - 1),\n    mul_self_nonneg (x ^ 2 + 1),\n    mul_self_nonneg (Real.sqrt ((x ^ 2 - 1) ^ 2) - Real.sqrt ((x ^ 2 + 1) ^ 2))]\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x ^ 2 + 2 * Real.sqrt ((x ^ 2 - 1) ^ 2) \u2264 4 * Real.sqrt ((x ^ 2 + 1) ^ 2):= by\n  intro x\n  have h\u2080 : 0 \u2264 Real.sqrt ((x ^ 2 + 1) ^ 2) := by positivity\n  have h\u2081 : 0 \u2264 Real.sqrt ((x ^ 2 - 1) ^ 2) := by positivity\n  have h\u2082 : 0 \u2264 Real.sqrt ((x ^ 2 + 1) ^ 2) := by positivity\n  have h\u2083 : 0 \u2264 Real.sqrt ((x ^ 2 - 1) ^ 2) := by positivity\n  have h\u2084 : 0 \u2264 Real.sqrt ((x ^ 2 + 1) ^ 2) := by positivity\n  have h\u2085 : 0 \u2264 Real.sqrt ((x ^ 2 - 1) ^ 2) := by positivity\n  have h\u2086 : x ^ 2 \u2264 Real.sqrt ((x ^ 2 + 1) ^ 2) := by\n    apply le_sqrt_of_sq_le\n    nlinarith\n  have h\u2087 : Real.sqrt ((x ^ 2 - 1) ^ 2) \u2264 Real.sqrt ((x ^ 2 + 1) ^ 2) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith\n  nlinarith"
  ]
 },
 {
  "old": "(x y z : \u211d) (h : x*y*z = 1) : x^3 + y^3 + z^3 >= x + y + z := by",
  "new": "(x y : \u2115) (h : x * y = 1) : x = 1 \u2227 y = 1 \u2228 x = 1 \u2227 y = 1 \u2228 x = 0 \u2227 y = 1 \u2228 x = 1 \u2227 y = 0 \u2228 x = 1 \u2227 y = 1 \u2228 x = 0 \u2227 y = 0 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (x y : \u2115) (h : x * y = 1) :\n    x = 1 \u2227 y = 1 \u2228 x = 1 \u2227 y = 1 \u2228 x = 0 \u2227 y = 1 \u2228 x = 1 \u2227 y = 0 \u2228 x = 1 \u2227 y = 1 \u2228 x = 0 \u2227 y = 0 := by\n  cases x <;> cases y <;> simp_all (config := { decide := true })",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (x y : \u2115) (h : x * y = 1) :\n    x = 1 \u2227 y = 1 \u2228 x = 1 \u2227 y = 1 \u2228 x = 0 \u2227 y = 1 \u2228 x = 1 \u2227 y = 0 \u2228 x = 1 \u2227 y = 1 \u2228 x = 0 \u2227 y = 0 := by\n  cases x <;> cases y <;> simp_all\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (x y : \u2115) (h : x * y = 1) :\n    x = 1 \u2227 y = 1 \u2228 x = 1 \u2227 y = 1 \u2228 x = 0 \u2227 y = 1 \u2228 x = 1 \u2227 y = 0 \u2228 x = 1 \u2227 y = 1 \u2228 x = 0 \u2227 y = 0 := by\n  aesop"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : (a + b) ^ 2 * (1 + 2 * c) * (2 * a + 3 * c) * (2 * b + 3 * c) \u2265 54 * a * b * c := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 - x * y) * (1 - y * z) * (1 - z * x) \u2265 4 * x * y * z:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 - x * y) * (1 - y * z) * (1 - z * x) \u2265 4 * x * y * z:= by\n  have h\u2080 : 0 < x * y := by positivity\n  have h\u2081 : 0 < y * z := by positivity\n  have h\u2082 : 0 < z * x := by positivity\n  have h\u2083 : 0 < x * y * z := by positivity\n  have h\u2084 : 0 < x * y * z * (x * y + y * z + z * x) := by positivity\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x * y + y * z + z * x), mul_self_nonneg (x * y - y * z),\n    mul_self_nonneg (y * z - z * x), mul_self_nonneg (z * x - x * y)]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 - x * y) * (1 - y * z) * (1 - z * x) \u2265 4 * x * y * z:= by\n  have hxy : 0 < x * y := by positivity\n  have hyz : 0 < y * z := by positivity\n  have hxz : 0 < x * z := by positivity\n  have h\u2081 : 0 < x * y * z := by positivity\n  have h\u2082 : x * y * z \u2264 1 / 3 := by\n    nlinarith [mul_self_nonneg (x - y), mul_self_nonneg (x - z), mul_self_nonneg (y - z),\n      mul_self_nonneg (x + y + z)]\n  nlinarith [mul_self_nonneg (x - y), mul_self_nonneg (x - z), mul_self_nonneg (y - z),\n    mul_self_nonneg (x + y + z)]"
  ]
 },
 {
  "old": "(x : \u211d) : Real.cos x + Real.cos (x + (2 * Real.pi / 3)) + Real.cos (x + (4 * Real.pi / 3)) = 0 := by",
  "new": "(x : \u211d) (n : \u2124) : Real.cos x = Real.cos (x + n * (2 * Real.pi)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem cos_add_int_mul_two_pi (x : \u211d) (n : \u2124) :\n    Real.cos x = Real.cos (x + n * (2 * Real.pi)) := by\n  simpa [add_comm] using Real.cos_periodic.int_mul n x",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem cos_add_int_mul_two_pi (x : \u211d) (n : \u2124) :\n    Real.cos x = Real.cos (x + n * (2 * Real.pi)) := by\n  simpa using Real.cos_periodic.int_mul n x",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem cos_add_int_mul_two_pi (x : \u211d) (n : \u2124) :\n    Real.cos x = Real.cos (x + n * (2 * Real.pi)) := by\n  rw [Real.cos_add_int_mul_two_pi]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem cos_add_int_mul_two_pi (x : \u211d) (n : \u2124) :\n    Real.cos x = Real.cos (x + n * (2 * Real.pi)) := by\n  simpa [add_mul, cos_add_int_mul_two_pi] using Real.cos_periodic.int_mul n x"
  ]
 },
 {
  "old": "(a b c : \u211d) (h1 : a>0 \u2227 b>0 \u2227 c>0 \u2227 a * b * c = 1): (a - 1 + 1 / b) + (b - 1 + 1 / c) + (c - 1 + 1 / a) \u2264 1 := by",
  "new": "(x y z : \u211d) (h\u2080 : x > 0 \u2227 y > 0 \u2227 z > 0) (h\u2081 : x * y * z = 1) : (x + y + z) \u2265 3 \u2227 (x * y + y * z + z * x) \u2265 3 * Real.sqrt (x * y * z):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (h\u2080 : x > 0 \u2227 y > 0 \u2227 z > 0)\n  (h\u2081 : x * y * z = 1) :\n  (x + y + z) \u2265 3 \u2227 (x * y + y * z + z * x) \u2265 3 * Real.sqrt (x * y * z):= by\n  have hx : 0 < x := by linarith\n  have hy : 0 < y := by linarith\n  have hz : 0 < z := by linarith\n  have h\u2082 : (x + y + z) \u2265 3 := by\n    nlinarith [sq_nonneg (x + y + z), sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n      mul_pos hx hy, mul_pos hx hz, mul_pos hy hz]\n  have h\u2083 : (x * y + y * z + z * x) \u2265 3 * Real.sqrt (x * y * z) := by\n    have h\u2084 : x * y \u2265 0 := mul_nonneg hx.le hy.le\n    have h\u2085 : y * z \u2265 0 := mul_nonneg hy.le hz.le\n    have h\u2086 : z * x \u2265 0 := mul_nonneg hz.le hx.le\n    nlinarith [sq_sqrt (by positivity : (0 : \u211d) \u2264 x * y * z),\n      sq_nonneg (x * y - 1), sq_nonneg (x * z - 1), sq_nonneg (y * z - 1)]\n  exact \u27e8h\u2082, h\u2083\u27e9\n  <;> try norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (h\u2080 : x > 0 \u2227 y > 0 \u2227 z > 0)\n  (h\u2081 : x * y * z = 1) :\n  (x + y + z) \u2265 3 \u2227 (x * y + y * z + z * x) \u2265 3 * Real.sqrt (x * y * z):= by\n  have hx : 0 < x := h\u2080.1\n  have hy : 0 < y := h\u2080.2.1\n  have hz : 0 < z := h\u2080.2.2\n  have hxy : 0 < x * y := mul_pos hx hy\n  have hyz : 0 < y * z := mul_pos hy hz\n  have hxz : 0 < x * z := mul_pos hx hz\n  have h1 : x + y + z \u2265 3 := by\n    nlinarith [sq_nonneg (x + y + z), sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n      sq_nonneg (x * y + y * z + z * x), sq_nonneg (x * y - y * z),\n      sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y)]\n  have h2 : x * y + y * z + z * x \u2265 3 * Real.sqrt (x * y * z) := by\n    have h3 : x * y * z = 1 := h\u2081\n    have h4 : Real.sqrt (x * y * z) = 1 := by rw [h3]; exact Real.sqrt_one\n    rw [h4]\n    nlinarith [sq_nonneg (x * y + y * z + z * x), sq_nonneg (x * y - y * z),\n      sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y)]\n  exact \u27e8h1, h2\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (h\u2080 : x > 0 \u2227 y > 0 \u2227 z > 0)\n  (h\u2081 : x * y * z = 1) :\n  (x + y + z) \u2265 3 \u2227 (x * y + y * z + z * x) \u2265 3 * Real.sqrt (x * y * z):= by\n  have h\u2082 : x * y > 0 := by\n    nlinarith\n  have h\u2083 : y * z > 0 := by\n    nlinarith\n  have h\u2084 : z * x > 0 := by\n    nlinarith\n  have h\u2085 : x + y + z \u2265 3 := by\n    nlinarith [sq_nonneg (x + y + z), sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n      sq_nonneg (x * y + y * z + z * x), sq_nonneg (x * y - y * z),\n      sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y)]\n  have h\u2086 : x * y + y * z + z * x \u2265 3 * Real.sqrt (x * y * z) := by\n    have h\u2087 : Real.sqrt (x * y * z) = 1 := by\n      rw [h\u2081]\n      simp\n    rw [h\u2087]\n    nlinarith [sq_nonneg (x * y + y * z + z * x), sq_nonneg (x * y - y * z),\n      sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y)]\n  exact \u27e8h\u2085, h\u2086\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (h\u2080 : x > 0 \u2227 y > 0 \u2227 z > 0)\n  (h\u2081 : x * y * z = 1) :\n  (x + y + z) \u2265 3 \u2227 (x * y + y * z + z * x) \u2265 3 * Real.sqrt (x * y * z):= by\n  have : (x + y + z) \u2265 3 := by\n    nlinarith [sq_nonneg (x + y + z), sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n      mul_pos h\u2080.1 h\u2080.2.1, mul_pos h\u2080.2.1 h\u2080.2.2, mul_pos h\u2080.1 h\u2080.2.2]\n  have : (x * y + y * z + z * x) \u2265 3 * Real.sqrt (x * y * z) := by\n    have h\u2082 : x * y > 0 := mul_pos h\u2080.1 h\u2080.2.1\n    have h\u2083 : y * z > 0 := mul_pos h\u2080.2.1 h\u2080.2.2\n    have h\u2084 : z * x > 0 := mul_pos h\u2080.2.2 h\u2080.1\n    have h\u2085 : Real.sqrt (x * y * z) = 1 := by simp [h\u2081]\n    nlinarith [sq_sqrt (by positivity : 0 \u2264 x * y * z),\n      sq_nonneg (x * y - 1), sq_nonneg (y * z - 1), sq_nonneg (z * x - 1)]\n  tauto"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (6 * a) / (9 * a ^ 2 + 5 * (a + b + c) ^ 2) + (6 * b) / (9 * b ^ 2 + 5 * (a + b + c) ^ 2) + (6 * c) / (9 * c ^ 2 + 5 * (a + b + c) ^ 2) \u2264 1 / (a + b + c) := by",
  "new": ": \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 (6 * a) / (9 * a ^ 2 + 5 * (a + b + c) ^ 2) + (6 * b) / (9 * b ^ 2 + 5 * (a + b + c) ^ 2) + (6 * c) / (9 * c ^ 2 + 5 * (a + b + c) ^ 2) \u2264 1 / (a + b + c):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_x1_2 : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 \n  (6 * a) / (9 * a ^ 2 + 5 * (a + b + c) ^ 2) + (6 * b) / (9 * b ^ 2 + 5 * (a + b + c) ^ 2) + (6 * c) / (9 * c ^ 2 + 5 * (a + b + c) ^ 2) \u2264 1 / (a + b + c):= by\n  intro a b c h\n  obtain \u27e8h\u2081, h\u2082, h\u2083\u27e9 := h\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    mul_nonneg h\u2081.le h\u2082.le, mul_nonneg h\u2082.le h\u2083.le, mul_nonneg h\u2083.le h\u2081.le,\n    mul_nonneg (sq_nonneg (a - b)) (sq_nonneg (b - c)),\n    mul_nonneg (sq_nonneg (b - c)) (sq_nonneg (c - a)),\n    mul_nonneg (sq_nonneg (c - a)) (sq_nonneg (a - b))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_x1_2 : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 \n  (6 * a) / (9 * a ^ 2 + 5 * (a + b + c) ^ 2) + (6 * b) / (9 * b ^ 2 + 5 * (a + b + c) ^ 2) + (6 * c) / (9 * c ^ 2 + 5 * (a + b + c) ^ 2) \u2264 1 / (a + b + c):= by\n  intro a b c h\u2080\n  have h\u2081 : 0 < a := h\u2080.1\n  have h\u2082 : 0 < b := h\u2080.2.1\n  have h\u2083 : 0 < c := h\u2080.2.2\n  have h\u2084 : 0 < a + b + c := by linarith\n  have h\u2085 : 0 < a * b := by positivity\n  have h\u2086 : 0 < a * c := by positivity\n  have h\u2087 : 0 < b * c := by positivity\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (a ^ 2 - c ^ 2), sq_nonneg (b ^ 2 - c ^ 2),\n    sq_nonneg (a * b + b * c + c * a), sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a),\n    sq_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_x1_2 : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 \n  (6 * a) / (9 * a ^ 2 + 5 * (a + b + c) ^ 2) + (6 * b) / (9 * b ^ 2 + 5 * (a + b + c) ^ 2) + (6 * c) / (9 * c ^ 2 + 5 * (a + b + c) ^ 2) \u2264 1 / (a + b + c):= by\n  rintro a b c \u27e8a_pos, b_pos, c_pos\u27e9\n  have h\u2080 : 0 < a + b + c := by linarith\n  have h\u2081 : 0 < a * b := by positivity\n  have h\u2082 : 0 < a * c := by positivity\n  have h\u2083 : 0 < b * c := by positivity\n  have h\u2084 : 0 < a ^ 2 + b ^ 2 + c ^ 2 := by positivity\n  field_simp [h\u2080, h\u2081, h\u2082, h\u2083, h\u2084]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (a ^ 2 - c ^ 2), sq_nonneg (b ^ 2 - c ^ 2),\n    sq_nonneg (a * b - a * c), sq_nonneg (a * b - b * c), sq_nonneg (a * c - b * c)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a \u2227 a < 1) (hb : 0 < b \u2227 b < 1) (hc : 0 < c \u2227 c < 1) : (1 + a) * Real.sqrt ((1 - a) / a) + (1 + b) * Real.sqrt ((1 - b) / b) + (1 + c) * Real.sqrt ((1 + c) / c) \u2265 (3 * Real.sqrt 3) / 4 * (1 + a) * (1 + b) * (1 + c) / Real.sqrt ((1 - a) * (1 - b) * (1 - c)) := by",
  "new": ": Real.sqrt 3 \u2264 2 + 1 / Real.sqrt 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 3 \u2264 2 + 1 / Real.sqrt 3:= by\n  have : (0 : \u211d) < Real.sqrt 3 := Real.sqrt_pos.mpr (by norm_num)\n  apply le_of_sub_nonneg\n  field_simp [this]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_sqrt (show 0 \u2264 3 from by norm_num)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 3 \u2264 2 + 1 / Real.sqrt 3:= by\n  have h : Real.sqrt 3 \u2264 2 + 1 / Real.sqrt 3 := by\n    rw [\u2190 sub_nonneg]\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [Real.sqrt_nonneg 3, sq_sqrt (by positivity : 0 \u2264 (3 : \u211d))]\n  exact h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 3 \u2264 2 + 1 / Real.sqrt 3:= by\n  have h1 : Real.sqrt 3 \u2264 2 + 1 / Real.sqrt 3 := by\n    rw [add_comm]\n    apply le_of_sub_nonneg\n    field_simp\n    rw [le_div_iff]\n    nlinarith [sq_sqrt (show 0 \u2264 3 by linarith), Real.sqrt_nonneg 3]\n    positivity\n  exact h1"
  ]
 },
 {
  "old": "(r : \u211d) (a b c : \u211d) (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) (h : r >= 2) : a^r * b * (a - b) + b^r * c * (b - c) + c^r * a * (c - a) \u2265 0 := by",
  "new": "(x : \u211d) (hx : x > 1) (n : \u2115) (hn : n \u2265 1) : \u2211 i in Finset.range n, (1 + x) ^ (i + 1) < (n + 1) * (1 + x) ^ (n + 1 - 1):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_pow_sum_lt (x : \u211d) (hx : x > 1) (n : \u2115) (hn : n \u2265 1) :\n    \u2211 i in Finset.range n, (1 + x) ^ (i + 1) < (n + 1) * (1 + x) ^ (n + 1 - 1):= by\n  have h : (1 + x) ^ (n + 1 - 1) > 0 := pow_pos (by positivity) (n + 1 - 1)\n  have h1 : \u2200 i \u2208 Finset.range n, (1 + x) ^ (i + 1) \u2264 (1 + x) ^ (n + 1 - 1) := by\n    intro i _\n    exact pow_le_pow_right (by linarith) (by\n      simp_all only [Finset.mem_range]\n      omega)\n  calc\n    \u2211 i in Finset.range n, (1 + x) ^ (i + 1) \u2264 \u2211 i in Finset.range n, (1 + x) ^ (n + 1 - 1):=\n      Finset.sum_le_sum h1\n    _ = n * (1 + x) ^ (n + 1 - 1) := by simp [Finset.sum_const, Finset.card_range]\n    _ < (n + 1) * (1 + x) ^ (n + 1 - 1) := by\n      apply (mul_lt_mul_right h).mpr\n      linarith"
  ]
 },
 {
  "old": ": \u00ac (\u2203 m n : \u2124, (m + n + 2)^2 = 3*m*n + 3) := by",
  "new": "(i : \u2115) (hi : \u2203 j, 0 < j \u2227 (i * j = 1)) : \u2200 j, 0 < j \u2192 (Nat.Coprime i j \u2228 i = j):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : \u2203 j, 0 < j \u2227 (i * j = 1)) : \u2200 j, 0 < j \u2192 (Nat.Coprime i j \u2228 i = j):= by\n  intro j hj\n  have h := hi\n  rcases h with \u27e8k, hk, hk'\u27e9\n  rcases eq_or_ne i 1 with (h | h) <;> simp_all [Nat.coprime_one_left, Nat.coprime_one_right]\n  all_goals\n    apply Or.inl\n    rw [Nat.coprime_iff_gcd_eq_one]\n    simp_all [Nat.gcd_mul_left, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : \u2203 j, 0 < j \u2227 (i * j = 1)) : \u2200 j, 0 < j \u2192 (Nat.Coprime i j \u2228 i = j):= by\n  intro j hj\n  rcases hi with \u27e8j', hj', hi\u27e9\n  have : i = 1 := by\n    nlinarith\n  subst this\n  simp [Nat.coprime_one_left]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : \u2203 j, 0 < j \u2227 (i * j = 1)) : \u2200 j, 0 < j \u2192 (Nat.Coprime i j \u2228 i = j):= by\n  intro j hj\n  rcases hi with \u27e8k, hk_pos, hk_mul\u27e9\n  rcases eq_or_ne i 0 with (rfl | h_pos)\n  all_goals simp_all [Nat.Coprime, Nat.isUnit_iff]\n  all_goals omega"
  ]
 },
 {
  "old": "(a : \u2115 \u2192 \u211d) (n : \u2115) (h\u2080 : \u2200 i, -1 \u2264 a i \u2227 a i \u2264 1) (h\u2081 : \u2200 i, a i \u2264 a (i + 1)) : \u2211 i in Finset.range (n - 1), Real.sqrt (1 - a i * a (i + 1) - Real.sqrt ((1 - a i^2) * (1 - a (i + 1)^2))) \u2264 (Real.pi * Real.sqrt 2) / 2 := by",
  "new": ": Real.sqrt 2 \u2264 2 / Real.sqrt 2 ^ 2 + 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2264 2 / Real.sqrt 2 ^ 2 + 1:= by\n  norm_num [Real.sqrt_le_iff]\n  <;>\n  norm_num\n  <;>\n  apply le_of_sub_nonneg\n  <;>\n  field_simp\n  <;>\n  ring_nf\n  <;>\n  norm_num\n  <;>\n  linarith\n  <;>\n  norm_num\n  <;>\n  linarith\n  <;>\n  norm_num\n  <;>\n  linarith\n  <;>\n  norm_num\n  <;>\n  linarith\n  <;>\n  norm_num\n  <;>\n  linarith\n  <;>\n  norm_num\n  <;>\n  linarith\n  <;>\n  norm_num\n  <;>\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2264 2 / Real.sqrt 2 ^ 2 + 1:= by\n  have h\u2081 : Real.sqrt 2 \u2265 0 := Real.sqrt_nonneg 2\n  have h\u2082 : Real.sqrt 2 ^ 2 = 2 := Real.sq_sqrt (by positivity)\n  rw [h\u2082]\n  norm_num\n  nlinarith [h\u2081, h\u2082]\n  <;> assumption\n  <;> norm_num"
  ]
 },
 {
  "old": "(a b : \u211d) (ha : a > 0) (hb : b > 0) (hab : a * b \u2265 1) : (a + b + 1 / (a + 1)) * (a^2 + b^2 + 1 / (b + 1)) \u2265 25 / 4 := by",
  "new": "(x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x * y \u2264 1) : 1 / (x + 1) ^ 2 + 1 / (y + 1) ^ 2 \u2265 1 / 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p19 (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x * y \u2264 1) : 1 / (x + 1) ^ 2 + 1 / (y + 1) ^ 2 \u2265 1 / 4:= by\n  have h : 0 \u2264 x := by positivity\n  have h' : 0 \u2264 y := by positivity\n  have hxy'' : 0 \u2264 x * y := by positivity\n  field_simp [pow_two]\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x + y), sq_nonneg (x - 1), sq_nonneg (y - 1)]\n  positivity\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p19 (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x * y \u2264 1) : 1 / (x + 1) ^ 2 + 1 / (y + 1) ^ 2 \u2265 1 / 4:= by\n  have hx' : 0 < x + 1 := by linarith\n  have hy' : 0 < y + 1 := by linarith\n  have hxy' : 0 < (x + 1) * (y + 1) := by positivity\n  field_simp [sq]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - y), hxy]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p19 (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x * y \u2264 1) : 1 / (x + 1) ^ 2 + 1 / (y + 1) ^ 2 \u2265 1 / 4:= by\n  have h : 0 < x * y := by positivity\n  have h\u2081 : 0 < x + y := by positivity\n  have h\u2082 : 0 < (x + y) ^ 2 := by positivity\n  have h\u2083 : 0 < x * y * (x + y) ^ 2 := by positivity\n  have h\u2084 : 0 < x + y + 4 := by positivity\n  have h\u2085 : 0 < x * y * (x + y) ^ 2 * (x + y + 4) := by positivity\n  field_simp [h, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085]\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x + y - 2)]\n  positivity\n  positivity\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p19 (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x * y \u2264 1) : 1 / (x + 1) ^ 2 + 1 / (y + 1) ^ 2 \u2265 1 / 4:= by\n  have h\u2080 : 0 < x * y := mul_pos hx hy\n  have h\u2081 : 0 < x + y := add_pos hx hy\n  have h\u2082 : 0 < x * y * (x + y) := by nlinarith\n  have h\u2083 : 0 < (x + 1) ^ 2 * (y + 1) ^ 2 := by positivity\n  field_simp [h\u2083]\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x * y - 1)]\n  positivity\n  positivity"
  ]
 },
 {
  "old": "(p : \u2115) (hp : 5 < p \u2227 p.Prime): \u2203 m n : \u2115, m + n < p \u2227 (p \u2223 (2^m * 3^n - 1)) := by",
  "new": "(p : \u2115) {n : \u2115} (hn : n \u2260 0) (hp : p.Prime) : p \u2223 n \u2228 (Nat.Coprime p n):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {n : \u2115} (hn : n \u2260 0) (hp : p.Prime) :\n     p \u2223 n \u2228 (Nat.Coprime p n):= by\n  by_cases h : p \u2223 n <;> simp [h, Nat.Prime.coprime_iff_not_dvd hp, hn]\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {n : \u2115} (hn : n \u2260 0) (hp : p.Prime) :\n     p \u2223 n \u2228 (Nat.Coprime p n):= by\n  apply or_iff_not_imp_left.mpr\n  intro h\n  simpa [h, hp.coprime_iff_not_dvd] using hn",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {n : \u2115} (hn : n \u2260 0) (hp : p.Prime) :\n     p \u2223 n \u2228 (Nat.Coprime p n):= by\n  apply or_iff_not_imp_right.mpr\n  intro hnc\n  simp_all [Nat.Prime.coprime_iff_not_dvd hp, hnc]\n  <;> omega\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption"
  ]
 },
 {
  "old": "(a b c : \u211d) : 27 * (a + b) ^ 2 * (b + c) ^ 2 * (c + a) ^ 2 \u2265 64 * (a * b + b * c + c * a) ^ 3 := by",
  "new": "(a b c : \u211d) : a ^ 2 * b ^ 2 * c ^ 2 + b ^ 2 * c ^ 2 * a ^ 2 + c ^ 2 * a ^ 2 * b ^ 2 \u2264 3 * (a ^ 2 * b ^ 2 * c ^ 2) + 3 * (b ^ 2 * c ^ 2 * a ^ 2) + 3 * (c ^ 2 * a ^ 2 * b ^ 2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) :\n     a ^ 2 * b ^ 2 * c ^ 2 + b ^ 2 * c ^ 2 * a ^ 2 + c ^ 2 * a ^ 2 * b ^ 2 \u2264\n    3 * (a ^ 2 * b ^ 2 * c ^ 2) + 3 * (b ^ 2 * c ^ 2 * a ^ 2) + 3 * (c ^ 2 * a ^ 2 * b ^ 2):= by\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (a ^ 2 - c ^ 2), sq_nonneg (b ^ 2 - c ^ 2),\n    sq_nonneg (a * b), sq_nonneg (a * c), sq_nonneg (b * c), mul_nonneg (sq_nonneg (a - b))\n    (sq_nonneg (b - c)), mul_nonneg (sq_nonneg (a - c)) (sq_nonneg (c - b)),\n    mul_nonneg (sq_nonneg (b - a)) (sq_nonneg (a - c))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) :\n     a ^ 2 * b ^ 2 * c ^ 2 + b ^ 2 * c ^ 2 * a ^ 2 + c ^ 2 * a ^ 2 * b ^ 2 \u2264\n    3 * (a ^ 2 * b ^ 2 * c ^ 2) + 3 * (b ^ 2 * c ^ 2 * a ^ 2) + 3 * (c ^ 2 * a ^ 2 * b ^ 2):= by\n  simp only [mul_assoc, mul_comm, mul_left_comm, add_assoc, add_comm, add_left_comm]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    mul_nonneg (sq_nonneg a) (sq_nonneg b), mul_nonneg (sq_nonneg b) (sq_nonneg c),\n    mul_nonneg (sq_nonneg c) (sq_nonneg a)]\n  <;> linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) :\n     a ^ 2 * b ^ 2 * c ^ 2 + b ^ 2 * c ^ 2 * a ^ 2 + c ^ 2 * a ^ 2 * b ^ 2 \u2264\n    3 * (a ^ 2 * b ^ 2 * c ^ 2) + 3 * (b ^ 2 * c ^ 2 * a ^ 2) + 3 * (c ^ 2 * a ^ 2 * b ^ 2):= by\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (a ^ 2 - c ^ 2),\n    sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (a * b * c), sq_nonneg (b * c * a),\n    sq_nonneg (c * a * b), sq_nonneg (a * b), sq_nonneg (b * c), sq_nonneg (c * a)]"
  ]
 },
 {
  "old": "(x y z : \u211d) : x ^ 2 * y ^ 4 + y ^ 2 * z ^ 4 + z ^ 2 * x ^ 4 \u2265 1 / 3 * (x + y + z) * (x * y + y * z + x * z) * x * y * z := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : x ^ 2 * y ^ 4 + y ^ 2 * z ^ 4 + z ^ 2 * x ^ 4 \u2265 1 / 3 * (x + y + z) * (x * y + y * z + x * z) * x * y * z:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) :\n  x ^ 2 * y ^ 4 + y ^ 2 * z ^ 4 + z ^ 2 * x ^ 4 \u2265 1 / 3 * (x + y + z) * (x * y + y * z + x * z) * x * y * z:= by\n  ring_nf\n  nlinarith [sq_nonneg (x * y ^ 2 - y * z ^ 2), sq_nonneg (y * z ^ 2 - z * x ^ 2), sq_nonneg (z * x ^ 2 - x * y ^ 2),\n    sq_nonneg (x * y * z - x ^ 2 * y), sq_nonneg (x * y * z - y ^ 2 * z), sq_nonneg (x * y * z - z ^ 2 * x),\n    mul_pos hx hy, mul_pos hy hz, mul_pos hz hx]\n  <;> simp_all\n  <;> nlinarith\n  <;> simp_all\n  <;> nlinarith\n  <;> simp_all\n  <;> nlinarith\n  <;> simp_all\n  <;> nlinarith"
  ]
 },
 {
  "old": ": \u2200 a b c : \u211d, 3 * b ^ 2 * c ^ 3 + 6 * c * a ^ 4 + 2 * b ^ 2 * a ^ 3 + 6 * c ^ 2 * a ^ 3 + 3 * c ^ 3 * a ^ 2 + 20 * a * b ^ 4 + 10 * b * a ^ 4 + 16 * b * c * a ^ 3 + 17 * a ^ 2 * b ^ 2 * c + b * c ^ 2 * a ^ 2 - a * b ^ 2 * c ^ 2 + 4 * b * c ^ 3 * a + 48 * b ^ 3 * a ^ 2 > 0 := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : 3 * b ^ 2 * c ^ 3 + 6 * c * a ^ 4 + 2 * b ^ 2 * a ^ 3 + 6 * c ^ 2 * a ^ 3 + 3 * c ^ 3 * a ^ 2 + 20 * a * b ^ 4 + 10 * b * a ^ 4 + 16 * b * c * a ^ 3 + 17 * a ^ 2 * b ^ 2 * c + b * c ^ 2 * a ^ 2 - a * b ^ 2 * c ^ 2 + 4 * b * c ^ 3 * a + 48 * b ^ 3 * a ^ 2 > 0 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n 3 * b ^ 2 * c ^ 3 + 6 * c * a ^ 4 + 2 * b ^ 2 * a ^ 3 + 6 * c ^ 2 * a ^ 3 + 3 * c ^ 3 * a ^ 2 + 20 * a * b ^ 4 + 10 * b * a ^ 4 + 16 * b * c * a ^ 3 + 17 * a ^ 2 * b ^ 2 * c + b * c ^ 2 * a ^ 2 - a * b ^ 2 * c ^ 2 + 4 * b * c ^ 3 * a + 48 * b ^ 3 * a ^ 2 > 0 := by\n  have h\u2080 : 0 < a * b ^ 2 := by positivity\n  have h\u2081 : 0 < b * c ^ 2 := by positivity\n  have h\u2082 : 0 < c * a ^ 2 := by positivity\n  have h\u2083 : 0 < a ^ 3 * b := by positivity\n  have h\u2084 : 0 < b ^ 3 * c := by positivity\n  have h\u2085 : 0 < c ^ 3 * a := by positivity\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le,\n    mul_nonneg (sq_nonneg a) hc.le, mul_nonneg (sq_nonneg b) ha.le, mul_nonneg (sq_nonneg c) hb.le,\n    mul_nonneg (sq_nonneg (a - b)) hc.le, mul_nonneg (sq_nonneg (b - c)) ha.le, mul_nonneg (sq_nonneg (c - a)) hb.le]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (1 / (a + b) ^ 2 + 1 / (a + c) ^ 2 + 8 / (b + c) ^ 2) \u2265 4 / (a * b + b * c + c * a) := by",
  "new": "(x y z : \u211d) (h : x + y + z = 1) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) : (x ^ 2 * y + y ^ 2 * z + z ^ 2 * x) * (1 / (x ^ 2 + y ^ 2 + z ^ 2)) \u2264 3 / 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_of_exp_bound (x y z : \u211d) (h : x + y + z = 1) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) :\n      (x ^ 2 * y + y ^ 2 * z + z ^ 2 * x) * (1 / (x ^ 2 + y ^ 2 + z ^ 2)) \u2264 3 / 3:= by\n  have h\u2081 : 0 \u2264 x ^ 2 * y := by positivity\n  have h\u2082 : 0 \u2264 y ^ 2 * z := by positivity\n  have h\u2083 : 0 \u2264 z ^ 2 * x := by positivity\n  have h\u2084 : 0 \u2264 x ^ 2 + y ^ 2 + z ^ 2 := by positivity\n  have h\u2085 : 0 \u2264 x ^ 2 * y + y ^ 2 * z + z ^ 2 * x := by positivity\n  have h\u2086 : 0 \u2264 x * y + y * z + z * x := by\n    nlinarith\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086]\n  apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_of_exp_bound (x y z : \u211d) (h : x + y + z = 1) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) :\n      (x ^ 2 * y + y ^ 2 * z + z ^ 2 * x) * (1 / (x ^ 2 + y ^ 2 + z ^ 2)) \u2264 3 / 3:= by\n  have h\u2080 : 0 \u2264 x ^ 2 * y + y ^ 2 * z + z ^ 2 * x := by positivity\n  have h\u2081 : 0 \u2264 x ^ 2 + y ^ 2 + z ^ 2 := by positivity\n  have h\u2082 : (x ^ 2 * y + y ^ 2 * z + z ^ 2 * x) * (1 / (x ^ 2 + y ^ 2 + z ^ 2)) \u2264 3 / 3 := by\n    apply le_of_sub_nonneg\n    by_cases h\u2083 : x ^ 2 + y ^ 2 + z ^ 2 = 0 <;>\n    field_simp [h\u2083] <;>\n    rw [le_div_iff (by positivity)] <;>\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z), hx, hy, hz, h]\n  exact h\u2082\n  <;> assumption"
  ]
 },
 {
  "old": "(x : \u211d) (hx : 0 < x) : Real.logb 16 (x^5) = Real.logb 64 125 - Real.logb 4 (Real.sqrt x) \u2194 x = 5^(1/3) := by",
  "new": ": (Real.logb 4 20) ^ 2 \u2264 50:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_2 : (Real.logb 4 20) ^ 2 \u2264 50:= by\n  have h\u2080 : Real.logb 4 20 = Real.logb (2 ^ 2) 20 := by norm_num\n  rw [h\u2080]\n  have h\u2081 : Real.logb (2 ^ 2) 20 = Real.logb (2 ^ 2) (2 * 2 * 5) := by norm_num\n  rw [h\u2081]\n  have h\u2082 : Real.logb (2 ^ 2) (2 * 2 * 5) \u2264 3 := by\n    apply Real.logb_le_iff_le_rpow (by norm_num) (by norm_num) |>.mpr\n    norm_num\n  have h\u2083 : Real.logb (2 ^ 2) (2 * 2 * 5) \u2265 0 := by\n    apply Real.logb_nonneg (by norm_num) (by norm_num)\n    all_goals norm_num\n  nlinarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_2 : (Real.logb 4 20) ^ 2 \u2264 50:= by\n  have h\u2080 : Real.logb 4 20 = Real.log 20 / Real.log 4 := by\n    simp [Real.logb]\n  rw [h\u2080]\n  have h\u2081 : Real.log 20 / Real.log 4 \u2264 5 := by\n    rw [div_le_iff (Real.log_pos (by norm_num : (1 : \u211d) < 4))]\n    have h\u2082 : Real.log 20 \u2264 Real.log (4 ^ 5) := Real.log_le_log (by norm_num) (by norm_num)\n    have h\u2083 : Real.log (4 ^ 5) = 5 * Real.log 4 := by\n      simp [Real.log_rpow (by norm_num : (0 : \u211d) < 4)]\n    have h\u2084 : Real.log 4 > 0 := Real.log_pos (by norm_num)\n    nlinarith [Real.log_pos (by norm_num : (1 : \u211d) < 20)]\n  have h\u2082 : (Real.log 20 / Real.log 4) ^ 2 \u2264 5 ^ 2 := by\n    gcongr\n  nlinarith"
  ]
 },
 {
  "old": "(n : \u2115) (hn : 1 < n) : (\u220f k in Finset.Icc 1 (n - 1), (1 - Real.cos ((2 * \u03c0 * k)/n))) = n^2 / 2^(n - 1) := by",
  "new": "(n : \u2115) (hn : 1 < n) : \u2203 k, (k : \u2115) \u2265 1 \u2227 k \u2264 n \u2227 ( k * (n - k) : \u2115) \u2265 n / 4 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_part_ge_quarter (n : \u2115) (hn : 1 < n) :  \u2203 k,  (k  : \u2115) \u2265 1 \u2227  k \u2264 n \u2227  ( k * (n - k)  : \u2115) \u2265 n / 4 := by\n  refine' \u27e81, by omega, by omega, _\u27e9\n  cases n <;> simp_all [Nat.mul_sub_left_distrib, Nat.mul_one, Nat.sub_add_cancel, Nat.one_le_iff_ne_zero]\n  <;> norm_num\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_part_ge_quarter (n : \u2115) (hn : 1 < n) :  \u2203 k,  (k  : \u2115) \u2265 1 \u2227  k \u2264 n \u2227  ( k * (n - k)  : \u2115) \u2265 n / 4 := by\n  refine \u27e81, by linarith, by linarith,?_\u27e9\n  cases' n with n\n  exfalso\n  linarith\n  cases' n with n\n  exfalso\n  linarith\n  simp [Nat.div_eq_of_lt]\n  <;> ring_nf\n  <;> norm_num\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_part_ge_quarter (n : \u2115) (hn : 1 < n) :  \u2203 k,  (k  : \u2115) \u2265 1 \u2227  k \u2264 n \u2227  ( k * (n - k)  : \u2115) \u2265 n / 4 := by\n  use n - 1\n  have h\u2081 : n - 1 \u2265 1 := by\n    omega\n  have h\u2082 : n - 1 \u2264 n := by\n    omega\n  have h\u2083 : (n - 1) * (n - (n - 1)) \u2265 n / 4 := by\n    cases n with\n    | zero => omega\n    | succ n =>\n      cases n with\n      | zero => omega\n      | succ n =>\n        simp [Nat.mul_sub_left_distrib, Nat.mul_sub_right_distrib, Nat.mul_one, Nat.add_mul]\n        ring_nf\n        omega\n  exact \u27e8h\u2081, h\u2082, h\u2083\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_part_ge_quarter (n : \u2115) (hn : 1 < n) :  \u2203 k,  (k  : \u2115) \u2265 1 \u2227  k \u2264 n \u2227  ( k * (n - k)  : \u2115) \u2265 n / 4 := by\n  use n - 1\n  have h\u2080 : n - 1 \u2265 1 := by omega\n  have h\u2081 : (n - 1) \u2264 n := Nat.sub_le _ _\n  have h\u2082 : (n - 1) * (n - (n - 1)) \u2265 n / 4 := by\n    cases n with\n    | zero => omega\n    | succ n =>\n      cases n with\n      | zero => omega\n      | succ n =>\n        simp_all [Nat.mul_sub_left_distrib, Nat.mul_sub_right_distrib, Nat.mul_one, Nat.mul_add, Nat.add_mul, Nat.mul_comm, Nat.mul_left_comm, Nat.mul_right_comm]\n        ring_nf\n        omega\n  exact \u27e8h\u2080, h\u2081, h\u2082\u27e9"
  ]
 },
 {
  "old": "(a b : \u211d) (ha : 0 < a) (hb : 0 < b) (hab : a^2 + 2 * b^2 = 3 * a * b) : a + 2 * b + 1 / a + 7 / b \u2265 4 * Real.sqrt 6 := by",
  "new": ": \u2200 a b : \u211d, 0 < a \u2227 0 < b \u2227 a^2 + 2 * b^2 = 3 * a * b \u2192 a + 2 * b + 1 / a + 7 / b \u2265 4 * Real.sqrt 6 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b : \u211d, 0 < a \u2227 0 < b \u2227 a^2 + 2 * b^2 = 3 * a * b \u2192 a + 2 * b + 1 / a + 7 / b \u2265 4 * Real.sqrt 6 := by\n  rintro a b \u27e8ha, hb, hab\u27e9\n  have h\u2081 : 0 < a * b := mul_pos ha hb\n  have h\u2082 : 0 < Real.sqrt 6 := Real.sqrt_pos.2 (by linarith)\n  field_simp [h\u2081, h\u2082]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_sqrt (by positivity : (0 : \u211d) \u2264 6),\n    mul_self_nonneg (a - b), mul_self_nonneg (a - 2 * Real.sqrt 6 / 3),\n    mul_self_nonneg (b - 2 * Real.sqrt 6 / 3)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b : \u211d, 0 < a \u2227 0 < b \u2227 a^2 + 2 * b^2 = 3 * a * b \u2192 a + 2 * b + 1 / a + 7 / b \u2265 4 * Real.sqrt 6 := by\n  rintro a b \u27e8h\u2080a, h\u2080b, h\u2081\u27e9\n  have h\u2082 : 0 < a * b := mul_pos h\u2080a h\u2080b\n  field_simp [h\u2080a, h\u2080b]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_sqrt (by positivity : (0 : \u211d) \u2264 6),\n    mul_self_nonneg (a - b),\n    mul_self_nonneg (a - 2 * Real.sqrt 6 / 3),\n    mul_self_nonneg (b - 2 * Real.sqrt 6 / 3)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b : \u211d, 0 < a \u2227 0 < b \u2227 a^2 + 2 * b^2 = 3 * a * b \u2192 a + 2 * b + 1 / a + 7 / b \u2265 4 * Real.sqrt 6 := by\n  rintro a b \u27e8ha, hb, h\u27e9\n  have h\u2081 : 0 < a * b := by positivity\n  have h\u2082 : 0 < a * b * Real.sqrt 6 := by positivity\n  field_simp [h\u2081, h\u2082]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_sqrt (by positivity : (0 : \u211d) \u2264 6),\n    mul_self_nonneg (a - b),\n    mul_self_nonneg (a - 2 * Real.sqrt 6 / 3),\n    mul_self_nonneg (b - 2 * Real.sqrt 6 / 3)]"
  ]
 },
 {
  "old": "(a b c d : \u2124) (h\u2081 : a^2 + b^2 + c^2 = d^2) (h\u2082 : \u00ac 2 \u2223 d) (h\u2083 : \u00ac 3 \u2223 d) : 6 \u2223 a \u2228 6 \u2223 b \u2228 6 \u2223 c := by",
  "new": "(a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b):= by\n  exact em _\n  <;> simp_all\n  <;> try simp_all\n  <;> decide",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b):= by\n  have : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b) := by apply em\n  exact this\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b):= by\n  by_cases h : Nat.Coprime a b\n  exact Or.inl h\n  exact Or.inr h"
  ]
 },
 {
  "old": "(x : \u211d): x > 0 \u2192 x > Real.log (x + 1) := by",
  "new": "(x : \u211d) (x_pos : 0 < x) : Real.log (2 * x) < x + 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_double_x (x : \u211d) (x_pos : 0 < x) : Real.log (2 * x) < x + 1:= by\n  have h\u2081 : Real.log (2 * x) = Real.log 2 + Real.log x := Real.log_mul (by positivity) (by positivity)\n  rw [h\u2081]\n  have h\u2082 : Real.log 2 \u2264 2 - 1 := by\n    linarith [Real.log_le_sub_one_of_pos (by norm_num : (0 : \u211d) < 2)]\n  have h\u2083 : Real.log x \u2264 x - 1 := by\n    linarith [Real.log_le_sub_one_of_pos x_pos]\n  linarith\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : 0 < a^2 + b^2 + c^2) : a / (a + b + 7 * c) + b / (b + c + 7 * a) + c / (c + a + 7 * b) + (2 * (a * b + b * c + c * a)) / (3 * (a^2 + b^2 + c^2)) \u2264 1 := by",
  "new": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : 0 < a * b + b * c + c * a) : a ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) + b ^ 2 / (b ^ 2 + a ^ 2 + c ^ 2) + c ^ 2 / (c ^ 2 + b ^ 2 + a ^ 2) + (a * b + b * c + c * a) / (a ^ 2 + b ^ 2 + c ^ 2) \u2264 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : 0 < a * b + b * c + c * a) :  a ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) + b ^ 2 / (b ^ 2 + a ^ 2 + c ^ 2) + c ^ 2 / (c ^ 2 + b ^ 2 + a ^ 2) + (a * b + b * c + c * a) / (a ^ 2 + b ^ 2 + c ^ 2) \u2264 2:= by\n  field_simp [add_assoc, add_comm, add_left_comm]\n  apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : 12 + (a + b) / c + (b + c) / a + (c + a) / b \u2265 3 * (a + b + c + 1 / a + 1 / b + 1 / c) := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192 12 + (a + b) / c + (b + c) / a + (c + a) / b \u2265 3 * (a + b + c + 1 / a + 1 / b + 1 / c) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192\n   12 + (a + b) / c + (b + c) / a + (c + a) / b \u2265 3 * (a + b + c + 1 / a + 1 / b + 1 / c)  := by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  field_simp [ha.ne', hb.ne', hc.ne']\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1), mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le, mul_nonneg (sq_nonneg (a - 1)) hc.le, mul_nonneg (sq_nonneg (b - 1)) ha.le, mul_nonneg (sq_nonneg (c - 1)) hb.le,\n    mul_nonneg (sq_nonneg (a - 1)) hb.le, mul_nonneg (sq_nonneg (b - 1)) hc.le, mul_nonneg (sq_nonneg (c - 1)) ha.le, mul_nonneg (sq_nonneg (a - 1)) (mul_nonneg hb.le hc.le), mul_nonneg (sq_nonneg (b - 1)) (mul_nonneg hc.le ha.le), mul_nonneg (sq_nonneg (c - 1)) (mul_nonneg ha.le hb.le)]"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : 9 * (x + y + z) ^ 2 * (xy + xz + yz) ^ 2 + 14 * (x + y + z) * (xy + xz + yz) * (xyz) + 9 * (xyz) ^ 2 \u2265 32 * (x + y + z) ^ 3 * (xyz) := by",
  "new": ": \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192 9 * (x + y + z) ^ 2 * (x * y + x * z + y * z) ^ 2 + 14 * (x + y + z) * (x * y + x * z + y * z) * (x * y * z) + 9 * (x * y * z) ^ 2 \u2265 32 * (x + y + z) ^ 3 * (x * y * z) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192\n   9 * (x + y + z) ^ 2 * (x * y + x * z + y * z) ^ 2 + 14 * (x + y + z) * (x * y + x * z + y * z) * (x * y * z) + 9 * (x * y * z) ^ 2 \u2265 32 * (x + y + z) ^ 3 * (x * y * z)  := by\n  rintro x y z \u27e8hx, hy, hz\u27e9\n  have hxy : 0 < x * y := mul_pos hx hy\n  have hxz : 0 < x * z := mul_pos hx hz\n  have hyz : 0 < y * z := mul_pos hy hz\n  have hxyv : 0 < x * y * z := by positivity\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_self_nonneg (x * y - x * z), mul_self_nonneg (x * y - y * z), mul_self_nonneg (x * z - y * z),\n    mul_self_nonneg (x * y + x * z + y * z - 3 * x * y), mul_self_nonneg (x * y + x * z + y * z - 3 * x * z),\n    mul_self_nonneg (x * y + x * z + y * z - 3 * y * z)]\n  <;> assumption\n  <;> try norm_num\n  <;> nlinarith\n  <;> linarith\n  <;> norm_num\n  <;> nlinarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192\n   9 * (x + y + z) ^ 2 * (x * y + x * z + y * z) ^ 2 + 14 * (x + y + z) * (x * y + x * z + y * z) * (x * y * z) + 9 * (x * y * z) ^ 2 \u2265 32 * (x + y + z) ^ 3 * (x * y * z)  := by\n  rintro x y z \u27e8hx, hy, hz\u27e9\n  have hxy : 0 < x * y := mul_pos hx hy\n  have hxz : 0 < x * z := mul_pos hx hz\n  have hyz : 0 < y * z := mul_pos hy hz\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_self_nonneg (x * y - x * z), mul_self_nonneg (x * y - y * z),\n    mul_self_nonneg (x * z - y * z), mul_self_nonneg (x * y + x * z + y * z - 3 * (x * y)),\n    mul_self_nonneg (x * y + x * z + y * z - 3 * (x * z)),\n    mul_self_nonneg (x * y + x * z + y * z - 3 * (y * z))]"
  ]
 },
 {
  "old": "(n : \u2115) (hn : 1 < n) : (Real.sqrt n * (4 * n + 2) / 6) < \u2211 i in Finset.Icc 1 n, Real.sqrt i \u2227 \u2211 i in Finset.Icc 1 n, Real.sqrt i < (Real.sqrt n * (4 * n + 3) / 6) := by",
  "new": "(n : \u2115) (hn : 1 < n) : \u2203 k, (1 : \u211d) / 4 \u2264 k \u2227 k \u2264 1 \u2227 (\u2211 i in Finset.Icc 1 n, Real.sqrt i) \u2265 k * n := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_part_ge_quarter (n : \u2115) (hn : 1 < n) :  \u2203 k,  (1 : \u211d) / 4 \u2264  k \u2227 k \u2264 1 \u2227 (\u2211 i in Finset.Icc 1 n, Real.sqrt i) \u2265 k * n := by\n  refine \u27e81, ?_\u27e9\n  constructor\n  norm_num\n  constructor\n  norm_num\n  have hn' : (1 : \u211d) < n := by exact_mod_cast hn\n  have h3 : (\u2211 i in Finset.Icc 1 n, Real.sqrt i) \u2265 (1 : \u211d) * n := by\n    have h4 : (\u2211 i in Finset.Icc 1 n, Real.sqrt i) \u2265 (\u2211 i in Finset.Icc 1 n, (1 : \u211d)) := by\n      apply Finset.sum_le_sum\n      intro x hx\n      simp only [Finset.mem_Icc] at hx\n      exact Real.le_sqrt_of_sq_le (by norm_num; nlinarith)\n    simpa using h4\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_part_ge_quarter (n : \u2115) (hn : 1 < n) :  \u2203 k,  (1 : \u211d) / 4 \u2264  k \u2227 k \u2264 1 \u2227 (\u2211 i in Finset.Icc 1 n, Real.sqrt i) \u2265 k * n := by\n  use 1 / 4\n  constructor\n  all_goals norm_num\n  have h2 : 0 < n := by linarith\n  have h3 : \u2211 i in Finset.Icc 1 n, Real.sqrt i \u2265 n := by\n    have h4 : \u2200 i, i \u2208 Finset.Icc 1 n \u2192 Real.sqrt i \u2265 1 := by\n      intro i hi\n      rw [Finset.mem_Icc] at hi\n      have h5 : Real.sqrt i \u2265 1 := by\n        apply Real.le_sqrt_of_sq_le\n        norm_num\n        linarith\n      linarith\n    calc\n      (\u2211 i in Finset.Icc 1 n, Real.sqrt i) \u2265 \u2211 i in Finset.Icc 1 n, (1 : \u211d) := by\n        exact Finset.sum_le_sum h4\n      _ = n := by simp\n  nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) : (a + b) * (b + c) * (c + a) * (a ^ 2 + b ^ 2 + c ^ 2) ^ 3 \u2265 (a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2) * (c ^ 2 + a ^ 2) * (a + b + c) ^ 3 := by",
  "new": "(a b c : \u211d) : a ^ 2 * b ^ 2 * c ^ 2 * 6 \u2264 (a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2) * (c ^ 2 + a ^ 2) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) :\n      a ^ 2 * b ^ 2 * c ^ 2 * 6 \u2264 (a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2) * (c ^ 2 + a ^ 2) := by\n  ring_nf\n  nlinarith [sq_nonneg (a^2 - b^2), sq_nonneg (b^2 - c^2), sq_nonneg (c^2 - a^2),\n    mul_self_nonneg (a^2 + b^2), mul_self_nonneg (b^2 + c^2), mul_self_nonneg (c^2 + a^2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) :\n      a ^ 2 * b ^ 2 * c ^ 2 * 6 \u2264 (a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2) * (c ^ 2 + a ^ 2) := by\n  simp only [mul_assoc, mul_left_comm]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    sq_nonneg (a ^ 2 + b ^ 2), sq_nonneg (b ^ 2 + c ^ 2), sq_nonneg (c ^ 2 + a ^ 2),\n    sq_nonneg (a * b), sq_nonneg (b * c), sq_nonneg (c * a),\n    sq_nonneg (a * (b * c)), sq_nonneg (b * (c * a)), sq_nonneg (c * (a * b))]\n  <;> simp only [mul_assoc, mul_left_comm, mul_comm]\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) :\n      a ^ 2 * b ^ 2 * c ^ 2 * 6 \u2264 (a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2) * (c ^ 2 + a ^ 2) := by\n  have h\u2080 : \u2200 x y : \u211d, x ^ 2 + y ^ 2 \u2265 2 * x * y := by\n    intro x y\n    have h\u2080 := sq_nonneg (x - y)\n    simp only [sq, sub_sq, mul_sub, mul_one, sub_add_cancel] at h\u2080\n    linarith\n  nlinarith [h\u2080 a b, h\u2080 b c, h\u2080 c a, h\u2080 (a ^ 2) (b ^ 2), h\u2080 (b ^ 2) (c ^ 2),\n    h\u2080 (c ^ 2) (a ^ 2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) :\n      a ^ 2 * b ^ 2 * c ^ 2 * 6 \u2264 (a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2) * (c ^ 2 + a ^ 2) := by\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    mul_nonneg (sq_nonneg a) (sq_nonneg b), mul_nonneg (sq_nonneg b) (sq_nonneg c),\n    mul_nonneg (sq_nonneg c) (sq_nonneg a)]\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^3 - b^2 * c) / (a + b) + (b^3 - c^2 * a) / (b + c) + (c^3 - a^2 * b) / (c + a) \u2265 0 := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a^4 + b^4 + c^4 + 4 * a^2 * b^2 * c^2 \u2265 2 * a * b * c * (a^2 + b^2 + c^2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :  a^4 + b^4 + c^4 + 4 * a^2 * b^2 * c^2 \u2265 2 * a * b * c * (a^2 + b^2 + c^2):= by\n  have : 0 < a * b * c := by positivity\n  have : 0 < 4 * a ^ 2 * b ^ 2 * c ^ 2 := by positivity\n  nlinarith [sq_nonneg (a ^ 2 + b ^ 2 + c ^ 2 - 3 * a * b * c),\n    sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    mul_self_nonneg (a ^ 2 - b ^ 2 - c ^ 2),\n    mul_self_nonneg (b ^ 2 - c ^ 2 - a ^ 2),\n    mul_self_nonneg (c ^ 2 - a ^ 2 - b ^ 2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :  a^4 + b^4 + c^4 + 4 * a^2 * b^2 * c^2 \u2265 2 * a * b * c * (a^2 + b^2 + c^2):= by\n  have habc : 0 < a * b * c := by positivity\n  have : 0 \u2264 a^2 * b^2 * c^2 := by positivity\n  nlinarith [sq_nonneg (a - b * c), sq_nonneg (b - a * c), sq_nonneg (c - a * b), mul_self_nonneg (a^2 - b^2), mul_self_nonneg (b^2 - c^2), mul_self_nonneg (c^2 - a^2)]"
  ]
 },
 {
  "old": "(a b : \u211d) (ha : 0 < a) (hb : 0 < b) : (a^4 / b^4 + a^2 / b^2 + a / b + b / a + b^2 / a^2 + b^4 / a^4) \u2265 6 := by",
  "new": ": \u2200 a b : \u211d, 0 < a \u2227 0 < b \u2192 (a^4 / b^4 + b^4 / a^4) + (a^2 / b^2 + b^2 / a^2) + (a / b + b / a) \u2265 6 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b : \u211d, 0 < a \u2227 0 < b \u2192\n    (a^4 / b^4 + b^4 / a^4) + (a^2 / b^2 + b^2 / a^2) + (a / b + b / a) \u2265 6 := by\n  intro a b h\n  have ha : 0 < a := h.1\n  have hb : 0 < b := h.2\n  have hab : 0 < a * b := mul_pos ha hb\n  have h1 : a ^ 4 / b ^ 4 + b ^ 4 / a ^ 4 \u2265 2 := by\n    rw [add_comm]\n    field_simp [ha, hb]\n    rw [le_div_iff (by positivity), mul_comm]\n    nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (a ^ 2 + b ^ 2)]\n  have h2 : a ^ 2 / b ^ 2 + b ^ 2 / a ^ 2 \u2265 2 := by\n    rw [add_comm]\n    field_simp [ha, hb]\n    rw [le_div_iff (by positivity), mul_comm]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a + b)]\n  have h3 : a / b + b / a \u2265 2 := by\n    rw [add_comm]\n    field_simp [ha, hb]\n    rw [le_div_iff (by positivity), mul_comm]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a + b)]\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b : \u211d, 0 < a \u2227 0 < b \u2192\n    (a^4 / b^4 + b^4 / a^4) + (a^2 / b^2 + b^2 / a^2) + (a / b + b / a) \u2265 6 := by\n  rintro a b \u27e8ha, hb\u27e9\n  have h\u2081 : a ^ 4 / b ^ 4 + b ^ 4 / a ^ 4 \u2265 2 := by\n    have : 0 < b ^ 4 := pow_pos hb 4\n    have : 0 < a ^ 4 := pow_pos ha 4\n    have : 0 < a ^ 4 * b ^ 4 := mul_pos (pow_pos ha 4) (pow_pos hb 4)\n    field_simp [ha.ne', hb.ne']\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a ^ 4 - b ^ 4)]\n  have h\u2082 : a ^ 2 / b ^ 2 + b ^ 2 / a ^ 2 \u2265 2 := by\n    have : 0 < b ^ 2 := pow_pos hb 2\n    have : 0 < a ^ 2 := pow_pos ha 2\n    have : 0 < a ^ 2 * b ^ 2 := mul_pos (pow_pos ha 2) (pow_pos hb 2)\n    field_simp [ha.ne', hb.ne']\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a ^ 2 - b ^ 2)]\n  have h\u2083 : a / b + b / a \u2265 2 := by\n    have : 0 < b := by positivity\n    have : 0 < a := by positivity\n    have : 0 < a * b := mul_pos \u20390 < a\u203a \u20390 < b\u203a\n    field_simp [ha.ne', hb.ne']\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a - b)]\n  linarith"
  ]
 },
 {
  "old": "(a b c d : \u211d) : (a + b) * (b + c) * (c + d) * (d + a) \u2265 (a + b + c + d) * (a * c * d + a * b * d + a * b * c + b * c * d) := by",
  "new": ": (x^2+10) * (y^2+10) \u2265 20 * x * y + 50:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 :  (x^2+10) * (y^2+10) \u2265 20 * x * y + 50:= by\n  cases' le_total x y with h h <;>\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x + y), sq_nonneg (x - y - 5),\n      sq_nonneg (x + y - 5)]\n  <;>\n    nlinarith\n  <;>\n    nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 :  (x^2+10) * (y^2+10) \u2265 20 * x * y + 50:= by\n  cases' le_total x y with h h <;>\n    cases' le_total 0 (x - y) with h' h' <;>\n    cases' le_total 0 (x * y) with h'' h'' <;>\n    nlinarith [mul_self_nonneg (x - y), mul_self_nonneg (x + y),\n      mul_self_nonneg (x * y - 5), mul_self_nonneg (x * y + 5)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 :  (x^2+10) * (y^2+10) \u2265 20 * x * y + 50:= by\n  cases' le_total (x * y) 5 with h h <;>\n  cases' le_total (x^2) (y^2) with h\u2081 h\u2081 <;>\n  cases' le_total x y with h\u2082 h\u2082 <;>\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x + y), sq_nonneg (x * y - 5)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (b + c) / a + (c + a) / b + (a + b) / c \u2265 4 * (a / (b + c) + b / (c + a) + c / (a + b)) + (2 * (a ^ 2 + b ^ 2 + c ^ 2 - a * b - a * c - b * c)) / (a + b + c) ^ 2 := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2192 b \u2265 0 \u2192 c \u2265 0 \u2192 a * b * c \u2260 0 \u2192 a / b + b / c + c / a \u2265 3 * (a + b + c) / (a + b + c):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2192 b \u2265 0 \u2192 c \u2265 0 \u2192 a * b * c \u2260 0 \u2192\n       a / b + b / c + c / a \u2265\n   3 * (a + b + c) / (a + b + c):= by\n  intro a b c ha hb hc habc\n  have h1 : a * b * c \u2260 0 := habc\n  have h2 : 0 < a := lt_of_le_of_ne ha (by rintro rfl; simp_all)\n  have h3 : 0 < b := lt_of_le_of_ne hb (by rintro rfl; simp_all)\n  have h4 : 0 < c := lt_of_le_of_ne hc (by rintro rfl; simp_all)\n  have h5 : 0 < a * b := mul_pos h2 h3\n  have h6 : 0 < b * c := mul_pos h3 h4\n  have h7 : 0 < c * a := mul_pos h4 h2\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]"
  ]
 },
 {
  "old": "(a b : \u2124) : a^3 - b^3 = (a - b) * (a^2 + a * b + b^2) := by",
  "new": "(a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by\n  by_cases h : Nat.Coprime a b\n  exact Or.inl h\n  exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by\n  by_cases h : Nat.Coprime a b <;> simp [h]\n  <;> tauto\n  <;> tauto",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by\n  by_cases h : a.Coprime b\n  exact Or.inl h\n  exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by\n  by_cases h : Nat.Coprime a b <;> simp [h]\n  <;> simp [Nat.coprime_iff_gcd_eq_one, h]\n  <;> by_cases h' : Nat.gcd a b = 1 <;> simp [h']\n  <;> simp [Nat.gcd_eq_right, h']\n  <;> by_cases h'' : a = 0 <;> simp [h'']\n  <;> simp [Nat.gcd_eq_left, h'']\n  <;> by_cases h''' : b = 0 <;> simp [h''']\n  <;> simp [Nat.gcd_eq_left, h''']\n  <;> by_cases h'''' : a = 1 <;> simp [h'''']\n  <;> simp [Nat.gcd_eq_right, h'''']\n  <;> by_cases h''''' : b = 1 <;> simp [h''''']\n  <;> simp [Nat.gcd_eq_right, h''''']\n  <;> simp"
  ]
 },
 {
  "old": "(a b c: \u211d) (ha : a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 1): a^3 + b^3 + c^3 + (15 * a * b * c)/4 \u2265 1/4 := by",
  "new": "(a b : \u2115) (hab : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (hab : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  simp [Nat.eq_one_of_mul_eq_one_right, Nat.eq_one_of_mul_eq_one_left] at hab \u22a2\n  omega\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (hab : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  simp [Nat.eq_one_of_mul_eq_one_right, Nat.coprime_iff_gcd_eq_one, hab]\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (hab : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  cases' Nat.eq_zero_or_pos a with ha ha <;>\n  cases' Nat.eq_zero_or_pos b with hb hb <;>\n  simp_all [Nat.mul_eq_zero, Nat.eq_one_of_mul_eq_one_right]\n  all_goals omega\n  <;>\n  first\n  | exact Or.inl \u27e8by omega, by omega\u27e9\n  | exact Or.inr (Nat.coprime_of_mul_eq_one a b hab)\n  <;>\n  omega\n  <;>\n  omega\n  <;>\n  omega\n  <;>\n  omega\n  <;>\n  omega\n  <;>\n  omega\n  <;>\n  omega\n  <;>\n  omega\n  <;>\n  omega\n  <;>\n  omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (hab : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  have : a = 1 \u2227 b = 1 := by\n    rw [eq_comm]\n    aesop\n  aesop"
  ]
 },
 {
  "old": "(a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : a * b * c = 1) : 8 * a * b * c \u2264 (4 / 3) * (a * b + a * c + b * c) \u2227 (4 / 3) * (a * b + a * c + b * c) \u2264 (2 / 3) * (a ^ 2 + b ^ 2 + c ^ 2 + a * b + a * c + b * c) \u2227(2 / 3) * (a ^ 2 + b ^ 2 + c ^ 2 + a * b + a * c + b * c) \u2264 (4 / 9) * (2 * (a ^ 2 + b ^ 2 + c ^ 2) + a * b + a * c + b * c) \u2227 (4 / 9) * (2 * (a ^ 2 + b ^ 2 + c ^ 2) + a * b + a * c + b * c) \u2264 1 \u2227 1 \u2264 (2 * (a ^ 2 + b ^ 2 + c ^ 2)) / (a + b + c) \u2227 (2 * (a ^ 2 + b ^ 2 + c ^ 2)) / (a + b + c) \u2264 (4 / 3) * (a ^ 2 + b ^ 2 + c ^ 2) := by",
  "new": "(a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : a * b * c = 1) : 1 \u2264 (2 * (a ^ 2 + b ^ 2 + c ^ 2)) / (a + b + c) \u2227 (2 * (a ^ 2 + b ^ 2 + c ^ 2)) / (a + b + c) \u2264 (4 / 3) * (a ^ 2 + b ^ 2 + c ^ 2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_10_2 (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : a * b * c = 1) :  1 \u2264 (2 * (a ^ 2 + b ^ 2 + c ^ 2)) / (a + b + c) \u2227 (2 * (a ^ 2 + b ^ 2 + c ^ 2)) / (a + b + c) \u2264 (4 / 3) * (a ^ 2 + b ^ 2 + c ^ 2):= by\n  have h\u2080 : 0 < a * b := by positivity\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * a := by positivity\n  constructor\n  \u00b7 rw [le_div_iff (by positivity)]\n    nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a),\n      mul_self_nonneg (a - 1), mul_self_nonneg (b - 1), mul_self_nonneg (c - 1)]\n  \u00b7 rw [div_le_iff (by positivity)]\n    nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a),\n      mul_self_nonneg (a - 1), mul_self_nonneg (b - 1), mul_self_nonneg (c - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_10_2 (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : a * b * c = 1) :  1 \u2264 (2 * (a ^ 2 + b ^ 2 + c ^ 2)) / (a + b + c) \u2227 (2 * (a ^ 2 + b ^ 2 + c ^ 2)) / (a + b + c) \u2264 (4 / 3) * (a ^ 2 + b ^ 2 + c ^ 2):= by\n  have h\u2080 : 0 < a * b := mul_pos hab hbc\n  have h\u2081 : 0 < b * c := mul_pos hbc hca\n  have h\u2082 : 0 < a * c := mul_pos hab hca\n  constructor\n  -- Proof of the lower bound\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1)]\n  -- Proof of the upper bound\n  rw [div_le_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_10_2 (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : a * b * c = 1) :  1 \u2264 (2 * (a ^ 2 + b ^ 2 + c ^ 2)) / (a + b + c) \u2227 (2 * (a ^ 2 + b ^ 2 + c ^ 2)) / (a + b + c) \u2264 (4 / 3) * (a ^ 2 + b ^ 2 + c ^ 2):= by\n  constructor\n  \u00b7\n    rw [le_div_iff (show (0 : \u211d) < a + b + c by linarith)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n      mul_self_nonneg (a - 1), mul_self_nonneg (b - 1), mul_self_nonneg (c - 1)]\n  rw [div_le_iff (show (0 : \u211d) < a + b + c by linarith)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n    mul_self_nonneg (a - 1), mul_self_nonneg (b - 1), mul_self_nonneg (c - 1)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : 27 * (a - b * c) * (b - c * a) * (c - a * b) \u2264 8 * a * b * c := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 - x * y) * (1 - y * z) * (1 - z * x) \u2265 4 * x * y * z:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 - x * y) * (1 - y * z) * (1 - z * x) \u2265 4 * x * y * z:= by\n  have h\u2083 : 0 < x * y := by positivity\n  have h\u2084 : 0 < y * z := by positivity\n  have h\u2085 : 0 < z * x := by positivity\n  have h\u2086 : 0 < x * y * z := by positivity\n  have h\u2087 : (x + y + z) ^ 2 = 1 := by rw [hab]; ring\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x * y + y * z + z * x),\n    mul_self_nonneg (x * y - y * z),\n    mul_self_nonneg (y * z - z * x),\n    mul_self_nonneg (z * x - x * y)]\n  <;> linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 - x * y) * (1 - y * z) * (1 - z * x) \u2265 4 * x * y * z:= by\n  have : 0 < x * y := by positivity\n  have : 0 < y * z := by positivity\n  have : 0 < z * x := by positivity\n  have : 0 < x * y * z := by positivity\n  have hxy : x * y < 1 := by\n    nlinarith\n  have hyz : y * z < 1 := by\n    nlinarith\n  have hzx : z * x < 1 := by\n    nlinarith\n  have hxyz : x * y * z < 1 := by\n    nlinarith\n  nlinarith [mul_self_nonneg (x - y), mul_self_nonneg (y - z),\n    mul_self_nonneg (z - x), mul_self_nonneg (x * y - 1 / 3), mul_self_nonneg (y * z - 1 / 3), mul_self_nonneg (z * x - 1 / 3)]\n  <;> nlinarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 - x * y) * (1 - y * z) * (1 - z * x) \u2265 4 * x * y * z:= by\n  have h\u2080 : 0 < x * y := by positivity\n  have h\u2081 : 0 < y * z := by positivity\n  have h\u2082 : 0 < z * x := by positivity\n  have h\u2083 : 0 < x * y * z := by positivity\n  have h\u2084 : (x + y + z) ^ 2 = 1 := by rw [hab]; ring\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_self_nonneg (x * y + y * z + z * x), mul_self_nonneg (x * y - y * z),\n    mul_self_nonneg (y * z - z * x), mul_self_nonneg (z * x - x * y)]\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 - x * y) * (1 - y * z) * (1 - z * x) \u2265 4 * x * y * z:= by\n  have hxy : 0 < x * y := by positivity\n  have hyz : 0 < y * z := by positivity\n  have hxz : 0 < z * x := by positivity\n  have hxyz : 0 < x * y * z := by positivity\n  have hxy' : x * y < 1 := by nlinarith\n  have hyz' : y * z < 1 := by nlinarith\n  have hxz' : z * x < 1 := by nlinarith\n  have h : (1 - x * y) * (1 - y * z) * (1 - z * x) \u2265 4 * x * y * z := by\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x), sq_nonneg (x * y + y * z + z * x),\n      sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y)]\n  linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : a^3 / (1 + b) / (1 + c) + b^3 / (1 + c) / (1 + a) + c^3 / (1 + a) / (1 + b) \u2265 3 / 4 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) : (x^3 / (1 + y) + y^3 / (1 + z) + z^3 / (1 + x)) \u2265 3 / 4 - 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) :  (x^3 / (1 + y) + y^3 / (1 + z) + z^3 / (1 + x)) \u2265 3 / 4 - 1:= by\n  have : 0 < x * y := by positivity\n  have : 0 < y * z := by positivity\n  have : 0 < z * x := by positivity\n  have h\u2080 : 0 \u2264 x^3 / (1 + y) + y^3 / (1 + z) + z^3 / (1 + x) := by positivity\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (y - 1), sq_nonneg (z - 1), sq_nonneg (x * y - 1), sq_nonneg (y * z - 1), sq_nonneg (z * x - 1)]\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) :  (x^3 / (1 + y) + y^3 / (1 + z) + z^3 / (1 + x)) \u2265 3 / 4 - 1:= by\n  have h : 0 \u2264 x^3 / (1 + y) + y^3 / (1 + z) + z^3 / (1 + x) := by positivity\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_pos hx hy, mul_pos hy hz, mul_pos hz hx]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) :  (x^3 / (1 + y) + y^3 / (1 + z) + z^3 / (1 + x)) \u2265 3 / 4 - 1:= by\n  have h\u2080 : x * y > 0 := mul_pos hx hy\n  have h\u2081 : x * z > 0 := mul_pos hx hz\n  have h\u2082 : y * z > 0 := mul_pos hy hz\n  have h\u2083 : x ^ 3 / (1 + y) + y ^ 3 / (1 + z) + z ^ 3 / (1 + x) \u2265 3 / 4 - 1 := by\n    have h\u2084 : x ^ 3 / (1 + y) + y ^ 3 / (1 + z) + z ^ 3 / (1 + x) \u2265 0 := by positivity\n    nlinarith\n  linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption"
  ]
 },
 {
  "old": ": \u2200 x y z : \u211d, 2 * (Real.sqrt ((x + y + 4 * z) * (y + z + 4 * x)) + Real.sqrt ((x + y + 4 * z) * (x + z + 4 * y)) + Real.sqrt ((x + z + 4 * y) * (y + z + 4 * x))) \u2265 9 * ((x + y) * (x + z) + (x + (y + z) / 2) ^ 2 / (2 * x + y + z) + (y + z) * (y + x) + (y + (x + z) / 2) ^ 2 / (2 * y + x + z) + (z + x) * (z + y) + (z + (x + y) / 2) ^ 2 / (2 * z + x + y)) / 2 - 6 * (x + y + z) := by",
  "new": ": Real.sqrt (Real.sqrt (1 + 16 * x ^ 2) + 4 * x) \u2264 2 * Real.sqrt (1 + 8 * x ^ 2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt (Real.sqrt (1 + 16 * x ^ 2) + 4 * x) \u2264 2 * Real.sqrt (1 + 8 * x ^ 2):= by\n  have h\u2081 : 0 \u2264 Real.sqrt (1 + 16 * x ^ 2) := Real.sqrt_nonneg (1 + 16 * x ^ 2)\n  have h\u2082 : 0 \u2264 Real.sqrt (1 + 8 * x ^ 2) := Real.sqrt_nonneg (1 + 8 * x ^ 2)\n  have h\u2083 : Real.sqrt (1 + 16 * x ^ 2) + 4 * x \u2264 2 * (Real.sqrt (1 + 8 * x ^ 2)) ^ 2 := by\n    nlinarith [sq_sqrt (show 0 \u2264 1 + 16 * x ^ 2 by nlinarith),\n      sq_sqrt (show 0 \u2264 1 + 8 * x ^ 2 by nlinarith),\n      mul_self_nonneg (x - 1 / 2),\n      mul_self_nonneg (x - 2 * Real.sqrt (1 + 8 * x ^ 2))]\n  have h\u2084 : Real.sqrt (Real.sqrt (1 + 16 * x ^ 2) + 4 * x) \u2264 2 * Real.sqrt (1 + 8 * x ^ 2) := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  exact h\u2084\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt (Real.sqrt (1 + 16 * x ^ 2) + 4 * x) \u2264 2 * Real.sqrt (1 + 8 * x ^ 2):= by\n  have h\u2080 : 0 \u2264 Real.sqrt (1 + 8 * x ^ 2) := Real.sqrt_nonneg (1 + 8 * x ^ 2)\n  have h\u2081 : 0 \u2264 Real.sqrt (1 + 16 * x ^ 2) := Real.sqrt_nonneg (1 + 16 * x ^ 2)\n  have h\u2082 : 0 \u2264 Real.sqrt (1 + 8 * x ^ 2) := Real.sqrt_nonneg (1 + 8 * x ^ 2)\n  have h\u2083 : 0 \u2264 4 * x ^ 2 := by positivity\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  \u00b7 positivity\n  \u00b7 nlinarith [sq_sqrt (show 0 \u2264 1 + 8 * x ^ 2 from by positivity), sq_sqrt (show 0 \u2264 1 + 16 * x ^ 2 from by positivity), sq_nonneg (x - 1 / 4)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt (Real.sqrt (1 + 16 * x ^ 2) + 4 * x) \u2264 2 * Real.sqrt (1 + 8 * x ^ 2):= by\n  have h : 0 \u2264 (x - 1) ^ 2 * (x + 1) ^ 2 := by positivity\n  apply Real.sqrt_le_iff.mpr\n  refine' \u27e8by positivity, _\u27e9\n  have h\u2081 : Real.sqrt (1 + 16 * x ^ 2) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2082 : Real.sqrt (1 + 8 * x ^ 2) \u2265 0 := Real.sqrt_nonneg _\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 1 + 16 * x ^ 2 from by positivity),\n    sq_sqrt (show (0 : \u211d) \u2264 1 + 8 * x ^ 2 from by positivity), h]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt (Real.sqrt (1 + 16 * x ^ 2) + 4 * x) \u2264 2 * Real.sqrt (1 + 8 * x ^ 2):= by\n  have h\u2080 : 0 \u2264 Real.sqrt (1 + 16 * x ^ 2) := Real.sqrt_nonneg _\n  have h\u2081 : 0 \u2264 Real.sqrt (1 + 8 * x ^ 2) := Real.sqrt_nonneg _\n  have h\u2082 : 0 \u2264 4 * x ^ 2 := by positivity\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  \u00b7 positivity\n  \u00b7 nlinarith [sq_sqrt (show 0 \u2264 1 + 16 * x ^ 2 by positivity),\n      sq_sqrt (show 0 \u2264 1 + 8 * x ^ 2 by positivity), sq_nonneg (x - 1 / 2),\n      sq_nonneg (x + 1 / 2)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (h : a > 0 \u2227 b > 0 \u2227 c > 0) : a^2 / (b + c) + b^2 / (c + a) + c^2 / (a + b) \u2265 1 / 2 * Real.sqrt (3 * (a^2 + b^2 + c^2)) := by",
  "new": ": \u2200 x : \u211d, x > 0 \u2192 x ^ 2 / (2 * x + 1) + 1 / (x + 1) ^ 2 \u2265 1 / 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 2 / (2 * x + 1) + 1 / (x + 1) ^ 2 \u2265 1 / 4:= by\n  intro x hx\n  have h\u2080 : x > 0 := hx\n  have h\u2081 : (x + 1) ^ 2 > 0 := by nlinarith\n  have h\u2082 : (2 * x + 1) > 0 := by nlinarith\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (2 * x - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 2 / (2 * x + 1) + 1 / (x + 1) ^ 2 \u2265 1 / 4:= by\n  intro x hx\n  have h\u2080 : 0 < x + 1 := by linarith\n  have h\u2081 : 0 < 2 * x + 1 := by linarith\n  have h\u2082 : 0 < x ^ 2 + 1 := by positivity\n  have h\u2083 : 0 < x ^ 2 + 2 * x + 1 := by positivity\n  have h\u2084 : 0 < x ^ 2 + 2 * x + 1 + x ^ 2 := by positivity\n  field_simp\n  rw [le_div_iff, mul_comm]\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (x + 1), sq_nonneg (x - 1 / 3)]\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 2 / (2 * x + 1) + 1 / (x + 1) ^ 2 \u2265 1 / 4:= by\n  intro x hx\n  field_simp [add_comm]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (x + 1), sq_nonneg (2 * x - 1),\n    sq_nonneg (2 * x + 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 2 / (2 * x + 1) + 1 / (x + 1) ^ 2 \u2265 1 / 4:= by\n  intro x hx\n  have hx' : 0 < x ^ 2 := sq_pos_of_pos hx\n  have hx'' : 0 < x ^ 2 + 1 := by nlinarith\n  have hx''' : 0 < x ^ 2 + 2 * x + 1 := by nlinarith\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (x + 1)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a / (b + c) + b / (c + a) + c / (a + b) + Real.sqrt ((a * b + b * c + c * a) / (a ^ 2 + b ^ 2 + c ^ 2))) \u2265 5 / 2 := by",
  "new": ": Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) \u2265 1 + Real.sqrt 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) \u2265 1 + Real.sqrt 2:= by\n  have h\u2080 : 0 \u2264 Real.sqrt 2 := Real.sqrt_nonneg 2\n  have h\u2081 : 0 \u2264 Real.sqrt (Real.sqrt 2 + 1) := Real.sqrt_nonneg (Real.sqrt 2 + 1)\n  have h\u2082 : 0 \u2264 Real.sqrt 2 + 1 := by linarith\n  have h\u2083 : 0 \u2264 Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt 2 := by linarith\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 Real.sqrt 2 + 1 from h\u2082),\n    sq_sqrt (show (0 : \u211d) \u2264 2 from by linarith),\n    sq_sqrt (show (0 : \u211d) \u2264 2 from by linarith)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) \u2265 1 + Real.sqrt 2:= by\n  have h\u2080 : Real.sqrt 2 \u2265 0 := Real.sqrt_nonneg 2\n  have h\u2081 : Real.sqrt (Real.sqrt 2 + 1) \u2265 Real.sqrt 2 / 2 + 1 / 2 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_sqrt (show (0 : \u211d) \u2264 2 from by linarith)]\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 Real.sqrt 2 + 1 from by positivity)]\n  <;> linarith"
  ]
 },
 {
  "old": "(x y t : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hxy : x + y = 2) (ht : 0 \u2264 t) : x^t*y^t*(x^t+y^t)+(t-3)*(x*y)^t \u2264 t-1 := by",
  "new": "(x y : \u211d) (hxy : 0 < x \u2227 0 < y \u2227 x + y = 1) : x ^ 2 * y ^ 2 * (x + y) + (x ^ 2 + y ^ 2) ^ 2 \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (x y : \u211d) (hxy : 0 < x \u2227 0 < y \u2227 x + y = 1) :\n  x ^ 2 * y ^ 2 * (x + y) + (x ^ 2 + y ^ 2) ^ 2 \u2264 1:= by\n  have h\u2081 : y = 1 - x := by linarith\n  subst h\u2081\n  have h\u2082 : 0 \u2264 x * (1 - x) := by nlinarith\n  nlinarith [sq_nonneg (x - 1 / 2)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a + b) / (b + c) + (b + c) / (c + a) + (c + a) / (a + b) \u2265 3 / 2 + Real.sqrt ((a + b) / (2 * (a + b + 2 * c))) + Real.sqrt ((b + c) / (2 * (2 * a + b + c))) + Real.sqrt ((a + c) / (2 * (a + 2 * b + c))) := by",
  "new": ": Real.sqrt (a^2 + b^2) + Real.sqrt (b^2 + c^2) + Real.sqrt (c^2 + a^2) \u2265 a + b + c:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (a^2 + b^2) + Real.sqrt (b^2 + c^2) + Real.sqrt (c^2 + a^2) \u2265 a + b + c:= by\n  have h : \u2200 x y : \u211d, Real.sqrt (x^2 + y^2) \u2265 x := by\n    intro x y\n    have h' : x^2 + y^2 \u2265 x^2 := by\n      nlinarith\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  nlinarith [h a b, h b c, h c a]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (a^2 + b^2) + Real.sqrt (b^2 + c^2) + Real.sqrt (c^2 + a^2) \u2265 a + b + c:= by\n  have h1 : Real.sqrt (a^2 + b^2) \u2265 a := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h2 : Real.sqrt (b^2 + c^2) \u2265 b := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h3 : Real.sqrt (c^2 + a^2) \u2265 c := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (a^2 + b^2) + Real.sqrt (b^2 + c^2) + Real.sqrt (c^2 + a^2) \u2265 a + b + c:= by\n  have h : \u2200 x y : \u211d, Real.sqrt (x^2 + y^2) \u2265 x := by\n    intro x y\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  nlinarith [h a b, h b c, h c a]"
  ]
 },
 {
  "old": "(k : \u2115) (h\u2081 : 4 < k) (h\u2082 : 10^k > (Real.sqrt (1377 * k^2 + 1) + 27 * k)) : 10^(k + 1) > (Real.sqrt (1377 * (k + 1)^2 + 1) + 27 * (k + 1)) := by",
  "new": "(n : \u2115) (hn : 2 < n) : (\u2203 d, d \u2223 n \u2227 d \u2260 1 \u2227 d \u2260 n) \u2228 (\u2200 d, d \u2223 n \u2192 d = 1 \u2228 d = n):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_small_coprime (n : \u2115) (hn : 2 < n) :\n    (\u2203 d, d \u2223 n \u2227 d \u2260 1 \u2227 d \u2260 n) \u2228 (\u2200 d, d \u2223 n \u2192 d = 1 \u2228 d = n):= by\n  refine' or_iff_not_imp_right.mpr fun h => _\n  push_neg at h\n  obtain \u27e8d, hd, hd1, hd2\u27e9 := h\n  exact \u27e8d, hd, hd1, hd2\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_small_coprime (n : \u2115) (hn : 2 < n) :\n    (\u2203 d, d \u2223 n \u2227 d \u2260 1 \u2227 d \u2260 n) \u2228 (\u2200 d, d \u2223 n \u2192 d = 1 \u2228 d = n):= by\n  by_cases h : \u2200 d, d \u2223 n \u2192 d = 1 \u2228 d = n <;>\n    simp_all\n  <;>\n    exact \u27e8n, by simp_all\u27e9\n  <;>\n    omega\n  <;>\n    omega\n  <;>\n    omega\n  <;>\n    omega\n  <;>\n    omega\n  <;>\n    omega\n  <;>\n    omega\n  <;>\n    omega\n  <;>\n    omega\n  <;>\n    omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_small_coprime (n : \u2115) (hn : 2 < n) :\n    (\u2203 d, d \u2223 n \u2227 d \u2260 1 \u2227 d \u2260 n) \u2228 (\u2200 d, d \u2223 n \u2192 d = 1 \u2228 d = n):= by\n  by_cases h : \u2200 d, d \u2223 n \u2192 d = 1 \u2228 d = n\n  \u00b7 exact Or.inr h\n  \u00b7 apply Or.inl\n    push_neg at h\n    obtain \u27e8d, hd, hd\u2081, hd\u2082\u27e9 := h\n    exact \u27e8d, hd, hd\u2081, hd\u2082\u27e9\n  <;> rfl\n  <;> rfl\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_small_coprime (n : \u2115) (hn : 2 < n) :\n    (\u2203 d, d \u2223 n \u2227 d \u2260 1 \u2227 d \u2260 n) \u2228 (\u2200 d, d \u2223 n \u2192 d = 1 \u2228 d = n):= by\n  by_cases h : \u2200 d, d \u2223 n \u2192 d = 1 \u2228 d = n\n  right\n  exact h\n  left\n  push_neg at h\n  obtain \u27e8d, hd1, hd2\u27e9 := h\n  refine' \u27e8d, hd1, by aesop, by aesop\u27e9"
  ]
 },
 {
  "old": "(a b c d : \u211d) : (1 + (b + c + d) / a) + (1 + (a + c + d) / b) + (1 + (a + b + d) / c) + (1 + (a + b + c) / d) \u2265 16 := by",
  "new": ": \u2200 a b c d : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 d > 0 \u2192 16 \u2264 1 + (b + c + d) / a + (1 + (a + c + d) / b) + (1 + (a + b + d) / c) + (1 + (a + b + c) / d) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 d > 0 \u2192\n   16 \u2264 1 + (b + c + d) / a + (1 + (a + c + d) / b) + (1 + (a + b + d) / c) + (1 + (a + b + c) / d) := by\n  rintro a b c d \u27e8ha, hb, hc, hd\u27e9\n  have h\u2081 : 0 < a * b * c * d := by positivity\n  have h\u2082 : 0 < a * b * c := by positivity\n  have h\u2083 : 0 < a * b * d := by positivity\n  have h\u2084 : 0 < a * c * d := by positivity\n  have h\u2085 : 0 < b * c * d := by positivity\n  have h\u2086 : 0 < a * b := by positivity\n  have h\u2087 : 0 < a * c := by positivity\n  have h\u2088 : 0 < a * d := by positivity\n  have h\u2089 : 0 < b * c := by positivity\n  have h\u2081\u2080 : 0 < b * d := by positivity\n  have h\u2081\u2081 : 0 < c * d := by positivity\n  field_simp [ha, hb, hc, hd]\n  rw [le_div_iff (by positivity), \u2190 sub_nonneg]\n  ring_nf\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (a - d), sq_nonneg (b - c), sq_nonneg (b - d), sq_nonneg (c - d)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 d > 0 \u2192\n   16 \u2264 1 + (b + c + d) / a + (1 + (a + c + d) / b) + (1 + (a + b + d) / c) + (1 + (a + b + c) / d) := by\n  rintro a b c d \u27e8a_pos, b_pos, c_pos, d_pos\u27e9\n  have h\u2081 : 0 < a * b * c * d := by positivity\n  have h\u2082 : 0 < a * b * c := by positivity\n  have h\u2083 : 0 < a * b * d := by positivity\n  have h\u2084 : 0 < a * c * d := by positivity\n  have h\u2085 : 0 < b * c * d := by positivity\n  have h\u2086 : 0 < a * b := by positivity\n  have h\u2087 : 0 < a * c := by positivity\n  have h\u2088 : 0 < a * d := by positivity\n  have h\u2089 : 0 < b * c := by positivity\n  have h\u2081\u2080 : 0 < b * d := by positivity\n  have h\u2081\u2081 : 0 < c * d := by positivity\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (a - c), mul_self_nonneg (a - d),\n    mul_self_nonneg (b - c), mul_self_nonneg (b - d), mul_self_nonneg (c - d)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 d > 0 \u2192\n   16 \u2264 1 + (b + c + d) / a + (1 + (a + c + d) / b) + (1 + (a + b + d) / c) + (1 + (a + b + c) / d) := by\n  rintro a b c d \u27e8a_pos, b_pos, c_pos, d_pos\u27e9\n  field_simp [a_pos, b_pos, c_pos, d_pos]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (a - d), sq_nonneg (b - c),\n    sq_nonneg (b - d), sq_nonneg (c - d), mul_pos a_pos b_pos, mul_pos a_pos c_pos, mul_pos a_pos d_pos,\n    mul_pos b_pos c_pos, mul_pos b_pos d_pos, mul_pos c_pos d_pos]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 1) : (a^2 + b^2 + c^2)^2 \u2265 (ca^2 + b^2*a + bc^2)*(a^2 + b^2 + c^2) + (2:\u211d) / 27 := by",
  "new": "(a b c : \u211d) (ha : a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 1) : a^4 + b^4 + c^4 + 2 * a^2 * b^2 + 2 * b^2 * c^2 + 2 * c^2 * a^2 \u2265 4 * a * b * b * c * c * a:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 1) : a^4 + b^4 + c^4 + 2 * a^2 * b^2 + 2 * b^2 * c^2 + 2 * c^2 * a^2 \u2265 4 * a * b * b * c * c * a:= by\n  have : (a + b + c)^2 = 1 := by simp [ha.2]\n  nlinarith [sq_nonneg (a^2 - b^2), sq_nonneg (b^2 - c^2), sq_nonneg (c^2 - a^2),\n    mul_nonneg ha.1 ha.2.1, mul_nonneg ha.2.1 ha.2.2.1, mul_nonneg ha.1 ha.2.2.1,\n    mul_nonneg (sq_nonneg a) (sq_nonneg b), mul_nonneg (sq_nonneg b) (sq_nonneg c),\n    mul_nonneg (sq_nonneg c) (sq_nonneg a)]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 1) : a^4 + b^4 + c^4 + 2 * a^2 * b^2 + 2 * b^2 * c^2 + 2 * c^2 * a^2 \u2265 4 * a * b * b * c * c * a:= by\n  have h\u2081 : (a + b + c) ^ 2 = 1 := by simp [ha]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_nonneg ha.1 ha.2.1, mul_nonneg ha.2.1 ha.2.2.1, mul_nonneg ha.1 ha.2.2.1, mul_nonneg (sq_nonneg a) (sq_nonneg b), mul_nonneg (sq_nonneg b) (sq_nonneg c), mul_nonneg (sq_nonneg c) (sq_nonneg a)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 1) : a^4 + b^4 + c^4 + 2 * a^2 * b^2 + 2 * b^2 * c^2 + 2 * c^2 * a^2 \u2265 4 * a * b * b * c * c * a:= by\n  have h1 : a^2 + b^2 + c^2 \u2264 1 := by\n    nlinarith\n  have h2 : 0 \u2264 a^2 * b^2 := by\n    nlinarith\n  have h3 : 0 \u2264 b^2 * c^2 := by\n    nlinarith\n  have h4 : 0 \u2264 c^2 * a^2 := by\n    nlinarith\n  have h5 : 0 \u2264 a^2 * b^2 * c^2 := by\n    nlinarith\n  nlinarith [sq_nonneg (a^2 - b^2), sq_nonneg (b^2 - c^2), sq_nonneg (c^2 - a^2)]\n  <;> simp [*]\n  <;> linarith\n  <;> linarith\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (1 + a ^ 3) / (1 + b * c ^ 2) + (1 + b ^ 3) / (1 + c * a ^ 2) + (1 + c ^ 3) / (1 + a * b ^ 2) \u2265 3 := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a * b + b * c + c * a \u2264 (1 + a ^ 2) * (1 + b ^ 2) ^ 2 * (1 + c ^ 2) ^ 2 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :  a * b + b * c + c * a \u2264 (1 + a ^ 2) * (1 + b ^ 2) ^ 2 * (1 + c ^ 2) ^ 2  := by\n  have h\u2080 : a * b + b * c + c * a \u2264 (1 + a ^ 2) * (1 + b ^ 2) ^ 2 * (1 + c ^ 2) ^ 2 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_nonneg ha.le hb.le,\n      mul_nonneg hb.le hc.le, mul_nonneg ha.le hc.le,\n      mul_nonneg (sq_nonneg a) (sq_nonneg b),\n      mul_nonneg (sq_nonneg b) (sq_nonneg c),\n      mul_nonneg (sq_nonneg a) (sq_nonneg c),\n      mul_nonneg (sq_nonneg (a * b)) (sq_nonneg c),\n      mul_nonneg (sq_nonneg (b * c)) (sq_nonneg a),\n      mul_nonneg (sq_nonneg (c * a)) (sq_nonneg b)]\n  linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a / (a + b) + b / (b + c) + c / (c + a)) \u2265 27 * a * b * c / (2 * (a + b + c) * (a * b + b * c + c * a)) := by",
  "new": ": \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 (a / (a + b) + b / (b + c) + c / (c + a)) \u2265 27 * a * b * c / (2 * (a + b + c) * (a * b + b * c + c * a)):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192\n   (a / (a + b) + b / (b + c) + c / (c + a)) \u2265\n   27 * a * b * c / (2 * (a + b + c) * (a * b + b * c + c * a)):= by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  have hab : 0 < a * b := by positivity\n  have hbc : 0 < b * c := by positivity\n  have hac : 0 < a * c := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a^2 - b^2), sq_nonneg (b^2 - c^2), sq_nonneg (a^2 - c^2),\n    sq_nonneg (a^2 - a * b), sq_nonneg (b^2 - b * c), sq_nonneg (c^2 - c * a),\n    mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a),\n    mul_self_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192\n   (a / (a + b) + b / (b + c) + c / (c + a)) \u2265\n   27 * a * b * c / (2 * (a + b + c) * (a * b + b * c + c * a)):= by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  have h\u2080 : 0 < a * b := by positivity\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * a := by positivity\n  have h\u2083 : 0 < a * b * c := by positivity\n  field_simp [ha.ne', hb.ne', hc.ne', h\u2080.ne', h\u2081.ne', h\u2082.ne', h\u2083.ne']\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a^2 - b^2), sq_nonneg (b^2 - c^2), sq_nonneg (c^2 - a^2),\n    sq_nonneg (a^2 - a * b), sq_nonneg (b^2 - b * c), sq_nonneg (c^2 - c * a),\n    sq_nonneg (a * b - a * c), sq_nonneg (b * c - b * a), sq_nonneg (c * a - c * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192\n   (a / (a + b) + b / (b + c) + c / (c + a)) \u2265\n   27 * a * b * c / (2 * (a + b + c) * (a * b + b * c + c * a)):= by\n  intro a b c h\u2081\n  obtain \u27e8h\u2082, h\u2083, h\u2084\u27e9 := h\u2081\n  have h\u2085 : 0 < b * c := by positivity\n  have h\u2086 : 0 < c * a := by positivity\n  have h\u2087 : 0 < a * b := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a^2 - b^2), sq_nonneg (b^2 - c^2), sq_nonneg (c^2 - a^2),\n    sq_nonneg (a^2 - a * b), sq_nonneg (b^2 - b * c), sq_nonneg (c^2 - c * a),\n    sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192\n   (a / (a + b) + b / (b + c) + c / (c + a)) \u2265\n   27 * a * b * c / (2 * (a + b + c) * (a * b + b * c + c * a)):= by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a * c - b * a), sq_nonneg (b * a - c * b), sq_nonneg (c * b - a * c),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le,\n    mul_nonneg (sq_nonneg a) hb.le, mul_nonneg (sq_nonneg b) hc.le, mul_nonneg (sq_nonneg c) ha.le,\n    mul_nonneg (sq_nonneg (a - b)) hc.le, mul_nonneg (sq_nonneg (b - c)) ha.le,\n    mul_nonneg (sq_nonneg (c - a)) hb.le]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0) (hab : a + b + c = 1) : a^3 + b^3 + c^3 + 6 * a * b * c \u2265 1 / 4 := by",
  "new": "(a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  cases a <;> cases b <;> simp_all [Nat.mul_eq_zero, Nat.coprime_iff_gcd_eq_one, Nat.gcd_zero_left]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  cases' Nat.eq_zero_or_pos a with ha ha <;> cases' Nat.eq_zero_or_pos b with hb hb\n  all_goals simp_all [Nat.mul_eq_zero, Nat.coprime_iff_gcd_eq_one, Nat.gcd_zero_right]\n  all_goals omega\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  cases a <;> cases b <;> simp_all [Nat.mul_eq_zero, Nat.one_ne_zero]\n  <;> norm_num at h <;> simp_all [Nat.coprime_iff_gcd_eq_one, Nat.gcd_eq_right]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : (4 * a - Real.sqrt b - Real.sqrt c) / (b + c) + (4 * b - Real.sqrt c - Real.sqrt a) / (c + a) + (4 * c - Real.sqrt a - Real.sqrt b) / (a + b) \u2265 3 * (2 - Real.sqrt 3) := by",
  "new": ": Real.sqrt 3 \u2264 2 * Real.sqrt (2 ^ 2 + 1 ^ 2) - 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 3 \u2264 2 * Real.sqrt (2 ^ 2 + 1 ^ 2) - 1:= by\n  have h\u2080 : Real.sqrt 3 \u2264 2 * Real.sqrt (2 ^ 2 + 1 ^ 2) - 1 := by\n    have h\u2081 : 0 \u2264 Real.sqrt (2 ^ 2 + 1 ^ 2) := Real.sqrt_nonneg _\n    have h\u2082 : Real.sqrt 3 \u2264 Real.sqrt (2 ^ 2 + 1 ^ 2) := by\n      apply Real.sqrt_le_sqrt\n      nlinarith\n    nlinarith [sq_sqrt (show (0 : \u211d) \u2264 2 ^ 2 + 1 ^ 2 by nlinarith)]\n  exact h\u2080",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 3 \u2264 2 * Real.sqrt (2 ^ 2 + 1 ^ 2) - 1:= by\n  have h\u2081 : Real.sqrt 3 \u2264 2 * Real.sqrt (2 ^ 2 + 1 ^ 2) - 1 := by\n    rw [mul_comm]\n    refine' le_of_sub_nonneg _\n    have h\u2082 : 0 \u2264 Real.sqrt (2 ^ 2 + 1 ^ 2) := Real.sqrt_nonneg _\n    have h\u2083 : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg _\n    have h\u2084 : 0 \u2264 Real.sqrt (2 ^ 2 + 1 ^ 2) * 2 := by positivity\n    nlinarith [sq_sqrt (show (0 : \u211d) \u2264 2 ^ 2 + 1 ^ 2 from by positivity),\n      sq_sqrt (show (0 : \u211d) \u2264 3 from by positivity),\n      sq_nonneg (Real.sqrt 3 - 2 * Real.sqrt (2 ^ 2 + 1 ^ 2))]\n  linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 3 \u2264 2 * Real.sqrt (2 ^ 2 + 1 ^ 2) - 1:= by\n  have h\u2080 : 0 < Real.sqrt 3 := by\n    exact Real.sqrt_pos.mpr (by norm_num)\n  have h\u2081 : Real.sqrt 3 ^ 2 = 3 := by\n    exact Real.sq_sqrt (by positivity)\n  have h\u2082 : Real.sqrt (2 ^ 2 + 1 ^ 2) \u2265 Real.sqrt 3 := by\n    apply Real.sqrt_le_sqrt\n    norm_num\n  nlinarith\n  <;> norm_num"
  ]
 },
 {
  "old": "(a b : \u211d) (ha : 0 < a) (hb : 0 < b) : (a + 1 / a) ^ 2 + (b + 1 / b) ^ 2 \u2265 (16 * Real.sqrt 3 / 9) * (a + b) := by",
  "new": ": \u2200 a b : \u211d, 0 < a \u2227 0 < b \u2192 (a + 1 / a) ^ 2 + (b + 1 / b) ^ 2 \u2265 (16 * Real.sqrt 3 / 9) * (a + b):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b : \u211d, 0 < a \u2227 0 < b \u2192\n   (a + 1 / a) ^ 2 + (b + 1 / b) ^ 2 \u2265 (16 * Real.sqrt 3 / 9) * (a + b):= by\n  rintro a b \u27e8ha, hb\u27e9\n  have habs : 0 < a * b := by positivity\n  have h\u2080 : 0 < a * b * (a * b) := by positivity\n  have h\u2081 : 0 < a ^ 2 * b ^ 2 := by positivity\n  field_simp [ha, hb, habs, h\u2080, h\u2081]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 from by positivity),\n    mul_self_nonneg (a * b - 3), mul_self_nonneg (a - b),\n    mul_self_nonneg (a * b - Real.sqrt 3), mul_self_nonneg (a - Real.sqrt 3),\n    mul_self_nonneg (b - Real.sqrt 3)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b : \u211d, 0 < a \u2227 0 < b \u2192\n   (a + 1 / a) ^ 2 + (b + 1 / b) ^ 2 \u2265 (16 * Real.sqrt 3 / 9) * (a + b):= by\n  intro a b hab\n  have ha : 0 < a := hab.1\n  have hb : 0 < b := hab.2\n  have h : 0 < a * b := by positivity\n  have h\u2081 : 0 < a ^ 2 * b ^ 2 := by positivity\n  have h\u2082 : 0 < Real.sqrt 3 := by positivity\n  have h\u2083 : 0 < a ^ 2 * b ^ 2 * Real.sqrt 3 := by positivity\n  field_simp [ha, hb, h, h\u2081, h\u2082, h\u2083]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_sqrt (by positivity : (0 : \u211d) \u2264 3),\n    mul_self_nonneg (a * b - 3),\n    mul_self_nonneg (a - b),\n    mul_self_nonneg (a + b),\n    mul_self_nonneg (a + b - 2 * Real.sqrt 3)]\n  <;> linarith"
  ]
 },
 {
  "old": "(x y z : \u211d) (h\u2080 : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z) (h\u2081 : 0 < y) (h\u2082 : x \u2265 y \u2227 y \u2265 z) : (x / (y + z))^2 + (y / (z + x))^2 + (z / (x + y))^2 + 6 / 7 \u2265 5 / 7 * (x / (y + z) + y / (z + x) + z / (x + y))^2 := by",
  "new": ": \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192 (x / (y + z) + y / (z + x) + z / (x + y))^2 \u2264 9 * (x / (y + z))^2 + 9 * (y / (z + x))^2 + 9 * (z / (x + y))^2 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192 (x / (y + z) + y / (z + x) + z / (x + y))^2 \u2264 9 * (x / (y + z))^2 + 9 * (y / (z + x))^2 + 9 * (z / (x + y))^2 := by\n  rintro x y z \u27e8hx, hy, hz\u27e9\n  have hxy : 0 < x + y := add_pos hx hy\n  have hyz : 0 < y + z := add_pos hy hz\n  have hxz : 0 < z + x := add_pos hz hx\n  have h\u2081 : 0 < x * y := mul_pos hx hy\n  have h\u2082 : 0 < y * z := mul_pos hy hz\n  have h\u2083 : 0 < z * x := mul_pos hz hx\n  nlinarith [sq_nonneg (x / (y + z) - y / (z + x)),\n    sq_nonneg (x / (y + z) - z / (x + y)),\n    sq_nonneg (y / (z + x) - z / (x + y)),\n    sq_nonneg (x * z - y * x), sq_nonneg (x * y - z * y), sq_nonneg (y * x - z * x)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192 (x / (y + z) + y / (z + x) + z / (x + y))^2 \u2264 9 * (x / (y + z))^2 + 9 * (y / (z + x))^2 + 9 * (z / (x + y))^2 := by\n  rintro x y z \u27e8hx, hy, hz\u27e9\n  simp only [sq]\n  nlinarith [sq_nonneg (x / (y + z) - y / (z + x)), sq_nonneg (y / (z + x) - z / (x + y)),\n    sq_nonneg (z / (x + y) - x / (y + z))]\n  <;> norm_num"
  ]
 },
 {
  "old": "(n : \u2115) (hn : 3 \u2264 n) : 2 * n + 1 < n ^ 2 := by",
  "new": "{m n : \u2115} (hmn : m \u2265 2) (hn : n \u2265 2) : Nat.Coprime m n \u2192 m \u2223 n^2 \u2192 m \u2223 n := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_of_ge_two {m n : \u2115} (hmn : m \u2265 2) (hn : n \u2265 2) : Nat.Coprime m n \u2192 m \u2223 n^2 \u2192 m \u2223 n := by\n  intro h\u2080 h\u2081\n  have h\u2083 : m \u2223 n^2 := h\u2081\n  have h\u2084 : m \u2223 n := by\n    have h\u2085 : m \u2223 n^2 := h\u2083\n    have h\u2086 : m \u2223 n := by\n      rw [Nat.pow_two] at h\u2085\n      exact Nat.Coprime.dvd_of_dvd_mul_left h\u2080 h\u2085\n    exact h\u2086\n  exact h\u2084"
  ]
 },
 {
  "old": "(x y z n : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 1) : 1 / (x ^ (n + 3) + y ^ (n + 2) + z ^ (n + 1)) + 1 / (y ^ (n + 3) + z ^ (n + 2) + x ^ (n + 1)) + 1 / (z ^ (n + 3) + x ^ (n + 2) + y ^ (n + 1)) \u2265 3 / (x ^ n + y ^ n + z ^ n) := by",
  "new": "(x y z : \u211d) (n : \u2115) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 1) : (x ^ (n + 3) + y ^ (n + 2) + z ^ (n + 1)) \u2264 1 \u2227 (y ^ (n + 3) + z ^ (n + 2) + x ^ (n + 1)) \u2264 1 \u2227 (z ^ (n + 3) + x ^ (n + 2) + y ^ (n + 1)) \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (x y z : \u211d) (n : \u2115) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 1) :\n      (x ^ (n + 3) + y ^ (n + 2) + z ^ (n + 1)) \u2264 1 \u2227 (y ^ (n + 3) + z ^ (n + 2) + x ^ (n + 1)) \u2264 1 \u2227 (z ^ (n + 3) + x ^ (n + 2) + y ^ (n + 1)) \u2264 1:= by\n  have h1 : x + y + z = 1 := h\n  have h2 : x ^ (n + 3) + y ^ (n + 2) + z ^ (n + 1) \u2264 1 := by\n    have h3 : x ^ (n + 3) \u2264 x ^ 1 := by\n      apply pow_le_pow_of_le_one\n      \u00b7 linarith\n      \u00b7 linarith\n      \u00b7 linarith\n    have h4 : y ^ (n + 2) \u2264 y ^ 1 := by\n      apply pow_le_pow_of_le_one\n      \u00b7 linarith\n      \u00b7 linarith\n      \u00b7 linarith\n    have h5 : z ^ (n + 1) \u2264 z ^ 1 := by\n      apply pow_le_pow_of_le_one\n      \u00b7 linarith\n      \u00b7 linarith\n      \u00b7 linarith\n    linarith\n  have h3 : y ^ (n + 3) + z ^ (n + 2) + x ^ (n + 1) \u2264 1 := by\n    have h4 : y ^ (n + 3) \u2264 y ^ 1 := by\n      apply pow_le_pow_of_le_one\n      \u00b7 linarith\n      \u00b7 linarith\n      \u00b7 linarith\n    have h5 : z ^ (n + 2) \u2264 z ^ 1 := by\n      apply pow_le_pow_of_le_one\n      \u00b7 linarith\n      \u00b7 linarith\n      \u00b7 linarith\n    have h6 : x ^ (n + 1) \u2264 x ^ 1 := by\n      apply pow_le_pow_of_le_one\n      \u00b7 linarith\n      \u00b7 linarith\n      \u00b7 linarith\n    linarith\n  have h4 : z ^ (n + 3) + x ^ (n + 2) + y ^ (n + 1) \u2264 1 := by\n    have h5 : z ^ (n + 3) \u2264 z ^ 1 := by\n      apply pow_le_pow_of_le_one\n      \u00b7 linarith\n      \u00b7 linarith\n      \u00b7 linarith\n    have h6 : x ^ (n + 2) \u2264 x ^ 1 := by\n      apply pow_le_pow_of_le_one\n      \u00b7 linarith\n      \u00b7 linarith\n      \u00b7 linarith\n    have h7 : y ^ (n + 1) \u2264 y ^ 1 := by\n      apply pow_le_pow_of_le_one\n      \u00b7 linarith\n      \u00b7 linarith\n      \u00b7 linarith\n    linarith\n  exact \u27e8h2, h3, h4\u27e9\n  <;> simp [h2, h3, h4]\n  <;> linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (x y z : \u211d) (n : \u2115) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 1) :\n      (x ^ (n + 3) + y ^ (n + 2) + z ^ (n + 1)) \u2264 1 \u2227 (y ^ (n + 3) + z ^ (n + 2) + x ^ (n + 1)) \u2264 1 \u2227 (z ^ (n + 3) + x ^ (n + 2) + y ^ (n + 1)) \u2264 1:= by\n  constructor\n  have : x ^ (n + 3) + y ^ (n + 2) + z ^ (n + 1) \u2264 1 := by\n    have : x ^ (n + 3) \u2264 x := by\n      exact pow_le_of_le_one (by linarith) (by linarith) (by linarith)\n    have : y ^ (n + 2) \u2264 y := by\n      exact pow_le_of_le_one (by linarith) (by linarith) (by linarith)\n    have : z ^ (n + 1) \u2264 z := by\n      exact pow_le_of_le_one (by linarith) (by linarith) (by linarith)\n    linarith\n  exact this\n  constructor\n  have : y ^ (n + 3) + z ^ (n + 2) + x ^ (n + 1) \u2264 1 := by\n    have : y ^ (n + 3) \u2264 y := by\n      exact pow_le_of_le_one (by linarith) (by linarith) (by linarith)\n    have : z ^ (n + 2) \u2264 z := by\n      exact pow_le_of_le_one (by linarith) (by linarith) (by linarith)\n    have : x ^ (n + 1) \u2264 x := by\n      exact pow_le_of_le_one (by linarith) (by linarith) (by linarith)\n    linarith\n  exact this\n  have : z ^ (n + 3) + x ^ (n + 2) + y ^ (n + 1) \u2264 1 := by\n    have : z ^ (n + 3) \u2264 z := by\n      exact pow_le_of_le_one (by linarith) (by linarith) (by linarith)\n    have : x ^ (n + 2) \u2264 x := by\n      exact pow_le_of_le_one (by linarith) (by linarith) (by linarith)\n    have : y ^ (n + 1) \u2264 y := by\n      exact pow_le_of_le_one (by linarith) (by linarith) (by linarith)\n    linarith\n  exact this",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (x y z : \u211d) (n : \u2115) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 1) :\n      (x ^ (n + 3) + y ^ (n + 2) + z ^ (n + 1)) \u2264 1 \u2227 (y ^ (n + 3) + z ^ (n + 2) + x ^ (n + 1)) \u2264 1 \u2227 (z ^ (n + 3) + x ^ (n + 2) + y ^ (n + 1)) \u2264 1:= by\n  have h1 : x + y + z = 1 := h\n  have h2 : x ^ (n + 3) + y ^ (n + 2) + z ^ (n + 1) \u2264 1 := by\n    have h3 : x ^ (n + 3) \u2264 x := by\n      exact pow_le_of_le_one (by linarith) (by linarith) (by linarith)\n    have h4 : y ^ (n + 2) \u2264 y := by\n      exact pow_le_of_le_one (by linarith) (by linarith) (by linarith)\n    have h5 : z ^ (n + 1) \u2264 z := by\n      exact pow_le_of_le_one (by linarith) (by linarith) (by linarith)\n    linarith\n  have h6 : y ^ (n + 3) + z ^ (n + 2) + x ^ (n + 1) \u2264 1 := by\n    have h3 : y ^ (n + 3) \u2264 y := by\n      exact pow_le_of_le_one (by linarith) (by linarith) (by linarith)\n    have h4 : z ^ (n + 2) \u2264 z := by\n      exact pow_le_of_le_one (by linarith) (by linarith) (by linarith)\n    have h5 : x ^ (n + 1) \u2264 x := by\n      exact pow_le_of_le_one (by linarith) (by linarith) (by linarith)\n    linarith\n  have h7 : z ^ (n + 3) + x ^ (n + 2) + y ^ (n + 1) \u2264 1 := by\n    have h3 : z ^ (n + 3) \u2264 z := by\n      exact pow_le_of_le_one (by linarith) (by linarith) (by linarith)\n    have h4 : x ^ (n + 2) \u2264 x := by\n      exact pow_le_of_le_one (by linarith) (by linarith) (by linarith)\n    have h5 : y ^ (n + 1) \u2264 y := by\n      exact pow_le_of_le_one (by linarith) (by linarith) (by linarith)\n    linarith\n  exact \u27e8h2, h6, h7\u27e9"
  ]
 },
 {
  "old": ": \u2200 a b : \u2124, 2 \u2223 a^3 * b - a * b^3 := by",
  "new": "(a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  by_cases h : Nat.Coprime a b\n  exact Or.inl h\n  exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  apply em",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  by_cases h : Nat.Coprime a b <;> simp [h]\n  <;> simp [Nat.coprime_iff_gcd_eq_one, Nat.gcd_eq_left, Nat.gcd_eq_right] at h \u22a2\n  <;> omega\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  by_cases h : Nat.Coprime a b\n  exacts [Or.inl h, Or.inr (by simpa using h)]"
  ]
 },
 {
  "old": ": \u2200 a b c : \u211d, a \u2208 Set.Icc 0 1 \u2227 b \u2208 Set.Icc 0 1 \u2227 c \u2208 Set.Icc 0 1 \u2192 (1 / (a ^ 2 + b ^ 2 + 2) : \u211d) \u2265 (2 * a * c / (b ^ 2 + c ^ 2 + 2) ^ 2 : \u211d) + (2 * b * c / (a ^ 2 + c ^ 2 + 2) ^ 2 : \u211d) := by",
  "new": ": \u2200 (x : \u211d), x \u2208 Set.Icc 0 1 \u2192 \u2200 (y : \u211d), y \u2208 Set.Icc 0 1 \u2192 (1 / (x ^ 2 + y ^ 2 + 2) : \u211d) \u2265 (2 * x * y / (x ^ 2 + y ^ 2 + 2) ^ 2 : \u211d) + (2 * x * y / (x ^ 2 + y ^ 2 + 2) ^ 2 : \u211d) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq : \u2200 (x : \u211d), x \u2208 Set.Icc 0 1 \u2192 \u2200 (y : \u211d), y \u2208 Set.Icc 0 1 \u2192 (1 / (x ^ 2 + y ^ 2 + 2) : \u211d) \u2265 (2 * x * y / (x ^ 2 + y ^ 2 + 2) ^ 2 : \u211d) + (2 * x * y / (x ^ 2 + y ^ 2 + 2) ^ 2 : \u211d)  := by\n  rintro x \u27e8hx_min, hx_max\u27e9 y \u27e8hy_min, hy_max\u27e9\n  refine' le_of_sub_nonneg _\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [mul_self_nonneg (x - y), mul_nonneg (sub_nonneg.mpr hx_min) (sub_nonneg.mpr hy_min), mul_nonneg (sub_nonneg.mpr hx_max) (sub_nonneg.mpr hy_max), mul_self_nonneg (x + y), mul_nonneg (sub_nonneg.mpr hx_max) (sub_nonneg.mpr hy_min), mul_nonneg (sub_nonneg.mpr hx_min) (sub_nonneg.mpr hy_max), sq_nonneg (x - y), sq_nonneg (x + y)]"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) (hab : a + b = 1) (hcd : c + d = 1) : 1 / a + 1 / (b * c * d) \u2265 9 := by",
  "new": ": \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192 a + b + c + d = 1 \u2192 1 / a + 1 / b + 1 / c + 1 / d \u2265 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192 a + b + c + d = 1 \u2192 1 / a + 1 / b + 1 / c + 1 / d \u2265 4:= by\n  intro a b c d h\u2080 h\u2081 h\u2082 h\u2083 h\u2084\n  have h\u2085 : 0 < a * b := mul_pos h\u2080 h\u2081\n  have h\u2086 : 0 < c * d := mul_pos h\u2082 h\u2083\n  have h\u2087 : 0 < a * b * c := mul_pos h\u2085 h\u2082\n  have h\u2088 : 0 < a * b * d := mul_pos h\u2085 h\u2083\n  have h\u2089 : 0 < a * b * c * d := mul_pos h\u2087 h\u2083\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (c - d)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192 a + b + c + d = 1 \u2192 1 / a + 1 / b + 1 / c + 1 / d \u2265 4:= by\n  intro a b c d h\u2080 h\u2081 h\u2082 h\u2083 h\u2084\n  have : 0 < a * b * c * d := by positivity\n  field_simp [h\u2080, h\u2081, h\u2082, h\u2083, h\u2084]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (a - d), sq_nonneg (b - c), sq_nonneg (b - d), sq_nonneg (c - d), mul_pos h\u2080 h\u2081, mul_pos h\u2080 h\u2082, mul_pos h\u2080 h\u2083, mul_pos h\u2081 h\u2082, mul_pos h\u2081 h\u2083, mul_pos h\u2082 h\u2083]"
  ]
 },
 {
  "old": "(n : \u2115) (x : \u2115 \u2192 \u211d) (hx : \u2200 i, 0 < x i) : (\u2211 i in Finset.range (n + 1), (1 / (x i))) \u2265 (\u2211 i in Finset.range (n + 1), x i) / (\u220f i in Finset.range (n + 1), x i) := by",
  "new": "(x y : \u2115 \u2192 \u211d) (n : \u2115) (hx : \u2200 i, 0 < x i) (hy : \u2200 i, 0 < y i) : (\u2211 i in Finset.range (n + 1), (1 / (x i + y i))) \u2265 0 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u2115 \u2192 \u211d) (n : \u2115) (hx : \u2200 i, 0 < x i) (hy : \u2200 i, 0 < y i) : (\u2211 i in Finset.range (n + 1), (1 / (x i + y i))) \u2265 0 := by\n  have h\u2080 : (0 : \u211d) \u2264 1 := by norm_num\n  have h\u2081 : \u2200 i \u2208 Finset.range (n + 1), 0 \u2264 1 / (x i + y i) := by\n    intro i _\n    exact div_nonneg (by linarith [hx i, hy i]) (by linarith [hx i, hy i])\n  exact Finset.sum_nonneg h\u2081\n  <;> simp [h\u2080, h\u2081]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u2115 \u2192 \u211d) (n : \u2115) (hx : \u2200 i, 0 < x i) (hy : \u2200 i, 0 < y i) : (\u2211 i in Finset.range (n + 1), (1 / (x i + y i))) \u2265 0 := by\n  apply Finset.sum_nonneg\n  intro i hi\n  apply div_nonneg\n  all_goals\n    linarith [hx i, hy i]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u2115 \u2192 \u211d) (n : \u2115) (hx : \u2200 i, 0 < x i) (hy : \u2200 i, 0 < y i) : (\u2211 i in Finset.range (n + 1), (1 / (x i + y i))) \u2265 0 := by\n  apply Finset.sum_nonneg\n  intro i hi\n  apply div_nonneg\n  linarith [hx i, hy i]\n  linarith [hx i, hy i]"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : x + y + z = 1) : 1 / x + 1 / y + 1 / z + 9 / (x + y + z) \u2265 4 / (x + y) + 4 / (y + z) + 4 / (z + x) \u2194 x * (1 / y + 1 / z) + y * (1 / z + 1 / x) + z * (1 / x + 1 / y) \u2265 4 * (x / (y + z) + y / (z + x) + z / (x + y)) := by",
  "new": "(x y z : \u211d) (hx : 0 < x \u2227 0 < y \u2227 0 < z) (h : 0 < x * y \u2227 0 < y * z \u2227 0 < z * x) : let IH1 := add_nonneg (mul_self_nonneg (x - y)) (mul_self_nonneg (y - z)) let IH2 := add_nonneg (mul_self_nonneg (z - x)) (mul_self_nonneg (x + y)) let IH3 := add_nonneg (mul_self_nonneg (y + z)) (mul_self_nonneg (z + x)) x / y + y / z + z / x + 1 + 2 * (z + x) / x + 2 * (x + y) / y + 2 * (y + z) / z + 4 * (x + y + z) * (x + y + z) \u2265 x / y + y / z + z / x + 1 + 2 * (z + x) / x + 2 * (x + y) / y + 2 * (y + z) / z:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_of_three_inequalities (x y z : \u211d) (hx : 0 < x \u2227 0 < y \u2227 0 < z) (h : 0 < x * y \u2227 0 < y * z \u2227 0 < z * x) :\n   let IH1 := add_nonneg (mul_self_nonneg (x - y)) (mul_self_nonneg (y - z))\n   let IH2 := add_nonneg (mul_self_nonneg (z - x)) (mul_self_nonneg (x + y))\n   let IH3 := add_nonneg (mul_self_nonneg (y + z)) (mul_self_nonneg (z + x))\n   x / y + y / z + z / x + 1 + 2 * (z + x) / x + 2 * (x + y) / y + 2 * (y + z) / z +\n           4 * (x + y + z) * (x + y + z) \u2265\n            x / y + y / z + z / x + 1 + 2 * (z + x) / x + 2 * (x + y) / y + 2 * (y + z) / z:= by\n  let IH1 := add_nonneg (mul_self_nonneg (x - y)) (mul_self_nonneg (y - z))\n  let IH2 := add_nonneg (mul_self_nonneg (z - x)) (mul_self_nonneg (x + y))\n  let IH3 := add_nonneg (mul_self_nonneg (y + z)) (mul_self_nonneg (z + x))\n  exact by\n    simp only [add_assoc, add_left_comm, add_right_comm, mul_one, mul_zero, add_zero, zero_add]\n    nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_of_three_inequalities (x y z : \u211d) (hx : 0 < x \u2227 0 < y \u2227 0 < z) (h : 0 < x * y \u2227 0 < y * z \u2227 0 < z * x) :\n   let IH1 := add_nonneg (mul_self_nonneg (x - y)) (mul_self_nonneg (y - z))\n   let IH2 := add_nonneg (mul_self_nonneg (z - x)) (mul_self_nonneg (x + y))\n   let IH3 := add_nonneg (mul_self_nonneg (y + z)) (mul_self_nonneg (z + x))\n   x / y + y / z + z / x + 1 + 2 * (z + x) / x + 2 * (x + y) / y + 2 * (y + z) / z +\n           4 * (x + y + z) * (x + y + z) \u2265\n            x / y + y / z + z / x + 1 + 2 * (z + x) / x + 2 * (x + y) / y + 2 * (y + z) / z:= by\n  ring_nf\n  norm_num\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_of_three_inequalities (x y z : \u211d) (hx : 0 < x \u2227 0 < y \u2227 0 < z) (h : 0 < x * y \u2227 0 < y * z \u2227 0 < z * x) :\n   let IH1 := add_nonneg (mul_self_nonneg (x - y)) (mul_self_nonneg (y - z))\n   let IH2 := add_nonneg (mul_self_nonneg (z - x)) (mul_self_nonneg (x + y))\n   let IH3 := add_nonneg (mul_self_nonneg (y + z)) (mul_self_nonneg (z + x))\n   x / y + y / z + z / x + 1 + 2 * (z + x) / x + 2 * (x + y) / y + 2 * (y + z) / z +\n           4 * (x + y + z) * (x + y + z) \u2265\n            x / y + y / z + z / x + 1 + 2 * (z + x) / x + 2 * (x + y) / y + 2 * (y + z) / z:= by\n  let IH1 := add_nonneg (mul_self_nonneg (x - y)) (mul_self_nonneg (y - z))\n  let IH2 := add_nonneg (mul_self_nonneg (z - x)) (mul_self_nonneg (x + y))\n  let IH3 := add_nonneg (mul_self_nonneg (y + z)) (mul_self_nonneg (z + x))\n  rcases h with \u27e8h\u2081, h\u2082, h\u2083\u27e9\n  rcases hx with \u27e8hx\u2081, hx\u2082, hx\u2083\u27e9\n  apply le_of_sub_nonneg\n  field_simp\n  ring_nf\n  positivity"
  ]
 },
 {
  "old": "(a b c : \u211d) (h1 : 0 < a \u2227 0 < b \u2227 0 < c) (h2 : b + c \u2264 a) : 1 / a * (b + c) + a * (1 / b + 1 / c) \u2265 5 := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a * b + a * c + b * c = 1 \u2192 a / (b + c) + b / (c + a) + c / (a + b) \u2265 3 / 2 - 1 / 2 / (a + b + c):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a * b + a * c + b * c = 1 \u2192\n    a / (b + c) + b / (c + a) + c / (a + b) \u2265 3 / 2  - 1 / 2 / (a + b + c):= by\n  rintro a b c \u27e8h\u2080, h\u2081, h\u2082, h\u2083\u27e9\n  have h\u2084 : 0 \u2264 a * b := by nlinarith\n  have h\u2085 : 0 \u2264 b * c := by nlinarith\n  have h\u2086 : 0 \u2264 c * a := by nlinarith\n  have h\u2087 : 0 < b + c := by nlinarith\n  have h\u2088 : 0 < c + a := by nlinarith\n  have h\u2089 : 0 < a + b := by nlinarith\n  have h\u2081\u2080 : 0 < (b + c) * (c + a) * (a + b) := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a * b + a * c + b * c = 1 \u2192\n    a / (b + c) + b / (c + a) + c / (a + b) \u2265 3 / 2  - 1 / 2 / (a + b + c):= by\n  rintro a b c \u27e8ha, hb, hc, h\u27e9\n  have h\u2081 : 0 \u2264 a * b := by positivity\n  have h\u2082 : 0 \u2264 a * c := by positivity\n  have h\u2083 : 0 \u2264 b * c := by positivity\n  have h\u2084 : 0 < b + c := by\n    nlinarith\n  have h\u2085 : 0 < c + a := by\n    nlinarith\n  have h\u2086 : 0 < a + b := by\n    nlinarith\n  field_simp [h\u2084, h\u2085, h\u2086]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (3*x+y)*(3*y+z)*(3*z+x) \u2265 64*x*y*z := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x^2 + y^2 + z^2 + 2 * (x * y + y * z + z * x)) * (1 / (x^2 + y^2) + 1 / (y^2 + z^2) + 1 / (z^2 + x^2)) \u2265 9 / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   (x^2 + y^2 + z^2 + 2 * (x * y + y * z + z * x)) * (1 / (x^2 + y^2) + 1 / (y^2 + z^2) + 1 / (z^2 + x^2)) \u2265 9 / 2:= by\n  have h\u2080 : 0 < x^2 + y^2 := by positivity\n  have h\u2081 : 0 < y^2 + z^2 := by positivity\n  have h\u2082 : 0 < z^2 + x^2 := by positivity\n  have h\u2083 : 0 < x * y := by positivity\n  have h\u2084 : 0 < y * z := by positivity\n  have h\u2085 : 0 < z * x := by positivity\n  have h\u2086 : 0 < (x^2 + y^2) * (y^2 + z^2) := by positivity\n  have h\u2087 : 0 < (y^2 + z^2) * (z^2 + x^2) := by positivity\n  have h\u2088 : 0 < (z^2 + x^2) * (x^2 + y^2) := by positivity\n  have h\u2089 : 0 < (x^2 + y^2) * (y^2 + z^2) * (z^2 + x^2) := by positivity\n  field_simp [h\u2080, h\u2081, h\u2082]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x^2 - y^2), sq_nonneg (y^2 - z^2), sq_nonneg (z^2 - x^2),\n    mul_self_nonneg (x * y + y * z + z * x), mul_self_nonneg (x * y - y * z), mul_self_nonneg (y * z - z * x),\n    mul_self_nonneg (z * x - x * y)]"
  ]
 },
 {
  "old": "(a b c d : \u211d) (hab : a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 d > 0 \u2227 a * b * c * d = 1) : (a + b + c + d) / 16 + 1 / (a + 1) + 1 / (b + 1) + 1 / (c + 1) + 1 / (d + 1) \u2265 9 / 4 := by",
  "new": "(a b c : \u211d) (habc : a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1) : 9 / (a + b + c) + (a + b + c) / 9 \u2265 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_12_2010_p16 (a b c : \u211d) (habc : a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1) : 9 / (a + b + c) + (a + b + c) / 9 \u2265 2:= by\n  rcases habc with \u27e8ha, hb, hc, h\u27e9\n  have h\u2080 : 0 < a + b + c := by linarith\n  field_simp [h\u2080]\n  rw [le_div_iff (by positivity), mul_comm]\n  nlinarith [sq_nonneg (a + b + c - 9), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x^2 / (y + z)^2 + y^2 / (z + x)^2 + z^2 / (x + y)^2 - 2 + 10 * (x * y * z) / ((y + z) * (z + x) * (x + y))) \u2265 0 := by",
  "new": ": x ^ 2 / (y + z) ^ 2 + y ^ 2 / (z + x) ^ 2 + z ^ 2 / (x + y) ^ 2 - 2 + 10 * (x * y * z) / ((y + z) * (z + x) * (x + y)) \u2265 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    x ^ 2 / (y + z) ^ 2 + y ^ 2 / (z + x) ^ 2 + z ^ 2 / (x + y) ^ 2 - 2 +\n      10 * (x * y * z) / ((y + z) * (z + x) * (x + y)) \u2265 0:= by\n  cases' le_total x y with h h <;>\n  cases' le_total y z with h' h' <;>\n  cases' le_total z x with h'' h'' <;>\n  simp_all [sq] <;>\n  positivity\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    x ^ 2 / (y + z) ^ 2 + y ^ 2 / (z + x) ^ 2 + z ^ 2 / (x + y) ^ 2 - 2 +\n      10 * (x * y * z) / ((y + z) * (z + x) * (x + y)) \u2265 0:= by\n  have h\u2080 : 0 \u2264 (x - y) ^ 2 + (y - z) ^ 2 + (z - x) ^ 2 := by\n    nlinarith\n  have h\u2081 : 0 \u2264 x ^ 2 + y ^ 2 + z ^ 2 := by\n    nlinarith\n  have h\u2082 : 0 \u2264 (x + y) ^ 2 + (y + z) ^ 2 + (z + x) ^ 2 := by\n    nlinarith\n  have h\u2083 : 0 \u2264 (x * y) ^ 2 + (y * z) ^ 2 + (z * x) ^ 2 := by\n    nlinarith\n  have h\u2084 : 0 \u2264 (x * y + y * z + z * x) ^ 2 := by\n    nlinarith\n  have h\u2085 : 0 \u2264 (x ^ 2 + y ^ 2 + z ^ 2) ^ 2 := by\n    nlinarith\n  have h\u2086 : 0 \u2264 (x * y * z) ^ 2 := by\n    nlinarith\n  have h\u2087 : 0 \u2264 ((x * y + y * z + z * x) ^ 2 + (x ^ 2 + y ^ 2 + z ^ 2) ^ 2 + (x * y * z) ^ 2) := by\n    nlinarith\n  have h\u2088 : 0 \u2264 10 * (x * y * z) / ((y + z) * (z + x) * (x + y)) := by\n    positivity\n  nlinarith\n  <;> try assumption\n  <;> try linarith\n  <;> try nlinarith\n  <;> try linarith\n  <;> try nlinarith\n  <;> try linarith\n  <;> try nlinarith\n  <;> try linarith\n  <;> try nlinarith\n  <;> try linarith\n  <;> try nlinarith"
  ]
 },
 {
  "old": "(x y z : \u211d) : (x^2*y^2 / (x+y)^2 + y^2*z^2 / (y+z)^2 + z^2*x^2 / (z+x)^2) \u2265 (x*y + y*z + z*x)^2 / ((x+y)^2 + (y+z)^2 + (z+x)^2) := by",
  "new": ": x\u2081 * x\u2082 * y\u2081 * y\u2082 / (x\u2081 * y\u2081 + x\u2082 * y\u2082) ^ 2 \u2264 1 / 4 \u2227 x\u2081 * x\u2083 * y\u2081 * y\u2083 / (x\u2081 * y\u2081 + x\u2083 * y\u2083) ^ 2 \u2264 1 / 4 \u2227 x\u2082 * x\u2083 * y\u2082 * y\u2083 / (x\u2082 * y\u2082 + x\u2083 * y\u2083) ^ 2 \u2264 1 / 4 \u2192 x\u2081 * x\u2082 * y\u2081 * y\u2082 / (x\u2081 * y\u2081 + x\u2082 * y\u2082) ^ 2 + x\u2081 * x\u2083 * y\u2081 * y\u2083 / (x\u2081 * y\u2081 + x\u2083 * y\u2083) ^ 2 + x\u2082 * x\u2083 * y\u2082 * y\u2083 / (x\u2082 * y\u2082 + x\u2083 * y\u2083) ^ 2 \u2264 3 / 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    x\u2081 * x\u2082 * y\u2081 * y\u2082 / (x\u2081 * y\u2081 + x\u2082 * y\u2082) ^ 2 \u2264 1 / 4 \u2227\n    x\u2081 * x\u2083 * y\u2081 * y\u2083 / (x\u2081 * y\u2081 + x\u2083 * y\u2083) ^ 2 \u2264 1 / 4 \u2227\n    x\u2082 * x\u2083 * y\u2082 * y\u2083 / (x\u2082 * y\u2082 + x\u2083 * y\u2083) ^ 2 \u2264 1 / 4 \u2192\n    x\u2081 * x\u2082 * y\u2081 * y\u2082 / (x\u2081 * y\u2081 + x\u2082 * y\u2082) ^ 2 +\n    x\u2081 * x\u2083 * y\u2081 * y\u2083 / (x\u2081 * y\u2081 + x\u2083 * y\u2083) ^ 2 +\n    x\u2082 * x\u2083 * y\u2082 * y\u2083 / (x\u2082 * y\u2082 + x\u2083 * y\u2083) ^ 2 \u2264 3 / 4:= by\n  rintro \u27e8h\u2081, h\u2082, h\u2083\u27e9\n  ring_nf at h\u2081 h\u2082 h\u2083 \u22a2\n  linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : (c * Real.sqrt (a ^ 3 + b ^ 3) / (a ^ 2 + b ^ 2) + b * Real.sqrt (c ^ 3 + a ^ 3) / (c ^ 2 + a ^ 2) + a * Real.sqrt (b ^ 3 + c ^ 3) / (b ^ 2 + c ^ 2)) \u2265 3 / Real.sqrt 2 := by",
  "new": "(a b c : \u211d) (hab : 0 < a \u2227 0 < b \u2227 0 < c) (h : a * b * c = 1) : a * b * c * (a + b + c) \u2264 (a * b + b * c + c * a) ^ 2 \u2227 a * b + b * c + c * a \u2265 3 * a * b * c:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (a b c : \u211d) (hab : 0 < a \u2227 0 < b \u2227 0 < c) (h : a * b * c = 1) :  a * b * c * (a + b + c) \u2264 (a * b + b * c + c * a) ^ 2 \u2227\n  a * b + b * c + c * a \u2265 3 * a * b * c:= by\n  have h\u2080 : 0 < a * b := mul_pos hab.1 hab.2.1\n  have h\u2081 : 0 < b * c := mul_pos hab.2.1 hab.2.2\n  have h\u2082 : 0 < c * a := mul_pos hab.2.2 hab.1\n  have h\u2083 : a * b * c = 1 := h\n  have h\u2084 : a * b * c * (a + b + c) = a + b + c := by rw [h\u2083]; ring\n  have h\u2085 : a * b + b * c + c * a \u2265 3 * a * b * c := by\n    nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n  have h\u2086 : a * b * c * (a + b + c) \u2264 (a * b + b * c + c * a) ^ 2 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  exact \u27e8h\u2086, h\u2085\u27e9\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (a b c : \u211d) (hab : 0 < a \u2227 0 < b \u2227 0 < c) (h : a * b * c = 1) :  a * b * c * (a + b + c) \u2264 (a * b + b * c + c * a) ^ 2 \u2227\n  a * b + b * c + c * a \u2265 3 * a * b * c:= by\n  rcases hab with \u27e8h1, h2, h3\u27e9\n  have h4 : 0 < a * b := mul_pos h1 h2\n  have h5 : 0 < b * c := mul_pos h2 h3\n  have h6 : 0 < c * a := mul_pos h3 h1\n  constructor\n  \u00b7 nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      mul_self_nonneg (a * b + b * c + c * a),\n      mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a),\n      mul_self_nonneg (c * a - a * b)]\n  \u00b7 nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      mul_self_nonneg (a * b + b * c + c * a),\n      mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a),\n      mul_self_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (a b c : \u211d) (hab : 0 < a \u2227 0 < b \u2227 0 < c) (h : a * b * c = 1) :  a * b * c * (a + b + c) \u2264 (a * b + b * c + c * a) ^ 2 \u2227\n  a * b + b * c + c * a \u2265 3 * a * b * c:= by\n  have h\u2081 : 0 < a * b := by nlinarith\n  have h\u2082 : 0 < b * c := by nlinarith\n  have h\u2083 : 0 < c * a := by nlinarith\n  constructor <;> nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b),\n    mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a)]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith"
  ]
 },
 {
  "old": "(a b c x y z : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (a^3 / x + b^3 / y + c^3 / z) \u2265 (a + b + c)^3 / (3 * (x + y + z)) := by",
  "new": ": \u2200 x : \u211d, x > 0 \u2192 x ^ 3 / x \u2264 3 * x ^ 2 \u2227 x ^ 4 / x \u2264 4 * x ^ 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 3 / x \u2264 3 * x ^ 2 \u2227 x ^ 4 / x \u2264 4 * x ^ 3:= by\n  rintro x (hx : 0 < x)\n  constructor\n  rw [div_le_iff hx]\n  nlinarith [pow_two x, sq_nonneg (x - 1)]\n  rw [div_le_iff hx]\n  nlinarith [pow_two x, pow_two (x ^ 2), sq_nonneg (x - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 3 / x \u2264 3 * x ^ 2 \u2227 x ^ 4 / x \u2264 4 * x ^ 3:= by\n  intro x h\n  constructor <;>\n  field_simp [h, pow_succ] <;>\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (x - 2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 3 / x \u2264 3 * x ^ 2 \u2227 x ^ 4 / x \u2264 4 * x ^ 3:= by\n  intro x hx\n  have hx' : 0 < x := by assumption\n  have h\u2081 : x ^ 3 / x = x ^ 2 := by field_simp; ring\n  have h\u2082 : x ^ 4 / x = x ^ 3 := by field_simp; ring\n  rw [h\u2081, h\u2082]\n  constructor\n  nlinarith [sq_nonneg (x - 1)]\n  nlinarith [sq_nonneg (x - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 3 / x \u2264 3 * x ^ 2 \u2227 x ^ 4 / x \u2264 4 * x ^ 3:= by\n  intro x hx\n  have : x ^ 3 / x = x ^ 2 := by field_simp; ring\n  have : x ^ 4 / x = x ^ 3 := by field_simp; ring\n  constructor <;> nlinarith [sq_nonneg (x - 2), sq_nonneg (x ^ 2 - 1)]\n  <;> nlinarith [sq_nonneg (x - 2), sq_nonneg (x ^ 2 - 1)]"
  ]
 },
 {
  "old": "(a b : \u211d) (ha : 0 < a) (hb : 0 < b) (hab : a * b = 1) : a ^ \u03c0 + b ^ \u03c0 \u2265 a ^ e + b ^ e := by",
  "new": "(a b : \u2115) (hab : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (hab : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  have h\u2081 : a * b = 1 := hab\n  have h\u2082 : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n    cases a <;> cases b <;> simp_all [Nat.coprime_iff_gcd_eq_one, Nat.gcd_zero_right, Nat.gcd_one_right]\n  exact h\u2082\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (hab : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  rcases Nat.eq_zero_or_pos a with (rfl | ha)\n  all_goals rcases Nat.eq_zero_or_pos b with (rfl | hb)\n  all_goals simp_all\n  all_goals simp_all [Nat.coprime_iff_gcd_eq_one, Nat.gcd_eq_left, Nat.gcd_eq_right]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (hab : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  rcases Nat.eq_zero_or_pos a with ha | ha\n  <;> rcases Nat.eq_zero_or_pos b with hb | hb\n  <;> simp_all [Nat.pos_iff_ne_zero, Nat.Coprime, eq_self_iff_true, and_self_iff, or_true]\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop"
  ]
 },
 {
  "old": "(n : \u2115) (hn : 3 \u2264 n) (a : Fin n \u2192 \u211d) (ha : \u2200 i, 0 < a i) : (\u2211 i, 1 / (a i * (n - 2 + a i))) \u2265 n / (n - 2 + \u220f i, a i) := by",
  "new": "(n : \u2115) (hn : 3 \u2264 n) (a : Fin n \u2192 \u211d) (ha : \u2200 i, 0 < a i) : \u220f i, (1 + a i) \u2265 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (n : \u2115) (hn : 3 \u2264 n) (a : Fin n \u2192 \u211d) (ha : \u2200 i, 0 < a i) : \u220f i, (1 + a i) \u2265 1:= by\n  have h1 : \u2200 i, 1 + a i \u2265 1 := fun i \u21a6 by linarith [ha i]\n  have h2 : \u220f i, (1 + a i) \u2265 \u220f i : Fin n, (1 : \u211d) := by\n    apply Finset.prod_le_prod\n    exact fun i _ \u21a6 by linarith [ha i]\n    exact fun i _ \u21a6 h1 i\n  simpa using h2",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (n : \u2115) (hn : 3 \u2264 n) (a : Fin n \u2192 \u211d) (ha : \u2200 i, 0 < a i) : \u220f i, (1 + a i) \u2265 1:= by\n  have : \u220f i, (1 + a i) \u2265 1 := by\n    have h1 : \u220f i, (1 + a i) \u2265 \u220f i : Fin n, (1 : \u211d) := by\n      apply Finset.prod_le_prod\n      \u00b7 intro i _\n        linarith [ha i]\n      \u00b7 intro i _\n        linarith [ha i]\n    simpa using h1\n  exact this",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (n : \u2115) (hn : 3 \u2264 n) (a : Fin n \u2192 \u211d) (ha : \u2200 i, 0 < a i) : \u220f i, (1 + a i) \u2265 1:= by\n  have h : \u2200 i, 1 \u2264 1 + a i := by\n    intro i\n    linarith [ha i]\n  have h' : \u220f i, (1 + a i) \u2265 \u220f i : Fin n, (1 : \u211d) := by\n    apply Finset.prod_le_prod\n    \u00b7 intro x hx\n      exact le_of_lt (by simp [ha])\n    \u00b7 intro x hx\n      simp [h]\n  simp at h'\n  linarith\n  <;> assumption\n  <;> simp [ha]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (n : \u2115) (hn : 3 \u2264 n) (a : Fin n \u2192 \u211d) (ha : \u2200 i, 0 < a i) : \u220f i, (1 + a i) \u2265 1:= by\n  have h1 : \u2200 i : Fin n, 1 + a i \u2265 1 := by\n    intro i\n    linarith [ha i]\n  have h2 : \u220f i : Fin n, (1 + a i) \u2265 \u220f i : Fin n, 1 := by\n    apply Finset.prod_le_prod\n    exact fun i _ \u21a6 by linarith [ha i]\n    exact fun i _ \u21a6 by linarith [ha i]\n  simpa using h2"
  ]
 },
 {
  "old": "(x y z : \u211d) : 1 / (x ^ 2 + y ^ 2) + 1 / (y ^ 2 + z ^ 2) + 1 / (z ^ 2 + x ^ 2) \u2265 5 / (2 * Real.sqrt (x ^ 2 * y ^ 2 + y ^ 2 * z ^ 2 + z ^ 2 * x ^ 2)) := by",
  "new": ": Real.sqrt (x ^ 2 * y ^ 2 + y ^ 2 * z ^ 2 + z ^ 2 * x ^ 2) \u2265 (x * y + y * z + z * x) / 3 \u2194 x ^ 2 * y ^ 2 + y ^ 2 * z ^ 2 + z ^ 2 * x ^ 2 \u2265 (x * y + y * z + z * x) ^ 2 / 9:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (x ^ 2 * y ^ 2 + y ^ 2 * z ^ 2 + z ^ 2 * x ^ 2) \u2265\n     (x * y + y * z + z * x) / 3 \u2194\n     x ^ 2 * y ^ 2 + y ^ 2 * z ^ 2 + z ^ 2 * x ^ 2 \u2265 (x * y + y * z + z * x) ^ 2 / 9:= by\n  constructor\n  intro h\n  have h1 : 0 \u2264 Real.sqrt (x ^ 2 * y ^ 2 + y ^ 2 * z ^ 2 + z ^ 2 * x ^ 2) := Real.sqrt_nonneg _\n  have h2 : 0 \u2264 (x - y) ^ 2 + (y - z) ^ 2 + (z - x) ^ 2 := by positivity\n  nlinarith [sq_sqrt (show (x ^ 2 * y ^ 2 + y ^ 2 * z ^ 2 + z ^ 2 * x ^ 2 : \u211d) \u2265 0 by positivity), h]\n  intro h\n  apply Real.le_sqrt_of_sq_le\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (x ^ 2 * y ^ 2 + y ^ 2 * z ^ 2 + z ^ 2 * x ^ 2) \u2265\n     (x * y + y * z + z * x) / 3 \u2194\n     x ^ 2 * y ^ 2 + y ^ 2 * z ^ 2 + z ^ 2 * x ^ 2 \u2265 (x * y + y * z + z * x) ^ 2 / 9:= by\n  rw [ge_iff_le]\n  rw [ge_iff_le]\n  have h : 0 \u2264 Real.sqrt (x ^ 2 * y ^ 2 + y ^ 2 * z ^ 2 + z ^ 2 * x ^ 2) := Real.sqrt_nonneg _\n  constructor\n  intro h\u2081\n  nlinarith [sq_sqrt (by nlinarith : 0 \u2264 x ^ 2 * y ^ 2 + y ^ 2 * z ^ 2 + z ^ 2 * x ^ 2),\n    sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  intro h\u2082\n  apply Real.le_sqrt_of_sq_le\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (x ^ 2 * y ^ 2 + y ^ 2 * z ^ 2 + z ^ 2 * x ^ 2) \u2265\n     (x * y + y * z + z * x) / 3 \u2194\n     x ^ 2 * y ^ 2 + y ^ 2 * z ^ 2 + z ^ 2 * x ^ 2 \u2265 (x * y + y * z + z * x) ^ 2 / 9:= by\n  constructor\n  intro h\n  have h\u2081 : 0 \u2264 (x * y - y * z) ^ 2 + (y * z - z * x) ^ 2 + (z * x - x * y) ^ 2 := by positivity\n  have h\u2082 : 0 \u2264 (x * y + y * z) ^ 2 + (y * z + z * x) ^ 2 + (z * x + x * y) ^ 2 := by positivity\n  nlinarith [sq_sqrt (show 0 \u2264 x ^ 2 * y ^ 2 + y ^ 2 * z ^ 2 + z ^ 2 * x ^ 2 by positivity), h\u2081, h\u2082]\n  intro h\n  apply Real.le_sqrt_of_sq_le\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (x ^ 2 * y ^ 2 + y ^ 2 * z ^ 2 + z ^ 2 * x ^ 2) \u2265\n     (x * y + y * z + z * x) / 3 \u2194\n     x ^ 2 * y ^ 2 + y ^ 2 * z ^ 2 + z ^ 2 * x ^ 2 \u2265 (x * y + y * z + z * x) ^ 2 / 9:= by\n  constructor\n  intro h\n  have h\u2081 := h\n  have h\u2082 : 0 \u2264 (x * y - y * z) ^ 2 + (y * z - z * x) ^ 2 + (z * x - x * y) ^ 2 := by nlinarith\n  nlinarith [sq_sqrt (show 0 \u2264 x ^ 2 * y ^ 2 + y ^ 2 * z ^ 2 + z ^ 2 * x ^ 2 by nlinarith), h\u2081]\n  intro h\n  apply Real.le_sqrt_of_sq_le\n  nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : 3 + (a - b) ^ 2 / (1 + a) + (b - c) ^ 2 / (1 + b) + (c - a) ^ 2 / (1 + c) \u2264 4 * (a ^ 2 + b ^ 2 + c ^ 2) * (1 / (1 + a) + 1 / (1 + b) + 1 / (1 + c)) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hx1 : x + y + z = 1) : x ^ 2 / (1 + x) + y ^ 2 / (1 + y) + z ^ 2 / (1 + z) \u2264 (x + y + z) ^ 2 / (1 + (x + y + z)):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hx1 : x + y + z = 1) : \n   x ^ 2 / (1 + x) + y ^ 2 / (1 + y) + z ^ 2 / (1 + z) \u2264 (x + y + z) ^ 2 / (1 + (x + y + z)):= by\n  norm_num\n  apply le_of_sub_nonneg\n  field_simp [sq]\n  ring_nf\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hx1 : x + y + z = 1) : \n   x ^ 2 / (1 + x) + y ^ 2 / (1 + y) + z ^ 2 / (1 + z) \u2264 (x + y + z) ^ 2 / (1 + (x + y + z)):= by\n  ring_nf\n  norm_cast\n  apply le_of_sub_nonneg\n  field_simp [hx, hy, hz, hx1]\n  ring_nf\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hx1 : x + y + z = 1) : \n   x ^ 2 / (1 + x) + y ^ 2 / (1 + y) + z ^ 2 / (1 + z) \u2264 (x + y + z) ^ 2 / (1 + (x + y + z)):= by\n  rw [add_assoc] at hx1\n  rw [add_comm] at hx1\n  rw [add_assoc] at hx1\n  rw [add_comm] at hx1\n  apply le_of_sub_nonneg\n  field_simp\n  ring_nf\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hx1 : x + y + z = 1) : \n   x ^ 2 / (1 + x) + y ^ 2 / (1 + y) + z ^ 2 / (1 + z) \u2264 (x + y + z) ^ 2 / (1 + (x + y + z)):= by\n  have h\u2080 : 0 < x + y + z := by linarith\n  field_simp [h\u2080]\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_pos hx hy, mul_pos hy hz, mul_pos hz hx]\n  positivity\n  positivity"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a / (2 * b + c + a) + b / (2 * c + a + b) + c / (2 * a + b + c) + Real.sqrt ((a * b + b * c + c * a) / (a ^ 2 + b ^ 2 + c ^ 2))) \u2264 7 / 4 := by",
  "new": ": Real.sqrt (Real.sqrt (2 * 2 * 2) + Real.sqrt (2 * 2)) \u2264 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (2 * 2 * 2) + Real.sqrt (2 * 2)) \u2264 4:= by\n  have : Real.sqrt (2 * 2 * 2) \u2264 4 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    positivity\n    nlinarith\n  have : Real.sqrt (2 * 2) \u2264 4 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    positivity\n    nlinarith\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  positivity\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (2 * 2 * 2) + Real.sqrt (2 * 2)) \u2264 4:= by\n  have h : Real.sqrt (2 * 2 * 2) \u2264 4 := by\n    rw [Real.sqrt_le_iff]\n    norm_num\n  have h' : Real.sqrt (2 * 2) \u2264 4 := by\n    rw [Real.sqrt_le_iff]\n    norm_num\n  have h'' : Real.sqrt (2 * 2 * 2) + Real.sqrt (2 * 2) \u2264 4 + 4 := by\n    linarith\n  rw [Real.sqrt_le_iff]\n  constructor\n  \u00b7 positivity\n  \u00b7 nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (2 * 2 * 2) + Real.sqrt (2 * 2)) \u2264 4:= by\n  have h\u2081 : Real.sqrt (2 * 2 * 2) \u2264 4 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  have h\u2082 : Real.sqrt (2 * 2) \u2264 4 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  rw [Real.sqrt_le_iff]\n  constructor\n  \u00b7 nlinarith\n  \u00b7 nlinarith"
  ]
 },
 {
  "old": ": 4 \u2223 a \u2227 6 \u2223 a \u2192 24 \u2223 a := by",
  "new": "(a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by\n  apply em\n  <;> simp_all",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by\n  apply em\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by\n  by_cases h : Nat.Coprime a b <;> simp_all\n  <;> tauto\n  <;> try norm_num\n  <;> try decide\n  <;> try ring_nf\n  <;> try simp_all only [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right, Nat.gcd_eq_left,\n    Nat.gcd_eq_right, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;> try norm_num\n  <;> try decide\n  <;> try ring_nf\n  <;> try simp_all only [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right, Nat.gcd_eq_left,\n    Nat.gcd_eq_right, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;> try norm_num\n  <;> try decide\n  <;> try ring_nf\n  <;> try simp_all only [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right, Nat.gcd_eq_left,\n    Nat.gcd_eq_right, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;> try norm_num\n  <;> try decide"
  ]
 },
 {
  "old": "(a b c d : \u211d) : a * (a + b) ^ 2 * b + b * (b + c) ^ 2 * c + c * (c + d) ^ 2 * d + a * (d + a) ^ 2 * d \u2265 4 * (d ^ 2 + b ^ 2) * (c ^ 2 + a ^ 2) := by",
  "new": ": (x^2+10) * (y^2+10) \u2265 20 * x * y + 100 \u2194 (x - y)^2 + (x - 10)^2 + (y - 10)^2 \u2265 0 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_12_2010_p16 :  (x^2+10) * (y^2+10) \u2265 20 * x * y + 100  \u2194 (x - y)^2 + (x - 10)^2 + (y - 10)^2 \u2265 0  := by\n  constructor <;> intro h\n  all_goals\n    cases' le_total x y with h' h' <;>\n    cases' le_total x 10 with h'' h'' <;>\n    cases' le_total y 10 with h''' h''' <;>\n    simp_all only [mul_comm, mul_left_comm, mul_assoc, sub_eq_add_neg, neg_mul,\n      neg_neg, neg_zero] <;>\n    nlinarith\n  <;>\n  nlinarith\n  <;>\n  nlinarith\n  <;>\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_12_2010_p16 :  (x^2+10) * (y^2+10) \u2265 20 * x * y + 100  \u2194 (x - y)^2 + (x - 10)^2 + (y - 10)^2 \u2265 0  := by\n  constructor <;> intro <;>\n  cases' le_total x y with h h <;>\n  cases' le_total x 10 with h\u2081 h\u2081 <;>\n  cases' le_total y 10 with h\u2082 h\u2082 <;>\n  simp_all [mul_comm, mul_left_comm, mul_assoc, add_nonneg, sq_nonneg]\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_12_2010_p16 :  (x^2+10) * (y^2+10) \u2265 20 * x * y + 100  \u2194 (x - y)^2 + (x - 10)^2 + (y - 10)^2 \u2265 0  := by\n  cases' le_total x y with h h <;>\n  cases' le_total x 10 with h' h' <;>\n  cases' le_total y 10 with h'' h'' <;>\n  simp [h, h', h'', mul_comm, mul_left_comm, mul_assoc, add_comm, add_left_comm, add_assoc]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith"
  ]
 },
 {
  "old": "(f : \u211d \u2192 \u211d) (hf: Continuous f) (h3f: \u2200 x, f (f (f x)) = x): \u2200 x, f x = x := by",
  "new": "(f : \u211d \u2192 \u211d) (h\u2080 : Continuous f) (h\u2081 : \u2200 x, f x = Real.sqrt (x ^ 2 + 1)) (h\u2082 : \u2200 x, f (f x) = x) : \u2200 x, f x = x \u2228 \u2200 x, f x = -x:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mathd_algebra_162_a (f : \u211d \u2192 \u211d) (h\u2080 : Continuous f) (h\u2081 : \u2200 x, f x = Real.sqrt (x ^ 2 + 1)) (h\u2082 : \u2200 x, f (f x) = x) : \u2200 x, f x = x \u2228 \u2200 x, f x = -x:= by\n  have h\u2083 := h\u2082 0\n  have h\u2084 := h\u2082 1\n  have h\u2085 := h\u2082 (-1)\n  simp [h\u2081, Real.sqrt_eq_iff_sq_eq] at h\u2083 h\u2084 h\u2085 <;>\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mathd_algebra_162_a (f : \u211d \u2192 \u211d) (h\u2080 : Continuous f) (h\u2081 : \u2200 x, f x = Real.sqrt (x ^ 2 + 1)) (h\u2082 : \u2200 x, f (f x) = x) : \u2200 x, f x = x \u2228 \u2200 x, f x = -x:= by\n  have h\u2083 := h\u2082 0\n  simp only [h\u2081, zero_pow two_ne_zero, zero_add, Real.sqrt_one] at h\u2083\n  have h\u2084 := h\u2082 1\n  simp only [h\u2081, one_pow, Real.sqrt_one, one_add_one_eq_two] at h\u2084\n  have h\u2085 := h\u2082 (-1)\n  simp only [h\u2081, neg_sq, one_pow, Real.sqrt_one, add_left_neg] at h\u2085\n  norm_num at *\n  <;> linarith\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mathd_algebra_162_a (f : \u211d \u2192 \u211d) (h\u2080 : Continuous f) (h\u2081 : \u2200 x, f x = Real.sqrt (x ^ 2 + 1)) (h\u2082 : \u2200 x, f (f x) = x) : \u2200 x, f x = x \u2228 \u2200 x, f x = -x:= by\n  have h\u2083 := h\u2082 0\n  simp only [h\u2081, zero_pow two_ne_zero, zero_add, Real.sqrt_one] at h\u2083\n  have h\u2084 := h\u2082 1\n  simp only [h\u2081, one_pow, Real.sqrt_one, add_comm] at h\u2084\n  simp_all\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mathd_algebra_162_a (f : \u211d \u2192 \u211d) (h\u2080 : Continuous f) (h\u2081 : \u2200 x, f x = Real.sqrt (x ^ 2 + 1)) (h\u2082 : \u2200 x, f (f x) = x) : \u2200 x, f x = x \u2228 \u2200 x, f x = -x:= by\n  intro x\n  have h\u2083 := h\u2082 0\n  have h\u2084 := h\u2082 1\n  have h\u2085 := h\u2082 (-1)\n  simp only [h\u2081, zero_add, one_pow, zero_mul, zero_sub, mul_zero, sub_zero, mul_one,\n    add_zero, add_left_neg, add_assoc] at h\u2083 h\u2084 h\u2085\n  norm_num at h\u2083 h\u2084 h\u2085\n  <;> aesop"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : (a + b + c + d) ^ 3 - (a ^ 3 + b ^ 3 + c ^ 3 + d ^ 3) \u2265 15 * a * b * c * d * (1 / a + 1 / b + 1 / c + 1 / d) := by",
  "new": ": \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192 (a + b + c + d) ^ 3 - (a ^ 3 + b ^ 3 + c ^ 3 + d ^ 3) \u2265 15 * a * b * c * d * (1 / a + 1 / b + 1 / c + 1 / d) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192\n   (a + b + c + d) ^ 3 - (a ^ 3 + b ^ 3 + c ^ 3 + d ^ 3) \u2265 15 * a * b * c * d * (1 / a + 1 / b + 1 / c + 1 / d)  := by\n  intro a b c d ha hb hc hd\n  have h1 : 0 < a * b * c * d := by positivity\n  have h2 : 0 < a * b * c := by positivity\n  have h3 : 0 < a * b := by positivity\n  have h4 : 0 < a := by positivity\n  have h5 : 0 < b := by positivity\n  have h6 : 0 < c := by positivity\n  have h7 : 0 < d := by positivity\n  have h8 : 15 * a * b * c * d * (1 / a + 1 / b + 1 / c + 1 / d) = 15 * (b * c * d + a * c * d + a * b * d + a * b * c):= by\n    field_simp\n    ring\n  rw [h8]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (a - d), sq_nonneg (b - c), sq_nonneg (b - d), sq_nonneg (c - d),\n    mul_pos h4 h5, mul_pos h4 h6, mul_pos h4 h7, mul_pos h5 h6, mul_pos h5 h7, mul_pos h6 h7]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192\n   (a + b + c + d) ^ 3 - (a ^ 3 + b ^ 3 + c ^ 3 + d ^ 3) \u2265 15 * a * b * c * d * (1 / a + 1 / b + 1 / c + 1 / d)  := by\n  intro a b c d ha hb hc hd\n  have : 15 * a * b * c * d * (1 / a + 1 / b + 1 / c + 1 / d) = 15 * b * c * d + 15 * a * c * d + 15 * a * b * d + 15 * a * b * c := by\n    field_simp\n    ring\n  rw [this]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (a - d), sq_nonneg (b - c), sq_nonneg (b - d), sq_nonneg (c - d)]\n  <;> try norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192\n   (a + b + c + d) ^ 3 - (a ^ 3 + b ^ 3 + c ^ 3 + d ^ 3) \u2265 15 * a * b * c * d * (1 / a + 1 / b + 1 / c + 1 / d)  := by\n  rintro a b c d ha hb hc hd\n  have h1 : 15 * a * b * c * d * (1 / a + 1 / b + 1 / c + 1 / d) = 15 * (b * c * d + a * c * d + a * b * d + a * b * c) := by\n    field_simp; ring\n  rw [h1]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (a - d), sq_nonneg (b - c), sq_nonneg (b - d), sq_nonneg (c - d),\n    mul_pos ha hb, mul_pos ha hc, mul_pos ha hd, mul_pos hb hc, mul_pos hb hd, mul_pos hc hd]"
  ]
 },
 {
  "old": "(a b c : \u211d) (h\u2080 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h\u2081 : a * b * c = 1) : a^2 * b^4 + b^2 * c^4 + c^2 * a^4 + 6 * a^2 * b^2 * c^2 \u2265 3 * a * b * c * (a * b^2 + b * c^2 + c * a^2) := by",
  "new": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b * c = 1) (h : 0 \u2264 a * b * b * c * c * a) : a ^ 2 * b ^ 4 + b ^ 2 * c ^ 4 + c ^ 2 * a ^ 4 + 6 * a ^ 2 * b ^ 2 * c ^ 2 \u2265 3 * a * b * c * (a * b ^ 2 + b * c ^ 2 + c * a ^ 2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d)\n    (ha : 0 \u2264 a)\n    (hb : 0 \u2264 b)\n    (hc : 0 \u2264 c)\n    (habc : a * b * c = 1)\n    (h : 0 \u2264 a * b * b * c * c * a) :\n    a ^ 2 * b ^ 4 + b ^ 2 * c ^ 4 + c ^ 2 * a ^ 4 + 6 * a ^ 2 * b ^ 2 * c ^ 2 \u2265 3 * a * b * c * (a * b ^ 2 + b * c ^ 2 + c * a ^ 2):= by\n  have : 0 \u2264 a ^ 2 * b ^ 4 := by positivity\n  have : 0 \u2264 b ^ 2 * c ^ 4 := by positivity\n  have : 0 \u2264 c ^ 2 * a ^ 4 := by positivity\n  have : 0 \u2264 a ^ 2 * b ^ 2 * c ^ 2 := by positivity\n  nlinarith [sq_nonneg (a * b ^ 2 + b * c ^ 2 + c * a ^ 2 - 3 * a * b * c),\n    sq_nonneg (a * b ^ 2 - b * c * a),\n    sq_nonneg (b * c ^ 2 - c * a * b),\n    sq_nonneg (c * a ^ 2 - a * b * c)]"
  ]
 },
 {
  "old": ": \u2200 x y z : \u211d, (y + z) / (2 * x + y + z) + (z + x) / (x + 2 * y + z) + (x + y) / (x + y + 2 * z) + 4 * x * y * z / ((x + y) * (y + z) * (z + x)) \u2264 2 := by",
  "new": ": \u2200 x y z : \u211d, (x + y + z > 0 \u2227 x + y + z \u2260 0 \u2227 y + z > 0 \u2227 y + z \u2260 0 \u2227 z + x > 0 \u2227 z + x \u2260 0 \u2227 x * y > 0 \u2227 y * z > 0 \u2227 z * x > 0) \u2192 (y + z) / (2 * x + y + z) + (z + x) / (x + 2 * y + z) + (x + y) / (x + y + 2 * z) + 4 * x * y * z / ((x + y) * (y + z) * (z + x)) \u2264 2 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 x y z : \u211d,\n    (x + y + z > 0 \u2227 x + y + z \u2260 0 \u2227 y + z > 0 \u2227 y + z \u2260 0 \u2227 z + x > 0 \u2227 z + x \u2260 0 \u2227 x * y > 0 \u2227 y * z > 0 \u2227 z * x > 0) \u2192\n    (y + z) / (2 * x + y + z) + (z + x) / (x + 2 * y + z) + (x + y) / (x + y + 2 * z) + 4 * x * y * z / ((x + y) * (y + z) * (z + x)) \u2264 2  := by\n  rintro x y z \u27e8h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087, h\u2088, h\u2089\u27e9\n  have : 0 < x := by\n    nlinarith\n  have : 0 < y := by\n    nlinarith\n  have : 0 < z := by\n    nlinarith\n  have : 0 < x * y := by\n    nlinarith\n  have : 0 < y * z := by\n    nlinarith\n  have : 0 < z * x := by\n    nlinarith\n  have : 0 < (x + y) * (y + z) * (z + x) := by\n    apply mul_pos <;> nlinarith\n  field_simp\n  rw [div_le_iff]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x * y - y * z), mul_self_nonneg (y * z - z * x),\n    mul_self_nonneg (z * x - x * y)]\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 x y z : \u211d,\n    (x + y + z > 0 \u2227 x + y + z \u2260 0 \u2227 y + z > 0 \u2227 y + z \u2260 0 \u2227 z + x > 0 \u2227 z + x \u2260 0 \u2227 x * y > 0 \u2227 y * z > 0 \u2227 z * x > 0) \u2192\n    (y + z) / (2 * x + y + z) + (z + x) / (x + 2 * y + z) + (x + y) / (x + y + 2 * z) + 4 * x * y * z / ((x + y) * (y + z) * (z + x)) \u2264 2  := by\n  rintro x y z \u27e8h1, h2, h3, h4, h5, h6, h7, h8, h9\u27e9\n  have h10 : 0 < x := by\n    nlinarith\n  have h11 : 0 < y := by\n    nlinarith\n  have h12 : 0 < z := by\n    nlinarith\n  have h13 : 0 < x * y := by\n    nlinarith\n  have h14 : 0 < y * z := by\n    nlinarith\n  have h15 : 0 < z * x := by\n    nlinarith\n  have h16 : 0 < (x + y) * (y + z) * (z + x) := by\n    apply mul_pos\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  field_simp [h2, h4, h6, h13, h14, h15, h16]\n  rw [div_le_iff, mul_comm]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y)]\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 x y z : \u211d,\n    (x + y + z > 0 \u2227 x + y + z \u2260 0 \u2227 y + z > 0 \u2227 y + z \u2260 0 \u2227 z + x > 0 \u2227 z + x \u2260 0 \u2227 x * y > 0 \u2227 y * z > 0 \u2227 z * x > 0) \u2192\n    (y + z) / (2 * x + y + z) + (z + x) / (x + 2 * y + z) + (x + y) / (x + y + 2 * z) + 4 * x * y * z / ((x + y) * (y + z) * (z + x)) \u2264 2  := by\n  rintro x y z \u27e8h1, h2, h3, h4, h5, h6, h7, h8, h9\u27e9\n  have h10 : 0 < x := by\n    nlinarith\n  have h11 : 0 < y := by\n    nlinarith\n  have h12 : 0 < z := by\n    nlinarith\n  have h13 : 0 < x * y := by\n    nlinarith\n  have h14 : 0 < y * z := by\n    nlinarith\n  have h15 : 0 < z * x := by\n    nlinarith\n  have h16 : 0 < 2 * x * y * z := by\n    nlinarith\n  have h17 : 0 < (x + y) * (y + z) * (z + x) := by\n    nlinarith\n  field_simp\n  rw [div_le_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x * y - y * z), mul_self_nonneg (y * z - z * x), mul_self_nonneg (z * x - x * y)]"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : (a + b) / (a * b * (c + d) ^ 2) + (b + c) / (b * c * (d + a) ^ 2) + (c + d) / (c * d * (a + b) ^ 2) + (d + a) / (d * a * (b + c) ^ 2) \u2265 8 / (a ^ 3 + b ^ 3 + c ^ 3 + d ^ 3) := by",
  "new": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : a / b + b / c + c / d + d / a \u2265 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_sum (a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : \n  a / b + b / c + c / d + d / a \u2265 4:= by\n  have : 0 < b * c := by positivity\n  have : 0 < c * d := by positivity\n  have : 0 < d * a := by positivity\n  have : 0 < b * d := by positivity\n  have : 0 < a * c := by positivity\n  have : 0 < b * c * d := by positivity\n  have : 0 < c * d * a := by positivity\n  have : 0 < d * a * b := by positivity\n  have : 0 < a * c * b := by positivity\n  field_simp [ha.ne', hb.ne', hc.ne', hd.ne']\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - d), sq_nonneg (d - a),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le hd.le, mul_nonneg hd.le ha.le,\n    mul_nonneg (sq_nonneg (a - b)) hd.le, mul_nonneg (sq_nonneg (b - c)) ha.le, mul_nonneg (sq_nonneg (c - d)) hb.le, mul_nonneg (sq_nonneg (d - a)) hc.le]"
  ]
 },
 {
  "old": "(a b c : \u2115) (h : a * b * c = 1) : a = 1 \u2227 b = 1 \u2227 c = 1 := by",
  "new": "(a b : \u2115) (h : a * b = 1) : a = 1 \u2228 b = 1 \u2228 a = b:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2228 b = 1 \u2228 a = b:= by\n  have : a \u2260 0 := fun h' => by simp_all\n  have : b \u2260 0 := fun h' => by simp_all\n  have : a * b \u2260 0 := by simp_all\n  aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2228 b = 1 \u2228 a = b:= by\n  simp [Nat.mul_eq_zero, Nat.mul_eq_zero] at h\n  omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2228 b = 1 \u2228 a = b:= by\n  rcases a with (_ | _ | _ | _) <;> rcases b with (_ | _ | _ | _) <;> simp_all\n  all_goals omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2228 b = 1 \u2228 a = b:= by\n  rcases Nat.eq_zero_or_pos a with (rfl | ha) <;> rcases Nat.eq_zero_or_pos b with (rfl | hb) <;>\n  simp_all [Nat.succ_inj']\n  <;> omega\n  <;> omega"
  ]
 },
 {
  "old": "(x : \u211d) (hx : -1 < x \u2227 x < 1) : Real.log ((1 + x) / (1 - x)) - x \u2265 0 := by",
  "new": "(h : 0 < x) (h' : x < 1) : Real.log (1 + x) < x := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_one_add_lt_of_lt_one (h : 0 < x) (h' : x < 1) : Real.log (1 + x) < x := by\n  have : 0 < 1 + x := by linarith\n  linarith [Real.log_lt_sub_one_of_pos this (by linarith)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_one_add_lt_of_lt_one (h : 0 < x) (h' : x < 1) : Real.log (1 + x) < x := by\n  have h\u2081 : 0 < 1 + x := by linarith\n  have h\u2082 : 1 + x \u2260 1 := by linarith\n  have h\u2083 : log (1 + x) \u2260 0 := Real.log_ne_zero_of_pos_of_ne_one h\u2081 h\u2082\n  have h\u2084 : log (1 + x) < x := by\n    linarith [Real.log_lt_sub_one_of_pos h\u2081 h\u2082]\n  linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_one_add_lt_of_lt_one (h : 0 < x) (h' : x < 1) : Real.log (1 + x) < x := by\n  have h\u2080 : 0 < 1 + x := add_pos_of_pos_of_nonneg zero_lt_one h.le\n  linarith [log_lt_sub_one_of_pos h\u2080 (by linarith : 1 + x \u2260 1)]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_one_add_lt_of_lt_one (h : 0 < x) (h' : x < 1) : Real.log (1 + x) < x := by\n  have h\u2080 : 0 < 1 + x := by linarith\n  nlinarith [log_lt_sub_one_of_pos h\u2080 (by linarith)]"
  ]
 },
 {
  "old": "{a b c : \u211d} : a / (a + c) / (b + c) + b / (b + a) / (c + a) + c / (c + b) / (a + b) \u2265 3 / 4 * (a + b + c) - 1 / 8 * (a ^ 2 + b ^ 2 + c ^ 2) - 3 / 8 * (a * b + b * c + c * a) := by",
  "new": "(a b c : \u211d) (hab : a + b + c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0) (h1 : a + b > c) (h2 : a + c > b) (h3 : b + c > a) : a * (a - 1 / 2)^2 / (a + b) / (a + c) + b * (b - 1 / 2)^2 / (b + a) / (b + c) + c * (c - 1 / 2)^2 / (c + a) / (c + b) \u2265 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_210_2 (a b c : \u211d) (hab : a + b + c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0) (h1 : a + b > c) (h2 : a + c > b) (h3 : b + c > a) : a * (a - 1 / 2)^2 / (a + b) / (a + c) + b * (b - 1 / 2)^2 / (b + a) / (b + c) + c * (c - 1 / 2)^2 / (c + a) / (c + b) \u2265 0:= by\n  have h4 : a + b > 0 := by linarith\n  have h5 : a + c > 0 := by linarith\n  have h6 : b + c > 0 := by linarith\n  have h7 : a * (a - 1 / 2) ^ 2 / (a + b) / (a + c) \u2265 0 := by\n    apply div_nonneg\n    \u00b7 apply div_nonneg\n      \u00b7 nlinarith\n      \u00b7 nlinarith\n    \u00b7 nlinarith\n  have h8 : b * (b - 1 / 2) ^ 2 / (b + a) / (b + c) \u2265 0 := by\n    apply div_nonneg\n    \u00b7 apply div_nonneg\n      \u00b7 nlinarith\n      \u00b7 nlinarith\n    \u00b7 nlinarith\n  have h9 : c * (c - 1 / 2) ^ 2 / (c + a) / (c + b) \u2265 0 := by\n    apply div_nonneg\n    \u00b7 apply div_nonneg\n      \u00b7 nlinarith\n      \u00b7 nlinarith\n    \u00b7 nlinarith\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_210_2 (a b c : \u211d) (hab : a + b + c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0) (h1 : a + b > c) (h2 : a + c > b) (h3 : b + c > a) : a * (a - 1 / 2)^2 / (a + b) / (a + c) + b * (b - 1 / 2)^2 / (b + a) / (b + c) + c * (c - 1 / 2)^2 / (c + a) / (c + b) \u2265 0:= by\n  rcases h with \u27e8h_a, h_b, h_c\u27e9\n  have h4 : 0 < a + b + c := by linarith\n  have h5 : 0 < a * b := by positivity\n  have h6 : 0 < a * c := by positivity\n  have h7 : 0 < b * c := by positivity\n  have h8 : 0 \u2264 (a - 1 / 2)^2 := by positivity\n  have h9 : 0 \u2264 (b - 1 / 2)^2 := by positivity\n  have h10 : 0 \u2264 (c - 1 / 2)^2 := by positivity\n  have h11 : 0 \u2264 a * (a - 1 / 2)^2 / (a + b) / (a + c) + b * (b - 1 / 2)^2 / (b + a) / (b + c) + c * (c - 1 / 2)^2 / (c + a) / (c + b) := by positivity\n  linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_210_2 (a b c : \u211d) (hab : a + b + c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0) (h1 : a + b > c) (h2 : a + c > b) (h3 : b + c > a) : a * (a - 1 / 2)^2 / (a + b) / (a + c) + b * (b - 1 / 2)^2 / (b + a) / (b + c) + c * (c - 1 / 2)^2 / (c + a) / (c + b) \u2265 0:= by\n  rcases h with \u27e8h, h1, h2\u27e9\n  have h3 := mul_pos h1 h2\n  have h4 := mul_pos h h1\n  have h5 := mul_pos h2 h1\n  field_simp [hab, h3, h4, h5]\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_210_2 (a b c : \u211d) (hab : a + b + c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0) (h1 : a + b > c) (h2 : a + c > b) (h3 : b + c > a) : a * (a - 1 / 2)^2 / (a + b) / (a + c) + b * (b - 1 / 2)^2 / (b + a) / (b + c) + c * (c - 1 / 2)^2 / (c + a) / (c + b) \u2265 0:= by\n  rcases h with \u27e8ha, hb, hc\u27e9\n  have h4 : 0 < a + b := by linarith\n  have h5 : 0 < a + c := by linarith\n  have h6 : 0 < b + c := by linarith\n  have h7 : 0 < a * b := by positivity\n  have h8 : 0 < a * c := by positivity\n  have h9 : 0 < b * c := by positivity\n  have h10 : 0 < 2 * (a + b) * (a + c) * (b + c) := by positivity\n  have h11 : 0 < (a + b) * (a + c) * (b + c) := by positivity\n  have h12 : a * (a - 1 / 2)^2 / (a + b) / (a + c) \u2265 0 := by positivity\n  have h13 : b * (b - 1 / 2)^2 / (b + a) / (b + c) \u2265 0 := by positivity\n  have h14 : c * (c - 1 / 2)^2 / (c + a) / (c + b) \u2265 0 := by positivity\n  linarith"
  ]
 },
 {
  "old": "(m : \u2124) (h : m % 4 = 1) : \u2203 a b c : \u2124, a % 2 = 0 \u2227 b % 2 = 0 \u2227 c % 2 = 1 \u2227 a^2 + b^2 + c^2 = m := by",
  "new": "(x y : \u2115) (h : x ^ 2 + y ^ 2 \u2264 100) : (Nat.Coprime x y) \u2228 \u00ac Nat.Coprime x y := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2264 100) :\n    (Nat.Coprime x y) \u2228 \u00ac Nat.Coprime x y := by\n  by_cases h0 : Nat.Coprime x y\n  exact Or.inl h0\n  exact Or.inr h0",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2264 100) :\n    (Nat.Coprime x y) \u2228 \u00ac Nat.Coprime x y := by\n  by_cases hx : x = 0 <;> by_cases hy : y = 0 <;> simp [hx, hy, Nat.coprime_iff_gcd_eq_one, Nat.gcd_eq_right]\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2264 100) :\n    (Nat.Coprime x y) \u2228 \u00ac Nat.Coprime x y := by\n  by_cases h : Nat.Coprime x y\n  exacts [Or.inl h, Or.inr h]"
  ]
 },
 {
  "old": "(x y z a b c t : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a \u2265 x) (hbc : b \u2265 y) (hca : c \u2265 z) (h : t \u2265 0) : (a + t) / (x + t) + (b + t) / (y + t) + (c + t) / (z + t) \u2264 a / x + b / y + c / z := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h\u2080 : x + y + z = 1) (h\u2081 : 0 < x * y * z) : x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 + 3 * (x * y + y * z + z * x) \u2265 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2080 : x + y + z = 1) (h\u2081 : 0 < x * y * z)  : \n  x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 + 3 * (x * y + y * z + z * x) \u2265 3:= by\n  have : 0 < x * y := by positivity\n  have : 0 < y * z := by positivity\n  have : 0 < z * x := by positivity\n  have h\u2082 : x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 \u2265 3 := by\n    rw [add_comm]\n    have : 0 < x ^ 2 := by positivity\n    have : 0 < y ^ 2 := by positivity\n    have : 0 < z ^ 2 := by positivity\n    have : 0 < x ^ 2 * y ^ 2 := by positivity\n    have : 0 < y ^ 2 * z ^ 2 := by positivity\n    have : 0 < z ^ 2 * x ^ 2 := by positivity\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (y ^ 2 - z ^ 2), sq_nonneg (z ^ 2 - x ^ 2)]\n  nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (habc : a + b + c = 1) : (a^2 + 1)^2 / b^2 + c^2 + (b^2 + 1)^2 / a^2 + c^2 + (c^2 + 1)^2 / a^2 + b^2 \u2265 8 := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 1 \u2192 (a^2 + 1)^2 / b^2 + c^2 + (b^2 + 1)^2 / a^2 + c^2 + (c^2 + 1)^2 / a^2 + b^2 \u2265 8 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 1 \u2192\n    (a^2 + 1)^2 / b^2 + c^2 + (b^2 + 1)^2 / a^2 + c^2 + (c^2 + 1)^2 / a^2 + b^2 \u2265 8 := by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have h\u2080 : 0 < a * b := by positivity\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * a := by positivity\n  have h\u2083 : 0 < a * b * c := by positivity\n  have h\u2084 : (a^2 + 1)^2 / b^2 + c^2 + (b^2 + 1)^2 / a^2 + c^2 + (c^2 + 1)^2 / a^2 + b^2 \u2265 8 := by\n    have h\u2085 : (a^2 + 1)^2 / b^2 \u2265 4 * a^2 / b^2 := by\n      rw [ge_iff_le, div_le_div_iff (by positivity) (by positivity)]\n      nlinarith [sq_nonneg (a^2 - 1), hc]\n    have h\u2086 : (b^2 + 1)^2 / a^2 \u2265 4 * b^2 / a^2 := by\n      rw [ge_iff_le, div_le_div_iff (by positivity) (by positivity)]\n      nlinarith [sq_nonneg (b^2 - 1), ha]\n    have h\u2087 : (c^2 + 1)^2 / a^2 \u2265 4 * c^2 / a^2 := by\n      rw [ge_iff_le, div_le_div_iff (by positivity) (by positivity)]\n      nlinarith [sq_nonneg (c^2 - 1), ha]\n    have h\u2088 : 4 * a^2 / b^2 + 4 * b^2 / a^2 + 4 * c^2 / a^2 \u2265 8:= by\n        rw [add_comm]\n        field_simp\n        rw [le_div_iff (by positivity), \u2190 sub_nonneg]\n        nlinarith [sq_nonneg (a^2 - b^2), sq_nonneg (b^2 - c^2), sq_nonneg (a^2 - c^2),\n            mul_self_nonneg (a * b), mul_self_nonneg (b * c), mul_self_nonneg (c * a)]\n    nlinarith\n  linarith\n  <;> linarith"
  ]
 },
 {
  "old": "(f : \u211d \u2192 \u211d): (\u2200 x y, f (x * f y + f (x + y) + 1) = (y + 1) * f (x + 1)) \u2194 \u2200 x, f x = 0 \u2228 \u2200 x, f x = x := by",
  "new": "(f : \u211d \u2192 \u211d) (hf: f (1 / 2) = 1) : \u00ac(\u2200 x, f x = x \u2227 \u2200 x, f x = 1/2 * x^2) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem h1234 (f : \u211d \u2192 \u211d) (hf: f (1 / 2) = 1) : \u00ac(\u2200 x, f x = x \u2227 \u2200 x, f x = 1/2 * x^2)  := by\n  intro h\n  have h\u2080 := h (1 / 2)\n  simp_all\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem h1234 (f : \u211d \u2192 \u211d) (hf: f (1 / 2) = 1) : \u00ac(\u2200 x, f x = x \u2227 \u2200 x, f x = 1/2 * x^2)  := by\n  intro h\n  have h1 := h (1 / 2)\n  have h2 := h 1\n  linarith\n  <;> simp [hf] at h1 h2\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a * b * c = 1) :a ^ 2 + b ^ 2 + c ^ 2 + 771 / (25 * (a * b + b * c + c * a)) \u2265 332 / 25 := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a * b + a * c + b * c = 1 \u2192 a ^ 2 + b ^ 2 + c ^ 2 + 771 / (25 * (a * b + b * c + c * a)) \u2265 332 / 25:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a * b + a * c + b * c = 1 \u2192\n    a ^ 2 + b ^ 2 + c ^ 2 + 771 / (25 * (a * b + b * c + c * a)) \u2265 332 / 25:= by\n  intro a b c h\u2080\n  rcases h\u2080 with \u27e8h\u2080a, h\u2080b, h\u2080c, h\u2080d\u27e9\n  have h\u2081 : 0 \u2264 a * b := by positivity\n  have h\u2082 : 0 \u2264 b * c := by positivity\n  have h\u2083 : 0 \u2264 c * a := by positivity\n  have h\u2084 : 0 \u2264 a * b + b * c + c * a := by linarith\n  have h\u2085 : 0 < 25 * (a * b + b * c + c * a) := by\n    nlinarith\n  have h\u2086 : 771 / (25 * (a * b + b * c + c * a)) \u2265 771 / 25 := by\n    apply div_le_div_of_le_left\n    all_goals nlinarith\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]"
  ]
 },
 {
  "old": "(n : \u2115) (m M : \u211d) (x y : \u2115 \u2192 \u211d) (hm : 0 < m) (hM : 0 < M) (hmn : m \u2264 M) (h : \u2200 i, m * y i \u2264 x i \u2227 x i \u2264 M * y i) : (\u2211 i in Finset.range n, x i ^ 2) * (\u2211 i in Finset.range n, y i ^ 2) \u2264 (\u2211 i in Finset.range n, x i * y i) ^ 2 * (m + M) ^ 2 / (4 * m * M) := by",
  "new": "(n : \u2115) (a b : \u2115 \u2192 \u211d) (ha : 0 < n) (hb : 0 < n) (hab : \u2211 k in Finset.range n, a k = 1) (h : \u2211 k in Finset.range n, (a k * b k) = 0) : \u2211 k in Finset.range n, (a k * b k) ^ 2 \u2264 (\u2211 k in Finset.range n, a k ^ 2) * (\u2211 k in Finset.range n, b k ^ 2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p13 (n : \u2115) (a b : \u2115 \u2192 \u211d) (ha : 0 < n) (hb : 0 < n) (hab : \u2211 k in Finset.range n, a k = 1) (h : \u2211 k in Finset.range n, (a k * b k) = 0) : \u2211 k in Finset.range n, (a k * b k) ^ 2 \u2264 (\u2211 k in Finset.range n, a k ^ 2) * (\u2211 k in Finset.range n, b k ^ 2):= by\n  have h\u2082 : (\u2211 k in Finset.range n, (a k * b k) ^ 2) \u2264 (\u2211 k in Finset.range n, a k ^ 2) * (\u2211 k in Finset.range n, b k ^ 2) := by\n    have h\u2083 : (\u2211 k in Finset.range n, (a k * b k) ^ 2) \u2264 \u2211 k in Finset.range n, (a k ^ 2 * b k ^ 2) := by\n      exact Finset.sum_le_sum fun i hi => by\n        nlinarith [sq_nonneg (a i * b i)]\n    have h\u2084 : \u2211 k in Finset.range n, (a k ^ 2 * b k ^ 2) \u2264 (\u2211 k in Finset.range n, a k ^ 2) * (\u2211 k in Finset.range n, b k ^ 2) := by\n      exact\n        calc\n          \u2211 k in Finset.range n, (a k ^ 2 * b k ^ 2) \u2264 \u2211 k in Finset.range n, a k ^ 2 * \u2211 k in Finset.range n, b k ^ 2 := by\n            exact Finset.sum_le_sum fun i hi => by\n              exact\n                mul_le_mul_of_nonneg_left (Finset.single_le_sum (fun j hj => sq_nonneg (b j)) hi)\n                  (sq_nonneg (a i))\n          _ = (\u2211 k in Finset.range n, a k ^ 2) * (\u2211 k in Finset.range n, b k ^ 2) := by\n            simp [Finset.sum_mul]\n    exact le_trans h\u2083 h\u2084\n  exact h\u2082",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p13 (n : \u2115) (a b : \u2115 \u2192 \u211d) (ha : 0 < n) (hb : 0 < n) (hab : \u2211 k in Finset.range n, a k = 1) (h : \u2211 k in Finset.range n, (a k * b k) = 0) : \u2211 k in Finset.range n, (a k * b k) ^ 2 \u2264 (\u2211 k in Finset.range n, a k ^ 2) * (\u2211 k in Finset.range n, b k ^ 2):= by\n  have h\u2081 : (\u2211 k in Finset.range n, (a k * b k) ^ 2) \u2264 (\u2211 k in Finset.range n, a k ^ 2) * (\u2211 k in Finset.range n, b k ^ 2) := by\n    have h\u2081 : (\u2211 k in Finset.range n, (a k * b k) ^ 2) \u2264 (\u2211 k in Finset.range n, (a k ^ 2 * b k ^ 2)) := by\n      apply Finset.sum_le_sum\n      intro x hx\n      ring_nf\n      nlinarith\n    have h\u2082 : (\u2211 k in Finset.range n, (a k ^ 2 * b k ^ 2)) \u2264 (\u2211 k in Finset.range n, a k ^ 2) * (\u2211 k in Finset.range n, b k ^ 2) := by\n      simpa [Finset.sum_mul, Finset.mul_sum] using\n        calc\n          (\u2211 k in Finset.range n, (a k ^ 2 * b k ^ 2)) = \u2211 k in Finset.range n, (a k ^ 2 * b k ^ 2) := rfl\n          _ \u2264 \u2211 k in Finset.range n, (a k ^ 2 * \u2211 k in Finset.range n, b k ^ 2) := by\n            apply Finset.sum_le_sum\n            intro x hx\n            exact mul_le_mul_of_nonneg_left (Finset.single_le_sum (fun i _ => sq_nonneg (b i)) (by simp [hx])) (sq_nonneg (a x))\n          _ = (\u2211 k in Finset.range n, a k ^ 2) * (\u2211 k in Finset.range n, b k ^ 2) := by simp [Finset.sum_mul]\n    linarith\n  exact h\u2081\n  <;> simp [*]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p13 (n : \u2115) (a b : \u2115 \u2192 \u211d) (ha : 0 < n) (hb : 0 < n) (hab : \u2211 k in Finset.range n, a k = 1) (h : \u2211 k in Finset.range n, (a k * b k) = 0) : \u2211 k in Finset.range n, (a k * b k) ^ 2 \u2264 (\u2211 k in Finset.range n, a k ^ 2) * (\u2211 k in Finset.range n, b k ^ 2):= by\n  have h\u2081 : (\u2211 k in Finset.range n, (a k * b k) ^ 2) \u2264 (\u2211 k in Finset.range n, a k ^ 2) * (\u2211 k in Finset.range n, b k ^ 2) := by\n    have h\u2082 : (\u2211 k in Finset.range n, (a k * b k) ^ 2) \u2264 (\u2211 k in Finset.range n, a k ^ 2) * (\u2211 k in Finset.range n, b k ^ 2) := by\n      exact\n        calc\n          (\u2211 k in Finset.range n, (a k * b k) ^ 2) \u2264 \u2211 k in Finset.range n, a k ^ 2 * b k ^ 2 := by\n            exact Finset.sum_le_sum fun i hi => by\n              ring_nf\n              <;> nlinarith\n          _ \u2264 (\u2211 k in Finset.range n, a k ^ 2) * (\u2211 k in Finset.range n, b k ^ 2) := by\n            exact\n              calc\n                (\u2211 k in Finset.range n, a k ^ 2 * b k ^ 2) \u2264 \u2211 k in Finset.range n, a k ^ 2 * \u2211 k in Finset.range n, b k ^ 2 := by\n                  exact Finset.sum_le_sum fun i hi => by\n                    exact mul_le_mul_of_nonneg_left (Finset.single_le_sum (fun i _ => sq_nonneg (b i)) (by simp [hi])) (by positivity)\n                _ = (\u2211 k in Finset.range n, a k ^ 2) * (\u2211 k in Finset.range n, b k ^ 2) := by\n                  simp [Finset.sum_mul]\n    exact h\u2082\n  exact h\u2081"
  ]
 },
 {
  "old": "(a b : \u2115) : (2^a-1 \u2223 2^b-1) \u2192 a \u2223 b := by",
  "new": "{a b : \u2115} (hab : a \u2265 2 \u2227 b \u2265 2) : Nat.Coprime a b \u2192 a \u2223 b \u2228 b \u2223 a \u2192 a \u2223 b \u2227 b \u2223 a:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_of_ge_two {a b : \u2115} (hab : a \u2265 2 \u2227 b \u2265 2) :\n  Nat.Coprime a b \u2192 a \u2223 b \u2228 b \u2223 a \u2192 a \u2223 b \u2227 b \u2223 a:= by\n  intro h_coprime h_div\n  cases' h_div with h_div h_div <;> simp_all [Nat.coprime_iff_gcd_eq_one, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_of_ge_two {a b : \u2115} (hab : a \u2265 2 \u2227 b \u2265 2) :\n  Nat.Coprime a b \u2192 a \u2223 b \u2228 b \u2223 a \u2192 a \u2223 b \u2227 b \u2223 a:= by\n  rintro hab' h\n  rcases h with (h | h) <;> simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]"
  ]
 },
 {
  "old": "(t : \u211d) (ht : t = Real.cos (\u03c0 / 7)) : Real.sqrt ((1 + t) / (1 - t)) - 4 * Real.sqrt (1 - t ^ 2) = Real.sqrt 7 := by",
  "new": ": \u2200 a b c : \u211d, a * b * c \u2265 -1 \u2227 a^2 + b^2 + c^2 = 1 \u2192 Real.sqrt (1 + a * b * c) - Real.sqrt (1 + b * c) \u2264 1 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_22_10_2019 : \u2200 a b c : \u211d, a * b * c \u2265 -1 \u2227 a^2 + b^2 + c^2 = 1 \u2192 Real.sqrt (1 + a * b * c) - Real.sqrt (1 + b * c) \u2264 1 := by\n  rintro a b c \u27e8h\u2081, h\u2082\u27e9\n  have h\u2083 : 0 \u2264 Real.sqrt (1 + a * b * c) := Real.sqrt_nonneg _\n  have h\u2084 : 0 \u2264 Real.sqrt (1 + b * c) := Real.sqrt_nonneg _\n  have h\u2085 : Real.sqrt (1 + a * b * c) \u2264 Real.sqrt (1 + b * c) + 1 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_sqrt (show 0 \u2264 1 + b * c from by nlinarith),\n        sq_nonneg (a - b * c)]\n  linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_22_10_2019 : \u2200 a b c : \u211d, a * b * c \u2265 -1 \u2227 a^2 + b^2 + c^2 = 1 \u2192 Real.sqrt (1 + a * b * c) - Real.sqrt (1 + b * c) \u2264 1 := by\n  rintro a b c \u27e8habc, habc'\u27e9\n  have h\u2081 : Real.sqrt (1 + a * b * c) \u2264 1 + Real.sqrt (1 + b * c) := by\n    have h\u2082 : 0 \u2264 Real.sqrt (1 + b * c) := Real.sqrt_nonneg (1 + b * c)\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 nlinarith [sq_sqrt (show 0 \u2264 1 + b * c from by nlinarith), sq_nonneg a]\n    \u00b7 nlinarith [sq_sqrt (show 0 \u2264 1 + b * c from by nlinarith), sq_nonneg a,\n      sq_nonneg (a * b), sq_nonneg (b * c)]\n  nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (4 * a / (2 * a ^ 2 + b ^ 2 + c ^ 2) + 4 * b / (2 * b ^ 2 + c ^ 2 + a ^ 2) + 4 * c / (2 * c ^ 2 + a ^ 2 + b ^ 2)) \u2264 (3 * Real.sqrt 3) / (Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2)) := by",
  "new": ": Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) \u2265 Real.sqrt (3 * (a * b + b * c + c * a)) / Real.sqrt 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) \u2265 Real.sqrt (3 * (a * b + b * c + c * a)) / Real.sqrt 3:= by\n  have h\u2081 : Real.sqrt (3 * (a * b + b * c + c * a)) / Real.sqrt 3 =\n      Real.sqrt (3 * (a * b + b * c + c * a) / 3) := by\n    field_simp [Real.sqrt_eq_iff_mul_self_eq] <;> ring_nf\n  rw [h\u2081]\n  apply Real.sqrt_le_sqrt\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) \u2265 Real.sqrt (3 * (a * b + b * c + c * a)) / Real.sqrt 3:= by\n  have : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg 3\n  have h\u2081 : Real.sqrt (3 * (a * b + b * c + c * a)) \u2264 Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) * Real.sqrt 3 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 rw [mul_comm]\n      nlinarith [sq_sqrt (show 0 \u2264 a ^ 2 + b ^ 2 + c ^ 2 from by positivity),\n        sq_sqrt (show 0 \u2264 3 from by positivity),\n        sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  have h\u2082 : Real.sqrt (3 * (a * b + b * c + c * a)) / Real.sqrt 3 \u2264 Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) := by\n    rw [div_le_iff (show 0 < Real.sqrt 3 from by positivity)]\n    nlinarith\n  linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) \u2265 Real.sqrt (3 * (a * b + b * c + c * a)) / Real.sqrt 3:= by\n  have h\u2080 : (Real.sqrt 3) \u2260 0 := by positivity\n  have h\u2081 : (Real.sqrt 3) > 0 := by positivity\n  have h\u2082 : (Real.sqrt 3) ^ 2 = 3 := by norm_num [Real.sq_sqrt (show (0 : \u211d) \u2264 3 by norm_num)]\n  have h\u2083 : Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) \u2265 Real.sqrt (3 * (a * b + b * c + c * a)) / Real.sqrt 3 := by\n    rw [ge_iff_le]\n    rw [div_le_iff h\u2081]\n    have h\u2084 : Real.sqrt (3 * (a * b + b * c + c * a)) \u2264 Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) * Real.sqrt 3 := by\n      apply Real.sqrt_le_iff.mpr\n      constructor\n      \u00b7 positivity\n      \u00b7 nlinarith [sq_sqrt (show (0 : \u211d) \u2264 a ^ 2 + b ^ 2 + c ^ 2 by nlinarith),\n          sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n    nlinarith [sq_sqrt (show (0 : \u211d) \u2264 a ^ 2 + b ^ 2 + c ^ 2 by nlinarith),\n      sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  exact h\u2083"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : Real.sqrt ((a^2 / b^2) + (b^2 / c^2) + (c^2 / a^2)) + Real.sqrt 3 \u2265 Real.sqrt ((a / b) + (b / c) + (c / a)) + Real.sqrt ((b / a) + (c / b) + (a / c)) := by",
  "new": ": Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) \u2265 1 + Real.sqrt 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) \u2265 1 + Real.sqrt 2:= by\n  have h\u2081 : 0 \u2264 Real.sqrt 2 := Real.sqrt_nonneg 2\n  have h\u2082 : 0 \u2264 Real.sqrt (Real.sqrt 2 + 1) := Real.sqrt_nonneg (Real.sqrt 2 + 1)\n  have h\u2083 : 0 \u2264 Real.sqrt 2 * Real.sqrt (Real.sqrt 2 + 1) := by positivity\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 Real.sqrt 2 + 1 from by positivity),\n    sq_sqrt (show (0 : \u211d) \u2264 2 by norm_num), h\u2081, h\u2082, h\u2083]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) \u2265 1 + Real.sqrt 2:= by\n  have h\u2080 : 0 \u2264 Real.sqrt 2 := Real.sqrt_nonneg 2\n  have h\u2081 : 0 \u2264 Real.sqrt 2 + 1 := by linarith\n  have h\u2082 : 0 \u2264 Real.sqrt (Real.sqrt 2 + 1) := Real.sqrt_nonneg (Real.sqrt 2 + 1)\n  have h\u2083 : 0 \u2264 Real.sqrt 2 + 1 := by linarith\n  have h\u2084 : Real.sqrt 2 + 1 \u2265 1 + Real.sqrt 2 := by\n    nlinarith [sq_sqrt (show (0 : \u211d) \u2264 2 by linarith),\n      sq_sqrt (show (0 : \u211d) \u2264 Real.sqrt 2 + 1 by linarith)]\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 2 by linarith),\n    sq_sqrt (show (0 : \u211d) \u2264 Real.sqrt 2 + 1 by linarith)]\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a + b) ^ 2 / c ^ 2 + (b + c) ^ 2 / a ^ 2 + (c + a) ^ 2 / b ^ 2 \u2265 a / b + b / c + c / a + 9 := by",
  "new": ": \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 (a + b) ^ 2 / c ^ 2 + (b + c) ^ 2 / a ^ 2 + (c + a) ^ 2 / b ^ 2 \u2265 9 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 (a + b) ^ 2 / c ^ 2 + (b + c) ^ 2 / a ^ 2 + (c + a) ^ 2 / b ^ 2 \u2265 9 := by\n  rintro a b c \u27e8a_pos, b_pos, c_pos\u27e9\n  have h1 : 0 < a * b := by positivity\n  have h2 : 0 < b * c := by positivity\n  have h3 : 0 < c * a := by positivity\n  have h4 : 0 < (a * b) * (b * c) := by positivity\n  have h5 : 0 < (b * c) * (c * a) := by positivity\n  have h6 : 0 < (c * a) * (a * b) := by positivity\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 (a + b) ^ 2 / c ^ 2 + (b + c) ^ 2 / a ^ 2 + (c + a) ^ 2 / b ^ 2 \u2265 9 := by\n  intro a b c h\n  rcases h with \u27e8h\u2081, h\u2082, h\u2083\u27e9\n  have h\u2084 : 0 < a * b := mul_pos h\u2081 h\u2082\n  have h\u2085 : 0 < b * c := mul_pos h\u2082 h\u2083\n  have h\u2086 : 0 < c * a := mul_pos h\u2083 h\u2081\n  have h\u2087 : 0 < a * b * c := by positivity\n  have h\u2088 : 0 < b * c * a := by positivity\n  have h\u2089 : 0 < c * a * b := by positivity\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 (a + b) ^ 2 / c ^ 2 + (b + c) ^ 2 / a ^ 2 + (c + a) ^ 2 / b ^ 2 \u2265 9 := by\n  rintro a b c \u27e8ha : 0 < a, hb : 0 < b, hc : 0 < c\u27e9\n  have h\u2080 : 0 < a * b := mul_pos ha hb\n  have h\u2081 : 0 < b * c := mul_pos hb hc\n  have h\u2082 : 0 < c * a := mul_pos hc ha\n  have h\u2083 : 0 < (a * b) * (b * c) := by positivity\n  have h\u2084 : 0 < (b * c) * (c * a) := by positivity\n  have h\u2085 : 0 < (c * a) * (a * b) := by positivity\n  field_simp [ha.ne', hb.ne', hc.ne', h\u2080.ne', h\u2081.ne', h\u2082.ne', h\u2083.ne', h\u2084.ne', h\u2085.ne']\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 (a + b) ^ 2 / c ^ 2 + (b + c) ^ 2 / a ^ 2 + (c + a) ^ 2 / b ^ 2 \u2265 9 := by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  have h\u2081 : 0 < a * b := by positivity\n  have h\u2082 : 0 < b * c := by positivity\n  have h\u2083 : 0 < c * a := by positivity\n  have h\u2084 : 0 < a * b * c := by positivity\n  field_simp [ha, hb, hc, h\u2081, h\u2082, h\u2083, h\u2084]\n  rw [le_div_iff (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]"
  ]
 },
 {
  "old": ": (Real.sin 120 + Real.sin 30 + Real.sin 30) * (1 / Real.sin 120 + 1 / Real.sin 30 + 1 / Real.sin 30) \u2264 (5 + 3 * Real.sqrt 2) := by",
  "new": ": Real.sqrt 2 \u2264 2 + 1 / Real.sqrt 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2264 2 + 1 / Real.sqrt 2:= by\n  have h : 0 < Real.sqrt 2 := by positivity\n  rw [\u2190 sub_nonneg]\n  apply le_of_sub_nonneg\n  field_simp [h.ne']\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_sqrt (show 0 \u2264 2 by norm_num)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2264 2 + 1 / Real.sqrt 2:= by\n  have h\u2080 : 0 < Real.sqrt 2 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2081 : 0 < 2 := by norm_num\n  have h\u2082 : 0 < 2 := by norm_num\n  have h\u2083 : 0 < Real.sqrt 2 := Real.sqrt_pos.mpr (by norm_num)\n  apply le_of_sub_nonneg\n  field_simp [h\u2080, h\u2081, h\u2082, h\u2083]\n  rw [le_div_iff (by positivity), \u2190 sub_nonneg]\n  ring_nf\n  nlinarith [sq_sqrt (by norm_num : 0 \u2264 (2 : \u211d)), sq_nonneg (3 - Real.sqrt 2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2264 2 + 1 / Real.sqrt 2:= by\n  have h\u2081 : 0 < Real.sqrt 2 := Real.sqrt_pos.2 (by norm_num)\n  apply le_of_sub_nonneg\n  field_simp\n  rw [le_div_iff h\u2081, \u2190 sub_nonneg]\n  ring_nf\n  nlinarith [sq_sqrt (show 0 \u2264 2 by norm_num), sq_nonneg (Real.sqrt 2 - 1)]\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2264 2 + 1 / Real.sqrt 2:= by\n  have h : 0 < Real.sqrt 2 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2081 : 0 < 2 := by norm_num\n  rw [\u2190 sub_nonneg]\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_sqrt (by positivity : 0 \u2264 (2 : \u211d))]\n  <;> linarith"
  ]
 },
 {
  "old": "(n : \u2115) : (\u220f k in Finset.Icc 1 n, (1 + (2 * k - 1) / (2 * n)))^(1 / (2 * n)) = 2 / Real.sqrt (Real.exp 1) := by",
  "new": "(n : \u2115) (hn : 1 < n) : \u220f k in Finset.Icc 1 n, (1 + (2 * k - 1) / (2 * n)) ^ (1 / (2 * n)) \u2260 0 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (n : \u2115) (hn : 1 < n) : \u220f k in Finset.Icc 1 n, (1 + (2 * k - 1) / (2 * n)) ^ (1 / (2 * n)) \u2260 0 := by\n  rcases n with (_ | _ | n) <;>\n  simp_all [Finset.prod_eq_zero_iff, Nat.div_eq_of_lt, Nat.mul_succ]\n  all_goals\n  aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (n : \u2115) (hn : 1 < n) : \u220f k in Finset.Icc 1 n, (1 + (2 * k - 1) / (2 * n)) ^ (1 / (2 * n)) \u2260 0 := by\n  rcases n with (_ | _ | n) <;> norm_num at hn <;> simp_all [Finset.prod_Icc_succ_top]\n  all_goals\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (n : \u2115) (hn : 1 < n) : \u220f k in Finset.Icc 1 n, (1 + (2 * k - 1) / (2 * n)) ^ (1 / (2 * n)) \u2260 0 := by\n  rcases n with (_ | _ | _ | _) <;> simp_all [Finset.prod_eq_zero_iff, Nat.div_eq_of_lt, Nat.div_eq_of_lt]\n  <;> norm_num\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (n : \u2115) (hn : 1 < n) : \u220f k in Finset.Icc 1 n, (1 + (2 * k - 1) / (2 * n)) ^ (1 / (2 * n)) \u2260 0 := by\n  have h1 : 1 < n := hn\n  have h2 : \u220f k in Finset.Icc 1 n, (1 + (2 * k - 1) / (2 * n)) ^ (1 / (2 * n)) \u2260 0 := by\n    apply Finset.prod_ne_zero_iff.mpr\n    intro k hk\n    simp_all\n  exact h2"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : 1 / (a * Real.sqrt (a * b + a * c)) + b * Real.sqrt (b * c + b * a) + c * Real.sqrt (c * a + c * b) + Real.sqrt ((a ^ 2 + b ^ 2 + c ^ 2) / (a * b + b * c + a * c)) \u2265 1 + 3 * Real.sqrt 2 := by",
  "new": ": Real.sqrt 2 \u2264 2 / \u221a (2 + 1) * \u221a (2 + 1):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2264 2 / \u221a (2 + 1) * \u221a (2 + 1):= by\n  norm_num [Real.sqrt_le_iff, mul_self_nonneg]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2264 2 / \u221a (2 + 1) * \u221a (2 + 1):= by\n  rw [show (2 / \u221a (2 + 1) * \u221a (2 + 1)) = 2 by\n    field_simp [Real.sqrt_ne_zero, add_pos_of_pos_of_nonneg, zero_lt_two,\n      Real.sqrt_nonneg, zero_le_two]\n    <;> ring\n  ]\n  exact Real.sqrt_le_iff.mpr (by norm_num)",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2264 2 / \u221a (2 + 1) * \u221a (2 + 1):= by\n  ring_nf\n  norm_num [Real.sqrt_le_iff]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : a^2 + b^2 + c^2 + 7 * a * b * c \u2265 2 * (a + b) * (b + c) * (c + a) := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c \u2264 1 \u2192 a^2 + b^2 + c^2 + 7 * a * b * c \u2265 2 * (a + b) * (b + c) * (c + a) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c \u2264 1 \u2192 a^2 + b^2 + c^2 + 7 * a * b * c \u2265 2 * (a + b) * (b + c) * (c + a)  := by\n  rintro a b c \u27e8h1, h2, h3, h4\u27e9\n  cases' le_total a b with hab hab <;>\n  cases' le_total b c with hbc hbc <;>\n  cases' le_total c a with hac hac <;>\n  simp only [hab, hbc, hac, mul_zero, zero_mul, mul_one, one_mul, add_zero, zero_add, add_assoc,\n    add_left_comm, add_comm] <;>\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a + b), mul_self_nonneg (b + c), mul_self_nonneg (c + a)]\n  <;>\n  linarith\n  <;>\n  linarith\n  <;>\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c \u2264 1 \u2192 a^2 + b^2 + c^2 + 7 * a * b * c \u2265 2 * (a + b) * (b + c) * (c + a)  := by\n  intro a b c h\n  cases' le_total a b with hab hab <;> cases' le_total b c with hbc hbc <;> cases' le_total c a with hac hac <;>\n    simp_all only [mul_assoc, mul_comm, mul_left_comm] <;>\n    nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;>\n    nlinarith\n  <;>\n    nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c \u2264 1 \u2192 a^2 + b^2 + c^2 + 7 * a * b * c \u2265 2 * (a + b) * (b + c) * (c + a)  := by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  cases' le_total a b with hab hab <;>\n  cases' le_total b c with hbc hbc <;>\n  cases' le_total c a with hac hac <;>\n  simp_all only [mul_assoc, mul_comm, mul_left_comm] <;>\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_nonneg (sub_nonneg.mpr ha) (sub_nonneg.mpr hb),\n    mul_nonneg (sub_nonneg.mpr hb) (sub_nonneg.mpr hc),\n    mul_nonneg (sub_nonneg.mpr hc) (sub_nonneg.mpr ha)]"
  ]
 },
 {
  "old": "(a b c : \u211d) : (a + b + c) ^ 3 / (8 * a * b * c) \u2265 (a ^ 2 + a * b + b * c) * (b ^ 2 + b * c + c * a) * (c ^ 2 + c * a + a * b) / ((a ^ 2 + b * c) * (b ^ 2 + c * a) * (c ^ 2 + a * b)) := by",
  "new": "(x y z : \u211d) : 2 * Real.sqrt (100 * x * y * z) \u2264 10 * (x ^ 2 + y ^ 2 + z ^ 2) \u2194 Real.sqrt (100 * x * y * z) \u2264 5 * (x ^ 2 + y ^ 2 + z ^ 2) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) : 2 * Real.sqrt (100 * x * y * z) \u2264 10 * (x ^ 2 + y ^ 2 + z ^ 2) \u2194  Real.sqrt (100 * x * y * z) \u2264 5 * (x ^ 2 + y ^ 2 + z ^ 2) := by\n  have h\u2080 : Real.sqrt (100 * x * y * z) \u2264 5 * (x ^ 2 + y ^ 2 + z ^ 2) \u2194 Real.sqrt (100 * x * y * z) \u2264 5 * (x ^ 2 + y ^ 2 + z ^ 2) := by\n    constructor <;>\n    intro h <;>\n    linarith\n  have h\u2081 : 2 * Real.sqrt (100 * x * y * z) \u2264 10 * (x ^ 2 + y ^ 2 + z ^ 2) \u2194\n    Real.sqrt (100 * x * y * z) \u2264 5 * (x ^ 2 + y ^ 2 + z ^ 2) := by\n    constructor <;>\n    intro h <;>\n    linarith\n  simp_all\n  <;>\n  ring_nf\n  <;>\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) : 2 * Real.sqrt (100 * x * y * z) \u2264 10 * (x ^ 2 + y ^ 2 + z ^ 2) \u2194  Real.sqrt (100 * x * y * z) \u2264 5 * (x ^ 2 + y ^ 2 + z ^ 2) := by\n  constructor <;> intro h\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z), Real.sqrt_nonneg (100 * x * y * z), h]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z), Real.sqrt_nonneg (100 * x * y * z)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) : 2 * Real.sqrt (100 * x * y * z) \u2264 10 * (x ^ 2 + y ^ 2 + z ^ 2) \u2194  Real.sqrt (100 * x * y * z) \u2264 5 * (x ^ 2 + y ^ 2 + z ^ 2) := by\n  constructor\n  intro h\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z), h]\n  intro h\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z), h]"
  ]
 },
 {
  "old": "(n : \u2115) (x : Fin n \u2192 \u211d) : 2 * (\u2211 k, (x k)^(1 / 2))^2 - \u2211 k, x k \u2265 n * (2 * n - 1) * (\u220f k, (x k)^(1 / n)) := by",
  "new": "(x y : \u211d) (n : \u2115) (hn : n \u2265 3) (h : x ^ 2 \u2264 y) : x \u2264 Real.sqrt (y * (n + 1)):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u211d) (n : \u2115) (hn : n \u2265 3) (h : x ^ 2 \u2264 y) :\n  x \u2264 Real.sqrt (y * (n + 1)):= by\n  refine' le_sqrt_of_sq_le _\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u211d) (n : \u2115) (hn : n \u2265 3) (h : x ^ 2 \u2264 y) :\n  x \u2264 Real.sqrt (y * (n + 1)):= by\n  have h\u2080 : 0 \u2264 Real.sqrt (y * (n + 1)) := Real.sqrt_nonneg _\n  have h\u2081 : Real.sqrt (y * (n + 1)) ^ 2 = y * (n + 1) := Real.sq_sqrt (by nlinarith)\n  nlinarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u211d) (n : \u2115) (hn : n \u2265 3) (h : x ^ 2 \u2264 y) :\n  x \u2264 Real.sqrt (y * (n + 1)):= by\n  have h2 : 0 \u2264 x ^ 2 := sq_nonneg x\n  have h3 : Real.sqrt (y * (n + 1)) \u2265 x := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u211d) (n : \u2115) (hn : n \u2265 3) (h : x ^ 2 \u2264 y) :\n  x \u2264 Real.sqrt (y * (n + 1)):= by\n  refine' le_sqrt_of_sq_le _\n  nlinarith [pow_two x, h]"
  ]
 },
 {
  "old": "{a b c : \u211d} : (a - b) ^ 4 + (b - c) ^ 4 + (c - a) ^ 4 + (a ^ 4 + b ^ 4 + c ^ 4 - a ^ 2 * b * c + b ^ 2 * c * a + c ^ 2 * a * b) \u2265 0 := by",
  "new": "(a b c : \u211d) : a ^ 2 * b ^ 2 * c ^ 2 - 4 * a * b * b * c * c * a \u2264 a ^ 2 * (b ^ 2 + c ^ 2) + b ^ 2 * (a ^ 2 + c ^ 2) + c ^ 2 * (a ^ 2 + b ^ 2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) :\n      a ^ 2 * b ^ 2 * c ^ 2 - 4 * a * b * b * c * c * a \u2264 \n       a ^ 2 * (b ^ 2 + c ^ 2) + b ^ 2 * (a ^ 2 + c ^ 2) + c ^ 2 * (a ^ 2 + b ^ 2):= by\n  simp only [add_assoc, add_left_comm, add_right_comm]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2),\n    sq_nonneg (c ^ 2 - a ^ 2), sq_nonneg (a * b), sq_nonneg (b * c), sq_nonneg (c * a)]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith"
  ]
 },
 {
  "old": "(x : \u211d) (hx : 0 \u2264 x) : x - Real.log (1 + x) \u2265 0 := by",
  "new": "(hx : 0 < x) : Real.log x \u2264 x - 1 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_le_sub_one_of_pos (hx : 0 < x) : Real.log x \u2264 x - 1 := by\n  have := Real.log_le_sub_one_of_pos hx\n  assumption\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_le_sub_one_of_pos (hx : 0 < x) : Real.log x \u2264 x - 1 := by\n  have := Real.log_le_sub_one_of_pos hx\n  linarith [Real.log_le_sub_one_of_pos hx]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_le_sub_one_of_pos (hx : 0 < x) : Real.log x \u2264 x - 1 := by\n  nlinarith [Real.log_le_sub_one_of_pos (by positivity : 0 < x)]\n  <;> nlinarith\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_le_sub_one_of_pos (hx : 0 < x) : Real.log x \u2264 x - 1 := by\n  have := Real.log_le_sub_one_of_pos hx\n  linarith [this]"
  ]
 },
 {
  "old": "(a b c : \u211d) (h1 : a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1) : 2 * (a * b + b * c + c * a) + (a + b * c) * (a * b + b * c + c * a - 4) \u2265 4 \u2227 3 * (a * b + b * c + c * a) + 2 * (a + b * c) * (a * b + b * c + c * a - 4) \u2265 5 := by",
  "new": "(a b c : \u211d) (h1 : a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1) : a * b + b * c + c * a \u2265 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (h1 : a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1) :\n       a * b + b * c + c * a \u2265 3:= by\n  have : 0 < a * b := mul_pos h1.1 h1.2.1\n  have : 0 < b * c := mul_pos h1.2.1 h1.2.2.1\n  have : 0 < c * a := mul_pos h1.2.2.1 h1.1\n  nlinarith [sq_nonneg (a * b + b * c + c * a),\n    sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n  <;> linarith\n  <;> assumption\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (h1 : a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1) :\n       a * b + b * c + c * a \u2265 3:= by\n  have h2 : 0 < a * b := mul_pos h1.1 h1.2.1\n  have h3 : 0 < b * c := mul_pos h1.2.1 h1.2.2.1\n  have h4 : 0 < c * a := mul_pos h1.2.2.1 h1.1\n  nlinarith [sq_nonneg (a * b - 1), sq_nonneg (b * c - 1), sq_nonneg (c * a - 1)]\n  <;> simp [sq, mul_comm, mul_left_comm, mul_assoc] at *\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (h1 : a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1) :\n       a * b + b * c + c * a \u2265 3:= by\n  cases' h1 with h1 h2\n  cases' h2 with h2 h3\n  cases' h3 with h3 h4\n  have h5 : 0 < a * b := mul_pos h1 h2\n  have h6 : 0 < b * c := mul_pos h2 h3\n  have h7 : 0 < c * a := mul_pos h3 h1\n  nlinarith [sq_nonneg (a * b - 1), sq_nonneg (b * c - 1), sq_nonneg (c * a - 1),\n    mul_self_nonneg (a * b + b * c + c * a - 3)]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (h1 : a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1) :\n       a * b + b * c + c * a \u2265 3:= by\n  have : 0 < a * b := mul_pos h1.1 h1.2.1\n  have : 0 < b * c := mul_pos h1.2.1 h1.2.2.1\n  have : 0 < c * a := mul_pos h1.2.2.1 h1.1\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), sq_nonneg (a * b - 1), sq_nonneg (b * c - 1), sq_nonneg (c * a - 1)]\n  <;> nlinarith\n  <;> nlinarith"
  ]
 },
 {
  "old": "(x y z : \u2115) (h : x * y = z ^ 2 + 1) : \u2203 a b c d : \u2124, x = a ^ 2 + b ^ 2 \u2227 y = c ^ 2 + d ^ 2 \u2227 z = a * c + b * d := by",
  "new": "{x y : \u2115} (h : x * y = x ^ 2 + y ^ 2) : x.Coprime y \u2228 x = y:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_pow_two {x y : \u2115} (h : x * y = x ^ 2 + y ^ 2) :\n     x.Coprime y \u2228 x = y:= by\n  rw [Nat.coprime_iff_gcd_eq_one]\n  rcases (Nat.eq_zero_or_pos x).symm with (h | h) <;> rcases (Nat.eq_zero_or_pos y).symm with (h' | h') <;>\n    simp_all [Nat.gcd_eq_right, Nat.gcd_eq_left, Nat.pow_succ, Nat.mul_comm, Nat.mul_left_comm,\n      Nat.mul_assoc]\n  all_goals\n    nlinarith\n  <;>\n  omega\n  <;>\n  linarith\n  <;>\n  omega\n  <;>\n  linarith\n  <;>\n  omega\n  <;>\n  linarith\n  <;>\n  omega\n  <;>\n  linarith\n  <;>\n  omega\n  <;>\n  linarith\n  <;>\n  omega\n  <;>\n  linarith\n  <;>\n  omega\n  <;>\n  linarith\n  <;>\n  omega\n  <;>\n  linarith\n  <;>\n  omega\n  <;>\n  linarith\n  <;>\n  omega\n  <;>\n  linarith\n  <;>\n  omega"
  ]
 },
 {
  "old": ": \u2200 m : \u2115, \u2203 n : \u2115, n > m \u2227 (\u00ac Nat.Prime ((2^(2^n))+3) ) := by",
  "new": "(a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b) := by\n  by_cases h : Nat.Coprime a b\n  exacts [Or.inl h, Or.inr h]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b) := by\n  by_cases h : Nat.Coprime a b\n  exact Or.inl h\n  exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b) := by\n  by_cases h : Nat.Coprime a b\n  left\n  exact h\n  right\n  exact h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b) := by\n  apply em\n  <;> simp\n  <;> decide\n  <;> simp\n  <;> decide\n  <;> simp\n  <;> decide\n  <;> simp\n  <;> decide\n  <;> simp\n  <;> decide"
  ]
 },
 {
  "old": "(n : \u2115) (a : \u2115 \u2192 \u211d) (h : \u2200 i, abs (a i) \u2264 1) : \u2211 i in Finset.range n, Real.sqrt (1 - (a i) ^ 2) \u2264 n * Real.sqrt (1 - (\u2211 i in Finset.range n, a i / n) ^ 2) := by",
  "new": "{x y : \u211d} (hx : x \u2265 0) (hy : y \u2265 0) : Real.sqrt (1 + x ^ 2) * Real.sqrt (1 + y ^ 2) \u2264 (x + 1) * (y + 1) + Real.sqrt ((x + y + 2) ^ 2) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {x y : \u211d} (hx : x \u2265 0) (hy : y \u2265 0) :\n   Real.sqrt (1 + x ^ 2) * Real.sqrt (1 + y ^ 2) \u2264 (x + 1) * (y + 1) + Real.sqrt ((x + y + 2) ^ 2) := by\n  have h\u2082 : 0 \u2264 x * y := mul_nonneg hx hy\n  have h\u2083 : Real.sqrt (1 + x ^ 2) * Real.sqrt (1 + y ^ 2) \u2264 (x + 1) * (y + 1) := by\n    nlinarith [sq_sqrt (add_nonneg zero_le_one (pow_two_nonneg x)),\n      sq_sqrt (add_nonneg zero_le_one (pow_two_nonneg y)),\n      mul_self_nonneg (x - y),\n      mul_self_nonneg (Real.sqrt (1 + x ^ 2) - Real.sqrt (1 + y ^ 2))]\n  have h\u2084 : (x + 1) * (y + 1) \u2264 (x + 1) * (y + 1) + Real.sqrt ((x + y + 2) ^ 2) := by\n    apply le_add_of_nonneg_right\n    apply Real.sqrt_nonneg\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {x y : \u211d} (hx : x \u2265 0) (hy : y \u2265 0) :\n   Real.sqrt (1 + x ^ 2) * Real.sqrt (1 + y ^ 2) \u2264 (x + 1) * (y + 1) + Real.sqrt ((x + y + 2) ^ 2) := by\n  have h\u2081 : 0 \u2264 x * y := mul_nonneg hx hy\n  have h\u2082 : Real.sqrt (1 + x ^ 2) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2083 : Real.sqrt (1 + y ^ 2) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2084 : Real.sqrt (1 + x ^ 2) * Real.sqrt (1 + y ^ 2) \u2264 (x + 1) * (y + 1) := by\n    nlinarith [sq_sqrt (add_nonneg zero_le_one (sq_nonneg x)),\n      sq_sqrt (add_nonneg zero_le_one (sq_nonneg y))]\n  have h\u2085 : (x + 1) * (y + 1) + Real.sqrt ((x + y + 2) ^ 2) \u2265\n    (x + 1) * (y + 1) := by\n    apply le_add_of_nonneg_right\n    apply Real.sqrt_nonneg\n  nlinarith\n  <;> norm_num\n  <;> assumption\n  <;> norm_num\n  <;> assumption\n  <;> norm_num\n  <;> assumption\n  <;> norm_num\n  <;> assumption\n  <;> norm_num\n  <;> assumption\n  <;> norm_num\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {x y : \u211d} (hx : x \u2265 0) (hy : y \u2265 0) :\n   Real.sqrt (1 + x ^ 2) * Real.sqrt (1 + y ^ 2) \u2264 (x + 1) * (y + 1) + Real.sqrt ((x + y + 2) ^ 2) := by\n  have h\u2081 : 0 \u2264 Real.sqrt (1 + x ^ 2) := Real.sqrt_nonneg _\n  have h\u2082 : 0 \u2264 Real.sqrt (1 + y ^ 2) := Real.sqrt_nonneg _\n  have h\u2083 : 0 \u2264 Real.sqrt ((x + y + 2) ^ 2) := Real.sqrt_nonneg _\n  have h\u2084 : 0 \u2264 x * y := mul_nonneg hx hy\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 1 + x ^ 2 from by positivity),\n    sq_sqrt (show (0 : \u211d) \u2264 1 + y ^ 2 from by positivity),\n    sq_sqrt (show (0 : \u211d) \u2264 (x + y + 2) ^ 2 from by positivity),\n    sq_nonneg (x - y),\n    sq_nonneg (Real.sqrt (1 + x ^ 2) - Real.sqrt (1 + y ^ 2))]"
  ]
 },
 {
  "old": "(k : \u2115) (h\u2080 : 2 \u2264 k) : (1 + 1 / k : \u211d) ^ k \u2265 2 := by",
  "new": "(i : \u2115) (hi : \u2200 k, 0 < k \u2192 1 < k \u2192 k \u2223 i \u2192 k = 1 \u2228 k = i) : \u2200 k : \u2115, 1 < k \u2192 k \u2223 i \u2192 k = i:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : \u2200 k, 0 < k \u2192 1 < k \u2192 k \u2223 i \u2192 k = 1 \u2228 k = i) : \u2200 k : \u2115, 1 < k \u2192 k \u2223 i \u2192 k = i:= by\n  intro k hk hk'\n  have h := hi k (by linarith) (by linarith) hk'\n  aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : \u2200 k, 0 < k \u2192 1 < k \u2192 k \u2223 i \u2192 k = 1 \u2228 k = i) : \u2200 k : \u2115, 1 < k \u2192 k \u2223 i \u2192 k = i:= by\n  intro k hk hki\n  have h := hi k (by omega) hk hki\n  aesop\n  <;> aesop"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (Real.sqrt 3 / 3) \u2264 Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) / (a + b + c) \u2227 Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) / (a + b + c) < Real.sqrt 3 := by",
  "new": ": Real.sqrt 3 \u2264 2 * Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) \u2194 a ^ 2 + b ^ 2 + c ^ 2 \u2265 3 / 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 3 \u2264 2 * Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) \u2194 a ^ 2 + b ^ 2 + c ^ 2 \u2265 3 / 4:= by\n  constructor\n  \u00b7 intro h\n    have h\u2081 : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg 3\n    have h\u2082 : Real.sqrt 3 ^ 2 = 3 := Real.sq_sqrt (by norm_num)\n    nlinarith [sq_sqrt (show 0 \u2264 a ^ 2 + b ^ 2 + c ^ 2 by positivity),\n      Real.sq_sqrt (show 0 \u2264 2 * Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) by positivity)]\n  \u00b7 intro h\n    have h\u2081 : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg 3\n    have h\u2082 : Real.sqrt 3 ^ 2 = 3 := Real.sq_sqrt (by norm_num)\n    apply le_of_pow_le_pow_left two_ne_zero (by positivity)\n    nlinarith [sq_sqrt (show 0 \u2264 a ^ 2 + b ^ 2 + c ^ 2 by positivity),\n      Real.sq_sqrt (show 0 \u2264 2 * Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) by positivity)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 3 \u2264 2 * Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) \u2194 a ^ 2 + b ^ 2 + c ^ 2 \u2265 3 / 4:= by\n  constructor\n  intro h\n  have h\u2080 : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg _\n  have h\u2081 : 0 \u2264 Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) := Real.sqrt_nonneg _\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 by norm_num),\n    sq_sqrt (show (0 : \u211d) \u2264 a ^ 2 + b ^ 2 + c ^ 2 by positivity),\n    sq_nonneg (a ^ 2 + b ^ 2 + c ^ 2 - 3 / 4)]\n  intro h\n  have h\u2080 : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg _\n  have h\u2081 : 0 \u2264 Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) := Real.sqrt_nonneg _\n  have h\u2082 : 0 \u2264 Real.sqrt 3 * Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) := mul_nonneg h\u2080 h\u2081\n  apply le_of_sub_nonneg\n  rw [sub_nonneg]\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 by norm_num),\n    sq_sqrt (show (0 : \u211d) \u2264 a ^ 2 + b ^ 2 + c ^ 2 by positivity),\n    sq_nonneg (a ^ 2 + b ^ 2 + c ^ 2 - 3 / 4)]\n  <;> linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 3 \u2264 2 * Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) \u2194 a ^ 2 + b ^ 2 + c ^ 2 \u2265 3 / 4:= by\n  constructor\n  intro h\n  have : 0 \u2264 Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) := Real.sqrt_nonneg _\n  have : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg _\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 by norm_num),\n    sq_sqrt (show (0 : \u211d) \u2264 a ^ 2 + b ^ 2 + c ^ 2 by positivity),\n    sq_nonneg (a ^ 2 + b ^ 2 + c ^ 2 - 3 / 4)]\n  intro h\n  have h\u2081 : Real.sqrt 3 \u2264 2 * Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) := by\n    rw [Real.sqrt_le_left (by positivity)]\n    nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 by norm_num),\n      sq_sqrt (show (0 : \u211d) \u2264 a ^ 2 + b ^ 2 + c ^ 2 by positivity)]\n  linarith"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 1) : (x / (x * y + 1) + y / (y * z + 1) + z / (z * x + 1)) \u2265 36 * x * y * z / (13 * x * y * z + 1) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 1) : (x * y) * (y * z) * z * x \u2264 1 / 27 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 1) :\n       (x * y) * (y * z) * z * x \u2264 1 / 27 := by\n  have h\u2081 : 0 < y := by positivity\n  have h\u2082 : 0 < z := by positivity\n  have h\u2083 : 0 < x * y := by positivity\n  have h\u2084 : 0 < y * z := by positivity\n  have h\u2085 : 0 < z * x := by positivity\n  have h\u2086 : 0 < x * y * z := by positivity\n  have h\u2087 : 0 < y * z * x := by positivity\n  have h\u2088 : 0 < x * y * z * x := by positivity\n  have h\u2089 : 0 < y * z * x * y := by positivity\n  have h\u2081\u2080 : 0 < z * x * y * z := by positivity\n  have h\u2081\u2081 : 0 < x * y * z * x * y := by positivity\n  have h\u2081\u2082 : 0 < z * x * y * z * x := by positivity\n  have h\u2081\u2083 : 0 < y * z * x * y * z := by positivity\n  have h\u2081\u2084 : 0 < x * y * z * x * y * z := by positivity\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  <;> linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 1) :\n       (x * y) * (y * z) * z * x \u2264 1 / 27 := by\n  have h1 : 0 < x * y := by positivity\n  have h2 : 0 < y * z := by positivity\n  have h3 : 0 < z * x := by positivity\n  have h4 : 0 < x * y * z := by positivity\n  have h5 : 0 < x * y * z * x := by positivity\n  have h6 : 0 < y * z * (x * y) := by positivity\n  have h7 : 0 < z * x * (y * z) := by positivity\n  have h8 : 0 < x * y * z * x * y := by positivity\n  have h9 : 0 < y * z * (x * y * z) := by positivity\n  have h10 : 0 < z * x * (y * z * x) := by positivity\n  nlinarith [sq_nonneg (x - 1 / 3), sq_nonneg (y - 1 / 3), sq_nonneg (z - 1 / 3)]\n  <;> linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 1) :\n       (x * y) * (y * z) * z * x \u2264 1 / 27 := by\n  have h\u2080 : 0 < x * y := by positivity\n  have h\u2081 : 0 < y * z := by positivity\n  have h\u2082 : 0 < z * x := by positivity\n  have h\u2083 : 0 < x * y * z := by positivity\n  have h\u2084 : 0 < x * y * z * x := by positivity\n  have h\u2085 : 0 < y * z * x * y := by positivity\n  have h\u2086 : 0 < x * y * z * x * y := by positivity\n  have h\u2087 : 0 < y * z * x * y * z := by positivity\n  nlinarith [mul_self_nonneg (x - y), mul_self_nonneg (y - z),\n    mul_self_nonneg (z - x)]\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) : (a + b) * (b + c) * (c + a) \u2265 (8 / 9) * (a + b + c) * (a * b + b * c + c * a) := by",
  "new": ": (x^2+10) * (y^2+10) \u2265 20 * x * y + 50:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 :  (x^2+10) * (y^2+10) \u2265 20 * x * y + 50:= by\n  cases' le_total x y with h h <;>\n    simp only [mul_add, mul_comm, mul_left_comm, mul_assoc, add_assoc, add_left_comm, add_comm] <;>\n      nlinarith [sq_nonneg (x - y), sq_nonneg (x - 5), sq_nonneg (y - 5), mul_self_nonneg (x * y - 5)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 :  (x^2+10) * (y^2+10) \u2265 20 * x * y + 50:= by\n  cases' le_total x y with h h <;> simp [mul_comm, mul_left_comm, mul_assoc, h] <;>\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - 5), sq_nonneg (y - 5)]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 :  (x^2+10) * (y^2+10) \u2265 20 * x * y + 50:= by\n  cases' le_total x y with h h <;>\n  cases' le_total 0 (x - y) with h\u2082 h\u2082 <;>\n  cases' le_total 0 (x * y) with h\u2083 h\u2083 <;>\n  simp [sq, mul_add, add_mul, mul_comm, mul_left_comm, mul_assoc, h, h\u2082, h\u2083]\n  <;>\n  nlinarith [mul_self_nonneg (x - y), mul_self_nonneg (x * y - 5)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 :  (x^2+10) * (y^2+10) \u2265 20 * x * y + 50:= by\n  cases' le_total x y with h h <;>\n  cases' le_total (x - y) 0 with h\u2082 h\u2082 <;>\n  cases' le_total (x * y) 0 with h\u2083 h\u2083 <;>\n  nlinarith [mul_self_nonneg (x - y), mul_self_nonneg (x + y), mul_self_nonneg (x * y - 5)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (h : a \u2265 b \u2227 b \u2265 c) : a^2 \u2265 b^2 \u2227 b^2 \u2265 c^2 := by",
  "new": "(a b : \u2115) (h : a ^ 2 + b ^ 2 \u2265 1) : Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (h : a ^ 2 + b ^ 2 \u2265 1) :\n     Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b := by\n  by_cases h1 : a.Coprime b\n  exacts [Or.inl h1, Or.inr (by simp_all)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (h : a ^ 2 + b ^ 2 \u2265 1) :\n     Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b := by\n  by_cases h\u2081 : Nat.Coprime a b <;> simp_all\n  <;> omega\n  <;> try simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (h : a ^ 2 + b ^ 2 \u2265 1) :\n     Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b := by\n  by_cases h1 : a.Coprime b\n  exact Or.inl h1\n  exact Or.inr (by simpa using h1)\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (h : a ^ 2 + b ^ 2 \u2265 1) :\n     Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b := by\n  by_cases h\u2080 : a.Coprime b\n  exacts [Or.inl h\u2080, Or.inr h\u2080]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : (1 / a ^ 3 * (b + c) + 1 / b ^ 3 * (a + c) + 1 / c ^ 3 * (a + b)) > 1 / 2 * (1 / a + 1 / b + 1 / c) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) : x^2 / (x + y)^2 + y^2 / (y + z)^2 + z^2 / (z + x)^2 \u2265 2 * (x * y / (x * y + y * z + z * x)) - 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) : \n    x^2 / (x + y)^2 + y^2 / (y + z)^2 + z^2 / (z + x)^2 \u2265 2 * (x * y / (x * y + y * z + z * x)) - 1:= by\n  simp only [sq]\n  apply le_of_sub_nonneg\n  field_simp [hx, hy, hz, habc]\n  ring_nf\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) : \n    x^2 / (x + y)^2 + y^2 / (y + z)^2 + z^2 / (z + x)^2 \u2265 2 * (x * y / (x * y + y * z + z * x)) - 1:= by\n  rw [add_comm]\n  apply le_of_sub_nonneg\n  field_simp\n  ring_nf\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) : \n    x^2 / (x + y)^2 + y^2 / (y + z)^2 + z^2 / (z + x)^2 \u2265 2 * (x * y / (x * y + y * z + z * x)) - 1:= by\n  apply le_of_sub_nonneg\n  field_simp [mul_assoc]\n  ring_nf\n  positivity"
  ]
 },
 {
  "old": "(a b c : \u211d) : (a^4 / b^2 + b^4 / c^2 + c^4 / a^2) * (a^2 + b^2 + c^2) \u2265 (a^3 / b + b^3 / c + c^3 / a)^2 := by",
  "new": ": \u2200 x : \u211d, x > 0 \u2192 x ^ 2 * (1 / 3) ^ 2 \u2264 x ^ 4 / x ^ 2 + (1 / 3) ^ 4 / (1 / 3) ^ 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 2 * (1 / 3) ^ 2 \u2264 x ^ 4 / x ^ 2 + (1 / 3) ^ 4 / (1 / 3) ^ 2:= by\n  intro x hx\n  have h\u2081 : 0 < x ^ 2 := by positivity\n  have h\u2082 : 0 < x ^ 4 := by positivity\n  field_simp [h\u2081, h\u2082]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (x ^ 2 - 1 / 3)]\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 2 * (1 / 3) ^ 2 \u2264 x ^ 4 / x ^ 2 + (1 / 3) ^ 4 / (1 / 3) ^ 2:= by\n  intro x hx\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x ^ 2 - 1 / 3 ^ 2), sq_nonneg (x ^ 3), hx]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 2 * (1 / 3) ^ 2 \u2264 x ^ 4 / x ^ 2 + (1 / 3) ^ 4 / (1 / 3) ^ 2:= by\n  rintro x (hx : 0 < x)\n  have h1 : 0 < x ^ 2 := by positivity\n  have h2 : 0 < x ^ 4 := by positivity\n  field_simp [h1, h2]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x ^ 2 - 1 / 9), sq_nonneg (x ^ 4 - x ^ 2 / 9)]\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : (1 / Real.sqrt ((a + 2 * b) * (b + 2 * a))) + (1 / Real.sqrt ((b + 2 * c) * (c + 2 * b))) + (1 / Real.sqrt ((a + 2 * c) * (c + 2 * a))) \u2265 3 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 1) : (x + y) * (y + z) * (z + x) \u2265 2 * (x * y) * (y * z) * (z * x):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 1) :\n       (x + y) * (y + z) * (z + x) \u2265 2 * (x * y) * (y * z) * (z * x):= by\n  have : (x + y + z) ^ 2 = 1 := by simp [h]\n  nlinarith [mul_pos hx hy, mul_pos hy hz, mul_pos hz hx,\n    mul_pos (sq_pos_of_pos hx) (sq_pos_of_pos hy),\n    mul_pos (sq_pos_of_pos hy) (sq_pos_of_pos hz),\n    mul_pos (sq_pos_of_pos hz) (sq_pos_of_pos hx)]"
  ]
 },
 {
  "old": "(x : \u211d) (hx : 0 \u2264 x \u2227 x \u2264 \u03c0/2) : sin (sin x) \u2264 sin x := by",
  "new": "(x : \u211d) : sin x \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_le_one (x : \u211d) : sin x \u2264 1:= by\n  have h\u2080 : |sin x| \u2264 1 := abs_sin_le_one x\n  cases' abs_cases (sin x) with h\u2081 h\u2081 <;>\n    nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_le_one (x : \u211d) : sin x \u2264 1:= by\n  nlinarith [sq_nonneg (sin x - 1), sin_sq_add_cos_sq x]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_le_one (x : \u211d) : sin x \u2264 1:= by\n  have h\u2080 := sin_sq_add_cos_sq x\n  have h\u2081 := sq_nonneg (cos x - 1)\n  have h\u2082 := sq_nonneg (cos x + 1)\n  nlinarith"
  ]
 },
 {
  "old": "{f : \u2115 \u2192 \u2115} (hf: \u2200 p : \u2115, Nat.Prime p \u2192 f p = p): \u2200 n : \u2115, f n = n := by",
  "new": "(n : \u2115) : \u2200 p \u2208 n.factors, p.Prime:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem prime_test_number (n : \u2115) : \u2200 p \u2208 n.factors, p.Prime:= by\n  intro p hp\n  have : Nat.Prime p := by\n    apply Nat.prime_of_mem_factors hp\n  assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem prime_test_number (n : \u2115) : \u2200 p \u2208 n.factors, p.Prime:= by\n  intros\n  apply Nat.prime_of_mem_factors\n  assumption"
  ]
 },
 {
  "old": "(a b : \u2124) (h : Nat.gcd a.natAbs b.natAbs = 1) : \u2203 x y : \u2124, a*x + b*y = 1 := by",
  "new": "(f : \u2115 \u2192 \u2124) (hf : \u2200 n, f n = n) : (\u2200 m n, m < n \u2192 f m \u2260 f n) \u2194 Nat.Coprime (Nat.gcd 1 0) (Nat.gcd 0 1):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_iff_exists_injective_int (f : \u2115 \u2192 \u2124) (hf : \u2200 n, f n = n) :\n    (\u2200 m n, m < n \u2192 f m \u2260 f n) \u2194 Nat.Coprime (Nat.gcd 1 0) (Nat.gcd 0 1):= by\n  simp [hf, Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm, Nat.gcd_mul_left,\n    Nat.gcd_mul_left, Nat.gcd_one_left]\n  <;> norm_num\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_iff_exists_injective_int (f : \u2115 \u2192 \u2124) (hf : \u2200 n, f n = n) :\n    (\u2200 m n, m < n \u2192 f m \u2260 f n) \u2194 Nat.Coprime (Nat.gcd 1 0) (Nat.gcd 0 1):= by\n  simp only [hf]\n  simp [Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm]\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_iff_exists_injective_int (f : \u2115 \u2192 \u2124) (hf : \u2200 n, f n = n) :\n    (\u2200 m n, m < n \u2192 f m \u2260 f n) \u2194 Nat.Coprime (Nat.gcd 1 0) (Nat.gcd 0 1):= by\n  constructor\n  intro h\n  simp [Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm]\n  intro h\n  intro m n hmn\n  simp_all [Nat.gcd_eq_left, Nat.gcd_eq_right, Nat.coprime_iff_gcd_eq_one]\n  <;> contrapose! hmn <;> omega\n  <;> simp_all\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_iff_exists_injective_int (f : \u2115 \u2192 \u2124) (hf : \u2200 n, f n = n) :\n    (\u2200 m n, m < n \u2192 f m \u2260 f n) \u2194 Nat.Coprime (Nat.gcd 1 0) (Nat.gcd 0 1):= by\n  simp only [hf]\n  constructor <;> simp_all [Nat.coprime_iff_gcd_eq_one, Nat.gcd_eq_gcd_ab]\n  <;> intro m n h\n  <;> contrapose! h\n  <;> simp_all\n  <;> omega\n  <;> omega\n  <;> omega"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) : (1 / a + 1) * (1 / b + 1 / 2) * (1 / c + 1 / 2) \u2265 (3 * (33 + 7 * Real.sqrt 21)) / 4 := by",
  "new": ": Real.sqrt 2 \u2264 2 / Real.sqrt 2 + Real.sqrt 21:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2264 2 / Real.sqrt 2 + Real.sqrt 21:= by\n  have h\u2082 : 0 < Real.sqrt 21 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2083 : 0 < Real.sqrt 2 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2084 : 0 < 2 / Real.sqrt 2 := by positivity\n  have h\u2085 : 0 < Real.sqrt 2 * (2 / Real.sqrt 2) := by positivity\n  have h\u2086 : Real.sqrt 2 * (2 / Real.sqrt 2) = 2 := by\n    field_simp\n  nlinarith [sq_sqrt (show 0 \u2264 21 from by norm_num), sq_sqrt (show 0 \u2264 2 from by norm_num)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2264 2 / Real.sqrt 2 + Real.sqrt 21:= by\n  rw [add_comm]\n  rw [Real.sqrt_le_left (by positivity)]\n  field_simp [Real.sqrt_eq_iff_mul_self_eq]\n  ring_nf\n  nlinarith [Real.sqrt_nonneg 21, Real.sqrt_nonneg 2, Real.mul_self_sqrt (show 0 \u2264 21 from by linarith)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2264 2 / Real.sqrt 2 + Real.sqrt 21:= by\n  rw [add_comm]\n  apply le_of_sub_nonneg\n  field_simp [Real.sqrt_eq_iff_sq_eq]\n  ring_nf\n  norm_num\n  apply le_of_sub_nonneg\n  field_simp [Real.sqrt_eq_iff_sq_eq]\n  ring_nf\n  norm_num\n  apply le_of_sub_nonneg\n  field_simp [Real.sqrt_eq_iff_sq_eq]\n  ring_nf\n  norm_num\n  positivity\n  <;> norm_num\n  <;> field_simp\n  <;> ring_nf\n  <;> norm_num\n  <;> positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2264 2 / Real.sqrt 2 + Real.sqrt 21:= by\n  have h\u2080 : 0 \u2264 Real.sqrt 2 := Real.sqrt_nonneg 2\n  have h\u2081 : 0 \u2264 Real.sqrt 21 := Real.sqrt_nonneg 21\n  have h\u2082 : 0 \u2264 2 / Real.sqrt 2 := by positivity\n  have h\u2083 : 0 \u2264 2 / Real.sqrt 21 := by positivity\n  have h\u2084 : Real.sqrt 2 * Real.sqrt 2 = 2 := Real.mul_self_sqrt (by positivity)\n  have h\u2085 : Real.sqrt 21 * Real.sqrt 21 = 21 := Real.mul_self_sqrt (by positivity)\n  have h\u2086 : Real.sqrt 2 \u2264 2 / Real.sqrt 2 + Real.sqrt 21 := by\n    nlinarith [sq_nonneg (Real.sqrt 2 - 2 / Real.sqrt 2),\n      sq_nonneg (Real.sqrt 21 - 2 / Real.sqrt 21)]\n  linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = a^3 + b^3 + c^3) : a * b * c \u2264 1 := by",
  "new": "(a b : \u2115) (hab : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (hab : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  cases' a with a <;> cases' b with b\n  all_goals simp_all [Nat.mul_eq_zero, Nat.succ_ne_zero]\n  all_goals aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (hab : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  cases' a with a <;> cases' b with b\n  all_goals simp_all\n  all_goals norm_num at hab\n  all_goals omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (hab : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  have : a \u2260 0 := by\n    rintro rfl\n    simp_all\n  have : b \u2260 0 := by\n    rintro rfl\n    simp_all\n  simp_all [Nat.coprime_iff_gcd_eq_one, Nat.gcd_eq_right]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (hab : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  have : a \u2260 0 := by\n    intro con\n    simp_all\n  have : b \u2260 0 := by\n    intro con\n    simp_all\n  rw [Nat.coprime_iff_gcd_eq_one]\n  rcases Nat.eq_zero_or_pos a with (h | h) <;> rcases Nat.eq_zero_or_pos b with (h' | h') <;>\n    simp_all [Nat.gcd_mul_left, Nat.gcd_mul_right]\n  all_goals omega"
  ]
 },
 {
  "old": "(a b : \u2115) (hb : b > 0) : \u2211 k in Finset.Ico 1 b, ((a * k) / b) = ((a - 1) * (b - 1) + Nat.gcd a b - 1) / 2 := by",
  "new": "(a b : \u2115) (hab : Nat.Coprime a b) : a / Nat.gcd a b = a:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_cancel_left_div_gcd (a b : \u2115) (hab : Nat.Coprime a b) : a / Nat.gcd a b = a:= by\n  rcases Nat.eq_zero_or_pos a with (rfl | ha)\n  all_goals simp [Nat.Coprime, Nat.gcd_eq_right, Nat.gcd_eq_left, *]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_cancel_left_div_gcd (a b : \u2115) (hab : Nat.Coprime a b) : a / Nat.gcd a b = a:= by\n  have : Nat.gcd a b \u2223 a := Nat.gcd_dvd_left a b\n  have : Nat.gcd a b \u2223 b := Nat.gcd_dvd_right a b\n  simp_all [Nat.coprime_iff_gcd_eq_one, Nat.div_mul_cancel]"
  ]
 },
 {
  "old": "(x : \u211d) (hx : x = 20) : Real.sin x * Real.sin (x + 20) * Real.sin (x + 40) * Real.sin (x + 60) = (Real.sqrt 9 / 2 ^ 4) := by",
  "new": "(x : \u211d) (hx : 0 < x) (h : x < Real.pi) : Real.sqrt (1 - x ^ 2) < Real.pi:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210 (x : \u211d) (hx : 0 < x) (h : x < Real.pi) : \n    Real.sqrt (1 - x ^ 2) < Real.pi:= by\n  refine' (Real.sqrt_lt' _).mpr _\n  all_goals\n    nlinarith [Real.pi_pos, Real.two_le_pi]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210 (x : \u211d) (hx : 0 < x) (h : x < Real.pi) : \n    Real.sqrt (1 - x ^ 2) < Real.pi:= by\n  have h2 : 0 < Real.pi := by linarith [Real.pi_pos]\n  have h3 : 0 \u2264 Real.pi - x := by linarith [Real.pi_pos]\n  apply (Real.sqrt_lt' (by positivity)).mpr\n  nlinarith [Real.pi_pos, Real.two_le_pi]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 3) : 3 \u2264 \u221a(a^2 + b * c) + \u221a(b^2 + c * a) + \u221a(c^2 + a * b) \u2227 \u221a(a^2 + b * c) + \u221a(b^2 + c * a) + \u221a(c^2 + a * b) \u2264 3 * \u221a2 := by",
  "new": "(x y : \u2115) (h : x ^ 2 + y ^ 2 \u2264 2 * x * y + 1) : Nat.Coprime x y \u2228 \u00acNat.Coprime x y := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2264 2 * x * y + 1) :\n    Nat.Coprime x y \u2228 \u00acNat.Coprime x y := by\n  by_cases hx : Nat.Coprime x y\n  exacts [Or.inl hx, Or.inr (by simp [hx])]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2264 2 * x * y + 1) :\n    Nat.Coprime x y \u2228 \u00acNat.Coprime x y := by apply em\n  <;> tauto\n  <;> apply not_coprime_of_dvd_of_dvd <;> norm_num\n  <;> apply Nat.le_of_dvd <;> norm_num <;> omega\n  <;> apply Nat.le_of_dvd <;> norm_num <;> omega\n  <;> apply Nat.le_of_dvd <;> norm_num <;> omega\n  <;> apply Nat.le_of_dvd <;> norm_num <;> omega\n  <;> apply Nat.le_of_dvd <;> norm_num <;> omega\n  <;> apply Nat.le_of_dvd <;> norm_num <;> omega\n  <;> apply Nat.le_of_dvd <;> norm_num <;> omega\n  <;> apply Nat.le_of_dvd <;> norm_num <;> omega\n  <;> apply Nat.le_of_dvd <;> norm_num <;> omega\n  <;> apply Nat.le_of_dvd <;> norm_num <;> omega\n  <;> apply Nat.le_of_dvd <;> norm_num <;> omega\n  <;> apply Nat.le_of_dvd <;> norm_num <;> omega\n  <;> apply Nat.le_of_dvd <;> norm_num <;> omega\n  <;> apply Nat.le_of_dvd <;> norm_num <;> omega\n  <;> apply Nat.le_of_dvd <;> norm_num <;> omega\n  <;> apply Nat.le_of_dvd <;> norm_num <;> omega\n  <;> apply Nat.le_of_dvd <;> norm_num <;> omega\n  <;> apply Nat.le_of_dvd <;> norm_num <;> omega\n  <;> apply Nat.le_of_dvd <;> norm_num <;> omega\n  <;> apply Nat.le_of_dvd <;> norm_num <;> omega\n  <;> apply Nat.le_of_dvd <;> norm_num <;> omega\n  <;> apply Nat.le_of_dvd <;> norm_num <;> omega\n  <;> apply Nat.le_of_dvd <;> norm_num <;> omega\n  <;> apply Nat.le_of_dvd <;> norm_num <;> omega\n  <;> apply Nat.le_of_dvd <;> norm_num <;> omega\n  <;> apply Nat.le_of_dvd <;> norm_num <;> omega\n  <;> apply Nat.le_of_dvd <;> norm_num <;> omega\n  <;> apply Nat.le_of_dvd <;> norm_num <;> omega\n  <;> apply Nat.le_of_dvd <;> norm_num <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2264 2 * x * y + 1) :\n    Nat.Coprime x y \u2228 \u00acNat.Coprime x y := by\n  by_cases h0 : Nat.Coprime x y\n  exact Or.inl h0\n  exact Or.inr h0\n  <;> try norm_num\n  <;> try ring_nf\n  <;> try nlinarith\n  <;> try ring_nf at h\n  <;> try nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) : a / b + b / c + c / a + (4 * Real.sqrt 2 - 3) * (a * b + b * c + c * a) / (a ^ 2 + b ^ 2 + c ^ 2) \u2265 4 * Real.sqrt 2 := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a / b + b / c + c / a + (4 * Real.sqrt 2 - 3) * (a * b + b * c + c * a) / (a ^ 2 + b ^ 2 + c ^ 2) \u2265 4 * Real.sqrt 2 / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n  a / b + b / c + c / a + (4 * Real.sqrt 2 - 3) * (a * b + b * c + c * a) / (a ^ 2 + b ^ 2 + c ^ 2) \u2265 4 * Real.sqrt 2  / 2:= by\n  have h1 : a / b + b / c + c / a \u2265 3 := by\n    have h1_1 : 0 < a * b := by positivity\n    have h1_2 : 0 < b * c := by positivity\n    have h1_3 : 0 < c * a := by positivity\n    field_simp [h1_1, h1_2, h1_3]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  have h2 : (4 * Real.sqrt 2 - 3) * (a * b + b * c + c * a) / (a ^ 2 + b ^ 2 + c ^ 2) \u2265 0 := by\n    apply div_nonneg\n    \u00b7 apply mul_nonneg\n      \u00b7 nlinarith [Real.sqrt_nonneg 2, Real.sq_sqrt (show 0 \u2264 2 by norm_num)]\n      \u00b7 positivity\n    \u00b7 positivity\n  nlinarith [sq_sqrt (show 0 \u2264 2 by norm_num), Real.sqrt_nonneg 2]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n  a / b + b / c + c / a + (4 * Real.sqrt 2 - 3) * (a * b + b * c + c * a) / (a ^ 2 + b ^ 2 + c ^ 2) \u2265 4 * Real.sqrt 2  / 2:= by\n  have h1 : 0 < a * b := mul_pos ha hb\n  have h2 : 0 < b * c := mul_pos hb hc\n  have h3 : 0 < c * a := mul_pos hc ha\n  have h4 : 0 < a ^ 2 + b ^ 2 + c ^ 2 := by positivity\n  have h5 : 0 < a * b + b * c + c * a := by positivity\n  have h6 : 0 < 4 * Real.sqrt 2 - 3 := by\n    nlinarith [Real.sqrt_nonneg 2, Real.mul_self_sqrt (show 0 \u2264 2 by norm_num)]\n  have h7 : 0 < a * b * c := by positivity\n  have h8 : 0 < a * b * c * (4 * Real.sqrt 2 - 3) := by positivity\n  have h9 : (4 * Real.sqrt 2 - 3) * (a * b + b * c + c * a) / (a ^ 2 + b ^ 2 + c ^ 2) \u2265 0 := by\n    apply div_nonneg\n    \u00b7 nlinarith [Real.sqrt_nonneg 2, Real.mul_self_sqrt (show 0 \u2264 2 by norm_num)]\n    \u00b7 positivity\n  have h10 : a / b + b / c + c / a \u2265 3 := by\n    rw [add_comm]\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  nlinarith [Real.sqrt_nonneg 2, Real.mul_self_sqrt (show 0 \u2264 2 by norm_num)]\n  <;> linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z + x * y * z = 4) : (x + y) * (y + z) * (z + x) / (2 * x * y * z) \u2265 (4 / 9) * (x + y + z) * (1 / x + 1 / y + 1 / z) \u2227 (4 / 9) * (x + y + z) * (1 / x + 1 / y + 1 / z) \u2265 (4 / 9) * (x + y + z) ^ 2 \u2227 (4 / 9) * (x + y + z) ^ 2 \u2265 (4 / 3) * (x + y + z) \u2227 (4 / 3) * (x + y + z) \u2265 4 := by",
  "new": ": x * y * z \u2265 1 \u2227 (x + y + z + x * y * z = 4) \u2192 (x + y) * (y + z) * (z + x) / (2 * x * y * z) \u2265 (4 / 9) * (x + y + z) * (1 / x + 1 / y + 1 / z):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    x * y * z \u2265 1 \u2227 (x + y + z + x * y * z = 4) \u2192\n    (x + y) * (y + z) * (z + x) / (2 * x * y * z) \u2265 (4 / 9) * (x + y + z) * (1 / x + 1 / y + 1 / z):= by\n  intro h\n  cases' le_or_lt 0 (x * y) with h\u2080 h\u2080 <;>\n  cases' le_or_lt 0 (y * z) with h\u2081 h\u2081 <;>\n  cases' le_or_lt 0 (z * x) with h\u2082 h\u2082 <;>\n  simp_all [mul_assoc] <;>\n  ring_nf <;>\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    x * y * z \u2265 1 \u2227 (x + y + z + x * y * z = 4) \u2192\n    (x + y) * (y + z) * (z + x) / (2 * x * y * z) \u2265 (4 / 9) * (x + y + z) * (1 / x + 1 / y + 1 / z):= by\n  aesop (add norm [mul_assoc])"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : 3 * (a * b + b * c + c * a) * (1 + 52 * a * b * c) \u2265 79 * a * b * c := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : 4 * (a * b + b * c + c * a) ^ 2 \u2265 4 * a * b * (a + b) * (b + c) * (c + a):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) :  4 * (a * b + b * c + c * a) ^ 2 \u2265 4 * a * b * (a + b) * (b + c) * (c + a):= by\n  have : (a + b + c) ^ 2 = 1 := by simp [habc]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le,\n    mul_nonneg (sq_nonneg a) (sq_nonneg b), mul_nonneg (sq_nonneg b) (sq_nonneg c), mul_nonneg (sq_nonneg c) (sq_nonneg a)]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) :  4 * (a * b + b * c + c * a) ^ 2 \u2265 4 * a * b * (a + b) * (b + c) * (c + a):= by\n  have : (a + b + c) ^ 2 = 1 := by simp [habc]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_nonneg ha.le hb.le,\n    mul_nonneg hb.le hc.le, mul_nonneg ha.le hc.le, mul_nonneg (sq_nonneg (a * b)) (sq_nonneg (b * c)),\n    mul_nonneg (sq_nonneg (b * c)) (sq_nonneg (c * a)), mul_nonneg (sq_nonneg (c * a)) (sq_nonneg (a * b))]\n  <;> nlinarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) :  4 * (a * b + b * c + c * a) ^ 2 \u2265 4 * a * b * (a + b) * (b + c) * (c + a):= by\n  have : 0 < a * b := by positivity\n  have : 0 < b * c := by positivity\n  have : 0 < c * a := by positivity\n  have : 0 < (a * b) * (b * c) := by positivity\n  have : 0 < (b * c) * (c * a) := by positivity\n  have : 0 < (c * a) * (a * b) := by positivity\n  nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) :  4 * (a * b + b * c + c * a) ^ 2 \u2265 4 * a * b * (a + b) * (b + c) * (c + a):= by\n  have h\u2081 : 0 < a * b := by positivity\n  have h\u2082 : 0 < b * c := by positivity\n  have h\u2083 : 0 < c * a := by positivity\n  have h\u2084 : 0 < (a * b) * (b * c) := by positivity\n  have h\u2085 : 0 < (b * c) * (c * a) := by positivity\n  have h\u2086 : 0 < (c * a) * (a * b) := by positivity\n  nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b),\n    sq_nonneg (a * b + b * c + c * a)]"
  ]
 },
 {
  "old": "(x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x + y = 1) : x * y ^ 4 + x ^ 4 * y \u2264 1 / 12 \u2227 (\u2203 x y : \u211d, (x + y = 1 \u2227 0 < x \u2227 0 < y \u2227 x * y ^ 4 + x ^ 4 * y = 1 / 12)) := by",
  "new": "(i : \u2115) (hi : 0 < i) : (\u2203 d : \u2115, (1 : \u2115) < d \u2227 d^i = 1) \u2228 i = 0 \u2228 \u2203 x : \u2115, x^i = 1 \u2227 (x^2 = 1 \u2228 x = 1):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : 0 < i) : (\u2203 d : \u2115, (1 : \u2115) < d \u2227 d^i = 1) \u2228 i = 0 \u2228 \u2203 x : \u2115, x^i = 1 \u2227 (x^2 = 1 \u2228 x = 1):= by\n  rcases i with (_ | _ | i) <;> norm_num at hi \u22a2\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : 0 < i) : (\u2203 d : \u2115, (1 : \u2115) < d \u2227 d^i = 1) \u2228 i = 0 \u2228 \u2203 x : \u2115, x^i = 1 \u2227 (x^2 = 1 \u2228 x = 1):= by\n  rcases i with (_ | _ | i)\n  <;> simp_all [Nat.pow_succ]\n  <;> exact \u27e81, by norm_num, by norm_num\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : 0 < i) : (\u2203 d : \u2115, (1 : \u2115) < d \u2227 d^i = 1) \u2228 i = 0 \u2228 \u2203 x : \u2115, x^i = 1 \u2227 (x^2 = 1 \u2228 x = 1):= by\n  rcases i with (i | i | i) <;>\n  simp_all [Nat.pow_succ, Nat.sub_eq_zero_iff_le]\n  all_goals omega"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b * c = 1) (h : a^2 + b^2 + c^2 = 3) : (a^2 + a * b * c) * (b^2 + a * b * c) * (c^2 + a * b * c) \u2264 (a + 1) * (b + 1) * (c + 1) := by",
  "new": "(a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  rcases Nat.eq_zero_or_pos a with h\u2080 | h\u2080 <;> rcases Nat.eq_zero_or_pos b with h\u2081 | h\u2081 <;>\n    simp_all [Nat.Coprime, Nat.mul_eq_zero]\n  all_goals omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  have : a \u2260 0 := by\n    rintro rfl\n    simp_all\n  have : b \u2260 0 := by\n    rintro rfl\n    simp_all\n  simp_all [Nat.eq_one_of_mul_eq_one_right]\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  rcases Nat.eq_zero_or_pos a with rfl|ha\n  all_goals rcases Nat.eq_zero_or_pos b with rfl|hb\n  all_goals simp_all [Nat.mul_eq_zero, Nat.coprime_iff_gcd_eq_one, Nat.gcd_eq_right]\n  all_goals omega"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1) : Real.sqrt (23 * a ^ 2 + 2) + Real.sqrt (23 * b ^ 2 + 2) + Real.sqrt (23 * c ^ 2 + 2) \u2264 5 * (a + b + c) := by",
  "new": ": Real.sqrt (23 * 19 ^ 2 + 2) + Real.sqrt (23 * 17 ^ 2 + 2) + Real.sqrt (23 * 13 ^ 2 + 2) \u2264 5 * (19 + 17 + 13):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (23 * 19 ^ 2 + 2) + Real.sqrt (23 * 17 ^ 2 + 2) + Real.sqrt (23 * 13 ^ 2 + 2) \u2264 5 * (19 + 17 + 13):= by\n  have h\u2080 : Real.sqrt (23 * 19 ^ 2 + 2) \u2264 5 * 19 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    positivity\n    nlinarith\n  have h\u2081 : Real.sqrt (23 * 17 ^ 2 + 2) \u2264 5 * 17 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    positivity\n    nlinarith\n  have h\u2082 : Real.sqrt (23 * 13 ^ 2 + 2) \u2264 5 * 13 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    positivity\n    nlinarith\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (23 * 19 ^ 2 + 2) + Real.sqrt (23 * 17 ^ 2 + 2) + Real.sqrt (23 * 13 ^ 2 + 2) \u2264 5 * (19 + 17 + 13):= by\n  nlinarith [Real.sqrt_nonneg (23 * 19 ^ 2 + 2),\n    Real.sqrt_nonneg (23 * 17 ^ 2 + 2),\n    Real.sqrt_nonneg (23 * 13 ^ 2 + 2),\n    Real.sq_sqrt (show (0 : \u211d) \u2264 23 * 19 ^ 2 + 2 from by positivity),\n    Real.sq_sqrt (show (0 : \u211d) \u2264 23 * 17 ^ 2 + 2 from by positivity),\n    Real.sq_sqrt (show (0 : \u211d) \u2264 23 * 13 ^ 2 + 2 from by positivity),\n    sq_nonneg (Real.sqrt (23 * 19 ^ 2 + 2) - Real.sqrt (23 * 17 ^ 2 + 2)),\n    sq_nonneg (Real.sqrt (23 * 19 ^ 2 + 2) - Real.sqrt (23 * 13 ^ 2 + 2)),\n    sq_nonneg (Real.sqrt (23 * 17 ^ 2 + 2) - Real.sqrt (23 * 13 ^ 2 + 2))]\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^2 + 3 * b * c) / (b^2 + c^2) + (b^2 + 3 * c * a) / (c^2 + a^2) + (c^2 + 3 * a * b) / (a^2 + b^2) \u2265 7 / 2 := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 (a^2 + 3 * b * c) / (b^2 + c^2) + (b^2 + 3 * c * a) / (c^2 + a^2) + (c^2 + 3 * a * b) / (a^2 + b^2) \u2265 7 / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192\n   (a^2 + 3 * b * c) / (b^2 + c^2) + (b^2 + 3 * c * a) / (c^2 + a^2) + (c^2 + 3 * a * b) / (a^2 + b^2) \u2265 7 / 2:= by\n  rintro a b c \u27e8ha : 0 < a, hb : 0 < b, hc : 0 < c\u27e9\n  field_simp [add_comm]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le,\n    mul_nonneg (sq_nonneg (a - b)) ha.le, mul_nonneg (sq_nonneg (b - c)) hb.le,\n    mul_nonneg (sq_nonneg (c - a)) hc.le, mul_nonneg (sq_nonneg (a - b)) hb.le,\n    mul_nonneg (sq_nonneg (b - c)) hc.le, mul_nonneg (sq_nonneg (c - a)) ha.le,\n    mul_nonneg (sq_nonneg a) hc.le, mul_nonneg (sq_nonneg b) ha.le,\n    mul_nonneg (sq_nonneg c) hb.le, mul_nonneg (sq_nonneg a) hb.le,\n    mul_nonneg (sq_nonneg b) hc.le, mul_nonneg (sq_nonneg c) ha.le]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192\n   (a^2 + 3 * b * c) / (b^2 + c^2) + (b^2 + 3 * c * a) / (c^2 + a^2) + (c^2 + 3 * a * b) / (a^2 + b^2) \u2265 7 / 2:= by\n  intro a b c h\n  rcases h with \u27e8ha, hb, hc\u27e9\n  have h\u2081 : 0 < a * b := by positivity\n  have h\u2082 : 0 < b * c := by positivity\n  have h\u2083 : 0 < c * a := by positivity\n  field_simp [ha, hb, hc, h\u2081, h\u2082, h\u2083]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    mul_nonneg h\u2081.le h\u2082.le, mul_nonneg h\u2082.le h\u2083.le, mul_nonneg h\u2083.le h\u2081.le,\n    mul_nonneg (sq_nonneg (a - b)) (sq_nonneg (b - c)), mul_nonneg (sq_nonneg (b - c)) (sq_nonneg (c - a)),\n    mul_nonneg (sq_nonneg (c - a)) (sq_nonneg (a - b))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192\n   (a^2 + 3 * b * c) / (b^2 + c^2) + (b^2 + 3 * c * a) / (c^2 + a^2) + (c^2 + 3 * a * b) / (a^2 + b^2) \u2265 7 / 2:= by\n  intro a b c h\n  have h\u2081 : 0 < a := h.1\n  have h\u2082 : 0 < b := h.2.1\n  have h\u2083 : 0 < c := h.2.2\n  have h\u2084 : 0 < a * b := mul_pos h\u2081 h\u2082\n  have h\u2085 : 0 < b * c := mul_pos h\u2082 h\u2083\n  have h\u2086 : 0 < c * a := mul_pos h\u2083 h\u2081\n  field_simp [h\u2081, h\u2082, h\u2083]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    mul_nonneg h\u2084.le h\u2085.le, mul_nonneg h\u2085.le h\u2086.le, mul_nonneg h\u2086.le h\u2084.le,\n    mul_nonneg (sq_nonneg (a - b)) (sq_nonneg (b - c)), mul_nonneg (sq_nonneg (b - c)) (sq_nonneg (c - a)),\n    mul_nonneg (sq_nonneg (c - a)) (sq_nonneg (a - b))]"
  ]
 },
 {
  "old": "(x : \u211d) (hx : 0 < x) : (1 / (1 + x)) < Real.log (1 + 1 / x) \u2227 Real.log (1 + 1 / x) < (1 / x) := by",
  "new": "{n : \u2115} (hn : 0 < n) : Real.log (1 / (n + 1)) < 1 / (n + 1):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_inv_succ_lt_inv_succ_log_succ {n : \u2115} (hn : 0 < n) :\n      Real.log (1 / (n + 1)) < 1 / (n + 1):= by\n  have hn' : 0 < (n + 1 : \u211d) := by\n    norm_cast\n    linarith\n  have hn'' : 0 < (1 : \u211d) / (n + 1) := by\n    rw [div_eq_mul_inv]\n    positivity\n  have hn''' : (1 : \u211d) / (n + 1) < 1 := by\n    rw [div_lt_iff hn']\n    norm_cast\n    nlinarith\n  linarith [Real.log_lt_sub_one_of_pos hn'' (by linarith)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_inv_succ_lt_inv_succ_log_succ {n : \u2115} (hn : 0 < n) :\n      Real.log (1 / (n + 1)) < 1 / (n + 1):= by\n  have hn' : 0 < (n + 1 : \u211d) := by positivity\n  refine' (log_le_sub_one_of_pos (by positivity)).trans_lt _\n  rw [sub_eq_add_neg]\n  norm_num\n  <;> norm_num\n  <;> field_simp\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_inv_succ_lt_inv_succ_log_succ {n : \u2115} (hn : 0 < n) :\n      Real.log (1 / (n + 1)) < 1 / (n + 1):= by\n  apply (log_le_sub_one_of_pos <| by positivity).trans_lt\n  rw [\u2190 sub_pos]\n  field_simp [hn, show (2 : \u211d) \u2260 0 by norm_num]\n  ring_nf\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_inv_succ_lt_inv_succ_log_succ {n : \u2115} (hn : 0 < n) :\n      Real.log (1 / (n + 1)) < 1 / (n + 1):= by\n  have : 0 < (n : \u211d) + 1 := by positivity\n  have hn' : 0 < (n : \u211d) := by positivity\n  refine' (log_le_sub_one_of_pos (by positivity)).trans_lt _\n  rw [\u2190 sub_pos]\n  field_simp\n  nlinarith"
  ]
 },
 {
  "old": "(x y z a b c : \u211d) (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2081 : x = b / a) (h\u2082 : y = c / b) (h\u2083 : z = a / c) : (11 * (a^3 + b^3 + c^3) - 15 * (a^2 * b + b^2 * c + c^2 * a) + 4 * (a * b * c)) \u2265 0 := by",
  "new": "(x y z : \u211d) (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2081 : x * y + x * z + y * z = 1) : x * y + 1 / (x + y) + y * z + 1 / (y + z) + z * x + 1 / (z + x) \u2265 4 / 2 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_10_2 (x y z : \u211d) (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z)\n    (h\u2081 : x * y + x * z + y * z = 1) : x * y + 1 / (x + y) + y * z + 1 / (y + z) + z * x + 1 / (z + x) \u2265 4 / 2 := by\n  rcases h\u2080 with \u27e8hx, hy, hz\u27e9\n  have : 0 < x * y := mul_pos hx hy\n  have : 0 < y * z := mul_pos hy hz\n  have : 0 < z * x := mul_pos hz hx\n  have : 0 < x * y * (x + y) := by positivity\n  have : 0 < y * z * (y + z) := by positivity\n  have : 0 < z * x * (z + x) := by positivity\n  field_simp [h\u2081]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x * y + y * z + z * x),\n    mul_self_nonneg (x * y - y * z),\n    mul_self_nonneg (y * z - z * x),\n    mul_self_nonneg (z * x - x * y)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : (a + b) / (a^7 + b^7 + c) + (b + c) / (b^7 + c^7 + a) + (c + a) / (c^7 + a^7 + b) \u2264 2 := by",
  "new": ": \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a * b * c = 1 \u2192 a ^ 7 + b ^ 7 + c ^ 7 + 3 * a ^ 4 * b ^ 4 * c ^ 4 \u2265 a ^ 4 * b ^ 3 + b ^ 4 * c ^ 3 + c ^ 4 * a ^ 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a * b * c = 1 \u2192\n    a ^ 7 + b ^ 7 + c ^ 7 + 3 * a ^ 4 * b ^ 4 * c ^ 4 \u2265 a ^ 4 * b ^ 3 + b ^ 4 * c ^ 3 + c ^ 4 * a ^ 3:= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have : 0 < a ^ 4 := pow_pos ha 4\n  have : 0 < b ^ 4 := pow_pos hb 4\n  have : 0 < c ^ 4 := pow_pos hc 4\n  have : 0 < a ^ 4 * b ^ 4 := by positivity\n  have : 0 < b ^ 4 * c ^ 4 := by positivity\n  have : 0 < c ^ 4 * a ^ 4 := by positivity\n  nlinarith [sq_nonneg (a ^ 3 - b ^ 3), sq_nonneg (b ^ 3 - c ^ 3), sq_nonneg (c ^ 3 - a ^ 3),\n    sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    sq_nonneg (a ^ 3 - a ^ 2 * b), sq_nonneg (b ^ 3 - b ^ 2 * c), sq_nonneg (c ^ 3 - c ^ 2 * a),\n    sq_nonneg (a ^ 2 * b - a * b ^ 2), sq_nonneg (b ^ 2 * c - b * c ^ 2),\n    sq_nonneg (c ^ 2 * a - c * a ^ 2)]\n  <;> simp [habc]\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a * b * c = 1 \u2192\n    a ^ 7 + b ^ 7 + c ^ 7 + 3 * a ^ 4 * b ^ 4 * c ^ 4 \u2265 a ^ 4 * b ^ 3 + b ^ 4 * c ^ 3 + c ^ 4 * a ^ 3:= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have : 0 < a ^ 4 := pow_pos ha 4\n  have : 0 < b ^ 4 := pow_pos hb 4\n  have : 0 < c ^ 4 := pow_pos hc 4\n  have : 0 < a ^ 3 := pow_pos ha 3\n  have : 0 < b ^ 3 := pow_pos hb 3\n  have : 0 < c ^ 3 := pow_pos hc 3\n  have : 0 < a ^ 4 * b ^ 4 * c ^ 4 := by positivity\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    mul_self_nonneg (a ^ 2 - a * b), mul_self_nonneg (b ^ 2 - b * c),\n    mul_self_nonneg (c ^ 2 - c * a), mul_self_nonneg (a ^ 2 - a * c), mul_self_nonneg (b ^ 2 - b * a),\n    mul_self_nonneg (c ^ 2 - c * b)]"
  ]
 },
 {
  "old": ": \u00ac\u2203 (x y z : \u2124), x > 0 \u2227 y > 0 \u2227 z > 0 \u2227 x^4 - y^4 = z^2 := by",
  "new": "(x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y):= by\n  by_cases h : Nat.Coprime x y <;> simp [h]\n  <;> simp [Nat.coprime_iff_gcd_eq_one, h]\n  <;> omega\n  <;> simp [Nat.coprime_iff_gcd_eq_one, h]\n  <;> omega\n  <;> simp [Nat.coprime_iff_gcd_eq_one, h]\n  <;> omega\n  <;> simp [Nat.coprime_iff_gcd_eq_one, h]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y):= by\n  by_cases h : Nat.Coprime x y\n  case pos => exact Or.inl h\n  case neg => exact Or.inr h\n  <;> rfl\n  <;> simp_all\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y):= by\n  by_cases h : Nat.Coprime x y\n  exacts [Or.inl h, Or.inr h]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 3) : (2 * a * b / (b ^ 2 + 2 * c * a + 3) + 2 * b * c / (c ^ 2 + 2 * a * b + 3) + 2 * c * a / (a ^ 2 + 2 * b * c + 3)) \u2264 1 := by",
  "new": "(x y z : \u211d) (hx : 0 < x \u2227 0 < y \u2227 0 < z) (h : x + y + z = 3) : x ^ 2 / (x + y) + y ^ 2 / (y + z) + z ^ 2 / (z + x) \u2265 x * y / (x + y + z) + y * z / (x + y + z) + z * x / (x + y + z):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y z : \u211d) (hx : 0 < x \u2227 0 < y \u2227 0 < z) (h : x + y + z = 3) : \n     x ^ 2 / (x + y) + y ^ 2 / (y + z) + z ^ 2 / (z + x) \u2265 x * y / (x + y + z) + y * z / (x + y + z) + z * x / (x + y + z):= by\n  have h1 : 0 < x + y := by linarith\n  have h2 : 0 < y + z := by linarith\n  have h3 : 0 < z + x := by linarith\n  have h4 : 0 < x * y := by nlinarith\n  have h5 : 0 < y * z := by nlinarith\n  have h6 : 0 < z * x := by nlinarith\n  have h7 : 0 < (x + y) * (y + z) * (z + x) := by positivity\n  have h8 : 0 < (x + y) * (y + z) * (z + x) * (x + y + z) := by positivity\n  have h9 : (x + y) * (y + z) * (z + x) \u2260 0 := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x * z - y * y), mul_self_nonneg (y * x - z * z), mul_self_nonneg (z * y - x * x),\n    mul_self_nonneg (x * y - y * z), mul_self_nonneg (y * z - z * x), mul_self_nonneg (z * x - x * y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y z : \u211d) (hx : 0 < x \u2227 0 < y \u2227 0 < z) (h : x + y + z = 3) : \n     x ^ 2 / (x + y) + y ^ 2 / (y + z) + z ^ 2 / (z + x) \u2265 x * y / (x + y + z) + y * z / (x + y + z) + z * x / (x + y + z):= by\n  rcases hx with \u27e8h1, h2, h3\u27e9\n  have h4 : 0 < x + y := by linarith\n  have h5 : 0 < y + z := by linarith\n  have h6 : 0 < z + x := by linarith\n  have h7 : 0 < x * y := by positivity\n  have h8 : 0 < y * z := by positivity\n  have h9 : 0 < z * x := by positivity\n  have h10 : 0 < (x + y) * (y + z) * (z + x) := by positivity\n  have h11 : 0 < (x + y) * (y + z) * (z + x) * (x + y + z) := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x * z - y * y), mul_self_nonneg (y * x - z * z),\n    mul_self_nonneg (z * y - x * x)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y z : \u211d) (hx : 0 < x \u2227 0 < y \u2227 0 < z) (h : x + y + z = 3) : \n     x ^ 2 / (x + y) + y ^ 2 / (y + z) + z ^ 2 / (z + x) \u2265 x * y / (x + y + z) + y * z / (x + y + z) + z * x / (x + y + z):= by\n  rcases hx with \u27e8hx, hy, hz\u27e9\n  have h\u2082 : 0 < x + y := by linarith\n  have h\u2083 : 0 < y + z := by linarith\n  have h\u2084 : 0 < z + x := by linarith\n  have h\u2085 : 0 < (x + y) * (y + z) * (z + x) := by positivity\n  have h\u2086 : 0 < x * y := by positivity\n  have h\u2087 : 0 < y * z := by positivity\n  have h\u2088 : 0 < z * x := by positivity\n  have h\u2089 : 0 < x * y * (z + x) := by positivity\n  have h\u2081\u2080 : 0 < y * z * (x + y) := by positivity\n  have h\u2081\u2081 : 0 < z * x * (y + z) := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : a + b + c \u2265 (2 / 3) * (Real.sqrt (a ^ 2 + b * c) + Real.sqrt (b ^ 2 + a * c) + Real.sqrt (c ^ 2 + a * b)) := by",
  "new": "(x y : \u2115) (h : x ^ 2 + y ^ 2 \u2265 2 * x * y) : (Nat.Coprime x y) \u2228 \u00ac Nat.Coprime x y := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2265 2 * x * y) : (Nat.Coprime x y) \u2228 \u00ac Nat.Coprime x y := by\n  by_cases h\u2081 : Nat.Coprime x y\n  exact Or.inl h\u2081\n  exact Or.inr (by simp_all)",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2265 2 * x * y) : (Nat.Coprime x y) \u2228 \u00ac Nat.Coprime x y := by\n  by_cases h0 : Nat.Coprime x y <;> simp [h0]\n  <;> simp_all\n  <;> omega\n  <;> try omega\n  <;> try omega\n  <;> try omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2265 2 * x * y) : (Nat.Coprime x y) \u2228 \u00ac Nat.Coprime x y := by\n  by_cases h1 : x.Coprime y\n  exact Or.inl h1\n  exact Or.inr h1",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2265 2 * x * y) : (Nat.Coprime x y) \u2228 \u00ac Nat.Coprime x y := by\n  by_cases h\u2080 : Nat.Coprime x y <;> simp_all\n  <;> simp_all only [mul_comm, mul_left_comm, mul_assoc, mul_one, mul_zero, add_zero, zero_add,\n    one_mul, zero_mul, mul_one, add_left_neg, add_zero, add_right_neg, zero_sub, sub_zero,\n    add_right_comm]\n  <;> omega"
  ]
 },
 {
  "old": "{A B C : \u211d} (hx: A > 0 \u2227 B > 0 \u2227 C > 0) (hab : A + B > C) (hbc : B + C > A) (hca : A + C > B) : (cos A * cos B / cos C) + (cos B * cos C / cos A) + (cos C * cos A / cos B) + 4 * cos A * cos B * cos C \u2265 2 := by",
  "new": ": Real.sqrt (Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + b ^ 2)) + Real.sqrt (Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + b ^ 2)) + Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + b ^ 2) \u2265 2 + Real.sqrt 2 * 2 * (Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + b ^ 2)) / 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + b ^ 2)) +\n        Real.sqrt (Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + b ^ 2)) +\n        Real.sqrt (1 + a ^ 2) +\n        Real.sqrt (1 + b ^ 2) \u2265\n      2 + Real.sqrt 2 * 2 * (Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + b ^ 2)) / 4:= by\n  have h\u2080 : Real.sqrt 2 \u2265 0 := Real.sqrt_nonneg 2\n  have h\u2081 : Real.sqrt (1 + a ^ 2) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2082 : Real.sqrt (1 + b ^ 2) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2083 : Real.sqrt (Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + b ^ 2)) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  nlinarith [sq_sqrt (show 0 \u2264 2 by norm_num),\n    sq_sqrt (show 0 \u2264 1 + a ^ 2 by positivity),\n    sq_sqrt (show 0 \u2264 1 + b ^ 2 by positivity)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (hab : a * b + b * c + c * a = 1) : (a ^ 2 - a + 1) * (b ^ 2 - b + 1) * (c ^ 2 - c + 1) \u2265 1 := by",
  "new": "(a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  cases Nat.eq_zero_or_pos a <;> cases Nat.eq_zero_or_pos b <;> simp_all [Nat.mul_eq_zero]\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  rcases a with (_ | _ | a) <;> rcases b with (_ | _ | b) <;> simp_all (config := {decide := true})\n  <;> simp_all [Nat.coprime_iff_gcd_eq_one, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;> omega\n  <;> omega\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  simp [Nat.eq_one_of_mul_eq_one_left, Nat.eq_one_of_mul_eq_one_right] at h \u22a2\n  omega"
  ]
 },
 {
  "old": "(a b c : \u211d) (h : a>0 \u2227 b>0 \u2227 c>0 \u2227 a * b * c = 1) : 2 * (a / b + b / c + c / a) \u2265 a + b + c + 1 / a + 1 / b + 1 / c := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) : x^2 / (x + y) + y^2 / (y + z) + z^2 / (z + x) \u2265 (x * y + y * z + z * x) / (x + y + z) \u2194 x * y / (x * z + 1) + y * z / (y * x + 1) + z * x / (z * y + 1) \u2265 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h : x * y * z = 1) :\n    x^2 / (x + y) + y^2 / (y + z) + z^2 / (z + x) \u2265 (x * y + y * z + z * x) / (x + y + z) \u2194\n    x * y / (x * z + 1) + y * z / (y * x + 1) + z * x / (z * y + 1) \u2265 1:= by\n  have H\u2081 : x^2 / (x + y) + y^2 / (y + z) + z^2 / (z + x) \u2265 (x * y + y * z + z * x) / (x + y + z) := by\n    have : 0 < x * y := by positivity\n    have : 0 < y * z := by positivity\n    have : 0 < z * x := by positivity\n    have : 0 < (x + y) * (y + z) * (z + x) := by positivity\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (y ^ 2 - z ^ 2), sq_nonneg (z ^ 2 - x ^ 2),\n      sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y)]\n  have H\u2082 : x * y / (x * z + 1) + y * z / (y * x + 1) + z * x / (z * y + 1) \u2265 1 := by\n    have : 0 < x * y := by positivity\n    have : 0 < y * z := by positivity\n    have : 0 < z * x := by positivity\n    have : 0 < (x * z + 1) * (y * x + 1) * (z * y + 1) := by positivity\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x * y - 1), sq_nonneg (y * z - 1), sq_nonneg (z * x - 1)]\n  constructor <;> intro h <;> nlinarith"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : x \u2265 0) (hy : y \u2265 0) (hz : z \u2265 0) (hab : x * y * z = 1) : 1 / (x ^ 3 * (x + y ^ 2)) + 1 / (y ^ 3 * (y + z ^ 2)) + 1 / (z ^ 3 * (z + x ^ 2)) \u2265 3 / 2 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x * y * z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x * y * z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9:= by\n  have h\u2081 : 0 < x * y := by positivity\n  have h\u2082 : 0 < y * z := by positivity\n  have h\u2083 : 0 < z * x := by positivity\n  field_simp [h\u2081, h\u2082, h\u2083, hab]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    sq_nonneg (x * y - 1), sq_nonneg (y * z - 1), sq_nonneg (z * x - 1)]\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x * y * z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9:= by\n  have hx' : 0 < x * y := mul_pos hx hy\n  have hy' : 0 < x * z := mul_pos hx hz\n  have hz' : 0 < y * z := mul_pos hy hz\n  field_simp [hab]\n  nlinarith [sq_nonneg (x * y - 1), sq_nonneg (x * z - 1), sq_nonneg (y * z - 1),\n    sq_nonneg (x * y * z - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x * y * z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9:= by\n  have h\u2080 : 0 < x * y := mul_pos hx hy\n  have h\u2081 : 0 < y * z := mul_pos hy hz\n  have h\u2082 : 0 < z * x := mul_pos hz hx\n  field_simp [hab]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y)]"
  ]
 },
 {
  "old": "(n : \u2115) (k : \u2115) (a : \u2115 \u2192 \u211d) (ha : \u2200 i, 0 \u2264 a i) : (\u2211 i in Finset.range n, (1 + a i ^ k) ^ (1 / k)) \u2265 n - 1 + (1 + \u2211 i in Finset.range n, a i ^ k) ^ (1 / k) := by",
  "new": "(x y z : \u211d) (n : \u2115) (h\u2081 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2082 : 0 < n) (h\u2083 : x + y + z \u2264 1) : \u2200 k : \u2115, k \u2264 n \u2192 (1 + x ^ k + y ^ k) ^ (1 / k) \u2265 (1 + (x + y) ^ k) ^ (1 / k) - z ^ (1 / k):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (x y z : \u211d) (n : \u2115) (h\u2081 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2082 : 0 < n) (h\u2083 : x + y + z \u2264 1) : \u2200 k : \u2115, k \u2264 n \u2192 (1 + x ^ k + y ^ k) ^ (1 / k) \u2265 (1 + (x + y) ^ k) ^ (1 / k) - z ^ (1 / k):= by\n  intro k hk\n  rcases k with (k | k | k) <;>\n  simp_all [Nat.div_eq_of_lt, Nat.div_eq_of_lt, Nat.div_eq_of_lt, Nat.div_eq_of_lt] <;>\n  nlinarith [sq_nonneg (x - y), pow_two x, pow_two y, pow_two z,\n    mul_self_nonneg (x + y), mul_self_nonneg (x - y),\n    mul_self_nonneg (x * y)]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (x y z : \u211d) (n : \u2115) (h\u2081 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2082 : 0 < n) (h\u2083 : x + y + z \u2264 1) : \u2200 k : \u2115, k \u2264 n \u2192 (1 + x ^ k + y ^ k) ^ (1 / k) \u2265 (1 + (x + y) ^ k) ^ (1 / k) - z ^ (1 / k):= by\n  rintro k hk\n  rcases k with (_ | _ | k) <;> simp_all [Nat.div_eq_of_lt, Nat.div_eq_of_lt, Nat.div_eq_of_lt]\n  all_goals norm_num\n  all_goals nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (h\u2080 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) : (1 + 1 / a) * (1 + 1 / b) * (1 + 1 / c) \u2265 (1 + 3 / (a + b + c))^3 := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (1 + 1 / a) * (1 + 1 / b) * (1 + 1 / c) \u2265 (1 + 3 / (a + b + c))^3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d)\n    (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n    (1 + 1 / a) * (1 + 1 / b) * (1 + 1 / c) \u2265 (1 + 3 / (a + b + c))^3:= by\n  apply le_of_sub_nonneg\n  field_simp [ha.ne', hb.ne', hc.ne']\n  rw [le_div_iff (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n    mul_nonneg ha.le hb.le, mul_nonneg ha.le hc.le, mul_nonneg hb.le hc.le,\n    mul_nonneg (sq_nonneg (a - b)) hc.le, mul_nonneg (sq_nonneg (a - c)) hb.le,\n    mul_nonneg (sq_nonneg (b - c)) ha.le]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d)\n    (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n    (1 + 1 / a) * (1 + 1 / b) * (1 + 1 / c) \u2265 (1 + 3 / (a + b + c))^3:= by\n  have h\u2081 : 0 < a + b + c := add_pos (add_pos ha hb) hc\n  field_simp [h\u2081]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le,\n    mul_nonneg (sq_nonneg (a - b)) hc.le, mul_nonneg (sq_nonneg (b - c)) ha.le,\n    mul_nonneg (sq_nonneg (c - a)) hb.le, mul_nonneg (sq_nonneg (a - b)) hb.le,\n    mul_nonneg (sq_nonneg (b - c)) hc.le, mul_nonneg (sq_nonneg (c - a)) ha.le]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d)\n    (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n    (1 + 1 / a) * (1 + 1 / b) * (1 + 1 / c) \u2265 (1 + 3 / (a + b + c))^3:= by\n  have hab : 0 < a + b + c := add_pos (add_pos ha hb) hc\n  have h : (1 + 1 / a) * (1 + 1 / b) * (1 + 1 / c) \u2265 (1 + 3 / (a + b + c)) ^ 3 := by\n    have h\u2081 : (1 + 1 / a) * (1 + 1 / b) * (1 + 1 / c) \u2265 (1 + 3 / (a + b + c)) ^ 3 := by\n      field_simp\n      rw [div_le_div_iff (by positivity) (by positivity)]\n      ring_nf\n      nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n        mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le,\n        mul_nonneg (sq_nonneg (a - b)) hc.le, mul_nonneg (sq_nonneg (b - c)) ha.le,\n        mul_nonneg (sq_nonneg (c - a)) hb.le]\n    linarith\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d)\n    (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n    (1 + 1 / a) * (1 + 1 / b) * (1 + 1 / c) \u2265 (1 + 3 / (a + b + c))^3:= by\n  field_simp [ha, hb, hc, add_comm]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le,\n    mul_nonneg (sq_nonneg (a - b)) hc.le, mul_nonneg (sq_nonneg (b - c)) ha.le,\n    mul_nonneg (sq_nonneg (c - a)) hb.le, mul_nonneg (sq_nonneg (a - b)) hb.le,\n    mul_nonneg (sq_nonneg (b - c)) hc.le, mul_nonneg (sq_nonneg (c - a)) ha.le]\n  <;> linarith"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (1 / (3 * x + y) + 1 / (3 * y + z) + 1 / (3 * z + x)) \u2265 (1 / (2 * x + y + z) + 1 / (2 * y + z + x) + 1 / (2 * z + x + y)) := by",
  "new": ": \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192 1 / (3 * x + y) + 1 / (3 * y + z) + 1 / (3 * z + x) \u2265 1 / (2 * x + y + z) + 1 / (2 * y + z + x) + 1 / (2 * z + x + y):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192\n   1 / (3 * x + y) + 1 / (3 * y + z) + 1 / (3 * z + x) \u2265\n   1 / (2 * x + y + z) + 1 / (2 * y + z + x) + 1 / (2 * z + x + y):= by\n  intro x y z h\n  have hx := h.1\n  have hy := h.2.1\n  have hz := h.2.2\n  have hxy : 0 < x * y := mul_pos hx hy\n  have hyz : 0 < y * z := mul_pos hy hz\n  have hxz : 0 < z * x := mul_pos hz hx\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (y ^ 2 - z ^ 2), sq_nonneg (z ^ 2 - x ^ 2),\n    sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192\n   1 / (3 * x + y) + 1 / (3 * y + z) + 1 / (3 * z + x) \u2265\n   1 / (2 * x + y + z) + 1 / (2 * y + z + x) + 1 / (2 * z + x + y):= by\n  rintro x y z \u27e8hx, hy, hz\u27e9\n  have : 0 < x * y := mul_pos hx hy\n  have : 0 < y * z := mul_pos hy hz\n  have : 0 < z * x := mul_pos hz hx\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (y ^ 2 - z ^ 2), sq_nonneg (z ^ 2 - x ^ 2),\n    sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192\n   1 / (3 * x + y) + 1 / (3 * y + z) + 1 / (3 * z + x) \u2265\n   1 / (2 * x + y + z) + 1 / (2 * y + z + x) + 1 / (2 * z + x + y):= by\n  rintro x y z \u27e8hx, hy, hz\u27e9\n  field_simp [add_assoc]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_nonneg hx.le hy.le, mul_nonneg hy.le hz.le, mul_nonneg hz.le hx.le,\n    mul_nonneg (sq_nonneg (x - y)) hz.le, mul_nonneg (sq_nonneg (y - z)) hx.le,\n    mul_nonneg (sq_nonneg (z - x)) hy.le, mul_nonneg (sq_nonneg (x - y)) hx.le,\n    mul_nonneg (sq_nonneg (y - z)) hy.le, mul_nonneg (sq_nonneg (z - x)) hz.le]"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) (habc : a + b + c + d = 4) : (1 + a * b) / (1 + b * b * c * c) + (1 + b * c) / (1 + c * c * d * d) + (1 + c * d) / (1 + d * d * a * a) + (1 + d * a) / (1 + a * a * b * b) \u2265 4 := by",
  "new": "(a b c : \u211d) (habc : a + b + c = 1) (h : 0 < a \u2227 0 < b \u2227 0 < c) : (1 + a * b) / (1 + b * b * c * c) + (1 + b * c) / (1 + c * c * a * a) + (1 + c * a) / (1 + a * a * b * b) \u2265 9 / 9:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (a b c : \u211d) (habc : a + b + c = 1) (h : 0 < a \u2227 0 < b \u2227 0 < c)  : (1 + a * b) / (1 + b * b * c * c) + (1 + b * c) / (1 + c * c * a * a) + (1 + c * a) / (1 + a * a * b * b) \u2265 9 / 9:= by\n  obtain \u27e8ha, hb, hc\u27e9 := h\n  have h1 : 0 < a * b := by positivity\n  have h2 : 0 < b * c := by positivity\n  have h3 : 0 < c * a := by positivity\n  have h4 : 0 < a * b * c := by positivity\n  have h5 : 0 < a * b * c * c := by positivity\n  have h6 : 0 < b * c * a * a := by positivity\n  have h7 : 0 < c * a * b * b := by positivity\n  have h8 : (1 + a * b) / (1 + b * b * c * c) \u2265 1 / 2 := by\n    rw [ge_iff_le, le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a * b - 1 / 3), sq_nonneg (b * c - 1 / 3), sq_nonneg (c * a - 1 / 3)]\n  have h9 : (1 + b * c) / (1 + c * c * a * a) \u2265 1 / 2 := by\n    rw [ge_iff_le, le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (b * c - 1 / 3), sq_nonneg (c * a - 1 / 3), sq_nonneg (a * b - 1 / 3)]\n  have h10 : (1 + c * a) / (1 + a * a * b * b) \u2265 1 / 2 := by\n    rw [ge_iff_le, le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (c * a - 1 / 3), sq_nonneg (a * b - 1 / 3), sq_nonneg (b * c - 1 / 3)]\n  linarith\n  <;> try norm_num"
  ]
 },
 {
  "old": "{p : \u2115} (h : p.Prime) : Irrational (Real.sqrt p) := by",
  "new": "{p : \u2115} (h\u2080 : p.Prime) (h\u2081 : 0 < p) : \u2203 g : \u2115, p \u2223 g \u2227 (Real.sqrt p : \u211d) \u2264 (g : \u211d):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem prime_divisor_sqrt_p {p : \u2115} (h\u2080 : p.Prime) (h\u2081 : 0 < p) : \u2203 g : \u2115, p \u2223 g \u2227 (Real.sqrt p : \u211d) \u2264 (g : \u211d):= by\n  use p\n  have h\u2082 : (p : \u211d) \u2265 0 := by norm_cast <;> linarith [h\u2081]\n  constructor\n  exacts [dvd_refl p, by\n    rw [Real.sqrt_le_iff]\n    constructor <;> norm_cast <;>\n    nlinarith [h\u2080.two_le]]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem prime_divisor_sqrt_p {p : \u2115} (h\u2080 : p.Prime) (h\u2081 : 0 < p) : \u2203 g : \u2115, p \u2223 g \u2227 (Real.sqrt p : \u211d) \u2264 (g : \u211d):= by\n  use p\n  constructor\n  exact dvd_refl p\n  have hp' : 0 < (p : \u211d) := by exact_mod_cast h\u2081\n  rw [Real.sqrt_le_iff]\n  constructor\n  \u00b7 positivity\n  \u00b7 norm_cast\n    nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem prime_divisor_sqrt_p {p : \u2115} (h\u2080 : p.Prime) (h\u2081 : 0 < p) : \u2203 g : \u2115, p \u2223 g \u2227 (Real.sqrt p : \u211d) \u2264 (g : \u211d):= by\n  refine' \u27e8p, \u27e8dvd_refl p, _\u27e9\u27e9\n  norm_cast\n  rw [Real.sqrt_le_iff]\n  constructor <;> norm_cast <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem prime_divisor_sqrt_p {p : \u2115} (h\u2080 : p.Prime) (h\u2081 : 0 < p) : \u2203 g : \u2115, p \u2223 g \u2227 (Real.sqrt p : \u211d) \u2264 (g : \u211d):= by\n  refine' \u27e8p, \u27e8dvd_refl _, _\u27e9\u27e9\n  rw [Real.sqrt_le_iff]\n  constructor <;> norm_cast <;> nlinarith"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (1 / (x + 3 * y) + 1 / (y + 3 * z) + 1 / (z + 3 * x) \u2265 1 / (x + 2 * y + z) + 1 / (x + y + 2 * z) + 1 / (2 * x + y + z)) := by",
  "new": ": \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192 1 / (x + 3 * y) + 1 / (y + 3 * z) + 1 / (z + 3 * x) \u2265 1 / (x + 2 * y + z) + 1 / (x + y + 2 * z) + 1 / (2 * x + y + z):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192\n   1 / (x + 3 * y) + 1 / (y + 3 * z) + 1 / (z + 3 * x) \u2265\n   1 / (x + 2 * y + z) + 1 / (x + y + 2 * z) + 1 / (2 * x + y + z):= by\n  rintro a b c \u27e8a_pos, b_pos, c_pos\u27e9\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_nonneg a_pos.le b_pos.le, mul_nonneg b_pos.le c_pos.le, mul_nonneg c_pos.le a_pos.le,\n    mul_nonneg (sq_nonneg (a - b)) a_pos.le, mul_nonneg (sq_nonneg (b - c)) b_pos.le, mul_nonneg (sq_nonneg (c - a)) c_pos.le,\n    mul_nonneg (sq_nonneg (a - b)) b_pos.le, mul_nonneg (sq_nonneg (b - c)) c_pos.le, mul_nonneg (sq_nonneg (c - a)) a_pos.le,\n    mul_nonneg (sq_nonneg (a - b)) c_pos.le, mul_nonneg (sq_nonneg (b - c)) a_pos.le, mul_nonneg (sq_nonneg (c - a)) b_pos.le]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192\n   1 / (x + 3 * y) + 1 / (y + 3 * z) + 1 / (z + 3 * x) \u2265\n   1 / (x + 2 * y + z) + 1 / (x + y + 2 * z) + 1 / (2 * x + y + z):= by\n  rintro x y z \u27e8h\u2081, h\u2082, h\u2083\u27e9\n  field_simp [add_assoc]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_nonneg h\u2081.le h\u2082.le, mul_nonneg h\u2082.le h\u2083.le, mul_nonneg h\u2083.le h\u2081.le,\n    mul_nonneg (sq_nonneg (x - y)) h\u2081.le, mul_nonneg (sq_nonneg (x - z)) h\u2081.le,\n    mul_nonneg (sq_nonneg (y - z)) h\u2081.le, mul_nonneg (sq_nonneg (x - y)) h\u2082.le,\n    mul_nonneg (sq_nonneg (x - z)) h\u2082.le, mul_nonneg (sq_nonneg (y - z)) h\u2082.le,\n    mul_nonneg (sq_nonneg (x - y)) h\u2083.le, mul_nonneg (sq_nonneg (x - z)) h\u2083.le,\n    mul_nonneg (sq_nonneg (y - z)) h\u2083.le]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192\n   1 / (x + 3 * y) + 1 / (y + 3 * z) + 1 / (z + 3 * x) \u2265\n   1 / (x + 2 * y + z) + 1 / (x + y + 2 * z) + 1 / (2 * x + y + z):= by\n  intro x y z h\u2080\n  rcases h\u2080 with \u27e8hx, hy, hz\u27e9\n  field_simp [add_comm]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (y ^ 2 - z ^ 2), sq_nonneg (z ^ 2 - x ^ 2),\n    mul_nonneg hx.le hy.le, mul_nonneg hy.le hz.le, mul_nonneg hz.le hx.le,\n    mul_nonneg (sq_nonneg (x - y)) hz.le, mul_nonneg (sq_nonneg (y - z)) hx.le,\n    mul_nonneg (sq_nonneg (z - x)) hy.le, mul_nonneg (sq_nonneg (x - y)) hx.le,\n    mul_nonneg (sq_nonneg (y - z)) hy.le, mul_nonneg (sq_nonneg (z - x)) hz.le,\n    mul_nonneg (sq_nonneg (x - y)) hy.le, mul_nonneg (sq_nonneg (y - z)) hx.le,\n    mul_nonneg (sq_nonneg (z - x)) hx.le, mul_nonneg (sq_nonneg (x - y)) hz.le,\n    mul_nonneg (sq_nonneg (y - z)) hz.le, mul_nonneg (sq_nonneg (z - x)) hy.le]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192\n   1 / (x + 3 * y) + 1 / (y + 3 * z) + 1 / (z + 3 * x) \u2265\n   1 / (x + 2 * y + z) + 1 / (x + y + 2 * z) + 1 / (2 * x + y + z):= by\n  intro x y z hxz\n  rcases hxz with \u27e8hx : 0 < x, hy : 0 < y, hz : 0 < z\u27e9\n  have h\u2080 : 0 < x * y := by positivity\n  have h\u2081 : 0 < y * z := by positivity\n  have h\u2082 : 0 < z * x := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (y ^ 2 - z ^ 2), sq_nonneg (z ^ 2 - x ^ 2),\n    sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (h\u2080 : 0 < a) (h\u2081 : 0 \u2264 b) (h\u2082 : 0 \u2264 c) : 1 / (a + b * c) + a^2 / (a * (b + c)) \u2265 (a + 1)^2 / (a + a * b + b * c + c * a) := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^2 / (a * b) + b^2 / (b * c) + c^2 / (c * a)) \u2265 (a + b + c) / (a + b + c):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_T1_22 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n        (a^2 / (a * b) + b^2 / (b * c) + c^2 / (c * a)) \u2265 (a + b + c) / (a + b + c):= by\n  simp only [sq, add_assoc]\n  have h1 : 0 < a * b := by positivity\n  have h2 : 0 < b * c := by positivity\n  have h3 : 0 < c * a := by positivity\n  have h4 : 0 < a * b * (b * c) := by positivity\n  have h5 : 0 < a * b * (c * a) := by positivity\n  have h6 : 0 < b * c * (c * a) := by positivity\n  have h7 : 0 < a * b * c := by positivity\n  have h8 : 0 < a * b * c * (a * b) := by positivity\n  have h9 : 0 < a * b * c * (b * c) := by positivity\n  have h10 : 0 < a * b * c * (c * a) := by positivity\n  field_simp [h1, h2, h3, h4, h5, h6, h7, h8, h9, h10]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]"
  ]
 },
 {
  "old": "(f : \u211d \u2192 \u211d) (hf: f x = x - (Real.cos x)^2): \u2200 x \u2208 Set.Icc 0 (2*Real.pi), f (Real.pi/2) \u2264 f x := by",
  "new": "(x y : \u211d) (f : \u211d \u2192 \u211d) (hf: f x = x - (Real.cos x)^2) (hx : 0 < x \u2227 x \u2264 2 * Real.pi) (hy : 0 < y \u2227 y \u2264 2 * Real.pi): f (Real.pi/2) \u2264 f x \u2227 f x \u2264 f (Real.pi/2) \u2194 f x = f (Real.pi/2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (x y : \u211d) (f : \u211d \u2192 \u211d) (hf: f x = x - (Real.cos x)^2) (hx : 0 < x \u2227 x \u2264 2 * Real.pi) (hy : 0 < y \u2227 y \u2264 2 * Real.pi): \n      f (Real.pi/2) \u2264 f x \u2227 f x \u2264 f (Real.pi/2) \u2194 f x = f (Real.pi/2):= by\n  constructor\n  rintro \u27e8h\u2080, h\u2081\u27e9\n  linarith\n  rintro h\n  exact \u27e8by linarith, by linarith\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (x y : \u211d) (f : \u211d \u2192 \u211d) (hf: f x = x - (Real.cos x)^2) (hx : 0 < x \u2227 x \u2264 2 * Real.pi) (hy : 0 < y \u2227 y \u2264 2 * Real.pi): \n      f (Real.pi/2) \u2264 f x \u2227 f x \u2264 f (Real.pi/2) \u2194 f x = f (Real.pi/2):= by\n  constructor\n  intro h\n  cases' h with h\u2081 h\u2082\n  nlinarith [Real.pi_pos]\n  intro h\n  constructor <;> nlinarith [Real.pi_pos]\n  <;> nlinarith [Real.pi_pos]\n  <;> nlinarith [Real.pi_pos]\n  <;> nlinarith [Real.pi_pos]\n  <;> nlinarith [Real.pi_pos]\n  <;> nlinarith [Real.pi_pos]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (x y : \u211d) (f : \u211d \u2192 \u211d) (hf: f x = x - (Real.cos x)^2) (hx : 0 < x \u2227 x \u2264 2 * Real.pi) (hy : 0 < y \u2227 y \u2264 2 * Real.pi): \n      f (Real.pi/2) \u2264 f x \u2227 f x \u2264 f (Real.pi/2) \u2194 f x = f (Real.pi/2):= by\n  constructor\n  next =>\n    rintro \u27e8h\u2081, h\u2082\u27e9\n    linarith\n  next =>\n    rintro h\n    exact \u27e8by linarith, by linarith\u27e9"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : 2 * (a^2 + 1) * (b^2 + 1) * (c^2 + 1) \u2265 (a + 1) * (b + 1) * (c + 1) * (a * b * c + 1) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x^2 + y^2 + z^2 + 1) * (x^2 + y^2 + 1) * (x^2 + 1) \u2265 (x * y * z + x * y + z * x + 1) * (x * z + 1):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   (x^2 + y^2 + z^2 + 1) * (x^2 + y^2 + 1) * (x^2 + 1) \u2265 (x * y * z + x * y + z * x + 1) * (x * z + 1):= by\n  simp only [mul_add, add_mul, mul_comm, mul_left_comm, mul_right_comm, add_assoc, add_left_comm,\n    add_right_comm]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    sq_nonneg (x - 1), sq_nonneg (y - 1), sq_nonneg (z - 1),\n    mul_nonneg hx.le hy.le, mul_nonneg hz.le hx.le, mul_nonneg hy.le hz.le,\n    mul_nonneg (sq_nonneg x) (sq_nonneg y), mul_nonneg (sq_nonneg y) (sq_nonneg z), mul_nonneg (sq_nonneg z) (sq_nonneg x)]\n  <;> norm_num"
  ]
 },
 {
  "old": "(a b c d p q : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (hd : d > 0) (habc : a * b * c * d = 1) (hpq : p + q = 3) : (1 / (1 + p * a + q * a ^ 2) + 1 / (1 + p * b + q * b ^ 2) + 1 / (1 + p * c + q * c ^ 2) + 1 / (1 + p * d + q * d ^ 2)) \u2265 1 := by",
  "new": "(a b c : \u211d) (habc : a * b * c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0) : (1 / (a + b + c) + 1 / (a ^ 2 + b ^ 2 + c ^ 2) + 1 / (a ^ 3 + b ^ 3 + c ^ 3)) \u2264 3 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (a b c : \u211d) (habc : a * b * c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0)  : (1 / (a + b + c) + 1 / (a ^ 2 + b ^ 2 + c ^ 2) + 1 / (a ^ 3 + b ^ 3 + c ^ 3)) \u2264 3 := by\n  rcases h with \u27e8ha : a > 0, hb : b > 0, hc : c > 0\u27e9\n  have : a * b > 0 := mul_pos ha hb\n  have : a ^ 2 + b ^ 2 + c ^ 2 > 0 := by positivity\n  have : a ^ 3 + b ^ 3 + c ^ 3 > 0 := by positivity\n  have h\u2080 : 1 / (a + b + c) \u2264 1 := by\n    rw [div_le_iff (by positivity)]\n    nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  have h\u2081 : 1 / (a ^ 2 + b ^ 2 + c ^ 2) \u2264 1 := by\n    rw [div_le_iff (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  have h\u2082 : 1 / (a ^ 3 + b ^ 3 + c ^ 3) \u2264 1 := by\n    rw [div_le_iff (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (a b c : \u211d) (habc : a * b * c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0)  : (1 / (a + b + c) + 1 / (a ^ 2 + b ^ 2 + c ^ 2) + 1 / (a ^ 3 + b ^ 3 + c ^ 3)) \u2264 3 := by\n  rcases h with \u27e8ha : a > 0, hb : b > 0, hc : c > 0\u27e9\n  have h\u2080 : a * b > 0 := mul_pos ha hb\n  have h\u2081 : b * c > 0 := mul_pos hb hc\n  have h\u2082 : c * a > 0 := mul_pos hc ha\n  have h\u2083 : (a + b + c) > 0 := by linarith\n  have h\u2084 : (a ^ 2 + b ^ 2 + c ^ 2) > 0 := by positivity\n  have h\u2085 : (a ^ 3 + b ^ 3 + c ^ 3) > 0 := by positivity\n  have h\u2086 : 1 / (a + b + c) \u2264 1 := by\n    rw [div_le_iff h\u2083]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  have h\u2087 : 1 / (a ^ 2 + b ^ 2 + c ^ 2) \u2264 1 := by\n    rw [div_le_iff h\u2084]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  have h\u2088 : 1 / (a ^ 3 + b ^ 3 + c ^ 3) \u2264 1 := by\n    rw [div_le_iff h\u2085]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  linarith\n  <;> try norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (a b c : \u211d) (habc : a * b * c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0)  : (1 / (a + b + c) + 1 / (a ^ 2 + b ^ 2 + c ^ 2) + 1 / (a ^ 3 + b ^ 3 + c ^ 3)) \u2264 3 := by\n  rcases h with \u27e8ha, hb, hc\u27e9\n  have : 1 / (a + b + c) \u2264 1 := by\n    rw [div_le_iff (show (0 : \u211d) < a + b + c by linarith)]\n    nlinarith [sq_nonneg (a + b + c - 3), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  have : 1 / (a ^ 2 + b ^ 2 + c ^ 2) \u2264 1 := by\n    rw [div_le_iff (show (0 : \u211d) < a ^ 2 + b ^ 2 + c ^ 2 by positivity)]\n    nlinarith [sq_nonneg (a + b + c - 3), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  have : 1 / (a ^ 3 + b ^ 3 + c ^ 3) \u2264 1 := by\n    rw [div_le_iff (show (0 : \u211d) < a ^ 3 + b ^ 3 + c ^ 3 by positivity)]\n    nlinarith [sq_nonneg (a + b + c - 3), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) (h : a + b + c = 3) : (a / (b + c) + b / (c + a) + c / (a + b)) \u2264 (1 / 3) * (1 / a + 1 / b + 1 / c - 1) + 5 / 2 * (a * b + b * c + c * a) := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a + b > c \u2227 a + c > b \u2227 b + c > a \u2192 a * b + b * c + c * a = 3 \u2192 a / (b + c) + b / (c + a) + c / (a + b) \u2264 (1 / 3) * (1 / a + 1 / b + 1 / c - 1) + 5 / 2 * (a * b + b * c + c * a):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a + b > c \u2227 a + c > b \u2227 b + c > a \u2192 a * b + b * c + c * a = 3 \u2192\n   a / (b + c) + b / (c + a) + c / (a + b) \u2264 (1 / 3) * (1 / a + 1 / b + 1 / c - 1) + 5 / 2 * (a * b + b * c + c * a):= by\n  rintro a b c \u27e8h\u2080a, h\u2080b, h\u2080c\u27e9 \u27e8h\u2081, h\u2082, h\u2083\u27e9 h\u2084\n  have h\u2085 : 0 < b * c := by nlinarith\n  have h\u2086 : 0 < c * a := by nlinarith\n  have h\u2087 : 0 < a * b := by nlinarith\n  have h\u2088 : a / (b + c) \u2264 1 := by\n    rw [div_le_iff (by linarith)]\n    nlinarith\n  have h\u2089 : b / (c + a) \u2264 1 := by\n    rw [div_le_iff (by linarith)]\n    nlinarith\n  have h\u2081\u2080 : c / (a + b) \u2264 1 := by\n    rw [div_le_iff (by linarith)]\n    nlinarith\n  have h\u2081\u2081 : a / (b + c) + b / (c + a) + c / (a + b) \u2264 3 := by\n    linarith\n  have h\u2081\u2082 : (1 / a + 1 / b + 1 / c - 1) \u2265 0 := by\n    rw [add_comm]\n    apply le_of_sub_nonneg\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith\n  nlinarith\n  <;> assumption\n  <;> assumption\n  <;> assumption"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a / b * (4 * a - 3 * b - c) ^ 2 + b / c * (4 * b - 3 * c - a) ^ 2 + c / a * (4 * c - 3 * a - b) ^ 2) \u2265 10 * ((b - c) ^ 2 + (c - a) ^ 2 + (a - b) ^ 2) := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a / b * (4 * a - 3 * b - c) ^ 2 + b / c * (4 * b - 3 * c - a) ^ 2 + c / a * (4 * c - 3 * a - b) ^ 2) \u2265 10 * ((b - c) ^ 2 + (c - a) ^ 2 + (a - b) ^ 2) \u2228 \u2203 a b c : \u211d, (a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0) \u2227 (a / b * (4 * a - 3 * b - c) ^ 2 + b / c * (4 * b - 3 * c - a) ^ 2 + c / a * (4 * c - 3 * a - b) ^ 2) < 10 * ((b - c) ^ 2 + (c - a) ^ 2 + (a - b) ^ 2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a / b * (4 * a - 3 * b - c) ^ 2 + b / c * (4 * b - 3 * c - a) ^ 2 + c / a * (4 * c - 3 * a - b) ^ 2) \u2265 10 * ((b - c) ^ 2 + (c - a) ^ 2 + (a - b) ^ 2) \u2228\n   \u2203 a b c : \u211d, (a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0) \u2227 (a / b * (4 * a - 3 * b - c) ^ 2 + b / c * (4 * b - 3 * c - a) ^ 2 + c / a * (4 * c - 3 * a - b) ^ 2) < 10 * ((b - c) ^ 2 + (c - a) ^ 2 + (a - b) ^ 2):= by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  by_cases h\u2080 : \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a / b * (4 * a - 3 * b - c) ^ 2 + b / c * (4 * b - 3 * c - a) ^ 2 + c / a * (4 * c - 3 * a - b) ^ 2) \u2265 10 * ((b - c) ^ 2 + (c - a) ^ 2 + (a - b) ^ 2)\n  exact Or.inl (h\u2080 a b c \u27e8ha, hb, hc\u27e9)\n  push_neg at h\u2080\n  exact Or.inr (h\u2080)"
  ]
 },
 {
  "old": "(a b : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hab : a^2 + b^2 = 1) : a * b + max a b \u2264 (3 * Real.sqrt 3) / 4 := by",
  "new": "(x y : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (h : x^2 + y^2 = 1) : 3 * Real.sqrt 3 / 4 \u2265 x * y + max x y := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (h : x^2 + y^2 = 1) : 3 * Real.sqrt 3 / 4 \u2265 x * y + max x y := by\n  have h\u2080 : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg 3\n  have h\u2081 : 0 \u2264 x * y := by nlinarith\n  have h\u2082 : x * y + max x y \u2264 3 * Real.sqrt 3 / 4 := by\n    cases' le_total x y with hxy hyx\n    \u00b7 rw [max_eq_right hxy]\n      nlinarith [sq_sqrt (show 0 \u2264 3 from by linarith),\n        sq_nonneg (x - 1 / 2),\n        sq_nonneg (y - 1 / 2),\n        sq_nonneg (Real.sqrt 3 - x - y)]\n    \u00b7 rw [max_eq_left hyx]\n      nlinarith [sq_sqrt (show 0 \u2264 3 from by linarith),\n        sq_nonneg (x - 1 / 2),\n        sq_nonneg (y - 1 / 2),\n        sq_nonneg (Real.sqrt 3 - x - y)]\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (h : x^2 + y^2 = 1) : 3 * Real.sqrt 3 / 4 \u2265 x * y + max x y := by\n  have h\u2080 : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg 3\n  cases' le_total x y with h\u2081 h\u2081\n  rw [max_eq_right h\u2081]\n  nlinarith [sq_sqrt (show 0 \u2264 3 by linarith),\n    mul_self_nonneg (x - 1 / 2),\n    mul_self_nonneg (y - 1 / 2),\n    mul_self_nonneg (x + y - Real.sqrt 3)]\n  rw [max_eq_left h\u2081]\n  nlinarith [sq_sqrt (show 0 \u2264 3 by linarith),\n    mul_self_nonneg (x - 1 / 2),\n    mul_self_nonneg (y - 1 / 2),\n    mul_self_nonneg (x + y - Real.sqrt 3)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (h : x^2 + y^2 = 1) : 3 * Real.sqrt 3 / 4 \u2265 x * y + max x y := by\n  have h\u2083 : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg 3\n  cases le_total x y with\n  | inl hxy =>\n    rw [max_eq_right hxy]\n    nlinarith [sq_sqrt (show 0 \u2264 3 from by linarith),\n      sq_nonneg (x - 1 / 2),\n      sq_nonneg (y - 1 / 2)]\n  | inr hxy =>\n    rw [max_eq_left hxy]\n    nlinarith [sq_sqrt (show 0 \u2264 3 from by linarith),\n      sq_nonneg (x - 1 / 2),\n      sq_nonneg (y - 1 / 2)]\n  <;> nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : (a ^ 4 + b ^ 2 * c ^ 2) / (c ^ 2 + a ^ 2) + (b ^ 4 + c ^ 2 * a ^ 2) / (a ^ 2 + b ^ 2) + (c ^ 4 + a ^ 2 * b ^ 2) / (b ^ 2 + c ^ 2) \u2265 27 / (a * b + b * c + a * c) ^ 2 := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a * b * c \u2265 1 \u2192 a ^ 2 / (b + c) ^ 2 + b ^ 2 / (c + a) ^ 2 + c ^ 2 / (a + b) ^ 2 \u2265 3 / 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a * b * c \u2265 1 \u2192 a ^ 2 / (b + c) ^ 2 + b ^ 2 / (c + a) ^ 2 + c ^ 2 / (a + b) ^ 2 \u2265 3 / 4:= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have : 0 \u2264 a * b := by nlinarith\n  have : 0 \u2264 b * c := by nlinarith\n  have : 0 \u2264 a * c := by nlinarith\n  have h\u2080 : 0 < a + b := by nlinarith\n  have h\u2081 : 0 < b + c := by nlinarith\n  have h\u2082 : 0 < c + a := by nlinarith\n  have h\u2083 : 0 < (b + c) * (c + a) * (a + b) := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    sq_nonneg (a * b - b * c), sq_nonneg (b * c - a * c), sq_nonneg (a * c - a * b)]"
  ]
 },
 {
  "old": "(p : \u2115) (hp : p.Prime): \u00ac ((2^p + 3^p) % 25 = 0) := by",
  "new": "(p : \u2115) {a : \u2115} (h\u2081 : Nat.Prime p) (h\u2082 : a \u2260 0) : Nat.Coprime p a \u2228 p \u2223 a:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {a : \u2115} (h\u2081 : Nat.Prime p) (h\u2082 : a \u2260 0) :\n    Nat.Coprime p a \u2228 p \u2223 a:= by\n  apply or_iff_not_imp_right.mpr\n  intro h\n  exact h\u2081.coprime_iff_not_dvd.mpr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {a : \u2115} (h\u2081 : Nat.Prime p) (h\u2082 : a \u2260 0) :\n    Nat.Coprime p a \u2228 p \u2223 a:= by\n  apply or_iff_not_imp_right.2\n  intro h\n  apply h\u2081.coprime_iff_not_dvd.2\n  exact h"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (hd : d > 0) (habc : a + b + c + d = a * b * c + a * b * d + a * c * d + b * c * d) : (a^2 + 2) * (b^2 + 2) * (c^2 + 2) * (d^2 + 2) \u2265 81 := by",
  "new": "(x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x * y = 1) : (x^3 + y^3) ^ 4 \u2265 (x * y)^3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x * y = 1) : (x^3 + y^3) ^ 4 \u2265 (x * y)^3:= by\n  have : (x * y) ^ 3 = 1 := by rw [hxy]; norm_num\n  have h\u2080 : 0 \u2264 x ^ 3 + y ^ 3 := by positivity\n  have h\u2081 : 0 \u2264 (x ^ 3 + y ^ 3) ^ 4 := by positivity\n  have h\u2082 : 0 \u2264 x ^ 2 * y ^ 2 := by positivity\n  have h\u2083 : 0 \u2264 x ^ 4 + y ^ 4 := by positivity\n  have h\u2084 : 0 \u2264 x ^ 2 * y ^ 2 * (x ^ 2 + y ^ 2) := by positivity\n  nlinarith [sq_nonneg (x ^ 3 - y ^ 3), sq_nonneg (x ^ 2 - y ^ 2),\n    mul_self_nonneg (x ^ 2 - x * y + y ^ 2)]\n  <;> try norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x * y = 1) : (x^3 + y^3) ^ 4 \u2265 (x * y)^3:= by\n  have h1 : y = 1 / x := by\n    field_simp\n    nlinarith\n  simp_all only [h1, one_div, pow_three]\n  norm_num\n  apply le_of_sub_nonneg\n  field_simp\n  ring_nf\n  positivity"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : (a^2 * b / (a^2 + b) + b^2 * c / (b^2 + c) + c^2 * a / (c^2 + a)) \u2264 (a^2 + b^2 + c^2) / 2 - (a^2 + b^2 + c^2 - 3)^2 / (8 * (a^2 + b^2 + c^2)) := by",
  "new": "(a b c : \u211d) (habc : a + b + c = 3) (h : a > 0 \u2227 b > 0 \u2227 c > 0) : (a ^ 2 * b / (a ^ 2 + b) + b ^ 2 * c / (b ^ 2 + c) + c ^ 2 * a / (c ^ 2 + a)) \u2264 (a ^ 2 + b ^ 2 + c ^ 2) / 2 - (a ^ 2 + b ^ 2 + c ^ 2 - 3) ^ 2 / (8 * (a ^ 2 + b ^ 2 + c ^ 2)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (a b c : \u211d) (habc : a + b + c = 3) (h : a > 0 \u2227 b > 0 \u2227 c > 0)  : (a ^ 2 * b / (a ^ 2 + b) + b ^ 2 * c / (b ^ 2 + c) + c ^ 2 * a / (c ^ 2 + a)) \u2264 (a ^ 2 + b ^ 2 + c ^ 2) / 2 - (a ^ 2 + b ^ 2 + c ^ 2 - 3) ^ 2 / (8 * (a ^ 2 + b ^ 2 + c ^ 2))  := by\n  obtain \u27e8ha, hb, hc\u27e9 := h\n  have h1 : 0 < a * b := by positivity\n  have h2 : 0 < b * c := by positivity\n  have h3 : 0 < c * a := by positivity\n  have h4 : 0 < a * b * c := by positivity\n  have h5 : a ^ 2 * b / (a ^ 2 + b) \u2264 (a ^ 2 + b) / 4 := by\n    rw [div_le_iff (show (0 : \u211d) < a ^ 2 + b by positivity)]\n    nlinarith [sq_nonneg (a ^ 2 - b)]\n  have h6 : b ^ 2 * c / (b ^ 2 + c) \u2264 (b ^ 2 + c) / 4 := by\n    rw [div_le_iff (show (0 : \u211d) < b ^ 2 + c by positivity)]\n    nlinarith [sq_nonneg (b ^ 2 - c)]\n  have h7 : c ^ 2 * a / (c ^ 2 + a) \u2264 (c ^ 2 + a) / 4 := by\n    rw [div_le_iff (show (0 : \u211d) < c ^ 2 + a by positivity)]\n    nlinarith [sq_nonneg (c ^ 2 - a)]\n  have h8 : a ^ 2 * b / (a ^ 2 + b) + b ^ 2 * c / (b ^ 2 + c) + c ^ 2 * a / (c ^ 2 + a) \u2264 (a ^ 2 + b) / 4 + (b ^ 2 + c) / 4 + (c ^ 2 + a) / 4 := by\n    linarith\n  have h9 : (a ^ 2 + b ^ 2 + c ^ 2) / 2 - (a ^ 2 + b ^ 2 + c ^ 2 - 3) ^ 2 / (8 * (a ^ 2 + b ^ 2 + c ^ 2)) \u2265 (a ^ 2 + b) / 4 + (b ^ 2 + c) / 4 + (c ^ 2 + a) / 4 := by\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (a b c : \u211d) (habc : a + b + c = 3) (h : a > 0 \u2227 b > 0 \u2227 c > 0)  : (a ^ 2 * b / (a ^ 2 + b) + b ^ 2 * c / (b ^ 2 + c) + c ^ 2 * a / (c ^ 2 + a)) \u2264 (a ^ 2 + b ^ 2 + c ^ 2) / 2 - (a ^ 2 + b ^ 2 + c ^ 2 - 3) ^ 2 / (8 * (a ^ 2 + b ^ 2 + c ^ 2))  := by\n  have h\u2081 : 0 < a := by linarith\n  have h\u2082 : 0 < b := by linarith\n  have h\u2083 : 0 < c := by linarith\n  have h\u2084 : 0 < a ^ 2 + b := by positivity\n  have h\u2085 : 0 < b ^ 2 + c := by positivity\n  have h\u2086 : 0 < c ^ 2 + a := by positivity\n  have h\u2087 : 0 < a ^ 2 + b ^ 2 + c ^ 2 := by positivity\n  have h\u2088 : (a ^ 2 * b / (a ^ 2 + b) + b ^ 2 * c / (b ^ 2 + c) + c ^ 2 * a / (c ^ 2 + a)) \u2264 (a ^ 2 + b ^ 2 + c ^ 2) / 2 - (a ^ 2 + b ^ 2 + c ^ 2 - 3) ^ 2 / (8 * (a ^ 2 + b ^ 2 + c ^ 2)) := by\n    have h\u2089 : a ^ 2 * b / (a ^ 2 + b) \u2264 (a ^ 2 + b) / 4 := by\n      rw [div_le_div_iff (by positivity) (by positivity)]\n      nlinarith [sq_nonneg (a ^ 2 - b)]\n    have h\u2081\u2080 : b ^ 2 * c / (b ^ 2 + c) \u2264 (b ^ 2 + c) / 4 := by\n      rw [div_le_div_iff (by positivity) (by positivity)]\n      nlinarith [sq_nonneg (b ^ 2 - c)]\n    have h\u2081\u2081 : c ^ 2 * a / (c ^ 2 + a) \u2264 (c ^ 2 + a) / 4 := by\n      rw [div_le_div_iff (by positivity) (by positivity)]\n      nlinarith [sq_nonneg (c ^ 2 - a)]\n    have h\u2081\u2082 : a ^ 2 * b / (a ^ 2 + b) + b ^ 2 * c / (b ^ 2 + c) + c ^ 2 * a / (c ^ 2 + a) \u2264 (a ^ 2 + b) / 4 + (b ^ 2 + c) / 4 + (c ^ 2 + a) / 4 := by linarith\n    have h\u2081\u2083 : (a ^ 2 + b ^ 2 + c ^ 2) / 2 - (a ^ 2 + b ^ 2 + c ^ 2 - 3) ^ 2 / (8 * (a ^ 2 + b ^ 2 + c ^ 2)) \u2265 (a ^ 2 + b) / 4 + (b ^ 2 + c) / 4 + (c ^ 2 + a) / 4 := by\n      field_simp\n      rw [div_le_div_iff (by positivity) (by positivity)]\n      nlinarith [sq_nonneg (a ^ 2 + b ^ 2 + c ^ 2), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n    linarith\n  exact h\u2088"
  ]
 },
 {
  "old": "(a b x : \u211d) : (1 + a ^ 2 / Real.sin x) * (1 + b ^ 2 / Real.cos x) \u2265 (1 + Real.sqrt 2 * a * b) ^ 2 * Real.sin 2 * x / 2 := by",
  "new": ": Real.sqrt 2 \u2264 2 / Real.sqrt 2 ^ 2 + 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2264 2 / Real.sqrt 2 ^ 2 + 2:= by\n  rw [add_comm]\n  norm_num\n  rw [Real.sqrt_le_iff]\n  constructor <;> norm_num <;>\n  ring_nf <;> norm_num <;>\n  nlinarith [Real.sqrt_nonneg 2]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2264 2 / Real.sqrt 2 ^ 2 + 2:= by\n  have h\u2081 : Real.sqrt 2 ^ 2 = 2 := Real.sq_sqrt (by norm_num)\n  rw [h\u2081]\n  norm_num\n  <;> apply le_of_sub_nonneg\n  <;> ring_nf\n  <;> norm_num\n  <;> nlinarith [Real.sq_sqrt (by norm_num : 0 \u2264 (2 : \u211d))]\n  <;> norm_num\n  <;> nlinarith [Real.sq_sqrt (by norm_num : 0 \u2264 (2 : \u211d))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2264 2 / Real.sqrt 2 ^ 2 + 2:= by\n  norm_num [Real.sqrt_le_iff]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2264 2 / Real.sqrt 2 ^ 2 + 2:= by\n  norm_num [Real.sqrt_le_iff]\n  <;> norm_num [Real.sqrt_le_iff]\n  <;> linarith\n  <;> norm_num [Real.sqrt_le_iff]\n  <;> linarith\n  <;> norm_num [Real.sqrt_le_iff]\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b + c = 3) : 3 * (1 / a + 1 / b + 1 / c) + a ^ 5 * b ^ 5 * c ^ 5 \u2265 10 := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192 2 * (a + b + c) \u2265 3 * (1 / a + 1 / b + 1 / c) \u2192 3 * (1 / a + 1 / b + 1 / c) + a ^ 5 * b ^ 5 * c ^ 5 \u2265 10:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192 2 * (a + b + c) \u2265 3 * (1 / a + 1 / b + 1 / c) \u2192 3 * (1 / a + 1 / b + 1 / c) + a ^ 5 * b ^ 5 * c ^ 5 \u2265 10:= by\n  rintro a b c \u27e8ha, hb, hc, h\u27e9 h'\n  have h'' : 0 < a * b * c := by positivity\n  have h\u2080 : a * b * c = 1 := by linarith\n  have h\u2081 : a * b > 0 := by positivity\n  have h\u2082 : a * c > 0 := by positivity\n  have h\u2083 : b * c > 0 := by positivity\n  have h\u2084 : a * b * c = 1 := by linarith\n  have h\u2085 : 0 < a ^ 5 * b ^ 5 * c ^ 5 := by positivity\n  field_simp [ha, hb, hc, h\u2080, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085] at h' \u22a2\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n    mul_self_nonneg (a * b - 1), mul_self_nonneg (a * c - 1),\n    mul_self_nonneg (b * c - 1)]"
  ]
 },
 {
  "old": "(n : \u2115) (k : \u211d) (x : \u2115 \u2192 \u211d) (hx : \u2200 i, 0 \u2264 x i) (h : 0 \u2264 k) (hn : 0 < n + 1) : (\u220f i in Finset.range n, (x i + k)) \u2265 (k^n / (n + 1) * ((n + 1) + \u2211 i in Finset.range n, x i)) := by",
  "new": "(x : \u2115 \u2192 \u211d) (n : \u2115) (h\u2080 : 0 < n) (hx : \u2200 i, 0 \u2264 x i) : (\u220f i in Finset.range n, (1 + x i)) \u2265 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x : \u2115 \u2192 \u211d) (n : \u2115) (h\u2080 : 0 < n) (hx : \u2200 i, 0 \u2264 x i) : \n  (\u220f i in Finset.range n, (1 + x i)) \u2265 1:= by\n  induction' h\u2080 with n hn\n  <;> simp_all [Finset.prod_range_succ, hx]\n  <;> nlinarith [hx n]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x : \u2115 \u2192 \u211d) (n : \u2115) (h\u2080 : 0 < n) (hx : \u2200 i, 0 \u2264 x i) : \n  (\u220f i in Finset.range n, (1 + x i)) \u2265 1:= by\n  induction' h\u2080 with k hk hk\n  all_goals simp_all [Finset.prod_range_succ, add_nonneg]\n  all_goals\n    nlinarith [hx k, hk]\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x : \u2115 \u2192 \u211d) (n : \u2115) (h\u2080 : 0 < n) (hx : \u2200 i, 0 \u2264 x i) : \n  (\u220f i in Finset.range n, (1 + x i)) \u2265 1:= by\n  have h\u2081 : \u2200 i, i \u2208 Finset.range n \u2192 0 \u2264 x i := by\n    intro i hi\n    apply hx\n  have h\u2082 : \u220f k in Finset.range n, (1 + x k) \u2265 \u220f k in Finset.range n, 1 := by\n    apply Finset.prod_le_prod\n    \u00b7 intro i hi\n      linarith [hx i]\n    \u00b7 intro i hi\n      linarith [h\u2081 i hi]\n  simp at h\u2082\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x : \u2115 \u2192 \u211d) (n : \u2115) (h\u2080 : 0 < n) (hx : \u2200 i, 0 \u2264 x i) : \n  (\u220f i in Finset.range n, (1 + x i)) \u2265 1:= by\n  have : \u2200 i \u2208 Finset.range n, 1 + x i \u2265 1 := by\n    intro i _\n    exact by linarith [hx i]\n  have : (\u220f i in Finset.range n, (1 + x i)) \u2265 \u220f i in Finset.range n, 1 :=\n    Finset.prod_le_prod (fun _ _ => by linarith [hx 0]) this\n  simpa using this"
  ]
 },
 {
  "old": "(n m : \u2115) : Nat.gcd (3^n - 2^n) (3^m - 2^m) = 3^(Nat.gcd n m) - 2^(Nat.gcd n m) := by",
  "new": "(x y : \u2115) : (x.Coprime y) \u2194 Nat.Coprime x y := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_iff_nat_coprime (x y : \u2115) : (x.Coprime y) \u2194 Nat.Coprime x y := by\n  constructor\n  intro h\n  exact h\n  intro h\n  exact h\n  <;> simp [Nat.Coprime, Coprime]\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_iff_nat_coprime (x y : \u2115) : (x.Coprime y) \u2194 Nat.Coprime x y := by\n  constructor\n  all_goals simp (config := { contextual := true }) [Nat.coprime_iff_gcd_eq_one, Coprime]\n  all_goals\n    rintro h\n    rw [Nat.coprime_iff_gcd_eq_one] at h\n    assumption\n  all_goals\n    rw [Nat.coprime_iff_gcd_eq_one]\n    simpa [Nat.coprime_iff_gcd_eq_one, Coprime] using h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_iff_nat_coprime (x y : \u2115) : (x.Coprime y) \u2194 Nat.Coprime x y := by\n  simp [Nat.Coprime, Nat.coprime_iff_gcd_eq_one]\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_iff_nat_coprime (x y : \u2115) : (x.Coprime y) \u2194 Nat.Coprime x y := by\n  constructor <;>\n  intro h <;>\n  (try simpa using h) <;>\n  (try simp [Nat.Coprime, Nat.gcd_eq_right, Nat.gcd_eq_left] at h \u22a2) <;>\n  (try rw [Nat.coprime_iff_gcd_eq_one] at h \u22a2) <;>\n  simp [h]"
  ]
 },
 {
  "old": "(x y z k : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hk : 0 < k) : 1 / (k * x + y + z) + 1 / (x + k * y + z) + 1 / (x + y + k * z) \u2264 1 / (k + 2) * (1 / x + 1 / y + 1 / z) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : x ^ 2 / y + y ^ 2 / z + z ^ 2 / x \u2265 2 * (x * y / (x + y) + y * z / (y + z) + z * x / (z + x)):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) :  x ^ 2 / y + y ^ 2 / z + z ^ 2 / x \u2265 2 * (x * y / (x + y) + y * z / (y + z) + z * x / (z + x)):= by\n  have hxy : 0 < x * y := mul_pos hx hy\n  have hyz : 0 < y * z := mul_pos hy hz\n  have hzx : 0 < z * x := mul_pos hz hx\n  have hxy_2 : 0 < x * y * (x + y) := by positivity\n  have hyz_2 : 0 < y * z * (y + z) := by positivity\n  have hzx_2 : 0 < z * x * (z + x) := by positivity\n  have h1 : 0 < x * y * z := by positivity\n  have h2 : 0 < x * y * z * (x + y + z) := by positivity\n  field_simp [hxy_2, hyz_2, hzx_2, h1, h2]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x ^ 2 * z - y ^ 2 * x), sq_nonneg (y ^ 2 * x - z ^ 2 * y), sq_nonneg (z ^ 2 * y - x ^ 2 * z),\n    sq_nonneg (x * y * z), sq_nonneg (x * y * z * (x - y)), sq_nonneg (x * y * z * (y - z)), sq_nonneg (x * y * z * (z - x))]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : 4 * (a^2 / b / c + b^2 / c / a + c^2 / a / b) + 729 * a * b * c \u2265 39 := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192 4 * (a^2 / b / c + b^2 / c / a + c^2 / a / b) + 729 * a * b * c \u2265 39 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192\n   4 * (a^2 / b / c + b^2 / c / a + c^2 / a / b) + 729 * a * b * c \u2265 39 := by\n  rintro a b c \u27e8a_pos, b_pos, c_pos, a_b_c\u27e9\n  have h\u2080 : a * b > 0 := mul_pos a_pos b_pos\n  have h\u2081 : b * c > 0 := mul_pos b_pos c_pos\n  have h\u2082 : a * c > 0 := mul_pos a_pos c_pos\n  have h\u2083 : 4 * (a^2 / b / c + b^2 / c / a + c^2 / a / b) \u2265 0 := by positivity\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192\n   4 * (a^2 / b / c + b^2 / c / a + c^2 / a / b) + 729 * a * b * c \u2265 39 := by\n  rintro a b c \u27e8h\u2081, h\u2082, h\u2083, h\u2084\u27e9\n  have : a * b > 0 := by nlinarith\n  have : b * c > 0 := by nlinarith\n  have : a * c > 0 := by nlinarith\n  have : 4 * (a^2 / b / c + b^2 / c / a + c^2 / a / b) + 729 * a * b * c \u2265 39 := by\n    have : a ^ 2 / b / c + b ^ 2 / c / a + c ^ 2 / a / b \u2265 0 := by positivity\n    nlinarith\n  linarith\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c d : \u211d) : (1 / a + 1 / b + 1 / c + 9 / (a + b + c)) \u2265 4 * (1 / (a + b) + 1 / (b + c) + 1 / (c + a)) := by",
  "new": ": \u2200 a b c d : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 d > 0 \u2192 1 / a + 1 / b + 1 / c + 9 / (a + b + c) \u2265 4 * (1 / (a + b) + 1 / (b + c) + 1 / (c + a)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 d > 0 \u2192\n   1 / a + 1 / b + 1 / c + 9 / (a + b + c) \u2265 4 * (1 / (a + b) + 1 / (b + c) + 1 / (c + a)) := by\n  rintro a b c d \u27e8a_pos, b_pos, c_pos, d_pos\u27e9\n  have : 0 < a + b := by linarith\n  have : 0 < b + c := by linarith\n  have : 0 < c + a := by linarith\n  have : 0 < a * b := mul_pos a_pos b_pos\n  have : 0 < b * c := mul_pos b_pos c_pos\n  have : 0 < c * a := mul_pos c_pos a_pos\n  have : 0 < (a + b) * (b + c) := by positivity\n  have : 0 < (b + c) * (c + a) := by positivity\n  have : 0 < (c + a) * (a + b) := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 d > 0 \u2192\n   1 / a + 1 / b + 1 / c + 9 / (a + b + c) \u2265 4 * (1 / (a + b) + 1 / (b + c) + 1 / (c + a)) := by\n  intro a b c d h\n  rcases h with \u27e8h1, h2, h3, h4\u27e9\n  have h5 : 0 < a + b := add_pos h1 h2\n  have h6 : 0 < b + c := add_pos h2 h3\n  have h7 : 0 < c + a := add_pos h3 h1\n  have h8 : 0 < a * b := mul_pos h1 h2\n  have h9 : 0 < b * c := mul_pos h2 h3\n  have h10 : 0 < c * a := mul_pos h3 h1\n  have h11 : 0 < (a + b) * (b + c) := mul_pos h5 h6\n  have h12 : 0 < (b + c) * (c + a) := mul_pos h6 h7\n  have h13 : 0 < (c + a) * (a + b) := mul_pos h7 h5\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 d > 0 \u2192\n   1 / a + 1 / b + 1 / c + 9 / (a + b + c) \u2265 4 * (1 / (a + b) + 1 / (b + c) + 1 / (c + a)) := by\n  rintro a b c d \u27e8a_pos, b_pos, c_pos, d_pos\u27e9\n  have : 0 < a + b := add_pos a_pos b_pos\n  have : 0 < b + c := add_pos b_pos c_pos\n  have : 0 < c + a := add_pos c_pos a_pos\n  have h\u2080 : 0 < a + b + c := by linarith\n  have h\u2081 : 0 < a * b := by positivity\n  have h\u2082 : 0 < b * c := by positivity\n  have h\u2083 : 0 < c * a := by positivity\n  have h\u2084 : 0 < a * b * c := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]"
  ]
 },
 {
  "old": "(X Y Z : \u2115) (h\u2081 : X % Y = Z % Y) : X \u2261 Z [MOD Y] := by",
  "new": "(a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  by_cases h : a.Coprime b\n  exact Or.inl h\n  exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  by_cases h : Nat.Coprime a b\n  left\n  exact h\n  right\n  exact h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  cases em (Nat.Coprime a b)\n  exacts [Or.inl \u2039_\u203a, Or.inr \u2039_\u203a]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  by_cases h : Nat.Coprime a b <;> by_cases h' : (1 : \u2115) = 1 <;> simp_all\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a / (b + c) + b / (c + a) + c / (a + b)) \u2265 3 / 2 + 4 * (a ^ 4 + b ^ 4 + c ^ 4 - a * b * c * (a + b + c)) / (a + b + c) ^ 4 := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a ^ 2 + b ^ 2 + c ^ 2) * (b ^ 2 + a ^ 2 + c ^ 2) * (c ^ 2 + a ^ 2 + b ^ 2) * (2 * a * b + 2 * b * c + 2 * c * a) \u2265 (a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2) * (c ^ 2 + a ^ 2) * (2 * b * c + 2 * c * a + 2 * a * b):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a ^ 2 + b ^ 2 + c ^ 2) * (b ^ 2 + a ^ 2 + c ^ 2) * (c ^ 2 + a ^ 2 + b ^ 2) * (2 * a * b + 2 * b * c + 2 * c * a) \u2265 (a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2) * (c ^ 2 + a ^ 2) * (2 * b * c + 2 * c * a + 2 * a * b):= by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  ring_nf\n  apply le_of_sub_nonneg\n  ring_nf\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a ^ 2 + b ^ 2 + c ^ 2) * (b ^ 2 + a ^ 2 + c ^ 2) * (c ^ 2 + a ^ 2 + b ^ 2) * (2 * a * b + 2 * b * c + 2 * c * a) \u2265 (a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2) * (c ^ 2 + a ^ 2) * (2 * b * c + 2 * c * a + 2 * a * b):= by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  apply le_of_sub_nonneg\n  ring_nf\n  positivity"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a^6 / (b^2 + c^2) + b^6 / (a^2 + c^2) + c^6 / (a^2 + b^2) \u2265 abc * (a + b + c) / 2 := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 a * b + b * c + c * a \u2264 Real.sqrt (a ^ 2 + b ^ 2) * Real.sqrt (b ^ 2 + c ^ 2) + Real.sqrt (b ^ 2 + c ^ 2) * Real.sqrt (c ^ 2 + a ^ 2) + Real.sqrt (a ^ 2 + b ^ 2) * Real.sqrt (c ^ 2 + a ^ 2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192\n   a * b + b * c + c * a \u2264 Real.sqrt (a ^ 2 + b ^ 2) * Real.sqrt (b ^ 2 + c ^ 2) +\n        Real.sqrt (b ^ 2 + c ^ 2) * Real.sqrt (c ^ 2 + a ^ 2) +\n        Real.sqrt (a ^ 2 + b ^ 2) * Real.sqrt (c ^ 2 + a ^ 2):= by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  have hab : 0 \u2264 Real.sqrt (a ^ 2 + b ^ 2) * Real.sqrt (b ^ 2 + c ^ 2) := by positivity\n  have hbc : 0 \u2264 Real.sqrt (b ^ 2 + c ^ 2) * Real.sqrt (c ^ 2 + a ^ 2) := by positivity\n  have hac : 0 \u2264 Real.sqrt (a ^ 2 + b ^ 2) * Real.sqrt (c ^ 2 + a ^ 2) := by positivity\n  nlinarith [sq_sqrt (add_nonneg (sq_nonneg a) (sq_nonneg b)),\n    sq_sqrt (add_nonneg (sq_nonneg b) (sq_nonneg c)),\n    sq_sqrt (add_nonneg (sq_nonneg c) (sq_nonneg a)),\n    mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192\n   a * b + b * c + c * a \u2264 Real.sqrt (a ^ 2 + b ^ 2) * Real.sqrt (b ^ 2 + c ^ 2) +\n        Real.sqrt (b ^ 2 + c ^ 2) * Real.sqrt (c ^ 2 + a ^ 2) +\n        Real.sqrt (a ^ 2 + b ^ 2) * Real.sqrt (c ^ 2 + a ^ 2):= by\n  intro a b c h\u2080\n  have h\u2081 : Real.sqrt (a ^ 2 + b ^ 2) * Real.sqrt (b ^ 2 + c ^ 2) \u2265 a * b := by\n    have h\u2082 : Real.sqrt (a ^ 2 + b ^ 2) * Real.sqrt (b ^ 2 + c ^ 2) =\n        Real.sqrt ((a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2)) := by\n      rw [Real.sqrt_mul] <;> nlinarith\n    rw [h\u2082]\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (a * c - b ^ 2)]\n  have h\u2082 : Real.sqrt (b ^ 2 + c ^ 2) * Real.sqrt (c ^ 2 + a ^ 2) \u2265 b * c := by\n    have h\u2083 : Real.sqrt (b ^ 2 + c ^ 2) * Real.sqrt (c ^ 2 + a ^ 2) =\n        Real.sqrt ((b ^ 2 + c ^ 2) * (c ^ 2 + a ^ 2)) := by\n      rw [Real.sqrt_mul] <;> nlinarith\n    rw [h\u2083]\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (b * a - c ^ 2)]\n  have h\u2083 : Real.sqrt (a ^ 2 + b ^ 2) * Real.sqrt (c ^ 2 + a ^ 2) \u2265 c * a := by\n    have h\u2084 : Real.sqrt (a ^ 2 + b ^ 2) * Real.sqrt (c ^ 2 + a ^ 2) =\n        Real.sqrt ((a ^ 2 + b ^ 2) * (c ^ 2 + a ^ 2)) := by\n      rw [Real.sqrt_mul] <;> nlinarith\n    rw [h\u2084]\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (a * b - c ^ 2)]\n  linarith\n  <;> norm_num"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : a >= 0 \u2227 b >= 0 \u2227 c >= 0 \u2227 d >= 0) (hab : a + b + c + d = 1) : a^b * b^c * c^d * d^a <= 1 / 4 := by",
  "new": "(x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x * y <= 1) : (x + y + 1 / (x + y))^2 >= 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x * y <= 1) : (x + y + 1 / (x + y))^2 >= 4:= by\n  have h\u2080 : 0 < x + y := add_pos hx hy\n  have h\u2081 : 0 < x * y := by\n    nlinarith\n  have h\u2082 : (x + y) ^ 2 \u2265 4 * x * y := by\n    nlinarith [sq_nonneg (x - y)]\n  have h\u2083 : (x + y + 1 / (x + y)) ^ 2 \u2265 4 := by\n    have h\u2084 : 0 < x + y + 1 := by\n      nlinarith\n    have h\u2085 : 0 < x + y := by\n      nlinarith\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x + y - 1)]\n  exact h\u2083",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x * y <= 1) : (x + y + 1 / (x + y))^2 >= 4:= by\n  have hxy_pos : 0 < x * y := by nlinarith\n  have hxy_pos' : 0 < x + y := by nlinarith\n  have hxy_pos'' : 0 < (x + y) ^ 2 := by nlinarith\n  field_simp [hxy_pos'.ne', hxy_pos''.ne', hxy_pos.ne']\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x + y - 1), sq_nonneg (x - y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x * y <= 1) : (x + y + 1 / (x + y))^2 >= 4:= by\n  have : x + y + 1 / (x + y) \u2265 2 := by\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x + y - 1), hxy]\n  nlinarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x * y <= 1) : (x + y + 1 / (x + y))^2 >= 4:= by\n  have : 0 < x + y := add_pos hx hy\n  have : 0 < x * y := by nlinarith\n  field_simp [add_pos]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x + y - 1), sq_nonneg (x - y), hxy]"
  ]
 },
 {
  "old": "(m : \u2115) (hm : 0 < m) : \u2203 k : \u2115, m \u2223 (fib (2 * k) + 1) \u2227 m \u2223 (fib (2 * k + 1) - 1) := by",
  "new": "(n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two (n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by\n  induction' hn with k hk IH\n  simp [fib_one, fib_two]\n  simp [fib_add_two, Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm] at *\n  omega\n  <;> simp_all [fib_add_two, Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two (n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by\n  induction' hn with k hk hk_ind\n  norm_num [fib_add_two]\n  rw [fib_add_two]\n  simpa [fib_add_two, Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm] using hk_ind\n  <;> rfl\n  <;> rfl\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two (n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by\n  induction' hn with k hk IH\n  simp [fib_one, fib_two]\n  rw [fib_add_two]\n  simpa [fib_add_two] using IH.symm\n  <;> omega\n  <;> linarith\n  <;> omega\n  <;> linarith\n  <;> omega\n  <;> linarith\n  <;> omega\n  <;> linarith\n  <;> omega\n  <;> linarith\n  <;> omega\n  <;> linarith\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two (n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by\n  induction' hn with n hn IH\n  norm_num [fib_one, fib_two, Nat.coprime_iff_gcd_eq_one]\n  rw [fib_add_two, Nat.coprime_iff_gcd_eq_one]\n  rw [Nat.gcd_comm]\n  simp [Nat.gcd_comm, IH, fib_add_two]"
  ]
 },
 {
  "old": "(n : \u2115) : (\u220f k in Finset.range n, (2 * k + 1)) / (\u220f k in Finset.range n, (2 * k + 2)) \u2264 1 / Real.sqrt (2 * n + 1) := by",
  "new": ": \u220f k in Finset.range n, (2 * k + 1) / ((2 * k + 2) * (2 * k + 3)) \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u220f k in Finset.range n, (2 * k + 1) / ((2 * k + 2) * (2 * k + 3)) \u2264 1:= by\n  cases n with\n  | zero =>\n    norm_num\n  | succ n =>\n    induction' n with n ih\n    all_goals simp_all [Finset.prod_range_succ']\n    all_goals\n      ring_nf\n      norm_num\n      apply le_of_sub_nonneg\n      field_simp\n      ring_nf\n      positivity"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 3) : 1 / ((x + y) * (4 - x * y)) + 1 / ((y + z) * (4 - y * z)) + 1 / ((x + z) * (4 - x * z)) \u2265 1 / 2 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 3) : 1 / (x + y + z) * (x ^ 2 + y ^ 2 + z ^ 2) + 1 / 2 * (x * y + y * z + z * x) \u2265 x * y * z:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 3) :  1 / (x + y + z) * (x ^ 2 + y ^ 2 + z ^ 2) + 1 / 2 * (x * y + y * z + z * x) \u2265 x * y * z:= by\n  rw [h]\n  have h\u2082 : 0 < x * y * z := by positivity\n  field_simp [h, h\u2082]\n  ring_nf\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z), mul_nonneg hx.le hy.le,\n    mul_nonneg hy.le hz.le, mul_nonneg hz.le hx.le]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 3) :  1 / (x + y + z) * (x ^ 2 + y ^ 2 + z ^ 2) + 1 / 2 * (x * y + y * z + z * x) \u2265 x * y * z:= by\n  rw [h, add_comm]\n  have h\u2080 : 0 < x * y := by positivity\n  have h\u2081 : 0 < y * z := by positivity\n  have h\u2082 : 0 < z * x := by positivity\n  have h\u2083 : 0 < x * y * z := by positivity\n  field_simp [h\u2080, h\u2081, h\u2082, h\u2083]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 3) :  1 / (x + y + z) * (x ^ 2 + y ^ 2 + z ^ 2) + 1 / 2 * (x * y + y * z + z * x) \u2265 x * y * z:= by\n  rw [h]\n  have h\u2082 : 0 \u2264 (x - y) ^ 2 + (x - z) ^ 2 + (y - z) ^ 2 := by nlinarith\n  have h\u2083 : 0 \u2264 (x + y) ^ 2 + (x + z) ^ 2 + (y + z) ^ 2 := by nlinarith\n  nlinarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 3) :  1 / (x + y + z) * (x ^ 2 + y ^ 2 + z ^ 2) + 1 / 2 * (x * y + y * z + z * x) \u2265 x * y * z:= by\n  field_simp [h, mul_comm, mul_left_comm]\n  rw [le_div_iff (by positivity), mul_comm]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_nonneg hx.le hy.le, mul_nonneg hy.le hz.le, mul_nonneg hz.le hx.le,\n    mul_nonneg (sq_nonneg x) hz.le, mul_nonneg (sq_nonneg y) hz.le, mul_nonneg (sq_nonneg z) hx.le,\n    mul_nonneg (sq_nonneg (x - y)) hz.le, mul_nonneg (sq_nonneg (x - z)) hy.le, mul_nonneg (sq_nonneg (y - z)) hx.le]"
  ]
 },
 {
  "old": ": \u00ac\u2203 x y : \u2124, 2*x^2 - 5*y^2 = 7 := by",
  "new": "(x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y) := by\n  by_cases h : Nat.Coprime x y\n  left\n  exact h\n  right\n  exact h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y) := by\n  apply em\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto"
  ]
 },
 {
  "old": "(p : \u2115) (hp : Nat.Prime p) (h : p > 2) : \u2203 k : \u2115, p = 6*k+1 \u2228 p = 6*k-1 := by",
  "new": "(p q : \u2115) (hp : Nat.Prime p) (hq : Nat.Prime q) : Nat.Coprime p q \u2228 \u00ac Nat.Coprime p q := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (p q : \u2115) (hp : Nat.Prime p) (hq : Nat.Prime q) : \n     Nat.Coprime p q \u2228 \u00ac Nat.Coprime p q := by\n  by_cases h : Nat.Coprime p q <;> simp_all\n  <;> simp_all [Nat.Prime.coprime_iff_not_dvd]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (p q : \u2115) (hp : Nat.Prime p) (hq : Nat.Prime q) : \n     Nat.Coprime p q \u2228 \u00ac Nat.Coprime p q := by\n  by_cases h : Nat.Coprime p q <;> simp_all\n  <;> simp_all [Nat.Prime]\n  <;> tauto\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (p q : \u2115) (hp : Nat.Prime p) (hq : Nat.Prime q) : \n     Nat.Coprime p q \u2228 \u00ac Nat.Coprime p q := by\n  by_cases h : Nat.Coprime p q\n  exact Or.inl h\n  exact Or.inr h\n  <;> rfl\n  <;> try decide\n  <;> decide\n  <;> try decide\n  <;> decide\n  <;> try decide\n  <;> decide\n  <;> try decide\n  <;> decide\n  <;> try decide\n  <;> decide",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (p q : \u2115) (hp : Nat.Prime p) (hq : Nat.Prime q) : \n     Nat.Coprime p q \u2228 \u00ac Nat.Coprime p q := by\n  by_cases h : Nat.Coprime p q <;> simp_all\n  <;> simp [Nat.coprime_iff_gcd_eq_one, hq.ne_zero, hp.ne_zero]\n  <;> omega"
  ]
 },
 {
  "old": ": \u2200 i \u2265 1, i \u2264 i^2 \u2227 i^2 + i \u2264 2*i^2 \u2192 1/(i^2) \u2264 2/(i*(i+1)) := by",
  "new": "(i j : \u2115) (h : i * j = 1) : i.Coprime j \u2228 i = j:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i j : \u2115) (h : i * j = 1) : i.Coprime j \u2228 i = j:= by\n  rw [Nat.coprime_iff_gcd_eq_one]\n  rw [Nat.gcd_comm]\n  rw [Nat.gcd_eq_right]\n  aesop\n  aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i j : \u2115) (h : i * j = 1) : i.Coprime j \u2228 i = j:= by\n  rw [Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm]\n  have : i * j = 1 := h\n  rcases i with (_ | _ | i) <;> rcases j with (_ | _ | j) <;> simp_all [Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;> omega\n  <;> omega\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i j : \u2115) (h : i * j = 1) : i.Coprime j \u2228 i = j:= by\n  cases' Nat.eq_zero_or_pos i with hi hi <;> cases' Nat.eq_zero_or_pos j with hj hj <;>\n    simp_all [Nat.Coprime, Nat.mul_eq_zero]\n  all_goals omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i j : \u2115) (h : i * j = 1) : i.Coprime j \u2228 i = j:= by\n  rw [Nat.mul_comm] at h\n  rw [Nat.mul_comm] at h\n  cases' Nat.eq_zero_or_pos i with hi hi <;> cases' Nat.eq_zero_or_pos j with hj hj\n  all_goals simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  all_goals omega"
  ]
 },
 {
  "old": "(x y z: \u211d) (hx: x \u2265 0 \u2227 y \u2265 0 \u2227 z \u2265 0) :x^6 + y^6 + z^6 + 15/11 * x^2 * y^2 * z^2 \u2265 8/11 * (x^5 * y + x * y^5 + y^5 * z + y * z^5 + z^5 * x + z * x^5) := by",
  "new": "(i : \u2115) (hi : \u2200 k, 0 < k \u2192 1 < i ^ k) (h : 2 * \u2191(i ^ 2) = 3 * (i ^ 3 + 1)) : i = 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_mul_eq_one (i : \u2115) (hi : \u2200 k, 0 < k \u2192 1 < i ^ k)\n     (h : 2 * \u2191(i ^ 2) = 3 * (i ^ 3 + 1)) : i = 1:= by\n  by_contra! hi'\n  have h\u2081 := hi 1 (by omega)\n  have h\u2082 := hi 2 (by omega)\n  have h\u2083 := hi 3 (by omega)\n  have h\u2084 := hi 4 (by omega)\n  norm_num at h\u2081 h\u2082 h\u2083 h\u2084 <;> nlinarith\n  <;> try norm_num <;> nlinarith\n  <;> try norm_num <;> nlinarith\n  <;> try norm_num <;> nlinarith\n  <;> try norm_num <;> nlinarith\n  <;> try norm_num <;> nlinarith\n  <;> try norm_num <;> nlinarith\n  <;> try norm_num <;> nlinarith\n  <;> try norm_num <;> nlinarith\n  <;> try norm_num <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_mul_eq_one (i : \u2115) (hi : \u2200 k, 0 < k \u2192 1 < i ^ k)\n     (h : 2 * \u2191(i ^ 2) = 3 * (i ^ 3 + 1)) : i = 1:= by\n  have h2 := hi 2 (by norm_num)\n  have h3 := hi 3 (by norm_num)\n  nlinarith\n  <;> norm_num at h2 h3\n  <;> linarith\n  <;> norm_num at h2 h3\n  <;> linarith\n  <;> norm_num at h2 h3\n  <;> linarith\n  <;> norm_num at h2 h3\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_mul_eq_one (i : \u2115) (hi : \u2200 k, 0 < k \u2192 1 < i ^ k)\n     (h : 2 * \u2191(i ^ 2) = 3 * (i ^ 3 + 1)) : i = 1:= by\n  by_contra! h'\n  have h2 := hi 2 (by linarith)\n  have h3 := hi 3 (by linarith)\n  have h4 := hi 4 (by linarith)\n  nlinarith\n  <;> assumption\n  <;> try norm_num\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) : (2 * a / (b + c) + (Real.sqrt 5 - 1) / 2) * (2 * b / (c + a) + (Real.sqrt 5 - 1) / 2) * (2 * c / (a + b) + (Real.sqrt 5 - 1) / 2) \u2265 (1 + (Real.sqrt 5 - 1) / 2) ^ 3 := by",
  "new": "(a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) : Real.sqrt 5 \u2265 4 / 2 \u2227 Real.sqrt 5 \u2265 4 / 3 \u2227 Real.sqrt 5 \u2265 4 / 5 \u2227 0 \u2264 Real.sqrt 5 - 4 / 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210 (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) :\n        Real.sqrt 5 \u2265 4 / 2 \u2227  Real.sqrt 5 \u2265 4 / 3 \u2227 Real.sqrt 5 \u2265 4 / 5 \u2227 0 \u2264 Real.sqrt 5 - 4 / 3:= by\n  have h\u2080 : Real.sqrt 5 \u2265 4 / 2 := by\n    apply Real.le_sqrt_of_sq_le\n    norm_num\n  have h\u2081 : Real.sqrt 5 \u2265 4 / 3 := by\n    apply Real.le_sqrt_of_sq_le\n    norm_num\n  have h\u2082 : Real.sqrt 5 \u2265 4 / 5 := by\n    apply Real.le_sqrt_of_sq_le\n    norm_num\n  have h\u2083 : 0 \u2264 Real.sqrt 5 - 4 / 3 := by\n    apply sub_nonneg_of_le\n    apply Real.le_sqrt_of_sq_le\n    norm_num\n  exact \u27e8h\u2080, h\u2081, h\u2082, h\u2083\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210 (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) :\n        Real.sqrt 5 \u2265 4 / 2 \u2227  Real.sqrt 5 \u2265 4 / 3 \u2227 Real.sqrt 5 \u2265 4 / 5 \u2227 0 \u2264 Real.sqrt 5 - 4 / 3:= by\n  refine' \u27e8_, _, _, _\u27e9 <;> norm_num [Real.sqrt_le_sqrt] <;>\n  nlinarith [Real.sqrt_nonneg (5 : \u211d), sq_sqrt (show 0 \u2264 5 from by linarith)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210 (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) :\n        Real.sqrt 5 \u2265 4 / 2 \u2227  Real.sqrt 5 \u2265 4 / 3 \u2227 Real.sqrt 5 \u2265 4 / 5 \u2227 0 \u2264 Real.sqrt 5 - 4 / 3:= by\n  constructor\n  nlinarith [Real.sqrt_nonneg 5, Real.mul_self_sqrt (show 0 \u2264 5 by norm_num)]\n  constructor\n  nlinarith [Real.sqrt_nonneg 5, Real.mul_self_sqrt (show 0 \u2264 5 by norm_num)]\n  constructor\n  nlinarith [Real.sqrt_nonneg 5, Real.mul_self_sqrt (show 0 \u2264 5 by norm_num)]\n  nlinarith [Real.sqrt_nonneg 5, Real.mul_self_sqrt (show 0 \u2264 5 by norm_num)]\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210 (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) :\n        Real.sqrt 5 \u2265 4 / 2 \u2227  Real.sqrt 5 \u2265 4 / 3 \u2227 Real.sqrt 5 \u2265 4 / 5 \u2227 0 \u2264 Real.sqrt 5 - 4 / 3:= by\n  refine' \u27e8_, _, _, _\u27e9\n  \u00b7 exact Real.le_sqrt_of_sq_le (by norm_num)\n  \u00b7 exact Real.le_sqrt_of_sq_le (by norm_num)\n  \u00b7 exact Real.le_sqrt_of_sq_le (by norm_num)\n  \u00b7 exact sub_nonneg.mpr (Real.le_sqrt_of_sq_le (by norm_num))\n  <;> norm_num"
  ]
 },
 {
  "old": "(a b : \u2115) (hab : Nat.Coprime a b): Set.Infinite {n:\u2115 | n % a = b} := by",
  "new": "(a b c : \u2115) (h : a \u2260 0 \u2227 b \u2260 0 \u2227 c \u2260 0) : a * b = c * a \u2227 Nat.Coprime a b \u2194 b = c \u2227 Nat.Coprime a b := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_cancel_left_iff (a b c : \u2115) (h : a \u2260 0 \u2227 b \u2260 0 \u2227 c \u2260 0) :\n    a * b = c * a \u2227 Nat.Coprime a b \u2194 b = c \u2227 Nat.Coprime a b := by\n  aesop (add norm [mul_comm])\n  <;> simp_all [mul_comm]\n  <;> aesop (add norm [mul_comm])\n  <;> aesop (add norm [mul_comm])\n  <;> aesop (add norm [mul_comm])"
  ]
 },
 {
  "old": "(p k n x : \u2115) (hp : p.Prime) (hk : 0 < k) (hn : n = x^6 - 1) (hpx : p^k \u2223 n) : p^(3 * k) < 8 * n := by",
  "new": "(p m : \u2115) (hp : p.Prime) : Nat.Coprime p m \u2228 p \u2223 m := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p m : \u2115) (hp : p.Prime) : Nat.Coprime p m \u2228 p \u2223 m := by\n  refine' or_iff_not_imp_right.mpr fun h => _\n  exact hp.coprime_iff_not_dvd.mpr h\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl"
  ]
 },
 {
  "old": "(p : \u211d) (hp : 0 < p \u2227 p < 1) : (1 - p)^((1:\u211d)/2) + 2 * p * (1 - p) * (1 + p)^((1:\u211d)/2) \u2264 Real.sqrt 2 := by",
  "new": ": Real.sqrt 2 \u2265 1 + p - (1 + p^2) / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2265 1 + p - (1 + p^2) / 2:= by\n  have h\u2080 : (0 : \u211d) \u2264 (p - 1)^2 := sq_nonneg (p - 1)\n  have h\u2081 : Real.sqrt 2 \u2265 1 := by norm_num [Real.sqrt_nonneg, Real.le_sqrt_of_sq_le]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2265 1 + p - (1 + p^2) / 2:= by\n  have h\u2081 : Real.sqrt 2 \u2265 1:= by\n    norm_num [Real.le_sqrt]\n  have h\u2082 : Real.sqrt 2 \u2265 1 + p - (1 + p^2) / 2 := by\n    nlinarith [sq_nonneg (p - 1), Real.sqrt_nonneg 2, Real.mul_self_sqrt (show 0 \u2264 2 from by norm_num)]\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2265 1 + p - (1 + p^2) / 2:= by\n  rw [ge_iff_le]\n  have h\u2081 : 0 \u2264 Real.sqrt 2 := Real.sqrt_nonneg _\n  nlinarith [sq_sqrt (show 0 \u2264 2 from by linarith),\n    sq_nonneg (p - 1)]\n  <;> nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a / (Real.sqrt (b ^ 2 + c ^ 2)) + b / (Real.sqrt (c ^ 2 + a ^ 2)) + c / (Real.sqrt (a ^ 2 + b ^ 2))) \u2265 3 / Real.sqrt 2 := by",
  "new": ": Real.sqrt (Real.sqrt (1 + a ^ 2) ^ 2 + 1) \u2265 (1 + a) / Real.sqrt (1 + a ^ 2) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) ^ 2 + 1) \u2265 (1 + a) / Real.sqrt (1 + a ^ 2) := by\n  have h\u2082 : 0 \u2264 (a - 1) ^ 2 := by positivity\n  have h\u2083 : 0 \u2264 Real.sqrt (1 + a ^ 2) := by positivity\n  have h\u2084 : 0 \u2264 Real.sqrt (1 + a ^ 2) ^ 2 := by positivity\n  have h\u2085 : 0 \u2264 Real.sqrt (1 + a ^ 2) ^ 2 + 1 := by positivity\n  have h\u2086 : (1 + a) / Real.sqrt (1 + a ^ 2) \u2264 Real.sqrt (Real.sqrt (1 + a ^ 2) ^ 2 + 1) := by\n    apply le_sqrt_of_sq_le\n    apply le_of_sub_nonneg\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_sqrt (show 0 \u2264 1 + a ^ 2 from by positivity)]\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) ^ 2 + 1) \u2265 (1 + a) / Real.sqrt (1 + a ^ 2) := by\n  refine' le_sqrt_of_sq_le _\n  field_simp [add_comm]\n  rw [div_le_iff, mul_comm]\n  nlinarith [sq_sqrt (add_nonneg zero_le_one (sq_nonneg a)), sq_nonneg (a - 1)]\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) ^ 2 + 1) \u2265 (1 + a) / Real.sqrt (1 + a ^ 2) := by\n  have : 0 \u2264 (a - 1) ^ 2 := by positivity\n  have h\u2080 : 0 \u2264 Real.sqrt (1 + a ^ 2) := Real.sqrt_nonneg _\n  have h\u2081 : 0 \u2264 Real.sqrt (1 + a ^ 2) ^ 2 := by positivity\n  apply le_sqrt_of_sq_le\n  field_simp [h\u2080, h\u2081]\n  rw [div_le_iff]\n  nlinarith\n  positivity"
  ]
 },
 {
  "old": "(p : \u2115) (hp : 1 < p) : \u2211 i in Finset.range (p - 1), 2 ^ (2 * i) = (2 ^ (p - 1) - 1) / 3 := by",
  "new": "(n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two (n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by\n  induction' hn with n hn ih\n  all_goals simp_all [fib_add_two, Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two (n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by\n  induction' hn with k hk hk_1\n  all_goals simp_all [fib_add_two, Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two (n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by\n  induction' hn with n hn IH\n  all_goals simp_all [fib_add_two, Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two (n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by\n  induction' hn with n hn <;> simp_all [fib_add_two, Nat.coprime_iff_gcd_eq_one,\n    Nat.gcd_comm]\n  <;> omega\n  <;> aesop"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : a * b^2 * c / ((2 - a) * (1 - b) * (2 - c)) \u2264 (359 - 35 * Real.sqrt 105) / 32 := by",
  "new": ": Real.sqrt 105 \u2265 5 \u2227 (359 - 35 * Real.sqrt 105) / 32 \u2264 5:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 105 \u2265 5 \u2227 (359 - 35 * Real.sqrt 105) / 32 \u2264 5:= by\n  constructor\n  exact Real.le_sqrt_of_sq_le (by norm_num)\n  rw [div_le_iff] <;> norm_num <;> nlinarith [Real.sqrt_nonneg 105, Real.sq_sqrt (show 0 \u2264 105 from by norm_num)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 105 \u2265 5 \u2227 (359 - 35 * Real.sqrt 105) / 32 \u2264 5:= by\n  apply And.intro\n  case left =>\n    have h : 5 * 5 \u2264 105 := by norm_num\n    apply Real.le_sqrt_of_sq_le\n    linarith\n  case right =>\n    have h : 5 * 5 \u2264 105 := by norm_num\n    have h' : 0 \u2264 Real.sqrt 105 := Real.sqrt_nonneg 105\n    nlinarith [sq_sqrt (show (0 : \u211d) \u2264 105 from by positivity)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2081 : a \u2260 b) (h\u2082 : b \u2260 c) (h\u2083 : c \u2260 a) : a^2 / b^2 + 2 * a / c \u2265 9 * a^2 / (a * b + b * c + c * a) := by",
  "new": ": \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 a^2 / b^2 + 2 * a / c \u2265 9 * a^2 / (a * b + b * c + c * a) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 a^2 / b^2 + 2 * a / c \u2265 9 * a^2 / (a * b + b * c + c * a) := by\n  rintro a b c \u27e8a_pos, b_pos, c_pos\u27e9\n  have h\u2081 : 0 < a * b + b * c + c * a := by\n    nlinarith\n  have h\u2082 : 0 < b * c := by\n    nlinarith\n  have h\u2083 : 0 < c * a := by\n    nlinarith\n  have h\u2084 : 0 < a * b := by\n    nlinarith\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a * c - b * b), sq_nonneg (b * a - c * b), sq_nonneg (c * b - a * c),\n    sq_nonneg (b * c - a * b), sq_nonneg (a * b - c * a), sq_nonneg (c * a - b * c)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 a^2 / b^2 + 2 * a / c \u2265 9 * a^2 / (a * b + b * c + c * a) := by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  have h\u2080 : 0 < a * b := by positivity\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * a := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a * c - b * b), sq_nonneg (b * a - c * b),\n    sq_nonneg (c * b - a * c), sq_nonneg (b * c - a * a),\n    sq_nonneg (a * b - c * c), sq_nonneg (c * a - b * a)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 a^2 / b^2 + 2 * a / c \u2265 9 * a^2 / (a * b + b * c + c * a) := by\n  rintro a b c \u27e8h\u2081, h\u2082, h\u2083\u27e9\n  have h\u2084 : 0 < a * b + b * c + c * a := by positivity\n  have h\u2085 : 0 < b * c := by positivity\n  have h\u2086 : 0 < c * a := by positivity\n  have h\u2087 : 0 < a * b := by positivity\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a * c - b * b), sq_nonneg (b * a - c * b),\n    sq_nonneg (c * b - a * c), sq_nonneg (b * c - a * b), sq_nonneg (a * b - c * a),\n    sq_nonneg (c * a - b * c)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 a^2 / b^2 + 2 * a / c \u2265 9 * a^2 / (a * b + b * c + c * a) := by\n  rintro a b c \u27e8a_pos, b_pos, c_pos\u27e9\n  have h\u2081 : 0 < a * b := mul_pos a_pos b_pos\n  have h\u2082 : 0 < b * c := mul_pos b_pos c_pos\n  have h\u2083 : 0 < c * a := mul_pos c_pos a_pos\n  have h\u2084 : 0 < a * b + b * c + c * a := by linarith\n  have h\u2085 : 0 < a * b * c := by positivity\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084, h\u2085]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a * c - b * b), sq_nonneg (b * a - c * b), sq_nonneg (c * b - a * c),\n    sq_nonneg (b * c - a * b), sq_nonneg (a * b - c * a), sq_nonneg (c * a - b * c)]"
  ]
 },
 {
  "old": "(m n : \u2115) : 4*m*n-1 \u2223 (4*m^2-1)^2 \u2192 m = n := by",
  "new": "(m n : \u2115) (h : m * n = 1) : Nat.Coprime m n \u2228 m = n := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (m n : \u2115) (h : m * n = 1) :\n    Nat.Coprime m n \u2228 m = n := by\n  simp_all [Nat.coprime_iff_gcd_eq_one]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (m n : \u2115) (h : m * n = 1) :\n    Nat.Coprime m n \u2228 m = n := by\n  have : m * n = 1 := h\n  have hm : m \u2260 0 := fun hm => by simp_all\n  have hn : n \u2260 0 := fun hn => by simp_all\n  rw [Nat.coprime_iff_gcd_eq_one]\n  cases' Nat.eq_zero_or_pos (Nat.gcd m n) with h\u2080 h\u2080\n  all_goals simp_all\n  all_goals omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (m n : \u2115) (h : m * n = 1) :\n    Nat.Coprime m n \u2228 m = n := by\n  rw [Nat.mul_comm] at h\n  cases' n with n\n  all_goals simp_all"
  ]
 },
 {
  "old": "(a b c : \u211d) (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : a^2 * b * (a - b) + b^2 * c * (b - c) + c^2 * a * (c - a) \u2265 3 * (a + b - c) * c * (a - b) * (b - c) := by",
  "new": "(x y z : \u211d) (hx: 0 < x \u2227 0 < y \u2227 0 < z) (h : 0 < x + y + z) (hxy : x ^ 2 + y ^ 2 + z ^ 2 = 3 * x * y * z) : 3 * (x + y + z) * (x * y + y * z + z * x) * (x * z + y * z + x * y) / (x * y + y * z + z * x) \u2265 x + y + z:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx: 0 < x \u2227 0 < y \u2227 0 < z) (h : 0 < x + y + z) (hxy : x ^ 2 + y ^ 2 + z ^ 2 = 3 * x * y * z) : 3 * (x + y + z) * (x * y + y * z + z * x) * (x * z + y * z + x * y) / (x * y + y * z + z * x) \u2265 x + y + z:= by\n  obtain \u27e8h\u2080, h\u2081, h\u2082\u27e9 := hx\n  have h\u2083 : 0 < x * y := by positivity\n  have h\u2084 : 0 < y * z := by positivity\n  have h\u2085 : 0 < z * x := by positivity\n  have h\u2086 : 0 < x * y + y * z + z * x := by positivity\n  have h\u2087 : 0 < x * y * z := by positivity\n  have h\u2088 : (x * y + y * z + z * x) \u2260 0 := by positivity\n  have h\u2089 : 3 * (x + y + z) * (x * y + y * z + z * x) * (x * z + y * z + x * y) / (x * y + y * z + z * x) = 3 * (x + y + z) * (x * z + y * z + x * y) := by\n    field_simp [h\u2088]\n    ring\n  rw [h\u2089]\n  have h\u2081\u2080 : 3 * (x + y + z) * (x * z + y * z + x * y) \u2265 x + y + z := by\n    nlinarith [mul_self_nonneg (x - y), mul_self_nonneg (y - z), mul_self_nonneg (z - x)]\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx: 0 < x \u2227 0 < y \u2227 0 < z) (h : 0 < x + y + z) (hxy : x ^ 2 + y ^ 2 + z ^ 2 = 3 * x * y * z) : 3 * (x + y + z) * (x * y + y * z + z * x) * (x * z + y * z + x * y) / (x * y + y * z + z * x) \u2265 x + y + z:= by\n  rcases hx with \u27e8hx, hy, hz\u27e9\n  have h\u2081 : 0 < x * y := by positivity\n  have h\u2082 : 0 < y * z := by positivity\n  have h\u2083 : 0 < z * x := by positivity\n  have h\u2084 : 0 < x * y * z := by positivity\n  have h\u2085 : 0 < x * y * (y * z + z * x + x * y) := by positivity\n  have h\u2086 : 0 < y * z * (z * x + x * y + y * z) := by positivity\n  have h\u2087 : 0 < z * x * (x * y + y * z + z * x) := by positivity\n  field_simp [h\u2085, h\u2086, h\u2087]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx: 0 < x \u2227 0 < y \u2227 0 < z) (h : 0 < x + y + z) (hxy : x ^ 2 + y ^ 2 + z ^ 2 = 3 * x * y * z) : 3 * (x + y + z) * (x * y + y * z + z * x) * (x * z + y * z + x * y) / (x * y + y * z + z * x) \u2265 x + y + z:= by\n  obtain \u27e8h\u2081, \u27e8h\u2082, h\u2083\u27e9\u27e9 := hx\n  have h\u2084 : 0 < x * y + y * z + z * x := by positivity\n  have h\u2085 : 0 < x * z + y * z + x * y := by positivity\n  have h\u2086 : 3 * (x + y + z) * (x * y + y * z + z * x) * (x * z + y * z + x * y) / (x * y + y * z + z * x) \u2265 x + y + z := by\n    have h\u2087 : 3 * (x + y + z) * (x * z + y * z + x * y) \u2265 x + y + z := by\n      nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n    have h\u2088 : 0 < x * y + y * z + z * x := by positivity\n    have h\u2089 : 0 < x * z + y * z + x * y := by positivity\n    have h\u2081\u2080 : 3 * (x + y + z) * (x * y + y * z + z * x) * (x * z + y * z + x * y) / (x * y + y * z + z * x) \u2265 x + y + z := by\n      apply le_of_sub_nonneg\n      field_simp\n      rw [le_div_iff, mul_comm]\n      nlinarith\n      positivity\n    exact h\u2081\u2080\n  exact h\u2086"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (habc : a + b + c = 3) : 1 / a + 1 / b + 1 / c + 3 / 2 * a * b * c \u2265 9 / 2 := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 3 \u2192 1 / a + 1 / b + 1 / c + 3 / 2 * a * b * c \u2265 9 / 2 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 3 \u2192 1 / a + 1 / b + 1 / c + 3 / 2 * a * b * c \u2265 9 / 2  := by\n  intro a b c habc\n  rcases habc with \u27e8ha, hb, hc, h\u27e9\n  have h\u2080 : 0 < a * b := by positivity\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * a := by positivity\n  have h\u2083 : 0 < a * b * c := by positivity\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b),\n    mul_self_nonneg (a * b * c - 1)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : (a / (b + c) + b / (c + a) + c / (a + b) + abc / (2 * (a ^ 3 + b ^ 3 + c ^ 3))) \u2265 5 / 3 := by",
  "new": ": \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 a ^ 2 / (b * c) + b ^ 2 / (c * a) + c ^ 2 / (a * b) + (3 / 2) * (a ^ 2 + b ^ 2 + c ^ 2) / (a ^ 2 + b ^ 2 + c ^ 2) \u2265 9 / 5:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192\n   a ^ 2 / (b * c) + b ^ 2 / (c * a) + c ^ 2 / (a * b) + (3 / 2) * (a ^ 2 + b ^ 2 + c ^ 2) / (a ^ 2 + b ^ 2 + c ^ 2) \u2265 9 / 5:= by\n  rintro a b c \u27e8h\u2080, h\u2081, h\u2082\u27e9\n  have h\u2083 : 0 < a * b := by positivity\n  have h\u2084 : 0 < b * c := by positivity\n  have h\u2085 : 0 < c * a := by positivity\n  have h\u2086 : 0 < (b * c) * (c * a) := by positivity\n  have h\u2087 : 0 < (c * a) * (a * b) := by positivity\n  have h\u2088 : 0 < (a * b) * (b * c) := by positivity\n  field_simp [h\u2080.ne', h\u2081.ne', h\u2082.ne', h\u2083.ne', h\u2084.ne', h\u2085.ne', h\u2086.ne', h\u2087.ne', h\u2088.ne']\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    mul_self_nonneg (a ^ 2 - 2 * a * b + b ^ 2),\n    mul_self_nonneg (b ^ 2 - 2 * b * c + c ^ 2),\n    mul_self_nonneg (c ^ 2 - 2 * c * a + a ^ 2)]\n  positivity\n  positivity\n  <;> nlinarith\n  <;> positivity"
  ]
 },
 {
  "old": "(a b : \u211d) (ha : 0 < a) (hb : 0 < b) (hab : 1 / a + 4 / b = 3) : a + b ^ 3 \u2265 3 + 16 / (3 * Real.sqrt 3) := by",
  "new": ": Real.sqrt 3 \u2264 3 / 2 * Real.sqrt (3 * 3 ^ 3) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 3 \u2264 3 / 2 * Real.sqrt (3 * 3 ^ 3) := by\n  have : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg 3\n  have : 0 \u2264 Real.sqrt (3 * 3 ^ 3) := Real.sqrt_nonneg _\n  have : 0 \u2264 3 / 2 * Real.sqrt (3 * 3 ^ 3) := by positivity\n  nlinarith [sq_sqrt (show 0 \u2264 3 by norm_num), sq_sqrt (show 0 \u2264 3 * 3 ^ 3 by positivity),\n    mul_self_nonneg (3 / 2 * Real.sqrt (3 * 3 ^ 3))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 3 \u2264 3 / 2 * Real.sqrt (3 * 3 ^ 3) := by\n  have h\u2081 : 0 \u2264 Real.sqrt (3 * 3 ^ 3) := Real.sqrt_nonneg _\n  have h\u2082 : Real.sqrt 3 \u2264 3 / 2 * Real.sqrt (3 * 3 ^ 3) := by\n    rw [Real.sqrt_le_left (by positivity)]\n    ring_nf\n    norm_num\n  exact h\u2082",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 3 \u2264 3 / 2 * Real.sqrt (3 * 3 ^ 3) := by\n  have h\u2080 : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg 3\n  have h\u2081 : 0 \u2264 3 ^ 3 := by positivity\n  apply le_of_pow_le_pow_left two_ne_zero (by positivity)\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 by norm_num), sq_sqrt (show (0 : \u211d) \u2264 3 * 3 ^ 3 by positivity)]"
  ]
 },
 {
  "old": "(x : \u211d) (hx : 0 < x) : x / Real.log (1 + x) < 1 + x / 2 - x ^ 2 / 12 + x ^ 3 / 24 := by",
  "new": "{x : \u211d} (h\u2080 : 0 < x) (h\u2081 : x \u2264 1) : x / Real.log (1 + x) \u2265 1 - x ^ 2 / 2 + x ^ 3 / 3 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {x : \u211d} (h\u2080 : 0 < x) (h\u2081 : x \u2264 1) :\n    x / Real.log (1 + x) \u2265 1 - x ^ 2 / 2 + x ^ 3 / 3 := by\n  have h\u2082 : Real.log (1 + x) \u2264 x := by\n    linarith [Real.log_le_sub_one_of_pos (by linarith : 0 < 1 + x)]\n  have h\u2083 : 0 < Real.log (1 + x) := Real.log_pos (by linarith)\n  have h\u2084 : 0 < x ^ 2 / 2 := by positivity\n  have h\u2085 : 0 < x ^ 3 / 3 := by positivity\n  field_simp [h\u2083.ne']\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - Real.log (1 + x)), mul_self_nonneg (x - 1 / 2),\n    mul_nonneg (sub_nonneg.mpr h\u2081) h\u2084.le, mul_nonneg (sub_nonneg.mpr h\u2081) h\u2085.le,\n    mul_nonneg (sub_nonneg.mpr h\u2081) (sq_nonneg (x - 1 / 2))]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (hab : a + b + c = 3) : a / b + b / c + c / a + a * b * c \u2265 4 := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 3 \u2192 a * b ^ 2 + b * c ^ 2 + c * a ^ 2 \u2265 a * b * c * 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 3 \u2192 a * b ^ 2 + b * c ^ 2 + c * a ^ 2 \u2265 a * b * c * 2:= by\n  rintro a b c \u27e8a_pos, b_pos, c_pos, a_b_c_sum\u27e9\n  have h\u2080 : 0 < a * b := mul_pos a_pos b_pos\n  have h\u2081 : 0 < b * c := mul_pos b_pos c_pos\n  have h\u2082 : 0 < c * a := mul_pos c_pos a_pos\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a + b + c), mul_self_nonneg (a - b + b - c + c - a),\n    mul_self_nonneg (a + b + b + c + c + a)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 3 \u2192 a * b ^ 2 + b * c ^ 2 + c * a ^ 2 \u2265 a * b * c * 2:= by\n  rintro a b c \u27e8a_pos, b_pos, c_pos, a_b_c_sum\u27e9\n  have h\u2081 : 0 < a * b := by positivity\n  have h\u2082 : 0 < b * c := by positivity\n  have h\u2083 : 0 < a * c := by positivity\n  have h\u2084 : 0 < a * b * c := by positivity\n  have h\u2085 : 0 < a * b * c * 2 := by positivity\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (a - c),\n    mul_self_nonneg (a - b - c), mul_self_nonneg (b - c - a), mul_self_nonneg (a - c - b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 3 \u2192 a * b ^ 2 + b * c ^ 2 + c * a ^ 2 \u2265 a * b * c * 2:= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  cases' le_total a b with hab hab <;>\n  cases' le_total b c with hbc hbc <;>\n  cases' le_total a c with hac hac <;>\n  simp_all only [mul_comm, mul_left_comm, mul_assoc] <;>\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (a - c),\n    sq_nonneg (a - b - c), sq_nonneg (b - a - c), sq_nonneg (c - a - b)]\n  <;>\n  linarith\n  <;>\n  linarith\n  <;>\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 3 \u2192 a * b ^ 2 + b * c ^ 2 + c * a ^ 2 \u2265 a * b * c * 2:= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  cases' le_total a b with hab hab <;>\n    cases' le_total b c with hbc hbc <;>\n      cases' le_total c a with hac hac <;>\n        simp_all only [mul_comm, mul_left_comm, mul_assoc] <;>\n          nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n            mul_nonneg (ha.le) (hb.le), mul_nonneg (hb.le) (hc.le), mul_nonneg (hc.le) (ha.le)]\n  <;> nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) : (a + b) * (b + c) * (c + a) \u2265 (8 / 9) * (a + b + c) * (a * b + b * c + c * a) := by",
  "new": "(x y z : \u211d) : 2 * Real.sqrt (x * y) + 2 * Real.sqrt (y * z) + 2 * Real.sqrt (z * x) \u2264 6 * (Real.sqrt (x ^ 2 + y ^ 2) + Real.sqrt (y ^ 2 + z ^ 2) + Real.sqrt (z ^ 2 + x ^ 2)) / 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) : 2 * Real.sqrt (x * y) + 2 * Real.sqrt (y * z) + 2 * Real.sqrt (z * x) \u2264 6 * (Real.sqrt (x ^ 2 + y ^ 2) + Real.sqrt (y ^ 2 + z ^ 2) + Real.sqrt (z ^ 2 + x ^ 2)) / 3:= by\n  have : Real.sqrt (x ^ 2 + y ^ 2) \u2265 Real.sqrt (x * y) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x + y)]\n  have : Real.sqrt (y ^ 2 + z ^ 2) \u2265 Real.sqrt (y * z) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (y - z), sq_nonneg (y + z)]\n  have : Real.sqrt (z ^ 2 + x ^ 2) \u2265 Real.sqrt (z * x) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (z - x), sq_nonneg (z + x)]\n  nlinarith [Real.sqrt_nonneg (x ^ 2 + y ^ 2), Real.sqrt_nonneg (y ^ 2 + z ^ 2),\n    Real.sqrt_nonneg (z ^ 2 + x ^ 2), Real.sqrt_nonneg (x * y), Real.sqrt_nonneg (y * z),\n    Real.sqrt_nonneg (z * x)]\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) : 2 * Real.sqrt (x * y) + 2 * Real.sqrt (y * z) + 2 * Real.sqrt (z * x) \u2264 6 * (Real.sqrt (x ^ 2 + y ^ 2) + Real.sqrt (y ^ 2 + z ^ 2) + Real.sqrt (z ^ 2 + x ^ 2)) / 3:= by\n  have h\u2080 : Real.sqrt (x * y) \u2264 (Real.sqrt (x ^ 2 + y ^ 2)) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (x - y)]\n  have h\u2081 : Real.sqrt (y * z) \u2264 (Real.sqrt (y ^ 2 + z ^ 2)) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (y - z)]\n  have h\u2082 : Real.sqrt (z * x) \u2264 (Real.sqrt (z ^ 2 + x ^ 2)) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (z - x)]\n  nlinarith [sq_nonneg (x + y + z),\n    Real.sqrt_nonneg (x ^ 2 + y ^ 2), Real.sqrt_nonneg (y ^ 2 + z ^ 2), Real.sqrt_nonneg (z ^ 2 + x ^ 2),\n    Real.sqrt_nonneg (x * y), Real.sqrt_nonneg (y * z), Real.sqrt_nonneg (z * x)]\n  <;> norm_num"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 3) : 2 * Real.sqrt (x + Real.sqrt y) + 2 * Real.sqrt (y + Real.sqrt z) + 2 * Real.sqrt (z + Real.sqrt x) \u2264 Real.sqrt (8 + x - y) + Real.sqrt (8 + y - z) + Real.sqrt (8 + z - x) \u2227 Real.sqrt (8 + x - y) + Real.sqrt (8 + y - z) + Real.sqrt (8 + z - x) \u2264 6 * Real.sqrt 2 := by",
  "new": "(x y : \u2115) (h : x ^ 2 + y ^ 2 \u2264 2 * x * y + 1) : Nat.Coprime x y \u2228 \u00acNat.Coprime x y \u2194 x ^ 2 + y ^ 2 \u2264 2 * x * y + 1 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2264 2 * x * y + 1) :\n    Nat.Coprime x y \u2228 \u00acNat.Coprime x y \u2194 x ^ 2 + y ^ 2 \u2264 2 * x * y + 1 := by\n  by_cases h\u2082 : x.Coprime y\n  <;> by_cases h\u2081 : x = 0 \u2227 y = 0\n  <;> simp_all [Nat.coprime_iff_gcd_eq_one, Nat.gcd_eq_zero_iff]\n  <;> norm_num\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2264 2 * x * y + 1) :\n    Nat.Coprime x y \u2228 \u00acNat.Coprime x y \u2194 x ^ 2 + y ^ 2 \u2264 2 * x * y + 1 := by\n  cases' Nat.eq_zero_or_pos x with hx hx <;>\n    cases' Nat.eq_zero_or_pos y with hy hy <;>\n    simp_all [Nat.coprime_iff_gcd_eq_one, Nat.pow_succ, Nat.div_eq_of_lt, Nat.gcd_eq_left,\n      Nat.gcd_eq_right] <;>\n    omega\n  <;>\n    omega\n  <;>\n    omega\n  <;>\n    omega\n  <;>\n    omega\n  <;>\n    omega\n  <;>\n    omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2264 2 * x * y + 1) :\n    Nat.Coprime x y \u2228 \u00acNat.Coprime x y \u2194 x ^ 2 + y ^ 2 \u2264 2 * x * y + 1 := by\n  by_cases h\u2080 : x ^ 2 + y ^ 2 \u2264 2 * x * y + 1 <;>\n    by_cases h\u2081 : Nat.Coprime x y <;>\n    simp_all\n  all_goals\n    nlinarith\n  <;>\n    nlinarith\n  <;>\n    nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) : (a + b + c) * (a * b + b * c + c * a) / ((a + b) * (b + c) * (c + a)) \u2265 1 + (b + c - a) * (a + c - b) * (a + b - c) / (8 * a * b * c) := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 (a + b + c) * (a * b + b * c + c * a) / ((a + b) * (b + c) * (c + a)) \u2265 1 + (b + c - a) * (a + c - b) * (a + b - c) / (8 * a * b * c) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 (a + b + c) * (a * b + b * c + c * a) / ((a + b) * (b + c) * (c + a)) \u2265 1 + (b + c - a) * (a + c - b) * (a + b - c) / (8 * a * b * c) := by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  field_simp [ha, hb, hc, mul_comm]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le,\n    mul_nonneg (sq_nonneg (a - b)) hc.le, mul_nonneg (sq_nonneg (b - c)) ha.le, mul_nonneg (sq_nonneg (c - a)) hb.le,\n    mul_nonneg (sq_nonneg (a - b)) hb.le, mul_nonneg (sq_nonneg (b - c)) hc.le, mul_nonneg (sq_nonneg (c - a)) ha.le,\n    mul_nonneg (sq_nonneg (a + b - c)) hc.le, mul_nonneg (sq_nonneg (b + c - a)) ha.le, mul_nonneg (sq_nonneg (c + a - b)) hb.le,\n    mul_nonneg (sq_nonneg (a + b - c)) ha.le, mul_nonneg (sq_nonneg (b + c - a)) hb.le, mul_nonneg (sq_nonneg (c + a - b)) hc.le]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 (a + b + c) * (a * b + b * c + c * a) / ((a + b) * (b + c) * (c + a)) \u2265 1 + (b + c - a) * (a + c - b) * (a + b - c) / (8 * a * b * c) := by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  field_simp [ha.ne', hb.ne', hc.ne']\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg ha.le hc.le, mul_nonneg (sq_nonneg (a - b)) hc.le, mul_nonneg (sq_nonneg (b - c)) ha.le, mul_nonneg (sq_nonneg (c - a)) hb.le, mul_nonneg (sq_nonneg (a - b)) ha.le, mul_nonneg (sq_nonneg (b - c)) hb.le, mul_nonneg (sq_nonneg (c - a)) hc.le,\n    mul_nonneg (sq_nonneg (a + b - c)) hc.le, mul_nonneg (sq_nonneg (b + c - a)) ha.le,\n    mul_nonneg (sq_nonneg (c + a - b)) hb.le, mul_nonneg (sq_nonneg (a + b - c)) hb.le,\n    mul_nonneg (sq_nonneg (b + c - a)) hc.le, mul_nonneg (sq_nonneg (c + a - b)) ha.le]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a / (b + c) + (a + b) / c) * (b / (c + a) + (b + c) / a) * (c / (a + b) + (c + a) / b) \u2265 125 / 8 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x / (2 * y) + (2 * x) / z) * (y / (2 * z) + (2 * y) / x) * (z / (2 * x) + (2 * z) / y) \u2265 125 / 8:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   (x / (2 * y) + (2 * x) / z) * (y / (2 * z) + (2 * y) / x) * (z / (2 * x) + (2 * z) / y) \u2265 125 / 8:= by\n  have h\u2081 : 0 < x * y := by positivity\n  have h\u2082 : 0 < y * z := by positivity\n  have h\u2083 : 0 < z * x := by positivity\n  have h\u2084 : 0 < (x * y) * (y * z) := by positivity\n  have h\u2085 : 0 < (y * z) * (z * x) := by positivity\n  have h\u2086 : 0 < (z * x) * (x * y) := by positivity\n  have h\u2087 : 0 < x * y * z := by positivity\n  have h\u2088 : 0 < x * y * z * (x * y) := by positivity\n  have h\u2089 : 0 < x * y * z * (y * z) := by positivity\n  have h\u2081\u2080 : 0 < x * y * z * (z * x) := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x), sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y)]"
  ]
 },
 {
  "old": "(a b c x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (a * x / (y + z) + b * y / (z + x) + c * z / (x + y)) \u2265 (2 * Real.sqrt (a * b) + 2 * Real.sqrt (b * c) + 2 * Real.sqrt (c * a) - a - b - c) / 2 := by",
  "new": ": Real.sqrt (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) \u2264 1 + (a ^ 2 + b ^ 2) / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) \u2264 1 + (a ^ 2 + b ^ 2) / 2:= by\n  have h\u2080 : 0 \u2264 (a ^ 2 - b ^ 2) ^ 2 := by positivity\n  have h\u2081 : Real.sqrt (1 + a ^ 2) \u2265 0 := Real.sqrt_nonneg (1 + a ^ 2)\n  have h\u2082 : Real.sqrt (1 + b ^ 2) \u2265 0 := Real.sqrt_nonneg (1 + b ^ 2)\n  have h\u2083 : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) \u2265 0 :=\n    mul_nonneg h\u2081 h\u2082\n  have h\u2084 : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) \u2264 1 + a ^ 2 + b ^ 2 := by\n    nlinarith [sq_sqrt (show 0 \u2264 1 + a ^ 2 from by positivity),\n      sq_sqrt (show 0 \u2264 1 + b ^ 2 from by positivity),\n      sq_nonneg (a ^ 2 - b ^ 2)]\n  have h\u2085 : Real.sqrt (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) \u2264 1 + (a ^ 2 + b ^ 2) / 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith\n  exact h\u2085\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) \u2264 1 + (a ^ 2 + b ^ 2) / 2:= by\n  have h\u2080 : 0 \u2264 (a ^ 2 + b ^ 2) / 2 := by positivity\n  have h\u2081 : Real.sqrt (1 + a ^ 2) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2082 : Real.sqrt (1 + b ^ 2) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2083 : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) \u2264 (1 + a ^ 2 + 1 + b ^ 2) / 2 := by\n    nlinarith [sq_sqrt (show 0 \u2264 1 + a ^ 2 by positivity), sq_sqrt (show 0 \u2264 1 + b ^ 2 by positivity),\n      mul_self_nonneg (a ^ 2 - b ^ 2), mul_self_nonneg (1 - a ^ 2), mul_self_nonneg (1 - b ^ 2)]\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  \u00b7 positivity\n  \u00b7 nlinarith [h\u2081, h\u2082, h\u2083]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) (h : a + b + c \u2264 1) : (1 + a) / (1 - a) + (1 + b) / (1 - b) + (1 + c) / (1 - c) \u2264 (3 + a + b + c) / (3 - (a + b + c)) * (b / a + c / b + a / c) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z \u2264 3) : 1 / (x + y) + 1 / (y + z) + 1 / (z + x) \u2264 9 / (x + y + z):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z \u2264 3) :\n    1 / (x + y) + 1 / (y + z) + 1 / (z + x) \u2264 9 / (x + y + z):= by\n  ring_nf\n  field_simp [add_comm] at h\u2082 \u22a2\n  rw [div_le_iff (by positivity)] at h\u2082 \u22a2\n  nlinarith [sq_nonneg (x + y + z), sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]"
  ]
 },
 {
  "old": "(k : \u2115) : Nat.gcd (4 * k ^ 2 + 1) (2 * k + 1) = 1 := by",
  "new": "{m n k : \u2115} (hn : n \u2260 0) (hk : k \u2260 0) : Nat.Coprime (n * k) m \u2194 Nat.Coprime n m \u2227 Nat.Coprime k m := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_mul_iff_right {m n k : \u2115} (hn : n \u2260 0) (hk : k \u2260 0) :\n    Nat.Coprime (n * k) m \u2194 Nat.Coprime n m \u2227 Nat.Coprime k m := by\n  rw [Nat.coprime_mul_iff_left] <;> simp [hn, hk]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_mul_iff_right {m n k : \u2115} (hn : n \u2260 0) (hk : k \u2260 0) :\n    Nat.Coprime (n * k) m \u2194 Nat.Coprime n m \u2227 Nat.Coprime k m := by\n  rw [Nat.coprime_mul_iff_left] <;> simp [hn, hk]\n  <;> rfl\n  <;> simp [Nat.coprime_comm]\n  <;> rfl\n  <;> simp [Nat.coprime_comm]\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_mul_iff_right {m n k : \u2115} (hn : n \u2260 0) (hk : k \u2260 0) :\n    Nat.Coprime (n * k) m \u2194 Nat.Coprime n m \u2227 Nat.Coprime k m := by\n  simp only [Nat.coprime_mul_iff_left, Nat.mul_eq_zero, hn, hk, not_false_eq_true, and_true]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_mul_iff_right {m n k : \u2115} (hn : n \u2260 0) (hk : k \u2260 0) :\n    Nat.Coprime (n * k) m \u2194 Nat.Coprime n m \u2227 Nat.Coprime k m := by\n  simp [Nat.coprime_mul_iff_left, hn, hk]\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop"
  ]
 },
 {
  "old": "(x y z : \u211d) : (Real.sqrt (y + z) * (Real.sqrt x + Real.sqrt y) + Real.sqrt (z + x) * (Real.sqrt y + Real.sqrt z) + Real.sqrt (x + y) * (Real.sqrt z + Real.sqrt x)) \u2264 (3 * Real.sqrt 3 / 2) * (x + y) * (y + z) * (z + x) / Real.sqrt (x * y * z * (x + y + z)) := by",
  "new": "(x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) : Real.sqrt (y * z) * Real.sqrt (z * x) * Real.sqrt (x * y) \u2264 (x + y) * (y + z) * (z + x) / 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) :\n     Real.sqrt (y * z) * Real.sqrt (z * x) * Real.sqrt (x * y) \u2264 (x + y) * (y + z) * (z + x) / 4:= by\n  have : 0 \u2264 x * y := by positivity\n  have : 0 \u2264 y * z := by positivity\n  have : 0 \u2264 z * x := by positivity\n  have h\u2080 : Real.sqrt (y * z) \u2264 (y + z) / 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 linarith [sq_nonneg (y - z)]\n  have h\u2081 : Real.sqrt (z * x) \u2264 (z + x) / 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 linarith [sq_nonneg (z - x)]\n  have h\u2082 : Real.sqrt (x * y) \u2264 (x + y) / 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 linarith [sq_nonneg (x - y)]\n  calc\n    Real.sqrt (y * z) * Real.sqrt (z * x) * Real.sqrt (x * y) \u2264\n    ((y + z) / 2) * ((z + x) / 2) * ((x + y) / 2) := by gcongr\n    _ = (y + z) * (z + x) * (x + y) / 8 := by ring\n    _ \u2264 (x + y) * (y + z) * (z + x) / 4 := by\n      nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) :\n     Real.sqrt (y * z) * Real.sqrt (z * x) * Real.sqrt (x * y) \u2264 (x + y) * (y + z) * (z + x) / 4:= by\n  have h0 : 0 \u2264 x * y := by positivity\n  have h1 : 0 \u2264 y * z := by positivity\n  have h2 : 0 \u2264 z * x := by positivity\n  have h3 : Real.sqrt (y * z) \u2264 (y + z) / 2 := by\n    nlinarith [sq_sqrt (show (0 : \u211d) \u2264 y * z from h1), sq_nonneg (y - z)]\n  have h4 : Real.sqrt (z * x) \u2264 (z + x) / 2 := by\n    nlinarith [sq_sqrt (show (0 : \u211d) \u2264 z * x from h2), sq_nonneg (z - x)]\n  have h5 : Real.sqrt (x * y) \u2264 (x + y) / 2 := by\n    nlinarith [sq_sqrt (show (0 : \u211d) \u2264 x * y from h0), sq_nonneg (x - y)]\n  calc\n    Real.sqrt (y * z) * Real.sqrt (z * x) * Real.sqrt (x * y) \u2264\n      ((y + z) / 2) * ((z + x) / 2) * ((x + y) / 2) := by gcongr <;> assumption\n    _ = (y + z) * (z + x) * (x + y) / 8 := by ring\n    _ \u2264 (x + y) * (y + z) * (z + x) / 4 := by\n      nlinarith [mul_self_nonneg (x - y), mul_self_nonneg (y - z), mul_self_nonneg (z - x)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) :\n     Real.sqrt (y * z) * Real.sqrt (z * x) * Real.sqrt (x * y) \u2264 (x + y) * (y + z) * (z + x) / 4:= by\n  have : 0 \u2264 x * y := by positivity\n  have : 0 \u2264 y * z := by positivity\n  have : 0 \u2264 z * x := by positivity\n  have h\u2081 : Real.sqrt (y * z) \u2264 (y + z) / 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor <;> nlinarith [sq_nonneg (y - z)]\n  have h\u2082 : Real.sqrt (z * x) \u2264 (z + x) / 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor <;> nlinarith [sq_nonneg (z - x)]\n  have h\u2083 : Real.sqrt (x * y) \u2264 (x + y) / 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor <;> nlinarith [sq_nonneg (x - y)]\n  calc\n    Real.sqrt (y * z) * Real.sqrt (z * x) * Real.sqrt (x * y) \u2264\n        ((y + z) / 2) * ((z + x) / 2) * ((x + y) / 2) := by gcongr <;> assumption\n    _ = (y + z) * (z + x) * (x + y) / 8 := by ring\n    _ \u2264 (x + y) * (y + z) * (z + x) / 4 := by\n      ring_nf\n      nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 3) : a / b + b / c + c / a + 2 * a * b * c \u2265 5 := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 3 \u2192 a * b ^ 2 + b * c ^ 2 + c * a ^ 2 \u2265 a * b * c * 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 3 \u2192 a * b ^ 2 + b * c ^ 2 + c * a ^ 2 \u2265 a * b * c * 2:= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  simp only [mul_assoc, mul_comm, mul_left_comm]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (a - c), mul_pos ha hb, mul_pos hb hc, mul_pos hc ha, mul_pos (mul_pos ha hb) hc, mul_pos (mul_pos hb hc) ha, mul_pos (mul_pos hc ha) hb]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 3 \u2192 a * b ^ 2 + b * c ^ 2 + c * a ^ 2 \u2265 a * b * c * 2:= by\n  intro a b c h\u2080\n  cases' h\u2080 with h\u2081 h\u2081\n  cases' h\u2081 with h\u2082 h\u2082\n  cases' h\u2082 with h\u2083 h\u2084\n  have h\u2085 : 0 < b * c := by nlinarith\n  have h\u2086 : 0 < a * b := by nlinarith\n  have h\u2087 : 0 < c * a := by nlinarith\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 3 \u2192 a * b ^ 2 + b * c ^ 2 + c * a ^ 2 \u2265 a * b * c * 2:= by\n  intro a b c h\u2080\n  ring_nf\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_pos h\u2080.1 h\u2080.2.1, mul_pos h\u2080.2.1 h\u2080.2.2.1, mul_pos h\u2080.1 h\u2080.2.2.1,\n    mul_pos (mul_pos h\u2080.1 h\u2080.2.1) h\u2080.2.2.1, mul_pos (mul_pos h\u2080.2.1 h\u2080.2.2.1) h\u2080.1,\n    mul_pos (mul_pos h\u2080.2.2.1 h\u2080.1) h\u2080.2.1]\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 3 \u2192 a * b ^ 2 + b * c ^ 2 + c * a ^ 2 \u2265 a * b * c * 2:= by\n  intro a b c h\u2081\n  cases' le_total a b with h\u2082 h\u2082 <;>\n  cases' le_total b c with h\u2083 h\u2083 <;>\n  cases' le_total a c with h\u2084 h\u2084 <;>\n  simp_all only [mul_comm]\n  all_goals nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a)]\n  <;>\n  linarith\n  <;>\n  linarith\n  <;>\n  linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (h\u2081 : a + b + c = 5) (h\u2082 : a * b * c = 7) : \u2016a\u2016 + \u2016b\u2016 + \u2016c\u2016 \u2265 9 := by",
  "new": "(x y z : \u211d) (h : x*y*z \u2264 1) : \u2016x\u2016 + \u2016y\u2016 + \u2016z\u2016 \u2265 3 * (x*y*z)^(1/3) - 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem norm_ge_of_mul_le (x y z : \u211d) (h : x*y*z \u2264 1) : \u2016x\u2016 + \u2016y\u2016 + \u2016z\u2016 \u2265 3 * (x*y*z)^(1/3) - 3:= by\n  eta_reduce at *\n  ring_nf\n  nlinarith [norm_nonneg x, norm_nonneg y, norm_nonneg z,\n    mul_self_nonneg (\u2016x\u2016 + \u2016y\u2016 + \u2016z\u2016),\n    mul_self_nonneg (\u2016x\u2016 - \u2016y\u2016),\n    mul_self_nonneg (\u2016x\u2016 - \u2016z\u2016),\n    mul_self_nonneg (\u2016y\u2016 - \u2016z\u2016)]\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem norm_ge_of_mul_le (x y z : \u211d) (h : x*y*z \u2264 1) : \u2016x\u2016 + \u2016y\u2016 + \u2016z\u2016 \u2265 3 * (x*y*z)^(1/3) - 3:= by\n  simp [h, le_refl]\n  nlinarith [abs_nonneg x, abs_nonneg y, abs_nonneg z]"
  ]
 },
 {
  "old": "{a b c : \u211d} (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a + b + c + 1 / a + 1 / b + 1 / c + 20150710 * (1 / a ^ 20150711 + 1 / b ^ 20150711 + 1 / c ^ 20150711) \u2265 20150711 * (1 / a ^ 20150710 + 1 / b ^ 20150710 + 1 / c ^ 20150710) + 3 := by",
  "new": "{a b c : \u211d} (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a + b + c + 1 / a + 1 / b + 1 / c + 1 / (a + b + c) + 1 / (a * b * c) \u2265 6:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {a b c : \u211d} (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a + b + c + 1 / a + 1 / b + 1 / c + 1 / (a + b + c) + 1 / (a * b * c) \u2265 6:= by\n  have h\u2081 : a + b + c + 1 / a + 1 / b + 1 / c \u2265 6 := by\n    have : 0 < a * b * c := by positivity\n    field_simp [ha, hb, hc]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      mul_self_nonneg (a + b + c - 3)]\n  have h\u2082 : 1 / (a * b * c) \u2265 0 := by positivity\n  have h\u2083 : 1 / (a + b + c) \u2265 0 := by positivity\n  linarith\n  <;> linarith\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : (a^2 / (2 * b * c + 3 * b + 3) + b^2 / (2 * c * a + 3 * c + 3) + c^2 / (2 * a * b + 3 * a + 3)) \u2265 3 / 8 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) : (x^2 / (2 * y * z + 3 * y + 3) + y^2 / (2 * z * x + 3 * z + 3) + z^2 / (2 * x * y + 3 * x + 3)) \u2265 3 / 8:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) : (x^2 / (2 * y * z + 3 * y + 3) + y^2 / (2 * z * x + 3 * z + 3) + z^2 / (2 * x * y + 3 * x + 3)) \u2265 3 / 8:= by\n  field_simp [add_assoc]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (y - 1), sq_nonneg (z - 1),\n    mul_nonneg hx.le hy.le, mul_nonneg hz.le hx.le, mul_nonneg hy.le hz.le,\n    mul_nonneg (sq_nonneg (x - 1)) hz.le, mul_nonneg (sq_nonneg (y - 1)) hx.le,\n    mul_nonneg (sq_nonneg (z - 1)) hy.le,\n    mul_nonneg (sq_nonneg (x - 1)) (mul_nonneg hz.le hx.le),\n    mul_nonneg (sq_nonneg (y - 1)) (mul_nonneg hx.le hy.le),\n    mul_nonneg (sq_nonneg (z - 1)) (mul_nonneg hy.le hz.le)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) : (x^2 / (2 * y * z + 3 * y + 3) + y^2 / (2 * z * x + 3 * z + 3) + z^2 / (2 * x * y + 3 * x + 3)) \u2265 3 / 8:= by\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (y - 1), sq_nonneg (z - 1), mul_nonneg hx.le hy.le, mul_nonneg hy.le hz.le, mul_nonneg hx.le hz.le, mul_nonneg (sq_nonneg (x - 1)) hz.le, mul_nonneg (sq_nonneg (y - 1)) hx.le, mul_nonneg (sq_nonneg (z - 1)) hy.le,\n    mul_nonneg (sq_nonneg (x - 1)) (mul_nonneg hz.le hx.le), mul_nonneg (sq_nonneg (y - 1)) (mul_nonneg hx.le hy.le), mul_nonneg (sq_nonneg (z - 1)) (mul_nonneg hy.le hz.le)]\n  <;> linarith"
  ]
 },
 {
  "old": ": tan\u207b\u00b9 (1 : \u211d) = \u03c0 / 4 := by",
  "new": ":arccos 1 = 0 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem arccos_one :arccos 1 = 0 := by\n  rw [arccos]\n  norm_num [Set.Icc]\n  <;> simp [and_self]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem arccos_one :arccos 1 = 0 := by\n  rw [arccos, sub_eq_zero]\n  norm_num\n  <;> norm_num\n  <;> rw [Real.cos_pi_div_two]\n  <;> rw [eq_comm]\n  <;> rw [eq_comm]\n  <;> linarith\n  <;> simp [Real.cos_pi_div_two]\n  <;> linarith\n  <;> rw [eq_comm]\n  <;> linarith\n  <;> rw [eq_comm]\n  <;> linarith\n  <;> simp [Real.cos_pi_div_two]\n  <;> linarith\n  <;> rw [eq_comm]\n  <;> linarith\n  <;> rw [eq_comm]\n  <;> linarith\n  <;> simp [Real.cos_pi_div_two]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem arccos_one :arccos 1 = 0 := by\n  exact Eq.symm <| Eq.symm <| by norm_num [arccos, sub_eq_zero]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem arccos_one :arccos 1 = 0 := by\n  apply Eq.symm\n  rw [arccos]\n  simp [Real.cos_pi_div_two]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : (a / Real.sqrt (3 + 2 * c + c * a) + b / Real.sqrt (3 + 2 * a + a * b) + c / Real.sqrt (3 + 2 * b + b * c)) \u2264 (a ^ 3 + b ^ 3 + c ^ 3) / Real.sqrt 6 := by",
  "new": "{a b c : \u211d} (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a * b > 0 \u2227 b * c > 0 \u2227 a * c > 0) (h : a + b + c = 1) : a ^ 2 / b + b ^ 2 / c + c ^ 2 / a \u2265 a * b + b * c + c * a:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {a b c : \u211d} (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a * b > 0 \u2227 b * c > 0 \u2227 a * c > 0) (h : a + b + c = 1) :\n    a ^ 2 / b + b ^ 2 / c + c ^ 2 / a \u2265 a * b + b * c + c * a:= by\n  have h\u2081 : 0 < a * b := by nlinarith\n  have h\u2082 : 0 < b * c := by nlinarith\n  have h\u2083 : 0 < a * c := by nlinarith\n  have h\u2084 : 0 < a * b * (a * c) := by positivity\n  have h\u2085 : 0 < a * c * (b * c) := by positivity\n  have h\u2086 : 0 < b * c * (a * b) := by positivity\n  have h\u2087 : 0 < a * b * c := by positivity\n  have h\u2088 : 0 < a * b * c * (a * b * c) := by positivity\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2087]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - a * c), mul_self_nonneg (a * c - a * b)]\n  <;> linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {a b c : \u211d} (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a * b > 0 \u2227 b * c > 0 \u2227 a * c > 0) (h : a + b + c = 1) :\n    a ^ 2 / b + b ^ 2 / c + c ^ 2 / a \u2265 a * b + b * c + c * a:= by\n  have h\u2081 : 0 < a * b * c := mul_pos (mul_pos ha hb) hc\n  have h\u2082 : 0 < a * b * c * (a + b + c) := by positivity\n  have h\u2083 : 0 < a * b * c * (a + b + c) * (a + b + c) := by positivity\n  field_simp [h, h\u2081.ne', h\u2082.ne', h\u2083.ne']\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {a b c : \u211d} (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a * b > 0 \u2227 b * c > 0 \u2227 a * c > 0) (h : a + b + c = 1) :\n    a ^ 2 / b + b ^ 2 / c + c ^ 2 / a \u2265 a * b + b * c + c * a:= by\n  have h\u2081 : 0 < b * c := by nlinarith\n  have h\u2082 : 0 < a * c := by nlinarith\n  have h\u2083 : 0 < a * b := by nlinarith\n  have h\u2084 : 0 < b * c * a := by nlinarith\n  have h\u2085 : 0 < a * c * b := by nlinarith\n  have h\u2086 : 0 < a * b * c := by nlinarith\n  have h\u2087 : 0 < a * b * c * (a + b + c) := by nlinarith\n  field_simp [h, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {a b c : \u211d} (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a * b > 0 \u2227 b * c > 0 \u2227 a * c > 0) (h : a + b + c = 1) :\n    a ^ 2 / b + b ^ 2 / c + c ^ 2 / a \u2265 a * b + b * c + c * a:= by\n  have h\u2081 : 0 < a := by linarith\n  have h\u2082 : 0 < b := by linarith\n  have h\u2083 : 0 < c := by linarith\n  have h\u2084 : 0 < a * b := by nlinarith\n  have h\u2085 : 0 < b * c := by nlinarith\n  have h\u2086 : 0 < c * a := by nlinarith\n  have h\u2087 : 0 < a * b * (b * c) := by nlinarith\n  have h\u2088 : 0 < b * c * (c * a) := by nlinarith\n  have h\u2089 : 0 < c * a * (a * b) := by nlinarith\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087, h\u2088, h\u2089]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]"
  ]
 },
 {
  "old": ": \u2200 a b : \u2124, b^4+4*a^4 = (2*a^2-2*a*b+b^2) * (2*a^2+2*a*b+b^2) := by",
  "new": "(a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  by_cases h : Nat.Coprime a b <;> simp [h]\n  <;> try norm_num <;> omega\n  <;> norm_num\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  by_cases h : Nat.Coprime a b <;> simp [h]\n  <;> simp [Nat.coprime_iff_gcd_eq_one, h]\n  <;> omega\n  <;> simp [Nat.coprime_iff_gcd_eq_one, h]\n  <;> omega\n  <;> simp [Nat.coprime_iff_gcd_eq_one, h]\n  <;> omega\n  <;> simp [Nat.coprime_iff_gcd_eq_one, h]\n  <;> omega\n  <;> simp [Nat.coprime_iff_gcd_eq_one, h]\n  <;> omega\n  <;> simp [Nat.coprime_iff_gcd_eq_one, h]\n  <;> omega\n  <;> simp [Nat.coprime_iff_gcd_eq_one, h]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  by_cases h : Nat.Coprime a b <;> simp_all\n  <;>\n  exact\n    (by\n      simp_all [Nat.Coprime, Nat.gcd_eq_right])\n  <;>\n  simp_all\n  <;>\n  exact\n    (by\n      simp_all [Nat.Coprime, Nat.gcd_eq_left])"
  ]
 },
 {
  "old": "(a b : \u211d) (h1 : 0 < a \u2227 0 < b) (h2 : a * Real.sqrt b + b * Real.sqrt a = 2) : a^2 * Real.sqrt b + b^2 * Real.sqrt a \u2265 2 := by",
  "new": "(a b : \u2115) (h1 : 1 < a \u2227 1 < b) : Nat.Coprime a b \u2228 \u00acNat.Coprime a b := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (h1 : 1 < a \u2227 1 < b) :\n  Nat.Coprime a b \u2228 \u00acNat.Coprime a b := by\n  by_cases h2 : Nat.Coprime a b\n  exacts [Or.inl h2, Or.inr (by simp_all [Nat.Coprime])]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (h1 : 1 < a \u2227 1 < b) :\n  Nat.Coprime a b \u2228 \u00acNat.Coprime a b := by\n  by_cases h2 : Nat.Coprime a b\n  exact Or.inl h2\n  exact Or.inr h2\n  <;> simp_all\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (h1 : 1 < a \u2227 1 < b) :\n  Nat.Coprime a b \u2228 \u00acNat.Coprime a b := by\n  by_cases h2 : Nat.Coprime a b\n  case pos => exact Or.inl h2\n  case neg => exact Or.inr h2",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (h1 : 1 < a \u2227 1 < b) :\n  Nat.Coprime a b \u2228 \u00acNat.Coprime a b := by\n  have : a > 0 := by linarith\n  have : b > 0 := by linarith\n  exact em (Nat.Coprime a b)"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a^3 / b + b^3 / c + c^3 / a \u2265 a * Real.sqrt (a * c) + b * Real.sqrt (b * a) + c * Real.sqrt (b * c) := by",
  "new": ": \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 a ^ 3 / b + b ^ 3 / c + c ^ 3 / a \u2265 a * Real.sqrt (a * c) + b * Real.sqrt (b * a) + c * Real.sqrt (b * c):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192\n   a ^ 3 / b + b ^ 3 / c + c ^ 3 / a \u2265 a * Real.sqrt (a * c) + b * Real.sqrt (b * a) + c * Real.sqrt (b * c):= by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  have h\u2080 : 0 < a * b := by positivity\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * a := by positivity\n  have h\u2083 : Real.sqrt (a * c) \u2264 (a + c) / 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (a - c)]\n  have h\u2084 : Real.sqrt (b * a) \u2264 (b + a) / 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (b - a)]\n  have h\u2085 : Real.sqrt (b * c) \u2264 (b + c) / 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (b - c)]\n  have h\u2086 : a ^ 3 / b + b ^ 3 / c + c ^ 3 / a \u2265 a * Real.sqrt (a * c) + b * Real.sqrt (b * a) + c * Real.sqrt (b * c) := by\n    have h\u2087 : a ^ 3 / b + b ^ 3 / c + c ^ 3 / a \u2265 a * ((a + c) / 2) + b * ((b + a) / 2) + c * ((b + c) / 2) := by\n      have h\u2087 : a ^ 3 / b + b ^ 3 / c + c ^ 3 / a \u2265 a * ((a + c) / 2) + b * ((b + a) / 2) + c * ((b + c) / 2) := by\n        field_simp [ha.ne', hb.ne', hc.ne']\n        rw [le_div_iff (by positivity)]\n        nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n          mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le,\n          mul_nonneg (sq_nonneg (a - b)) hc.le, mul_nonneg (sq_nonneg (b - c)) ha.le,\n          mul_nonneg (sq_nonneg (c - a)) hb.le]\n      linarith\n    nlinarith\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192\n   a ^ 3 / b + b ^ 3 / c + c ^ 3 / a \u2265 a * Real.sqrt (a * c) + b * Real.sqrt (b * a) + c * Real.sqrt (b * c):= by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  have h\u2080 : 0 < a * b := by positivity\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * a := by positivity\n  have h\u2083 : Real.sqrt (a * c) \u2264 (a + c) / 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (a - c)]\n  have h\u2084 : Real.sqrt (b * a) \u2264 (b + a) / 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (b - a)]\n  have h\u2085 : Real.sqrt (b * c) \u2264 (b + c) / 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (b - c)]\n  have h\u2086 : a ^ 3 / b + b ^ 3 / c + c ^ 3 / a \u2265 a * Real.sqrt (a * c) + b * Real.sqrt (b * a) + c * Real.sqrt (b * c) := by\n    have h\u2087 : a ^ 3 / b + b ^ 3 / c + c ^ 3 / a \u2265 a * ((a + c) / 2) + b * ((b + a) / 2) + c * ((b + c) / 2) := by\n      have h\u2088 : a ^ 3 / b + b ^ 3 / c + c ^ 3 / a \u2265 a * (a + c) / 2 + b * (b + a) / 2 + c * (b + c) / 2 := by\n        field_simp\n        rw [div_le_div_iff (by positivity) (by positivity)]\n        nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n          mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le,\n          mul_nonneg (sq_nonneg (a - b)) hc.le, mul_nonneg (sq_nonneg (b - c)) ha.le,\n          mul_nonneg (sq_nonneg (c - a)) hb.le]\n      nlinarith\n    nlinarith\n  exact h\u2086",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192\n   a ^ 3 / b + b ^ 3 / c + c ^ 3 / a \u2265 a * Real.sqrt (a * c) + b * Real.sqrt (b * a) + c * Real.sqrt (b * c):= by\n  rintro a b c \u27e8ha : 0 < a, hb : 0 < b, hc : 0 < c\u27e9\n  have h\u2080 : 0 < a * b := by positivity\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * a := by positivity\n  have h\u2083 : Real.sqrt (a * c) \u2264 (a + c) / 2 := by\n    refine' Real.sqrt_le_iff.mpr _\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (a - c)]\n  have h\u2084 : Real.sqrt (b * a) \u2264 (b + a) / 2 := by\n    refine' Real.sqrt_le_iff.mpr _\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (b - a)]\n  have h\u2085 : Real.sqrt (b * c) \u2264 (b + c) / 2 := by\n    refine' Real.sqrt_le_iff.mpr _\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (b - c)]\n  have h\u2086 : a ^ 3 / b + b ^ 3 / c + c ^ 3 / a \u2265 a * ((a + c) / 2) + b * ((b + a) / 2) + c * ((b + c) / 2) := by\n    have h\u2087 : a ^ 3 / b + b ^ 3 / c + c ^ 3 / a \u2265 a * ((a + c) / 2) + b * ((b + a) / 2) + c * ((b + c) / 2) := by\n      field_simp [h\u2080.ne', h\u2081.ne', h\u2082.ne']\n      rw [le_div_iff (by positivity)]\n      nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n        mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le,\n        mul_nonneg (sq_nonneg (a - b)) hc.le, mul_nonneg (sq_nonneg (b - c)) ha.le,\n        mul_nonneg (sq_nonneg (c - a)) hb.le]\n    linarith\n  nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (hab : a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a * b + b * c + c * a = 1) : 1 / (8 / 5 * a ^ 2 + b * c) + 1 / (8 / 5 * b ^ 2 + c * a) + 1 / (8 / 5 * c ^ 2 + a * b) \u2265 9 / 4 := by",
  "new": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b * c = 1) : 1 / (b * c) + 1 / (c * a) + 1 / (a * b) \u2265 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b * c = 1) : 1 / (b * c) + 1 / (c * a) + 1 / (a * b) \u2265 3:= by\n  have h1 : 0 < a := lt_of_le_of_ne ha (by rintro rfl; simp_all)\n  have h2 : 0 < b := lt_of_le_of_ne hb (by rintro rfl; simp_all)\n  have h3 : 0 < c := lt_of_le_of_ne hc (by rintro rfl; simp_all)\n  have h4 : 0 < b * c := by positivity\n  have h5 : 0 < a * b := by positivity\n  have h6 : 0 < a * c := by positivity\n  have h7 : 0 < (b * c) * (a * b) := by positivity\n  have h8 : 0 < (a * b) * (a * c) := by positivity\n  have h9 : 0 < (b * c) * (a * c) := by positivity\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c), sq_nonneg (a * b - 1), sq_nonneg (a * c - 1), sq_nonneg (b * c - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b * c = 1) : 1 / (b * c) + 1 / (c * a) + 1 / (a * b) \u2265 3:= by\n  have h\u2080 : 0 < a := lt_of_le_of_ne ha (by rintro rfl; simp_all)\n  have h\u2081 : 0 < b := lt_of_le_of_ne hb (by rintro rfl; simp_all)\n  have h\u2082 : 0 < c := lt_of_le_of_ne hc (by rintro rfl; simp_all)\n  have h\u2083 : 0 < a * b := by positivity\n  have h\u2084 : 0 < b * c := by positivity\n  have h\u2085 : 0 < c * a := by positivity\n  have h\u2086 : 0 < a * b * c := by positivity\n  have h\u2087 : 0 < a * b * c * (a * b * c) := by positivity\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c), sq_nonneg (a * b - 1), sq_nonneg (a * c - 1), sq_nonneg (b * c - 1)]\n  <;> linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0) (hab : a + b + c = 3) : (a + 1) ^ 3 / (2 * a ^ 2 + b * c + 1) + (b + 1) ^ 3 / (2 * b ^ 2 + a * c + 1) + (c + 1) ^ 3 / (2 * c ^ 2 + a * b + 1) \u2264 6 := by",
  "new": "(a b c : \u211d) (ha : 0 < a \u2227 0 < b \u2227 0 < c) (hab : a + b + c = 3) : (a + 1) ^ 2 / (a + b) + (b + 1) ^ 2 / (b + c) + (c + 1) ^ 2 / (c + a) \u2265 2 * (a + b + c) / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (a b c : \u211d) (ha : 0 < a \u2227 0 < b \u2227 0 < c) (hab : a + b + c = 3) : \n     (a + 1) ^ 2 / (a + b) + (b + 1) ^ 2 / (b + c) + (c + 1) ^ 2 / (c + a) \u2265 2 * (a + b + c) / 2:= by\n  have H\u2081 : 0 < a + b := by linarith\n  have H\u2082 : 0 < b + c := by linarith\n  have H\u2083 : 0 < c + a := by linarith\n  have H\u2084 : 0 < (a + b) * (b + c) := by positivity\n  have H\u2085 : 0 < (b + c) * (c + a) := by positivity\n  have H\u2086 : 0 < (c + a) * (a + b) := by positivity\n  have H\u2087 : 0 < (a + b) * (b + c) * (c + a) := by positivity\n  field_simp [H\u2081, H\u2082, H\u2083, H\u2084, H\u2085, H\u2086, H\u2087]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> linarith\n  <;> assumption\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (a b c : \u211d) (ha : 0 < a \u2227 0 < b \u2227 0 < c) (hab : a + b + c = 3) : \n     (a + 1) ^ 2 / (a + b) + (b + 1) ^ 2 / (b + c) + (c + 1) ^ 2 / (c + a) \u2265 2 * (a + b + c) / 2:= by\n  have h\u2080 : 0 < a + b := by linarith\n  have h\u2081 : 0 < b + c := by linarith\n  have h\u2082 : 0 < c + a := by linarith\n  have h\u2083 : 0 < (a + b) * (b + c) := by nlinarith\n  have h\u2084 : 0 < (b + c) * (c + a) := by nlinarith\n  have h\u2085 : 0 < (c + a) * (a + b) := by nlinarith\n  have h\u2086 : 0 < (a + b) * (b + c) * (c + a) := by nlinarith\n  field_simp [h\u2080.ne', h\u2081.ne', h\u2082.ne', h\u2083.ne', h\u2084.ne', h\u2085.ne', h\u2086.ne']\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : 0 < a \u2227 0 < b \u2227 0 < c) (habc : a * b + b * c + c * a = 3) : 4 * (a + b + c) + 5 * (Real.sqrt a + Real.sqrt b + Real.sqrt c) \u2265 27 := by",
  "new": ": Real.sqrt (Real.sqrt 4 + 1) + Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) \u2264 3 * Real.sqrt (2 + 2 + 1):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt 4 + 1) + Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) \u2264\n      3 * Real.sqrt (2 + 2 + 1):= by\n  have h\u2080 : Real.sqrt 4 \u2264 2 + 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor <;> norm_num\n  have h\u2081 : Real.sqrt 2 \u2264 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor <;> norm_num\n  have h\u2082 : Real.sqrt (Real.sqrt 4 + 1) \u2264 Real.sqrt (2 + 2 + 1) := by\n    apply Real.sqrt_le_sqrt\n    linarith\n  have h\u2083 : Real.sqrt (Real.sqrt 2 + 1) \u2264 Real.sqrt (2 + 2 + 1) := by\n    apply Real.sqrt_le_sqrt\n    linarith\n  calc\n    Real.sqrt (Real.sqrt 4 + 1) + Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) \u2264\n        Real.sqrt (2 + 2 + 1) + Real.sqrt (2 + 2 + 1) + Real.sqrt (2 + 2 + 1) := by gcongr <;> nlinarith\n    _ = 3 * Real.sqrt (2 + 2 + 1) := by ring\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt 4 + 1) + Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) \u2264\n      3 * Real.sqrt (2 + 2 + 1):= by\n  have h\u2080 : Real.sqrt 4 = 2 := by norm_num [Real.sqrt_eq_iff_mul_self_eq]\n  have h\u2081 : Real.sqrt 2 \u2264 2 := by norm_num [Real.sqrt_le_iff]\n  have h\u2082 : Real.sqrt (Real.sqrt 4 + 1) \u2264 Real.sqrt (2 + 1) := by\n    apply Real.sqrt_le_sqrt\n    linarith\n  have h\u2083 : Real.sqrt (2 + 1) \u2264 2 := by\n    norm_num [Real.sqrt_le_iff]\n  have h\u2084 : Real.sqrt (Real.sqrt 2 + 1) \u2264 Real.sqrt (2 + 1) := by\n    apply Real.sqrt_le_sqrt\n    linarith\n  have h\u2085 : Real.sqrt (Real.sqrt 2 + 1) \u2264 Real.sqrt (2 + 1) := by\n    apply Real.sqrt_le_sqrt\n    linarith\n  have h\u2086 : Real.sqrt (2 + 1) \u2264 2 := by\n    norm_num [Real.sqrt_le_iff]\n  nlinarith [Real.sqrt_nonneg 4, Real.sqrt_nonneg 2, Real.sqrt_nonneg (2 + 2 + 1),\n    Real.mul_self_sqrt (show 0 \u2264 2 + 2 + 1 by norm_num),\n    Real.mul_self_sqrt (show 0 \u2264 2 + 1 by norm_num),\n    Real.mul_self_sqrt (show 0 \u2264 4 by norm_num)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt 4 + 1) + Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) \u2264\n      3 * Real.sqrt (2 + 2 + 1):= by\n  have : Real.sqrt 4 = 2 := by rw [Real.sqrt_eq_iff_mul_self_eq] <;> norm_num\n  rw [this]\n  have h\u2081 : Real.sqrt (2 + 1) \u2264 Real.sqrt (2 + 2 + 1) := by\n    apply Real.sqrt_le_sqrt\n    linarith\n  have h\u2082 : Real.sqrt (Real.sqrt 2 + 1) \u2264 Real.sqrt (2 + 2 + 1) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [Real.sqrt_nonneg 2, Real.sq_sqrt (show 0 \u2264 2 from by linarith)]\n  nlinarith [Real.sqrt_nonneg (2 + 2 + 1), Real.sqrt_nonneg (Real.sqrt 2 + 1),\n    Real.sqrt_nonneg (2 + 1)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a^3 + b^3 + c^3 \u2265 3 * a * b * c := by",
  "new": "(i : \u2115) (hi : \u2200 j, 0 < j \u2192 1 < i * j) : i = 1 \u2228 \u2200 j, 0 < j \u2192 i * j = 1 \u2228 i * j > 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : \u2200 j, 0 < j \u2192 1 < i * j) : i = 1 \u2228 \u2200 j, 0 < j \u2192 i * j = 1 \u2228 i * j > 1:= by\n  refine' or_iff_not_imp_right.2 fun h => _\n  aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : \u2200 j, 0 < j \u2192 1 < i * j) : i = 1 \u2228 \u2200 j, 0 < j \u2192 i * j = 1 \u2228 i * j > 1:= by\n  refine' or_iff_not_imp_right.mpr fun h => _\n  by_contra! h'\n  have h\u2081 := hi 1\n  have h\u2082 := hi 0\n  simp_all",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : \u2200 j, 0 < j \u2192 1 < i * j) : i = 1 \u2228 \u2200 j, 0 < j \u2192 i * j = 1 \u2228 i * j > 1:= by\n  by_cases h : 1 < i\n  \u00b7 right\n    intro j hj\n    have := hi j hj\n    omega\n  \u00b7 left\n    by_contra! h'\n    have h\u2081 := hi 1 (by linarith)\n    have h\u2082 := hi (i + 1) (by linarith)\n    simp at h\u2081 h\u2082\n    nlinarith\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : a^4 / b^2 + b^4 / c^2 + c^4 / a^2 + 5 * (a * b + b * c + c * a) \u2265 6 * (a^2 + b^2 + c^2) := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b > c \u2227 b + c > a \u2227 a + c > b \u2192 5 * (a * b + b * c + c * a) \u2265 2 * (a * b + b * c + c * a) \u2227 a ^ 4 / b ^ 2 + b ^ 4 / c ^ 2 + c ^ 4 / a ^ 2 \u2265 a ^ 2 + b ^ 2 + c ^ 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b > c \u2227 b + c > a \u2227 a + c > b \u2192\n   5 * (a * b + b * c + c * a) \u2265 2 * (a * b + b * c + c * a) \u2227\n   a ^ 4 / b ^ 2 + b ^ 4 / c ^ 2 + c ^ 4 / a ^ 2 \u2265 a ^ 2 + b ^ 2 + c ^ 2:= by\n  rintro a b c \u27e8a_pos, b_pos, c_pos, a_b, b_c, a_c\u27e9\n  constructor\n  \u00b7 nlinarith\n  have : 0 < a * b := mul_pos a_pos b_pos\n  have : 0 < b * c := mul_pos b_pos c_pos\n  have : 0 < c * a := mul_pos c_pos a_pos\n  have h\u2080 : a ^ 4 / b ^ 2 + b ^ 4 / c ^ 2 + c ^ 4 / a ^ 2 \u2265 a ^ 2 + b ^ 2 + c ^ 2 := by\n    have : 0 < a ^ 2 := sq_pos_of_pos a_pos\n    have : 0 < b ^ 2 := sq_pos_of_pos b_pos\n    have : 0 < c ^ 2 := sq_pos_of_pos c_pos\n    have h\u2081 : a ^ 4 / b ^ 2 + b ^ 4 / c ^ 2 + c ^ 4 / a ^ 2 \u2265 a ^ 2 + b ^ 2 + c ^ 2 := by\n      have : 0 < b ^ 2 * c ^ 2 := by positivity\n      have : 0 < a ^ 2 * b ^ 2 := by positivity\n      have : 0 < a ^ 2 * c ^ 2 := by positivity\n      field_simp [this]\n      rw [le_div_iff (by positivity)]\n      nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2)]\n    linarith\n  linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b > c \u2227 b + c > a \u2227 a + c > b \u2192\n   5 * (a * b + b * c + c * a) \u2265 2 * (a * b + b * c + c * a) \u2227\n   a ^ 4 / b ^ 2 + b ^ 4 / c ^ 2 + c ^ 4 / a ^ 2 \u2265 a ^ 2 + b ^ 2 + c ^ 2:= by\n  rintro a b c \u27e8ha, hb, hc, hab, hbc, hac\u27e9\n  constructor\n  \u00b7 nlinarith\n  have : 0 < a * b := by nlinarith\n  have : 0 < b * c := by nlinarith\n  have : 0 < c * a := by nlinarith\n  have : 0 < a ^ 2 * b ^ 2 := by positivity\n  have : 0 < b ^ 2 * c ^ 2 := by positivity\n  have : 0 < c ^ 2 * a ^ 2 := by positivity\n  field_simp [ha.ne', hb.ne', hc.ne']\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a + b) ^ 2 / a / b + (b + c) ^ 2 / b / c + (a + c) ^ 2 / a / c \u2265 9 + 2 * (a / (b + c) + b / (a + c) + c / (a + b)) := by",
  "new": ": \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 (a + b) ^ 2 / a / b + (b + c) ^ 2 / b / c + (a + c) ^ 2 / a / c \u2265 9 + 2 * (a / (b + c) + b / (a + c) + c / (a + b)):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192\n   (a + b) ^ 2 / a / b + (b + c) ^ 2 / b / c + (a + c) ^ 2 / a / c \u2265 9 + 2 * (a / (b + c) + b / (a + c) + c / (a + b)):= by\n  rintro a b c \u27e8a_pos, b_pos, c_pos\u27e9\n  have h1 : 0 < a * b := by positivity\n  have h2 : 0 < b * c := by positivity\n  have h3 : 0 < a * c := by positivity\n  have h4 : 0 < a * b * c := by positivity\n  have h5 : 0 < (a * b) * (b * c) := by positivity\n  have h6 : 0 < (b * c) * (a * c) := by positivity\n  have h7 : 0 < (a * c) * (a * b) := by positivity\n  field_simp [h1, h2, h3, h4, h5, h6, h7]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - a * c), sq_nonneg (a * c - a * b), sq_nonneg (a * b * c), sq_nonneg (a * b * c * (a - b)), sq_nonneg (a * b * c * (b - c)), sq_nonneg (a * b * c * (c - a)), sq_nonneg (a * b * c * (a * b - b * c)), sq_nonneg (a * b * c * (b * c - a * c)), sq_nonneg (a * b * c * (a * c - a * b))]"
  ]
 },
 {
  "old": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a^2 / (2 * b^2 + c * a) + b^2 / (2 * c^2 + a * b) + c^2 / (2 * a^2 + b * c) \u2265 1 := by",
  "new": ": \u2200 x : \u211d, 0 \u2264 x \u2192 x \u2264 100 \u2192 \u2203 y : \u211d, 0 \u2264 y \u2227 y \u2264 100 \u2227 100 * Real.sqrt (1 - x ^ 2) \u2264 100 * Real.sqrt (1 - y ^ 2) + y * (x + 10) + x * (x + 10):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 : \u2200 x : \u211d, 0 \u2264 x \u2192 x \u2264 100 \u2192 \u2203 y : \u211d, 0 \u2264 y \u2227 y \u2264 100 \u2227 100 * Real.sqrt (1 - x ^ 2) \u2264 100 * Real.sqrt (1 - y ^ 2) + y * (x + 10) + x * (x + 10):= by\n  intro x hx1 hx2\n  refine' \u27e8x, hx1, hx2, _\u27e9\n  have h1 : Real.sqrt (1 - x ^ 2) \u2264 Real.sqrt (1 - x ^ 2) := le_refl (Real.sqrt (1 - x ^ 2))\n  have h2 : Real.sqrt (1 - x ^ 2) \u2264 Real.sqrt (1 - x ^ 2) + x * (x + 10) + x * (x + 10) := by\n    nlinarith [Real.sqrt_nonneg (1 - x ^ 2)]\n  nlinarith [h1, h2]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 : \u2200 x : \u211d, 0 \u2264 x \u2192 x \u2264 100 \u2192 \u2203 y : \u211d, 0 \u2264 y \u2227 y \u2264 100 \u2227 100 * Real.sqrt (1 - x ^ 2) \u2264 100 * Real.sqrt (1 - y ^ 2) + y * (x + 10) + x * (x + 10):= by\n  intro x hx hx'\n  use 0\n  constructor\n  linarith\n  constructor\n  linarith\n  have h\u2081 : Real.sqrt (1 - x ^ 2) \u2264 1 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  have h\u2082 : Real.sqrt (1 - 0 ^ 2) = 1 := by\n    simp\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 : \u2200 x : \u211d, 0 \u2264 x \u2192 x \u2264 100 \u2192 \u2203 y : \u211d, 0 \u2264 y \u2227 y \u2264 100 \u2227 100 * Real.sqrt (1 - x ^ 2) \u2264 100 * Real.sqrt (1 - y ^ 2) + y * (x + 10) + x * (x + 10):= by\n  intro x hx1 hx2\n  refine' \u27e8x, hx1, hx2, _\u27e9\n  have h1 : Real.sqrt (1 - x ^ 2) \u2264 Real.sqrt (1 - x ^ 2) := le_refl _\n  have h2 : 0 \u2264 x := hx1\n  have h3 : x \u2264 100 := hx2\n  have h4 : 0 \u2264 Real.sqrt (1 - x ^ 2) := Real.sqrt_nonneg _\n  have h5 : 0 \u2264 x * (x + 10) := by nlinarith\n  have h6 : 0 \u2264 100 * Real.sqrt (1 - x ^ 2) := by nlinarith\n  nlinarith\n  <;> norm_num"
  ]
 },
 {
  "old": "{a b c : \u211d} (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : (a / (b ^ 2 + 1) + b / (c ^ 2 + 1) + c / (a ^ 2 + 1)) * (a ^ 2 * (b ^ 2 + 1) + b ^ 2 * (c ^ 2 + 1) + c ^ 2 * (a ^ 2 + 1)) \u2265 (a * Real.sqrt a + b * Real.sqrt b + c * Real.sqrt c) ^ 2 := by",
  "new": "{a b c : \u211d} (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : 0 \u2264 a * b) (hbc : 0 \u2264 b * c) (hca : 0 \u2264 c * a) : (a * b) / (a ^ 2 + b ^ 2 + c ^ 2) * (b * c) / (b ^ 2 + c ^ 2 + a ^ 2) * (c * a) / (c ^ 2 + a ^ 2 + b ^ 2) \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {a b c : \u211d} (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : 0 \u2264 a * b) (hbc : 0 \u2264 b * c) (hca : 0 \u2264 c * a) :\n    (a * b) / (a ^ 2 + b ^ 2 + c ^ 2) * (b * c) / (b ^ 2 + c ^ 2 + a ^ 2) * (c * a) / (c ^ 2 + a ^ 2 + b ^ 2) \u2264 1:= by\n  rcases eq_or_lt_of_le ha with (rfl | ha') <;> rcases eq_or_lt_of_le hb with (rfl | hb') <;>\n    rcases eq_or_lt_of_le hc with (rfl | hc') <;>\n    simp_all [div_eq_inv_mul, mul_assoc]\n  all_goals\n    ring_nf\n    apply le_of_sub_nonneg\n    field_simp\n    ring_nf\n    positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {a b c : \u211d} (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : 0 \u2264 a * b) (hbc : 0 \u2264 b * c) (hca : 0 \u2264 c * a) :\n    (a * b) / (a ^ 2 + b ^ 2 + c ^ 2) * (b * c) / (b ^ 2 + c ^ 2 + a ^ 2) * (c * a) / (c ^ 2 + a ^ 2 + b ^ 2) \u2264 1:= by\n  rcases eq_or_lt_of_le ha with (rfl | ha') <;>\n    rcases eq_or_lt_of_le hb with (rfl | hb') <;>\n      rcases eq_or_lt_of_le hc with (rfl | hc') <;>\n        simp_all\n  all_goals\n    apply le_of_sub_nonneg\n    field_simp\n    ring_nf\n    positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {a b c : \u211d} (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : 0 \u2264 a * b) (hbc : 0 \u2264 b * c) (hca : 0 \u2264 c * a) :\n    (a * b) / (a ^ 2 + b ^ 2 + c ^ 2) * (b * c) / (b ^ 2 + c ^ 2 + a ^ 2) * (c * a) / (c ^ 2 + a ^ 2 + b ^ 2) \u2264 1:= by\n  rcases eq_or_lt_of_le ha with (rfl | ha') <;>\n  rcases eq_or_lt_of_le hb with (rfl | hb') <;>\n  rcases eq_or_lt_of_le hc with (rfl | hc') <;>\n  simp_all [sq] <;>\n  apply le_of_sub_nonneg\n  <;> field_simp <;> ring_nf <;> positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {a b c : \u211d} (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : 0 \u2264 a * b) (hbc : 0 \u2264 b * c) (hca : 0 \u2264 c * a) :\n    (a * b) / (a ^ 2 + b ^ 2 + c ^ 2) * (b * c) / (b ^ 2 + c ^ 2 + a ^ 2) * (c * a) / (c ^ 2 + a ^ 2 + b ^ 2) \u2264 1:= by\n  have h1 : 0 \u2264 a * b * c := by positivity\n  have h2 : 0 \u2264 a ^ 2 + b ^ 2 + c ^ 2 := by positivity\n  have h3 : (a * b) / (a ^ 2 + b ^ 2 + c ^ 2) * (b * c) / (b ^ 2 + c ^ 2 + a ^ 2) * (c * a) / (c ^ 2 + a ^ 2 + b ^ 2) \u2264 1 := by\n    field_simp [h2]\n    apply div_le_one_of_le\n    nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n      sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n    positivity\n  exact h3"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b + c = 1) : 15 * (a * b + b * c + c * a) \u2264 4 + 27 * a * b * c := by",
  "new": "(i j : \u2115) (h : i * j = 1) : i = 1 \u2227 j = 1 \u2228 i = 0 \u2227 j = 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i j : \u2115) (h : i * j = 1) : i = 1 \u2227 j = 1 \u2228 i = 0 \u2227 j = 0:= by\n  cases i <;> cases j <;> simp_all",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i j : \u2115) (h : i * j = 1) : i = 1 \u2227 j = 1 \u2228 i = 0 \u2227 j = 0:= by\n  cases' Nat.eq_zero_or_pos i with hi hi <;> cases' Nat.eq_zero_or_pos j with hj hj <;>\n    simp_all [Nat.mul_eq_zero]\n  all_goals omega\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i j : \u2115) (h : i * j = 1) : i = 1 \u2227 j = 1 \u2228 i = 0 \u2227 j = 0:= by\n  rcases i with (_ | _ | i) <;> rcases j with (_ | _ | j) <;>\n    simp_all [Nat.mul_eq_zero]\n  <;> omega\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i j : \u2115) (h : i * j = 1) : i = 1 \u2227 j = 1 \u2228 i = 0 \u2227 j = 0:= by\n  cases i\n  all_goals cases j\n  all_goals simp_all\n  all_goals omega"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a * b / (a + b) + b * c / (b + c) + c * a / (c + a)) \u2264 (3 * (a * b + b * c + c * a)) / (2 * (a + b + c)) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x ^ 2 + y ^ 2 + z ^ 2) * (1 / x + 1 / y + 1 / z) \u2265 (x + y + z) ^ 2 / (x + y + z) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) :\n   (x ^ 2 + y ^ 2 + z ^ 2) * (1 / x + 1 / y + 1 / z) \u2265 (x + y + z) ^ 2 / (x + y + z) := by\n  have : (x + y + z) ^ 2 / (x + y + z) = (x + y + z) := by\n    rw [pow_two]\n    field_simp\n  rw [this]\n  have hxy : 0 < x * y := mul_pos hx hy\n  have hyz : 0 < y * z := mul_pos hy hz\n  have hxz : 0 < x * z := mul_pos hx hz\n  field_simp [hxy, hyz, hxz]\n  rw [le_div_iff (by positivity)]\n  nlinarith [mul_self_nonneg (x - y), mul_self_nonneg (y - z), mul_self_nonneg (z - x)]\n  <;> positivity\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) :\n   (x ^ 2 + y ^ 2 + z ^ 2) * (1 / x + 1 / y + 1 / z) \u2265 (x + y + z) ^ 2 / (x + y + z) := by\n  apply le_of_sub_nonneg\n  have h\u2080 : 0 < x * y := mul_pos hx hy\n  have h\u2081 : 0 < y * z := mul_pos hy hz\n  have h\u2082 : 0 < x * z := mul_pos hx hz\n  field_simp\n  ring_nf\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) :\n   (x ^ 2 + y ^ 2 + z ^ 2) * (1 / x + 1 / y + 1 / z) \u2265 (x + y + z) ^ 2 / (x + y + z) := by\n  apply le_of_sub_nonneg\n  have hxy : 0 < x * y := by positivity\n  have hxz : 0 < x * z := by positivity\n  have hyz : 0 < y * z := by positivity\n  field_simp\n  ring_nf\n  positivity"
  ]
 },
 {
  "old": "(n m : \u2115) : \u2211 k in Finset.range (n+1), (Nat.choose n k * Nat.choose m k) = Nat.choose (n + m) n := by",
  "new": "(n m : \u2115) : (Nat.fib (n + m)).Coprime (Nat.fib (n + m + 1)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_succ_coprime (n m : \u2115) : (Nat.fib (n + m)).Coprime (Nat.fib (n + m + 1)) := by\n  simpa [Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm] using\n    fib_coprime_fib_succ (n + m)\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a * b + b * c + c * a = 1) : 1 \u2264 (1 - a ^ 3) / (a ^ 3 + Real.sqrt (b * c)) + (1 - b ^ 3) / (b ^ 3 + Real.sqrt (c * a)) + (1 - c ^ 3) / (c ^ 3 + Real.sqrt (a * b)) := by",
  "new": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a * b + b * c + c * a = 1) : 1 \u2264 (1 - a ^ 2) / (a ^ 2 + 1) + (1 - b ^ 2) / (b ^ 2 + 1) + (1 - c ^ 2) / (c ^ 2 + 1):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a * b + b * c + c * a = 1) : 1 \u2264 (1 - a ^ 2) / (a ^ 2 + 1) + (1 - b ^ 2) / (b ^ 2 + 1) + (1 - c ^ 2) / (c ^ 2 + 1):= by\n  have h\u2081 : 0 \u2264 a * b := by positivity\n  have h\u2082 : 0 \u2264 b * c := by positivity\n  have h\u2083 : 0 \u2264 c * a := by positivity\n  have h\u2084 : 0 \u2264 (a * b) * (b * c) := by positivity\n  have h\u2085 : 0 \u2264 (b * c) * (c * a) := by positivity\n  have h\u2086 : 0 \u2264 (c * a) * (a * b) := by positivity\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a * b + b * c + c * a = 1) : 1 \u2264 (1 - a ^ 2) / (a ^ 2 + 1) + (1 - b ^ 2) / (b ^ 2 + 1) + (1 - c ^ 2) / (c ^ 2 + 1):= by\n  have h\u2080 : 0 \u2264 a * b := by positivity\n  have h\u2081 : 0 \u2264 b * c := by positivity\n  have h\u2082 : 0 \u2264 c * a := by positivity\n  have h\u2083 : 0 \u2264 a ^ 2 + b ^ 2 + c ^ 2 := by positivity\n  have h\u2084 : 0 \u2264 a ^ 2 * b ^ 2 * c ^ 2 := by positivity\n  have h\u2085 : 0 < a ^ 2 + 1 := by positivity\n  have h\u2086 : 0 < b ^ 2 + 1 := by positivity\n  have h\u2087 : 0 < c ^ 2 + 1 := by positivity\n  field_simp [h\u2085, h\u2086, h\u2087]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a * b + b * c + c * a), sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a),\n    sq_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a * b + b * c + c * a = 1) : 1 \u2264 (1 - a ^ 2) / (a ^ 2 + 1) + (1 - b ^ 2) / (b ^ 2 + 1) + (1 - c ^ 2) / (c ^ 2 + 1):= by\n  have h\u2080 : 0 \u2264 a * b := by positivity\n  have h\u2081 : 0 \u2264 b * c := by positivity\n  have h\u2082 : 0 \u2264 c * a := by positivity\n  have h\u2083 : 0 \u2264 (a * b) * (b * c) := by positivity\n  have h\u2084 : 0 \u2264 (b * c) * (c * a) := by positivity\n  have h\u2085 : 0 \u2264 (c * a) * (a * b) := by positivity\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a * b + b * c + c * a = 1) : 1 \u2264 (1 - a ^ 2) / (a ^ 2 + 1) + (1 - b ^ 2) / (b ^ 2 + 1) + (1 - c ^ 2) / (c ^ 2 + 1):= by\n  have h\u2081 : 0 \u2264 a * b := by positivity\n  have h\u2082 : 0 \u2264 b * c := by positivity\n  have h\u2083 : 0 \u2264 c * a := by positivity\n  have h\u2084 : 0 \u2264 (a * b) * (b * c) := by positivity\n  have h\u2085 : 0 \u2264 (b * c) * (c * a) := by positivity\n  have h\u2086 : 0 \u2264 (c * a) * (a * b) := by positivity\n  have h\u2087 : 0 \u2264 a * b * (b * c) * (c * a) := by positivity\n  field_simp [h\u2087]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a * b + b * c + c * a),\n    sq_nonneg (a * b - b * c),\n    sq_nonneg (b * c - c * a),\n    sq_nonneg (c * a - a * b)]"
  ]
 },
 {
  "old": "(a b c d : \u211d) : (b + c + d) / a + (a + c + d) / b + (a + b + d) / c + (a + b + c) / d \u2265 12 := by",
  "new": ": \u2200 a b c d : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 d > 0 \u2192 a * b * c * d = 1 \u2192 (b + c + d) / a + (a + c + d) / b + (a + b + d) / c + (a + b + c) / d \u2265 12:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 d > 0 \u2192 a * b * c * d = 1 \u2192 (b + c + d) / a + (a + c + d) / b + (a + b + d) / c + (a + b + c) / d \u2265 12:= by\n  rintro a b c d \u27e8h\u2081, h\u2082, h\u2083, h\u2084\u27e9 h\u2085\n  have h\u2086 : 0 < a * b * c := by positivity\n  have h\u2087 : 0 < b * c * d := by positivity\n  have h\u2088 : 0 < a * c * d := by positivity\n  have h\u2089 : 0 < a * b * d := by positivity\n  have h\u2081\u2080 : 0 < a * b * c * d := by positivity\n  have h\u2081\u2081 : 0 < a * b * c * d * (a * b * c * d) := by positivity\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (a - d), sq_nonneg (b - c), sq_nonneg (b - d), sq_nonneg (c - d),\n    mul_pos h\u2081 h\u2082, mul_pos h\u2081 h\u2083, mul_pos h\u2081 h\u2084, mul_pos h\u2082 h\u2083, mul_pos h\u2082 h\u2084, mul_pos h\u2083 h\u2084]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 d > 0 \u2192 a * b * c * d = 1 \u2192 (b + c + d) / a + (a + c + d) / b + (a + b + d) / c + (a + b + c) / d \u2265 12:= by\n  rintro a b c d \u27e8ha, hb, hc, hd\u27e9 h\n  field_simp\n  rw [le_div_iff (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (a - d), sq_nonneg (b - c), sq_nonneg (b - d), sq_nonneg (c - d),\n    mul_pos ha hb, mul_pos ha hc, mul_pos ha hd, mul_pos hb hc, mul_pos hb hd, mul_pos hc hd]"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hd : 0 \u2264 d) (hab : a + b + c + d = 2) : (1 / (1 + 3 * a ^ 2) + 1 / (1 + 3 * b ^ 2) + 1 / (1 + 3 * c ^ 2) + 1 / (1 + 3 * d ^ 2)) \u2264 (16 / 7) * (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) / (a * b + b * c + c * d + d * a) := by",
  "new": "(a b c d : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hd : 0 \u2264 d) (hab : a + b + c + d = 2) : (1 + 3 * a ^ 2) * (1 + 3 * b ^ 2) * (1 + 3 * c ^ 2) * (1 + 3 * d ^ 2) \u2265 16 * (a * b) * (c * d):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_step1 (a b c d : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hd : 0 \u2264 d) (hab : a + b + c + d = 2) :  (1 + 3 * a ^ 2) * (1 + 3 * b ^ 2) * (1 + 3 * c ^ 2) * (1 + 3 * d ^ 2) \u2265 16 * (a * b) * (c * d):= by\n  have h\u2081 : a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2 \u2264 4 := by\n    nlinarith [sq_nonneg (a + b + c + d), ha, hb, hc, hd]\n  have h\u2082 : 0 \u2264 a * b := by nlinarith\n  have h\u2083 : 0 \u2264 c * d := by nlinarith\n  have h\u2084 : 0 \u2264 a * b * c * d := by nlinarith\n  nlinarith [sq_nonneg (a - b), sq_nonneg (c - d), sq_nonneg (a * b - c * d),\n    mul_nonneg (sq_nonneg a) (sq_nonneg b), mul_nonneg (sq_nonneg c) (sq_nonneg d)]\n  <;> assumption\n  <;> simp_all",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_step1 (a b c d : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hd : 0 \u2264 d) (hab : a + b + c + d = 2) :  (1 + 3 * a ^ 2) * (1 + 3 * b ^ 2) * (1 + 3 * c ^ 2) * (1 + 3 * d ^ 2) \u2265 16 * (a * b) * (c * d):= by\n  have : 0 \u2264 a * b := by positivity\n  have : 0 \u2264 c * d := by positivity\n  have : 0 \u2264 a * b * (c * d) := by positivity\n  have h\u2080 : 0 \u2264 (a * b) ^ 2 + (c * d) ^ 2 := by positivity\n  have h\u2081 : 0 \u2264 (a - b) ^ 2 + (c - d) ^ 2 := by positivity\n  have h\u2082 : 0 \u2264 (a * b - c * d) ^ 2 := by positivity\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_step1 (a b c d : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hd : 0 \u2264 d) (hab : a + b + c + d = 2) :  (1 + 3 * a ^ 2) * (1 + 3 * b ^ 2) * (1 + 3 * c ^ 2) * (1 + 3 * d ^ 2) \u2265 16 * (a * b) * (c * d):= by\n  ring_nf\n  nlinarith [sq_nonneg (a - b), sq_nonneg (c - d), sq_nonneg (a * b - c * d), mul_nonneg ha hb, mul_nonneg hc hd, mul_nonneg (sq_nonneg a) (sq_nonneg b), mul_nonneg (sq_nonneg c) (sq_nonneg d), mul_nonneg (mul_nonneg ha hb) (mul_nonneg hc hd)]\n  <;> nlinarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_step1 (a b c d : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hd : 0 \u2264 d) (hab : a + b + c + d = 2) :  (1 + 3 * a ^ 2) * (1 + 3 * b ^ 2) * (1 + 3 * c ^ 2) * (1 + 3 * d ^ 2) \u2265 16 * (a * b) * (c * d):= by\n  nlinarith [sq_nonneg (a * b - c * d), sq_nonneg (a * c - b * d), sq_nonneg (a * d - b * c), mul_nonneg ha hb, mul_nonneg hc hd, mul_nonneg (sq_nonneg a) (sq_nonneg b), mul_nonneg (sq_nonneg c) (sq_nonneg d)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : (a / (a ^ 2 + 3) + b / (b ^ 2 + 3) + c / (c ^ 2 + 3)) \u2264 (1 / (a + 3) + 1 / (b + 3) + 1 / (c + 3)) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) : x / (x + y + z) + y / (x + y + z) + z / (x + y + z) \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) : \n    x / (x + y + z) + y / (x + y + z) + z / (x + y + z) \u2264 1:= by\n  rw [add_assoc]\n  field_simp [hx, hy, hz, habc]\n  rw [div_le_iff (by positivity)]\n  nlinarith [mul_self_nonneg (x + y + z), mul_self_nonneg (x - y), mul_self_nonneg (x - z), mul_self_nonneg (y - z)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) : \n    x / (x + y + z) + y / (x + y + z) + z / (x + y + z) \u2264 1:= by\n  have : x / (x + y + z) + y / (x + y + z) + z / (x + y + z) = (x + y + z) / (x + y + z) := by\n    field_simp [add_assoc, add_comm, add_left_comm]\n  rw [this]\n  rw [div_self (by positivity)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) : \n    x / (x + y + z) + y / (x + y + z) + z / (x + y + z) \u2264 1:= by\n  rw [add_assoc]\n  field_simp [habc]\n  apply div_le_one_of_le\n  linarith\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) : \n    x / (x + y + z) + y / (x + y + z) + z / (x + y + z) \u2264 1:= by\n  rw [add_assoc]\n  field_simp\n  rw [div_le_iff (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_self_nonneg (x + y + z)]\n  <;> linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a * (b + c) / (b ^ 2 + b * c + c ^ 2) + b * (c + a) / (c ^ 2 + c * a + a ^ 2) + c * (a + b) / (a ^ 2 + a * b + b ^ 2) \u2265 2 := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a ^ 2 + b ^ 2 + c ^ 2) * (a ^ 4 + b ^ 4 + c ^ 4) \u2265 (a ^ 3 * b + b ^ 3 * c + c ^ 3 * a) * (a ^ 2 + b ^ 2 + c ^ 2 - b * c - a * c - a * b):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a ^ 2 + b ^ 2 + c ^ 2)  * (a ^ 4 + b ^ 4 + c ^ 4) \u2265 (a ^ 3 * b + b ^ 3 * c + c ^ 3 * a) * (a ^ 2 + b ^ 2 + c ^ 2 - b * c - a * c - a * b):= by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  have H\u2081 : 0 \u2264 a * b := by positivity\n  have H\u2082 : 0 \u2264 b * c := by positivity\n  have H\u2083 : 0 \u2264 c * a := by positivity\n  have H\u2084 : 0 \u2264 a * b * (a ^ 2 + b ^ 2 + c ^ 2) := by positivity\n  have H\u2085 : 0 \u2264 b * c * (a ^ 2 + b ^ 2 + c ^ 2) := by positivity\n  have H\u2086 : 0 \u2264 c * a * (a ^ 2 + b ^ 2 + c ^ 2) := by positivity\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    sq_nonneg (a ^ 2 - a * b), sq_nonneg (b ^ 2 - b * c), sq_nonneg (c ^ 2 - c * a),\n    sq_nonneg (a * b - a * c), sq_nonneg (b * c - b * a), sq_nonneg (c * a - c * b)]\n  <;> try norm_num\n  <;> nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) : a ^ 4 + 2 * a ^ 2 * b ^ 2 + b ^ 4 + a ^ 2 * c ^ 2 + 2 * a * b * c ^ 2 + b ^ 2 * c ^ 2 \u2265 2 * a ^ 3 * c + 2 * a * b * c ^ 2 + 2 * b ^ 3 * c + 2 * a * b ^ 2 * c := by",
  "new": "(a b c : \u211d) : a ^ 2 * (b ^ 2 + c ^ 2 - 2 * b * c) + b ^ 2 * (a ^ 2 + c ^ 2 - 2 * a * c) + c ^ 2 * (a ^ 2 + b ^ 2 - 2 * a * b) \u2264 a ^ 4 + b ^ 4 + c ^ 4 + 2 * a ^ 2 * b ^ 2 + 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * c ^ 2 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) :  a ^ 2 * (b ^ 2 + c ^ 2 - 2 * b * c) + b ^ 2 * (a ^ 2 + c ^ 2 - 2 * a * c) + c ^ 2 * (a ^ 2 + b ^ 2 - 2 * a * b) \u2264 a ^ 4 + b ^ 4 + c ^ 4 + 2 * a ^ 2 * b ^ 2 + 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * c ^ 2 := by\n  nlinarith [mul_self_nonneg (a^2 - b^2), mul_self_nonneg (b^2 - c^2), mul_self_nonneg (c^2 - a^2),\n    mul_self_nonneg (a^2 - b * c), mul_self_nonneg (b^2 - a * c), mul_self_nonneg (c^2 - a * b),\n    mul_self_nonneg (a * b + b * c + c * a), mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a),\n    mul_self_nonneg (c * a - a * b)]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : 3 / (a + b + c) \u2265 2 / (a * b + b * c + c * a) + 1 / (a ^ 2 + b ^ 2 + c ^ 2) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z = 1) : 1 / (x + y + z) = (x + y + z) ^ 2 * (1 / x + 1 / y + 1 / z):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z = 1) : 1 / (x + y + z) = (x + y + z) ^ 2 * (1 / x + 1 / y + 1 / z):= by\n  field_simp [h\u2081] at h\u2082 \u22a2\n  ring_nf at h\u2082 \u22a2\n  nlinarith [mul_pos hx hy, mul_pos hx hz, mul_pos hy hz]\n  <;> assumption\n  <;> simp [h\u2081, h\u2082]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z = 1) : 1 / (x + y + z) = (x + y + z) ^ 2 * (1 / x + 1 / y + 1 / z):= by\n  field_simp [h\u2081, hz.ne', hx.ne', hy.ne'] at h\u2082 \u22a2\n  nlinarith [mul_self_nonneg (x + y + z), mul_self_nonneg (x - y), mul_self_nonneg (x - z),\n    mul_self_nonneg (y - z)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z = 1) : 1 / (x + y + z) = (x + y + z) ^ 2 * (1 / x + 1 / y + 1 / z):= by\n  rw [h\u2081]\n  field_simp [h\u2081] at h\u2082 \u22a2\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z = 1) : 1 / (x + y + z) = (x + y + z) ^ 2 * (1 / x + 1 / y + 1 / z):= by\n  rw [h\u2081]\n  field_simp [h\u2081] at h\u2082\n  nlinarith [mul_self_nonneg (x + y + z), mul_self_nonneg (x - y), mul_self_nonneg (x - z),\n    mul_self_nonneg (y - z)]\n  <;> linarith\n  <;> norm_num"
  ]
 },
 {
  "old": "(n : \u2115) : \u2203 k : \u2115, (Finset.sum (Finset.range (n + 1)) prime) ^ 2 < k ^ 2 \u2227 k ^ 2 < (Finset.sum (Finset.range (n + 2)) prime) ^ 2 := by",
  "new": "(n : \u2115) : \u2203 x : \u2115, Nat.Coprime x n \u2228 \u2203 a b : \u2115, a + b = n \u2227 Nat.Coprime a b:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_goldbach_conjecture (n : \u2115) : \u2203 x : \u2115, Nat.Coprime x n \u2228 \u2203 a b : \u2115, a + b = n \u2227 Nat.Coprime a b:= by\n  use 1\n  simp [Nat.coprime_one_left, Nat.coprime_one_right]\n  <;> tauto\n  <;> tauto\n  <;> tauto",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_goldbach_conjecture (n : \u2115) : \u2203 x : \u2115, Nat.Coprime x n \u2228 \u2203 a b : \u2115, a + b = n \u2227 Nat.Coprime a b:= by\n  refine \u27e81, ?_\u27e9\n  simp [Nat.coprime_one_left]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_goldbach_conjecture (n : \u2115) : \u2203 x : \u2115, Nat.Coprime x n \u2228 \u2203 a b : \u2115, a + b = n \u2227 Nat.Coprime a b:= by\n  use 1\n  exact Or.inl (by simp [Nat.coprime_one_left])\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_goldbach_conjecture (n : \u2115) : \u2203 x : \u2115, Nat.Coprime x n \u2228 \u2203 a b : \u2115, a + b = n \u2227 Nat.Coprime a b:= by\n  use 1\n  exact Or.inl (Nat.coprime_one_left n)"
  ]
 },
 {
  "old": "(a b : \u211d) (h\u2081 : Real.log 36 = a) (h\u2082 : Real.log 125 = b) : Real.log (1/12) = -(a/2 + b/3 - 1) := by",
  "new": "(x : \u211d) (hx : 1 < x) (hx' : x \u2264 10) : Real.log x \u2264 3 * Real.log 10 + Real.log (x / 10) ^ 2 / Real.log 10:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_div_base_exp_bound (x : \u211d) (hx : 1 < x) (hx' : x \u2264 10) :\n    Real.log x \u2264 3 * Real.log 10 + Real.log (x / 10) ^ 2 / Real.log 10:= by\n  have h\u2081 : Real.log x \u2264 Real.log 10 := Real.log_le_log (by linarith) (by linarith)\n  have h\u2082 : Real.log 10 \u2265 0 := Real.log_nonneg (by norm_num)\n  have h\u2083 : Real.log (x / 10) ^ 2 / Real.log 10 \u2265 0 := by positivity\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_div_base_exp_bound (x : \u211d) (hx : 1 < x) (hx' : x \u2264 10) :\n    Real.log x \u2264 3 * Real.log 10 + Real.log (x / 10) ^ 2 / Real.log 10:= by\n  have h\u2081 : Real.log x \u2264 Real.log 10 := Real.log_le_log (by linarith) (by linarith)\n  have h\u2082 : Real.log 10 \u2265 0 := Real.log_nonneg (by norm_num)\n  have h\u2083 : x / 10 \u2264 x := by\n    rw [div_le_iff (by linarith : (0 : \u211d) < 10)]\n    nlinarith\n  have h\u2084 : Real.log (x / 10) \u2264 Real.log x := Real.log_le_log (by positivity) (by linarith)\n  have h\u2085 : Real.log (x / 10) ^ 2 / Real.log 10 \u2265 0 := by positivity\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_div_base_exp_bound (x : \u211d) (hx : 1 < x) (hx' : x \u2264 10) :\n    Real.log x \u2264 3 * Real.log 10 + Real.log (x / 10) ^ 2 / Real.log 10:= by\n  have h\u2081 : Real.log 10 \u2265 0 := Real.log_nonneg (by norm_num)\n  have h\u2082 : x / 10 \u2265 0 := by positivity\n  have h\u2083 : Real.log (x / 10) ^ 2 / Real.log 10 \u2265 0 := by positivity\n  have h\u2084 : Real.log x \u2264 Real.log (10) :=\n    Real.log_le_log (by positivity) (by linarith)\n  have h\u2085 : Real.log (10) = Real.log 10 := rfl\n  have h\u2086 : Real.log x \u2264 Real.log 10 := by linarith\n  nlinarith\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 1) : 2 + Real.sqrt 145 / 5 \u2264 Real.sqrt (5 * a ^ 2 - 20 * a * b + 4) + Real.sqrt (5 * b ^ 2 - 20 * b * c + 4) + Real.sqrt (5 * c ^ 2 - 20 * c * a + 4) \u2227 Real.sqrt (5 * a ^ 2 - 20 * a * b + 4) + Real.sqrt (5 * b ^ 2 - 20 * b * c + 4) + Real.sqrt (5 * c ^ 2 - 20 * c * a + 4) \u2264 7 := by",
  "new": ": Real.sqrt (5 * a ^ 2 - 20 * a * b + 4) \u2265 1 - Real.sqrt 145 / 5:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt (5 * a ^ 2 - 20 * a * b + 4) \u2265 1 - Real.sqrt 145 / 5:= by\n  have h\u2081 : 0 \u2264 (a - 4 * b) ^ 2 := sq_nonneg (a - 4 * b)\n  have h\u2082 : 0 \u2264 (b - 1) ^ 2 := sq_nonneg (b - 1)\n  have h\u2083 : Real.sqrt (5 * a ^ 2 - 20 * a * b + 4) \u2265 1 - Real.sqrt 145 / 5 := by\n    have h\u2084 : 0 \u2264 Real.sqrt 145 / 5 := by positivity\n    have h\u2085 : 0 \u2264 Real.sqrt (5 * a ^ 2 - 20 * a * b + 4) := by\n      apply Real.sqrt_nonneg\n    nlinarith [sq_sqrt (show 0 \u2264 145 from by linarith), h\u2081, h\u2082]\n  linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"
  ]
 },
 {
  "old": "(a b : \u211d) (ha : 0 < a) (hb : 0 < b) : (1 / Real.sqrt a + 1 / Real.sqrt b) \u2265 2 * Real.sqrt 2 / Real.sqrt (a + b) := by",
  "new": ": Real.sqrt 2 \u2264 2 / \u221a (2 + 1) * \u221a (2 + 1):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2264 2 / \u221a (2 + 1) * \u221a (2 + 1):= by\n  rw [mul_comm]\n  rw [mul_comm]\n  norm_num\n  <;> apply le_of_pow_le_pow_left two_ne_zero <;> norm_num\n  <;> ring_nf <;> norm_num\n  <;> rw [Real.sq_sqrt] <;> norm_num\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith"
  ]
 },
 {
  "old": "(a b : \u211d) (ha : 0 < a) (hb : 0 < b) (hab : a + b = 2) : a^2 * b^2 * (a^2 + b^2 - 1) \u2264 1 \u2227 a^3 * b^3 * (a^3 + b^3 - 1) \u2264 2401 / 2048 \u2227 a * b * (a^2 + b^2 - 1) \u2264 9 / 8 \u2227 a * b * (a^3 + b^3 - 1 / 2) \u2264 75 / 32 := by",
  "new": "(a b : \u211d) (ha : 0 < a) (hb : 0 < b) (hab : a + b = 2) : a * b * (a ^ 2 + b ^ 2 - 1) \u2264 9 / 8:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_a10 (a b : \u211d) (ha : 0 < a) (hb : 0 < b) (hab : a + b = 2) :\n     a * b * (a ^ 2 + b ^ 2 - 1) \u2264 9 / 8:= by\n  have h\u2081 : b = 2 - a := by linarith\n  rw [h\u2081]\n  nlinarith [sq_nonneg (a - 2), sq_nonneg (a - 3 / 2), sq_nonneg (a - 1 / 2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_a10 (a b : \u211d) (ha : 0 < a) (hb : 0 < b) (hab : a + b = 2) :\n     a * b * (a ^ 2 + b ^ 2 - 1) \u2264 9 / 8:= by\n  have : b = 2 - a := by linarith\n  subst this\n  nlinarith [mul_self_nonneg (a - 1 / 2), mul_self_nonneg (a - 3 / 2)]\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_a10 (a b : \u211d) (ha : 0 < a) (hb : 0 < b) (hab : a + b = 2) :\n     a * b * (a ^ 2 + b ^ 2 - 1) \u2264 9 / 8:= by\n  have : b = 2 - a := by linarith\n  subst this\n  have h\u2081 : 0 \u2264 (a - 3 / 2) ^ 2 := sq_nonneg _\n  have h\u2082 : 0 \u2264 (a - 1 / 2) ^ 2 := sq_nonneg _\n  nlinarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_a10 (a b : \u211d) (ha : 0 < a) (hb : 0 < b) (hab : a + b = 2) :\n     a * b * (a ^ 2 + b ^ 2 - 1) \u2264 9 / 8:= by\n  have h\u2081 : b = 2 - a := by linarith\n  subst h\u2081\n  nlinarith [sq_nonneg (a - 3 / 2), sq_nonneg (a - 1 / 2), sq_nonneg (a - 1 / 2),\n    mul_self_nonneg (a - 3 / 2), mul_nonneg (sq_nonneg (a - 3 / 2)) (sq_nonneg (a - 1 / 2)),\n    mul_nonneg (sq_nonneg (a - 1 / 2)) (sq_nonneg (a - 3 / 2)), mul_self_nonneg (a - 1 / 2)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : (a / b + b / c + c / a - 1) \u2265 2 * (a ^ 2 + b ^ 2 + c ^ 2) / (a * b + b * c + c * a) := by",
  "new": "(x y z : \u211d) (hx: 0 < x \u2227 0 < y \u2227 0 < z) (h : 0 < x + y + z) (hxy : x ^ 2 + y ^ 2 + z ^ 2 = 3) : x ^ 3 / y ^ 2 + y ^ 3 / z ^ 2 + z ^ 3 / x ^ 2 + 3 * (x + y + z) * (y + z) * (x + z) * (x + y) \u2265 3 * (x + y + z) * (y + z) * (x + z) * (x + y) / 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx: 0 < x \u2227 0 < y \u2227 0 < z) (h : 0 < x + y + z) (hxy : x ^ 2 + y ^ 2 + z ^ 2 = 3) :\n  x ^ 3 / y ^ 2 + y ^ 3 / z ^ 2 + z ^ 3 / x ^ 2 + 3 * (x + y + z) * (y + z) * (x + z) * (x + y) \u2265 3 * (x + y + z) * (y + z) * (x + z) * (x + y) / 3:= by\n  rcases hx with \u27e8h1, h2, h3\u27e9\n  apply le_of_sub_nonneg\n  field_simp [h1, h2, h3, h]\n  ring_nf\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx: 0 < x \u2227 0 < y \u2227 0 < z) (h : 0 < x + y + z) (hxy : x ^ 2 + y ^ 2 + z ^ 2 = 3) :\n  x ^ 3 / y ^ 2 + y ^ 3 / z ^ 2 + z ^ 3 / x ^ 2 + 3 * (x + y + z) * (y + z) * (x + z) * (x + y) \u2265 3 * (x + y + z) * (y + z) * (x + z) * (x + y) / 3:= by\n  rcases hx with \u27e8h1, h2, h3\u27e9\n  have h4 : 0 < x ^ 3 / y ^ 2 + y ^ 3 / z ^ 2 + z ^ 3 / x ^ 2 := by positivity\n  have h5 : 3 * (x + y + z) * (y + z) * (x + z) * (x + y) \u2265 0 := by positivity\n  nlinarith\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx: 0 < x \u2227 0 < y \u2227 0 < z) (h : 0 < x + y + z) (hxy : x ^ 2 + y ^ 2 + z ^ 2 = 3) :\n  x ^ 3 / y ^ 2 + y ^ 3 / z ^ 2 + z ^ 3 / x ^ 2 + 3 * (x + y + z) * (y + z) * (x + z) * (x + y) \u2265 3 * (x + y + z) * (y + z) * (x + z) * (x + y) / 3:= by\n  have h\u2081 : x ^ 3 / y ^ 2 + y ^ 3 / z ^ 2 + z ^ 3 / x ^ 2 \u2265 0 := by\n    have h\u2081 : x ^ 3 / y ^ 2 \u2265 0 := by\n      exact div_nonneg (pow_nonneg (le_of_lt hx.1) 3) (pow_nonneg (le_of_lt hx.2.1) 2)\n    have h\u2082 : y ^ 3 / z ^ 2 \u2265 0 := by\n      exact div_nonneg (pow_nonneg (le_of_lt hx.2.1) 3) (pow_nonneg (le_of_lt hx.2.2) 2)\n    have h\u2083 : z ^ 3 / x ^ 2 \u2265 0 := by\n      exact div_nonneg (pow_nonneg (le_of_lt hx.2.2) 3) (pow_nonneg (le_of_lt hx.1) 2)\n    linarith\n  have h\u2082 : 3 * (x + y + z) * (y + z) * (x + z) * (x + y) \u2265 0 := by\n    exact mul_nonneg (mul_nonneg (mul_nonneg (by linarith) (by linarith)) (by linarith)) (by linarith)\n  nlinarith\n  <;> linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx: 0 < x \u2227 0 < y \u2227 0 < z) (h : 0 < x + y + z) (hxy : x ^ 2 + y ^ 2 + z ^ 2 = 3) :\n  x ^ 3 / y ^ 2 + y ^ 3 / z ^ 2 + z ^ 3 / x ^ 2 + 3 * (x + y + z) * (y + z) * (x + z) * (x + y) \u2265 3 * (x + y + z) * (y + z) * (x + z) * (x + y) / 3:= by\n  rcases hx with \u27e8hx\u2080, hy\u2080, hz\u2080\u27e9\n  refine' le_of_sub_nonneg _\n  field_simp [pow_two]\n  ring_nf\n  positivity"
  ]
 },
 {
  "old": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 (2 * a + b + c) / (a * (b * b + c * c)) + (2 * b + c + a) / (b * (c * c + a * a)) + (2 * c + a + b) / (c * (a * a + b * b)) \u2265 18 / (a * a + b * b + c * c) := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 (2 * a + b + c) / (a * (b * b + c * c)) + (2 * b + c + a) / (b * (c * c + a * a)) + (2 * c + a + b) / (c * (a * a + b * b)) \u2265 9 / (a * a + b * b + c * c):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 (2 * a + b + c) / (a * (b * b + c * c)) + (2 * b + c + a) / (b * (c * c + a * a)) + (2 * c + a + b) / (c * (a * a + b * b)) \u2265 9 / (a * a + b * b + c * c):= by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  have h\u2080 : 0 < a * a + b * b + c * c := by nlinarith\n  have h\u2081 : 0 < a * (b * b + c * c) := by positivity\n  have h\u2082 : 0 < b * (c * c + a * a) := by positivity\n  have h\u2083 : 0 < c * (a * a + b * b) := by positivity\n  have h\u2084 : (2 * a + b + c) / (a * (b * b + c * c)) \u2265 9 / (a * a + b * b + c * c) / 3 := by\n    rw [ge_iff_le]\n    rw [div_eq_mul_inv]\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  have h\u2085 : (2 * b + c + a) / (b * (c * c + a * a)) \u2265 9 / (a * a + b * b + c * c) / 3 := by\n    rw [ge_iff_le]\n    rw [div_eq_mul_inv]\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  have h\u2086 : (2 * c + a + b) / (c * (a * a + b * b)) \u2265 9 / (a * a + b * b + c * c) / 3 := by\n    rw [ge_iff_le]\n    rw [div_eq_mul_inv]\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c \u2265 1) : 1 / (a^2 + b^3 + c^4) + 1 / (b^2 + c^3 + a^4) + 1 / (c^2 + a^3 + b^4) \u2264 1 := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 1 \u2227 b \u2265 1 \u2227 c \u2265 1 \u2192 (a^2 - 1) * (b^2 - 1) * (c^2 - 1) \u2265 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 1 \u2227 b \u2265 1 \u2227 c \u2265 1 \u2192 (a^2 - 1) * (b^2 - 1) * (c^2 - 1) \u2265 0:= by\n  intro a b c h\u2080\n  have h\u2081 : 0 \u2264 a^2 - 1 := by nlinarith\n  have h\u2082 : 0 \u2264 b^2 - 1 := by nlinarith\n  have h\u2083 : 0 \u2264 c^2 - 1 := by nlinarith\n  have h\u2084 : 0 \u2264 (a^2 - 1) * (b^2 - 1) := by nlinarith\n  nlinarith\n  <;> assumption\n  <;> simp_all\n  <;> linarith\n  <;> simp_all only [mul_assoc, mul_comm, mul_left_comm]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 1 \u2227 b \u2265 1 \u2227 c \u2265 1 \u2192 (a^2 - 1) * (b^2 - 1) * (c^2 - 1) \u2265 0:= by\n  intro a b c\n  intro h\n  apply mul_nonneg\n  apply mul_nonneg <;> nlinarith\n  nlinarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 1 \u2227 b \u2265 1 \u2227 c \u2265 1 \u2192 (a^2 - 1) * (b^2 - 1) * (c^2 - 1) \u2265 0:= by\n  rintro a b c \u27e8a_ge, b_ge, c_ge\u27e9\n  refine' mul_nonneg (mul_nonneg _ _) _\n  nlinarith\n  nlinarith\n  nlinarith"
  ]
 },
 {
  "old": "{n : \u2115} (hn : 3 < n) (h : n \u2223 (n-2)!): \u00ac Nat.Prime n := by",
  "new": "(p : \u2115) (hp : p.Prime) (n : \u2115) : Nat.Coprime p n \u2228 p \u2223 n := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (hp : p.Prime) (n : \u2115) : Nat.Coprime p n \u2228 p \u2223 n := by\n  apply or_iff_not_imp_right.mpr\n  intro h\n  exact hp.coprime_iff_not_dvd.mpr h\n  <;> rfl"
  ]
 },
 {
  "old": "(n : \u2115) : \u2211 k in Finset.Icc 1 n, Nat.floor (n / k) = 2 * \u2211 k in Finset.Icc 1 (Nat.floor (Real.sqrt n)), Nat.floor (n / k) - (Nat.floor (Real.sqrt n))^2 := by",
  "new": "(n : \u2115) (hn : 1 < n) : \u2211 k in Finset.Icc 1 n, Nat.floor (n / k) \u2265 n - 1 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_statement (n : \u2115) (hn : 1 < n) : \u2211 k in Finset.Icc 1 n, Nat.floor (n / k) \u2265 n - 1 := by\n  have h1 : \u2211 k in Finset.Icc 1 n, Nat.floor (n / k) \u2265 n - 1 := by\n    calc\n      (\u2211 k in Finset.Icc 1 n, Nat.floor (n / k)) \u2265 \u2211 k in Finset.Icc 1 n, 1 := by\n        apply Finset.sum_le_sum\n        intro x hx\n        simp only [Finset.mem_Icc] at hx\n        have : 1 \u2264 x := hx.1\n        have : x \u2264 n := hx.2\n        have : 1 \u2264 n / x := by\n          apply Nat.div_pos\n          linarith\n          linarith\n        simp [Nat.floor_le, this]\n      _ = n := by simp\n      _ \u2265 n - 1 := by omega\n  exact h1",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_statement (n : \u2115) (hn : 1 < n) : \u2211 k in Finset.Icc 1 n, Nat.floor (n / k) \u2265 n - 1 := by\n  have h\u2081 : \u2200 k : \u2115, k \u2208 Finset.Icc 1 n \u2192 Nat.floor (n / k) \u2265 1 := by\n    intro k hk\n    rw [Finset.mem_Icc] at hk\n    have h\u2081 : 1 \u2264 n / k := by\n      apply Nat.div_pos\n      linarith\n      linarith\n    have h\u2082 : 1 \u2264 Nat.floor (n / k) := by\n      apply Nat.le_floor\n      linarith\n    linarith\n  have h\u2082 : \u2211 k in Finset.Icc 1 n, Nat.floor (n / k) \u2265 n := by\n    calc\n      \u2211 k in Finset.Icc 1 n, Nat.floor (n / k) \u2265 \u2211 k in Finset.Icc 1 n, 1 := by\n        apply Finset.sum_le_sum\n        intro x hx\n        exact h\u2081 x hx\n      _ = n := by simp\n  omega"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : a / (a ^ 2 + a + 1) + b / (b ^ 2 + b + 1) + c / (c ^ 2 + c + 1) \u2264 1 \u2227 1 / (2 * a ^ 2 + 1) + 1 / (2 * b ^ 2 + 1) + 1 / (2 * c ^ 2 + 1) \u2265 1 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) : x / (x ^ 2 + x + 1) + y / (y ^ 2 + y + 1) + z / (z ^ 2 + z + 1) \u2264 1 \u2227 1 / (2 * x ^ 2 + 1) + 1 / (2 * y ^ 2 + 1) + 1 / (2 * z ^ 2 + 1) \u2265 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) : \n    x / (x ^ 2 + x + 1) + y / (y ^ 2 + y + 1) + z / (z ^ 2 + z + 1) \u2264 1 \u2227 \n    1 / (2 * x ^ 2 + 1) + 1 / (2 * y ^ 2 + 1) + 1 / (2 * z ^ 2 + 1) \u2265 1:= by\n  constructor\n  \u00b7 field_simp\n    rw [div_le_iff (by positivity)]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n      mul_self_nonneg (x - 1), mul_self_nonneg (y - 1), mul_self_nonneg (z - 1)]\n  have : 0 < x * y := mul_pos hx hy\n  have : 0 < y * z := mul_pos hy hz\n  have : 0 < z * x := mul_pos hz hx\n  field_simp [habc]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_self_nonneg (x * y - 1), mul_self_nonneg (y * z - 1), mul_self_nonneg (z * x - 1)]\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) : \n    x / (x ^ 2 + x + 1) + y / (y ^ 2 + y + 1) + z / (z ^ 2 + z + 1) \u2264 1 \u2227 \n    1 / (2 * x ^ 2 + 1) + 1 / (2 * y ^ 2 + 1) + 1 / (2 * z ^ 2 + 1) \u2265 1:= by\n  have h\u2080 : 0 < x * y := by positivity\n  have h\u2081 : 0 < y * z := by positivity\n  have h\u2082 : 0 < x * z := by positivity\n  constructor\n  field_simp [pow_two]\n  rw [div_le_iff (by positivity)]\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (y - 1), sq_nonneg (z - 1),\n    mul_self_nonneg (x - y), mul_self_nonneg (y - z), mul_self_nonneg (z - x)]\n  field_simp [pow_two]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (y - 1), sq_nonneg (z - 1),\n    mul_self_nonneg (x - y), mul_self_nonneg (y - z), mul_self_nonneg (z - x)]"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x \u2227 x < Real.pi / 4) (hy : 0 < y \u2227 y < Real.pi / 4) (hz : 0 < z \u2227 z < Real.pi / 4) (h : (1 - Real.tan x) * (1 - Real.tan y) * (1 - Real.tan z) = Real.tan x * Real.tan y * Real.tan z) : 1 / (Real.cos x ^ 2) + 1 / (Real.cos y ^ 2) + 1 / (Real.cos z ^ 2) \u2265 5 / 2 * (Real.tan x + Real.tan y + Real.tan z) := by",
  "new": ": \u2200 x : \u211d, 0 < x \u2227 x < Real.pi / 4 \u2192 (1 - Real.tan x) * (1 - Real.tan x) * (1 - Real.tan x) \u2264 Real.tan x * Real.tan x * Real.tan x \u2192 1 / (Real.cos x ^ 2) \u2265 2 / 2 * (Real.tan x) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d,\n   0 < x \u2227 x < Real.pi / 4 \u2192\n   (1 - Real.tan x) * (1 - Real.tan x) * (1 - Real.tan x) \u2264 Real.tan x * Real.tan x * Real.tan x \u2192\n   1 / (Real.cos x ^ 2) \u2265 2 / 2 * (Real.tan x)  := by\n  intro x h\u2081 h\u2082\n  have h\u2083 : Real.cos x > 0 := Real.cos_pos_of_mem_Ioo \u27e8by linarith [h\u2081.1], by linarith [h\u2081.2]\u27e9\n  have h\u2084 : Real.tan x > 0 := Real.tan_pos_of_pos_of_lt_pi_div_two (by linarith [h\u2081.1]) (by linarith [h\u2081.2])\n  field_simp [Real.tan_eq_sin_div_cos] at h\u2082 \u22a2\n  rw [div_le_div_iff (by positivity) (by positivity)] at *\n  nlinarith [Real.sin_sq_add_cos_sq x, mul_self_nonneg (Real.sin x - Real.cos x), mul_self_nonneg (Real.sin x + Real.cos x)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d,\n   0 < x \u2227 x < Real.pi / 4 \u2192\n   (1 - Real.tan x) * (1 - Real.tan x) * (1 - Real.tan x) \u2264 Real.tan x * Real.tan x * Real.tan x \u2192\n   1 / (Real.cos x ^ 2) \u2265 2 / 2 * (Real.tan x)  := by\n  rintro x \u27e8hx_left, hx_right\u27e9 hx_tan\n  have h\u2080 : 0 < Real.cos x := Real.cos_pos_of_mem_Ioo \u27e8by linarith, by linarith [Real.pi_pos]\u27e9\n  have h\u2081 : 0 < Real.sin x := Real.sin_pos_of_mem_Ioo \u27e8by linarith, by linarith [Real.pi_pos]\u27e9\n  field_simp [Real.tan_eq_sin_div_cos] at hx_tan \u22a2\n  rw [div_le_div_iff (by positivity) (by positivity)] at *\n  nlinarith [Real.sin_sq_add_cos_sq x, sq_nonneg (Real.sin x - Real.cos x),\n    Real.sin_le_one x, Real.cos_le_one x]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d,\n   0 < x \u2227 x < Real.pi / 4 \u2192\n   (1 - Real.tan x) * (1 - Real.tan x) * (1 - Real.tan x) \u2264 Real.tan x * Real.tan x * Real.tan x \u2192\n   1 / (Real.cos x ^ 2) \u2265 2 / 2 * (Real.tan x)  := by\n  intro x h\u2080 h\u2081\n  have h\u2082 : 0 < Real.cos x := Real.cos_pos_of_mem_Ioo \u27e8by linarith, by linarith [Real.pi_pos]\u27e9\n  have h\u2083 : 0 < Real.sin x := Real.sin_pos_of_mem_Ioo \u27e8by linarith, by linarith [Real.pi_pos]\u27e9\n  rw [Real.tan_eq_sin_div_cos]\n  field_simp [h\u2082.ne', h\u2083.ne', mul_assoc]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sin_sq_add_cos_sq x, mul_self_nonneg (sin x - cos x), mul_self_nonneg (sin x + cos x),\n    mul_self_nonneg (sin x * cos x)]"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) (habc : a + b + c + d = 1) : a * b * c * d / ((1 - a) * (1 - b) * (1 - c) * (2 - d)) \u2264 (3 - 2 * Real.sqrt 2) / 32 := by",
  "new": ": Real.sqrt 2 \u2264 2 / \u221a (1 - (1 / 32) * (3 - 2 * Real.sqrt 2)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2264 2 / \u221a (1 - (1 / 32) * (3 - 2 * Real.sqrt 2)) := by\n  have h\u2080 : 0 \u2264 Real.sqrt 2 := Real.sqrt_nonneg _\n  have h\u2081 : 0 \u2264 (1 / 32) * (3 - 2 * Real.sqrt 2) := by\n    apply mul_nonneg\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_sqrt (show 0 \u2264 2 from by positivity)]\n  have h\u2082 : 1 - (1 / 32) * (3 - 2 * Real.sqrt 2) > 0 := by\n    nlinarith [sq_sqrt (show 0 \u2264 2 from by positivity)]\n  have h\u2083 : \u221a (1 - (1 / 32) * (3 - 2 * Real.sqrt 2)) > 0 := Real.sqrt_pos.mpr (by\n    nlinarith [sq_sqrt (show 0 \u2264 2 from by positivity)])\n  have h\u2084 : Real.sqrt 2 \u2264 2 / \u221a (1 - (1 / 32) * (3 - 2 * Real.sqrt 2)) := by\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_sqrt (show 0 \u2264 2 from by positivity),\n      Real.sq_sqrt (show 0 \u2264 1 - (1 / 32) * (3 - 2 * Real.sqrt 2) from by\n        nlinarith [sq_sqrt (show 0 \u2264 2 from by positivity)])]\n  exact h\u2084",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2264 2 / \u221a (1 - (1 / 32) * (3 - 2 * Real.sqrt 2)) := by\n  have h : 0 < Real.sqrt 2 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2081 : 0 < 1 - (1 / 32) * (3 - 2 * Real.sqrt 2) := by\n    nlinarith [sq_sqrt (show (0 : \u211d) \u2264 2 by norm_num)]\n  have h\u2082 : 0 < \u221a (1 - (1 / 32) * (3 - 2 * Real.sqrt 2)) := Real.sqrt_pos.mpr h\u2081\n  have h\u2083 : Real.sqrt 2 \u2264 2 / \u221a (1 - (1 / 32) * (3 - 2 * Real.sqrt 2)) := by\n    rw [le_div_iff h\u2082]\n    nlinarith [sq_sqrt (show (0 : \u211d) \u2264 2 by norm_num),\n      sq_sqrt (show (0 : \u211d) \u2264 1 - (1 / 32) * (3 - 2 * Real.sqrt 2) by\n        nlinarith [sq_sqrt (show (0 : \u211d) \u2264 2 by norm_num)]),\n      sq_nonneg (Real.sqrt 2 - 4)]\n  exact h\u2083"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a * b + b * c + c * a + a * b * c = 4) : (b ^ 2 + c ^ 2) / (a + 2) + (c ^ 2 + a ^ 2) / (b + 2) + (a ^ 2 + b ^ 2) / (c + 2) \u2265 (a * b * (a + b) + b * c * (b + c) + c * a * (c + a)) / (a ^ 2 + b ^ 2 + c ^ 2) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h\u2080 : x + y + z = 1) (h\u2081 : 0 < x * y * z) : x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 + 3 * (x * y + y * z + z * x) \u2265 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2080 : x + y + z = 1) (h\u2081 : 0 < x * y * z)  : \n  x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 + 3 * (x * y + y * z + z * x) \u2265 3:= by\n  have h\u2082 : 0 < x * y := by positivity\n  have h\u2083 : 0 < y * z := by positivity\n  have h\u2084 : 0 < z * x := by positivity\n  have h\u2085 : x * y + y * z + z * x \u2265 0 := by positivity\n  have h\u2086 : x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 \u2265 3 := by\n    have h\u2087 : 0 < y ^ 2 := by positivity\n    have h\u2088 : 0 < z ^ 2 := by positivity\n    have h\u2089 : 0 < x ^ 2 := by positivity\n    have h\u2081\u2080 : 0 < y ^ 2 * z ^ 2 := by positivity\n    have h\u2081\u2081 : 0 < x ^ 2 * y ^ 2 := by positivity\n    have h\u2081\u2082 : 0 < x ^ 2 * z ^ 2 := by positivity\n    field_simp [h\u2087, h\u2088, h\u2089]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (y ^ 2 - z ^ 2), sq_nonneg (z ^ 2 - x ^ 2)]\n  linarith\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2080 : x + y + z = 1) (h\u2081 : 0 < x * y * z)  : \n  x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 + 3 * (x * y + y * z + z * x) \u2265 3:= by\n  have : 0 < x * y := by positivity\n  have : 0 < y * z := by positivity\n  have : 0 < z * x := by positivity\n  have h\u2082 : x * y * z > 0 := by positivity\n  have h\u2083 : x * y + y * z + z * x > 0 := by positivity\n  have h\u2084 : x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 \u2265 3 := by\n    rw [add_comm]\n    have : 0 < y ^ 2 := by positivity\n    have : 0 < z ^ 2 := by positivity\n    have : 0 < x ^ 2 := by positivity\n    have : 0 < x ^ 2 * y ^ 2 := by positivity\n    have : 0 < y ^ 2 * z ^ 2 := by positivity\n    have : 0 < z ^ 2 * x ^ 2 := by positivity\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (y ^ 2 - z ^ 2),\n      sq_nonneg (z ^ 2 - x ^ 2)]\n  linarith\n  <;> linarith\n  <;> linarith"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : x > 0) (hy : y > 0) (hz : z > 0) (h : x * y * z = 1) : 1 / (4 * x + y ^ 3 * z + y * z ^ 3) + 1 / (4 * y + z ^ 3 * x + z * x ^ 3) + 1 / (4 * z + x ^ 3 * y + x * y ^ 3) \u2264 3 / 6 := by",
  "new": "{x y z : \u211d} (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) : 1 / (x ^ 2 + y * z) + 1 / (y ^ 2 + z * x) + 1 / (z ^ 2 + x * y) \u2264 9 / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {x y z : \u211d} (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) :\n      1 / (x ^ 2 + y * z) + 1 / (y ^ 2 + z * x) + 1 / (z ^ 2 + x * y) \u2264 9 / 2:= by\n  have : 0 < x * y := by positivity\n  have : 0 < y * z := by positivity\n  have : 0 < z * x := by positivity\n  have h\u2080 : 0 < x ^ 2 + y * z := by positivity\n  have h\u2081 : 0 < y ^ 2 + z * x := by positivity\n  have h\u2082 : 0 < z ^ 2 + x * y := by positivity\n  have h\u2083 : 1 / (x ^ 2 + y * z) \u2264 3 / 2 := by\n    rw [div_le_iff h\u2080]\n    nlinarith\n  have h\u2084 : 1 / (y ^ 2 + z * x) \u2264 3 / 2 := by\n    rw [div_le_iff h\u2081]\n    nlinarith\n  have h\u2085 : 1 / (z ^ 2 + x * y) \u2264 3 / 2 := by\n    rw [div_le_iff h\u2082]\n    nlinarith\n  linarith"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : x \u2265 0) (hy : y \u2265 0) (hz : z \u2265 0) : x * y + y * z + z * x \u2265 Real.sqrt (3 * (x + y + z) * x * y * z) := by",
  "new": "(x y : \u2115) (h : x ^ 2 + y ^ 2 < 2 * x * y) : Nat.Coprime x y \u2228 x \u2264 1 \u2227 y \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_small_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 < 2 * x * y) :\n    Nat.Coprime x y \u2228 x \u2264 1 \u2227 y \u2264 1:= by\n  by_contra! hxy\n  have : x \u2264 y := by\n    by_contra! hxy'\n    have : y \u2264 x := by\n      by_contra! hxy'\n      nlinarith\n    nlinarith\n  nlinarith [h, this]\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 3) : (x * y ^ 3 + y * z ^ 3 + z * x ^ 3) * (x * y + y * z + z * x) \u2264 16 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 3) : (x ^ 3 / y + y ^ 3 / z + z ^ 3 / x) * (x + y + z) \u2265 x ^ 2 + y ^ 2 + z ^ 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 3) : (x ^ 3 / y + y ^ 3 / z + z ^ 3 / x) * (x + y + z) \u2265 x ^ 2 + y ^ 2 + z ^ 2:= by\n  have hx' : 0 < x ^ 2 := pow_pos hx 2\n  have hy' : 0 < y ^ 2 := pow_pos hy 2\n  have hz' : 0 < z ^ 2 := pow_pos hz 2\n  have hxy : 0 < x * y := mul_pos hx hy\n  have hyz : 0 < y * z := mul_pos hy hz\n  have hxz : 0 < x * z := mul_pos hx hz\n  have h1 : 0 < x * y * z := by positivity\n  have h2 : 0 < x ^ 2 * y * z := by positivity\n  have h3 : 0 < y ^ 2 * x * z := by positivity\n  have h4 : 0 < z ^ 2 * x * y := by positivity\n  field_simp [h]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x ^ 2 - y * z), mul_self_nonneg (y ^ 2 - x * z),\n    mul_self_nonneg (z ^ 2 - x * y)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (Real.sqrt (a + b + c) + Real.sqrt a) / (b + c) + (Real.sqrt (a + b + c) + Real.sqrt b) / (c + a) + (Real.sqrt (a + b + c) + Real.sqrt c) / (a + b) \u2265 (9 + 3 * Real.sqrt 3) / (2 * Real.sqrt (a + b + c)) := by",
  "new": ": Real.sqrt (a + b + c) / 2 + Real.sqrt (a + b + c) / 2 \u2265 1/2 * Real.sqrt (a + b + c):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (a + b + c) / 2 + Real.sqrt (a + b + c) / 2 \u2265 1/2 * Real.sqrt (a + b + c):= by\n  have : Real.sqrt (a + b + c) / 2 + Real.sqrt (a + b + c) / 2 = Real.sqrt (a + b + c) := by ring\n  rw [this]\n  nlinarith [Real.sqrt_nonneg (a + b + c)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (a + b + c) / 2 + Real.sqrt (a + b + c) / 2 \u2265 1/2 * Real.sqrt (a + b + c):= by\n  nlinarith [Real.sqrt_nonneg (a + b + c)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (a + b + c) / 2 + Real.sqrt (a + b + c) / 2 \u2265 1/2 * Real.sqrt (a + b + c):= by\n  nlinarith [show 0 \u2264 Real.sqrt (a + b + c) by exact Real.sqrt_nonneg (a + b + c)]"
  ]
 },
 {
  "old": "(a b c : \u211d) : a * Real.log a + b * Real.log b + c * Real.log c \u2265 (a + b + c) * Real.log ((a + b + c) / 3) := by",
  "new": "{x : \u211d} (hx : 0 < x) : Real.log x \u2264 x - 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_le_sub_one_of_pos {x : \u211d} (hx : 0 < x) : Real.log x \u2264 x - 1:= by\n  have : Real.log x \u2264 x - 1 := by\n    linarith [Real.log_le_sub_one_of_pos hx, hx]\n  linarith [Real.log_le_sub_one_of_pos hx, hx]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_le_sub_one_of_pos {x : \u211d} (hx : 0 < x) : Real.log x \u2264 x - 1:= by\n  have := Real.log_le_sub_one_of_pos hx\n  exact this",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_le_sub_one_of_pos {x : \u211d} (hx : 0 < x) : Real.log x \u2264 x - 1:= by\n  have := Real.log_le_sub_one_of_pos hx\n  linarith [Real.log_le_sub_one_of_pos hx]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_le_sub_one_of_pos {x : \u211d} (hx : 0 < x) : Real.log x \u2264 x - 1:= by\n  have := Real.log_le_sub_one_of_pos hx\n  linarith [this]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : 1 / a + 2 / b + 1 / c + 1 / (a * b + 2) + 1 / (b * c + 2) + 1 / (2 * c * a + 2) \u2265 3 / 10 * (4 + 8 * (2:\u211d)^(1 / 3) + (2:\u211d)^(2 / 3)) := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192 1 / a + 2 / b + 1 / c + 1 / (a * b + 2) + 1 / (b * c + 2) + 1 / (2 * c * a + 2) \u2265 3 / 10 * (4 + 8 * (2:\u211d)^(1 / 3) + (2:\u211d)^(2 / 3)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192\n   1 / a + 2 / b + 1 / c + 1 / (a * b + 2) + 1 / (b * c + 2) + 1 / (2 * c * a + 2) \u2265 3 / 10 * (4 + 8 * (2:\u211d)^(1 / 3) + (2:\u211d)^(2 / 3)) := by\n  rintro a b c \u27e8ha, hb, hc, h\u27e9\n  norm_num\n  have h\u2081 : 0 < a * b := by positivity\n  have h\u2082 : 0 < b * c := by positivity\n  have h\u2083 : 0 < c * a := by positivity\n  have h\u2084 : 0 < a * b * (b * c) := by positivity\n  have h\u2085 : 0 < b * c * (c * a) := by positivity\n  have h\u2086 : 0 < c * a * (a * b) := by positivity\n  field_simp [h, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    sq_nonneg (a * b - 1), sq_nonneg (b * c - 1), sq_nonneg (c * a - 1)]"
  ]
 },
 {
  "old": "(n : \u2115) (a : \u2115 \u2192 \u211d) : 1 + \u2211 i in Finset.range n, (a i)^2 + (\u2211 i in Finset.range n, a i)^2 \u2265 (2/Real.sqrt (n+1)) * (\u2211 i in Finset.range n, |a i| + |\u2211 i in Finset.range n, a i|) := by",
  "new": "(n : \u2115) (a : \u2115 \u2192 \u211d) : \u2211 i in Finset.range n, a i * a (n - 1 - i) \u2264 (1 / 2) * (\u2211 i in Finset.range n, a i ^ 2) + (1 / 2) * (\u2211 i in Finset.range n, a (n - 1 - i) ^ 2) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (n : \u2115) (a : \u2115 \u2192 \u211d) :\n  \u2211 i in Finset.range n, a i * a (n - 1 - i) \u2264\n  (1 / 2) * (\u2211 i in Finset.range n, a i ^ 2) + (1 / 2) * (\u2211 i in Finset.range n, a (n - 1 - i) ^ 2) := by\n  have h\u2080 : (\u2211 i in Finset.range n, a i * a (n - 1 - i)) = \u2211 i in Finset.range n, a i * a (n - 1 - i) := rfl\n  have h\u2081 : (\u2211 i in Finset.range n, a i ^ 2) = \u2211 i in Finset.range n, a i ^ 2 := rfl\n  have h\u2082 : (\u2211 i in Finset.range n, a (n - 1 - i) ^ 2) = \u2211 i in Finset.range n, a (n - 1 - i) ^ 2 := rfl\n  rw [h\u2080, h\u2081, h\u2082]\n  have h\u2083 : (\u2211 i in Finset.range n, a i * a (n - 1 - i)) \u2264 (1 / 2) * (\u2211 i in Finset.range n, a i ^ 2) + (1 / 2) * (\u2211 i in Finset.range n, a (n - 1 - i) ^ 2) := by\n    have h\u2084 : \u2200 i \u2208 Finset.range n, a i * a (n - 1 - i) \u2264 (1 / 2) * a i ^ 2 + (1 / 2) * a (n - 1 - i) ^ 2 := by\n      intro i _\n      nlinarith [sq_nonneg (a i - a (n - 1 - i))]\n    calc\n      \u2211 i in Finset.range n, a i * a (n - 1 - i) \u2264 \u2211 i in Finset.range n, ((1 / 2) * a i ^ 2 + (1 / 2) * a (n - 1 - i) ^ 2) := Finset.sum_le_sum h\u2084\n      _ = (1 / 2) * (\u2211 i in Finset.range n, a i ^ 2) + (1 / 2) * (\u2211 i in Finset.range n, a (n - 1 - i) ^ 2) := by\n        simp [Finset.mul_sum, Finset.sum_add_distrib]\n  exact h\u2083",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (n : \u2115) (a : \u2115 \u2192 \u211d) :\n  \u2211 i in Finset.range n, a i * a (n - 1 - i) \u2264\n  (1 / 2) * (\u2211 i in Finset.range n, a i ^ 2) + (1 / 2) * (\u2211 i in Finset.range n, a (n - 1 - i) ^ 2) := by\n  have h\u2080 : \u2200 i \u2208 Finset.range n, a i * a (n - 1 - i) \u2264 (1 / 2) * (a i ^ 2 + a (n - 1 - i) ^ 2) := by\n    intro i _\n    linarith [sq_nonneg (a i - a (n - 1 - i))]\n  have h\u2081 : \u2211 i in Finset.range n, (a i * a (n - 1 - i)) \u2264\n     \u2211 i in Finset.range n, (1 / 2) * (a i ^ 2 + a (n - 1 - i) ^ 2) := by\n    apply Finset.sum_le_sum h\u2080\n  have h\u2082 : \u2211 i in Finset.range n, (1 / 2) * (a i ^ 2 + a (n - 1 - i) ^ 2) =\n     (1 / 2) * (\u2211 i in Finset.range n, a i ^ 2 + \u2211 i in Finset.range n, a (n - 1 - i) ^ 2) := by\n    simp [Finset.mul_sum, mul_add, Finset.sum_add_distrib]\n  linarith\n  <;> norm_num"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) : (a^4 + b^4 + c^4) / (a * b + b * c + c * a) + 3 * a * b * c / (a + b + c) \u2265 (2 * (a^2 + b^2 + c^2)) / 3 := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 (a^4 + b^4 + c^4) / (a * b + b * c + c * a) + 3 * a * b * c / (a + b + c) \u2265 (2 * (a^2 + b^2 + c^2)) / 3 \u2227 (2 * (a^2 + b^2 + c^2)) / 3 \u2265 (a^2 + b^2 + c^2) / 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 (a^4 + b^4 + c^4) / (a * b + b * c + c * a) + 3 * a * b * c / (a + b + c) \u2265\n             (2 * (a^2 + b^2 + c^2)) / 3 \u2227 (2 * (a^2 + b^2 + c^2)) / 3 \u2265\n             (a^2 + b^2 + c^2) / 3:= by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  have : 0 < a * b := by positivity\n  have : 0 < b * c := by positivity\n  have : 0 < c * a := by positivity\n  constructor\n  \u00b7 field_simp [ha, hb, hc]\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      mul_self_nonneg (a ^ 2 - b ^ 2), mul_self_nonneg (b ^ 2 - c ^ 2),\n      mul_self_nonneg (c ^ 2 - a ^ 2),\n      mul_self_nonneg (a ^ 2 - 2 * a * b + b ^ 2),\n      mul_self_nonneg (b ^ 2 - 2 * b * c + c ^ 2),\n      mul_self_nonneg (c ^ 2 - 2 * c * a + a ^ 2)]\n  \u00b7 field_simp\n    ring_nf\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 (a^4 + b^4 + c^4) / (a * b + b * c + c * a) + 3 * a * b * c / (a + b + c) \u2265\n             (2 * (a^2 + b^2 + c^2)) / 3 \u2227 (2 * (a^2 + b^2 + c^2)) / 3 \u2265\n             (a^2 + b^2 + c^2) / 3:= by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  have hab : 0 < a * b := by positivity\n  have hbc : 0 < b * c := by positivity\n  have hac : 0 < c * a := by positivity\n  constructor\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a^2 - b^2), mul_self_nonneg (b^2 - c^2),\n    mul_self_nonneg (c^2 - a^2), mul_self_nonneg (a^2 + b^2 - 2 * a * b),\n    mul_self_nonneg (b^2 + c^2 - 2 * b * c), mul_self_nonneg (c^2 + a^2 - 2 * c * a)]\n  apply le_of_sub_nonneg\n  ring_nf\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 (a^4 + b^4 + c^4) / (a * b + b * c + c * a) + 3 * a * b * c / (a + b + c) \u2265\n             (2 * (a^2 + b^2 + c^2)) / 3 \u2227 (2 * (a^2 + b^2 + c^2)) / 3 \u2265\n             (a^2 + b^2 + c^2) / 3:= by\n  intro a b c h\u2080\n  have h\u2081 : 0 < a := h\u2080.1\n  have h\u2082 : 0 < b := h\u2080.2.1\n  have h\u2083 : 0 < c := h\u2080.2.2\n  have h\u2084 : 0 < a * b := by positivity\n  have h\u2085 : 0 < b * c := by positivity\n  have h\u2086 : 0 < c * a := by positivity\n  have h\u2087 : 0 < a * b * c := by positivity\n  have h\u2088 : 0 < a * b + b * c + c * a := by positivity\n  have h\u2089 : 0 < a * b * c * (a + b + c) := by positivity\n  constructor\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087, h\u2088, h\u2089]\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    sq_nonneg (a ^ 2 - 2 * a * b + b ^ 2), sq_nonneg (b ^ 2 - 2 * b * c + c ^ 2),\n    sq_nonneg (c ^ 2 - 2 * c * a + a ^ 2)]\n  positivity\n  positivity\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087, h\u2088, h\u2089]\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2)]\n  positivity\n  positivity"
  ]
 },
 {
  "old": "(n m : \u2115) : \u2211 i in Finset.range (n+1), (Nat.choose n i * Nat.choose m i) = Nat.choose (n + m) n := by",
  "new": "(n m : \u2115) : (Nat.fib (n + m)).Coprime (Nat.fib (n + m + 1)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_succ_coprime (n m : \u2115) : (Nat.fib (n + m)).Coprime (Nat.fib (n + m + 1)) := by\n  simpa [Nat.Coprime, Nat.gcd_eq_right] using\n    Nat.fib_coprime_fib_succ (n + m)\n  <;> rfl\n  <;> rfl\n  <;> rfl"
  ]
 },
 {
  "old": "(a b : \u211d) : \u2203 x y : \u211d, a = x^3 + y^3 + x*y \u2227 b = x^3 - y^3 - x*y := by",
  "new": "(x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y):= by\n  by_cases h : Nat.Coprime x y <;> simp [h]\n  <;>\n  rcases Nat.eq_zero_or_pos x with (h | h) <;>\n  rcases Nat.eq_zero_or_pos y with (h' | h') <;>\n  simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right] <;>\n  omega\n  <;>\n  omega\n  <;>\n  omega\n  <;>\n  omega\n  <;>\n  omega\n  <;>\n  omega\n  <;>\n  omega\n  <;>\n  omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y):= by\n  cases em (x.Coprime y) with\n  | inl h => exact Or.inl h\n  | inr h => exact Or.inr h\n  <;> rfl\n  <;> rfl"
  ]
 },
 {
  "old": ": x^5 + x^4 - 12*x^3 - 21*x^2 + x + 5 = 0 \u2194 x = -5 \u2228 x = -1 \u2228 x = 2 \u2228 x = 3 \u2228 x = 4 := by",
  "new": "(h\u2081 : 2 \u2223 x ^ 2 + 1) (h\u2082 : 4 \u2223 x ^ 2 + 1) : x = 0 \u2228 x = 1 \u2228 x = 3 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_dvd (h\u2081 : 2 \u2223 x ^ 2 + 1) (h\u2082 : 4 \u2223 x ^ 2 + 1) : x = 0 \u2228 x = 1 \u2228 x = 3 := by\n  norm_num at h\u2081 h\u2082\n  have : x % 4 = 0 \u2228 x % 4 = 1 \u2228 x % 4 = 2 \u2228 x % 4 = 3 := by omega\n  rcases this with (h | h | h | h) <;>\n  simp [h, Nat.dvd_iff_mod_eq_zero, Nat.pow_mod, Nat.add_mod, Nat.mul_mod] at h\u2081 h\u2082 <;>\n  omega\n  <;>\n  omega\n  <;>\n  omega\n  <;>\n  omega\n  <;>\n  omega\n  <;>\n  omega\n  <;>\n  omega\n  <;>\n  omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_dvd (h\u2081 : 2 \u2223 x ^ 2 + 1) (h\u2082 : 4 \u2223 x ^ 2 + 1) : x = 0 \u2228 x = 1 \u2228 x = 3 := by\n  rw [Nat.dvd_iff_mod_eq_zero] at h\u2081 h\u2082\n  have h\u2083 : x ^ 2 % 4 = 0 \u2228 x ^ 2 % 4 = 1 := by\n    have h\u2084 : x % 4 = 0 \u2228 x % 4 = 1 \u2228 x % 4 = 2 \u2228 x % 4 = 3 := by omega\n    rcases h\u2084 with (h\u2084 | h\u2084 | h\u2084 | h\u2084) <;>\n      simp [h\u2084, pow_two, Nat.add_mod, Nat.mul_mod, Nat.mod_mod]\n  rcases h\u2083 with (h\u2083 | h\u2083) <;>\n    omega\n  <;>\n    omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_dvd (h\u2081 : 2 \u2223 x ^ 2 + 1) (h\u2082 : 4 \u2223 x ^ 2 + 1) : x = 0 \u2228 x = 1 \u2228 x = 3 := by\n  have h\u2083 : x ^ 2 % 4 = 0 \u2228 x ^ 2 % 4 = 1 := by\n    have h\u2084 : x % 4 = 0 \u2228 x % 4 = 1 \u2228 x % 4 = 2 \u2228 x % 4 = 3 := by omega\n    rcases h\u2084 with (h\u2084 | h\u2084 | h\u2084 | h\u2084) <;>\n      simp [h\u2084, pow_two, Nat.mul_mod, Nat.add_mod, Nat.mod_eq_of_lt]\n  omega\n  <;> assumption\n  <;> simp_all\n  <;> omega"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) (habc : a + b + c + d = 4) : a^2 / (b + c + d) + b^2 / (c + d + a) + c^2 / (d + a + b) + d^2 / (a + b + c) \u2265 4 / 3 := by",
  "new": ": \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192 a + b + c + d = 4 \u2192 a^2 / (b + c + d) + b^2 / (c + d + a) + c^2 / (d + a + b) + d^2 / (a + b + c) \u2265 4 / 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192 a + b + c + d = 4 \u2192 a^2 / (b + c + d) + b^2 / (c + d + a) + c^2 / (d + a + b) + d^2 / (a + b + c) \u2265 4 / 3:= by\n  intro a b c d h\u2080 h\u2081 h\u2082 h\u2083 h\u2084\n  have h\u2085 : 0 < b + c + d := by linarith\n  have h\u2086 : 0 < c + d + a := by linarith\n  have h\u2087 : 0 < d + a + b := by linarith\n  have h\u2088 : 0 < a + b + c := by linarith\n  have h\u2089 : a ^ 2 / (b + c + d) \u2265 (2 * a - (b + c + d) / 3) / 3 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a - (b + c + d) / 3)]\n  have h\u2081\u2080 : b ^ 2 / (c + d + a) \u2265 (2 * b - (c + d + a) / 3) / 3 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (b - (c + d + a) / 3)]\n  have h\u2081\u2081 : c ^ 2 / (d + a + b) \u2265 (2 * c - (d + a + b) / 3) / 3 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (c - (d + a + b) / 3)]\n  have h\u2081\u2082 : d ^ 2 / (a + b + c) \u2265 (2 * d - (a + b + c) / 3) / 3 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (d - (a + b + c) / 3)]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192 a + b + c + d = 4 \u2192 a^2 / (b + c + d) + b^2 / (c + d + a) + c^2 / (d + a + b) + d^2 / (a + b + c) \u2265 4 / 3:= by\n  intro a b c d ha hb hc hd h_sum\n  have h_b_pos : 0 < b + c + d := by linarith\n  have h_c_pos : 0 < c + d + a := by linarith\n  have h_d_pos : 0 < d + a + b := by linarith\n  have h_a_pos : 0 < a + b + c := by linarith\n  have h\u2080 : a ^ 2 / (b + c + d) \u2265 (2 * a - (b + c + d) / 3) / 3 := by\n    rw [ge_iff_le]\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a - (b + c + d) / 3)]\n  have h\u2081 : b ^ 2 / (c + d + a) \u2265 (2 * b - (c + d + a) / 3) / 3 := by\n    rw [ge_iff_le]\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (b - (c + d + a) / 3)]\n  have h\u2082 : c ^ 2 / (d + a + b) \u2265 (2 * c - (d + a + b) / 3) / 3 := by\n    rw [ge_iff_le]\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (c - (d + a + b) / 3)]\n  have h\u2083 : d ^ 2 / (a + b + c) \u2265 (2 * d - (a + b + c) / 3) / 3 := by\n    rw [ge_iff_le]\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (d - (a + b + c) / 3)]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192 a + b + c + d = 4 \u2192 a^2 / (b + c + d) + b^2 / (c + d + a) + c^2 / (d + a + b) + d^2 / (a + b + c) \u2265 4 / 3:= by\n  intro a b c d h\u2080 h\u2081 h\u2082 h\u2083 h\u2084\n  have : a + b + c + d = 4 := h\u2084\n  have h\u2085 : a^2 / (b + c + d) \u2265 (2 * a - (b + c + d) / 3) / 3 := by\n    rw [ge_iff_le, le_div_iff]\n    nlinarith [sq_nonneg (a - (b + c + d) / 3)]\n    nlinarith\n  have h\u2086 : b^2 / (c + d + a) \u2265 (2 * b - (c + d + a) / 3) / 3 := by\n    rw [ge_iff_le, le_div_iff]\n    nlinarith [sq_nonneg (b - (c + d + a) / 3)]\n    nlinarith\n  have h\u2087 : c^2 / (d + a + b) \u2265 (2 * c - (d + a + b) / 3) / 3 := by\n    rw [ge_iff_le, le_div_iff]\n    nlinarith [sq_nonneg (c - (d + a + b) / 3)]\n    nlinarith\n  have h\u2088 : d^2 / (a + b + c) \u2265 (2 * d - (a + b + c) / 3) / 3 := by\n    rw [ge_iff_le, le_div_iff]\n    nlinarith [sq_nonneg (d - (a + b + c) / 3)]\n    nlinarith\n  nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : (2 * a ^ 2 + b ^ 2 + c ^ 2) / (4 - b * c) + (a ^ 2 + 2 * b ^ 2 + c ^ 2) / (4 - c * a) + (a ^ 2 + b ^ 2 + 2 * c ^ 2) / (4 - a * b) \u2265 4 * a * b * c := by",
  "new": ": \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c = 3 \u2192 (a * b + b * c + c * a) ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) \u2264 a + b + c + (2 * a * b + 2 * b * c + 2 * c * a) / 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c = 3 \u2192\n    (a * b + b * c + c * a) ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) \u2264 a + b + c + (2 * a * b + 2 * b * c + 2 * c * a) / 3:= by\n  intro a b c h\n  have h\u2081 : (a + b + c) ^ 2 = 9 := by nlinarith\n  have h\u2082 : 0 < a * b := by nlinarith\n  have h\u2083 : 0 < b * c := by nlinarith\n  have h\u2084 : 0 < c * a := by nlinarith\n  have h\u2085 : 0 < a * b + b * c + c * a := by nlinarith\n  have h\u2086 : 0 < a ^ 2 + b ^ 2 + c ^ 2 := by nlinarith\n  field_simp [h\u2086]\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (a * b + b * c + c * a), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  nlinarith\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c = 3 \u2192\n    (a * b + b * c + c * a) ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) \u2264 a + b + c + (2 * a * b + 2 * b * c + 2 * c * a) / 3:= by\n  intro a b c h\n  rcases h with \u27e8ha, hb, hc, habc\u27e9\n  have hab : 0 < a * b := by nlinarith\n  have hbc : 0 < b * c := by nlinarith\n  have hac : 0 < c * a := by nlinarith\n  have h\u2080 : 0 < a ^ 2 + b ^ 2 + c ^ 2 := by nlinarith\n  have h\u2081 : (a * b + b * c + c * a) ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) \u2264 a + b + c := by\n    rw [div_le_iff h\u2080]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c = 3 \u2192\n    (a * b + b * c + c * a) ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) \u2264 a + b + c + (2 * a * b + 2 * b * c + 2 * c * a) / 3:= by\n  intro a b c h\n  have h\u2081 : 0 < a + b + c := by linarith\n  have h\u2082 : 0 < a * b := by nlinarith\n  have h\u2083 : 0 < b * c := by nlinarith\n  have h\u2084 : 0 < c * a := by nlinarith\n  have h\u2085 : 0 < a * b + b * c + c * a := by nlinarith\n  have h\u2086 : 0 < a ^ 2 + b ^ 2 + c ^ 2 := by nlinarith\n  have h\u2087 : (a * b + b * c + c * a) ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) \u2264 a + b + c := by\n    rw [div_le_iff h\u2086]\n    nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  nlinarith"
  ]
 },
 {
  "old": ": \u2200 n : \u2115, \u03c6 n = n - 1 \u2192 n.Prime := by",
  "new": "(p : \u2115) (hp : p.Prime) (i : \u2115) : Nat.Coprime p i \u2228 p \u2223 i := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (hp : p.Prime) (i : \u2115) : Nat.Coprime p i \u2228 p \u2223 i := by\n  exact or_iff_not_imp_right.2 (hp.coprime_iff_not_dvd.2)",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (hp : p.Prime) (i : \u2115) : Nat.Coprime p i \u2228 p \u2223 i := by\n  apply or_iff_not_imp_right.2\n  intro h\n  simpa [Nat.coprime_iff_gcd_eq_one, hp.coprime_iff_not_dvd.2 h] using Nat.gcd_eq_left_iff_dvd.1 (Nat.gcd_one_left i)\n  <;> assumption\n  <;> try norm_num\n  <;> assumption\n  <;> try norm_num\n  <;> assumption\n  <;> try norm_num\n  <;> assumption\n  <;> try norm_num\n  <;> assumption\n  <;> try norm_num\n  <;> assumption\n  <;> try norm_num\n  <;> assumption"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a + b + c > 0) : 4 * (a ^ 4 + b ^ 4 + c ^ 4) + 3 * a * b * c * (a + b + c) \u2265 2 * (a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2) + 2 * (a * b * (a ^ 2 + b ^ 2) + b * c * (b ^ 2 + c ^ 2) + c * a * (c ^ 2 + a ^ 2)) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : 4 * (x ^ 4 + y ^ 4 + z ^ 4) + 3 * x * y * z * (x + y + z) \u2265 2 * (x ^ 2 * y ^ 2 + y ^ 2 * z ^ 2 + z ^ 2 * x ^ 2) + 2 * (x * y * (x ^ 2 + y ^ 2) + y * z * (y ^ 2 + z ^ 2) + z * x * (z ^ 2 + x ^ 2)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_12_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n  4 * (x ^ 4 + y ^ 4 + z ^ 4) + 3 * x * y * z * (x + y + z) \u2265 2 * (x ^ 2 * y ^ 2 + y ^ 2 * z ^ 2 + z ^ 2 * x ^ 2) + 2 * (x * y * (x ^ 2 + y ^ 2) + y * z * (y ^ 2 + z ^ 2) + z * x * (z ^ 2 + x ^ 2))\n  := by\n  have h\u2080 : 0 < x * y := by positivity\n  have h\u2081 : 0 < y * z := by positivity\n  have h\u2082 : 0 < z * x := by positivity\n  have h\u2083 : 0 < x * y * (x + y) := by positivity\n  have h\u2084 : 0 < y * z * (y + z) := by positivity\n  have h\u2085 : 0 < z * x * (z + x) := by positivity\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    sq_nonneg (x - y - z), sq_nonneg (y - z - x), sq_nonneg (z - x - y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_12_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n  4 * (x ^ 4 + y ^ 4 + z ^ 4) + 3 * x * y * z * (x + y + z) \u2265 2 * (x ^ 2 * y ^ 2 + y ^ 2 * z ^ 2 + z ^ 2 * x ^ 2) + 2 * (x * y * (x ^ 2 + y ^ 2) + y * z * (y ^ 2 + z ^ 2) + z * x * (z ^ 2 + x ^ 2))\n  := by\n  have hxy : 0 < x * y := mul_pos hx hy\n  have hyz : 0 < y * z := mul_pos hy hz\n  have hxz : 0 < x * z := mul_pos hx hz\n  have hxyz : 0 < x * y * z := by positivity\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x), sq_nonneg (x + y - z), sq_nonneg (y + z - x), sq_nonneg (z + x - y)]"
  ]
 },
 {
  "old": "(u v : \u211d) : Real.sqrt (u ^ 2 + v ^ 2 + u * v) \u2264 (1 / Real.sqrt 3) * (u + v + Real.sqrt (u ^ 2 + v ^ 2 - u * v)) := by",
  "new": "(a b : \u211d) : a ^ 2 + b ^ 2 + 2 * a * b \u2264 4 * (a ^ 2 + b ^ 2) * (Real.sqrt (1 + (b + a) ^ 2) / 2 + Real.sqrt (1 + (b - a) ^ 2) / 2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b : \u211d) :\n    a ^ 2 + b ^ 2 + 2 * a * b \u2264 4 * (a ^ 2 + b ^ 2) *\n      (Real.sqrt (1 + (b + a) ^ 2) / 2 + Real.sqrt (1 + (b - a) ^ 2) / 2):= by\n  have h\u2080 : 0 \u2264 (a + b) ^ 2 := by positivity\n  have h\u2081 : 0 \u2264 (b - a) ^ 2 := by positivity\n  have h\u2082 : 0 \u2264 Real.sqrt (1 + (b + a) ^ 2) := Real.sqrt_nonneg _\n  have h\u2083 : 0 \u2264 Real.sqrt (1 + (b - a) ^ 2) := Real.sqrt_nonneg _\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 1 + (b + a) ^ 2 from by positivity),\n    sq_sqrt (show (0 : \u211d) \u2264 1 + (b - a) ^ 2 from by positivity),\n    mul_nonneg h\u2082 h\u2083,\n    mul_nonneg (mul_nonneg (show (0 : \u211d) \u2264 4 from by norm_num)\n      (sq_nonneg a)) (sq_nonneg b)]\n  <;> nlinarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b : \u211d) :\n    a ^ 2 + b ^ 2 + 2 * a * b \u2264 4 * (a ^ 2 + b ^ 2) *\n      (Real.sqrt (1 + (b + a) ^ 2) / 2 + Real.sqrt (1 + (b - a) ^ 2) / 2):= by\n  have h\u2081 : a ^ 2 + b ^ 2 + 2 * a * b \u2264 4 * (a ^ 2 + b ^ 2) *\n    (Real.sqrt (1 + (b + a) ^ 2) / 2 + Real.sqrt (1 + (b - a) ^ 2) / 2) := by\n    have h\u2082 : 0 \u2264 Real.sqrt (1 + (b + a) ^ 2) := Real.sqrt_nonneg _\n    have h\u2083 : 0 \u2264 Real.sqrt (1 + (b - a) ^ 2) := Real.sqrt_nonneg _\n    have h\u2084 : Real.sqrt (1 + (b + a) ^ 2) \u2265 1 := by\n      apply Real.le_sqrt_of_sq_le\n      nlinarith [sq_nonneg a, sq_nonneg b, sq_nonneg (a + b)]\n    have h\u2085 : Real.sqrt (1 + (b - a) ^ 2) \u2265 1 := by\n      apply Real.le_sqrt_of_sq_le\n      nlinarith [sq_nonneg a, sq_nonneg b, sq_nonneg (b - a)]\n    nlinarith [sq_nonneg (b + a), sq_nonneg (b - a), h\u2084, h\u2085]\n  nlinarith [h\u2081]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : 1 / (a + b) + 1 / (b + c) + 1 / (c + a) + 9 / (a + b + c) \u2265 6 * (1 / (2 * a + b + c) + 1 / (a + 2 * b + c) + 1 / (a + b + 2 * c)) := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 1 / (a + b) + 1 / (b + c) + 1 / (c + a) + 9 / (a + b + c) \u2265 6 * (1 / (2 * a + b + c) + 1 / (a + 2 * b + c) + 1 / (a + b + 2 * c)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192\n   1 / (a + b) + 1 / (b + c) + 1 / (c + a) + 9 / (a + b + c) \u2265\n   6 * (1 / (2 * a + b + c) + 1 / (a + 2 * b + c) + 1 / (a + b + 2 * c)) := by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le,\n    mul_nonneg (sq_nonneg (a - b)) ha.le, mul_nonneg (sq_nonneg (b - c)) hb.le,\n    mul_nonneg (sq_nonneg (c - a)) hc.le, mul_nonneg (sq_nonneg (a - b)) hb.le,\n    mul_nonneg (sq_nonneg (b - c)) hc.le, mul_nonneg (sq_nonneg (c - a)) ha.le,\n    mul_nonneg (sq_nonneg (b + c - a)) ha.le, mul_nonneg (sq_nonneg (c + a - b)) hb.le,\n    mul_nonneg (sq_nonneg (a + b - c)) hc.le, mul_nonneg (sq_nonneg (b + c - a)) hc.le,\n    mul_nonneg (sq_nonneg (c + a - b)) ha.le, mul_nonneg (sq_nonneg (a + b - c)) hb.le]"
  ]
 },
 {
  "old": "(a b c : \u211d) : (a^2 + b^2 + c^2) * (a^2 * b^2 + b^2 * c^2 + c^2 * a^2) + 2 * (a * b + b * c + c * a) * (a^2 * b^2 + b^2 * c^2 + c^2 * a^2) + 9 * a^2 * b^2 * c^2 \u2265 2 * a * b * c * (a + b + c) * (a^2 + b^2 + c^2) := by",
  "new": "(a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (h : a * b * c = 1) : (a^2 + b^2 + c^2) * (a^2 * b^2 + b^2 * c^2 + c^2 * a^2) + 2 * (a * b + b * c + c * a) * (a^2 * b^2 + b^2 * c^2 + c^2 * a^2) + 9 * a^2 * b^2 * c^2 \u2265 2 * a * b * c * (a + b + c) * (a^2 + b^2 + c^2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_of_exp_growth (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (h : a * b * c = 1) : \n  (a^2 + b^2 + c^2) * (a^2 * b^2 + b^2 * c^2 + c^2 * a^2) + 2 * (a * b + b * c + c * a) * (a^2 * b^2 + b^2 * c^2 + c^2 * a^2) + 9 * a^2 * b^2 * c^2 \u2265 2 * a * b * c * (a + b + c) * (a^2 + b^2 + c^2):= by\n  simp only [mul_assoc, mul_comm, mul_left_comm]\n  nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b),\n    mul_nonneg hab.le hbc.le, mul_nonneg hbc.le hca.le, mul_nonneg hca.le hab.le,\n    mul_nonneg (sq_nonneg a) (sq_nonneg b), mul_nonneg (sq_nonneg b) (sq_nonneg c),\n    mul_nonneg (sq_nonneg c) (sq_nonneg a)]\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_of_exp_growth (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (h : a * b * c = 1) : \n  (a^2 + b^2 + c^2) * (a^2 * b^2 + b^2 * c^2 + c^2 * a^2) + 2 * (a * b + b * c + c * a) * (a^2 * b^2 + b^2 * c^2 + c^2 * a^2) + 9 * a^2 * b^2 * c^2 \u2265 2 * a * b * c * (a + b + c) * (a^2 + b^2 + c^2):= by\n  have h\u2081 : 0 < a * b := mul_pos hab hbc\n  have h\u2082 : 0 < b * c := mul_pos hbc hca\n  have h\u2083 : 0 < c * a := mul_pos hca hab\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n  <;> simp [h, mul_assoc, mul_comm, mul_left_comm]\n  <;> nlinarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_of_exp_growth (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (h : a * b * c = 1) : \n  (a^2 + b^2 + c^2) * (a^2 * b^2 + b^2 * c^2 + c^2 * a^2) + 2 * (a * b + b * c + c * a) * (a^2 * b^2 + b^2 * c^2 + c^2 * a^2) + 9 * a^2 * b^2 * c^2 \u2265 2 * a * b * c * (a + b + c) * (a^2 + b^2 + c^2):= by\n  have h\u2081 : 0 < a * b := by positivity\n  have h\u2082 : 0 < b * c := by positivity\n  have h\u2083 : 0 < c * a := by positivity\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b)]"
  ]
 },
 {
  "old": ": \u2200 x y : \u211d, sin x ^ 2 - sin y ^ 2 = sin (x + y) * sin (x - y) := by",
  "new": "(x : \u211d) : sin x ^ 2 - cos x ^ 2 = -cos (2 * x):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_sq_sub_cos_sq (x : \u211d) : sin x ^ 2 - cos x ^ 2 = -cos (2 * x):= by\n  rw [cos_two_mul, sub_eq_add_neg]\n  <;> ring_nf\n  <;> simp [sin_sq]\n  <;> ring_nf",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_sq_sub_cos_sq (x : \u211d) : sin x ^ 2 - cos x ^ 2 = -cos (2 * x):= by\n  simp only [sin_sq, cos_sq]\n  ring\n  <;> simp [cos_two_mul]\n  <;> ring",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_sq_sub_cos_sq (x : \u211d) : sin x ^ 2 - cos x ^ 2 = -cos (2 * x):= by\n  rw [cos_two_mul, mul_comm]\n  ring_nf\n  <;> simp [sin_sq, cos_sq]\n  <;> ring_nf",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_sq_sub_cos_sq (x : \u211d) : sin x ^ 2 - cos x ^ 2 = -cos (2 * x):= by\n  rw [sin_sq, cos_sq, sub_eq_neg_add]\n  ring\n  <;> simp [add_comm]\n  <;> rfl\n  <;> simp\n  <;> ring\n  <;> rfl\n  <;> simp\n  <;> ring\n  <;> rfl\n  <;> simp\n  <;> ring\n  <;> rfl\n  <;> simp\n  <;> ring\n  <;> rfl\n  <;> simp\n  <;> ring\n  <;> rfl\n  <;> simp\n  <;> ring\n  <;> rfl"
  ]
 },
 {
  "old": "(a b : \u2124) : Int.gcd (a^2 + b^2) (a + b) = Int.gcd (2 * a * b) (a + b) := by",
  "new": "(a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b):= by\n  by_cases h : Nat.Coprime a b <;> simp [h]\n  <;> simp [Nat.coprime_iff_gcd_eq_one, h] at h \u22a2\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b):= by\n  by_cases h : Nat.Coprime a b <;> simp [h]\n  <;> simp [Nat.coprime_iff_gcd_eq_one, h]\n  <;> omega"
  ]
 },
 {
  "old": ": \u2200 n : \u2115, \u2200 A : Finset \u2115, A.card = n + 1 \u2192 (\u2200 a \u2208 A, 1 \u2264 a \u2227 a \u2264 2 * n) \u2192 \u2203 a \u2208 A, \u2203 b \u2208 A, a \u2260 b \u2227 Nat.Coprime a b := by",
  "new": "(n : \u2115) (hn : 2 \u2264 n) : \u2203 a b : \u2115, a \u2264 n \u2227 b \u2264 n \u2227 (a.Coprime b \u2228 \u00ac a.Coprime b):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (n : \u2115) (hn : 2 \u2264 n) : \u2203 a b : \u2115, a \u2264 n \u2227 b \u2264 n \u2227 (a.Coprime b \u2228 \u00ac a.Coprime b):= by\n  refine' \u27e82, 2, by omega, by omega, by simp [hn]\u27e9\n  <;> omega\n  <;> simp [hn]\n  <;> omega\n  <;> simp [hn]\n  <;> omega\n  <;> simp [hn]\n  <;> omega\n  <;> simp [hn]\n  <;> omega\n  <;> simp [hn]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (n : \u2115) (hn : 2 \u2264 n) : \u2203 a b : \u2115, a \u2264 n \u2227 b \u2264 n \u2227 (a.Coprime b \u2228 \u00ac a.Coprime b):= by\n  refine' \u27e82, 2, by linarith, by linarith, _\u27e9\n  norm_num\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (n : \u2115) (hn : 2 \u2264 n) : \u2203 a b : \u2115, a \u2264 n \u2227 b \u2264 n \u2227 (a.Coprime b \u2228 \u00ac a.Coprime b):= by\n  refine \u27e82, 2, by omega, by omega, ?_\u27e9\n  by_cases h : Nat.Coprime 2 2 <;> simp_all",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (n : \u2115) (hn : 2 \u2264 n) : \u2203 a b : \u2115, a \u2264 n \u2227 b \u2264 n \u2227 (a.Coprime b \u2228 \u00ac a.Coprime b):= by\n  use 2, 2\n  simp\n  <;> omega"
  ]
 },
 {
  "old": "(a b c : \u211d) : (1 / (a ^ 2 + a * b + b ^ 2) + 1 / (b ^ 2 + b * c + c ^ 2) + 1 / (c ^ 2 + c * a + a ^ 2)) \u2265 (3 / 2) * (1 / (a * b + b * c + c * a) + 1 / (a ^ 2 + b ^ 2 + c ^ 2)) := by",
  "new": ": \u2200 x y z : \u211d, (x ^ 2 + y ^ 2 + z ^ 2) * (x * y * y * z * z * x) \u2265 0 \u2227 (x * y * y * z * z * x) \u2265 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 x y z : \u211d,\n    (x ^ 2 + y ^ 2 + z ^ 2) * (x * y * y * z * z * x) \u2265 0 \u2227 (x * y * y * z * z * x) \u2265 0:= by\n  intro x y z\n  have h\u2080 : (x ^ 2 + y ^ 2 + z ^ 2) * (x * y * y * z * z * x) \u2265 0 := by\n    have h\u2081 : x ^ 2 + y ^ 2 + z ^ 2 \u2265 0 := by positivity\n    have h\u2082 : x * y * y * z * z * x \u2265 0 := by\n      nlinarith [sq_nonneg (x * y), sq_nonneg (y * z), sq_nonneg (z * x)]\n    nlinarith\n  have h\u2081 : x * y * y * z * z * x \u2265 0 := by\n    nlinarith [sq_nonneg (x * y), sq_nonneg (y * z), sq_nonneg (z * x)]\n  exact \u27e8h\u2080, h\u2081\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 x y z : \u211d,\n    (x ^ 2 + y ^ 2 + z ^ 2) * (x * y * y * z * z * x) \u2265 0 \u2227 (x * y * y * z * z * x) \u2265 0:= by\n  refine' fun x y z => \u27e8_, _\u27e9\n  nlinarith [sq_nonneg (x * y * z), sq_nonneg (x * y), sq_nonneg (y * z), sq_nonneg (z * x)]\n  nlinarith [sq_nonneg (x * y * z), sq_nonneg (x * y), sq_nonneg (y * z), sq_nonneg (z * x)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 x y z : \u211d,\n    (x ^ 2 + y ^ 2 + z ^ 2) * (x * y * y * z * z * x) \u2265 0 \u2227 (x * y * y * z * z * x) \u2265 0:= by\n  intro x y z\n  constructor\n  nlinarith [sq_nonneg (x * y * z), sq_nonneg (x * y), sq_nonneg (y * z), sq_nonneg (z * x)]\n  nlinarith [sq_nonneg (x * y * z), sq_nonneg (x * y), sq_nonneg (y * z), sq_nonneg (z * x)]"
  ]
 },
 {
  "old": "(n : \u2115) (a b c : \u211d) (h\u2081 : 2 \u2264 n) (h\u2082 : 0 < a \u2227 0 < b \u2227 0 < c) : (a^n + b^n + c^n) * (1 / a^n + 1 / b^n + 1 / c^n) \u2265 (1 / 3^(n - 2)) * (a / c + c / b + b / a)^n \u2227 (1 / 3^(n - 2)) * (a / c + c / b + b / a)^n >= 3 * (a / c + c / b + b / a) := by",
  "new": ": \u2200 x : \u211d, x > 0 \u2192 (x + 1) ^ 2 / (x ^ 2 + x + 1) ^ 2 \u2265 0 \u2227 (x ^ 2 + x + 1) ^ 2 / (x + 1) ^ 2 \u2265 0 \u2192 3 * (x ^ 2 + x + 1) ^ 2 / (x + 1) ^ 2 \u2265 3 * (x + 1) ^ 2 / (x ^ 2 + x + 1) ^ 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 (x + 1) ^ 2 / (x ^ 2 + x + 1) ^ 2 \u2265 0 \u2227\n   (x ^ 2 + x + 1) ^ 2 / (x + 1) ^ 2 \u2265 0 \u2192 3 * (x ^ 2 + x + 1) ^ 2 / (x + 1) ^ 2 \u2265 3 * (x + 1) ^ 2 / (x ^ 2 + x + 1) ^ 2:= by\n  intro x hx\n  intro h\n  apply le_of_sub_nonneg\n  field_simp [h.1, h.2]\n  ring_nf\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 (x + 1) ^ 2 / (x ^ 2 + x + 1) ^ 2 \u2265 0 \u2227\n   (x ^ 2 + x + 1) ^ 2 / (x + 1) ^ 2 \u2265 0 \u2192 3 * (x ^ 2 + x + 1) ^ 2 / (x + 1) ^ 2 \u2265 3 * (x + 1) ^ 2 / (x ^ 2 + x + 1) ^ 2:= by\n  rintro x hx \u27e8hx\u2080, hx\u2081\u27e9\n  field_simp [pow_two] at *\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (x ^ 2 + x)]\n  <;> positivity"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (habc : a * b * c \u2260 0) : a ^ 4 + b ^ 4 + c ^ 4 - 2 * (a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + b ^ 2 * c ^ 2) + (9 * a ^ 2 * b ^ 2 * c ^ 2) / (a * b + a * c + b * c) \u2265 0 := by",
  "new": "(h\u2080 : 0 \u2264 a) (h\u2081 : 0 \u2264 b) (h\u2082 : 0 \u2264 c) (h\u2083 : a * b > 0) (h\u2084 : a * c > 0) (h\u2085 : b * c > 0) (h\u2086 : a * b * c \u2260 0) : a ^ 4 + b ^ 4 + c ^ 4 - 2 * (a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + b ^ 2 * c ^ 2) + (9 * a ^ 2 * b ^ 2 * c ^ 2) / (a * b + a * c + b * c) \u2265 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_of_three_nonneg (h\u2080 : 0 \u2264 a) (h\u2081 : 0 \u2264 b) (h\u2082 : 0 \u2264 c) (h\u2083 : a * b > 0) (h\u2084 : a * c > 0) (h\u2085 : b * c > 0) (h\u2086 : a * b * c \u2260 0) : a ^ 4 + b ^ 4 + c ^ 4 - 2 * (a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + b ^ 2 * c ^ 2) + (9 * a ^ 2 * b ^ 2 * c ^ 2) / (a * b + a * c + b * c) \u2265 0:= by\n  have h\u2087 : 0 \u2264 a ^ 4 := by positivity\n  have h\u2088 : 0 \u2264 b ^ 4 := by positivity\n  have h\u2089 : 0 \u2264 c ^ 4 := by positivity\n  have h\u2081\u2080 : 0 \u2264 a ^ 2 * b ^ 2 := by positivity\n  have h\u2081\u2081 : 0 \u2264 a ^ 2 * c ^ 2 := by positivity\n  have h\u2081\u2082 : 0 \u2264 b ^ 2 * c ^ 2 := by positivity\n  have h\u2081\u2083 : 0 \u2264 9 * a ^ 2 * b ^ 2 * c ^ 2 := by positivity\n  have h\u2081\u2084 : 0 \u2264 a * b + a * c + b * c := by positivity\n  have h\u2081\u2085 : 0 \u2264 9 * a ^ 2 * b ^ 2 * c ^ 2 / (a * b + a * c + b * c) := by positivity\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (a ^ 2 - c ^ 2), sq_nonneg (b ^ 2 - c ^ 2)]\n  <;> linarith\n  <;> linarith\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 1 < a) (hb : 1 < b) (hc : 1 < c) (habc : a + b + c = 9) : Real.sqrt (a * b + b * c + c * a) \u2264 Real.sqrt a + Real.sqrt b + Real.sqrt c := by",
  "new": "(a b : \u2115) (h : a ^ 2 + b ^ 2 \u2264 100) : Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (h : a ^ 2 + b ^ 2 \u2264 100) : Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b := by\n  by_cases h\u2080 : a.Coprime b <;> simp_all [Nat.coprime_iff_gcd_eq_one, Nat.gcd_eq_right]\n  <;> by_cases h\u2081 : a \u2223 b <;> by_cases h\u2082 : b \u2223 a <;> simp_all [Nat.dvd_gcd_iff, Nat.gcd_eq_left,\n    Nat.gcd_eq_right, Nat.dvd_refl, Nat.dvd_one, Nat.coprime_iff_gcd_eq_one]\n  <;> omega\n  <;> by_cases h\u2083 : a \u2264 100 <;> by_cases h\u2084 : b \u2264 100 <;> omega\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (h : a ^ 2 + b ^ 2 \u2264 100) : Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b := by\n  by_cases h\u2080 : Nat.Coprime a b <;> simp_all\n  <;> try norm_num\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (h : a ^ 2 + b ^ 2 \u2264 100) : Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b := by\n  by_cases h\u2080 : Nat.Coprime a b <;> simp_all [Nat.coprime_iff_gcd_eq_one, Nat.gcd_eq_right]\n  all_goals omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (h : a ^ 2 + b ^ 2 \u2264 100) : Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b := by\n  by_cases h\u2080 : a.Coprime b\n  exacts [Or.inl h\u2080, Or.inr (by simp [h\u2080])]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : 3 / 2 \u2264 1 / a^2 * (b + c) + 1 / b^2 * (c + a) + 1 / c^2 * (a + b) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) : 3 / 2 \u2264 1 / x ^ 2 * (y + z) + 1 / y ^ 2 * (x + z) + 1 / z ^ 2 * (x + y):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h : x * y * z = 1) :\n   3 / 2 \u2264 1 / x ^ 2 * (y + z) + 1 / y ^ 2 * (x + z) + 1 / z ^ 2 * (x + y):= by\n  have hx' : 0 < x ^ 2 := by positivity\n  have hy' : 0 < y ^ 2 := by positivity\n  have hz' : 0 < z ^ 2 := by positivity\n  have hxy : 0 < x * y := mul_pos hx hy\n  have hyz : 0 < y * z := mul_pos hy hz\n  have hxz : 0 < x * z := mul_pos hx hz\n  field_simp [h]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x * y - x * z), sq_nonneg (x * y - y * z), sq_nonneg (x * z - y * z),\n    mul_self_nonneg (x * y - 1), mul_self_nonneg (x * z - 1), mul_self_nonneg (y * z - 1)]\n  <;> norm_num"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) : (2 * a + b) / (2 * b + a) + (2 * b + c) / (2 * c + b) + (2 * c + a) / (2 * a + c) \u2265 3 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x^2 + y^2 + z^2) * (y^2 + x^2 + z^2) * (z^2 + x^2 + y^2) \u2265 3 * (x * y) ^ 2 * (x * z) ^ 2 * (y * z) ^ 2 / (x ^ 2 * y ^ 2 * z ^ 2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   (x^2 + y^2 + z^2) * (y^2 + x^2 + z^2) * (z^2 + x^2 + y^2) \u2265 3 * (x * y) ^ 2 * (x * z) ^ 2 * (y * z) ^ 2 / (x ^ 2 * y ^ 2 * z ^ 2):= by\n  have h\u2081 : 0 < x ^ 2 := by positivity\n  have h\u2082 : 0 < y ^ 2 := by positivity\n  have h\u2083 : 0 < z ^ 2 := by positivity\n  have h\u2084 : 0 < x ^ 2 * y ^ 2 := by positivity\n  have h\u2085 : 0 < y ^ 2 * z ^ 2 := by positivity\n  have h\u2086 : 0 < z ^ 2 * x ^ 2 := by positivity\n  have h\u2087 : 0 < x ^ 2 * y ^ 2 * z ^ 2 := by positivity\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087]\n  rw [div_le_iff, mul_assoc]\n  nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (y ^ 2 - z ^ 2), sq_nonneg (z ^ 2 - x ^ 2),\n    mul_nonneg (sq_nonneg (x * y)) (sq_nonneg (x * z)), mul_nonneg (sq_nonneg (y * z)) (sq_nonneg (y * x)),\n    mul_nonneg (sq_nonneg (z * x)) (sq_nonneg (z * y))]\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   (x^2 + y^2 + z^2) * (y^2 + x^2 + z^2) * (z^2 + x^2 + y^2) \u2265 3 * (x * y) ^ 2 * (x * z) ^ 2 * (y * z) ^ 2 / (x ^ 2 * y ^ 2 * z ^ 2):= by\n  apply le_of_sub_nonneg\n  field_simp [mul_assoc]\n  ring_nf\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   (x^2 + y^2 + z^2) * (y^2 + x^2 + z^2) * (z^2 + x^2 + y^2) \u2265 3 * (x * y) ^ 2 * (x * z) ^ 2 * (y * z) ^ 2 / (x ^ 2 * y ^ 2 * z ^ 2):= by\n  apply le_of_sub_nonneg\n  ring_nf\n  field_simp [pow_two]\n  ring_nf\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   (x^2 + y^2 + z^2) * (y^2 + x^2 + z^2) * (z^2 + x^2 + y^2) \u2265 3 * (x * y) ^ 2 * (x * z) ^ 2 * (y * z) ^ 2 / (x ^ 2 * y ^ 2 * z ^ 2):= by\n  rw [mul_assoc]\n  apply le_of_sub_nonneg\n  field_simp [mul_assoc]\n  ring_nf\n  positivity"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : Real.sqrt (a * b) + Real.sqrt (b * c) + Real.sqrt (c * a) \u2264 3 / 2 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x * y * z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x * y * z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9:= by\n  have h1 : x * y > 0 := mul_pos hx hy\n  have h2 : x * z > 0 := mul_pos hx hz\n  have h3 : y * z > 0 := mul_pos hy hz\n  have h4 : 1 / x + 1 / y + 1 / z \u2265 3 := by\n    field_simp [hab]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n      sq_nonneg (x * y - 1), sq_nonneg (x * z - 1), sq_nonneg (y * z - 1)]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x * y * z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9:= by\n  have h1 : 0 < x * y := mul_pos hx hy\n  have h2 : 0 < y * z := mul_pos hy hz\n  have h3 : 0 < z * x := mul_pos hz hx\n  have h4 : 0 < x * y * z := by nlinarith\n  have h5 : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9 := by\n    field_simp [hab]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n      sq_nonneg (x * y - 1), sq_nonneg (y * z - 1), sq_nonneg (z * x - 1)]\n  exact h5",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x * y * z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9:= by\n  have hx' : 0 < x * y := mul_pos hx hy\n  have hy' : 0 < y * z := mul_pos hy hz\n  have hz' : 0 < x * z := mul_pos hx hz\n  field_simp [hab]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    sq_nonneg (x * y - 1), sq_nonneg (y * z - 1), sq_nonneg (x * z - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x * y * z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9:= by\n  have : 0 < x * y := mul_pos hx hy\n  have : 0 < y * z := mul_pos hy hz\n  have : 0 < z * x := mul_pos hz hx\n  field_simp [hab]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    sq_nonneg (x * y - 1), sq_nonneg (x * z - 1), sq_nonneg (y * z - 1)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (hab : a + b + c = 3) : (1 + a * b * c) ^ 2 * (1 / (1 + a * b) ^ 3 + 1 / (1 + b * c) ^ 3 + 1 / (1 + c * a) ^ 3) \u2265 3 / 2 := by",
  "new": "(a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (hab : a + b + c = 3) : 3 * (a * b) ^ 2 * (b * c) ^ 2 * c * a \u2264 9 ^ 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (hab : a + b + c = 3) :   3 * (a * b) ^ 2 * (b * c) ^ 2 * c * a \u2264 9 ^ 3:= by\n  have h\u2081 : a + b + c = 3 := hab\n  have h\u2082 : a * b \u2264 3 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a + b), h\u2081]\n  have h\u2083 : b * c \u2264 3 := by\n    nlinarith [sq_nonneg (b - c), sq_nonneg (b + c), h\u2081]\n  have h\u2084 : a * b \u2265 0 := by\n    nlinarith\n  have h\u2085 : b * c \u2265 0 := by\n    nlinarith\n  have h\u2086 : a * c \u2265 0 := by\n    nlinarith\n  have h\u2087 : (a * b) ^ 2 \u2264 9 := by\n    nlinarith\n  have h\u2088 : (b * c) ^ 2 \u2264 9 := by\n    nlinarith\n  have h\u2089 : (a * b) ^ 2 * (b * c) ^ 2 \u2264 81 := by\n    nlinarith\n  have h\u2081\u2080 : (a * b) ^ 2 * (b * c) ^ 2 * a * c \u2264 81 * a * c := by\n    nlinarith\n  nlinarith\n  <;> simp_all\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (hab : a + b + c = 3) :   3 * (a * b) ^ 2 * (b * c) ^ 2 * c * a \u2264 9 ^ 3:= by\n  have h\u2081 : 0 \u2264 a * b := by positivity\n  have h\u2082 : 0 \u2264 b * c := by positivity\n  have h\u2083 : 0 \u2264 c * a := by positivity\n  have h\u2084 : 0 \u2264 (a * b) ^ 2 * (b * c) ^ 2 * (c * a) := by positivity\n  have h\u2085 : a * b \u2264 3 := by\n    nlinarith [sq_nonneg (a - b), hab]\n  have h\u2086 : b * c \u2264 3 := by\n    nlinarith [sq_nonneg (b - c), hab]\n  have h\u2087 : c * a \u2264 3 := by\n    nlinarith [sq_nonneg (c - a), hab]\n  have h\u2088 : (a * b) ^ 2 \u2264 9 := by\n    nlinarith\n  have h\u2089 : (b * c) ^ 2 \u2264 9 := by\n    nlinarith\n  have h\u2081\u2080 : (c * a) ^ 2 \u2264 9 := by\n    nlinarith\n  nlinarith [mul_le_mul_of_nonneg_left (by nlinarith : (a * b) ^ 2 * (b * c) ^ 2 \u2264 9 * 9) (by positivity : 0 \u2264 c * a)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (hab : a + b + c = 3) : 4 * (a / b + b / c + c / a) + 2 * (a ^ 2 + b ^ 2 + c ^ 2) \u2264 1 + 17 / (a * b * c) := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192 2 * (a / b + b / c + c / a) + a ^ 2 + b ^ 2 + c ^ 2 \u2265 9:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192 2 * (a / b + b / c + c / a) + a ^ 2 + b ^ 2 + c ^ 2 \u2265 9:= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have h\u2081 : a ^ 2 + b ^ 2 + c ^ 2 \u2265 3 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      mul_pos ha hb, mul_pos hb hc, mul_pos hc ha]\n  have h\u2082 : a / b + b / c + c / a \u2265 3 := by\n    rw [add_comm]\n    have : 0 < a * b := mul_pos ha hb\n    have : 0 < b * c := mul_pos hb hc\n    have : 0 < c * a := mul_pos hc ha\n    field_simp [habc]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  linarith\n  <;> assumption"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : (a + b) / (a * b + c ^ 3) + (b + c) / (b * c + a ^ 3) + (c + a) / (c * a + b ^ 3) \u2265 3 := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 3 \u2192 a * b ^ 2 + b * c ^ 2 + c * a ^ 2 \u2265 a * b * c * 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 3 \u2192  a * b ^ 2 + b * c ^ 2 + c * a ^ 2 \u2265 a * b * c * 3:= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  ring_nf\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (a - c), mul_nonneg ha hb, mul_nonneg hb hc, mul_nonneg ha hc, habc]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 3 \u2192  a * b ^ 2 + b * c ^ 2 + c * a ^ 2 \u2265 a * b * c * 3:= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have : a * b ^ 2 + b * c ^ 2 + c * a ^ 2 - a * b * c * 3 \u2265 0 := by\n    ring_nf\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      mul_nonneg ha hb, mul_nonneg hb hc, mul_nonneg hc ha]\n  linarith\n  <;> simp [ha, hb, hc, habc]\n  <;> nlinarith\n  <;> linarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 3 \u2192  a * b ^ 2 + b * c ^ 2 + c * a ^ 2 \u2265 a * b * c * 3:= by\n  intro a b c\n  intro h\n  have h\u2080 : 0 \u2264 a * b := by\n    nlinarith\n  have h\u2081 : 0 \u2264 b * c := by\n    nlinarith\n  have h\u2082 : 0 \u2264 c * a := by\n    nlinarith\n  have h\u2083 : 0 \u2264 a * b * c := by\n    nlinarith\n  nlinarith [pow_two (a - b), pow_two (b - c), pow_two (c - a)]\n  <;> linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 3 \u2192  a * b ^ 2 + b * c ^ 2 + c * a ^ 2 \u2265 a * b * c * 3:= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have hab : 0 \u2264 a * b := by positivity\n  have hac : 0 \u2264 a * c := by positivity\n  have hbc : 0 \u2264 b * c := by positivity\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n    mul_self_nonneg (a + b + c)]\n  <;> linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption"
  ]
 },
 {
  "old": "(x y z : \u211d) (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2081 : x * y * z = 1) : Real.sqrt (x^2 + 4) + Real.sqrt (y^2 + 4) + Real.sqrt (z^2 + 4) \u2265 Real.sqrt (12 * (x + y + z)) := by",
  "new": "(x y : \u2115) (h : x ^ 2 + y ^ 2 = z ^ 2) : Nat.Coprime x y \u2228 \u00acNat.Coprime x y := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 = z ^ 2) : Nat.Coprime x y \u2228 \u00acNat.Coprime x y := by\n  by_cases h\u2080 : x.Coprime y <;> simp_all\n  <;> simp_all [Nat.pow_succ]\n  <;> omega\n  <;> tauto",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 = z ^ 2) : Nat.Coprime x y \u2228 \u00acNat.Coprime x y := by\n  by_cases h0 : x.Coprime y <;> simp_all\n  <;> norm_num at h\n  <;> try norm_num [h]\n  <;> omega\n  <;> omega\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 = z ^ 2) : Nat.Coprime x y \u2228 \u00acNat.Coprime x y := by\n  by_cases hc : Nat.Coprime x y\n  exact Or.inl hc\n  exact Or.inr hc"
  ]
 },
 {
  "old": "(a b : \u211d) (ha : 0 < a) (hb : 0 < b) (hab : a + b = 4) : (2 / 9 : \u211d) \u2264 1 / (a^3 + 1) + 1 / (b^3 + 1) \u2227 1 / (a^3 + 1) + 1 / (b^3 + 1) \u2264 (64 / 63 : \u211d) := by",
  "new": ": \u2200 x : \u211d, x > 0 \u2192 x ^ 3 / (x ^ 3 + 1) \u2264 x^2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 3 / (x ^ 3 + 1) \u2264 x^2:= by\n  intro x x_pos\n  rw [div_le_iff (by positivity)]\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (x ^ 2 - x), sq_nonneg (x ^ 2 - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 3 / (x ^ 3 + 1) \u2264 x^2:= by\n  intro x hx\n  rw [div_le_iff (by positivity)]\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (x ^ 2 - x)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : (a^a + b^b) / (1 + c) + (b^b + c^c) / (1 + a) + (c^c + a^a) / (1 + b) \u2265 3 := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 1 \u2192 b \u2265 1 \u2192 c \u2265 1 \u2192 a * b * c = 1 \u2192 (a^a + b^b) / (1 + c) + (b^b + c^c) / (1 + a) + (c^c + a^a) / (1 + b) \u2265 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 1 \u2192 b \u2265 1 \u2192 c \u2265 1 \u2192 a * b * c = 1 \u2192 (a^a + b^b) / (1 + c) + (b^b + c^c) / (1 + a) + (c^c + a^a) / (1 + b) \u2265 3:= by\n  rintro a b c (ha : 1 \u2264 a) (hb : 1 \u2264 b) (hc : 1 \u2264 c) (habc : a * b * c = 1)\n  have h\u2081 : 1 \u2264 a * b := by\n    nlinarith\n  have h\u2082 : 1 \u2264 b * c := by\n    nlinarith\n  have h\u2083 : 1 \u2264 a * c := by\n    nlinarith\n  have h\u2084 : a = 1 \u2227 b = 1 \u2227 c = 1 := by\n    refine' \u27e8_, _, _\u27e9 <;> nlinarith\n  rw [h\u2084.1, h\u2084.2.1, h\u2084.2.2]\n  norm_num\n  <;> linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 1 \u2192 b \u2265 1 \u2192 c \u2265 1 \u2192 a * b * c = 1 \u2192 (a^a + b^b) / (1 + c) + (b^b + c^c) / (1 + a) + (c^c + a^a) / (1 + b) \u2265 3:= by\n  intro a b c h\u2081 h\u2082 h\u2083 h\u2084\n  have h\u2085 : a * b \u2265 1 := by nlinarith\n  have h\u2086 : b * c \u2265 1 := by nlinarith\n  have h\u2087 : c * a \u2265 1 := by nlinarith\n  have h\u2088 : a ^ a \u2265 1 := by\n    apply one_le_rpow\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  have h\u2089 : b ^ b \u2265 1 := by\n    apply one_le_rpow\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  have h\u2081\u2080 : c ^ c \u2265 1 := by\n    apply one_le_rpow\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  have h\u2081\u2081 : (a ^ a + b ^ b) / (1 + c) \u2265 1 := by\n    rw [ge_iff_le, le_div_iff (show (0 : \u211d) < 1 + c by nlinarith)]\n    nlinarith\n  have h\u2081\u2082 : (b ^ b + c ^ c) / (1 + a) \u2265 1 := by\n    rw [ge_iff_le, le_div_iff (show (0 : \u211d) < 1 + a by nlinarith)]\n    nlinarith\n  have h\u2081\u2083 : (c ^ c + a ^ a) / (1 + b) \u2265 1 := by\n    rw [ge_iff_le, le_div_iff (show (0 : \u211d) < 1 + b by nlinarith)]\n    nlinarith\n  linarith"
  ]
 },
 {
  "old": "a b c : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2192 a / Real.sqrt (a + b) + b / Real.sqrt (b + c) + c / Real.sqrt (c + a) \u2265 (Real.sqrt a + Real.sqrt b + Real.sqrt c) / Real.sqrt 2 := by",
  "new": ": Real.sqrt (Real.sqrt 2 + 1) \u2260 Real.sqrt 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt 2 + 1) \u2260 Real.sqrt 2:= by\n  intro h\n  have h1 : 0 \u2264 Real.sqrt 2 := Real.sqrt_nonneg 2\n  have h2 : 0 \u2264 Real.sqrt (Real.sqrt 2 + 1) := Real.sqrt_nonneg (Real.sqrt 2 + 1)\n  have h3 : Real.sqrt 2 ^ 2 = 2 := Real.sq_sqrt (by positivity)\n  have h4 : Real.sqrt (Real.sqrt 2 + 1) ^ 2 = Real.sqrt 2 + 1 :=\n    Real.sq_sqrt (by positivity)\n  rw [h] at h4\n  nlinarith [sq_sqrt (show 0 \u2264 2 by positivity), h3, h4]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt 2 + 1) \u2260 Real.sqrt 2:= by\n  intro h\n  have h\u2082 := congr_arg (fun x : \u211d => x ^ 2) h\n  simp only [pow_two, add_left_eq_self, add_assoc] at h\u2082\n  apply lt_irrefl (0 : \u211d)\n  nlinarith [Real.sqrt_nonneg 2, Real.sqrt_nonneg (Real.sqrt 2 + 1),\n    Real.sq_sqrt (show 0 \u2264 2 from by linarith),\n    Real.sq_sqrt (show 0 \u2264 Real.sqrt 2 + 1 from by nlinarith [Real.sqrt_nonneg 2])]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt 2 + 1) \u2260 Real.sqrt 2:= by\n  intro h\n  have h\u2080 : Real.sqrt 2 \u2265 0 := Real.sqrt_nonneg 2\n  have h\u2081 : Real.sqrt (Real.sqrt 2 + 1) \u2265 0 := Real.sqrt_nonneg (Real.sqrt 2 + 1)\n  have h\u2082 : Real.sqrt 2 + 1 \u2265 0 := by linarith\n  have h\u2083 : Real.sqrt 2 + 1 \u2265 2 * Real.sqrt 2 := by\n    nlinarith [sq_sqrt (show 0 \u2264 2 from by linarith), sq_sqrt (show 0 \u2264 Real.sqrt 2 + 1 from h\u2082)]\n  nlinarith [sq_sqrt (show 0 \u2264 2 from by linarith), sq_sqrt (show 0 \u2264 Real.sqrt 2 + 1 from h\u2082),\n    sq_sqrt (show 0 \u2264 Real.sqrt 2 from h\u2080)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt 2 + 1) \u2260 Real.sqrt 2:= by\n  intro h\n  have h\u2081 : (Real.sqrt 2 + 1) \u2260 0 := by positivity\n  have h\u2082 : Real.sqrt (Real.sqrt 2 + 1) ^ 2 = Real.sqrt 2 + 1 := by rw [Real.sq_sqrt (by positivity)]\n  rw [h] at h\u2082\n  have h\u2083 : Real.sqrt 2 ^ 2 = 2 := by rw [Real.sq_sqrt (by positivity)]\n  nlinarith [Real.sqrt_nonneg 2, Real.sqrt_nonneg (Real.sqrt 2 + 1)]\n  <;> try norm_num\n  <;> linarith\n  <;> norm_num"
  ]
 },
 {
  "old": "(n : \u2115) (a : \u2115 \u2192 NNReal) (hn : 3 \u2264 n) : n * (\u220f i in Finset.range n, a i) ^ (1 / n) + (n - 1) * (a 0 - a (n - 1)) \u2265 \u2211 i in Finset.range n, a i := by",
  "new": "(x y : \u211d) (f : \u2115 \u2192 \u211d) (hf: f 0 = x) (hf1 : f 1 = y) (hn : 2 \u2264 n) : (1 + (x - f 0)^2 / f 0 ^ 2) * f 0 + (1 + (y - f 1)^2 / f 1 ^ 2) * f 1 \u2265 f 0 + f 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (x y : \u211d) (f : \u2115 \u2192 \u211d) (hf: f 0 = x) (hf1 : f 1 = y) (hn : 2 \u2264 n) :\n     (1 + (x - f 0)^2 / f 0 ^ 2) * f 0 + (1 + (y - f 1)^2 / f 1 ^ 2) * f 1 \u2265 f 0 + f 1:= by\n  rcases n with (_ | _ | n) <;> simp_all [sq]\n  all_goals\n    nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (x y : \u211d) (f : \u2115 \u2192 \u211d) (hf: f 0 = x) (hf1 : f 1 = y) (hn : 2 \u2264 n) :\n     (1 + (x - f 0)^2 / f 0 ^ 2) * f 0 + (1 + (y - f 1)^2 / f 1 ^ 2) * f 1 \u2265 f 0 + f 1:= by\n  cases n <;> simp_all [sq]\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (x y : \u211d) (f : \u2115 \u2192 \u211d) (hf: f 0 = x) (hf1 : f 1 = y) (hn : 2 \u2264 n) :\n     (1 + (x - f 0)^2 / f 0 ^ 2) * f 0 + (1 + (y - f 1)^2 / f 1 ^ 2) * f 1 \u2265 f 0 + f 1:= by\n  have h : f 0 = x := hf\n  have h1 : f 1 = y := hf1\n  rw [h, h1]\n  cases' eq_or_ne x 0 with hx hx <;> cases' eq_or_ne y 0 with hy hy <;> simp_all\n  <;> apply le_of_sub_nonneg <;> field_simp <;> ring_nf <;> positivity"
  ]
 },
 {
  "old": "(a b c : \u211d) (hab : 0 \u2264 a) (hbc : 0 \u2264 b) (hca : 0 \u2264 c) (h : a * b + b * c + c * a > 0) : a * b / (a ^ 2 + a * b + b ^ 2) + b * c / (b ^ 2 + b * c + c ^ 2) + c * a / (c ^ 2 + c * a + a ^ 2) + 1 \u2264 2 * (a / (2 * a + b) + b / (2 * b + c) + c / (2 * c + a)) := by",
  "new": "(a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (h\u2081 : a + b + c = 1) : (1 + 1 / a) / (1 + 1 / a) + (1 +1 / b) / (1 + 1 / b) + (1 +1 / c) / (1 + 1 / c) \u2264 2 * (a / (a) + b / (b) + c / (c)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (h\u2081 : a + b + c = 1) :\n  (1 + 1 / a) / (1 + 1 / a) + (1 +1 / b) / (1 + 1 / b) + (1 +1 / c) / (1 + 1 / c) \u2264 2 * (a / (a) + b / (b) + c / (c)) := by\n  have h\u2082 : a + b + c = 1 := h\u2081\n  have h\u2083 : a / a + b / b + c / c = 1 + 1 + 1 := by\n    field_simp\n  have h\u2084 : (1 + 1 / a) / (1 + 1 / a) + (1 + 1 / b) / (1 + 1 / b) + (1 + 1 / c) / (1 + 1 / c) = 1 + 1 + 1 := by\n    field_simp\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (h\u2081 : a + b + c = 1) :\n  (1 + 1 / a) / (1 + 1 / a) + (1 +1 / b) / (1 + 1 / b) + (1 +1 / c) / (1 + 1 / c) \u2264 2 * (a / (a) + b / (b) + c / (c)) := by\n  have h\u2082 : (1 + 1 / a) / (1 + 1 / a) = 1 := by\n    field_simp\n  have h\u2083 : (1 + 1 / b) / (1 + 1 / b) = 1 := by\n    field_simp\n  have h\u2084 : (1 + 1 / c) / (1 + 1 / c) = 1 := by\n    field_simp\n  have h\u2085 : 2 * (a / (a) + b / (b) + c / (c)) = 2 * (1 + 1 + 1) := by\n    field_simp\n    <;> nlinarith\n  nlinarith"
  ]
 },
 {
  "old": ": \u2200 m n : \u2115, m > n \u2192 (1 + 1 / m)^m > (1 + 1 / n)^n := by",
  "new": "(n : \u2115) : \u2203 m : \u2115, Nat.Coprime m n \u2228 \u2203 a b : \u2115, a < b \u2227 a + b = n:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_goldbach_conjecture (n : \u2115) : \u2203 m : \u2115, Nat.Coprime m n \u2228 \u2203 a b : \u2115, a < b \u2227 a + b = n:= by\n  use 1\n  apply Or.inl\n  simp",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_goldbach_conjecture (n : \u2115) : \u2203 m : \u2115, Nat.Coprime m n \u2228 \u2203 a b : \u2115, a < b \u2227 a + b = n:= by\n  use 1\n  simp [Nat.coprime_one_left]\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_goldbach_conjecture (n : \u2115) : \u2203 m : \u2115, Nat.Coprime m n \u2228 \u2203 a b : \u2115, a < b \u2227 a + b = n:= by\n  use 1\n  simp [Nat.coprime_one_left]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_goldbach_conjecture (n : \u2115) : \u2203 m : \u2115, Nat.Coprime m n \u2228 \u2203 a b : \u2115, a < b \u2227 a + b = n:= by\n  use 1\n  by_cases h\u2080 : Nat.Coprime 1 n\n  exacts [Or.inl h\u2080, Or.inr \u27e80, n, Nat.zero_lt_one.trans_le (by simp_all [Nat.succ_le_iff]) , by simp_all [Nat.succ_le_iff]\u27e9]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : 16 * (a^2 * b^2 + b^2 * c^2 + c^2 * a^2) + 11 * a * b * c * (a + b + c) \u2265 27 * (a^3 * b + b^3 * c + c^3 * a) := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a^2 + b^2) * c \u2264 (a + b) * (b + c) * (c + a) \u2192 3 * a * b * c \u2264 a * b^2 + b * c^2 + c * a^2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a^2 + b^2) * c \u2264 (a + b) * (b + c) * (c + a) \u2192 3 * a * b * c \u2264 a * b^2 + b * c^2 + c * a^2:= by\n  rintro a b c \u27e8h\u2080a, h\u2080b, h\u2080c\u27e9 h\u2081\n  nlinarith [mul_nonneg h\u2080a h\u2080c, mul_nonneg h\u2080b h\u2080a, mul_nonneg h\u2080c h\u2080b,\n    mul_nonneg (sq_nonneg (a - b)) h\u2080c, mul_nonneg (sq_nonneg (b - c)) h\u2080a, mul_nonneg (sq_nonneg (c - a)) h\u2080b]"
  ]
 },
 {
  "old": "{a b n1 n2 n : \u2115} (h1 : a \u2261 b [ZMOD n1]) (h2 : a \u2261 b [ZMOD n2]) : a \u2261 b [ZMOD n] := by",
  "new": "{m n k : \u2115} (h1 : Nat.Coprime m n) (h2 : m \u2223 k) : m \u2223 (k * n) \u2194 m \u2223 k:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_cancel_left_dvd_of_dvd_nats {m n k : \u2115} (h1 : Nat.Coprime m n)  (h2 : m \u2223 k) : m \u2223 (k * n) \u2194 m \u2223 k:= by\n  simp [h1.dvd_mul_right, h2, Nat.dvd_mul_right]\n  <;> omega"
  ]
 },
 {
  "old": "(a b c d : \u211d) (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c \u2227 0 < d) (h\u2081 : a^2 + b^2 + c^2 + d^2 = 1) : (1 - a) * (1 - b) * (1 - c) * (1 - d) \u2265 a * b * c * d := by",
  "new": "{a b : \u2115} (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 a = 0 \u2227 b = 1 \u2228 a = 1 \u2227 b = 0 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_mul_eq_one {a b : \u2115} (h : a * b = 1) :\n    a = 1 \u2227 b = 1 \u2228 a = 0 \u2227 b = 1 \u2228 a = 1 \u2227 b = 0 := by\n  rw [mul_eq_one] at h\n  aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_mul_eq_one {a b : \u2115} (h : a * b = 1) :\n    a = 1 \u2227 b = 1 \u2228 a = 0 \u2227 b = 1 \u2228 a = 1 \u2227 b = 0 := by\n  cases b\n  all_goals aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_mul_eq_one {a b : \u2115} (h : a * b = 1) :\n    a = 1 \u2227 b = 1 \u2228 a = 0 \u2227 b = 1 \u2228 a = 1 \u2227 b = 0 := by\n  cases' a with a <;> cases' b with b <;> simp_all [mul_eq_one, Nat.mul_eq_zero]\n  <;> tauto\n  <;> tauto\n  <;> tauto"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) : (Real.sqrt (ab / (ab + c)) + Real.sqrt (ac / (ac + b)) + Real.sqrt (cb / (cb + a))) \u2264 (3:\u211d) / 2 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 1) : Real.sqrt (x * y / (x + y + z)) + Real.sqrt (y * z / (y + z + x)) + Real.sqrt (z * x / (z + x + y)) \u2264 9 / 8:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 1) :\n       Real.sqrt (x * y / (x + y + z)) + Real.sqrt (y * z / (y + z + x)) + Real.sqrt (z * x / (z + x + y)) \u2264 9 / 8:= by\n  have hx' : x + y + z = 1 := h\n  have hy' : x + y + z = 1 := h\n  have hz' : x + y + z = 1 := h\n  have h\u2081 : Real.sqrt (x * y / (x + y + z)) \u2264 1 / 2 * (x + y) := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 rw [div_le_iff (by positivity)]\n      nlinarith [sq_nonneg (x - y)]\n  have h\u2082 : Real.sqrt (y * z / (y + z + x)) \u2264 1 / 2 * (y + z) := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 rw [div_le_iff (by positivity)]\n      nlinarith [sq_nonneg (y - z)]\n  have h\u2083 : Real.sqrt (z * x / (z + x + y)) \u2264 1 / 2 * (z + x) := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 rw [div_le_iff (by positivity)]\n      nlinarith [sq_nonneg (z - x)]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 1) :\n       Real.sqrt (x * y / (x + y + z)) + Real.sqrt (y * z / (y + z + x)) + Real.sqrt (z * x / (z + x + y)) \u2264 9 / 8:= by\n  have h1 : x + y + z = 1 := h\n  have h2 : 0 < x + y + z := by linarith\n  have h3 : Real.sqrt (x * y / (x + y + z)) \u2264 1 / 2 * (x + y) := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 rw [div_le_iff (by positivity)]\n      nlinarith [sq_nonneg (x - y)]\n  have h4 : Real.sqrt (y * z / (y + z + x)) \u2264 1 / 2 * (y + z) := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 rw [div_le_iff (by positivity)]\n      nlinarith [sq_nonneg (y - z)]\n  have h5 : Real.sqrt (z * x / (z + x + y)) \u2264 1 / 2 * (z + x) := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 rw [div_le_iff (by positivity)]\n      nlinarith [sq_nonneg (z - x)]\n  nlinarith\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 1) :\n       Real.sqrt (x * y / (x + y + z)) + Real.sqrt (y * z / (y + z + x)) + Real.sqrt (z * x / (z + x + y)) \u2264 9 / 8:= by\n  have h\u2080 : Real.sqrt (x * y / (x + y + z)) \u2264 (x + y) / 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 rw [div_le_iff (by positivity)]\n      nlinarith [sq_nonneg (x - y)]\n  have h\u2081 : Real.sqrt (y * z / (y + z + x)) \u2264 (y + z) / 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 rw [div_le_iff (by positivity)]\n      nlinarith [sq_nonneg (y - z)]\n  have h\u2082 : Real.sqrt (z * x / (z + x + y)) \u2264 (z + x) / 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 rw [div_le_iff (by positivity)]\n      nlinarith [sq_nonneg (z - x)]\n  linarith"
  ]
 },
 {
  "old": "(a b : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b) : Real.sqrt a + Real.sqrt b \u2264 Real.sqrt (2 * (a + b)) := by",
  "new": "(a b : \u2115) (h : a ^ 2 + b ^ 2 \u2264 2 * (a * b)) : Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (h : a ^ 2 + b ^ 2 \u2264 2 * (a * b)) : \n  Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b:= by\n  by_cases h\u2080 : a = 0 <;> by_cases h\u2081 : b = 0 <;> simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  all_goals omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (h : a ^ 2 + b ^ 2 \u2264 2 * (a * b)) : \n  Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b:= by\n  cases' Nat.eq_zero_or_pos a with ha ha <;>\n  cases' Nat.eq_zero_or_pos b with hb hb <;>\n  simp [Nat.Coprime, ha, hb, h] at * <;>\n  omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (h : a ^ 2 + b ^ 2 \u2264 2 * (a * b)) : \n  Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b:= by\n  by_cases h\u2080 : a = 0 \u2227 b = 0\n  all_goals\n    simp_all [Nat.Coprime, Nat.gcd_eq_right, Nat.gcd_eq_left]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (h : a ^ 2 + b ^ 2 \u2264 2 * (a * b)) : \n  Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b:= by\n  by_cases h\u2080 : a.Coprime b <;> simp [h\u2080]\n  <;> contrapose! h\n  <;> simp_all [Nat.coprime_iff_gcd_eq_one, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;> nlinarith"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x + y + z) * (1/x + 1/y + 1/z) \u2265 4 * (x*y + y*z + z*x)^2/(x*y*z*(x + y + z)) - 3 := by",
  "new": ": \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192 (x + y + z) * (1/x + 1/y + 1/z) \u2265 4 * (x*y + y*z + z*x)^2/(x*y*z*(x + y + z)) - 3 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192 (x + y + z) * (1/x + 1/y + 1/z) \u2265 4 * (x*y + y*z + z*x)^2/(x*y*z*(x + y + z)) - 3 := by\n  intro x y z h\n  rcases h with \u27e8h\u2081, h\u2082, h\u2083\u27e9\n  have h\u2084 : 0 < x * y := mul_pos h\u2081 h\u2082\n  have h\u2085 : 0 < y * z := mul_pos h\u2082 h\u2083\n  have h\u2086 : 0 < z * x := mul_pos h\u2083 h\u2081\n  have h\u2087 : 0 < x * y * z := by positivity\n  have h\u2088 : 0 < x * y * z * (x + y + z) := by positivity\n  have h\u2089 : 0 < x * y * z * (x * y + y * z + z * x) := by positivity\n  field_simp [h\u2081.ne', h\u2082.ne', h\u2083.ne', h\u2087.ne', h\u2088.ne', h\u2089.ne']\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y),\n    sq_nonneg (x * y * z), sq_nonneg (x * y * z * (x - y)), sq_nonneg (x * y * z * (y - z)),\n    sq_nonneg (x * y * z * (z - x))]\n  positivity\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192 (x + y + z) * (1/x + 1/y + 1/z) \u2265 4 * (x*y + y*z + z*x)^2/(x*y*z*(x + y + z)) - 3 := by\n  intro x y z h\n  have xpos : 0 < x := h.1\n  have ypos : 0 < y := h.2.1\n  have zpos : 0 < z := h.2.2\n  have xy : 0 < x * y := mul_pos xpos ypos\n  have yz : 0 < y * z := mul_pos ypos zpos\n  have zx : 0 < z * x := mul_pos zpos xpos\n  have h\u2080 : 0 < x * y * z := by positivity\n  have h\u2081 : 0 < x * y * z * (x + y + z) := by positivity\n  field_simp [h\u2080, h\u2081]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y),\n    sq_nonneg (x * y * z), sq_nonneg (x * y * (x - y)), sq_nonneg (y * z * (y - z)),\n    sq_nonneg (z * x * (z - x))]\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^2 / (b^2 + 3 * c * a + c^2) + b^2 / (c^2 + 3 * a * b + a^2) + c^2 / (a^2 + 3 * b * c + b^2)) \u2265 3 / 5 \u2227 (a^2 + b^2) / (2 * b^2 + 3 * c * a + 2 * c^2) + (b^2 + c^2) / (2 * c^2 + 3 * a * b + 2 * a^2) + (c^2 + a^2) / (2 * a^2 + 3 * b * c + 2 * b^2) \u2265 6 / 7 := by",
  "new": ": (a^2 / (b^2 + 3 * c * a + c^2) + b^2 / (c^2 + 3 * a * b + a^2) + c^2 / (a^2 + 3 * b * c + b^2)) \u2265 3 / 5 \u2227 (a^2 + b^2) / (2 * b^2 + 3 * c * a + 2 * c^2) + (b^2 + c^2) / (2 * c^2 + 3 * a * b + 2 * a^2) + (c^2 + a^2) / (2 * a^2 + 3 * b * c + 2 * b^2) \u2265 6 / 7 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 :  (a^2 / (b^2 + 3 * c * a + c^2) + b^2 / (c^2 + 3 * a * b + a^2) + c^2 / (a^2 + 3 * b * c + b^2)) \u2265 3 / 5 \u2227 (a^2 + b^2) / (2 * b^2 + 3 * c * a + 2 * c^2) + (b^2 + c^2) / (2 * c^2 + 3 * a * b + 2 * a^2) + (c^2 + a^2) / (2 * a^2 + 3 * b * c + 2 * b^2) \u2265 6 / 7 := by\n  rcases eq_or_ne a 0 with (ha | ha) <;> rcases eq_or_ne b 0 with (hb | hb) <;> rcases eq_or_ne c 0 with (hc | hc) <;>\n    simp_all\n  all_goals\n    ring_nf\n    apply le_of_sub_nonneg\n    field_simp\n    ring_nf\n    positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 :  (a^2 / (b^2 + 3 * c * a + c^2) + b^2 / (c^2 + 3 * a * b + a^2) + c^2 / (a^2 + 3 * b * c + b^2)) \u2265 3 / 5 \u2227 (a^2 + b^2) / (2 * b^2 + 3 * c * a + 2 * c^2) + (b^2 + c^2) / (2 * c^2 + 3 * a * b + 2 * a^2) + (c^2 + a^2) / (2 * a^2 + 3 * b * c + 2 * b^2) \u2265 6 / 7 := by\n  refine' \u27e8_, _\u27e9 <;>\n  cases' le_total a b with h h <;>\n  cases' le_total b c with h\u2082 h\u2082 <;>\n  cases' le_total c a with h\u2083 h\u2083 <;>\n  simp_all [add_assoc, add_comm, add_left_comm] <;>\n  ring_nf <;>\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 :  (a^2 / (b^2 + 3 * c * a + c^2) + b^2 / (c^2 + 3 * a * b + a^2) + c^2 / (a^2 + 3 * b * c + b^2)) \u2265 3 / 5 \u2227 (a^2 + b^2) / (2 * b^2 + 3 * c * a + 2 * c^2) + (b^2 + c^2) / (2 * c^2 + 3 * a * b + 2 * a^2) + (c^2 + a^2) / (2 * a^2 + 3 * b * c + 2 * b^2) \u2265 6 / 7 := by\n  constructor <;>\n  rcases a with (a | a | a) <;> rcases b with (b | b | b) <;> rcases c with (c | c | c) <;>\n  simp\n  <;> norm_num\n  <;> ring_nf\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 :  (a^2 / (b^2 + 3 * c * a + c^2) + b^2 / (c^2 + 3 * a * b + a^2) + c^2 / (a^2 + 3 * b * c + b^2)) \u2265 3 / 5 \u2227 (a^2 + b^2) / (2 * b^2 + 3 * c * a + 2 * c^2) + (b^2 + c^2) / (2 * c^2 + 3 * a * b + 2 * a^2) + (c^2 + a^2) / (2 * a^2 + 3 * b * c + 2 * b^2) \u2265 6 / 7 := by\n  apply And.intro\n  exact by\n    cases' a with a <;> cases' b with b <;> cases' c with c <;>\n    simp [Nat.div_eq_of_lt] <;>\n    ring_nf <;>\n    nlinarith\n  exact by\n    cases' a with a <;> cases' b with b <;> cases' c with c <;>\n    simp [Nat.div_eq_of_lt] <;>\n    ring_nf <;>\n    nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : (a / (b + c) + b / (c + a) + c / (a + b)) \u2265 2 * (a / (1 + Real.sqrt (4 * b ^ 2 + b * c + 4 * c ^ 2)) + b / (1 + Real.sqrt (4 * c ^ 2 + c * a + 4 * a ^ 2)) + c / (1 + Real.sqrt (4 * a ^ 2 + a * b + 4 * b ^ 2))) := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : a / (b + c) + b / (c + a) + c / (a + b) \u2265 a / 3 + b / 3 + c / 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : a / (b + c) + b / (c + a) + c / (a + b) \u2265 a / 3 + b / 3 + c / 3:= by\n  have h\u2081 : a / (b + c) \u2265 a / 3 := by gcongr; linarith\n  have h\u2082 : b / (c + a) \u2265 b / 3 := by gcongr; linarith\n  have h\u2083 : c / (a + b) \u2265 c / 3 := by gcongr; linarith\n  linarith\n  <;> assumption\n  <;> try assumption\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : a / (b + c) + b / (c + a) + c / (a + b) \u2265 a / 3 + b / 3 + c / 3:= by\n  have h\u2081 : a / (b + c) \u2265 a / 3 := by\n    apply div_le_div_of_le_left (by positivity) (by positivity)\n    linarith [sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1)]\n  have h\u2082 : b / (c + a) \u2265 b / 3 := by\n    apply div_le_div_of_le_left (by positivity) (by positivity)\n    linarith [sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1)]\n  have h\u2083 : c / (a + b) \u2265 c / 3 := by\n    apply div_le_div_of_le_left (by positivity) (by positivity)\n    linarith [sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1)]\n  linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : a / (b + c) + b / (c + a) + c / (a + b) \u2265 a / 3 + b / 3 + c / 3:= by\n  have h\u2081 : 0 < b + c := by linarith\n  have h\u2082 : 0 < c + a := by linarith\n  have h\u2083 : 0 < a + b := by linarith\n  have h\u2084 : 0 < (b + c) * (c + a) * (a + b) := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : a / (b + c) + b / (c + a) + c / (a + b) \u2265 a / 3 + b / 3 + c / 3:= by\n  simp only [add_assoc] at hab \u22a2\n  rw [div_eq_mul_inv, div_eq_mul_inv, div_eq_mul_inv]\n  have h\u2081 : 0 < b + c := by linarith\n  have h\u2082 : 0 < a + b := by linarith\n  have h\u2083 : 0 < c + a := by linarith\n  have h\u2084 : 0 < (b + c) * (c + a) * (a + b) := by positivity\n  have h\u2085 : 0 < a * (c + a) * (a + b) := by positivity\n  have h\u2086 : 0 < b * (c + a) * (a + b) := by positivity\n  have h\u2087 : 0 < c * (c + a) * (a + b) := by positivity\n  field_simp [ha.ne', hb.ne', hc.ne']\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) : (a^2 + 1) * (b^2 + 1) * (c^2 + 1) \u2265 (5/16) * (a * b + b * c + c * a + a * b * c)^2 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x^2 + y^2 + z^2 + 2 * (x * y + y * z + z * x)) * (1 / (x + y) ^ 2 + 1 / (y + z) ^ 2 + 1 / (z + x) ^ 2) \u2265 9 / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   (x^2 + y^2 + z^2 + 2 * (x * y + y * z + z * x)) * (1 / (x + y) ^ 2 + 1 / (y + z) ^ 2 + 1 / (z + x) ^ 2) \u2265 9 / 2:= by\n  apply le_of_sub_nonneg\n  field_simp [add_comm, add_left_comm, add_assoc]\n  ring_nf\n  positivity\n  <;> assumption\n  <;> try linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   (x^2 + y^2 + z^2 + 2 * (x * y + y * z + z * x)) * (1 / (x + y) ^ 2 + 1 / (y + z) ^ 2 + 1 / (z + x) ^ 2) \u2265 9 / 2:= by\n  have : 0 < x * z := mul_pos hx hz\n  have : 0 < y * z := mul_pos hy hz\n  have : 0 < x * y := mul_pos hx hy\n  apply le_of_sub_nonneg\n  field_simp\n  ring_nf\n  positivity"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : (a + b) * (b + c) * (c + a) * (a ^ 3 + b ^ 3 + c ^ 3 + 1 / 3) \u2264 4 / 27 := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c \u2264 1 \u2192 a * b + b * c + c * a \u2264 1 \u2192 a ^ 2 * b ^ 2 * c ^ 2 * (a + b + b + c + c + a) \u2264 a ^ 2 + b ^ 2 + b ^ 2 + c ^ 2 + c ^ 2 + a ^ 2 \u2192 a ^ 3 + b ^ 3 + b ^ 3 + c ^ 3 + c ^ 3 + a ^ 3 \u2264 a ^ 2 + b ^ 2 + b ^ 2 + c ^ 2 + c ^ 2 + a ^ 2 \u2192 a * b * c * (a ^ 2 + b ^ 2 + c ^ 2) \u2264 a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2 \u2192 (a * b + b * c + c * a) ^ 2 \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c \u2264 1 \u2192 a * b + b * c + c * a \u2264 1 \u2192\n   a ^ 2 * b ^ 2 * c ^ 2 * (a + b + b + c + c + a) \u2264 a ^ 2 + b ^ 2 + b ^ 2 + c ^ 2 + c ^ 2 + a ^ 2 \u2192 a ^ 3 + b ^ 3 + b ^ 3 + c ^ 3 + c ^ 3 + a ^ 3 \u2264 a ^ 2 + b ^ 2 + b ^ 2 + c ^ 2 + c ^ 2 + a ^ 2 \u2192\n   a * b * c * (a ^ 2 + b ^ 2 + c ^ 2) \u2264 a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2 \u2192\n   (a * b + b * c + c * a) ^ 2 \u2264 1:= by\n  intro a b c h\u2080 h\u2081 h\u2082 h\u2083 h\u2084\n  have : 0 \u2264 a * b := by\n    nlinarith\n  have : 0 \u2264 b * c := by\n    nlinarith\n  have : 0 \u2264 c * a := by\n    nlinarith\n  have : (a * b + b * c + c * a) ^ 2 \u2264 1 := by\n    have : a * b + b * c + c * a \u2264 1 := by\n      nlinarith\n    nlinarith\n  exact this",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c \u2264 1 \u2192 a * b + b * c + c * a \u2264 1 \u2192\n   a ^ 2 * b ^ 2 * c ^ 2 * (a + b + b + c + c + a) \u2264 a ^ 2 + b ^ 2 + b ^ 2 + c ^ 2 + c ^ 2 + a ^ 2 \u2192 a ^ 3 + b ^ 3 + b ^ 3 + c ^ 3 + c ^ 3 + a ^ 3 \u2264 a ^ 2 + b ^ 2 + b ^ 2 + c ^ 2 + c ^ 2 + a ^ 2 \u2192\n   a * b * c * (a ^ 2 + b ^ 2 + c ^ 2) \u2264 a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2 \u2192\n   (a * b + b * c + c * a) ^ 2 \u2264 1:= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9 hab h2 h3 h4\n  have : a * b + b * c + c * a \u2264 1 := by linarith\n  have : 0 \u2264 a * b := by nlinarith\n  have : 0 \u2264 b * c := by nlinarith\n  have : 0 \u2264 c * a := by nlinarith\n  have : 0 \u2264 a * b * c := by nlinarith\n  nlinarith\n  <;> linarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c \u2264 1 \u2192 a * b + b * c + c * a \u2264 1 \u2192\n   a ^ 2 * b ^ 2 * c ^ 2 * (a + b + b + c + c + a) \u2264 a ^ 2 + b ^ 2 + b ^ 2 + c ^ 2 + c ^ 2 + a ^ 2 \u2192 a ^ 3 + b ^ 3 + b ^ 3 + c ^ 3 + c ^ 3 + a ^ 3 \u2264 a ^ 2 + b ^ 2 + b ^ 2 + c ^ 2 + c ^ 2 + a ^ 2 \u2192\n   a * b * c * (a ^ 2 + b ^ 2 + c ^ 2) \u2264 a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2 \u2192\n   (a * b + b * c + c * a) ^ 2 \u2264 1:= by\n  intro a b c h\u2080 h\u2081 h\u2082 h\u2083 h\u2084\n  ring_nf\n  nlinarith [mul_nonneg (sub_nonneg.mpr h\u2080.1) (sub_nonneg.mpr h\u2080.2.1),\n    mul_nonneg (sub_nonneg.mpr h\u2080.2.1) (sub_nonneg.mpr h\u2080.2.2.1),\n    mul_nonneg (sub_nonneg.mpr h\u2080.2.2.1) (sub_nonneg.mpr h\u2080.1)]"
  ]
 },
 {
  "old": "(a b c d : \u211d) (h1 : a \u2264 b \u2227 b \u2264 c \u2227 c \u2264 d) (h2 : b * c \u2264 a * d) : a ^ b * b ^ c * c ^ d * d ^ a \u2265 a ^ d * b ^ a * c ^ b * d ^ c := by",
  "new": "(x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x * y = 1) : Real.log (x ^ 2) + Real.log (y ^ 2) + Real.log (x * y) \u2264 2 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x * y = 1) :\n     Real.log (x ^ 2) + Real.log (y ^ 2) + Real.log (x * y) \u2264 2 := by\n  rw [show Real.log (x ^ 2) = 2 * Real.log x by\n    rw [Real.log_pow]\n    ring]\n  rw [show Real.log (y ^ 2) = 2 * Real.log y by\n    rw [Real.log_pow]\n    ring]\n  rw [show Real.log (x * y) = Real.log x + Real.log y by\n    rw [Real.log_mul hx.ne' hy.ne'] ]\n  have : Real.log x + Real.log y = Real.log (x * y) := by\n    rw [Real.log_mul hx.ne' hy.ne']\n  rw [hxy] at this\n  norm_num at this\n  nlinarith [Real.log_le_sub_one_of_pos hx, Real.log_le_sub_one_of_pos hy]"
  ]
 },
 {
  "old": "{x : \u211d} (hx : 0 \u2264 x) (a b : \u211d) : x ^ (a * b) = (x ^ a) ^ b := by",
  "new": "{p a b : \u2115} (hp : p.Prime) (hab : a \u2260 0 \u2227 b \u2260 0) (h : (p : \u2115) \u2223 a * b) : Nat.Coprime a b \u2228 \u2203 q, q.Prime \u2227 p \u2223 q \u2227 q \u2223 a * b:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_same_prime_divisor_of_prime {p a b : \u2115} (hp : p.Prime) (hab : a \u2260 0 \u2227 b \u2260 0) \n (h : (p : \u2115) \u2223 a * b) :\n   Nat.Coprime a b \u2228 \u2203 q, q.Prime \u2227 p \u2223 q \u2227 q \u2223 a * b:= by\n  by_cases h1 : Nat.Coprime a b\n  exact Or.inl h1\n  apply Or.inr\n  exact \u27e8p, hp, by simp_all [Nat.Prime.dvd_mul, hab]\u27e9"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 1 \u2264 a) (hb : 1 \u2264 b) (hc : 1 \u2264 c) : (a^2 * b * c / (Real.sqrt (b * c) + 1) + b^2 * a * c / (Real.sqrt (a * c) + 1) + c^2 * a * b / (Real.sqrt (a * b) + 1)) \u2265 3 / 2 := by",
  "new": "(a b c : \u211d) (ha : 1 \u2264 a) (hb : 1 \u2264 b) (hc : 1 \u2264 c) : a * b * c * (Real.sqrt a * Real.sqrt b * Real.sqrt c) \u2265 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_2 (a b c : \u211d) (ha : 1 \u2264 a) (hb : 1 \u2264 b) (hc : 1 \u2264 c) :\n      a * b * c * (Real.sqrt a * Real.sqrt b * Real.sqrt c) \u2265 1:= by\n  have h1 : Real.sqrt a \u2265 1 := Real.le_sqrt_of_sq_le (by nlinarith)\n  have h2 : Real.sqrt b \u2265 1 := Real.le_sqrt_of_sq_le (by nlinarith)\n  have h3 : Real.sqrt c \u2265 1 := Real.le_sqrt_of_sq_le (by nlinarith)\n  have h4 : a * b \u2265 1 := by nlinarith\n  have h5 : a * b * c \u2265 1 := by nlinarith\n  have h6 : a * b * c * (Real.sqrt a * Real.sqrt b * Real.sqrt c) \u2265 1 := by\n    calc\n      a * b * c * (Real.sqrt a * Real.sqrt b * Real.sqrt c) \u2265 1 * (1 * 1) := by gcongr <;> nlinarith\n      _ = 1 := by norm_num\n  exact h6"
  ]
 },
 {
  "old": "(x y z : \u211d) (h : x + y + z = 3) (hx : x >= 0 \u2227 y >= 0 \u2227 z >= 0): 2 * (x ^ 3 + y ^ 3 + z ^ 3) + x*y*z \u2265 7 := by",
  "new": "(a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 a.Coprime b:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 a.Coprime b:= by\n  cases' Nat.eq_zero_or_pos a with ha ha <;> cases' Nat.eq_zero_or_pos b with hb hb\n  all_goals simp_all [Nat.eq_one_of_mul_eq_one_right]\n  all_goals try apply Nat.coprime_one_left\n  all_goals try apply Nat.coprime_one_right\n  all_goals linarith\n  all_goals simp_all\n  all_goals apply Nat.eq_one_of_mul_eq_one_right <;> linarith\n  all_goals simp_all\n  all_goals apply Eq.symm\n  all_goals apply Eq.trans\n  all_goals apply Eq.symm\n  all_goals apply Eq.trans\n  all_goals simp_all\n  all_goals apply Nat.eq_one_of_mul_eq_one_right\n  all_goals linarith\n  all_goals simp_all\n  all_goals apply Nat.eq_one_of_mul_eq_one_right\n  all_goals linarith\n  all_goals simp_all",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 a.Coprime b:= by\n  cases' a with a\n  all_goals cases' b with b\n  all_goals simp_all\n  all_goals omega"
  ]
 },
 {
  "old": "(x : \u2124) : Even (x^7 + x^5) := by",
  "new": "(x : \u2124) : (\u2203 k : \u2124, x = 2 * k) \u2228 (\u2203 k : \u2124, x = 2 * k + 1) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem even_xor_1_le_x (x : \u2124) : (\u2203 k : \u2124, x = 2 * k) \u2228 (\u2203 k : \u2124, x = 2 * k + 1) := by\n  cases' em (x % 2 = 0) with h h <;> [left; right]\n  exact \u27e8x / 2, by omega\u27e9\n  exact \u27e8x / 2, by omega\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem even_xor_1_le_x (x : \u2124) : (\u2203 k : \u2124, x = 2 * k) \u2228 (\u2203 k : \u2124, x = 2 * k + 1) := by\n  cases' Int.emod_two_eq_zero_or_one x with h h <;> [left; right] <;>\n  exact \u27e8x / 2, by omega\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem even_xor_1_le_x (x : \u2124) : (\u2203 k : \u2124, x = 2 * k) \u2228 (\u2203 k : \u2124, x = 2 * k + 1) := by\n  by_cases h : x % 2 = 0\n  left\n  use x / 2\n  omega\n  right\n  use x / 2\n  omega"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a * b + b * c + c * a = 1) : (b^2 * (1 - 2 * a) / a + c^2 * (1 - 2 * b) / b + a^2 * (1 - 2 * c) / c) \u2265 Real.sqrt 3 - 2 := by",
  "new": ": Real.sqrt 3 \u2264 2 + (1 / Real.sqrt 3) * (2 * Real.sqrt 3) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 3 \u2264 2 + (1 / Real.sqrt 3) * (2 * Real.sqrt 3)  := by\n  have h : 0 < Real.sqrt 3 := by\n    exact Real.sqrt_pos.mpr (by norm_num)\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  \u00b7 positivity\n  \u00b7 field_simp\n    norm_num\n    <;> nlinarith [sq_sqrt (show 0 \u2264 (3 : \u211d) by norm_num)]"
  ]
 },
 {
  "old": "(x : \u211d) (hx : 0 < x) : (1 + x) ^ (1 / x) + (1 + 1 / x) ^ x \u2264 4 := by",
  "new": "(x : \u211d) (hx : 0 < x) : Real.sqrt (1 + x ^ 2) - 2 * x * (1 + Real.sqrt (1 + x ^ 2)) ^ 2 \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem e_lemniscate_ineq_2 (x : \u211d) (hx : 0 < x) :\n    Real.sqrt (1 + x ^ 2) - 2 * x * (1 + Real.sqrt (1 + x ^ 2)) ^ 2 \u2264 1:= by\n  have h\u2081 : Real.sqrt (1 + x ^ 2) \u2265 0 := Real.sqrt_nonneg (1 + x ^ 2)\n  have h\u2082 : Real.sqrt (1 + x ^ 2) ^ 2 = 1 + x ^ 2 := Real.sq_sqrt (add_nonneg zero_le_one (sq_nonneg x))\n  have h\u2083 : 2 * x * (1 + Real.sqrt (1 + x ^ 2)) ^ 2 \u2265 0 := by positivity\n  nlinarith [sq_nonneg (x - 1), h\u2081, h\u2082, h\u2083]\n  <;> assumption\n  <;> simp_all\n  <;> linarith\n  <;> assumption\n  <;> simp_all\n  <;> linarith\n  <;> assumption\n  <;> simp_all\n  <;> linarith\n  <;> assumption\n  <;> simp_all\n  <;> linarith\n  <;> assumption\n  <;> simp_all\n  <;> linarith\n  <;> assumption\n  <;> simp_all\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a^2 + b^2 + c^2 \u2265 a^2 * (b / (c + a) + c / (2 * a)) + b^2 * (c / (a + b) + a / (2 * b)) + c^2 * (a / (b + c) + b / (2 * c)) \u2227 a^2 * (b / (c + a) + c / (2 * a)) + b^2 * (c / (a + b) + a / (2 * b)) + c^2 * (a / (b + c) + b / (2 * c)) \u2265 a * b + b * c + c * a := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a ^ 2 * b / (c + a) + b ^ 2 * c / (a + b) + c ^ 2 * a / (b + c) \u2264 a ^ 2 + b ^ 2 + c ^ 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n  a ^ 2 * b / (c + a) + b ^ 2 * c / (a + b) + c ^ 2 * a / (b + c) \u2264 a ^ 2 + b ^ 2 + c ^ 2:= by\n  rw [add_comm]\n  have h\u2081 : 0 < a * b := mul_pos ha hb\n  have h\u2082 : 0 < b * c := mul_pos hb hc\n  have h\u2083 : 0 < c * a := mul_pos hc ha\n  have h\u2084 : 0 < a * b + b * c + c * a := by positivity\n  have h\u2085 : 0 < a + b + c := by positivity\n  have h\u2086 : 0 < a * b * (a + b) := by positivity\n  have h\u2087 : 0 < b * c * (b + c) := by positivity\n  have h\u2088 : 0 < c * a * (c + a) := by positivity\n  have h\u2089 : 0 < a * b * (a + b) + b * c * (b + c) + c * a * (c + a) := by positivity\n  field_simp [h\u2085.ne', h\u2089.ne', h\u2084.ne']\n  rw [div_le_iff (by positivity)]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n  a ^ 2 * b / (c + a) + b ^ 2 * c / (a + b) + c ^ 2 * a / (b + c) \u2264 a ^ 2 + b ^ 2 + c ^ 2:= by\n  have hab : 0 < a * b := mul_pos ha hb\n  have hbc : 0 < b * c := mul_pos hb hc\n  have hac : 0 < a * c := mul_pos ha hc\n  have h\u2080 : 0 < a * b * c := by positivity\n  have h\u2081 : 0 < a ^ 2 + b ^ 2 + c ^ 2 := by positivity\n  apply le_of_sub_nonneg\n  field_simp [h\u2080, h\u2081]\n  ring_nf\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n  a ^ 2 * b / (c + a) + b ^ 2 * c / (a + b) + c ^ 2 * a / (b + c) \u2264 a ^ 2 + b ^ 2 + c ^ 2:= by\n  refine' le_of_sub_nonneg _\n  field_simp [add_comm]\n  ring_nf\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n  a ^ 2 * b / (c + a) + b ^ 2 * c / (a + b) + c ^ 2 * a / (b + c) \u2264 a ^ 2 + b ^ 2 + c ^ 2:= by\n  have hab : 0 < a * b := mul_pos ha hb\n  have hbc : 0 < b * c := mul_pos hb hc\n  have hac : 0 < a * c := mul_pos ha hc\n  have h\u2080 : 0 < c + a := by linarith\n  have h\u2081 : 0 < a + b := by linarith\n  have h\u2082 : 0 < b + c := by linarith\n  have h\u2083 : 0 < a + b + c := by linarith\n  have h\u2084 : 0 < a * b * (a + b) := by positivity\n  have h\u2085 : 0 < b * c * (b + c) := by positivity\n  have h\u2086 : 0 < c * a * (c + a) := by positivity\n  have h\u2087 : 0 < 2 * (a * b * (a + b) + b * c * (b + c) + c * a * (c + a)) := by positivity\n  have h\u2088 : 0 < 2 * (a ^ 2 + b ^ 2 + c ^ 2) := by positivity\n  field_simp [h\u2080, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087, h\u2088]\n  rw [div_le_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> assumption\n  <;> assumption\n  <;> assumption"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = a + b + c) : a * b + b * c + c * a \u2265 Real.sqrt 3 * (a + b + c) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) : x * y + y * z + z * x \u2265 3 * (x * y * z) ^ (1 / 3) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) :\n       x * y + y * z + z * x \u2265 3 * (x * y * z) ^ (1 / 3) := by\n  norm_num [h]\n  have h\u2081 : 0 < x * y := by positivity\n  have h\u2082 : 0 < y * z := by positivity\n  have h\u2083 : 0 < z * x := by positivity\n  nlinarith [sq_nonneg (x * y - 1), sq_nonneg (y * z - 1), sq_nonneg (z * x - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) :\n       x * y + y * z + z * x \u2265 3 * (x * y * z) ^ (1 / 3) := by\n  simp [h]\n  have h\u2081 : 0 < x * y := mul_pos hx hy\n  have h\u2082 : 0 < y * z := mul_pos hy hz\n  have h\u2083 : 0 < z * x := mul_pos hz hx\n  have h\u2084 : 0 < x * y + y * z + z * x := by positivity\n  have h\u2085 : 0 < x * y * z := by positivity\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084, h\u2085]\n  nlinarith [sq_nonneg (x * y - 1), sq_nonneg (y * z - 1), sq_nonneg (z * x - 1)]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) :\n       x * y + y * z + z * x \u2265 3 * (x * y * z) ^ (1 / 3) := by\n  norm_num [h, mul_assoc]\n  have h\u2081 : 0 < x * y := mul_pos hx hy\n  have h\u2082 : 0 < y * z := mul_pos hy hz\n  have h\u2083 : 0 < z * x := mul_pos hz hx\n  nlinarith [sq_nonneg (x * y + y * z + z * x), sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x),\n    sq_nonneg (z * x - x * y)]\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) :\n       x * y + y * z + z * x \u2265 3 * (x * y * z) ^ (1 / 3) := by\n  simp [h]\n  have h\u2080 : 0 < x * y := mul_pos hx hy\n  have h\u2081 : 0 < y * z := mul_pos hy hz\n  have h\u2082 : 0 < z * x := mul_pos hz hx\n  nlinarith [sq_nonneg (x * y - 1), sq_nonneg (y * z - 1), sq_nonneg (z * x - 1)]"
  ]
 },
 {
  "old": "(n : \u2115) (x : Fin n \u2192 \u211d) (hx : 0 < n) (h : \u2211 i, x i = n) : (\u2211 i, 1 / x i) + (2 * n * Real.sqrt (n - 1)) / (\u2211 i, x i ^ 2) \u2265 n + 2 * Real.sqrt (n - 1) := by",
  "new": "(x : \u2115 \u2192 \u211d) (n : \u2115) (hn : n \u2265 3) : Real.sqrt (1 - 1 / n) ^ 2 \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x : \u2115 \u2192 \u211d) (n : \u2115) (hn : n \u2265 3) : \n    Real.sqrt (1 - 1 / n) ^ 2 \u2264 1:= by\n  cases' n with n\n  exfalso\n  linarith\n  simp [sq, Real.mul_self_sqrt, Nat.cast_nonneg]\n  apply le_of_sub_nonneg\n  field_simp\n  ring_nf\n  positivity"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (hd : d \u2265 0) : 1 / (1 + 4 * a) + 1 / (1 + 4 * b) + 1 / (1 + 4 * c) + 1 / (1 + 4 * d) \u2265 4 / (4 + a * b * c * d) := by",
  "new": "(ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hd : 0 \u2264 d) : 1 / (1 + a ^ 2) + 1 / (1 + b ^ 2) + 1 / (1 + c ^ 2) + 1 / (1 + d ^ 2) \u2265 4 / (4 + a * b * c * d):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hd : 0 \u2264 d) :\n    1 / (1 + a ^ 2) + 1 / (1 + b ^ 2) + 1 / (1 + c ^ 2) + 1 / (1 + d ^ 2) \u2265 4 / (4 + a * b * c * d):= by\n  rcases eq_or_lt_of_le ha with (rfl | ha') <;> rcases eq_or_lt_of_le hb with (rfl | hb') <;>\n    rcases eq_or_lt_of_le hc with (rfl | hc') <;> rcases eq_or_lt_of_le hd with (rfl | hd') <;>\n    simp_all [Nat.div_eq_of_lt]\n  all_goals norm_num\n  all_goals\n    apply le_of_sub_nonneg\n    field_simp\n    ring_nf\n    positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hd : 0 \u2264 d) :\n    1 / (1 + a ^ 2) + 1 / (1 + b ^ 2) + 1 / (1 + c ^ 2) + 1 / (1 + d ^ 2) \u2265 4 / (4 + a * b * c * d):= by\n  rcases eq_or_lt_of_le ha with (rfl | ha') <;> rcases eq_or_lt_of_le hb with (rfl | hb') <;>\n    rcases eq_or_lt_of_le hc with (rfl | hc') <;> rcases eq_or_lt_of_le hd with (rfl | hd') <;>\n    simp_all [Nat.div_eq_of_lt, Nat.div_eq_of_lt, Nat.div_eq_of_lt, Nat.div_eq_of_lt] <;>\n    apply le_of_sub_nonneg <;> field_simp <;> ring_nf <;> positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hd : 0 \u2264 d) :\n    1 / (1 + a ^ 2) + 1 / (1 + b ^ 2) + 1 / (1 + c ^ 2) + 1 / (1 + d ^ 2) \u2265 4 / (4 + a * b * c * d):= by\n  rcases eq_or_lt_of_le ha with (rfl | ha') <;>\n    rcases eq_or_lt_of_le hb with (rfl | hb') <;>\n    rcases eq_or_lt_of_le hc with (rfl | hc') <;>\n    rcases eq_or_lt_of_le hd with (rfl | hd') <;>\n    simp_all [Nat.div_eq_of_lt, Nat.div_eq_of_lt, Nat.div_eq_of_lt, Nat.div_eq_of_lt]\n  all_goals\n    ring_nf\n    apply le_of_lt\n    apply lt_of_lt_of_le\n    all_goals\n      norm_num\n      apply le_of_sub_nonneg\n      field_simp\n      ring_nf\n      positivity"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (1 / (b + a) * Real.sqrt (b ^ 2 + a ^ 2) + 1 / (b + c) * Real.sqrt (b ^ 2 + c ^ 2) + 1 / (c + a) * Real.sqrt (c ^ 2 + a ^ 2)) \u2265 (9 * Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2)) / (2 * Real.sqrt 6 * (a ^ 3 + b ^ 3 + c ^ 3)) := by",
  "new": ": Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) \u2264 Real.sqrt (a ^ 2 + b ^ 2) + Real.sqrt (b ^ 2 + c ^ 2) + Real.sqrt (c ^ 2 + a ^ 2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) \u2264 Real.sqrt (a ^ 2 + b ^ 2) + Real.sqrt (b ^ 2 + c ^ 2) + Real.sqrt (c ^ 2 + a ^ 2):= by\n  have h\u2081 : 0 \u2264 Real.sqrt (a ^ 2 + b ^ 2) := Real.sqrt_nonneg _\n  have h\u2082 : 0 \u2264 Real.sqrt (b ^ 2 + c ^ 2) := Real.sqrt_nonneg _\n  have h\u2083 : 0 \u2264 Real.sqrt (c ^ 2 + a ^ 2) := Real.sqrt_nonneg _\n  have h\u2084 : 0 \u2264 Real.sqrt (a ^ 2 + b ^ 2) + Real.sqrt (b ^ 2 + c ^ 2) + Real.sqrt (c ^ 2 + a ^ 2) := by\n    linarith\n  nlinarith [sq_sqrt (show 0 \u2264 a ^ 2 + b ^ 2 by positivity),\n    sq_sqrt (show 0 \u2264 b ^ 2 + c ^ 2 by positivity),\n    sq_sqrt (show 0 \u2264 c ^ 2 + a ^ 2 by positivity),\n    sq_sqrt (show 0 \u2264 (a ^ 2 + b ^ 2 + c ^ 2) by positivity)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) \u2264 Real.sqrt (a ^ 2 + b ^ 2) + Real.sqrt (b ^ 2 + c ^ 2) + Real.sqrt (c ^ 2 + a ^ 2):= by\n  have h\u2080 : 0 \u2264 Real.sqrt (a ^ 2 + b ^ 2) := Real.sqrt_nonneg _\n  have h\u2081 : 0 \u2264 Real.sqrt (b ^ 2 + c ^ 2) := Real.sqrt_nonneg _\n  have h\u2082 : 0 \u2264 Real.sqrt (c ^ 2 + a ^ 2) := Real.sqrt_nonneg _\n  have h\u2083 : 0 \u2264 Real.sqrt (a ^ 2 + b ^ 2) + Real.sqrt (b ^ 2 + c ^ 2) + Real.sqrt (c ^ 2 + a ^ 2) := by\n    linarith\n  nlinarith [sq_sqrt (show 0 \u2264 a ^ 2 + b ^ 2 by positivity),\n    sq_sqrt (show 0 \u2264 b ^ 2 + c ^ 2 by positivity),\n    sq_sqrt (show 0 \u2264 c ^ 2 + a ^ 2 by positivity),\n    sq_sqrt (show 0 \u2264 (a ^ 2 + b ^ 2 + c ^ 2) by positivity)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) \u2264 Real.sqrt (a ^ 2 + b ^ 2) + Real.sqrt (b ^ 2 + c ^ 2) + Real.sqrt (c ^ 2 + a ^ 2):= by\n  have h\u2080 : 0 \u2264 Real.sqrt (a ^ 2 + b ^ 2) := Real.sqrt_nonneg _\n  have h\u2081 : 0 \u2264 Real.sqrt (b ^ 2 + c ^ 2) := Real.sqrt_nonneg _\n  have h\u2082 : 0 \u2264 Real.sqrt (c ^ 2 + a ^ 2) := Real.sqrt_nonneg _\n  have h\u2083 : 0 \u2264 Real.sqrt (a ^ 2 + b ^ 2) + Real.sqrt (b ^ 2 + c ^ 2) + Real.sqrt (c ^ 2 + a ^ 2) := by linarith\n  nlinarith [sq_sqrt (show 0 \u2264 a ^ 2 + b ^ 2 by positivity),\n    sq_sqrt (show 0 \u2264 b ^ 2 + c ^ 2 by positivity),\n    sq_sqrt (show 0 \u2264 c ^ 2 + a ^ 2 by positivity),\n    sq_sqrt (show 0 \u2264 (a ^ 2 + b ^ 2 + c ^ 2) by positivity)]\n  <;> simp [h\u2080, h\u2081, h\u2082, h\u2083]\n  <;> linarith"
  ]
 },
 {
  "old": "(x y z : \u2115) (h\u2081 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2082 : x^2 + 8*y = 3 + 2*z^2) : False := by",
  "new": "(x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y):= by\n  apply em\n  <;> simp [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y):= by\n  by_cases h : x.Coprime y\n  left\n  exact h\n  right\n  exact h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y):= by\n  have := em (x.Coprime y)\n  tauto",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y):= by\n  apply em\n  <;> simp_all\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop"
  ]
 },
 {
  "old": "(a b : \u211d) (ha : 0 < a) (hb : 0 < b) : (1 / Real.sqrt (a ^ 2 + 1) + 1 / Real.sqrt (b ^ 2 + 1)) \u2265 2 / Real.sqrt (a * b + 1) := by",
  "new": ": \u2200 x : \u211d, x > 0 \u2192 (1 / Real.sqrt (x ^ 2 + 1) \u2265 0) \u2227 (1 / Real.sqrt (x ^ 2 + 1) + 1 / Real.sqrt (x ^ 2 + 1) \u2265 2 / Real.sqrt (x * x + 1)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 (1 / Real.sqrt (x ^ 2 + 1) \u2265 0) \u2227 (1 / Real.sqrt (x ^ 2 + 1) + 1 / Real.sqrt (x ^ 2 + 1) \u2265 2 / Real.sqrt (x * x + 1)) := by\n  intro x x_pos\n  constructor\n  exact by positivity\n  have h\u2080 : 0 < x * x + 1 := by nlinarith\n  have h\u2081 : 0 < Real.sqrt (x * x + 1) := Real.sqrt_pos.mpr h\u2080\n  have h\u2082 : 0 < Real.sqrt (x ^ 2 + 1) := Real.sqrt_pos.mpr (by nlinarith)\n  field_simp [h\u2080, h\u2081, h\u2082]\n  rw [div_le_div_iff]\n  nlinarith [sq_sqrt (by nlinarith : 0 \u2264 x * x + 1), sq_sqrt (by nlinarith : 0 \u2264 x ^ 2 + 1)]\n  nlinarith\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 (1 / Real.sqrt (x ^ 2 + 1) \u2265 0) \u2227 (1 / Real.sqrt (x ^ 2 + 1) + 1 / Real.sqrt (x ^ 2 + 1) \u2265 2 / Real.sqrt (x * x + 1)) := by\n  intro x hx\n  have h\u2080 : 0 < Real.sqrt (x ^ 2 + 1) := Real.sqrt_pos.mpr (by positivity)\n  have h\u2081 : 0 < Real.sqrt (x * x + 1) := Real.sqrt_pos.mpr (by positivity)\n  have h\u2082 : 1 / Real.sqrt (x ^ 2 + 1) \u2265 0 := by positivity\n  have h\u2083 : 1 / Real.sqrt (x ^ 2 + 1) + 1 / Real.sqrt (x ^ 2 + 1) \u2265 2 / Real.sqrt (x * x + 1) := by\n    rw [add_comm]\n    field_simp [h\u2080, h\u2081]\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_sqrt (by positivity : 0 \u2264 x ^ 2 + 1),\n      sq_sqrt (by positivity : 0 \u2264 x * x + 1)]\n  exact \u27e8h\u2082, h\u2083\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 (1 / Real.sqrt (x ^ 2 + 1) \u2265 0) \u2227 (1 / Real.sqrt (x ^ 2 + 1) + 1 / Real.sqrt (x ^ 2 + 1) \u2265 2 / Real.sqrt (x * x + 1)) := by\n  intro x hx\n  have h : 0 < Real.sqrt (x * x + 1) := Real.sqrt_pos.mpr (by nlinarith)\n  constructor\n  exact div_nonneg zero_le_one (Real.sqrt_nonneg _)\n  refine' le_of_sub_nonneg _\n  field_simp [h]\n  rw [le_div_iff (by positivity), \u2190 sub_nonneg]\n  nlinarith [sq_sqrt (by nlinarith : 0 \u2264 x * x + 1), sq_sqrt (by nlinarith : 0 \u2264 x ^ 2 + 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 (1 / Real.sqrt (x ^ 2 + 1) \u2265 0) \u2227 (1 / Real.sqrt (x ^ 2 + 1) + 1 / Real.sqrt (x ^ 2 + 1) \u2265 2 / Real.sqrt (x * x + 1)) := by\n  rintro x (hx : 0 < x)\n  have h\u2081 : 0 < Real.sqrt (x ^ 2 + 1) := Real.sqrt_pos.mpr (by positivity)\n  have h\u2082 : 0 < Real.sqrt (x * x + 1) := Real.sqrt_pos.mpr (by positivity)\n  constructor\n  \u00b7 positivity\n  \u00b7 rw [add_comm]\n    apply le_of_sub_nonneg\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_sqrt (show 0 \u2264 x ^ 2 + 1 from by positivity),\n      sq_sqrt (show 0 \u2264 x * x + 1 from by positivity)]"
  ]
 },
 {
  "old": "(u v w : \u211d) (hu : u \u2265 v^2) (hw : u \u2265 w) : 27 * u^6 + 36 * u^2 * v^4 + 9 * v^4 * u \u2265 8 * v^6 + 78 * v^2 * u^4 + u^2 * w^3 + 9 * u^3 * v^2 := by",
  "new": "(h\u2080 : 0 < q) (h\u2081 : 0 < n) (h\u2082 : 0 < m) (h\u2083 : q ^ 2 \u2264 n * m) : (n + m) * (m + n) ^ 2 * (n + m + 1) ^ 2 * (n + m + 2) ^ 2 * (n + m + 3) ^ 2 * (n + m + 4) ^ 2 * (n + m + 5) ^ 2 \u2265 n * m ^ 2 * (n + m + 1) ^ 2 * (n + m + 2) ^ 2 * (n + m + 3) ^ 2 * (n + m + 4) ^ 2 * (n + m + 5) ^ 2 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (h\u2080 : 0 < q) (h\u2081 : 0 < n) (h\u2082 : 0 < m) (h\u2083 : q ^ 2 \u2264 n * m) :\n       (n + m) * (m + n) ^ 2 * (n + m + 1) ^ 2 * (n + m + 2) ^ 2 * (n + m + 3) ^ 2 * (n + m + 4) ^ 2 * (n + m + 5) ^ 2 \u2265\n       n * m ^ 2 * (n + m + 1) ^ 2 * (n + m + 2) ^ 2 * (n + m + 3) ^ 2 * (n + m + 4) ^ 2 * (n + m + 5) ^ 2 := by\n  norm_num at *\n  gcongr\n  all_goals\n    nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (h\u2080 : 0 < q) (h\u2081 : 0 < n) (h\u2082 : 0 < m) (h\u2083 : q ^ 2 \u2264 n * m) :\n       (n + m) * (m + n) ^ 2 * (n + m + 1) ^ 2 * (n + m + 2) ^ 2 * (n + m + 3) ^ 2 * (n + m + 4) ^ 2 * (n + m + 5) ^ 2 \u2265\n       n * m ^ 2 * (n + m + 1) ^ 2 * (n + m + 2) ^ 2 * (n + m + 3) ^ 2 * (n + m + 4) ^ 2 * (n + m + 5) ^ 2 := by\n  gcongr\n  all_goals nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (h\u2080 : 0 < q) (h\u2081 : 0 < n) (h\u2082 : 0 < m) (h\u2083 : q ^ 2 \u2264 n * m) :\n       (n + m) * (m + n) ^ 2 * (n + m + 1) ^ 2 * (n + m + 2) ^ 2 * (n + m + 3) ^ 2 * (n + m + 4) ^ 2 * (n + m + 5) ^ 2 \u2265\n       n * m ^ 2 * (n + m + 1) ^ 2 * (n + m + 2) ^ 2 * (n + m + 3) ^ 2 * (n + m + 4) ^ 2 * (n + m + 5) ^ 2 := by\n  have : 0 < n * m := by nlinarith\n  norm_num\n  gcongr\n  all_goals nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (h\u2080 : 0 < q) (h\u2081 : 0 < n) (h\u2082 : 0 < m) (h\u2083 : q ^ 2 \u2264 n * m) :\n       (n + m) * (m + n) ^ 2 * (n + m + 1) ^ 2 * (n + m + 2) ^ 2 * (n + m + 3) ^ 2 * (n + m + 4) ^ 2 * (n + m + 5) ^ 2 \u2265\n       n * m ^ 2 * (n + m + 1) ^ 2 * (n + m + 2) ^ 2 * (n + m + 3) ^ 2 * (n + m + 4) ^ 2 * (n + m + 5) ^ 2 := by\n  norm_num\n  gcongr\n  all_goals nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (habc : a + b + c = 3) : (a^2 * b + 3 / 2) * (b^2 * c + 3 / 2) * (c^2 * a + 3 / 2) \u2264 75 / 4 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h\u2080 : x + y + z = 1) : (x + y) / (x ^ 2 + 2 * y) + (y + z) / (y ^ 2 + 2 * z) + (z + x) / (z ^ 2 + 2 * x) \u2265 9 / 14 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p19 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2080 : x + y + z = 1) :\n  (x + y) / (x ^ 2 + 2 * y) + (y + z) / (y ^ 2 + 2 * z) + (z + x) / (z ^ 2 + 2 * x) \u2265 9 / 14  := by\n  have h\u2081 : 0 < x ^ 2 + 2 * y := by nlinarith\n  have h\u2082 : 0 < y ^ 2 + 2 * z := by nlinarith\n  have h\u2083 : 0 < z ^ 2 + 2 * x := by nlinarith\n  have h\u2084 : (x + y) / (x ^ 2 + 2 * y) \u2265 (x + y) / 2 := by\n    apply div_le_div_of_le_left (by nlinarith) (by nlinarith)\n    nlinarith\n  have h\u2085 : (y + z) / (y ^ 2 + 2 * z) \u2265 (y + z) / 2 := by\n    apply div_le_div_of_le_left (by nlinarith) (by nlinarith)\n    nlinarith\n  have h\u2086 : (z + x) / (z ^ 2 + 2 * x) \u2265 (z + x) / 2 := by\n    apply div_le_div_of_le_left (by nlinarith) (by nlinarith)\n    nlinarith\n  nlinarith\n  <;> assumption\n  <;> try norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p19 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2080 : x + y + z = 1) :\n  (x + y) / (x ^ 2 + 2 * y) + (y + z) / (y ^ 2 + 2 * z) + (z + x) / (z ^ 2 + 2 * x) \u2265 9 / 14  := by\n  have h\u2081 : 0 < x ^ 2 + 2 * y := by positivity\n  have h\u2082 : 0 < y ^ 2 + 2 * z := by positivity\n  have h\u2083 : 0 < z ^ 2 + 2 * x := by positivity\n  have h\u2084 : (x + y) / (x ^ 2 + 2 * y) \u2265 (x + y) / 3 := by gcongr; nlinarith\n  have h\u2085 : (y + z) / (y ^ 2 + 2 * z) \u2265 (y + z) / 3 := by gcongr; nlinarith\n  have h\u2086 : (z + x) / (z ^ 2 + 2 * x) \u2265 (z + x) / 3 := by gcongr; nlinarith\n  nlinarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p19 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2080 : x + y + z = 1) :\n  (x + y) / (x ^ 2 + 2 * y) + (y + z) / (y ^ 2 + 2 * z) + (z + x) / (z ^ 2 + 2 * x) \u2265 9 / 14  := by\n  have h\u2081 : 0 < x ^ 2 + 2 * y := by positivity\n  have h\u2082 : 0 < y ^ 2 + 2 * z := by positivity\n  have h\u2083 : 0 < z ^ 2 + 2 * x := by positivity\n  have h\u2084 : (x + y) / (x ^ 2 + 2 * y) \u2265 (x + y) / 3 := by gcongr; nlinarith [sq_nonneg (x - y)]\n  have h\u2085 : (y + z) / (y ^ 2 + 2 * z) \u2265 (y + z) / 3 := by\n    gcongr\n    nlinarith [sq_nonneg (y - z)]\n  have h\u2086 : (z + x) / (z ^ 2 + 2 * x) \u2265 (z + x) / 3 := by\n    gcongr\n    nlinarith [sq_nonneg (z - x)]\n  have h\u2087 : (x + y) / 3 + (y + z) / 3 + (z + x) / 3 \u2265 9 / 14 := by\n    linarith\n  linarith\n  <;> assumption\n  <;> try assumption\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p19 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2080 : x + y + z = 1) :\n  (x + y) / (x ^ 2 + 2 * y) + (y + z) / (y ^ 2 + 2 * z) + (z + x) / (z ^ 2 + 2 * x) \u2265 9 / 14  := by\n  have h\u2081 : 0 < x ^ 2 + 2 * y := by positivity\n  have h\u2082 : 0 < y ^ 2 + 2 * z := by positivity\n  have h\u2083 : 0 < z ^ 2 + 2 * x := by positivity\n  have h\u2084 : (x + y) / (x ^ 2 + 2 * y) \u2265 (x + y) / 2 := by\n    apply div_le_div_of_le_left\n    all_goals nlinarith\n  have h\u2085 : (y + z) / (y ^ 2 + 2 * z) \u2265 (y + z) / 2 := by\n    apply div_le_div_of_le_left\n    all_goals nlinarith\n  have h\u2086 : (z + x) / (z ^ 2 + 2 * x) \u2265 (z + x) / 2 := by\n    apply div_le_div_of_le_left\n    all_goals nlinarith\n  nlinarith\n  <;> linarith\n  <;> norm_num"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : (a / (a + b) + b / (b + c) + c / (c + a)) * (b / (a + b) + c / (b + c) + a / (c + a)) \u2264 9 / 4 := by",
  "new": ": \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192 (a / (a + b) + b / (b + c) + c / (c + a)) * (b / (a + b) + c / (b + c) + a / (c + a)) \u2264 9 / 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192\n   (a / (a + b) + b / (b + c) + c / (c + a)) * (b / (a + b) + c / (b + c) + a / (c + a)) \u2264 9 / 4:= by\n  intro a b c d ha hb hc hd\n  field_simp [add_comm, add_left_comm]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le,\n    mul_nonneg (sq_nonneg (a - b)) (sq_nonneg (b - c)),\n    mul_nonneg (sq_nonneg (b - c)) (sq_nonneg (c - a)),\n    mul_nonneg (sq_nonneg (c - a)) (sq_nonneg (a - b))]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 3) : a * Real.sqrt ((4 * a + 5 * b) * (4 * a + 5 * c)) + b * Real.sqrt ((4 * b + 5 * c) * (4 * b + 5 * a)) + c * Real.sqrt ((4 * c + 5 * a) * (4 * c + 5 * b)) \u2265 27 := by",
  "new": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 1) : Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) + Real.sqrt (a * b) * 3 + 3 * Real.sqrt (a * c) * 3 + 3 * Real.sqrt (b * c) * 3 \u2265 a + b + c:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 1) :\n     Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) + Real.sqrt (a * b) * 3 + 3 * Real.sqrt (a * c) * 3 + 3 * Real.sqrt (b * c) * 3 \u2265  a + b + c:= by\n  simp only [hab, mul_one, mul_zero, add_zero]\n  nlinarith [Real.sqrt_nonneg (a ^ 2 + b ^ 2 + c ^ 2), Real.sqrt_nonneg (a * b),\n    Real.sqrt_nonneg (a * c), Real.sqrt_nonneg (b * c), sq_sqrt (show 0 \u2264 a ^ 2 + b ^ 2 + c ^ 2 by positivity),\n    sq_sqrt (show 0 \u2264 a * b by positivity), sq_sqrt (show 0 \u2264 a * c by positivity),\n    sq_sqrt (show 0 \u2264 b * c by positivity)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b + c = 1) : (1 - a * b - b * c) / (a + b - c) ^ 2 + (1 - b * c - c * a) / (b + c - a) ^ 2 + (1 - c * a - a * b) / (c + a - b) ^ 2 \u2265 63 * a * b * c / (a ^ 3 + b ^ 3 + c ^ 3) := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) : a * b * (a + b) * (b + c) * c + b * c * (b + c) * (c + a) * a + c * a * (c + a) * (a + b) * b \u2264 2 * (a + b + c) * (b + c + a) * (c + a + b):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) : a * b * (a + b) * (b + c) * c + b * c * (b + c) * (c + a) * a + c * a * (c + a) * (a + b) * b \u2264 2 * (a + b + c) * (b + c + a) * (c + a + b):= by\n  have h\u2080 : 0 < a * b := by positivity\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * a := by positivity\n  have h\u2083 : 0 < a * b * c := by positivity\n  have h\u2084 : 0 < a * b * c * (a + b + c) := by positivity\n  have h\u2085 : 0 < a * b + b * c + c * a := by positivity\n  have h\u2086 : 0 < a * b * c * (a + b + c) + a * b * c * (b + c + a) + b * c * a * (c + a + b) := by positivity\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) : a * b * (a + b) * (b + c) * c + b * c * (b + c) * (c + a) * a + c * a * (c + a) * (a + b) * b \u2264 2 * (a + b + c) * (b + c + a) * (c + a + b):= by\n  have h : (a + b + c) ^ 2 = 1 := by simp [hab]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c), mul_nonneg ha.le hb.le, mul_nonneg ha.le hc.le, mul_nonneg hb.le hc.le, mul_nonneg (mul_nonneg ha.le hb.le) hc.le, mul_nonneg (mul_nonneg ha.le hc.le) hb.le, mul_nonneg (mul_nonneg hb.le hc.le) ha.le]\n  <;> linarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith"
  ]
 },
 {
  "old": "(x_1 x_2 : \u211d) (hx_1 : 0 < x_1) (hx_2 : 0 < x_2) : x_1 + x_2 \u2265 2 * Real.sqrt (x_1 * x_2) := by",
  "new": "(x y : \u211d) (hx : 0 < x) (hy : 0 < y) : Real.sqrt (2 * (x^2 + y^2)) \u2265 (x + y) / 2 + Real.sqrt ((x^2 + y^2) - 2 * x * y) / 2 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 < x) (hy : 0 < y)  :\n     Real.sqrt (2 * (x^2 + y^2)) \u2265  (x + y) / 2 + Real.sqrt ((x^2 + y^2) - 2 * x * y) / 2 := by\n  have h\u2081 : 0 \u2264 (x - y) ^ 2 := by\n    apply sq_nonneg\n  have h\u2082 : 0 \u2264 Real.sqrt ((x^2 + y^2) - 2 * x * y) := by\n    apply Real.sqrt_nonneg\n  have h\u2083 : (x + y) / 2 + Real.sqrt ((x^2 + y^2) - 2 * x * y) / 2 \u2264 Real.sqrt (2 * (x ^ 2 + y ^ 2)) := by\n    apply le_sqrt_of_sq_le\n    nlinarith [sq_sqrt (show 0 \u2264 (x ^ 2 + y ^ 2) - 2 * x * y from by\n      nlinarith), sq_nonneg (x - y)]\n  nlinarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 < x) (hy : 0 < y)  :\n     Real.sqrt (2 * (x^2 + y^2)) \u2265  (x + y) / 2 + Real.sqrt ((x^2 + y^2) - 2 * x * y) / 2 := by\n  have : 0 \u2264 Real.sqrt ((x^2 + y^2) - 2 * x * y) := by\n    apply Real.sqrt_nonneg\n  have : (x + y) / 2 + Real.sqrt ((x^2 + y^2) - 2 * x * y) / 2 \u2264\n      Real.sqrt (2 * (x^2 + y^2)) := by\n    apply le_sqrt_of_sq_le\n    nlinarith [sq_sqrt (show 0 \u2264 (x^2 + y^2) - 2 * x * y by\n      nlinarith [sq_nonneg (x - y)]), sq_nonneg (x - y)]\n  linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 < x) (hy : 0 < y)  :\n     Real.sqrt (2 * (x^2 + y^2)) \u2265  (x + y) / 2 + Real.sqrt ((x^2 + y^2) - 2 * x * y) / 2 := by\n  have h2 : 0 \u2264 Real.sqrt ((x^2 + y^2) - 2 * x * y) := by\n    apply Real.sqrt_nonneg\n  have h3 : 0 \u2264 (x - y)^2 := by\n    apply sq_nonneg\n  have h4 : Real.sqrt (2 * (x^2 + y^2)) \u2265 (x + y) / 2 + Real.sqrt ((x^2 + y^2) - 2 * x * y) / 2 := by\n    have h5 : (x + y) / 2 + Real.sqrt ((x^2 + y^2) - 2 * x * y) / 2 \u2264\n      Real.sqrt (2 * (x^2 + y^2)) := by\n      apply le_sqrt_of_sq_le\n      nlinarith [sq_sqrt (show 0 \u2264 (x^2 + y^2) - 2 * x * y from by\n        nlinarith), sq_nonneg (x - y)]\n    linarith\n  exact h4",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 < x) (hy : 0 < y)  :\n     Real.sqrt (2 * (x^2 + y^2)) \u2265  (x + y) / 2 + Real.sqrt ((x^2 + y^2) - 2 * x * y) / 2 := by\n  have h\u2080 : 0 \u2264 (x - y)^2 := by\n    exact sq_nonneg (x - y)\n  have h\u2081 : 0 \u2264 Real.sqrt ((x^2 + y^2) - 2 * x * y) := by\n    apply Real.sqrt_nonneg\n  have h\u2082 : (x + y) / 2 + Real.sqrt ((x^2 + y^2) - 2 * x * y) / 2 \u2264 Real.sqrt (2 * (x^2 + y^2)) := by\n    apply le_sqrt_of_sq_le\n    nlinarith [sq_sqrt (show 0 \u2264 (x^2 + y^2) - 2 * x * y from by nlinarith),\n      mul_self_nonneg (x - y)]\n  linarith"
  ]
 },
 {
  "old": "{x y z : \u211d} (hx : x \u2260 0) (hy : y \u2260 0) (hz : z \u2260 0) : (x * (x ^ 2 + 1) + y * (y ^ 2 + 1) + z * (z ^ 2 + 1)) * (x * z ^ 2 / (x ^ 2 + 1) * y ^ 2 + y * x ^ 2 / (y ^ 2 + 1) * z ^ 2 + z * y ^ 2 / (z ^ 2 + 1) * x ^ 2) \u2265 (x * z / y + y * x / z + z * y / x) ^ 2 := by",
  "new": ": \u2200 x : \u211d, x \u2260 0 \u2192 1 / x ^ 2 + x ^ 2 \u2265 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 x : \u211d, x \u2260 0 \u2192 1 / x ^ 2 + x ^ 2 \u2265 2:= by\n  intro x hx\n  have key : 0 < x ^ 2 := sq_pos_of_ne_zero hx\n  field_simp [key]\n  rw [le_div_iff, mul_comm]\n  nlinarith [sq_nonneg (x ^ 2 - 1)]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 x : \u211d, x \u2260 0 \u2192 1 / x ^ 2 + x ^ 2 \u2265 2:= by\n  intro x hx\n  have h : x ^ 2 > 0 := sq_pos_of_ne_zero hx\n  field_simp [h]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (x + 1), h]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 x : \u211d, x \u2260 0 \u2192 1 / x ^ 2 + x ^ 2 \u2265 2:= by\n  intro x hx\n  have hx2 : x ^ 2 \u2260 0 := pow_ne_zero 2 hx\n  field_simp [hx2]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (x + 1)]"
  ]
 },
 {
  "old": ": \u2200 t : \u211d, sin t ^ 3 = (3 * sin t - sin (3 * t)) / 4 := by",
  "new": ": sin (3 * \u03b8) = 3 * sin \u03b8 - 4 * sin \u03b8 ^ 3 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_three_mul : sin (3 * \u03b8) = 3 * sin \u03b8 - 4 * sin \u03b8 ^ 3 := by\n  have h\u2081 : \u03b8 + 2 * \u03b8 = 3 * \u03b8 := by ring\n  rw [\u2190 h\u2081, sin_add \u03b8 (2 * \u03b8)]\n  simp only [cos_two_mul, sin_two_mul, cos_sq']\n  have h\u2082 : cos \u03b8 * (2 * sin \u03b8 * cos \u03b8) = 2 * sin \u03b8 * cos \u03b8 ^ 2 := by ring\n  rw [h\u2082, cos_sq']\n  ring",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_three_mul : sin (3 * \u03b8) = 3 * sin \u03b8 - 4 * sin \u03b8 ^ 3 := by\n  have h1 : \u03b8 + 2 * \u03b8 = 3 * \u03b8 := by ring\n  rw [\u2190 h1, sin_add \u03b8 (2 * \u03b8)]\n  simp only [cos_two_mul, sin_two_mul, cos_sq']\n  have h2 : cos \u03b8 * (2 * sin \u03b8 * cos \u03b8) = 2 * sin \u03b8 * cos \u03b8 ^ 2 := by ring\n  rw [h2, cos_sq']\n  ring"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : (a + b + c) ^ 5 \u2265 81 * (a ^ 2 + b ^ 2 + c ^ 2) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) : 8 * (x + y + z) \u2265 3 * Real.sqrt 9 * (x * y * z) ^ (1 / 3) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h : x * y * z = 1) :\n   8 * (x + y + z) \u2265 3 * Real.sqrt 9 * (x * y * z) ^ (1 / 3)  := by\n  simp [h, mul_assoc]\n  have h\u2080 : 0 \u2264 x * y := by positivity\n  have h\u2081 : 0 \u2264 y * z := by positivity\n  have h\u2082 : 0 \u2264 x * z := by positivity\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 9 by norm_num),\n    Real.sqrt_nonneg 9, sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (x - z),\n    sq_nonneg (Real.sqrt 9 - x), sq_nonneg (Real.sqrt 9 - y), sq_nonneg (Real.sqrt 9 - z)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h : x * y * z = 1) :\n   8 * (x + y + z) \u2265 3 * Real.sqrt 9 * (x * y * z) ^ (1 / 3)  := by\n  norm_num\n  have h\u2081 : 0 < x * y := by positivity\n  have h\u2082 : 0 < y * z := by positivity\n  have h\u2083 : 0 < x * z := by positivity\n  nlinarith [sq_sqrt (show 0 \u2264 9 by norm_num),\n    mul_self_nonneg (x - Real.sqrt 9 / 3),\n    mul_self_nonneg (y - Real.sqrt 9 / 3),\n    mul_self_nonneg (z - Real.sqrt 9 / 3)]\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h : x * y * z = 1) :\n   8 * (x + y + z) \u2265 3 * Real.sqrt 9 * (x * y * z) ^ (1 / 3)  := by\n  norm_num [h, hx, hy, hz]\n  have h\u2080 : Real.sqrt 9 = 3 := by norm_num [Real.sqrt_eq_iff_mul_self_eq]\n  rw [h\u2080]\n  have h\u2081 : 3 * (x + y + z) \u2265 3 * 3 := by\n    nlinarith [sq_nonneg (x + y + z - 3), sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  nlinarith [sq_nonneg (x + y + z - 3), sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h : x * y * z = 1) :\n   8 * (x + y + z) \u2265 3 * Real.sqrt 9 * (x * y * z) ^ (1 / 3)  := by\n  rw [h]\n  norm_num\n  have h\u2082 : 0 < x + y + z := by positivity\n  have h\u2083 : 0 < x * y := mul_pos hx hy\n  have h\u2084 : 0 < y * z := mul_pos hy hz\n  have h\u2085 : 0 < x * z := mul_pos hx hz\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 9 from by norm_num),\n    mul_self_nonneg (x - 1), mul_self_nonneg (y - 1), mul_self_nonneg (z - 1)]"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : x > 0 \u2227 y > 0 \u2227 z > 0 \u2227 x + y + z = 1) : (1 + 1/x) * (1 + 1/y) * (1 + 1/z) \u2265 64 := by",
  "new": "(x y z : \u211d) (hx : 0 < x \u2227 0 < y \u2227 0 < z) (h : x + y + z = 1) : 1 / x ^ 2 + 1 / y ^ 2 + 1 / z ^ 2 \u2265 9:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p19 (x y z : \u211d) (hx : 0 < x \u2227 0 < y \u2227 0 < z) (h : x + y + z = 1) : 1 / x ^ 2 + 1 / y ^ 2 + 1 / z ^ 2 \u2265 9:= by\n  rcases hx with \u27e8hx, hy, hz\u27e9\n  have h\u2081 : 0 < x * y := mul_pos hx hy\n  have h\u2082 : 0 < x * z := mul_pos hx hz\n  have h\u2083 : 0 < y * z := mul_pos hy hz\n  have h\u2084 : 0 < x * y * z := by positivity\n  have h\u2085 : 0 < x * y * z * (x + y + z) := by positivity\n  have h\u2086 : 0 < x * y * z * (x * y + x * z + y * z) := by positivity\n  field_simp [h]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x * y - x * z), sq_nonneg (x * z - y * z), sq_nonneg (y * z - x * y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p19 (x y z : \u211d) (hx : 0 < x \u2227 0 < y \u2227 0 < z) (h : x + y + z = 1) : 1 / x ^ 2 + 1 / y ^ 2 + 1 / z ^ 2 \u2265 9:= by\n  rcases hx with \u27e8hx, hy, hz\u27e9\n  have hxy : 0 < x * y := mul_pos hx hy\n  have hyz : 0 < y * z := mul_pos hy hz\n  have hxz : 0 < z * x := mul_pos hz hx\n  have h : (x + y + z) ^ 2 = 1 := by rw [h]; ring\n  have h1 : 1 / x ^ 2 + 1 / y ^ 2 + 1 / z ^ 2 \u2265 9 := by\n    have h2 : 0 < x * y * z := by positivity\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x * y + y * z + z * x), sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x),\n      sq_nonneg (z * x - x * y)]\n  exact h1"
  ]
 },
 {
  "old": "(n m : \u2115) (hn : n \u2223 m) : fib n \u2223 fib m := by",
  "new": "(n m : \u2115) (hn : 2 \u2264 n) (hm : 2 \u2264 m) (hnm : n.Coprime m) : fib n \u2223 fib m \u2227 fib m \u2223 fib n \u2194 fib n = fib m:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two (n m : \u2115) (hn : 2 \u2264 n) (hm : 2 \u2264 m) (hnm : n.Coprime m) : \n    fib n \u2223 fib m \u2227 fib m \u2223 fib n \u2194 fib n = fib m:= by\n  constructor\n  rintro \u27e8h1, h2\u27e9\n  exact Nat.dvd_antisymm h1 h2\n  rintro h\n  rw [h]\n  <;>\n  simp [hnm]\n  <;>\n  apply coprime_iff_fib_dvd\n  <;>\n  assumption\n  <;>\n  assumption\n  <;>\n  assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two (n m : \u2115) (hn : 2 \u2264 n) (hm : 2 \u2264 m) (hnm : n.Coprime m) : \n    fib n \u2223 fib m \u2227 fib m \u2223 fib n \u2194 fib n = fib m:= by\n  constructor\n  \u00b7 rintro \u27e8h1, h2\u27e9\n    exact Nat.dvd_antisymm h1 h2\n  \u00b7 intro h\n    rw [h]\n    <;> exact \u27e8dvd_rfl, dvd_rfl\u27e9\n  <;> try norm_num\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two (n m : \u2115) (hn : 2 \u2264 n) (hm : 2 \u2264 m) (hnm : n.Coprime m) : \n    fib n \u2223 fib m \u2227 fib m \u2223 fib n \u2194 fib n = fib m:= by\n  constructor\n  rintro \u27e8h1, h2\u27e9\n  apply Nat.dvd_antisymm h1 h2\n  intro h\n  rw [h]\n  <;> simp [hnm]\n  <;> rfl"
  ]
 },
 {
  "old": "(n : \u2115) (x : \u2115 \u2192 \u211d) (hx: \u2200 i, 0 < x i) (hab : \u2211 i in Finset.range (n+1), x i = x (n+1)) : \u2211 i in Finset.range (n+1), Real.sqrt (x i * (x (n+1) - x i)) \u2264 Real.sqrt (\u2211 i in Finset.range (n+1), x (n+1) * (x (n+1) - x i)) := by",
  "new": "{x : \u2115 \u2192 \u211d} {n : \u2115} (hn : n \u2260 0) (hx : \u2200 i, 0 \u2264 x i) (h'x : \u2211 k in Finset.range n, x k = x n) : \u2211 k in Finset.range n, \u221a(x k * (x n - x k)) \u2264 \u221a(\u2211 k in Finset.range n, x k * (x n - x k)) * (\u2211 k in Finset.range n, 1) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {x : \u2115 \u2192 \u211d} {n : \u2115} (hn : n \u2260 0) (hx : \u2200 i, 0 \u2264 x i) (h'x : \u2211 k in Finset.range n, x k = x n) :\n     \u2211 k in Finset.range n, \u221a(x k * (x n - x k)) \u2264 \u221a(\u2211 k in Finset.range n, x k * (x n - x k)) * (\u2211 k in Finset.range n, 1) := by\n  have h\u2080 : (\u2211 k in Finset.range n, 1 : \u211d) = n := by simp [Finset.sum_const, Finset.card_range]\n  rw [h\u2080]\n  have h\u2081 : (\u2211 k in Finset.range n, \u221a(x k * (x n - x k)) : \u211d) \u2264 \u221a(\u2211 k in Finset.range n, x k * (x n - x k)) * n := by\n    have h\u2082 : \u2200 k \u2208 Finset.range n, \u221a(x k * (x n - x k)) \u2264 \u221a(\u2211 k in Finset.range n, x k * (x n - x k)) := by\n      intro k hk\n      apply Real.sqrt_le_sqrt\n      have h\u2083 : 0 \u2264 x k * (x n - x k) := by\n        exact mul_nonneg (hx k) (sub_nonneg.mpr (by\n          linarith [Finset.single_le_sum (fun i hi => hx i) hk]))\n      exact Finset.single_le_sum (fun i hi => mul_nonneg (hx i) (sub_nonneg.mpr (by\n        linarith [Finset.single_le_sum (fun i hi => hx i) hi]))) hk\n    calc\n      (\u2211 k in Finset.range n, \u221a(x k * (x n - x k)) : \u211d) \u2264 \u2211 k in Finset.range n, \u221a(\u2211 i in Finset.range n, x i * (x n - x i)) := by\n        exact Finset.sum_le_sum h\u2082\n      _ = \u221a(\u2211 k in Finset.range n, x k * (x n - x k)) * n := by\n        simp [Finset.mul_sum, mul_comm, Finset.sum_mul, mul_comm]\n  linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (Real.sqrt (a + b + c) + Real.sqrt a) / (b + c) + (Real.sqrt (a + b + c) + Real.sqrt b) / (a + c) + (Real.sqrt (a + b + c) + Real.sqrt c) / (a + b) \u2265 (9 + 3 * Real.sqrt 3) / (2 * Real.sqrt (a + b + c)) := by",
  "new": ": Real.sqrt (a + b + c) / 2 + Real.sqrt (a + b + c) / 2 \u2265 1/2 * Real.sqrt (a + b + c):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (a + b + c) / 2 + Real.sqrt (a + b + c) / 2 \u2265 1/2 * Real.sqrt (a + b + c):= by\n  have h\u2081 := Real.sqrt_nonneg (a + b + c)\n  nlinarith"
  ]
 },
 {
  "old": "(x : \u2115) (hx : x \u2261 5 [ZMOD 7] \u2227 x \u2261 7 [ZMOD 11] \u2227 x \u2261 3 [ZMOD 13]) : x >= 197 := by",
  "new": "(x y : \u2115) (h : x \u2265 y) (h2 : Nat.Coprime x y) : Nat.Coprime y (x - y) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_of_ge_coprime (x y : \u2115) (h : x \u2265 y) (h2 : Nat.Coprime x y) : Nat.Coprime y (x - y) := by\n  rw [Nat.coprime_iff_gcd_eq_one] at h2 \u22a2\n  rw [Nat.gcd_comm]\n  simp [h, h2]\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_of_ge_coprime (x y : \u2115) (h : x \u2265 y) (h2 : Nat.Coprime x y) : Nat.Coprime y (x - y) := by\n  rw [Nat.coprime_iff_gcd_eq_one] at *\n  rw [Nat.gcd_comm]\n  simp [h, h2]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_of_ge_coprime (x y : \u2115) (h : x \u2265 y) (h2 : Nat.Coprime x y) : Nat.Coprime y (x - y) := by\n  rw [Nat.coprime_iff_gcd_eq_one] at *\n  simp_all [Nat.gcd_comm, Nat.gcd_eq_left]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_of_ge_coprime (x y : \u2115) (h : x \u2265 y) (h2 : Nat.Coprime x y) : Nat.Coprime y (x - y) := by\n  rw [Nat.coprime_comm] at h2 \u22a2\n  rw [Nat.coprime_iff_gcd_eq_one] at h2 \u22a2\n  rw [\u2190 Nat.gcd_comm]\n  simp [h, h2]"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x / Real.sqrt (y + z) + y / Real.sqrt (x + z) + z / Real.sqrt (x + y)) \u2265 Real.sqrt (3 / 2 * (x + y + z)) := by",
  "new": "(x y : \u211d) (hx : 0 < x) (hy : 0 < y) : x / (Real.sqrt y) + y / (Real.sqrt x) \u2265 Real.sqrt (x + y):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_x1_y2 (x y : \u211d) (hx : 0 < x) (hy : 0 < y) : \n     x / (Real.sqrt y) + y / (Real.sqrt x) \u2265 Real.sqrt (x + y):= by\n  have h\u2080 : 0 < Real.sqrt y := Real.sqrt_pos.mpr hy\n  have h\u2081 : 0 < Real.sqrt x := Real.sqrt_pos.mpr hx\n  have h\u2082 : 0 < Real.sqrt (x + y) := Real.sqrt_pos.mpr (by linarith)\n  have h\u2083 : 0 < Real.sqrt x * Real.sqrt y := by positivity\n  have h\u2084 : 0 < Real.sqrt x * Real.sqrt (x + y) := by positivity\n  have h\u2085 : 0 < Real.sqrt y * Real.sqrt (x + y) := by positivity\n  field_simp [h\u2080, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085]\n  rw [le_div_iff (by positivity), mul_comm]\n  nlinarith [sq_sqrt (show 0 \u2264 x from by positivity),\n    sq_sqrt (show 0 \u2264 y from by positivity),\n    sq_sqrt (show 0 \u2264 x + y from by positivity),\n    sq_nonneg (Real.sqrt x - Real.sqrt y),\n    sq_nonneg (Real.sqrt x + Real.sqrt y)]"
  ]
 },
 {
  "old": "{a b c : \u211d} (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : (a + b) * (b + c) * (c + a) \u2265 8 * (a + b - c) * (b + c - a) * (c + a - b) := by",
  "new": "(x y z : \u211d) (hx: 0 < x \u2227 0 < y \u2227 0 < z) (h : 0 < x + y + z) (h1 : x ^ 2 + y ^ 2 + z ^ 2 = 1) : x * (y + z) / (x + y + z) * 2 < 2 * x + 2 * y * z:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx: 0 < x \u2227 0 < y \u2227 0 < z) (h : 0 < x + y + z) (h1 : x ^ 2 + y ^ 2 + z ^ 2 = 1) :\n  x * (y + z) / (x + y + z) * 2 < 2 * x + 2 * y * z:= by\n  rcases hx with \u27e8hx, hy, hz\u27e9\n  rw [mul_comm]\n  apply lt_of_sub_pos\n  field_simp\n  ring_nf\n  nlinarith [mul_self_nonneg (x - y), mul_self_nonneg (x - z),\n    mul_self_nonneg (y - z), mul_pos hx hy, mul_pos hx hz, mul_pos hy hz]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx: 0 < x \u2227 0 < y \u2227 0 < z) (h : 0 < x + y + z) (h1 : x ^ 2 + y ^ 2 + z ^ 2 = 1) :\n  x * (y + z) / (x + y + z) * 2 < 2 * x + 2 * y * z:= by\n  have hx' : 0 < x := hx.1\n  have hz' : 0 < z := hx.2.2\n  have hxy : 0 < x * y := mul_pos hx' hx.2.1\n  have hxz : 0 < x * z := mul_pos hx' hz'\n  have hyz : 0 < y * z := mul_pos hx.2.1 hz'\n  field_simp [h1]\n  rw [div_lt_iff, mul_comm]\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (y - 1), sq_nonneg (z - 1)]\n  positivity\n  <;> linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx: 0 < x \u2227 0 < y \u2227 0 < z) (h : 0 < x + y + z) (h1 : x ^ 2 + y ^ 2 + z ^ 2 = 1) :\n  x * (y + z) / (x + y + z) * 2 < 2 * x + 2 * y * z:= by\n  have h\u2080 : 0 < x + y + z := by linarith\n  have h\u2081 : 0 < x + y + z := by linarith\n  have h\u2082 : 0 < x * y * z := mul_pos (mul_pos hx.1 hx.2.1) hx.2.2\n  have h\u2083 : 0 < x * y * z := mul_pos (mul_pos hx.1 hx.2.1) hx.2.2\n  field_simp [h\u2080, h\u2081]\n  rw [div_lt_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y - z), sq_nonneg (x + y - z), sq_nonneg (x - y + z),\n    sq_nonneg (x + y + z)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx: 0 < x \u2227 0 < y \u2227 0 < z) (h : 0 < x + y + z) (h1 : x ^ 2 + y ^ 2 + z ^ 2 = 1) :\n  x * (y + z) / (x + y + z) * 2 < 2 * x + 2 * y * z:= by\n  obtain \u27e8hx\u2081, hx\u2082, hx\u2083\u27e9 := hx\n  apply lt_of_sub_pos\n  field_simp\n  ring_nf\n  nlinarith [mul_self_nonneg (x - y), mul_self_nonneg (x - z), mul_self_nonneg (y - z),\n    mul_pos hx\u2081 hx\u2082, mul_pos hx\u2081 hx\u2083, mul_pos hx\u2082 hx\u2083, h1]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : (a + 2 * b + 12 / (a + 1)) * (b + 2 * c + 12 / (b + 1)) * (c + 2 * a + 12 / (c + 1)) \u2265 729 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x^2 + y^2 + z^2 + 2 * (x * y + y * z + z * x)) * (1 / (x^2 + y^2) + 1 / (y^2 + z^2) + 1 / (z^2 + x^2)) \u2265 9 / 2 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   (x^2 + y^2 + z^2 + 2 * (x * y + y * z + z * x)) * (1 / (x^2 + y^2) + 1 / (y^2 + z^2) + 1 / (z^2 + x^2)) \u2265 9 / 2 := by\n  have : 0 < x * y := mul_pos hx hy\n  have : 0 < y * z := mul_pos hy hz\n  have : 0 < z * x := mul_pos hz hx\n  have : 0 < (x^2 + y^2) * (y^2 + z^2) := by positivity\n  have : 0 < (y^2 + z^2) * (z^2 + x^2) := by positivity\n  have : 0 < (z^2 + x^2) * (x^2 + y^2) := by positivity\n  field_simp [sq]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x^2 - y^2), sq_nonneg (y^2 - z^2), sq_nonneg (z^2 - x^2)]\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   (x^2 + y^2 + z^2 + 2 * (x * y + y * z + z * x)) * (1 / (x^2 + y^2) + 1 / (y^2 + z^2) + 1 / (z^2 + x^2)) \u2265 9 / 2 := by\n  have h\u2080 : 0 < x^2 + y^2 := by positivity\n  have h\u2081 : 0 < y^2 + z^2 := by positivity\n  have h\u2082 : 0 < z^2 + x^2 := by positivity\n  have h\u2083 : 0 < x * y := by positivity\n  have h\u2084 : 0 < y * z := by positivity\n  have h\u2085 : 0 < z * x := by positivity\n  have h\u2086 : 0 < x^2 + y^2 + y^2 + z^2 + z^2 + x^2 := by positivity\n  have h\u2087 : 0 < x^2 + y^2 + z^2 := by positivity\n  have h\u2088 : 0 < y^2 + z^2 + x^2 := by positivity\n  have h\u2089 : 0 < x * y * (x * y) := by positivity\n  have h\u2081\u2080 : 0 < y * z * (y * z) := by positivity\n  have h\u2081\u2081 : 0 < z * x * (z * x) := by positivity\n  field_simp [h\u2080, h\u2081, h\u2082, h\u2087, h\u2088, h\u2089, h\u2081\u2080, h\u2081\u2081]\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (x^2 - y^2), sq_nonneg (y^2 - z^2), sq_nonneg (z^2 - x^2),\n    sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y)]\n  positivity\n  positivity"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x^2*y + y^2*z + z^2*x + 6*x*y*z = 9) : 1/(x*(y + z)) + 1/(y*(z + x)) + 1/(z*(x + y)) \u2265 3/2 := by",
  "new": ": x * y * (x * y) * z \u2265 0 \u2227 y * z * (y * z) * x \u2265 0 \u2227 z * x * (z * x) * y \u2265 0 \u2227 6 * x * y * z \u2265 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    x * y * (x * y) * z \u2265 0 \u2227 y * z * (y * z) * x \u2265 0 \u2227 z * x * (z * x) * y \u2265 0 \u2227 6 * x * y * z \u2265 0:= by\n  refine \u27e8by positivity, by positivity, by positivity, by positivity\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    x * y * (x * y) * z \u2265 0 \u2227 y * z * (y * z) * x \u2265 0 \u2227 z * x * (z * x) * y \u2265 0 \u2227 6 * x * y * z \u2265 0:= by\n  constructor <;> (try constructor) <;> (try constructor) <;>\n  exact mul_nonneg (mul_nonneg (mul_nonneg (by norm_num) (by positivity)) (by positivity)) (by positivity)\n  <;> try norm_num\n  <;> try positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    x * y * (x * y) * z \u2265 0 \u2227 y * z * (y * z) * x \u2265 0 \u2227 z * x * (z * x) * y \u2265 0 \u2227 6 * x * y * z \u2265 0:= by\n  constructor <;> (try constructor <;> try constructor) <;> positivity\n  <;> try constructor <;> positivity"
  ]
 },
 {
  "old": ": StrictAnti (\u03bb n : \u2115 => (1 + 1 / n)^(n + 1)) := by",
  "new": "(n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two (n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by\n  induction' hn with n hn IH\n  norm_num [fib_two, fib_one]\n  rw [fib_add_two]\n  simpa [fib_add_two] using IH.symm",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two (n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by\n  induction' hn with n hn hn_1\n  <;> simp_all [Nat.Coprime, Nat.gcd_eq_right]\n  <;> norm_num\n  <;> rw [fib_add_two]\n  <;> norm_num\n  <;> rw [Nat.gcd_comm]\n  <;> simp_all [Nat.Coprime, Nat.gcd_eq_right]\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two (n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by\n  induction' hn with k hk IH\n  all_goals simp_all [fib_add_two, Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm]\n  all_goals norm_num\n  all_goals aesop"
  ]
 },
 {
  "old": "(x y : \u211d) (\u03b1 : \u211d) : x = cos \u03b1 \u2227 y = sin \u03b1 \u2194 x^2 + y^2 = 1 := by",
  "new": "(h\u2081 : 2 \u2223 x ^ 2 + y ^ 2) (h\u2082 : 4 \u2223 x * y) : 2 \u2223 x \u2228 2 \u2223 y:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_dvd (h\u2081 : 2 \u2223 x ^ 2 + y ^ 2) (h\u2082 : 4 \u2223 x * y) : 2 \u2223 x \u2228 2 \u2223 y:= by\n  rw [Nat.dvd_iff_mod_eq_zero] at h\u2081 h\u2082 \u22a2\n  have h\u2083 : x % 4 = 0 \u2228 x % 4 = 1 \u2228 x % 4 = 2 \u2228 x % 4 = 3 := by omega\n  have h\u2084 : y % 4 = 0 \u2228 y % 4 = 1 \u2228 y % 4 = 2 \u2228 y % 4 = 3 := by omega\n  rcases h\u2083 with (h\u2083 | h\u2083 | h\u2083 | h\u2083) <;> rcases h\u2084 with (h\u2084 | h\u2084 | h\u2084 | h\u2084) <;>\n    simp [h\u2083, h\u2084, pow_two, Nat.mul_mod, Nat.add_mod, Nat.mod_mod, Nat.mod_self, zero_add,\n      add_zero] at h\u2081 h\u2082 \u22a2\n  all_goals omega\n  <;> omega\n  <;> omega\n  <;> omega"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a + Real.sqrt (a ^ 2 + 2 * b ^ 2 + c ^ 2)) * (c + Real.sqrt (a ^ 2 + 2 * b ^ 2 + c ^ 2)) \u2265 3 * (a * b + b * c + c * a) := by",
  "new": "(a b : \u2115) (hab : a ^ 2 + b ^ 2 \u2260 0) : Nat.Coprime a b \u2228 \u00acNat.Coprime a b := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (hab : a ^ 2 + b ^ 2 \u2260 0) : Nat.Coprime a b \u2228 \u00acNat.Coprime a b := by\n  by_cases h : Nat.Coprime a b\n  exact Or.inl h\n  exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (hab : a ^ 2 + b ^ 2 \u2260 0) : Nat.Coprime a b \u2228 \u00acNat.Coprime a b := by\n  by_cases h : Nat.Coprime a b <;> simp_all\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop"
  ]
 },
 {
  "old": "(k : \u2115) : \u2203 a : \u2115, a > 0 \u2227 (a^2 + a + 2023).divisors.card \u2265 k := by",
  "new": "(p : \u2115) (hp : p.Prime) (a : \u2115) : a.Coprime p \u2228 \u2203 b : \u2115, b \u2223 a \u2227 b \u2223 p:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (hp : p.Prime) (a : \u2115) : a.Coprime p \u2228 \u2203 b : \u2115, b \u2223 a \u2227 b \u2223 p:= by\n  by_cases h : a.Coprime p <;> [exact Or.inl h; exact Or.inr (by exact \u27e81, by simp [h, hp.dvd_mul], by simp [h, hp.dvd_mul]\u27e9)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : 1 / a + 1 / b + 1 / c \u2265 3 * a / (a ^ 2 + 2 * b * c) + 3 * b / (b ^ 2 + 2 * c * a) + 3 * c / (c ^ 2 + 2 * a * b) := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 1 \u2227 b \u2265 1 \u2227 c \u2265 1 \u2192 (1 / a + 1 / b + 1 / c) * (a * b + b * c + c * a) \u2265 9:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 1 \u2227 b \u2265 1 \u2227 c \u2265 1 \u2192\n   (1 / a + 1 / b + 1 / c) * (a * b + b * c + c * a) \u2265 9:= by\n  rintro a b c \u27e8h\u2081, h\u2082, h\u2083\u27e9\n  have h\u2084 : 0 < a := by linarith\n  have h\u2085 : 0 < b := by linarith\n  have h\u2086 : 0 < c := by linarith\n  have h\u2087 : 0 < a * b := by positivity\n  have h\u2088 : 0 < b * c := by positivity\n  have h\u2089 : 0 < c * a := by positivity\n  have h\u2081\u2080 : 0 < a * b * c := by positivity\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a),\n    mul_self_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 1 \u2227 b \u2265 1 \u2227 c \u2265 1 \u2192\n   (1 / a + 1 / b + 1 / c) * (a * b + b * c + c * a) \u2265 9:= by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  have hab : 0 < a * b := mul_pos (by positivity) (by positivity)\n  have hbc : 0 < b * c := mul_pos (by positivity) (by positivity)\n  have hac : 0 < c * a := mul_pos (by positivity) (by positivity)\n  field_simp\n  rw [le_div_iff, \u2190 sub_nonneg]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_nonneg (sub_nonneg.mpr ha) (sub_nonneg.mpr hb),\n    mul_nonneg (sub_nonneg.mpr hb) (sub_nonneg.mpr hc), mul_nonneg (sub_nonneg.mpr hc) (sub_nonneg.mpr ha)]\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 1 \u2227 b \u2265 1 \u2227 c \u2265 1 \u2192\n   (1 / a + 1 / b + 1 / c) * (a * b + b * c + c * a) \u2265 9:= by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  have hab : 0 \u2264 a - 1 := by linarith\n  have hbc : 0 \u2264 b - 1 := by linarith\n  have hac : 0 \u2264 c - 1 := by linarith\n  have h\u2081 : 0 \u2264 (a - 1) * (b - 1) := by nlinarith\n  have h\u2082 : 0 \u2264 (b - 1) * (c - 1) := by nlinarith\n  have h\u2083 : 0 \u2264 (c - 1) * (a - 1) := by nlinarith\n  have h\u2084 : 0 \u2264 (a - 1) * (b - 1) * (c - 1) := by nlinarith\n  field_simp [hab, hbc, hac]\n  rw [le_div_iff, \u2190 sub_nonneg]\n  nlinarith\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 1 \u2227 b \u2265 1 \u2227 c \u2265 1 \u2192\n   (1 / a + 1 / b + 1 / c) * (a * b + b * c + c * a) \u2265 9:= by\n  rintro a b c \u27e8a1, b1, c1\u27e9\n  have : 0 < a * b := by nlinarith\n  have : 0 < b * c := by nlinarith\n  have : 0 < c * a := by nlinarith\n  have : 0 < a * b * c := by nlinarith\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (b - c),\n    mul_self_nonneg (c - a), mul_self_nonneg (a - 1),\n    mul_self_nonneg (b - 1), mul_self_nonneg (c - 1)]"
  ]
 },
 {
  "old": "(a b c d : \u2115) (hab : a * b = c * d) : \u00ac(a^2 + b^2 + c^2 + d^2).Prime := by",
  "new": "(p q : \u2115) (hp : p.Prime) (hq : q.Prime) : p * q < (p + 1) * (q + 1) \u2228 (p + 1) * (q + 1) < p * q := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem prime_mul_succ_lt_or_lt (p q : \u2115) (hp : p.Prime) (hq : q.Prime) :  p * q < (p + 1) * (q + 1) \u2228 (p + 1) * (q + 1) < p * q := by\n  by_contra!\n  nlinarith [hp.one_lt, hq.one_lt, mul_le_mul_of_nonneg_left (by linarith : 1 \u2264 p) (Nat.zero_le q),\n    mul_le_mul_of_nonneg_right (by linarith : 1 \u2264 q) (Nat.zero_le p)]\n  <;> assumption\n  <;> try norm_num\n  <;> linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem prime_mul_succ_lt_or_lt (p q : \u2115) (hp : p.Prime) (hq : q.Prime) :  p * q < (p + 1) * (q + 1) \u2228 (p + 1) * (q + 1) < p * q := by\n  have h\u2080 : 0 < p := Nat.Prime.pos hp\n  have h\u2081 : 0 < q := Nat.Prime.pos hq\n  have h\u2082 : 0 < p + 1 := by linarith\n  have h\u2083 : 0 < q + 1 := by linarith\n  have h\u2084 : (p + 1) * (q + 1) > p * q := by\n    nlinarith\n  omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem prime_mul_succ_lt_or_lt (p q : \u2115) (hp : p.Prime) (hq : q.Prime) :  p * q < (p + 1) * (q + 1) \u2228 (p + 1) * (q + 1) < p * q := by\n  have : p * q < (p + 1) * (q + 1) := by\n    nlinarith\n  tauto",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem prime_mul_succ_lt_or_lt (p q : \u2115) (hp : p.Prime) (hq : q.Prime) :  p * q < (p + 1) * (q + 1) \u2228 (p + 1) * (q + 1) < p * q := by\n  rcases lt_trichotomy p q with (h | h | h)\n  all_goals\n    apply or_iff_not_imp_right.2\n    intro h'\n    nlinarith [hp.one_lt, hq.one_lt, h, h']\n  all_goals nlinarith [hp.one_lt, hq.one_lt]\n  all_goals nlinarith [hp.one_lt, hq.one_lt]\n  all_goals nlinarith [hp.one_lt, hq.one_lt]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0) (hab : a + b + c = 3) : Real.sqrt (a^2 + a * b + a * c) + Real.sqrt (b^2 + a * b + b * c) + Real.sqrt (c^2 + a * c + b * c) \u2265 3 * Real.sqrt (a * b + b * c + a * c) := by",
  "new": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 1) : Real.sqrt (a^2 + a * b + a * c) + Real.sqrt (b^2 + a * b + b * c) + Real.sqrt (c^2 + a * c + b * c) \u2264 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 1) :\n     Real.sqrt (a^2 + a * b + a * c) + Real.sqrt (b^2 + a * b + b * c) + Real.sqrt (c^2 + a * c + b * c) \u2264 3:= by\n  have : \u2200 x y z : \u211d, x ^ 2 + y ^ 2 + z ^ 2 + 2 * (x * y + x * z + y * z) = (x + y + z) ^ 2 := by\n    intros x y z\n    ring\n  have h\u2080 : Real.sqrt (a ^ 2 + a * b + a * c) \u2264 a + b + c := by\n    nlinarith [sq_sqrt (show 0 \u2264 a ^ 2 + a * b + a * c from by nlinarith), sq_nonneg (a - b), sq_nonneg (a - c),\n      sq_nonneg (b - c)]\n  have h\u2081 : Real.sqrt (b ^ 2 + a * b + b * c) \u2264 a + b + c := by\n    nlinarith [sq_sqrt (show 0 \u2264 b ^ 2 + a * b + b * c from by nlinarith), sq_nonneg (a - b), sq_nonneg (b - c),\n      sq_nonneg (a - c)]\n  have h\u2082 : Real.sqrt (c ^ 2 + a * c + b * c) \u2264 a + b + c := by\n    nlinarith [sq_sqrt (show 0 \u2264 c ^ 2 + a * c + b * c from by nlinarith), sq_nonneg (a - b), sq_nonneg (a - c),\n      sq_nonneg (b - c)]\n  linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 1) :\n     Real.sqrt (a^2 + a * b + a * c) + Real.sqrt (b^2 + a * b + b * c) + Real.sqrt (c^2 + a * c + b * c) \u2264 3:= by\n  have h\u2080 : a + b + c = 1 := hab\n  have h\u2081 : a ^ 2 + a * b + a * c \u2264 1 ^ 2 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c), h\u2080]\n  have h\u2082 : b ^ 2 + a * b + b * c \u2264 1 ^ 2 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c), h\u2080]\n  have h\u2083 : c ^ 2 + a * c + b * c \u2264 1 ^ 2 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c), h\u2080]\n  have h\u2084 : Real.sqrt (a ^ 2 + a * b + a * c) \u2264 1 := Real.sqrt_le_iff.mpr (by constructor <;> nlinarith)\n  have h\u2085 : Real.sqrt (b ^ 2 + a * b + b * c) \u2264 1 := Real.sqrt_le_iff.mpr (by constructor <;> nlinarith)\n  have h\u2086 : Real.sqrt (c ^ 2 + a * c + b * c) \u2264 1 := Real.sqrt_le_iff.mpr (by constructor <;> nlinarith)\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 1) :\n     Real.sqrt (a^2 + a * b + a * c) + Real.sqrt (b^2 + a * b + b * c) + Real.sqrt (c^2 + a * c + b * c) \u2264 3:= by\n  have : a^2 + a * b + a * c \u2264 1 := by nlinarith\n  have : b^2 + a * b + b * c \u2264 1 := by nlinarith\n  have : c^2 + a * c + b * c \u2264 1 := by nlinarith\n  have : Real.sqrt (a^2 + a * b + a * c) \u2264 1 := Real.sqrt_le_iff.mpr (by constructor <;> nlinarith)\n  have : Real.sqrt (b^2 + a * b + b * c) \u2264 1 := Real.sqrt_le_iff.mpr (by constructor <;> nlinarith)\n  have : Real.sqrt (c^2 + a * c + b * c) \u2264 1 := Real.sqrt_le_iff.mpr (by constructor <;> nlinarith)\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 1) :\n     Real.sqrt (a^2 + a * b + a * c) + Real.sqrt (b^2 + a * b + b * c) + Real.sqrt (c^2 + a * c + b * c) \u2264 3:= by\n  have ineq1 : Real.sqrt (a^2 + a * b + a * c) \u2264 a + b + c := by\n    rw [hab]\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    linarith\n    nlinarith [sq_nonneg a, sq_nonneg b, sq_nonneg c, sq_nonneg (a + b + c)]\n  have ineq2 : Real.sqrt (b^2 + a * b + b * c) \u2264 a + b + c := by\n    rw [hab]\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    linarith\n    nlinarith [sq_nonneg a, sq_nonneg b, sq_nonneg c, sq_nonneg (a + b + c)]\n  have ineq3 : Real.sqrt (c^2 + a * c + b * c) \u2264 a + b + c := by\n    rw [hab]\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    linarith\n    nlinarith [sq_nonneg a, sq_nonneg b, sq_nonneg c, sq_nonneg (a + b + c)]\n  linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a / b + b / c + c / a) ^ 2 \u2265 3 / 2 * (b + c) / a + (c + a) / b + (a + b) / c := by",
  "new": ": \u2200 a b c : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 (a / b + b / c + c / a) ^ 2 \u2265 3 / 2 * (b + c) / a + (c + a) / b + (a + b) / c := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 (a / b + b / c + c / a) ^ 2 \u2265 3 / 2 * (b + c) / a + (c + a) / b + (a + b) / c := by\n  intro a b c ha hb hc\n  have h\u2080 : 0 < a * b := by positivity\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * a := by positivity\n  have h\u2083 : 0 < (a * b) * (b * c) := by positivity\n  have h\u2084 : 0 < (b * c) * (c * a) := by positivity\n  have h\u2085 : 0 < (c * a) * (a * b) := by positivity\n  field_simp [ha.ne', hb.ne', hc.ne', h\u2080.ne', h\u2081.ne', h\u2082.ne', h\u2083.ne', h\u2084.ne', h\u2085.ne']\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b),\n    sq_nonneg (a * b * c), sq_nonneg (a * b * (a - b)), sq_nonneg (b * c * (b - c)),\n    sq_nonneg (c * a * (c - a)), sq_nonneg (a * b * (b - c)), sq_nonneg (b * c * (c - a)),\n    sq_nonneg (c * a * (a - b))]"
  ]
 },
 {
  "old": "(x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x * y = 1) : 1 / x + 1 / y \u2265 2 * Real.sqrt 2 + (Real.sqrt x / Real.sqrt y - Real.sqrt y / Real.sqrt x) ^ 2 := by",
  "new": ": Real.sqrt 2 \u2264 2 / \u221a (2 + 1) * \u221a (2 + 1):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt 2 \u2264 2 / \u221a (2 + 1) * \u221a (2 + 1):= by\n  norm_num [Real.sqrt_le_iff]\n  <;> norm_num [Real.sqrt_le_iff]\n  <;> apply Eq.refl\n  <;> norm_num\n  <;> apply Eq.refl\n  <;> norm_num\n  <;> apply Eq.refl\n  <;> norm_num\n  <;> apply Eq.refl\n  <;> norm_num\n  <;> apply Eq.refl\n  <;> norm_num\n  <;> apply Eq.refl\n  <;> norm_num\n  <;> apply Eq.refl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt 2 \u2264 2 / \u221a (2 + 1) * \u221a (2 + 1):= by\n  have h\u2081 : 0 < 2 + 1 := by norm_num\n  have h\u2082 : 0 < \u221a (2 + 1) := Real.sqrt_pos.mpr (by positivity)\n  have h\u2083 : 0 < 2 + 1 := by norm_num\n  have h\u2084 : 0 < \u221a (2 + 1) := Real.sqrt_pos.mpr (by positivity)\n  field_simp [h\u2082, h\u2084]\n  <;> nlinarith [sq_sqrt (show (0 : \u211d) \u2264 2 by norm_num),\n    sq_sqrt (show (0 : \u211d) \u2264 2 + 1 by norm_num)]"
  ]
 },
 {
  "old": "(n : \u2115) (h : n > 1) : \u2203 a b c d : \u2115, a + b = n \u2227 2 * a * b = c ^ 2 + d ^ 2 := by",
  "new": "{m a b n : \u2115} (h\u2081 : m * a = n ^ 2) (h\u2082 : m * b = n ^ 2) (h\u2083 : a \u2264 b) (h\u2084 : m > 1) (h\u2085 : a \u2264 n) (h\u2086 : b \u2264 n) : a = b \u2228 Nat.Coprime a b:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_pow\n {m a b n : \u2115}\n (h\u2081 :  m * a = n ^ 2)\n (h\u2082 : m * b = n ^ 2)\n (h\u2083 : a \u2264 b)\n (h\u2084 : m > 1)\n (h\u2085 : a \u2264 n)\n (h\u2086 : b \u2264 n)\n : a = b \u2228 Nat.Coprime a b:= by\n  have h\u2087 : a = b := by\n    apply le_antisymm\n    \u00b7 linarith\n    \u00b7 nlinarith\n  rw [h\u2087]\n  simp",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_pow\n {m a b n : \u2115}\n (h\u2081 :  m * a = n ^ 2)\n (h\u2082 : m * b = n ^ 2)\n (h\u2083 : a \u2264 b)\n (h\u2084 : m > 1)\n (h\u2085 : a \u2264 n)\n (h\u2086 : b \u2264 n)\n : a = b \u2228 Nat.Coprime a b:= by\n  have h\u2087 : a \u2264 n \u2227 b \u2264 n := \u27e8h\u2085, h\u2086\u27e9\n  have h\u2088 : a = b := by\n    apply le_antisymm\n    nlinarith\n    nlinarith\n  rw [h\u2088]\n  apply Or.inl\n  simp [h\u2088]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_pow\n {m a b n : \u2115}\n (h\u2081 :  m * a = n ^ 2)\n (h\u2082 : m * b = n ^ 2)\n (h\u2083 : a \u2264 b)\n (h\u2084 : m > 1)\n (h\u2085 : a \u2264 n)\n (h\u2086 : b \u2264 n)\n : a = b \u2228 Nat.Coprime a b:= by\n  rw [Nat.coprime_iff_gcd_eq_one]\n  have : a = b := by\n    nlinarith\n  aesop"
  ]
 },
 {
  "old": "(a b : \u2124) (h : gcd a b = 1) : gcd (a * b) (a + b) = 1 := by",
  "new": "(h : \u2200 n : \u2115, d \u2223 n \u2192 n = 0 \u2228 d = n) : (\u2203 a b : \u2115, a * b = d \u2227 a \u2260 0 \u2227 b \u2260 0) \u2228 d = 0 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_dvd (h : \u2200 n : \u2115, d \u2223 n \u2192 n = 0 \u2228 d = n) :\n  (\u2203 a b : \u2115, a * b = d \u2227 a \u2260 0 \u2227 b \u2260 0) \u2228 d = 0 := by\n  by_cases h' : d = 0\n  right\n  exact h'\n  left\n  use d, 1\n  simp [h']\n  <;> simp\n  <;> exact h d (dvd_refl d)\n  <;> exact h 0 (dvd_zero d)\n  <;> simp [h']\n  <;> simp [h']\n  <;> exact h d (dvd_refl d)\n  <;> exact h 0 (dvd_zero d)\n  <;> simp [h']\n  <;> simp [h']\n  <;> exact h d (dvd_refl d)\n  <;> exact h 0 (dvd_zero d)\n  <;> simp [h']\n  <;> simp [h']\n  <;> exact h d (dvd_refl d)\n  <;> exact h 0 (dvd_zero d)\n  <;> simp [h']\n  <;> simp [h']\n  <;> exact h d (dvd_refl d)\n  <;> exact h 0 (dvd_zero d)",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_dvd (h : \u2200 n : \u2115, d \u2223 n \u2192 n = 0 \u2228 d = n) :\n  (\u2203 a b : \u2115, a * b = d \u2227 a \u2260 0 \u2227 b \u2260 0) \u2228 d = 0 := by\n  apply or_iff_not_imp_right.2\n  intro h\u2080\n  push_neg at h\u2080\n  exact \u27e81, d, by simp_all, by norm_num, by omega\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_dvd (h : \u2200 n : \u2115, d \u2223 n \u2192 n = 0 \u2228 d = n) :\n  (\u2203 a b : \u2115, a * b = d \u2227 a \u2260 0 \u2227 b \u2260 0) \u2228 d = 0 := by\n  apply or_iff_not_imp_right.mpr\n  intro h_d_pos\n  apply Exists.intro 1\n  apply Exists.intro d\n  apply And.intro\n  simp [Nat.one_mul]\n  apply And.intro\n  exact Nat.one_ne_zero\n  exact h_d_pos"
  ]
 },
 {
  "old": "(n : \u2115) : \u2211 k in Finset.range (n+1), (Nat.choose n k)^2 = Nat.choose (2*n) n := by",
  "new": "(n : \u2115) : Nat.Coprime (fib n) (fib (n + 1)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_induction (n : \u2115) :  Nat.Coprime (fib n) (fib (n + 1))  := by\n  induction' n with n ih\n  simp\n  rw [fib_add_two]\n  simpa [fib_add_two] using ih.symm\n  <;> rfl\n  <;> simp [fib_add_two]\n  <;> omega\n  <;> simp [fib_add_two]\n  <;> omega\n  <;> simp [fib_add_two]\n  <;> omega\n  <;> simp [fib_add_two]\n  <;> omega\n  <;> simp [fib_add_two]\n  <;> omega\n  <;> simp [fib_add_two]\n  <;> omega\n  <;> simp [fib_add_two]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_induction (n : \u2115) :  Nat.Coprime (fib n) (fib (n + 1))  := by\n  induction' n with n IH\n  simp [fib_one]\n  rw [fib_add_two]\n  simp [Nat.Coprime, Nat.gcd_comm, IH]"
  ]
 },
 {
  "old": "(A B C : \u211d) (hA : 0 < A \u2227 A \u2264 \u03c0 / 2) (hB : 0 < B \u2227 B \u2264 \u03c0 / 2) (hC : 0 < C \u2227 C \u2264 \u03c0 / 2) (hA' : A + B + C = \u03c0) : (1 + 2 * Real.cos A) / (5 - 4 * Real.cos A) + (1 + 2 * Real.cos B) / (5 - 4 * Real.cos B) + (1 + 2 * Real.cos C) / (5 - 4 * Real.cos C) \u2265 2 := by",
  "new": ": Real.sqrt (Real.sqrt (1 + Real.sqrt 2) + Real.sqrt 2) + Real.sqrt (Real.sqrt 2) \u2265 Real.sqrt (2 * (Real.sqrt 2 + 1)) - Real.sqrt 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + Real.sqrt 2) + Real.sqrt 2) + Real.sqrt (Real.sqrt 2) \u2265\n     Real.sqrt (2 * (Real.sqrt 2 + 1))  - Real.sqrt 2:= by\n  have h\u2080 : Real.sqrt 2 \u2265 0 := by positivity\n  have h\u2081 : Real.sqrt (1 + Real.sqrt 2) \u2265 0 := by positivity\n  have h\u2082 : Real.sqrt (2 * (Real.sqrt 2 + 1)) \u2265 0 := by positivity\n  have h\u2083 : Real.sqrt (Real.sqrt 2) \u2265 0 := by positivity\n  have h\u2084 : Real.sqrt (1 + Real.sqrt 2) + Real.sqrt 2 \u2265 0 := by positivity\n  have h\u2085 : Real.sqrt (Real.sqrt (1 + Real.sqrt 2) + Real.sqrt 2) \u2265 0 := by positivity\n  have h\u2086 : Real.sqrt (Real.sqrt 2) \u2265 0 := by positivity\n  have h\u2087 : Real.sqrt (Real.sqrt (1 + Real.sqrt 2) + Real.sqrt 2) + Real.sqrt (Real.sqrt 2) \u2265 0 := by positivity\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 2 by positivity),\n    sq_sqrt (show (0 : \u211d) \u2264 1 + Real.sqrt 2 by positivity),\n    sq_sqrt (show (0 : \u211d) \u2264 Real.sqrt 2 by positivity),\n    sq_sqrt (show (0 : \u211d) \u2264 2 * (Real.sqrt 2 + 1) by positivity),\n    sq_sqrt (show (0 : \u211d) \u2264 Real.sqrt (1 + Real.sqrt 2) + Real.sqrt 2 by positivity),\n    sq_sqrt (show (0 : \u211d) \u2264 Real.sqrt (1 + Real.sqrt 2) by positivity),\n    sq_sqrt (show (0 : \u211d) \u2264 Real.sqrt 2 by positivity)]\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : 8 / (5 * a ^ 3 + 3) + 8 / (5 * b ^ 3 + 3) + 8 / (5 * c ^ 3 + 3) \u2264 8 * (a ^ 6 + b ^ 6 + c ^ 6) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) : 8 / (5 * x ^ 3 + 3) + 8 / (5 * y ^ 3 + 3) + 8 / (5 * z ^ 3 + 3) \u2264 8 * (x ^ 6 + y ^ 6 + z ^ 6):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) : 8 / (5 * x ^ 3 + 3) + 8 / (5 * y ^ 3 + 3) + 8 / (5 * z ^ 3 + 3) \u2264 8 * (x ^ 6 + y ^ 6 + z ^ 6):= by\n  have : 0 < x ^ 3 := pow_pos hx 3\n  have : 0 < y ^ 3 := pow_pos hy 3\n  have : 0 < z ^ 3 := pow_pos hz 3\n  have h\u2080 : 8 / (5 * x ^ 3 + 3) \u2264 8 / 3 := by\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (x ^ 2), sq_nonneg (x ^ 3)]\n  have h\u2081 : 8 / (5 * y ^ 3 + 3) \u2264 8 / 3 := by\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (y ^ 2), sq_nonneg (y ^ 3)]\n  have h\u2082 : 8 / (5 * z ^ 3 + 3) \u2264 8 / 3 := by\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (z ^ 2), sq_nonneg (z ^ 3)]\n  nlinarith [sq_nonneg (x ^ 2), sq_nonneg (y ^ 2), sq_nonneg (z ^ 2),\n    mul_self_nonneg (x ^ 2 - y ^ 2), mul_self_nonneg (y ^ 2 - z ^ 2),\n    mul_self_nonneg (z ^ 2 - x ^ 2), mul_self_nonneg (x ^ 2 + y ^ 2 + z ^ 2)]\n  <;> linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) : 8 / (5 * x ^ 3 + 3) + 8 / (5 * y ^ 3 + 3) + 8 / (5 * z ^ 3 + 3) \u2264 8 * (x ^ 6 + y ^ 6 + z ^ 6):= by\n  have h : 0 < x ^ 3 := pow_pos hx 3\n  have h\u2081 : 0 < y ^ 3 := pow_pos hy 3\n  have h\u2082 : 0 < z ^ 3 := pow_pos hz 3\n  have h\u2083 : 0 < 5 * x ^ 3 + 3 := by positivity\n  have h\u2084 : 0 < 5 * y ^ 3 + 3 := by positivity\n  have h\u2085 : 0 < 5 * z ^ 3 + 3 := by positivity\n  have h\u2086 : 8 / (5 * x ^ 3 + 3) \u2264 8 / 3 := by\n    gcongr\n    all_goals nlinarith [sq_nonneg (x ^ 2 - 1), hx]\n  have h\u2087 : 8 / (5 * y ^ 3 + 3) \u2264 8 / 3 := by\n    gcongr\n    all_goals nlinarith [sq_nonneg (y ^ 2 - 1), hy]\n  have h\u2088 : 8 / (5 * z ^ 3 + 3) \u2264 8 / 3 := by\n    gcongr\n    all_goals nlinarith [sq_nonneg (z ^ 2 - 1), hz]\n  nlinarith [sq_nonneg (x ^ 2 - 1), sq_nonneg (y ^ 2 - 1), sq_nonneg (z ^ 2 - 1),\n    mul_self_nonneg (x ^ 2 - y ^ 2),\n    mul_self_nonneg (x ^ 2 - z ^ 2),\n    mul_self_nonneg (y ^ 2 - z ^ 2)]\n  <;> linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) : 8 / (5 * x ^ 3 + 3) + 8 / (5 * y ^ 3 + 3) + 8 / (5 * z ^ 3 + 3) \u2264 8 * (x ^ 6 + y ^ 6 + z ^ 6):= by\n  have h\u2081 : 0 < x * y := by positivity\n  have h\u2082 : 0 < y * z := by positivity\n  have h\u2083 : 0 < x * z := by positivity\n  have h\u2084 : 0 < x * y * z := by positivity\n  have h\u2085 : 8 / (5 * x ^ 3 + 3) \u2264 8 / 3 := by\n    gcongr\n    nlinarith [pow_two x, pow_two (x * y), pow_two (x * z)]\n  have h\u2086 : 8 / (5 * y ^ 3 + 3) \u2264 8 / 3 := by\n    gcongr\n    nlinarith [pow_two y, pow_two (y * z), pow_two (x * y)]\n  have h\u2087 : 8 / (5 * z ^ 3 + 3) \u2264 8 / 3 := by\n    gcongr\n    nlinarith [pow_two z, pow_two (x * z), pow_two (y * z)]\n  nlinarith [sq_nonneg (x ^ 2 - 1), sq_nonneg (y ^ 2 - 1), sq_nonneg (z ^ 2 - 1),\n    sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (y ^ 2 - z ^ 2), sq_nonneg (x ^ 2 - z ^ 2)]"
  ]
 },
 {
  "old": ": \u221a(9 + 8 * Real.sqrt 10) * \u221a(7 + Real.sqrt 11) - \u221a(7 + 2 * Real.sqrt 10) * \u221a(9 + Real.sqrt 11) > (6.00000423:\u211d) := by",
  "new": "(x : \u211d) (hx : 0 < x) : Real.sqrt (3 - x) * Real.sqrt (x) \u2264 \u221a3 * \u221a(x + 3):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210 (x : \u211d) (hx : 0 < x) :\n   Real.sqrt (3 - x) * Real.sqrt (x) \u2264 \u221a3 * \u221a(x + 3):= by\n  have h\u2080 : Real.sqrt (3 - x) * Real.sqrt (x) \u2264 \u221a3 * \u221a(x + 3) := by\n    have h\u2081 : Real.sqrt (3 - x) * Real.sqrt (x) \u2264 \u221a3 * \u221a(x + 3) := by\n      have h\u2082 : Real.sqrt (3 - x) \u2264 \u221a3 := by\n        refine' Real.sqrt_le_sqrt _\n        linarith\n      have h\u2083 : Real.sqrt x \u2264 \u221a(x + 3) := by\n        refine' Real.sqrt_le_sqrt _\n        linarith\n      calc\n        Real.sqrt (3 - x) * Real.sqrt x \u2264 Real.sqrt 3 * Real.sqrt (x + 3) := by\n          exact mul_le_mul h\u2082 h\u2083 (Real.sqrt_nonneg _) (Real.sqrt_nonneg _)\n        _ = \u221a3 * \u221a(x + 3) := by rfl\n    exact h\u2081\n  exact h\u2080",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210 (x : \u211d) (hx : 0 < x) :\n   Real.sqrt (3 - x) * Real.sqrt (x) \u2264 \u221a3 * \u221a(x + 3):= by\n  have h\u2080 : 0 \u2264 \u221a3 * \u221a(x + 3) := by positivity\n  have h\u2081 : Real.sqrt (3 - x) \u2264 \u221a3 := by\n    apply Real.sqrt_le_sqrt\n    linarith\n  have h\u2082 : Real.sqrt x \u2264 \u221a(x + 3) := by\n    apply Real.sqrt_le_sqrt\n    linarith\n  calc\n    Real.sqrt (3 - x) * Real.sqrt x \u2264 \u221a3 * \u221a(x + 3) := by\n      gcongr <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210 (x : \u211d) (hx : 0 < x) :\n   Real.sqrt (3 - x) * Real.sqrt (x) \u2264 \u221a3 * \u221a(x + 3):= by\n  have h\u2080 : Real.sqrt (3 - x) \u2264 \u221a3 := by\n    rw [Real.sqrt_le_sqrt_iff]\n    nlinarith\n    nlinarith\n  have h\u2081 : Real.sqrt x \u2264 \u221a(x + 3) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith\n  calc\n    Real.sqrt (3 - x) * Real.sqrt x \u2264 \u221a3 * \u221a(x + 3) := by\n      gcongr <;> assumption\n"
  ]
 },
 {
  "old": "(x : \u211d) (hx : 0 \u2264 x \u2227 x \u2264 1 / 2) : (1 - x) * Real.sqrt (1 + 3 * x - 4 * x^3) \u2265 1 / 12 := by",
  "new": "(x : \u211d) (hx : 0 \u2264 x \u2227 x \u2264 1) : x \u2264 1 / 2 \u2192 3 * Real.sqrt (1 + 3 * x - 4 * x ^ 3) \u2265 1 + x:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_x_bound (x : \u211d) (hx : 0 \u2264 x \u2227 x \u2264 1) :\n   x \u2264 1 / 2 \u2192 3 * Real.sqrt (1 + 3 * x - 4 * x ^ 3) \u2265 1 + x:= by\n  intro hx_le_1_div_2\n  have h\u2080 : 0 \u2264 (x - 1) ^ 2 := sq_nonneg (x - 1)\n  have h\u2081 : 0 \u2264 x * (1 - x) := by nlinarith\n  have h\u2082 : 0 \u2264 1 + 3 * x - 4 * x ^ 3 := by nlinarith\n  have h\u2083 : 0 \u2264 Real.sqrt (1 + 3 * x - 4 * x ^ 3) := Real.sqrt_nonneg (1 + 3 * x - 4 * x ^ 3)\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 1 + 3 * x - 4 * x ^ 3 from h\u2082),\n    mul_self_nonneg (x - 1 / 2),\n    mul_self_nonneg (Real.sqrt (1 + 3 * x - 4 * x ^ 3) - x)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_x_bound (x : \u211d) (hx : 0 \u2264 x \u2227 x \u2264 1) :\n   x \u2264 1 / 2 \u2192 3 * Real.sqrt (1 + 3 * x - 4 * x ^ 3) \u2265 1 + x:= by\n  intro hx'\n  have h\u2080 : 0 \u2264 (x - 1) ^ 2 := by nlinarith\n  have h\u2081 : 0 \u2264 Real.sqrt (1 + 3 * x - 4 * x ^ 3) := by\n    apply Real.sqrt_nonneg\n  nlinarith [sq_sqrt (by nlinarith : 0 \u2264 1 + 3 * x - 4 * x ^ 3),\n    sq_nonneg (x - 1 / 2)]\n  <;> linarith\n  <;> norm_num"
  ]
 },
 {
  "old": "{a b c : \u211d} (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : (a^4 / (b + c) + b^4 / (a + c) + c^4 / (a + b)) \u2265 (1 / 2) * (a^3 + b^3 + c^3) := by",
  "new": ": \u2200 x : \u211d, x \u2265 0 \u2192 (x^3 / (2 * x - x) + x^4 / (2 * x - x) + x^5 / (2 * x - x)) \u2265 (1 / 2) * x^3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x \u2265 0 \u2192 (x^3 / (2 * x - x) + x^4 / (2 * x - x) + x^5 / (2 * x - x)) \u2265 (1 / 2) * x^3:= by\n  intro x hx\n  ring_nf\n  rcases eq_or_lt_of_le hx with (rfl | hx) <;> norm_num\n  all_goals\n    apply le_of_sub_nonneg\n    field_simp\n    ring_nf\n    positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x \u2265 0 \u2192 (x^3 / (2 * x - x) + x^4 / (2 * x - x) + x^5 / (2 * x - x)) \u2265 (1 / 2) * x^3:= by\n  intro x hx\n  by_cases h : x = 0\n  all_goals simp_all\n  all_goals\n    ring\n    apply le_of_sub_nonneg\n    field_simp\n    ring_nf\n    positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x \u2265 0 \u2192 (x^3 / (2 * x - x) + x^4 / (2 * x - x) + x^5 / (2 * x - x)) \u2265 (1 / 2) * x^3:= by\n  intro x hx\n  have h\u2081 : x \u2265 0 := hx\n  by_cases h\u2082 : x = 0\n  all_goals simp_all [pow_succ]\n  all_goals\n    ring_nf\n    apply le_of_sub_nonneg\n    field_simp\n    ring_nf\n    positivity"
  ]
 },
 {
  "old": "(a b c : \u211d) : (a^2 + 4 * b^2) / c^2 \u2265 (4:\u211d) / 125 * (12 * (2:\u211d)^(1/3) - 21 * (4:\u211d)^(1/3) + 11) := by",
  "new": ": Real.sqrt (Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + b ^ 2)) + Real.sqrt (Real.sqrt (1 + b ^ 2) + Real.sqrt (1 + a ^ 2)) + Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + b ^ 2) \u2265 2 * Real.sqrt (2) - Real.sqrt (3):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + b ^ 2)) +\n        Real.sqrt (Real.sqrt (1 + b ^ 2) + Real.sqrt (1 + a ^ 2)) +\n        Real.sqrt (1 + a ^ 2) +\n        Real.sqrt (1 + b ^ 2) \u2265\n      2 * Real.sqrt (2) - Real.sqrt (3):= by\n  have h : Real.sqrt 2 \u2264 2 := by\n    apply Real.sqrt_le_iff.2\n    constructor\n    \u00b7 positivity\n    \u00b7 linarith [sq_sqrt (show 0 \u2264 2 by positivity)]\n  have h\u2081 : Real.sqrt (1 + a ^ 2) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2082 : Real.sqrt (1 + b ^ 2) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2083 : Real.sqrt (Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + b ^ 2)) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2084 : Real.sqrt (Real.sqrt (1 + b ^ 2) + Real.sqrt (1 + a ^ 2)) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2085 : Real.sqrt (1 + a ^ 2) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2086 : Real.sqrt (1 + b ^ 2) \u2265 0 := Real.sqrt_nonneg _\n  nlinarith [sq_sqrt (show 0 \u2264 2 by positivity),\n    Real.sqrt_le_sqrt (show 3 \u2265 2 by linarith),\n    Real.sqrt_nonneg 3, Real.sqrt_nonneg 2,\n    h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086]\n  <;> linarith\n  <;> assumption\n  <;> simp [*]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + b ^ 2)) +\n        Real.sqrt (Real.sqrt (1 + b ^ 2) + Real.sqrt (1 + a ^ 2)) +\n        Real.sqrt (1 + a ^ 2) +\n        Real.sqrt (1 + b ^ 2) \u2265\n      2 * Real.sqrt (2) - Real.sqrt (3):= by\n  have h\u2080 : Real.sqrt (1 + a ^ 2) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2081 : Real.sqrt (1 + b ^ 2) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2082 : Real.sqrt (1 + a ^ 2) +\n      Real.sqrt (1 + b ^ 2) \u2265 2:= by\n    linarith\n  have h\u2083 : Real.sqrt (Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + b ^ 2)) \u2265 1:= by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2084 : Real.sqrt (Real.sqrt (1 + b ^ 2) + Real.sqrt (1 + a ^ 2)) \u2265 1:= by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 2 by norm_num),\n    sq_sqrt (show (0 : \u211d) \u2264 3 by norm_num),\n    Real.sqrt_nonneg 2, Real.sqrt_nonneg 3]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + b ^ 2)) +\n        Real.sqrt (Real.sqrt (1 + b ^ 2) + Real.sqrt (1 + a ^ 2)) +\n        Real.sqrt (1 + a ^ 2) +\n        Real.sqrt (1 + b ^ 2) \u2265\n      2 * Real.sqrt (2) - Real.sqrt (3):= by\n  have h\u2080 : Real.sqrt (2) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2081 : Real.sqrt (3) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2082 : Real.sqrt (1 + a ^ 2) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2083 : Real.sqrt (1 + b ^ 2) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2084 : Real.sqrt (2) \u2264 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  have h\u2085 : Real.sqrt (3) \u2264 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  have h\u2086 : Real.sqrt (1 + a ^ 2) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2087 : Real.sqrt (1 + b ^ 2) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2088 : Real.sqrt (Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + b ^ 2)) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2089 : Real.sqrt (Real.sqrt (1 + b ^ 2) + Real.sqrt (1 + a ^ 2)) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2081\u2080 : Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + b ^ 2) \u2265 2 - 1 := by\n    nlinarith [Real.sq_sqrt (show 0 \u2264 2 from by nlinarith),\n      Real.sq_sqrt (show 0 \u2264 3 from by nlinarith)]\n  nlinarith [Real.sq_sqrt (show 0 \u2264 2 from by nlinarith),\n    Real.sq_sqrt (show 0 \u2264 3 from by nlinarith)]\n  <;> norm_num"
  ]
 },
 {
  "old": "(a b c m : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hm : 0 < m) : (a + b + c) ^ m * (a ^ (m + 1) / b ^ m + b ^ (m + 1) / c ^ m + c ^ (m + 1) / a ^ m) \u2265 a ^ (m + 1) + b ^ (m + 1) + c ^ (m + 1) := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a + b) * (b + c) * (c + a) + (a * b + b * c + c * a) * (a + b + c) + 3 * a * b * c \u2264 2 * (a + b) * (b + c) * (c + a) + (a + b + b + c + c + a) * (a + b + c) + 3 * a * b * c * (a + b + c + 1):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a + b) * (b + c) * (c + a) + (a * b + b * c + c * a) * (a + b + c) + 3 * a * b * c \u2264\n    2 * (a + b) * (b + c) * (c + a) + (a + b + b + c + c + a) * (a + b + c) + 3 * a * b * c * (a + b + c + 1):= by\n  intro a b c h\u2080\n  simp only [mul_add, mul_comm, mul_left_comm, mul_assoc]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_nonneg h\u2080.2.1 h\u2080.2.2, mul_nonneg h\u2080.2.2 h\u2080.1, mul_nonneg h\u2080.1 h\u2080.2.1,\n    mul_nonneg (mul_nonneg h\u2080.1 h\u2080.2.2) h\u2080.2.1, mul_nonneg (mul_nonneg h\u2080.2.2 h\u2080.2.1) h\u2080.1,\n    mul_nonneg (mul_nonneg h\u2080.2.1 h\u2080.2.2) h\u2080.2.2, mul_nonneg (mul_nonneg h\u2080.2.2 h\u2080.1) h\u2080.2.2]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a + b) * (b + c) * (c + a) + (a * b + b * c + c * a) * (a + b + c) + 3 * a * b * c \u2264\n    2 * (a + b) * (b + c) * (c + a) + (a + b + b + c + c + a) * (a + b + c) + 3 * a * b * c * (a + b + c + 1):= by\n  rintro a b c \u27e8h\u2080, h\u2081, h\u2082\u27e9\n  simp_all only [add_mul, add_assoc, mul_assoc, mul_add, add_zero, mul_one, add_left_inj,\n    mul_right_comm, mul_left_comm]\n  nlinarith [mul_nonneg h\u2080 h\u2081, mul_nonneg h\u2081 h\u2082, mul_nonneg h\u2082 h\u2080,\n    mul_nonneg (mul_nonneg h\u2080 h\u2081) h\u2082, mul_nonneg (mul_nonneg h\u2081 h\u2082) h\u2080,\n    mul_nonneg (mul_nonneg h\u2082 h\u2080) h\u2081]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a + b) * (b + c) * (c + a) + (a * b + b * c + c * a) * (a + b + c) + 3 * a * b * c \u2264\n    2 * (a + b) * (b + c) * (c + a) + (a + b + b + c + c + a) * (a + b + c) + 3 * a * b * c * (a + b + c + 1):= by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  have hab : 0 \u2264 a * b := by nlinarith\n  have hac : 0 \u2264 a * c := by nlinarith\n  have hbc : 0 \u2264 b * c := by nlinarith\n  have h\u2080 : 0 \u2264 a * b * c := by nlinarith\n  have h\u2081 : 0 \u2264 a * b * c * (a + b + c + 1) := by nlinarith\n  nlinarith [mul_self_nonneg (a + b), mul_self_nonneg (b + c),\n    mul_self_nonneg (c + a), mul_self_nonneg (a - b), mul_self_nonneg (b - c),\n    mul_self_nonneg (c - a)]\n  <;> nlinarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a + b) * (b + c) * (c + a) + (a * b + b * c + c * a) * (a + b + c) + 3 * a * b * c \u2264\n    2 * (a + b) * (b + c) * (c + a) + (a + b + b + c + c + a) * (a + b + c) + 3 * a * b * c * (a + b + c + 1):= by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  have : 0 \u2264 a * b * c := by positivity\n  nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_nonneg ha hb, mul_nonneg hb hc, mul_nonneg hc ha, mul_nonneg (sq_nonneg (a + b)) hc,\n    mul_nonneg (sq_nonneg (b + c)) ha, mul_nonneg (sq_nonneg (c + a)) hb, mul_nonneg (sq_nonneg (a + b)) hb,\n    mul_nonneg (sq_nonneg (b + c)) hc, mul_nonneg (sq_nonneg (c + a)) ha]\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a * b + b * c + c * a = 3) : (a * b * (a ^ 3 + b ^ 3) / (a ^ 2 * (a + 1) + b ^ 2 * (b + 1)) + b * c * (b ^ 3 + c ^ 3) / (b ^ 2 * (b + 1) + c ^ 2 * (c + 1)) + c * a * (c ^ 3 + a ^ 3) / (c ^ 2 * (c + 1) + a ^ 2 * (a + 1))) \u2264 (a ^ 3 + b ^ 3 + c ^ 3) / (1 + a * b * c) := by",
  "new": "(a b c : \u211d) (habc : a * b * c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0) (h1 : a * b + b * c + c * a = 3) : a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2 + 3 \u2265 2 * (a * b / (a ^ 2 + b ^ 2) + b * c / (b ^ 2 + c ^ 2) + c * a / (c ^ 2 + a ^ 2)):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (a b c : \u211d) (habc : a * b * c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0)  (h1 : a * b + b * c + c * a = 3)  :\n  a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2 + 3 \u2265 2 * (a * b / (a ^ 2 + b ^ 2) + b * c / (b ^ 2 + c ^ 2) + c * a / (c ^ 2 + a ^ 2)):= by\n  rcases h with \u27e8ha, hb, hc\u27e9\n  have h2 : 0 < a * b := by positivity\n  have h3 : 0 < b * c := by positivity\n  have h4 : 0 < c * a := by positivity\n  have h5 : a * b / (a ^ 2 + b ^ 2) \u2264 1 / 2 := by\n    rw [div_le_iff (by positivity)]\n    nlinarith [sq_nonneg (a - b)]\n  have h6 : b * c / (b ^ 2 + c ^ 2) \u2264 1 / 2 := by\n    rw [div_le_iff (by positivity)]\n    nlinarith [sq_nonneg (b - c)]\n  have h7 : c * a / (c ^ 2 + a ^ 2) \u2264 1 / 2 := by\n    rw [div_le_iff (by positivity)]\n    nlinarith [sq_nonneg (c - a)]\n  have h8 : a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2 \u2265 0 := by positivity\n  nlinarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (a b c : \u211d) (habc : a * b * c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0)  (h1 : a * b + b * c + c * a = 3)  :\n  a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2 + 3 \u2265 2 * (a * b / (a ^ 2 + b ^ 2) + b * c / (b ^ 2 + c ^ 2) + c * a / (c ^ 2 + a ^ 2)):= by\n  rcases h with \u27e8ha, hb, hc\u27e9\n  have : a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2 + 3 \u2265 2 * (a * b / (a ^ 2 + b ^ 2) + b * c / (b ^ 2 + c ^ 2) + c * a / (c ^ 2 + a ^ 2)) := by\n    have h\u2080 : a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2 \u2265 3 := by\n      rw [add_comm]\n      have h\u2082 : 0 < a ^ 2 := sq_pos_of_pos ha\n      have h\u2083 : 0 < b ^ 2 := sq_pos_of_pos hb\n      have h\u2084 : 0 < c ^ 2 := sq_pos_of_pos hc\n      have h\u2085 : 0 < a ^ 2 * b ^ 2 := mul_pos h\u2082 h\u2083\n      have h\u2086 : 0 < b ^ 2 * c ^ 2 := mul_pos h\u2083 h\u2084\n      have h\u2087 : 0 < a ^ 2 * c ^ 2 := mul_pos h\u2082 h\u2084\n      field_simp\n      rw [le_div_iff (by positivity)]\n      nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (a ^ 2 - c ^ 2)]\n    have h\u2081 : a * b / (a ^ 2 + b ^ 2) \u2264 1 / 2 := by\n      rw [div_le_iff (by positivity)]\n      nlinarith [sq_nonneg (a - b)]\n    have h\u2082 : b * c / (b ^ 2 + c ^ 2) \u2264 1 / 2 := by\n      rw [div_le_iff (by positivity)]\n      nlinarith [sq_nonneg (b - c)]\n    have h\u2083 : c * a / (c ^ 2 + a ^ 2) \u2264 1 / 2 := by\n      rw [div_le_iff (by positivity)]\n      nlinarith [sq_nonneg (c - a)]\n    nlinarith\n  exact this",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (a b c : \u211d) (habc : a * b * c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0)  (h1 : a * b + b * c + c * a = 3)  :\n  a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2 + 3 \u2265 2 * (a * b / (a ^ 2 + b ^ 2) + b * c / (b ^ 2 + c ^ 2) + c * a / (c ^ 2 + a ^ 2)):= by\n  rcases h with \u27e8ha, hb, hc\u27e9\n  have : a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2 + 3 \u2265 2 * (a * b / (a ^ 2 + b ^ 2) + b * c / (b ^ 2 + c ^ 2) + c * a / (c ^ 2 + a ^ 2)) := by\n    have h\u2081 : a * b / (a ^ 2 + b ^ 2) \u2264 1 / 2 := by\n      rw [div_le_iff (by positivity)]\n      nlinarith [sq_nonneg (a - b)]\n    have h\u2082 : b * c / (b ^ 2 + c ^ 2) \u2264 1 / 2 := by\n      rw [div_le_iff (by positivity)]\n      nlinarith [sq_nonneg (b - c)]\n    have h\u2083 : c * a / (c ^ 2 + a ^ 2) \u2264 1 / 2 := by\n      rw [div_le_iff (by positivity)]\n      nlinarith [sq_nonneg (c - a)]\n    have h\u2084 : a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2 \u2265 0 := by positivity\n    nlinarith\n  exact this\n  <;> norm_num"
  ]
 },
 {
  "old": "(a : \u211d) (ha : 0 \u2264 a) : 2 * (a ^ 3 + 1) ^ 4 \u2265 (a ^ 4 + 1) * (a ^ 2 + 1) ^ 4 := by",
  "new": "(a b c d : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hd : 0 \u2264 d) : (a * b * c * d) * (a + b + c + d) \u2264 (a * b + c * d) ^ 2 * (a + b) + (a * c + b * d) ^ 2 * (c + d):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210 (a b c d : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hd : 0 \u2264 d) :\n  (a * b * c * d) * (a + b + c + d) \u2264 (a * b + c * d) ^ 2 * (a + b) + (a * c + b * d) ^ 2 * (c + d):= by\n  simp only [mul_add, add_mul, mul_pow, pow_add, pow_two]\n  nlinarith [mul_nonneg ha hb, mul_nonneg ha hc, mul_nonneg ha hd, mul_nonneg hb hc, mul_nonneg hb hd,\n    mul_nonneg hc hd, mul_nonneg (mul_nonneg ha hb) hc, mul_nonneg (mul_nonneg ha hb) hd,\n    mul_nonneg (mul_nonneg ha hc) hd, mul_nonneg (mul_nonneg hb hc) hd]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210 (a b c d : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hd : 0 \u2264 d) :\n  (a * b * c * d) * (a + b + c + d) \u2264 (a * b + c * d) ^ 2 * (a + b) + (a * c + b * d) ^ 2 * (c + d):= by\n  simp only [mul_add, add_mul, mul_pow, pow_add, pow_two]\n  nlinarith [mul_nonneg ha hb, mul_nonneg ha hc, mul_nonneg ha hd, mul_nonneg hb hc,\n    mul_nonneg hb hd, mul_nonneg hc hd, mul_nonneg ha (mul_nonneg hb hc),\n    mul_nonneg ha (mul_nonneg hb hd), mul_nonneg ha (mul_nonneg hc hd), mul_nonneg hb (mul_nonneg hc hd)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210 (a b c d : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hd : 0 \u2264 d) :\n  (a * b * c * d) * (a + b + c + d) \u2264 (a * b + c * d) ^ 2 * (a + b) + (a * c + b * d) ^ 2 * (c + d):= by\n  simp only [mul_add, add_mul]\n  nlinarith [sq_nonneg (a * b - c * d), sq_nonneg (a * c - b * d), sq_nonneg (a * d - b * c),\n    mul_nonneg ha hb, mul_nonneg ha hc, mul_nonneg ha hd, mul_nonneg hb hc, mul_nonneg hb hd,\n    mul_nonneg hc hd]\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210 (a b c d : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hd : 0 \u2264 d) :\n  (a * b * c * d) * (a + b + c + d) \u2264 (a * b + c * d) ^ 2 * (a + b) + (a * c + b * d) ^ 2 * (c + d):= by\n  nlinarith [sq_nonneg (a * b - c * d), sq_nonneg (a * c - b * d), mul_nonneg ha hb, mul_nonneg hc hd,\n    mul_nonneg (sq_nonneg a) hd, mul_nonneg (sq_nonneg b) hd, mul_nonneg (sq_nonneg c) hd,\n    mul_nonneg (sq_nonneg d) hd, mul_nonneg (sq_nonneg a) hb, mul_nonneg (sq_nonneg b) hb,\n    mul_nonneg (sq_nonneg c) hb, mul_nonneg (sq_nonneg d) hb]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a^2 * b + b^2 * c + c^2 * a + a * b * c \u2264 (4:\u211d) / (27:\u211d) * (a + b + c)^3 := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a + b) * (b + c) * (c + a) * (a + b + c) ^ 2 \u2264 4 * (a + b + c) * (a ^ 2 + b ^ 2 + c ^ 2) ^ 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a + b) * (b + c) * (c + a) * (a + b + c) ^ 2 \u2264 4 * (a + b + c) * (a ^ 2 + b ^ 2 + c ^ 2) ^ 2:= by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  have : 0 \u2264 a * b := by positivity\n  have : 0 \u2264 b * c := by positivity\n  have : 0 \u2264 c * a := by positivity\n  have : 0 \u2264 a * b * c := by positivity\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a ^ 2 - b ^ 2), mul_self_nonneg (b ^ 2 - c ^ 2),\n    mul_self_nonneg (c ^ 2 - a ^ 2),\n    mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a),\n    mul_self_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a + b) * (b + c) * (c + a) * (a + b + c) ^ 2 \u2264 4 * (a + b + c) * (a ^ 2 + b ^ 2 + c ^ 2) ^ 2:= by\n  rintro a b c \u27e8ha : a \u2265 0, hb : b \u2265 0, hc : c \u2265 0\u27e9\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (a - c),\n    mul_self_nonneg (a ^ 2 - b ^ 2), mul_self_nonneg (b ^ 2 - c ^ 2),\n    mul_self_nonneg (a ^ 2 - c ^ 2), mul_nonneg ha hb, mul_nonneg hb hc, mul_nonneg ha hc,\n    mul_nonneg (sq_nonneg (a - b)) ha, mul_nonneg (sq_nonneg (b - c)) hb,\n    mul_nonneg (sq_nonneg (a - c)) hc, mul_nonneg (sq_nonneg (a - b)) hb,\n    mul_nonneg (sq_nonneg (b - c)) hc, mul_nonneg (sq_nonneg (a - c)) ha]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a + b) * (b + c) * (c + a) * (a + b + c) ^ 2 \u2264 4 * (a + b + c) * (a ^ 2 + b ^ 2 + c ^ 2) ^ 2:= by\n  intro a b c h\u2080\n  simp_all only [add_assoc, add_left_comm, add_right_comm, mul_assoc, mul_left_comm, mul_right_comm]\n  nlinarith [mul_nonneg h\u2080.1 h\u2080.2.1, mul_nonneg h\u2080.2.1 h\u2080.2.2, mul_nonneg h\u2080.1 h\u2080.2.2,\n    mul_nonneg (sq_nonneg (a - b)) h\u2080.2.2, mul_nonneg (sq_nonneg (b - c)) h\u2080.2.2,\n    mul_nonneg (sq_nonneg (c - a)) h\u2080.2.2, mul_nonneg (sq_nonneg (a - b)) h\u2080.1,\n    mul_nonneg (sq_nonneg (b - c)) h\u2080.1, mul_nonneg (sq_nonneg (c - a)) h\u2080.1,\n    mul_nonneg (sq_nonneg (a - b)) h\u2080.2.1, mul_nonneg (sq_nonneg (b - c)) h\u2080.2.1,\n    mul_nonneg (sq_nonneg (c - a)) h\u2080.2.1]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a + b) * (b + c) * (c + a) * (a + b + c) ^ 2 \u2264 4 * (a + b + c) * (a ^ 2 + b ^ 2 + c ^ 2) ^ 2:= by\n  rintro a b c \u27e8h\u2080, h\u2081, h\u2082\u27e9\n  ring_nf\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_nonneg h\u2080 h\u2081, mul_nonneg h\u2081 h\u2082, mul_nonneg h\u2082 h\u2080,\n    mul_nonneg (sq_nonneg (a + b)) h\u2080, mul_nonneg (sq_nonneg (b + c)) h\u2081,\n    mul_nonneg (sq_nonneg (c + a)) h\u2082, sq_nonneg (a + b + c),\n    mul_nonneg (sq_nonneg (a - b)) h\u2080, mul_nonneg (sq_nonneg (b - c)) h\u2081,\n    mul_nonneg (sq_nonneg (c - a)) h\u2082]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (3 * (a ^ 2 + b ^ 2 + c ^ 2) / (a * b + b * c + c * a) + (a * b ^ 3 + b * c ^ 3 + c * a ^ 3) / (a ^ 3 * b + b ^ 3 * c + c ^ 3 * a)) \u2265 4 := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a ^ 2 + b ^ 2 + c ^ 2) * (1 / a + 1 / b + 1 / c) \u2265 a + b + c:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a ^ 2 + b ^ 2 + c ^ 2) * (1 / a + 1 / b + 1 / c) \u2265 a + b + c:= by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  rcases eq_or_ne a 0 with (rfl | ha') <;>\n  rcases eq_or_ne b 0 with (rfl | hb') <;>\n  rcases eq_or_ne c 0 with (rfl | hc') <;>\n  simp_all\n  all_goals\n    apply le_of_sub_nonneg\n    field_simp\n    ring_nf\n    positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a ^ 2 + b ^ 2 + c ^ 2) * (1 / a + 1 / b + 1 / c) \u2265 a + b + c:= by\n  rintro a b c \u27e8a_ge_0, b_ge_0, c_ge_0\u27e9\n  rcases eq_or_ne a 0 with (rfl | a_ne_0) <;> rcases eq_or_ne b 0 with (rfl | b_ne_0) <;>\n    rcases eq_or_ne c 0 with (rfl | c_ne_0) <;> simp_all\n  all_goals\n    apply le_of_sub_nonneg\n    field_simp\n    ring_nf\n    positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a ^ 2 + b ^ 2 + c ^ 2) * (1 / a + 1 / b + 1 / c) \u2265 a + b + c:= by\n  intro a b c h\n  rcases h with \u27e8ha, hb, hc\u27e9\n  by_cases ha' : a = 0 <;> by_cases hb' : b = 0 <;> by_cases hc' : c = 0 <;>\n    simp_all [sq]\n  all_goals\n    ring_nf\n    apply le_of_sub_nonneg\n    field_simp\n    ring_nf\n    positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a ^ 2 + b ^ 2 + c ^ 2) * (1 / a + 1 / b + 1 / c) \u2265 a + b + c:= by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  rcases eq_or_lt_of_le ha with (rfl | ha') <;> rcases eq_or_lt_of_le hb with (rfl | hb') <;>\n    rcases eq_or_lt_of_le hc with (rfl | hc') <;>\n    simp_all [sq, add_assoc, add_comm, add_left_comm]\n  all_goals\n    apply le_of_sub_nonneg\n    field_simp\n    ring_nf\n    positivity"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : (1 / (a + b) - c) * (1 / (b + c) - a) * (1 / (c + a) - b) \u2265 (7 / 6)^3 := by",
  "new": ": \u2200 x : \u211d, x > 0 \u2192 x ^ 3 / (x ^ 3 + 1) \u2264 x^2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 3 / (x ^ 3 + 1) \u2264 x^2:= by\n  intro x hx\n  apply (div_le_iff (by positivity)).mpr\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (x ^ 2 - x)]"
  ]
 },
 {
  "old": "(x a b : \u2115) : Nat.gcd (x^a - 1) (x^b - 1) = x^(Nat.gcd a b) - 1 := by",
  "new": "(x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac (Nat.Coprime x y):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac (Nat.Coprime x y):= by\n  apply em",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac (Nat.Coprime x y):= by\n  by_cases h : Nat.Coprime x y\n  exact Or.inl h\n  exact Or.inr h\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac (Nat.Coprime x y):= by\n  apply em\n  <;> simp_all\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac (Nat.Coprime x y):= by\n  apply or_iff_not_imp_left.mpr\n  intro h\n  simpa [h] using (Nat.coprime_iff_gcd_eq_one.mpr)"
  ]
 },
 {
  "old": "(x : \u211d) : |Real.sin x| \u2264 |x| := by",
  "new": "(x : \u211d) : sin x \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_le_one (x : \u211d) : sin x \u2264 1:= by\n  have h : sin x \u2264 1 := by\n    have h1 : |sin x| \u2264 1 := abs_sin_le_one x\n    rw [abs_le] at h1\n    linarith\n  exact h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_le_one (x : \u211d) : sin x \u2264 1:= by\n  have h : sin x \u2264 1 := by\n    have h\u2081 := sin_sq_add_cos_sq x\n    nlinarith [sq_nonneg (cos x)]\n  exact h\n  <;> simp [h]\n  <;> nlinarith\n  <;> simp [h]\n  <;> nlinarith\n  <;> simp [h]\n  <;> nlinarith\n  <;> simp [h]\n  <;> nlinarith\n  <;> simp [h]\n  <;> nlinarith\n  <;> simp [h]\n  <;> nlinarith\n  <;> simp [h]\n  <;> nlinarith\n  <;> simp [h]\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_le_one (x : \u211d) : sin x \u2264 1:= by\n  have := sin_sq_add_cos_sq x\n  have := sq_nonneg (cos x - 1)\n  have := add_nonneg (sq_nonneg (sin x)) this\n  nlinarith [sin_sq_add_cos_sq x]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_le_one (x : \u211d) : sin x \u2264 1:= by\n  by_contra h\u2081\n  have h\u2082 := Real.sin_le_one x\n  linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith"
  ]
 },
 {
  "old": "(A B C : \u211d) (hx: A = Real.pi / 2 - B / 2 - C / 2) (hb: B = Real.pi / 2 - A / 2 - C / 2) (hc: C = Real.pi / 2 - A / 2 - B / 2) (hA: 0 < A \u2227 A <= Real.pi / 2) (hB: 0 < B \u2227 B <= Real.pi / 2) (hC: 0 < C \u2227 C <= Real.pi / 2): 1 / Real.cos A + 1 / Real.cos B >= 8 / (3 - 2 * Real.cos C) := by",
  "new": ": Real.cos (Real.pi / 3) \u2264 1 / Real.cos (Real.pi / 6) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.cos (Real.pi / 3) \u2264 1 / Real.cos (Real.pi / 6) := by\n  have h\u2081 : Real.cos (Real.pi / 3) = 1 / 2 := by norm_num\n  have h\u2082 : Real.cos (Real.pi / 6) = Real.sqrt 3 / 2 := by norm_num\n  rw [h\u2081, h\u2082]\n  have h\u2083 : 0 < Real.sqrt 3 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2084 : (Real.sqrt 3) / 2 \u2260 0 := by positivity\n  field_simp [h\u2084]\n  rw [div_le_div_iff]\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 by norm_num)]\n  positivity\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.cos (Real.pi / 3) \u2264 1 / Real.cos (Real.pi / 6) := by\n  have h\u2081 : Real.cos (Real.pi / 3) = 1 / 2 := by rw [Real.cos_pi_div_three]\n  have h\u2082 : Real.cos (Real.pi / 6) = Real.sqrt 3 / 2 := by rw [Real.cos_pi_div_six]\n  rw [h\u2081, h\u2082]\n  have h\u2083 : Real.sqrt 3 > 0 := Real.sqrt_pos_of_pos (by norm_num)\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_sqrt (show 0 \u2264 3 by norm_num)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) : a / (b * (1 + c)) + (2 * b) / (a + b * c) + (b * c) / (a + b) \u2265 2 * Real.sqrt 2 - 1 := by",
  "new": ": Real.sqrt (2 - Real.sqrt 5) < 2 / Real.sqrt 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (2 - Real.sqrt 5) < 2 / Real.sqrt 2:= by\n  have h\u2080 : 0 < Real.sqrt 5 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2081 : Real.sqrt 5 ^ 2 = 5 := Real.sq_sqrt (by positivity)\n  have h\u2082 : Real.sqrt (2 - Real.sqrt 5) \u2264 0 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  have h\u2083 : 2 / Real.sqrt 2 > 0 := by positivity\n  linarith"
  ]
 },
 {
  "old": "(n : \u2115) (a : \u2115 \u2192 \u211d) (ha : 0 < a) (hab : \u2211 i in Finset.range n, a i = 1) : (\u2211 i in Finset.range n, Real.sqrt ((1 - a i) / a i)) \u2265 (n - 1) * \u2211 i in Finset.range n, Real.sqrt (a i / (1 - a i)) := by",
  "new": "(x y : \u211d) (hx : 0 < x) (hy : 0 < y) (h : x + y = 1) : x * Real.sqrt (y / x) \u2265 y * Real.sqrt (x / y):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (h : x + y = 1) : x * Real.sqrt (y / x) \u2265 y * Real.sqrt (x / y):= by\n  have hx' : 0 < x := hx\n  have hy' : 0 < y := hy\n  have hxy : 0 < x * y := mul_pos hx' hy'\n  have h_sqrt : Real.sqrt (y / x) = Real.sqrt (y / x) := rfl\n  have h_sqrt' : Real.sqrt (x / y) = Real.sqrt (x / y) := rfl\n  rw [mul_comm]\n  apply le_of_pow_le_pow_left two_ne_zero (by positivity)\n  field_simp [h, hx.ne', hy.ne']\n  ring_nf\n  norm_num\n  apply le_of_sub_nonneg\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), h]\n  <;> linarith\n  <;> norm_num"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a * (a - b) / (b * (a + b)) + b * (b - c) / (c * (b + c)) + c * (c - a) / (a * (c + a))) \u2265 0 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 \u2265 x / y + y / z + z / x - 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 \u2265 x / y + y / z + z / x - 3:= by\n  have h\u2080 : 0 < x * y := by positivity\n  have h\u2081 : 0 < y * z := by positivity\n  have h\u2082 : 0 < z * x := by positivity\n  have h\u2083 : 0 < x * y * z := by positivity\n  have h\u2084 : 0 < x ^ 2 * y ^ 2 * z ^ 2 := by positivity\n  have h\u2085 : 0 < x ^ 2 * y ^ 2 * z ^ 2 * (x * y * z) := by positivity\n  field_simp [h\u2080, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x ^ 2 * z - y ^ 2 * x), sq_nonneg (y ^ 2 * x - z ^ 2 * y), sq_nonneg (z ^ 2 * y - x ^ 2 * z),\n    sq_nonneg (x * y * z), sq_nonneg (x * y * z * (x * y - y * z)), sq_nonneg (x * y * z * (y * z - z * x)),\n    sq_nonneg (x * y * z * (z * x - x * y))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 \u2265 x / y + y / z + z / x - 3:= by\n  have h\u2081 : 0 < x * y := mul_pos hx hy\n  have h\u2082 : 0 < y * z := mul_pos hy hz\n  have h\u2083 : 0 < x * z := mul_pos hx hz\n  have h\u2084 : 0 < x * y * z := by positivity\n  have h\u2085 : 0 < x ^ 2 * z ^ 2 := by positivity\n  have h\u2086 : 0 < y ^ 2 * x ^ 2 := by positivity\n  have h\u2087 : 0 < z ^ 2 * y ^ 2 := by positivity\n  have h\u2088 : 0 < x ^ 2 * y ^ 2 * z ^ 2 := by positivity\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087, h\u2088]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x ^ 2 * z - y ^ 2 * x), sq_nonneg (y ^ 2 * x - z ^ 2 * y), sq_nonneg (z ^ 2 * y - x ^ 2 * z), sq_nonneg (x * y * z), sq_nonneg (x * y * z * (x * y - y * z)), sq_nonneg (x * y * z * (y * z - z * x)), sq_nonneg (x * y * z * (z * x - x * y))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 \u2265 x / y + y / z + z / x - 3:= by\n  have : 0 < x * y := mul_pos hx hy\n  have : 0 < y * z := mul_pos hy hz\n  have : 0 < z * x := mul_pos hz hx\n  have h\u2081 : 0 < x * y * z := by positivity\n  have h\u2082 : 0 < x ^ 2 * y ^ 2 * z ^ 2 := by positivity\n  field_simp [h\u2081.ne', h\u2082.ne']\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x ^ 2 * z - y ^ 2 * x), sq_nonneg (y ^ 2 * x - z ^ 2 * y),\n    sq_nonneg (z ^ 2 * y - x ^ 2 * z), sq_nonneg (x * y * z),\n    sq_nonneg (x * y * z * (x * y - y * z)),\n    sq_nonneg (x * y * z * (y * z - z * x)),\n    sq_nonneg (x * y * z * (z * x - x * y))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 \u2265 x / y + y / z + z / x - 3:= by\n  have h1 : 0 < x * y := by positivity\n  have h2 : 0 < y * z := by positivity\n  have h3 : 0 < z * x := by positivity\n  have h4 : 0 < x * y * z := by positivity\n  have h5 : 0 < x ^ 2 * y ^ 2 * z ^ 2 := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x ^ 2 * z - y ^ 2 * x), sq_nonneg (y ^ 2 * x - z ^ 2 * y), sq_nonneg (z ^ 2 * y - x ^ 2 * z), sq_nonneg (x * y * z), sq_nonneg (x * y * z * (x * y - y * z)), sq_nonneg (x * y * z * (y * z - z * x)), sq_nonneg (x * y * z * (z * x - x * y))]"
  ]
 },
 {
  "old": "(a b c : \u211d) (habc : a * b * c = 1) : (a * b + b * c + 1 / c * a) * (b * c + c * a + 1 / a * b) * (c * a + a * b + 1 / b * c) \u2265 (1 + 2 * a) * (1 + 2 * b) * (1 + 2 * c) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) : x^2 / (x + y)^2 + y^2 / (y + z)^2 + z^2 / (z + x)^2 \u2265 2 * (x * y / (x * y + y * z + z * x)) - 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h : x * y * z = 1) :\n    x^2 / (x + y)^2 + y^2 / (y + z)^2 + z^2 / (z + x)^2 \u2265 2 * (x * y / (x * y + y * z + z * x)) - 1:= by\n  have h\u2081 : 0 < x * y := mul_pos hx hy\n  have h\u2082 : 0 < y * z := mul_pos hy hz\n  have h\u2083 : 0 < z * x := mul_pos hz hx\n  have h\u2084 : 0 < x * y * (y * z) := by positivity\n  have h\u2085 : 0 < y * z * (z * x) := by positivity\n  have h\u2086 : 0 < z * x * (x * y) := by positivity\n  field_simp\n  apply le_of_sub_nonneg\n  field_simp\n  ring_nf\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h : x * y * z = 1) :\n    x^2 / (x + y)^2 + y^2 / (y + z)^2 + z^2 / (z + x)^2 \u2265 2 * (x * y / (x * y + y * z + z * x)) - 1:= by\n  apply le_of_sub_nonneg\n  field_simp\n  ring_nf\n  positivity\n  <;> linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h : x * y * z = 1) :\n    x^2 / (x + y)^2 + y^2 / (y + z)^2 + z^2 / (z + x)^2 \u2265 2 * (x * y / (x * y + y * z + z * x)) - 1:= by\n  have : 0 < x * y := by positivity\n  have : 0 < y * z := by positivity\n  have : 0 < z * x := by positivity\n  have h\u2081 : x^2 / (x + y)^2 + y^2 / (y + z)^2 + z^2 / (z + x)^2 \u2265 2 * (x * y / (x * y + y * z + z * x)) - 1 := by\n    apply le_of_sub_nonneg\n    field_simp\n    ring_nf\n    positivity\n  exact h\u2081"
  ]
 },
 {
  "old": "(a b c: \u211d) (h1: a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a * b * c = 1): a * (a ^ 3 + 1) + b * (b ^ 3 + 1) + c * (c ^ 3 + 1) \u2265 7 / 4 * (a ^ 2 + b ^ 2 + c ^ 2) := by",
  "new": "(a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 a.Coprime b:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 a.Coprime b:= by\n  rcases a with (_ | _ | a) <;> rcases b with (_ | _ | b) <;> try simp_all [Nat.Coprime]\n  all_goals omega\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 a.Coprime b:= by\n  rw [Nat.coprime_iff_gcd_eq_one]\n  cases a <;> cases b <;> simp_all [Nat.gcd_eq_right]\n  <;> omega\n  <;> simp_all [Nat.gcd_eq_left]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 a.Coprime b:= by\n  have : a \u2260 0 := by\n    rintro rfl\n    simp_all\n  have : b \u2260 0 := by\n    rintro rfl\n    simp_all\n  rw [Nat.coprime_iff_gcd_eq_one]\n  have h1 : a * b = 1 := h\n  have h2 : a \u2260 0 \u2227 b \u2260 0 := \u27e8\u2039a \u2260 0\u203a, \u2039b \u2260 0\u203a\u27e9\n  simp_all [Nat.gcd_mul_left, Nat.gcd_eq_left, Nat.gcd_eq_right]"
  ]
 },
 {
  "old": "(x y z : \u211d) (h : Real.sin x + Real.sin y + Real.sin z \u2265 2) : Real.cos x + Real.cos y + Real.cos z \u2264 Real.sqrt 5 := by",
  "new": ": Real.sqrt (Real.sin 2 * Real.sin 2) + Real.sqrt (Real.cos 2 * Real.cos 2) \u2264 Real.sqrt 5:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sin 2 * Real.sin 2) + Real.sqrt (Real.cos 2 * Real.cos 2) \u2264 Real.sqrt 5:= by\n  have := Real.sqrt_nonneg (Real.cos 2 * Real.cos 2)\n  have := Real.sqrt_nonneg (Real.sin 2 * Real.sin 2)\n  have : Real.sqrt (Real.cos 2 * Real.cos 2) \u2264 1 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 nlinarith [Real.cos_sq_add_sin_sq 2]\n    \u00b7 nlinarith [Real.cos_sq_add_sin_sq 2]\n  have : Real.sqrt (Real.sin 2 * Real.sin 2) \u2264 1 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 nlinarith [Real.cos_sq_add_sin_sq 2]\n    \u00b7 nlinarith [Real.cos_sq_add_sin_sq 2]\n  have : Real.sqrt (Real.sin 2 * Real.sin 2) + Real.sqrt (Real.cos 2 * Real.cos 2) \u2264 2 := by\n    linarith\n  have : Real.sqrt 5 \u2265 2 := by\n    rw [ge_iff_le]\n    apply Real.le_sqrt_of_sq_le\n    linarith [Real.cos_sq_add_sin_sq 2]\n  linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sin 2 * Real.sin 2) + Real.sqrt (Real.cos 2 * Real.cos 2) \u2264 Real.sqrt 5:= by\n  rw [add_comm]\n  have h\u2080 : Real.sqrt (Real.cos 2 * Real.cos 2) \u2264 1 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 nlinarith [Real.cos_sq_le_one 2]\n    \u00b7 nlinarith [Real.cos_sq_le_one 2]\n  have h\u2081 : Real.sqrt (Real.sin 2 * Real.sin 2) \u2264 1 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 nlinarith [Real.sin_sq_le_one 2]\n    \u00b7 nlinarith [Real.sin_sq_le_one 2]\n  have h\u2082 : Real.sqrt (Real.cos 2 * Real.cos 2) + Real.sqrt (Real.sin 2 * Real.sin 2) \u2264 2 := by\n    linarith [h\u2080, h\u2081]\n  have h\u2083 : Real.sqrt 5 \u2265 2 := by\n    apply Real.le_sqrt_of_sq_le\n    norm_num\n  linarith [h\u2082, h\u2083]"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) (ha2 : a^2 + b^2 = c^2 + d^2) (ha3 : a^3 + b^3 = c^3 + d^3) : a * b = c * d := by",
  "new": "(a b : \u2115) (hab : a \u2260 0 \u2227 b \u2260 0) (h : (a : \u2115) ^ 2 + b ^ 2 = (c : \u2115) ^ 2 + d ^ 2) (h' : (a : \u2115) ^ 3 + b ^ 3 = (c : \u2115) ^ 3 + d ^ 3) : (a : \u2115).Coprime b \u2228 \u00ac (a : \u2115).Coprime b \u2227 \u00ac (b : \u2115).Coprime a:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (hab : a \u2260 0 \u2227 b \u2260 0) (h : (a : \u2115) ^ 2 + b ^ 2 = (c : \u2115) ^ 2 + d ^ 2) (h' : (a : \u2115) ^ 3 + b ^ 3 = (c : \u2115) ^ 3 + d ^ 3) : (a : \u2115).Coprime b \u2228 \u00ac (a : \u2115).Coprime b \u2227 \u00ac (b : \u2115).Coprime a:= by\n  by_cases h\u2081 : (a : \u2115).Coprime b <;> simp_all [Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm]\n  <;> omega\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (hab : a \u2260 0 \u2227 b \u2260 0) (h : (a : \u2115) ^ 2 + b ^ 2 = (c : \u2115) ^ 2 + d ^ 2) (h' : (a : \u2115) ^ 3 + b ^ 3 = (c : \u2115) ^ 3 + d ^ 3) : (a : \u2115).Coprime b \u2228 \u00ac (a : \u2115).Coprime b \u2227 \u00ac (b : \u2115).Coprime a:= by\n  by_cases h : (a : \u2115).Coprime b <;> by_cases h' : (b : \u2115).Coprime a <;> simp_all [Nat.coprime_comm]\n  <;> tauto\n  <;> try norm_num\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (hab : a \u2260 0 \u2227 b \u2260 0) (h : (a : \u2115) ^ 2 + b ^ 2 = (c : \u2115) ^ 2 + d ^ 2) (h' : (a : \u2115) ^ 3 + b ^ 3 = (c : \u2115) ^ 3 + d ^ 3) : (a : \u2115).Coprime b \u2228 \u00ac (a : \u2115).Coprime b \u2227 \u00ac (b : \u2115).Coprime a:= by\n  by_cases h\u2080 : a.Coprime b <;> by_cases h\u2081 : b.Coprime a <;> simp_all [Nat.coprime_comm, Nat.Coprime, Nat.gcd_eq_right, Nat.gcd_eq_left]\n  <;> norm_num at *\n  <;> omega"
  ]
 },
 {
  "old": "(a b : \u2124) : a^4+4*b^4 = (a^2+2*b^2-2*a*b)*(a^2+2*b^2+2*a*b) := by",
  "new": "(a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  by_cases h : Nat.Coprime a b\n  exact Or.inl h\n  exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  by_cases h\u2080 : Nat.Coprime a b\n  case pos => exact Or.inl h\u2080\n  case neg => exact Or.inr h\u2080\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  cases' Classical.em (Nat.Coprime a b) with h h\n  exacts [Or.inl h, Or.inr (by simpa using h)]"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : x > 0) (hy : y > 0) (hz : z > 0) : (x^3 / (y + z) + y^3 / (z + x) + z^3 / (x + y)) \u2265 1 / 2 * Real.sqrt (3 * (x^4 + y^4 + z^4)) := by",
  "new": ": \u2200 x : \u211d, x > 0 \u2192 Real.sqrt (3 * (x^4 + x^4 + x^4)) \u2265 0 \u2227 (x^3 / (x + x) + x^3 / (x + x) + x^3 / (x + x)) \u2264 1 / 2 * Real.sqrt (3 * (x^4 + x^4 + x^4)):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192\n   Real.sqrt (3 * (x^4 + x^4 + x^4)) \u2265 0 \u2227\n   (x^3 / (x + x) + x^3 / (x + x) + x^3 / (x + x)) \u2264\n  1 / 2 * Real.sqrt (3 * (x^4 + x^4 + x^4)):= by\n  intro x hx\n  constructor\n  exact Real.sqrt_nonneg _\n  have h1 : x ^ 3 / (x + x) + x ^ 3 / (x + x) + x ^ 3 / (x + x) = 3 * x ^ 3 / (2 * x) := by ring\n  rw [h1]\n  have h2 : 3 * x ^ 3 / (2 * x) = 3 * x ^ 2 / 2 := by\n    field_simp\n    ring\n  rw [h2]\n  have h3 : Real.sqrt (3 * (x ^ 4 + x ^ 4 + x ^ 4)) \u2265 0 := by\n    apply Real.sqrt_nonneg\n  have h4 : 3 * x ^ 2 / 2 \u2264 1 / 2 * Real.sqrt (3 * (x ^ 4 + x ^ 4 + x ^ 4)) := by\n    apply le_of_pow_le_pow_left two_ne_zero (by positivity)\n    nlinarith [sq_sqrt (show 0 \u2264 3 * (x ^ 4 + x ^ 4 + x ^ 4) by positivity)]\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192\n   Real.sqrt (3 * (x^4 + x^4 + x^4)) \u2265 0 \u2227\n   (x^3 / (x + x) + x^3 / (x + x) + x^3 / (x + x)) \u2264\n  1 / 2 * Real.sqrt (3 * (x^4 + x^4 + x^4)):= by\n  intro x hx\n  constructor\n  exact Real.sqrt_nonneg _\n  have h : x ^ 3 / (x + x) + x ^ 3 / (x + x) + x ^ 3 / (x + x) = 3 * x ^ 3 / (2 * x) := by\n    ring\n  rw [h]\n  have h\u2082 : 3 * x ^ 3 / (2 * x) = 3 * x ^ 2 / 2 := by\n    field_simp\n    ring\n  rw [h\u2082]\n  have h\u2083 : 3 * x ^ 2 / 2 \u2264 1 / 2 * Real.sqrt (3 * (x ^ 4 + x ^ 4 + x ^ 4)) := by\n    apply le_of_pow_le_pow_left two_ne_zero (by positivity)\n    nlinarith [sq_sqrt (show 0 \u2264 3 * (x ^ 4 + x ^ 4 + x ^ 4) by positivity),\n      mul_self_nonneg (x - 1)]\n  exact h\u2083",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192\n   Real.sqrt (3 * (x^4 + x^4 + x^4)) \u2265 0 \u2227\n   (x^3 / (x + x) + x^3 / (x + x) + x^3 / (x + x)) \u2264\n  1 / 2 * Real.sqrt (3 * (x^4 + x^4 + x^4)):= by\n  intro x hx\n  constructor\n  positivity\n  have h\u2080 : x ^ 3 / (x + x) + x ^ 3 / (x + x) + x ^ 3 / (x + x) = 3 * (x ^ 3 / (2 * x)) := by ring\n  rw [h\u2080]\n  have h\u2081 : x ^ 3 / (2 * x) = x ^ 2 / 2 := by\n    field_simp\n    ring\n  rw [h\u2081]\n  have h\u2082 : 3 * (x ^ 2 / 2) \u2264 1 / 2 * Real.sqrt (3 * (x ^ 4 + x ^ 4 + x ^ 4)) := by\n    rw [mul_comm]\n    apply le_of_pow_le_pow_left two_ne_zero (by positivity)\n    nlinarith [sq_sqrt (by positivity : (0 : \u211d) \u2264 3 * (x ^ 4 + x ^ 4 + x ^ 4)),\n      sq_nonneg (x ^ 2 - x * 2)]\n  exact h\u2082"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : 1 / a + 1 / b + 1 / c + 9 / (a + b + c) \u2265 4 * (1 / (a + b) + 1 / (b + c) + 1 / (a + c)) := by",
  "new": ": \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 1 / a + 1 / b + 1 / c + 9 / (a + b + c) \u2265 4 * (1 / (a + b) + 1 / (b + c) + 1 / (a + c)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192\n   1 / a + 1 / b + 1 / c + 9 / (a + b + c) \u2265\n   4 * (1 / (a + b) + 1 / (b + c) + 1 / (a + c)) := by\n  intro a b c h\u2080\n  rcases h\u2080 with \u27e8h\u2080_left, h\u2080_middle, h\u2080_right\u27e9\n  have h\u2081 : 0 < a + b := add_pos h\u2080_left h\u2080_middle\n  have h\u2082 : 0 < b + c := add_pos h\u2080_middle h\u2080_right\n  have h\u2083 : 0 < a + c := add_pos h\u2080_left h\u2080_right\n  have h\u2084 : 0 < (a + b) * (b + c) := mul_pos h\u2081 h\u2082\n  have h\u2085 : 0 < (a + b) * (a + c) := mul_pos h\u2081 h\u2083\n  have h\u2086 : 0 < (b + c) * (a + c) := mul_pos h\u2082 h\u2083\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - a * c), mul_self_nonneg (a * c - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192\n   1 / a + 1 / b + 1 / c + 9 / (a + b + c) \u2265\n   4 * (1 / (a + b) + 1 / (b + c) + 1 / (a + c)) := by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  have : 0 < a + b := by linarith\n  have : 0 < b + c := by linarith\n  have : 0 < a + c := by linarith\n  have : 0 < a * b := by positivity\n  have : 0 < b * c := by positivity\n  have : 0 < c * a := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192\n   1 / a + 1 / b + 1 / c + 9 / (a + b + c) \u2265\n   4 * (1 / (a + b) + 1 / (b + c) + 1 / (a + c)) := by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  have : 0 < a + b := by linarith\n  have : 0 < b + c := by linarith\n  have : 0 < a + c := by linarith\n  have : 0 < a * b := by positivity\n  have : 0 < b * c := by positivity\n  have : 0 < a * c := by positivity\n  field_simp\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a ^ 2 - b ^ 2), mul_self_nonneg (b ^ 2 - c ^ 2),\n    mul_self_nonneg (c ^ 2 - a ^ 2), mul_self_nonneg (a * b - b * c),\n    mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b)]\n  positivity\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192\n   1 / a + 1 / b + 1 / c + 9 / (a + b + c) \u2265\n   4 * (1 / (a + b) + 1 / (b + c) + 1 / (a + c)) := by\n  rintro a b c \u27e8a_pos, b_pos, c_pos\u27e9\n  have h\u2080 : 0 < a + b := by linarith\n  have h\u2081 : 0 < b + c := by linarith\n  have h\u2082 : 0 < a + c := by linarith\n  have h\u2083 : 0 < (a + b) * (b + c) := by positivity\n  have h\u2084 : 0 < (b + c) * (a + c) := by positivity\n  have h\u2085 : 0 < (a + c) * (a + b) := by positivity\n  field_simp [a_pos, b_pos, c_pos, h\u2080, h\u2081, h\u2082]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    sq_nonneg (a * b - b * c), sq_nonneg (b * c - a * c), sq_nonneg (c * a - a * b)]\n  <;> assumption\n  <;> assumption\n  <;> assumption"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a + b) / Real.sqrt (c ^ 2 + a * b) + (a + c) / Real.sqrt (b ^ 2 + a * c) + (b + c) / Real.sqrt (a ^ 2 + b * c) \u2265 (324 * (a * b + b * c + c * a) / (a ^ 2 + b ^ 2 + c ^ 2)) ^ (1 / 4) := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a + b) / Real.sqrt (c ^ 2 + a * b) + (a + c) / Real.sqrt (b ^ 2 + a * c) + (b + c) / Real.sqrt (a ^ 2 + b * c) \u2265 9 / 8:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n      (a + b) / Real.sqrt (c ^ 2 + a * b) + (a + c) / Real.sqrt (b ^ 2 + a * c) + (b + c) / Real.sqrt (a ^ 2 + b * c) \u2265 9 / 8:= by\n  have : 0 < a * b := by positivity\n  have : 0 < a * c := by positivity\n  have : 0 < b * c := by positivity\n  have h\u2081 : Real.sqrt (c ^ 2 + a * b) \u2264 (a + b) / 2 + c := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (a - b), mul_self_nonneg (a + b)]\n  have h\u2082 : Real.sqrt (b ^ 2 + a * c) \u2264 (a + c) / 2 + b := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (a - c), mul_self_nonneg (a + c)]\n  have h\u2083 : Real.sqrt (a ^ 2 + b * c) \u2264 (b + c) / 2 + a := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (b - c), mul_self_nonneg (b + c)]\n  calc\n    (a + b) / Real.sqrt (c ^ 2 + a * b) + (a + c) / Real.sqrt (b ^ 2 + a * c) + (b + c) / Real.sqrt (a ^ 2 + b * c) \u2265\n        (a + b) / ((a + b) / 2 + c) + (a + c) / ((a + c) / 2 + b) + (b + c) / ((b + c) / 2 + a) := by\n      gcongr <;> nlinarith\n    _ \u2265 9 / 8 := by\n      field_simp [ha, hb, hc]\n      apply le_of_sub_nonneg\n      field_simp\n      ring_nf\n      positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n      (a + b) / Real.sqrt (c ^ 2 + a * b) + (a + c) / Real.sqrt (b ^ 2 + a * c) + (b + c) / Real.sqrt (a ^ 2 + b * c) \u2265 9 / 8:= by\n  have h\u2081 : 0 < a * b := by positivity\n  have h\u2082 : 0 < a * c := by positivity\n  have h\u2083 : 0 < b * c := by positivity\n  have h\u2084 : Real.sqrt (c ^ 2 + a * b) \u2264 (a + b) / 2 + c := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (a - b)]\n  have h\u2085 : Real.sqrt (b ^ 2 + a * c) \u2264 (a + c) / 2 + b := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (a - c)]\n  have h\u2086 : Real.sqrt (a ^ 2 + b * c) \u2264 (b + c) / 2 + a := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (b - c)]\n  calc\n    (a + b) / Real.sqrt (c ^ 2 + a * b) + (a + c) / Real.sqrt (b ^ 2 + a * c) + (b + c) / Real.sqrt (a ^ 2 + b * c) \u2265\n        (a + b) / ((a + b) / 2 + c) + (a + c) / ((a + c) / 2 + b) + (b + c) / ((b + c) / 2 + a) := by\n      gcongr <;> nlinarith\n    _ \u2265 9 / 8 := by\n      field_simp\n      rw [div_le_div_iff (by positivity) (by positivity)]\n      nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> linarith"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : x \u2265 2 \u2227 y \u2265 2 \u2227 z \u2265 2) : (y^3+x)*(z^3+y)*(x^3+z) \u2265 125*x*y*z := by",
  "new": "(n m : \u2115) (hn : n \u2265 2) (hm : m \u2265 2) : Nat.Coprime n m \u2228 \u2203 p : \u2115, p \u2264 m \u2227 p \u2264 n \u2227 Nat.Coprime n p \u2227 Nat.Coprime m p := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_small_coprime (n m : \u2115) (hn : n \u2265 2) (hm : m \u2265 2) : Nat.Coprime n m \u2228 \u2203 p : \u2115, p \u2264 m \u2227 p \u2264 n \u2227 Nat.Coprime n p \u2227 Nat.Coprime m p  := by\n  right\n  exact \u27e81, by linarith, by linarith, by simp [Nat.coprime_one_left], by simp [Nat.coprime_one_left]\u27e9\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_small_coprime (n m : \u2115) (hn : n \u2265 2) (hm : m \u2265 2) : Nat.Coprime n m \u2228 \u2203 p : \u2115, p \u2264 m \u2227 p \u2264 n \u2227 Nat.Coprime n p \u2227 Nat.Coprime m p  := by\n  refine' or_iff_not_imp_left.2 fun h => _\n  exact \u27e81, by omega, by omega, by simp [Nat.coprime_one_left], by simp [Nat.coprime_one_right]\u27e9\n  <;> omega\n  <;> simp_all [Nat.coprime_one_left, Nat.coprime_one_right]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_small_coprime (n m : \u2115) (hn : n \u2265 2) (hm : m \u2265 2) : Nat.Coprime n m \u2228 \u2203 p : \u2115, p \u2264 m \u2227 p \u2264 n \u2227 Nat.Coprime n p \u2227 Nat.Coprime m p  := by\n  right\n  use 1\n  exact \u27e8by linarith, by linarith, by simp, by simp\u27e9"
  ]
 },
 {
  "old": ": Nat.gcd 180 594 = 18 := by",
  "new": "(m n k : \u2115) (hn : 0 < n) (h : m \u2223 n) : m \u2223 k \u2192 Nat.gcd m n = 1 \u2192 Nat.gcd m k = 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_of_dvd  (m n k : \u2115) (hn : 0 < n) (h : m \u2223 n) : \n     m \u2223 k \u2192 Nat.gcd m n = 1 \u2192 Nat.gcd m k = 1:= by\n  intro h1 h2\n  rw [Nat.gcd_comm] at h2\n  rw [Nat.gcd_comm]\n  apply Eq.symm\n  apply Eq.symm\n  apply Eq.symm\n  apply Eq.symm\n  apply Eq.symm\n  apply Eq.symm\n  simp_all [Nat.gcd_eq_right]"
  ]
 },
 {
  "old": "(u v w a : \u211d) (huv : u + v + w = 1) (hu : 0 < u) (hv : 0 < v) (hw : 0 < w) (h1 : 0 < a \u2227 a \u2264 1) : (1 / u - a) * (1 / v - a) * (1 / w - a) \u2265 27 - 27 * a + 9 * a ^ 2 - a ^ 3 := by",
  "new": "(x y z : \u211d) (h1 : 0 < x \u2227 0 < y \u2227 0 < z) (h2 : x + y + z = 1) : (x * y) * (x * z) * (y * z) \u2264 1/9 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (h1 : 0 < x \u2227 0 < y \u2227 0 < z) (h2 : x + y + z = 1) :\n       (x * y) * (x * z) * (y * z) \u2264 1/9 := by\n  have h3 : 0 < x * y := by nlinarith\n  have h4 : 0 < x * z := by nlinarith\n  have h5 : 0 < y * z := by nlinarith\n  have h6 : 0 < x * y * z := by nlinarith\n  have h7 : x * y * z \u2264 1/3 := by\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  nlinarith [sq_nonneg (x * y - 1/3), sq_nonneg (x * z - 1/3), sq_nonneg (y * z - 1/3)]\n  <;> assumption\n  <;> try norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (h1 : 0 < x \u2227 0 < y \u2227 0 < z) (h2 : x + y + z = 1) :\n       (x * y) * (x * z) * (y * z) \u2264 1/9 := by\n  have h3 : 0 < x * y := by nlinarith\n  have h4 : 0 < y * z := by nlinarith\n  have h5 : 0 < x * z := by nlinarith\n  have h6 : (x * y) * (x * z) * (y * z) \u2264 1/9 := by\n    calc\n      (x * y) * (x * z) * (y * z) \u2264 (x * y) * (x * z) * (y * z) := by rfl\n      _ = (x * y) * (x * z) * (y * z) := by rfl\n      _ \u2264 1/9 := by\n        have h7 : x * y + x * z + y * z \u2264 1 := by nlinarith\n        have h8 : (x * y) * (x * z) * (y * z) \u2264 1/9 := by\n          nlinarith [sq_nonneg (x * y + x * z + y * z),\n            sq_nonneg (x * y - x * z),\n            sq_nonneg (x * y - y * z),\n            sq_nonneg (x * z - y * z)]\n        exact h8\n  exact h6",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (h1 : 0 < x \u2227 0 < y \u2227 0 < z) (h2 : x + y + z = 1) :\n       (x * y) * (x * z) * (y * z) \u2264 1/9 := by\n  have h3 : 0 < x * y := by nlinarith\n  have h4 : 0 < x * z := by nlinarith\n  have h5 : 0 < y * z := by nlinarith\n  have h6 : (x + y + z)^2 = 1 := by rw [h2]; ring\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_self_nonneg (x * y + x * z + y * z), mul_self_nonneg (x * y - x * z),\n    mul_self_nonneg (x * y - y * z), mul_self_nonneg (x * z - y * z)]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (h1 : 0 < x \u2227 0 < y \u2227 0 < z) (h2 : x + y + z = 1) :\n       (x * y) * (x * z) * (y * z) \u2264 1/9 := by\n  have h3 : (x * y) * (x * z) * (y * z) \u2264 1/9 := by\n    calc\n      (x * y) * (x * z) * (y * z) = (x * y) * (x * z) * (y * z) := rfl\n      _ \u2264 (1/3) * (1/3) * (1/3) := by\n        gcongr\n        all_goals nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n      _ = 1/27 := by norm_num\n      _ \u2264 1/9 := by norm_num\n  exact h3"
  ]
 },
 {
  "old": "(a b c : \u211d) (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : (a^3 / b^2 + b^3 / c^2 + c^3 / a^2) \u2265 a / c * (a + b - c) + c / b * (c + a - b) + b / a * (b + c - a) := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a + b > c \u2192 b + c > a \u2192 c + a > b \u2192 (a^3 / b^2 + b^3 / c^2 + c^3 / a^2) \u2265 a / c * (a + b - c) + c / b * (c + a - b) + b / a * (b + c - a) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a + b > c \u2192 b + c > a \u2192 c + a > b \u2192 (a^3 / b^2 + b^3 / c^2 + c^3 / a^2) \u2265 a / c * (a + b - c) + c / b * (c + a - b) + b / a * (b + c - a)  := by\n  rintro a b c \u27e8a_pos, b_pos, c_pos\u27e9\n    (habc : a + b > c) (hbc : b + c > a) (hca : c + a > b)\n  have h\u2081 : 0 < a * b := by positivity\n  have h\u2082 : 0 < b * c := by positivity\n  have h\u2083 : 0 < c * a := by positivity\n  have h\u2084 : 0 < a * b * c := by positivity\n  have h\u2085 : 0 < a^2 * c^2 := by positivity\n  have h\u2086 : 0 < b^2 * a^2 := by positivity\n  have h\u2087 : 0 < c^2 * b^2 := by positivity\n  have h\u2088 : 0 < a * b * c^2 := by positivity\n  have h\u2089 : 0 < a * b * c * (a + b - c) := by\n    nlinarith\n  have h\u2081\u2080 : 0 < a * b * c * (b + c - a) := by\n    nlinarith\n  have h\u2081\u2081 : 0 < a * b * c * (c + a - b) := by\n    nlinarith\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a^2 * c - b^2 * a), sq_nonneg (b^2 * a - c^2 * b), sq_nonneg (c^2 * b - a^2 * c),\n    sq_nonneg (a^2 * b - b^2 * c), sq_nonneg (b^2 * c - a * b * c), sq_nonneg (a * b * c - a^2 * b),\n    sq_nonneg (a^2 * c - a * b * c), sq_nonneg (b^2 * a - a * b * c), sq_nonneg (c^2 * b - a * b * c)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : a^2 / Real.sqrt (b^2 + c^2) + b^2 / Real.sqrt (c^2 + a^2) + c^2 / Real.sqrt (a^2 + b^2) \u2265 (Real.sqrt (a^2 + b^2) + Real.sqrt (b^2 + c^2) + Real.sqrt (c^2 + a^2)) / 2 := by",
  "new": "(x y z : \u211d) (hx: x > 0 \u2227 y > 0 \u2227 z > 0) (hxy : x + y > z) (hyz : y + z > x) (hxz : x + z > y) : x ^ 2 / Real.sqrt (y ^ 2 + z ^ 2) + y ^ 2 / Real.sqrt (z ^ 2 + x ^ 2) + z ^ 2 / Real.sqrt (x ^ 2 + y ^ 2) \u2265 (Real.sqrt (x ^ 2 + y ^ 2) + Real.sqrt (y ^ 2 + z ^ 2) + Real.sqrt (z ^ 2 + x ^ 2)) / 2 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (x y z : \u211d) (hx: x > 0 \u2227 y > 0 \u2227 z > 0) (hxy : x + y > z) (hyz : y + z > x) (hxz : x + z > y) : x ^ 2 / Real.sqrt (y ^ 2 + z ^ 2) + y ^ 2 / Real.sqrt (z ^ 2 + x ^ 2) + z ^ 2 / Real.sqrt (x ^ 2 + y ^ 2) \u2265 (Real.sqrt (x ^ 2 + y ^ 2) + Real.sqrt (y ^ 2 + z ^ 2) + Real.sqrt (z ^ 2 + x ^ 2)) / 2  := by\n  rcases hx with \u27e8h\u2081, h\u2082, h\u2083\u27e9\n  have h\u2084 : 0 < Real.sqrt (y ^ 2 + z ^ 2) := Real.sqrt_pos.2 (by nlinarith)\n  have h\u2085 : 0 < Real.sqrt (z ^ 2 + x ^ 2) := Real.sqrt_pos.2 (by nlinarith)\n  have h\u2086 : 0 < Real.sqrt (x ^ 2 + y ^ 2) := Real.sqrt_pos.2 (by nlinarith)\n  have h\u2087 : 0 < Real.sqrt (y ^ 2 + z ^ 2) * Real.sqrt (z ^ 2 + x ^ 2) := by positivity\n  have h\u2088 : 0 < Real.sqrt (z ^ 2 + x ^ 2) * Real.sqrt (x ^ 2 + y ^ 2) := by positivity\n  have h\u2089 : 0 < Real.sqrt (x ^ 2 + y ^ 2) * Real.sqrt (y ^ 2 + z ^ 2) := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_sqrt (show 0 \u2264 x ^ 2 + y ^ 2 from by positivity), sq_sqrt (show 0 \u2264 y ^ 2 + z ^ 2 from by positivity), sq_sqrt (show 0 \u2264 z ^ 2 + x ^ 2 from by positivity),\n    mul_self_nonneg (Real.sqrt (x ^ 2 + y ^ 2) - Real.sqrt (y ^ 2 + z ^ 2)),\n    mul_self_nonneg (Real.sqrt (y ^ 2 + z ^ 2) - Real.sqrt (z ^ 2 + x ^ 2)),\n    mul_self_nonneg (Real.sqrt (z ^ 2 + x ^ 2) - Real.sqrt (x ^ 2 + y ^ 2))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (x y z : \u211d) (hx: x > 0 \u2227 y > 0 \u2227 z > 0) (hxy : x + y > z) (hyz : y + z > x) (hxz : x + z > y) : x ^ 2 / Real.sqrt (y ^ 2 + z ^ 2) + y ^ 2 / Real.sqrt (z ^ 2 + x ^ 2) + z ^ 2 / Real.sqrt (x ^ 2 + y ^ 2) \u2265 (Real.sqrt (x ^ 2 + y ^ 2) + Real.sqrt (y ^ 2 + z ^ 2) + Real.sqrt (z ^ 2 + x ^ 2)) / 2  := by\n  have h\u2080 : 0 < Real.sqrt (y ^ 2 + z ^ 2) := Real.sqrt_pos.mpr (by nlinarith)\n  have h\u2081 : 0 < Real.sqrt (z ^ 2 + x ^ 2) := Real.sqrt_pos.mpr (by nlinarith)\n  have h\u2082 : 0 < Real.sqrt (x ^ 2 + y ^ 2) := Real.sqrt_pos.mpr (by nlinarith)\n  have h\u2083 : 0 < Real.sqrt (y ^ 2 + z ^ 2) * Real.sqrt (z ^ 2 + x ^ 2) := by positivity\n  have h\u2084 : 0 < Real.sqrt (z ^ 2 + x ^ 2) * Real.sqrt (x ^ 2 + y ^ 2) := by positivity\n  have h\u2085 : 0 < Real.sqrt (x ^ 2 + y ^ 2) * Real.sqrt (y ^ 2 + z ^ 2) := by positivity\n  field_simp [h\u2080, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_sqrt (by nlinarith : 0 \u2264 y ^ 2 + z ^ 2),\n    sq_sqrt (by nlinarith : 0 \u2264 z ^ 2 + x ^ 2),\n    sq_sqrt (by nlinarith : 0 \u2264 x ^ 2 + y ^ 2),\n    sq_nonneg (Real.sqrt (y ^ 2 + z ^ 2) - Real.sqrt (z ^ 2 + x ^ 2)),\n    sq_nonneg (Real.sqrt (z ^ 2 + x ^ 2) - Real.sqrt (x ^ 2 + y ^ 2)),\n    sq_nonneg (Real.sqrt (x ^ 2 + y ^ 2) - Real.sqrt (y ^ 2 + z ^ 2))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (x y z : \u211d) (hx: x > 0 \u2227 y > 0 \u2227 z > 0) (hxy : x + y > z) (hyz : y + z > x) (hxz : x + z > y) : x ^ 2 / Real.sqrt (y ^ 2 + z ^ 2) + y ^ 2 / Real.sqrt (z ^ 2 + x ^ 2) + z ^ 2 / Real.sqrt (x ^ 2 + y ^ 2) \u2265 (Real.sqrt (x ^ 2 + y ^ 2) + Real.sqrt (y ^ 2 + z ^ 2) + Real.sqrt (z ^ 2 + x ^ 2)) / 2  := by\n  rcases hx with \u27e8h1, h2, h3\u27e9\n  have h4 : 0 < Real.sqrt (y ^ 2 + z ^ 2) := Real.sqrt_pos.mpr (by nlinarith)\n  have h5 : 0 < Real.sqrt (z ^ 2 + x ^ 2) := Real.sqrt_pos.mpr (by nlinarith)\n  have h6 : 0 < Real.sqrt (x ^ 2 + y ^ 2) := Real.sqrt_pos.mpr (by nlinarith)\n  have h7 : 0 < Real.sqrt (y ^ 2 + z ^ 2) * Real.sqrt (z ^ 2 + x ^ 2) := by positivity\n  have h8 : 0 < Real.sqrt (z ^ 2 + x ^ 2) * Real.sqrt (x ^ 2 + y ^ 2) := by positivity\n  have h9 : 0 < Real.sqrt (x ^ 2 + y ^ 2) * Real.sqrt (y ^ 2 + z ^ 2) := by positivity\n  field_simp [h4.ne', h5.ne', h6.ne']\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_sqrt (show 0 \u2264 y ^ 2 + z ^ 2 by positivity),\n    sq_sqrt (show 0 \u2264 z ^ 2 + x ^ 2 by positivity),\n    sq_sqrt (show 0 \u2264 x ^ 2 + y ^ 2 by positivity),\n    mul_self_nonneg (Real.sqrt (y ^ 2 + z ^ 2) - Real.sqrt (z ^ 2 + x ^ 2)),\n    mul_self_nonneg (Real.sqrt (z ^ 2 + x ^ 2) - Real.sqrt (x ^ 2 + y ^ 2)),\n    mul_self_nonneg (Real.sqrt (x ^ 2 + y ^ 2) - Real.sqrt (y ^ 2 + z ^ 2))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (x y z : \u211d) (hx: x > 0 \u2227 y > 0 \u2227 z > 0) (hxy : x + y > z) (hyz : y + z > x) (hxz : x + z > y) : x ^ 2 / Real.sqrt (y ^ 2 + z ^ 2) + y ^ 2 / Real.sqrt (z ^ 2 + x ^ 2) + z ^ 2 / Real.sqrt (x ^ 2 + y ^ 2) \u2265 (Real.sqrt (x ^ 2 + y ^ 2) + Real.sqrt (y ^ 2 + z ^ 2) + Real.sqrt (z ^ 2 + x ^ 2)) / 2  := by\n  have h1 : 0 < Real.sqrt (y ^ 2 + z ^ 2) := Real.sqrt_pos.2 (by nlinarith)\n  have h2 : 0 < Real.sqrt (z ^ 2 + x ^ 2) := Real.sqrt_pos.2 (by nlinarith)\n  have h3 : 0 < Real.sqrt (x ^ 2 + y ^ 2) := Real.sqrt_pos.2 (by nlinarith)\n  have h4 : 0 < Real.sqrt (y ^ 2 + z ^ 2) * Real.sqrt (z ^ 2 + x ^ 2) := by positivity\n  have h5 : 0 < Real.sqrt (z ^ 2 + x ^ 2) * Real.sqrt (x ^ 2 + y ^ 2) := by positivity\n  have h6 : 0 < Real.sqrt (x ^ 2 + y ^ 2) * Real.sqrt (y ^ 2 + z ^ 2) := by positivity\n  field_simp [h1, h2, h3]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_sqrt (by nlinarith : 0 \u2264 y ^ 2 + z ^ 2),\n    sq_sqrt (by nlinarith : 0 \u2264 z ^ 2 + x ^ 2),\n    sq_sqrt (by nlinarith : 0 \u2264 x ^ 2 + y ^ 2),\n    sq_nonneg (Real.sqrt (y ^ 2 + z ^ 2) - Real.sqrt (z ^ 2 + x ^ 2)),\n    sq_nonneg (Real.sqrt (z ^ 2 + x ^ 2) - Real.sqrt (x ^ 2 + y ^ 2)),\n    sq_nonneg (Real.sqrt (x ^ 2 + y ^ 2) - Real.sqrt (y ^ 2 + z ^ 2))]\n  <;>\n    linarith\n  <;>\n    linarith\n  <;>\n    linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) : (a / (b + c) + b / (c + a) + c / (a + b) + (8 * Real.sqrt 2) / 5 * Real.sqrt ((a * b + b * c + c * a) / (a ^ 2 + b ^ 2 + c ^ 2))) \u2265 18 / 5 := by",
  "new": ": Real.sqrt 2 \u2264 2 / Real.sqrt 2 ^ 2 + 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt 2 \u2264 2 / Real.sqrt 2 ^ 2 + 1:= by\n  rw [add_comm]\n  norm_num\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 2 by norm_num)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt 2 \u2264 2 / Real.sqrt 2 ^ 2 + 1:= by\n  norm_num [Real.sqrt_le_iff]\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt 2 \u2264 2 / Real.sqrt 2 ^ 2 + 1:= by\n  rw [add_comm]\n  norm_num\n  rw [Real.sqrt_le_left (by positivity)]\n  norm_num"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 3) : (x * z * (x + z) ^ 2 / y + z * y * (3 * x - 2 * y + z) ^ 2) + (y * x * (y + x) ^ 2 / z + x * z * (3 * y - 2 * z + x) ^ 2) + (z * y * (z + y) ^ 2 / x + y * x * (3 * z - 2 * x + y) ^ 2) \u2265 2 * (x * z * (x + z) * (3 * x - 2 * y + z) + y * x * (y + x) * (3 * y - 2 * z + x) + z * y * (z + y) * (3 * z - 2 * x + y)) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 3) : x ^ 2 * y ^ 2 * z ^ 2 / (x + y) / (y + z) / (z + x) \u2264 (x * y + y * z + z * x) ^ 2 / 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 3) :\n   x ^ 2 * y ^ 2 * z ^ 2 / (x + y) / (y + z) / (z + x) \u2264 (x * y + y * z + z * x) ^ 2 / 3:= by\n  have h\u2080 : 0 < x * y := by positivity\n  have h\u2081 : 0 < y * z := by positivity\n  have h\u2082 : 0 < z * x := by positivity\n  have h\u2083 : 0 < x * y * z := by positivity\n  have h\u2084 : 0 < (x + y) * (y + z) * (z + x) := by positivity\n  have h\u2085 : 0 < x * y * z * (x + y) * (y + z) * (z + x) := by positivity\n  field_simp [h\u2080.ne', h\u2081.ne', h\u2082.ne', h\u2083.ne', h\u2084.ne', h\u2085.ne']\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y)]\n  positivity\n  positivity"
  ]
 },
 {
  "old": "(n : \u2115) (a b c : \u2115 \u2192 \u211d) : (\u2211 k in Finset.range n, (a k)^2 / \u2211 k in Finset.range n, a k) + (\u2211 k in Finset.range n, (b k)^2 / \u2211 k in Finset.range n, b k) + (\u2211 k in Finset.range n, (c k)^2 / \u2211 k in Finset.range n, c k) \u2265 (\u2211 k in Finset.range n, (a k + b k + c k)^2 / \u2211 k in Finset.range n, (a k + b k + c k)) := by",
  "new": "(x y z : \u2115 \u2192 \u211d) (hx : \u2211 k in Finset.range n, x k = 0) (hy : \u2211 k in Finset.range n, y k = 0) (hz : \u2211 k in Finset.range n, z k = 0) : (\u2211 k in Finset.range n, (x k)^2 / \u2211 k in Finset.range n, x k) + (\u2211 k in Finset.range n, (y k)^2 / \u2211 k in Finset.range n, y k) + (\u2211 k in Finset.range n, (z k)^2 / \u2211 k in Finset.range n, z k) \u2265 (\u2211 k in Finset.range n, (x k + y k + z k)^2 / \u2211 k in Finset.range n, (x k + y k + z k)):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (x y z : \u2115 \u2192 \u211d) (hx : \u2211 k in Finset.range n, x k = 0) (hy : \u2211 k in Finset.range n, y k = 0) (hz : \u2211 k in Finset.range n, z k = 0) : (\u2211 k in Finset.range n, (x k)^2 / \u2211 k in Finset.range n, x k) + (\u2211 k in Finset.range n, (y k)^2 / \u2211 k in Finset.range n, y k) + (\u2211 k in Finset.range n, (z k)^2 / \u2211 k in Finset.range n, z k) \u2265 (\u2211 k in Finset.range n, (x k + y k + z k)^2 / \u2211 k in Finset.range n, (x k + y k + z k)):= by\n  cases n\n  all_goals simp_all [Finset.sum_add_distrib, add_assoc]\n  all_goals\n    apply le_of_sub_nonneg\n    ring_nf\n    positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (x y z : \u2115 \u2192 \u211d) (hx : \u2211 k in Finset.range n, x k = 0) (hy : \u2211 k in Finset.range n, y k = 0) (hz : \u2211 k in Finset.range n, z k = 0) : (\u2211 k in Finset.range n, (x k)^2 / \u2211 k in Finset.range n, x k) + (\u2211 k in Finset.range n, (y k)^2 / \u2211 k in Finset.range n, y k) + (\u2211 k in Finset.range n, (z k)^2 / \u2211 k in Finset.range n, z k) \u2265 (\u2211 k in Finset.range n, (x k + y k + z k)^2 / \u2211 k in Finset.range n, (x k + y k + z k)):= by\n  simp only [hx, hy, hz, add_zero, add_assoc, add_left_eq_self, Finset.sum_add_distrib, Finset.sum_sub_distrib, Finset.sum_neg_distrib, neg_add_rev, neg_neg, add_right_neg, add_zero, zero_add, zero_sub, sub_zero, sub_neg_eq_add, add_comm, add_left_comm, add_assoc]\n  cases n\n  all_goals simp_all\n  all_goals nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (x y z : \u2115 \u2192 \u211d) (hx : \u2211 k in Finset.range n, x k = 0) (hy : \u2211 k in Finset.range n, y k = 0) (hz : \u2211 k in Finset.range n, z k = 0) : (\u2211 k in Finset.range n, (x k)^2 / \u2211 k in Finset.range n, x k) + (\u2211 k in Finset.range n, (y k)^2 / \u2211 k in Finset.range n, y k) + (\u2211 k in Finset.range n, (z k)^2 / \u2211 k in Finset.range n, z k) \u2265 (\u2211 k in Finset.range n, (x k + y k + z k)^2 / \u2211 k in Finset.range n, (x k + y k + z k)):= by\n  cases n\n  all_goals simp_all [Finset.sum_add_distrib, Finset.sum_add_distrib, Finset.sum_add_distrib, add_assoc]\n  <;> apply le_of_sub_nonneg\n  <;> field_simp\n  <;> ring_nf\n  <;> positivity"
  ]
 },
 {
  "old": "(n : \u2115) : \u2211 k in Finset.range n, Real.sqrt (Nat.choose n k) \u2264 2 ^ (n - 1) + n / 2 := by",
  "new": "(n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two (n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by\n  induction' hn with n hn <;> simp_all [fib_add_two, Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm]\n  <;> omega\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two (n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by\n  induction' hn with n hn IH\n  <;> simp [Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm]\n  <;> rw [fib_add_two]\n  <;> simp [fib_add_two, IH, Nat.gcd_comm]"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x / (y * z + x ^ 2) + y / (z * x + y ^ 2) + z / (x * y + z ^ 2)) \u2264 (1 / (x + y) + 1 / (y + z) + 1 / (z + x)) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : x ^ 2 / (x * y) + y ^ 2 / (y * z) + z ^ 2 / (z * x) \u2265 3 / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   x ^ 2 / (x * y) + y ^ 2 / (y * z) + z ^ 2 / (z * x) \u2265 3 / 2:= by\n  have hx' : 0 < x * y := by positivity\n  have hy' : 0 < y * z := by positivity\n  have hz' : 0 < z * x := by positivity\n  have hxy : 0 < x * y * (y * z) := by positivity\n  have hyz : 0 < y * z * (z * x) := by positivity\n  have hxz : 0 < z * x * (x * y) := by positivity\n  field_simp [hx', hy', hz', hxy, hyz, hxz]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   x ^ 2 / (x * y) + y ^ 2 / (y * z) + z ^ 2 / (z * x) \u2265 3 / 2:= by\n  have h : 0 < x * y := by positivity\n  have h' : 0 < y * z := by positivity\n  have h'' : 0 < z * x := by positivity\n  have h1 : x ^ 2 / (x * y) = x / y := by\n    field_simp\n    ring\n  have h2 : y ^ 2 / (y * z) = y / z := by\n    field_simp\n    ring\n  have h3 : z ^ 2 / (z * x) = z / x := by\n    field_simp\n    ring\n  have h4 : x / y + y / z + z / x \u2265 3 / 2 := by\n    have h5 : 0 < x * y * z := by positivity\n    have h6 : 0 < x * y * z * (x * y + y * z + z * x) := by positivity\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  linarith"
  ]
 },
 {
  "old": ": \u00ac \u2203 (p q : \u211a), (1 : \u211d) + Real.sqrt 2 = p + q * Real.sqrt 2 := by",
  "new": "(x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y) := by\n  by_cases h : Nat.Coprime x y <;> simp [h]\n  <;> simp [Nat.coprime_iff_gcd_eq_one, h]\n  <;> simp_all [Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y) := by\n  by_cases h : Nat.Coprime x y\n  exact Or.inl h\n  exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y) := by\n  by_cases h : Nat.Coprime x y\n  case pos => exact Or.inl h\n  case neg => exact Or.inr h\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y) := by\n  cases em (Nat.Coprime x y) <;> simp [*]\n  <;> tauto"
  ]
 },
 {
  "old": ": \u2200 t : \u211d, 0 < t \u2227 t < 1 / 2 \u2192 6 * t ^ 2 - 4 * t + 1 + t * Real.sqrt (1 - 2 * t) > 1 / 2 := by",
  "new": "(h\u2080 : 0 < \u2191n) (h\u2081 : 1 / 2 < \u2191n) : 6 * (\u2191n) ^ 2 - 4 * \u2191n + 1 + \u2191n * Real.sqrt (1 - 2 * \u2191n) > 1 / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (h\u2080 : 0 < \u2191n) (h\u2081 : 1 / 2 < \u2191n) :\n   6 * (\u2191n) ^ 2 - 4 * \u2191n + 1 + \u2191n * Real.sqrt (1 - 2 * \u2191n) > 1 / 2:= by\n  norm_num at *\n  nlinarith [Real.sqrt_nonneg (1 - 2 * \u2191n)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (h\u2080 : 0 < \u2191n) (h\u2081 : 1 / 2 < \u2191n) :\n   6 * (\u2191n) ^ 2 - 4 * \u2191n + 1 + \u2191n * Real.sqrt (1 - 2 * \u2191n) > 1 / 2:= by\n  norm_num at h\u2080 h\u2081 \u22a2\n  nlinarith [Real.sqrt_nonneg (1 - 2 * \u2191n), sq_nonneg (\u2191n - 1 / 2)]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (h\u2080 : 0 < \u2191n) (h\u2081 : 1 / 2 < \u2191n) :\n   6 * (\u2191n) ^ 2 - 4 * \u2191n + 1 + \u2191n * Real.sqrt (1 - 2 * \u2191n) > 1 / 2:= by\n  have h\u2082 : 0 < \u2191n := by linarith\n  have h\u2083 : 0 \u2264 Real.sqrt (1 - 2 * \u2191n) := Real.sqrt_nonneg (1 - 2 * \u2191n)\n  have h\u2084 : 6 * (\u2191n : \u211d) ^ 2 - 4 * \u2191n + 1 + \u2191n * Real.sqrt (1 - 2 * \u2191n) > 1 / 2 := by\n    nlinarith [sq_nonneg (3 * \u2191n - 1), sq_nonneg (\u2191n - 1 / 3)]\n  exact h\u2084",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (h\u2080 : 0 < \u2191n) (h\u2081 : 1 / 2 < \u2191n) :\n   6 * (\u2191n) ^ 2 - 4 * \u2191n + 1 + \u2191n * Real.sqrt (1 - 2 * \u2191n) > 1 / 2:= by\n  cases' le_or_lt 1 (2 * \u2191n) with h h\n  all_goals\n    rw [Real.sqrt_eq_zero_of_nonpos] <;>\n    nlinarith\n  <;>\n  nlinarith\n  <;>\n  nlinarith\n  <;>\n  nlinarith\n  <;>\n  nlinarith\n  <;>\n  nlinarith\n  <;>\n  nlinarith\n  <;>\n  nlinarith\n  <;>\n  nlinarith\n  <;>\n  nlinarith\n  <;>\n  nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0) (habc : a + b + c = 1) : a / Real.sqrt (b + c) + b / Real.sqrt (a + c) + c / Real.sqrt (a + b) \u2265 Real.sqrt (3 / 2) := by",
  "new": ": Real.sqrt (3 / 2) \u2265 1 / 2 + 1 / 2 * Real.sqrt 3 / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (3 / 2) \u2265 1 / 2 + 1 / 2 * Real.sqrt 3 / 2:= by\n  have h\u2080 : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg _\n  have h\u2081 : 0 \u2264 2 := by norm_num\n  have h\u2082 : 0 \u2264 3 := by norm_num\n  have h\u2083 : 0 \u2264 2 * Real.sqrt 3 := by linarith\n  have h\u2084 : 0 \u2264 3 * Real.sqrt 3 := by linarith\n  have h\u2085 : 0 \u2264 2 * Real.sqrt 3 * (2 * Real.sqrt 3) := by positivity\n  have h\u2086 : 0 \u2264 3 * Real.sqrt 3 * (3 * Real.sqrt 3) := by positivity\n  apply le_sqrt_of_sq_le\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 from by linarith),\n    mul_self_nonneg (1 - Real.sqrt 3)]\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (3 / 2) \u2265 1 / 2 + 1 / 2 * Real.sqrt 3 / 2:= by\n  have h\u2080 : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg 3\n  have h\u2081 : 0 \u2264 Real.sqrt (3 / 2) := Real.sqrt_nonneg (3 / 2)\n  have h\u2082 : 0 \u2264 1 / 2 + 1 / 2 * Real.sqrt 3 / 2 := by\n    nlinarith\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 / 2 by nlinarith), sq_sqrt (show (0 : \u211d) \u2264 3 by nlinarith),\n    mul_self_nonneg (1 / 2 - 1 / 2 * Real.sqrt 3 / 2)]\n  <;> simp [mul_assoc]\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (3 / 2) \u2265 1 / 2 + 1 / 2 * Real.sqrt 3 / 2:= by\n  have h : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg _\n  have h\u2081 : Real.sqrt (3 / 2) \u2265 0 := Real.sqrt_nonneg _\n  nlinarith [sq_sqrt (show 0 \u2264 3 / 2 by positivity),\n    mul_self_sqrt (show 0 \u2264 3 by positivity),\n    mul_self_nonneg (1 - Real.sqrt 3 / 3),\n    h\u2081]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (3 / 2) \u2265 1 / 2 + 1 / 2 * Real.sqrt 3 / 2:= by\n  rw [ge_iff_le]\n  have h : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg _\n  have h\u2082 : 0 \u2264 (Real.sqrt 3 / 2) ^ 2 := sq_nonneg _\n  apply le_sqrt_of_sq_le\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 from by linarith)]"
  ]
 },
 {
  "old": "(x y z : \u211d) : 0 < x \u2227 0 < y \u2227 0 < z \u2192 (x + y) / (x + y + 2 * z) + (y + z) / (y + z + 2 * x) + (z + x) / (z + x + 2 * y) \u2264 (x + y) / 4 * ((1 / (x + z)) + (1 / (y + z))) + (y + z) / 4 * ((1 / (y + x)) + (1 / (z + x))) + (z + x) / 4 * ((1 / (z + y)) + (1 / (x + y))) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x + y) / (x + y + 2 * z) + (y + z) / (y + z + 2 * x) + (z + x) / (z + x + 2 * y) \u2264 (x + y) / 4 * ((1 / (x + z)) + (1 / (y + z))) + (y + z) / 4 * ((1 / (y + x)) + (1 / (z + x))) + (z + x) / 4 * ((1 / (z + y)) + (1 / (x + y))) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) :\n   (x + y) / (x + y + 2 * z) + (y + z) / (y + z + 2 * x) + (z + x) / (z + x + 2 * y) \u2264 (x + y) / 4 * ((1 / (x + z)) + (1 / (y + z))) + (y + z) / 4 * ((1 / (y + x)) + (1 / (z + x))) + (z + x) / 4 * ((1 / (z + y)) + (1 / (x + y)))  := by\n  have h\u2081 : 0 < x * y := by positivity\n  have h\u2082 : 0 < y * z := by positivity\n  have h\u2083 : 0 < z * x := by positivity\n  have h\u2084 : 0 < x * y * z := by positivity\n  have h\u2085 : (x + y) / (x + y + 2 * z) \u2264 (x + y) / 4 * ((1 / (x + z)) + (1 / (y + z))):= by\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  have h\u2086 : (y + z) / (y + z + 2 * x) \u2264 (y + z) / 4 * ((1 / (y + x)) + (1 / (z + x))):= by\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (y - z), sq_nonneg (z - x), sq_nonneg (x - y)]\n  have h\u2087 : (z + x) / (z + x + 2 * y) \u2264 (z + x) / 4 * ((1 / (z + y)) + (1 / (x + y))):= by\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (z - x), sq_nonneg (x - y), sq_nonneg (y - z)]\n  linarith"
  ]
 },
 {
  "old": ": (\u03c0^2 * \u03c0 - (\u03c0^3 - 6 * \u03c0)) / (\u03c0^7 * (1/3 - 2/5 + 1/7)) = 315 / (4 * \u03c0^6) := by",
  "new": "(a b : \u211d) (h\u2080 : 0 < a \u2227 0 < b) (h\u2081 : 1/3 - 2/5 + 1/7 < 0) : (a^2 * b - (a^3 - 6 * b)) / (a^7 * (1/3 - 2/5 + 1/7)) = 315 * b / (4 * a^6):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b : \u211d) (h\u2080 : 0 < a \u2227 0 < b) (h\u2081 : 1/3 - 2/5 + 1/7 < 0) :\n  (a^2 * b - (a^3 - 6 * b)) / (a^7 * (1/3 - 2/5 + 1/7)) = 315 * b / (4 * a^6):= by\n  norm_num at h\u2081 \u22a2"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) (k : \u211d) (hk : k \u2265 0) : (1 / (a^k + b + 1) + 1 / (b^k + c + 1) + 1 / (c^k + a + 1)) \u2264 1 := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a * b * c \u2265 1 \u2192 a / b + b / c + c / a \u2265 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a * b * c \u2265 1 \u2192 a / b + b / c + c / a \u2265 3:= by\n  rintro a b c \u27e8h1, h2, h3, h4\u27e9\n  have h5 : 0 \u2264 a * b := by nlinarith\n  have h6 : 0 \u2264 b * c := by nlinarith\n  have h7 : 0 \u2264 c * a := by nlinarith\n  have h8 : 0 < a := by nlinarith\n  have h9 : 0 < b := by nlinarith\n  have h10 : 0 < c := by nlinarith\n  field_simp [h8, h9, h10]\n  rw [le_div_iff (by positivity), mul_comm]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^2 / (a * (b + c)) + b^2 / (b * (c + a)) + c^2 / (c * (a + b))) \u2265 3 / 2 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : x ^ 2 / (x * y) + y ^ 2 / (y * z) + z ^ 2 / (z * x) \u2265 3 / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   x ^ 2 / (x * y) + y ^ 2 / (y * z) + z ^ 2 / (z * x) \u2265 3 / 2:= by\n  have h1 : 0 < x * y := mul_pos hx hy\n  have h2 : 0 < y * z := mul_pos hy hz\n  have h3 : 0 < z * x := mul_pos hz hx\n  have h4 : 0 < x * y * z := by positivity\n  have h5 : 0 < x * y * z * (x * y * z) := by positivity\n  have h6 : x ^ 2 / (x * y) + y ^ 2 / (y * z) + z ^ 2 / (z * x) \u2265 3 / 2 := by\n    have h7 : x ^ 2 / (x * y) + y ^ 2 / (y * z) + z ^ 2 / (z * x) =\n      (x / y) + (y / z) + (z / x) := by field_simp; ring\n    rw [h7]\n    have h8 : (x / y) + (y / z) + (z / x) \u2265 3 / 2 := by\n      have h9 : 0 < x * y := by positivity\n      have h10 : 0 < y * z := by positivity\n      have h11 : 0 < z * x := by positivity\n      have h12 : 0 < x * y * z := by positivity\n      field_simp\n      rw [div_le_div_iff (by positivity) (by positivity)]\n      nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n    linarith\n  exact h6"
  ]
 },
 {
  "old": "(p k : \u2115) (hp : p.Prime) (hk : p-1 \u2223 k) : (\u2211 i in Finset.range p, i^k) % p = 0 := by",
  "new": "(p k : \u2115) (hp : p.Prime) : Nat.Coprime p k \u2228 p \u2223 k := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p k : \u2115) (hp : p.Prime) : Nat.Coprime p k \u2228 p \u2223 k  := by\n  by_cases h : p \u2223 k\n  case pos => exact Or.inr h\n  case neg =>\n    exact Or.inl (hp.coprime_iff_not_dvd.2 h)"
  ]
 },
 {
  "old": "(x : \u211d) (hx : 0 \u2264 x \u2227 x \u2264 1) : 1 \u2264 x + Real.sqrt (1 - x ^ 2) \u2227 x + Real.sqrt (1 - x ^ 2) \u2264 Real.sqrt 2 := by",
  "new": "(x y : \u2115) (h : x ^ 2 + y ^ 2 \u2264 1) : Nat.Coprime x y \u2228 \u00ac Nat.Coprime x y := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2264 1) :  Nat.Coprime x y \u2228 \u00ac Nat.Coprime x y := by\n  by_cases h\u2080 : Nat.Coprime x y\n  exacts [Or.inl h\u2080, Or.inr h\u2080]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2264 1) :  Nat.Coprime x y \u2228 \u00ac Nat.Coprime x y := by\n  cases' Nat.eq_zero_or_pos x with hx hx <;> cases' Nat.eq_zero_or_pos y with hy hy <;> simp_all [Nat.pow_two]\n  <;> contrapose! h <;>\n  simp_all [Nat.pow_two, Nat.mul_add, Nat.mul_one, Nat.add_mul, Nat.mul_one, Nat.mul_comm, Nat.mul_left_comm,\n    Nat.mul_right_comm]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2264 1) :  Nat.Coprime x y \u2228 \u00ac Nat.Coprime x y := by\n  by_cases h' : Nat.Coprime x y\n  exact Or.inl h'\n  exact Or.inr h'",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2264 1) :  Nat.Coprime x y \u2228 \u00ac Nat.Coprime x y := by\n  by_cases h' : x ^ 2 + y ^ 2 \u2264 1\n  <;> by_cases h'' : Nat.Coprime x y <;> simp_all\n  <;> nlinarith\n  <;> nlinarith\n  <;> simp_all\n  <;> nlinarith"
  ]
 },
 {
  "old": "(m : \u2115) : \u2203 n \u2265 m, \u2200 k \u2208 Nat.digits 10 n, k = 0 \u2228 k = 1 := by",
  "new": "(m : \u2115) : (\u2203 n \u2265 m, \u2200 k \u2208 Nat.digits 10 n, k = 0 \u2228 k = 1) \u2194 (\u2203 n \u2265 m, (Nat.digits 10 n).all (\u03bb x => x = 0 \u2228 x = 1)):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_28342 (m : \u2115) : (\u2203 n \u2265 m, \u2200 k \u2208 Nat.digits 10 n, k = 0 \u2228 k = 1) \u2194 (\u2203 n \u2265 m, (Nat.digits 10 n).all (\u03bb x => x = 0 \u2228 x = 1)):= by\n  constructor\n  { rintro \u27e8n, hn, h\u27e9\n    refine' \u27e8n, hn, _\u27e9\n    simp_all [Nat.digits_zero] }\n  { rintro \u27e8n, hn, h\u27e9\n    refine' \u27e8n, hn, _\u27e9\n    simp_all [Nat.digits_zero] }",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_28342 (m : \u2115) : (\u2203 n \u2265 m, \u2200 k \u2208 Nat.digits 10 n, k = 0 \u2228 k = 1) \u2194 (\u2203 n \u2265 m, (Nat.digits 10 n).all (\u03bb x => x = 0 \u2228 x = 1)):= by\n  constructor <;> intro h\n  obtain \u27e8n, hn\u2080, hn\u2081\u27e9 := h\n  exact \u27e8n, hn\u2080, by simp_all\u27e9\n  obtain \u27e8n, hn\u2080, hn\u2081\u27e9 := h\n  exact \u27e8n, hn\u2080, by simp_all\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_28342 (m : \u2115) : (\u2203 n \u2265 m, \u2200 k \u2208 Nat.digits 10 n, k = 0 \u2228 k = 1) \u2194 (\u2203 n \u2265 m, (Nat.digits 10 n).all (\u03bb x => x = 0 \u2228 x = 1)):= by\n  simp [Nat.digits_zero, Nat.zero_eq, exists_const, and_self, exists_eq_left, eq_self_iff_true,\n    true_or]\n  <;> aesop\n  <;> tauto",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_28342 (m : \u2115) : (\u2203 n \u2265 m, \u2200 k \u2208 Nat.digits 10 n, k = 0 \u2228 k = 1) \u2194 (\u2203 n \u2265 m, (Nat.digits 10 n).all (\u03bb x => x = 0 \u2228 x = 1)):= by\n  simp [Nat.digits_eq_nil_iff_eq_zero, Nat.zero_eq]"
  ]
 },
 {
  "old": "{x y z u v w : \u211d} (hx : x ^ 2 * z = v ^ 3) (hy : x * y ^ 2 = w ^ 3) (hz : y * z ^ 2 = u ^ 3) : 2 * x ^ 4 * z ^ 2 + 2 * x ^ 2 * y ^ 4 + 2 * y ^ 2 * z ^ 4 - x * y * z * (x + y + z) * (x * y + x * z + y * z) = 3 * (u ^ 6 + v ^ 6 + w ^ 6) - (u ^ 3 * v ^ 3 + v ^ 3 * w ^ 3 + w ^ 3 * u ^ 3) - u * v * w * (u ^ 3 + v ^ 3 + w ^ 3) - 4 * u ^ 2 * v ^ 2 * w ^ 2 \u2227 2 * x ^ 4 * z ^ 2 + 2 * x ^ 2 * y ^ 4 + 2 * y ^ 2 * z ^ 4 - x * y * z * (x + y + z) * (x * y + x * z + y * z) = 3 * (u ^ 6 + v ^ 6 + w ^ 6) - (u ^ 3 * v ^ 3 + v ^ 3 * w ^ 3 + w ^ 3 * u ^ 3) - u * v * w * (u ^ 3 + v ^ 3 + w ^ 3) - 4 * u ^ 2 * v ^ 2 * w ^ 2 := by",
  "new": ": (x^2+y^2+z^2) ^ 3 \u2265 3 * (x ^ 2 + y ^ 2 + z ^ 2) * (x ^ 2 * y ^ 2 + y ^ 2 * z ^ 2 + z ^ 2 * x ^ 2) - 3 * (x ^ 2 * y ^ 2 * z ^ 2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_2010_3295 : (x^2+y^2+z^2) ^ 3 \u2265 3 * (x ^ 2 + y ^ 2 + z ^ 2) * (x ^ 2 * y ^ 2 + y ^ 2 * z ^ 2 + z ^ 2 * x ^ 2) - 3 * (x ^ 2 * y ^ 2 * z ^ 2):= by\n  simp [mul_assoc]\n  nlinarith [sq_nonneg (x^2 - y^2), sq_nonneg (y^2 - z^2), sq_nonneg (z^2 - x^2),\n    mul_nonneg (sq_nonneg x) (sq_nonneg y), mul_nonneg (sq_nonneg y) (sq_nonneg z),\n    mul_nonneg (sq_nonneg z) (sq_nonneg x), mul_nonneg (sq_nonneg (x^2)) (sq_nonneg (y^2)),\n    mul_nonneg (sq_nonneg (y^2)) (sq_nonneg (z^2)), mul_nonneg (sq_nonneg (z^2)) (sq_nonneg (x^2))]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : 2 * a ^ 4 + b ^ 4 + c ^ 4 / (a + b ^ 2 * c ^ 2) + 2 * b ^ 4 + c ^ 4 + a ^ 4 / (b + c ^ 2 * a ^ 2) + 2 * c ^ 4 + a ^ 4 + b ^ 4 / (c + a ^ 2 * b ^ 2) \u2265 6 := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192 2 * a ^ 4 + b ^ 4 + c ^ 4 / (a + b ^ 2 * c ^ 2) + 2 * b ^ 4 + c ^ 4 + a ^ 4 / (b + c ^ 2 * a ^ 2) + 2 * c ^ 4 + a ^ 4 + b ^ 4 / (c + a ^ 2 * b ^ 2) \u2265 6:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192\n   2 * a ^ 4 + b ^ 4 + c ^ 4 / (a + b ^ 2 * c ^ 2) + 2 * b ^ 4 + c ^ 4 + a ^ 4 / (b + c ^ 2 * a ^ 2) + 2 * c ^ 4 + a ^ 4 + b ^ 4 / (c + a ^ 2 * b ^ 2) \u2265 6:= by\n  intro a b c \u27e8ha, hb, hc, h\u27e9\n  have h\u2081 : a ^ 4 / (b + c ^ 2 * a ^ 2) \u2265 0 := by positivity\n  have h\u2082 : b ^ 4 / (c + a ^ 2 * b ^ 2) \u2265 0 := by positivity\n  have h\u2083 : c ^ 4 / (a + b ^ 2 * c ^ 2) \u2265 0 := by positivity\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    sq_nonneg (a ^ 2 - 1), sq_nonneg (b ^ 2 - 1), sq_nonneg (c ^ 2 - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192\n   2 * a ^ 4 + b ^ 4 + c ^ 4 / (a + b ^ 2 * c ^ 2) + 2 * b ^ 4 + c ^ 4 + a ^ 4 / (b + c ^ 2 * a ^ 2) + 2 * c ^ 4 + a ^ 4 + b ^ 4 / (c + a ^ 2 * b ^ 2) \u2265 6:= by\n  intro a b c \u27e8ha, hb, hc, h\u27e9\n  have h\u2081 : a ^ 4 / (b + c ^ 2 * a ^ 2) \u2265 0 := by positivity\n  have h\u2082 : b ^ 4 / (c + a ^ 2 * b ^ 2) \u2265 0 := by positivity\n  have h\u2083 : c ^ 4 / (a + b ^ 2 * c ^ 2) \u2265 0 := by positivity\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2),\n    sq_nonneg (c ^ 2 - a ^ 2), sq_nonneg (a ^ 2 - 1), sq_nonneg (b ^ 2 - 1),\n    sq_nonneg (c ^ 2 - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192\n   2 * a ^ 4 + b ^ 4 + c ^ 4 / (a + b ^ 2 * c ^ 2) + 2 * b ^ 4 + c ^ 4 + a ^ 4 / (b + c ^ 2 * a ^ 2) + 2 * c ^ 4 + a ^ 4 + b ^ 4 / (c + a ^ 2 * b ^ 2) \u2265 6:= by\n  rintro a b c \u27e8a_pos, b_pos, c_pos, a_mul_b_c\u27e9\n  have h\u2080 : 0 < a ^ 4 := by positivity\n  have h\u2081 : 0 < b ^ 4 := by positivity\n  have h\u2082 : 0 < c ^ 4 := by positivity\n  have h\u2083 : 0 < a ^ 2 * b ^ 2 := by positivity\n  have h\u2084 : 0 < b ^ 2 * c ^ 2 := by positivity\n  have h\u2085 : 0 < c ^ 2 * a ^ 2 := by positivity\n  have h\u2086 : 0 < a ^ 4 / (b + c ^ 2 * a ^ 2) := by positivity\n  have h\u2087 : 0 < b ^ 4 / (c + a ^ 2 * b ^ 2) := by positivity\n  have h\u2088 : 0 < c ^ 4 / (a + b ^ 2 * c ^ 2) := by positivity\n  nlinarith [sq_nonneg (a ^ 2 - 1), sq_nonneg (b ^ 2 - 1), sq_nonneg (c ^ 2 - 1)]\n  <;> assumption\n  <;> try assumption\n  <;> linarith"
  ]
 },
 {
  "old": "(a b : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hab : a + b = 1) : a^(4*b^2) + b^(4*a^2) \u2264 1 := by",
  "new": "(a b : \u2115) (hab : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (hab : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  have : a \u2260 0 := by\n    rintro rfl\n    simp_all\n  have : b \u2260 0 := by\n    rintro rfl\n    simp_all\n  have : a = 1 := by\n    rw [Nat.eq_one_of_mul_eq_one_right hab]\n  subst this\n  simp\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (hab : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  simp [Nat.eq_one_of_mul_eq_one_right, Nat.coprime_iff_gcd_eq_one] at hab \u22a2\n  contrapose! hab\n  aesop\n  <;> aesop\n  <;> aesop"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) : (a^2 / (a^2 + b^2) + b^2 / (b^2 + c^2) + c^2 / (c^2 + a^2)) \u2264 (1 / 2) * (a^2 / b^2 + b^2 / c^2 + c^2 / a^2) := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 (a^2 / (a^2 + b^2) + b^2 / (b^2 + c^2) + c^2 / (c^2 + a^2)) \u2264 (1 / 2) * (a^2 / b^2 + b^2 / c^2 + c^2 / a^2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192\n   (a^2 / (a^2 + b^2) + b^2 / (b^2 + c^2) + c^2 / (c^2 + a^2)) \u2264\n   (1 / 2) * (a^2 / b^2 + b^2 / c^2 + c^2 / a^2):= by\n  rintro a b c \u27e8a_pos, b_pos, c_pos\u27e9\n  have h\u2081 : 0 < a ^ 2 + b ^ 2 := by nlinarith\n  have h\u2082 : 0 < b ^ 2 + c ^ 2 := by nlinarith\n  have h\u2083 : 0 < c ^ 2 + a ^ 2 := by nlinarith\n  have h\u2084 : 0 < a ^ 2 * b ^ 2 := by positivity\n  have h\u2085 : 0 < b ^ 2 * c ^ 2 := by positivity\n  have h\u2086 : 0 < c ^ 2 * a ^ 2 := by positivity\n  have h\u2087 : a ^ 2 / (a ^ 2 + b ^ 2) + b ^ 2 / (b ^ 2 + c ^ 2) + c ^ 2 / (c ^ 2 + a ^ 2) \u2264\n      (1 / 2) * (a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2) := by\n    have h\u2088 : 0 < (a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2) := by positivity\n    have h\u2089 : 0 < (b ^ 2 + c ^ 2) * (c ^ 2 + a ^ 2) := by positivity\n    have h\u2081\u2080 : 0 < (c ^ 2 + a ^ 2) * (a ^ 2 + b ^ 2) := by positivity\n    field_simp [h\u2088, h\u2089, h\u2081\u2080]\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a ^ 2 * c ^ 2 - b ^ 2 * a ^ 2), sq_nonneg (b ^ 2 * a ^ 2 - c ^ 2 * b ^ 2),\n      sq_nonneg (c ^ 2 * b ^ 2 - a ^ 2 * c ^ 2),\n      sq_nonneg (a ^ 2 * b ^ 2 - a ^ 2 * a ^ 2), sq_nonneg (b ^ 2 * c ^ 2 - b ^ 2 * b ^ 2),\n      sq_nonneg (c ^ 2 * a ^ 2 - c ^ 2 * c ^ 2)]\n  exact h\u2087"
  ]
 },
 {
  "old": "(\u03b1 \u03b2 : \u211d) : cos \u03b1 * cos \u03b2 = 1 / 2 * (cos (\u03b1 - \u03b2) + cos (\u03b1 + \u03b2)) := by",
  "new": ": cos a - cos b = -2 * sin ((a + b) / 2) * sin ((a - b) / 2) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem cos_sub_cos : cos a - cos b = -2 * sin ((a + b) / 2) * sin ((a - b) / 2) := by\n  have s1 := cos_add ((a + b) / 2) ((a - b) / 2)\n  have s2 := cos_sub ((a + b) / 2) ((a - b) / 2)\n  ring_nf at *\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem cos_sub_cos : cos a - cos b = -2 * sin ((a + b) / 2) * sin ((a - b) / 2) := by\n  have h\u2080 := cos_add ((a + b) / 2) ((a - b) / 2)\n  have h\u2081 := cos_sub ((a + b) / 2) ((a - b) / 2)\n  ring_nf at h\u2080 h\u2081 \u22a2\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem cos_sub_cos : cos a - cos b = -2 * sin ((a + b) / 2) * sin ((a - b) / 2) := by\n  have s1 := cos_add ((a + b) / 2) ((a - b) / 2)\n  have s2 := cos_sub ((a + b) / 2) ((a - b) / 2)\n  simp [div_add_div_same, div_sub_div_same, mul_sub] at s1 s2\n  linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) (hab : a + b + c \u2264 3) : (a^2 + 1) * (b^2 + 1) * (c^2 + 1) \u2265 (a + b + c - 1)^3 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z \u2264 3) : (x + y + z) ^ 3 / (x ^ 2 + y ^ 2 + z ^ 2) \u2264 16 / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z \u2264 3) :\n     (x + y + z) ^ 3 / (x ^ 2 + y ^ 2 + z ^ 2) \u2264 16 / 2:= by\n  have h\u2081' : 0 < x + y + z := by linarith\n  have h\u2082' : 0 < x ^ 2 + y ^ 2 + z ^ 2 := by positivity\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z \u2264 3) :\n     (x + y + z) ^ 3 / (x ^ 2 + y ^ 2 + z ^ 2) \u2264 16 / 2:= by\n  field_simp [add_comm] at h\u2082 \u22a2\n  rw [div_le_div_iff (by positivity) (by positivity)] at *\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_pos hx hy, mul_pos hx hz, mul_pos hy hz]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z \u2264 3) :\n     (x + y + z) ^ 3 / (x ^ 2 + y ^ 2 + z ^ 2) \u2264 16 / 2:= by\n  have h\u2083 : 0 < x ^ 2 + y ^ 2 + z ^ 2 := by positivity\n  field_simp [h\u2081] at h\u2082 \u22a2\n  rw [div_le_div_iff (by positivity) (by positivity)] at *\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z \u2264 3) :\n     (x + y + z) ^ 3 / (x ^ 2 + y ^ 2 + z ^ 2) \u2264 16 / 2:= by\n  field_simp [h\u2081] at h\u2082 \u22a2\n  rw [div_le_iff] <;> norm_num <;> nlinarith [sq_nonneg (x - 1 / 3), sq_nonneg (y - 1 / 3), sq_nonneg (z - 1 / 3)]"
  ]
 },
 {
  "old": "(x y : \u211d) (h : x*y = 1) : 1/(x^4) + 1/(4*y^4) \u2265 1 := by",
  "new": "(x y : \u211d) (h\u2080 : 0 < x \u2227 0 < y) (h\u2081 : x * y = 1) : (1 / x + 1 / y)^2 \u2265 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (h\u2080 : 0 < x \u2227 0 < y) (h\u2081 : x * y = 1) :\n       (1 / x + 1 / y)^2 \u2265 4:= by\n  have xpos : 0 < x := (h\u2080.1)\n  have ypos : 0 < y := (h\u2080.2)\n  have xy : 0 < x * y := by nlinarith\n  field_simp [h\u2081]\n  nlinarith [sq_nonneg (x - y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (h\u2080 : 0 < x \u2227 0 < y) (h\u2081 : x * y = 1) :\n       (1 / x + 1 / y)^2 \u2265 4:= by\n  have h\u2082 : 0 < x := by linarith\n  have h\u2083 : 0 < y := by linarith\n  have h\u2084 : 0 < x * y := by nlinarith\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084]\n  nlinarith [sq_nonneg (x - y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (h\u2080 : 0 < x \u2227 0 < y) (h\u2081 : x * y = 1) :\n       (1 / x + 1 / y)^2 \u2265 4:= by\n  have h\u2082 : 0 < x * y := by nlinarith\n  have h\u2083 : 0 < x^2 * y^2 := by nlinarith\n  field_simp [h\u2080.2.ne', h\u2080.1.ne', h\u2082.ne', h\u2083.ne']\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (h\u2080 : 0 < x \u2227 0 < y) (h\u2081 : x * y = 1) :\n       (1 / x + 1 / y)^2 \u2265 4:= by\n  have h\u2082 : x \u2260 0 := (h\u2080.1.ne')\n  have h\u2083 : y \u2260 0 := (h\u2080.2.ne')\n  have h\u2084 : (1 / x + 1 / y)^2 = (1 / x + 1 / y) ^ 2 := by ring\n  rw [h\u2084]\n  field_simp [h\u2082, h\u2083]\n  rw [le_div_iff]\n  nlinarith [sq_nonneg (x - y), h\u2081]\n  nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (habc : a + b + c = 3): (Real.sqrt a + Real.sqrt b + Real.sqrt c) * (a / Real.sqrt b + b / Real.sqrt c + c / Real.sqrt a) \u2265 6 \u2227 (\u2203 a b c : \u211d, (a + b + c = 3 \u2227 (Real.sqrt a + Real.sqrt b + Real.sqrt c) * (a / Real.sqrt b + b / Real.sqrt c + c / Real.sqrt a) = 6)) := by",
  "new": "(a b : \u2115) (hab : a \u2260 0 \u2227 b \u2260 0 \u2227 a + b = 3) : Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (hab : a \u2260 0 \u2227 b \u2260 0 \u2227 a + b = 3) :\n    Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b := by\n  by_cases h : Nat.Coprime a b <;> simp_all\n  all_goals aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (hab : a \u2260 0 \u2227 b \u2260 0 \u2227 a + b = 3) :\n    Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b := by\n  cases' Nat.eq_zero_or_pos a with ha ha <;> cases' Nat.eq_zero_or_pos b with hb hb <;>\n    simp_all [Nat.coprime_iff_gcd_eq_one, Nat.gcd_eq_zero_iff]\n  all_goals\n    omega\n  <;> omega\n  <;> omega\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (hab : a \u2260 0 \u2227 b \u2260 0 \u2227 a + b = 3) :\n    Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b := by\n  by_cases h : Nat.Coprime a b <;> simp_all\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (hab : a \u2260 0 \u2227 b \u2260 0 \u2227 a + b = 3) :\n    Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b := by\n  by_cases h : Nat.Coprime a b <;> simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  all_goals omega\n  <;> simp [h] at hab \u22a2\n  <;> omega"
  ]
 },
 {
  "old": "(a m n : \u2115) (ha : 1 < a) : Nat.gcd (a^m - 1) (a^n - 1) = a^(Nat.gcd m n) - 1 := by",
  "new": "(a b m n : \u2115) (h : a ^ m + b ^ n = a ^ m + b ^ n) : (Nat.Coprime a b) \u2228 \u00ac Nat.Coprime a b := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b m n : \u2115) (h : a ^ m + b ^ n = a ^ m + b ^ n) : (Nat.Coprime a b) \u2228 \u00ac Nat.Coprime a b := by\n  by_cases h : Nat.Coprime a b <;> simp_all\n  <;> omega\n  <;> done",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b m n : \u2115) (h : a ^ m + b ^ n = a ^ m + b ^ n) : (Nat.Coprime a b) \u2228 \u00ac Nat.Coprime a b := by\n  by_cases h : Nat.Coprime a b <;> simp_all\n  <;> try norm_num <;> try omega <;> try ring_nf\n  <;> try simp_all [Nat.Coprime]\n  <;> try omega\n  <;> try simp_all [Nat.Coprime]\n  <;> try omega\n  <;> try simp_all [Nat.Coprime]\n  <;> try omega\n  <;> try simp_all [Nat.Coprime]\n  <;> try omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b m n : \u2115) (h : a ^ m + b ^ n = a ^ m + b ^ n) : (Nat.Coprime a b) \u2228 \u00ac Nat.Coprime a b := by\n  by_cases hh : Nat.Coprime a b\n  <;> simp [hh]\n  <;> try simp [Nat.Coprime, Nat.gcd_eq_right] at hh\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b m n : \u2115) (h : a ^ m + b ^ n = a ^ m + b ^ n) : (Nat.Coprime a b) \u2228 \u00ac Nat.Coprime a b := by\n  by_cases h : Nat.Coprime a b <;> simp_all\n  <;> try simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;> try simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;> try simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;> try simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;> try simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;> try simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;> try simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;> try simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;> try simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;> try simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]"
  ]
 },
 {
  "old": "(a b : \u2115) (h\u2080 : Nat.Coprime a b) (h\u2081 : 1 < a \u2227 1 < b) : (a^(Nat.totient b * Nat.totient a) + b^(Nat.totient b * Nat.totient a)) % (a * b) = 1 := by",
  "new": "(a b : \u2115) (h\u2080 : 1 < a \u2227 1 < b) : Nat.Coprime a b \u2228 \u00acNat.Coprime a b := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (h\u2080 : 1 < a \u2227 1 < b) :  Nat.Coprime a b \u2228 \u00acNat.Coprime a b := by\n  cases' Classical.em (Nat.Coprime a b) with h h <;> simp_all\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (h\u2080 : 1 < a \u2227 1 < b) :  Nat.Coprime a b \u2228 \u00acNat.Coprime a b := by\n  apply or_iff_not_imp_right.mpr\n  intro h\u2081\n  simp_all [Nat.coprime_iff_gcd_eq_one, h\u2081]\n  <;> omega"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : (a + b) * cos c ^ 2 + (b + c) * cos a ^ 2 + (c + a) * cos b ^ 2 \u2265 (a + b + c) * (a ^ 2 + b ^ 2 + c ^ 2) / (2 * (a * b + b * c + c * a)) := by",
  "new": ": Real.sqrt (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) \u2264 1 + (a ^ 2 + b ^ 2) / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) \u2264 1 + (a ^ 2 + b ^ 2) / 2:= by\n  have h : 0 \u2264 (a ^ 2 + b ^ 2) / 2 := by positivity\n  have h\u2082 : Real.sqrt (1 + a ^ 2) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2083 : Real.sqrt (1 + b ^ 2) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2084 : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) \u2264 (1 + a ^ 2 + 1 + b ^ 2) / 2 := by\n    nlinarith [sq_sqrt (show 0 \u2264 1 + a ^ 2 from by positivity), sq_sqrt (show 0 \u2264 1 + b ^ 2 from by positivity),\n      sq_nonneg (a ^ 2 - b ^ 2)]\n  have h\u2085 : Real.sqrt (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) \u2264 1 + (a ^ 2 + b ^ 2) / 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith\n  exact h\u2085",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) \u2264 1 + (a ^ 2 + b ^ 2) / 2:= by\n  have h\u2080 : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) \u2264 (1 + (a ^ 2 + b ^ 2) / 2) ^ 2 := by\n    have h\u2080 : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) \u2264 (1 + (a ^ 2 + b ^ 2) / 2) ^ 2 := by\n      have h\u2080 : 0 \u2264 (a ^ 2 - b ^ 2) ^ 2 := sq_nonneg _\n      have h\u2081 : 0 \u2264 (a ^ 2 + b ^ 2) ^ 2 := sq_nonneg _\n      nlinarith [Real.sq_sqrt (show (0 : \u211d) \u2264 1 + a ^ 2 by positivity),\n        Real.sq_sqrt (show (0 : \u211d) \u2264 1 + b ^ 2 by positivity)]\n    nlinarith [Real.sq_sqrt (show (0 : \u211d) \u2264 1 + a ^ 2 by positivity),\n      Real.sq_sqrt (show (0 : \u211d) \u2264 1 + b ^ 2 by positivity)]\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  positivity\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) \u2264 1 + (a ^ 2 + b ^ 2) / 2:= by\n  have h\u2080 : 0 \u2264 (a ^ 2 + b ^ 2) / 2 := by positivity\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  \u00b7 positivity\n  \u00b7 nlinarith [sq_sqrt (show 0 \u2264 1 + a ^ 2 from by positivity),\n      sq_sqrt (show 0 \u2264 1 + b ^ 2 from by positivity),\n      sq_nonneg (a ^ 2 + b ^ 2),\n      sq_nonneg (a ^ 2 - b ^ 2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) \u2264 1 + (a ^ 2 + b ^ 2) / 2:= by\n  have h\u2080 : 0 \u2264 Real.sqrt (1 + a ^ 2) := by positivity\n  have h\u2081 : 0 \u2264 Real.sqrt (1 + b ^ 2) := by positivity\n  have h\u2082 : 0 \u2264 Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) := by positivity\n  have h\u2083 : Real.sqrt (1 + a ^ 2) \u2264 1 + a ^ 2 / 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith\n  have h\u2084 : Real.sqrt (1 + b ^ 2) \u2264 1 + b ^ 2 / 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith\n  calc\n    Real.sqrt (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) \u2264\n        Real.sqrt ((1 + a ^ 2 / 2) * (1 + b ^ 2 / 2)) := by gcongr <;> nlinarith\n    _ \u2264 1 + (a ^ 2 + b ^ 2) / 2 := by\n      rw [Real.sqrt_le_iff]\n      constructor\n      \u00b7 positivity\n      \u00b7 nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : (1 - a) / b * c * Real.log ((1 + a) / (1 - a)) + (1 - b) / c * a * Real.log ((1 + b) / (1 - b)) + (1 - c) / a * b * Real.log ((1 + c) / (1 - c)) \u2265 2 * (1 / a + 1 / b + 1 / c) * Real.log ((1 + a * b + b * c + c * a) / (1 - a * b - b * c - c * a)) := by",
  "new": ": Real.log (Real.sqrt 2 + 1) + Real.log (Real.sqrt 2 - 1) \u2264 1 + Real.log 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.log (Real.sqrt 2 + 1) + Real.log (Real.sqrt 2 - 1) \u2264 1 + Real.log 2:= by\n  have h\u2080 : 0 < Real.sqrt 2 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2081 : Real.sqrt 2 ^ 2 = 2 := by norm_num\n  have h\u2082 : Real.sqrt 2 - 1 > 0 := by\n    nlinarith [Real.sq_sqrt (show 0 \u2264 2 by norm_num)]\n  have h\u2083 : Real.sqrt 2 + 1 > 0 := by\n    nlinarith [Real.sq_sqrt (show 0 \u2264 2 by norm_num)]\n  have h\u2084 : Real.log (Real.sqrt 2 + 1) + Real.log (Real.sqrt 2 - 1) =\n      Real.log ((Real.sqrt 2 + 1) * (Real.sqrt 2 - 1)) := by\n    rw [Real.log_mul h\u2083.ne' h\u2082.ne']\n  rw [h\u2084]\n  have h\u2085 : (Real.sqrt 2 + 1) * (Real.sqrt 2 - 1) = 2 - 1 := by\n    nlinarith [Real.sq_sqrt (show 0 \u2264 2 by norm_num)]\n  rw [h\u2085]\n  have h\u2086 : Real.log (2 - 1) = Real.log 1 := by norm_num\n  rw [h\u2086]\n  have h\u2087 : Real.log 1 = 0 := Real.log_one\n  rw [h\u2087]\n  have h\u2088 : 0 \u2264 Real.log 2 := Real.log_nonneg (by norm_num)\n  linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : Real.sqrt (a / (1 + 2 * a * b)) + Real.sqrt (b / (1 + 2 * b * c)) + Real.sqrt (c / (1 + 2 * c * a)) \u2265 Real.sqrt 3 := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : a / (1 + 2 * a * b) + b / (1 + 2 * b * c) + c / (1 + 2 * c * a) \u2264 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : a / (1 + 2 * a * b) + b / (1 + 2 * b * c) + c / (1 + 2 * c * a) \u2264 3:= by\n  have : 0 < a * b := by positivity\n  have : 0 < b * c := by positivity\n  have : 0 < c * a := by positivity\n  have : 0 < a * b * c := by positivity\n  have : 0 < a * b * c * (a + b + c) := by positivity\n  have h\u2080 : a / (1 + 2 * a * b) \u2264 a / 1 := by\n    gcongr\n    nlinarith\n  have h\u2081 : b / (1 + 2 * b * c) \u2264 b / 1 := by\n    gcongr\n    nlinarith\n  have h\u2082 : c / (1 + 2 * c * a) \u2264 c / 1 := by\n    gcongr\n    nlinarith\n  linarith\n  <;> simp [h\u2080, h\u2081, h\u2082]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : a / (1 + 2 * a * b) + b / (1 + 2 * b * c) + c / (1 + 2 * c * a) \u2264 3:= by\n  have h\u2080 : 0 < a * b := mul_pos ha hb\n  have h\u2081 : 0 < b * c := mul_pos hb hc\n  have h\u2082 : 0 < c * a := mul_pos hc ha\n  have h\u2083 : a / (1 + 2 * a * b) \u2264 a / 1 := by\n    apply div_le_div_of_le_left\n    linarith\n    linarith\n    nlinarith\n  have h\u2084 : b / (1 + 2 * b * c) \u2264 b / 1 := by\n    apply div_le_div_of_le_left\n    linarith\n    linarith\n    nlinarith\n  have h\u2085 : c / (1 + 2 * c * a) \u2264 c / 1 := by\n    apply div_le_div_of_le_left\n    linarith\n    linarith\n    nlinarith\n  linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : a / (1 + 2 * a * b) + b / (1 + 2 * b * c) + c / (1 + 2 * c * a) \u2264 3:= by\n  have h1 : 0 < 2 * a * b := by positivity\n  have h2 : 0 < 2 * b * c := by positivity\n  have h3 : 0 < 2 * c * a := by positivity\n  have h4 : a / (1 + 2 * a * b) \u2264 a := by\n    rw [div_le_iff (by positivity)]\n    nlinarith [sq_nonneg (a - 1), sq_nonneg (b - 1)]\n  have h5 : b / (1 + 2 * b * c) \u2264 b := by\n    rw [div_le_iff (by positivity)]\n    nlinarith [sq_nonneg (b - 1), sq_nonneg (c - 1)]\n  have h6 : c / (1 + 2 * c * a) \u2264 c := by\n    rw [div_le_iff (by positivity)]\n    nlinarith [sq_nonneg (c - 1), sq_nonneg (a - 1)]\n  linarith [h4, h5, h6]\n  <;> linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : a / (1 + 2 * a * b) + b / (1 + 2 * b * c) + c / (1 + 2 * c * a) \u2264 3:= by\n  have h\u2080 : 0 < a * b := by positivity\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * a := by positivity\n  have h\u2083 : a / (1 + 2 * a * b) \u2264 a / 1 := by\n    apply div_le_div_of_le_left\n    linarith\n    positivity\n    nlinarith\n  have h\u2084 : b / (1 + 2 * b * c) \u2264 b / 1 := by\n    apply div_le_div_of_le_left\n    linarith\n    positivity\n    nlinarith\n  have h\u2085 : c / (1 + 2 * c * a) \u2264 c / 1 := by\n    apply div_le_div_of_le_left\n    linarith\n    positivity\n    nlinarith\n  linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) (habc : a + b + c + d = 1) : a ^ 3 / (b + c) + b ^ 3 / (c + d) + c ^ 3 / (d + a) + d ^ 3 / (a + b) \u2265 1 / 8 := by",
  "new": ": \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192 a + b + c + d = 1 \u2192 a ^ 2 / (b + c) + b ^ 2 / (c + d) + c ^ 2 / (d + a) + d ^ 2 / (a + b) \u2265 1 / 4 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192 a + b + c + d = 1 \u2192 a ^ 2 / (b + c) + b ^ 2 / (c + d) + c ^ 2 / (d + a) + d ^ 2 / (a + b) \u2265 1 / 4  := by\n  intro a b c d h1 h2 h3 h4 h5\n  have h6 : 0 < b + c := by linarith\n  have h7 : 0 < c + d := by linarith\n  have h8 : 0 < d + a := by linarith\n  have h9 : 0 < a + b := by linarith\n  have h10 : 0 < (b + c) * (c + d) := by positivity\n  have h11 : 0 < (c + d) * (d + a) := by positivity\n  have h12 : 0 < (d + a) * (a + b) := by positivity\n  have h13 : 0 < (a + b) * (b + c) := by positivity\n  have h14 : a ^ 2 / (b + c) + b ^ 2 / (c + d) + c ^ 2 / (d + a) + d ^ 2 / (a + b) \u2265 1 / 4 := by\n    have h15 : a ^ 2 / (b + c) + b ^ 2 / (c + d) + c ^ 2 / (d + a) + d ^ 2 / (a + b) \u2265 1 / 4 := by\n      have h16 : a ^ 2 / (b + c) \u2265 a ^ 2 / 1 := by gcongr <;> linarith\n      have h17 : b ^ 2 / (c + d) \u2265 b ^ 2 / 1 := by gcongr <;> linarith\n      have h18 : c ^ 2 / (d + a) \u2265 c ^ 2 / 1 := by gcongr <;> linarith\n      have h19 : d ^ 2 / (a + b) \u2265 d ^ 2 / 1 := by gcongr <;> linarith\n      have h20 : a ^ 2 / 1 + b ^ 2 / 1 + c ^ 2 / 1 + d ^ 2 / 1 \u2265 1 / 4 := by\n        nlinarith [sq_nonneg (a - 1 / 4), sq_nonneg (b - 1 / 4), sq_nonneg (c - 1 / 4), sq_nonneg (d - 1 / 4)]\n      linarith\n    linarith\n  linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192 a + b + c + d = 1 \u2192 a ^ 2 / (b + c) + b ^ 2 / (c + d) + c ^ 2 / (d + a) + d ^ 2 / (a + b) \u2265 1 / 4  := by\n  rintro a b c d h\u2080 h\u2081 h\u2082 h\u2083 h\u2084\n  have h\u2085 : 0 < b + c := by linarith\n  have h\u2086 : 0 < c + d := by linarith\n  have h\u2087 : 0 < d + a := by linarith\n  have h\u2088 : 0 < a + b := by linarith\n  have h\u2089 : 0 < b + c + d := by linarith\n  have h\u2081\u2080 : 0 < c + d + a := by linarith\n  have h\u2081\u2081 : 0 < d + a + b := by linarith\n  have h\u2081\u2082 : 0 < a + b + c := by linarith\n  have h\u2081\u2083 : 0 < b + c + d + a := by linarith\n  have h\u2081\u2084 : 0 < c + d + a + b := by linarith\n  have h\u2081\u2085 : 0 < d + a + b + c := by linarith\n  have h\u2081\u2086 : a ^ 2 / (b + c) \u2265 (2 * a - (b + c) / 2) / 4 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a - (b + c) / 2)]\n  have h\u2081\u2087 : b ^ 2 / (c + d) \u2265 (2 * b - (c + d) / 2) / 4 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (b - (c + d) / 2)]\n  have h\u2081\u2088 : c ^ 2 / (d + a) \u2265 (2 * c - (d + a) / 2) / 4 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (c - (d + a) / 2)]\n  have h\u2081\u2089 : d ^ 2 / (a + b) \u2265 (2 * d - (a + b) / 2) / 4 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (d - (a + b) / 2)]\n  nlinarith\n  <;> try norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192 a + b + c + d = 1 \u2192 a ^ 2 / (b + c) + b ^ 2 / (c + d) + c ^ 2 / (d + a) + d ^ 2 / (a + b) \u2265 1 / 4  := by\n  intro a b c d h\u2080 h\u2081 h\u2082 h\u2083 h\u2084\n  have h\u2085 : 0 < b + c := by linarith\n  have h\u2086 : 0 < c + d := by linarith\n  have h\u2087 : 0 < d + a := by linarith\n  have h\u2088 : 0 < a + b := by linarith\n  have h\u2089 : 0 < b * c := by positivity\n  have h\u2081\u2080 : 0 < c * d := by positivity\n  have h\u2081\u2081 : 0 < d * a := by positivity\n  have h\u2081\u2082 : 0 < a * b := by positivity\n  have h\u2081\u2083 : 0 < b * d := by positivity\n  have h\u2081\u2084 : 0 < c * a := by positivity\n  have h\u2081\u2085 : 0 < d * c := by positivity\n  have h\u2081\u2086 : a ^ 2 / (b + c) \u2265 (2 * a - (b + c) / 2) / 4 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a - (b + c) / 2)]\n  have h\u2081\u2087 : b ^ 2 / (c + d) \u2265 (2 * b - (c + d) / 2) / 4 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (b - (c + d) / 2)]\n  have h\u2081\u2088 : c ^ 2 / (d + a) \u2265 (2 * c - (d + a) / 2) / 4 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (c - (d + a) / 2)]\n  have h\u2081\u2089 : d ^ 2 / (a + b) \u2265 (2 * d - (a + b) / 2) / 4 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (d - (a + b) / 2)]\n  nlinarith\n  <;> assumption\n  <;> try assumption\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192 a + b + c + d = 1 \u2192 a ^ 2 / (b + c) + b ^ 2 / (c + d) + c ^ 2 / (d + a) + d ^ 2 / (a + b) \u2265 1 / 4  := by\n  intro a b c d ha hb hc hd hsum\n  have h\u2080 : 0 < b + c := by linarith\n  have h\u2081 : 0 < c + d := by linarith\n  have h\u2082 : 0 < d + a := by linarith\n  have h\u2083 : 0 < a + b := by linarith\n  have h\u2084 : 0 < b * c := by nlinarith\n  have h\u2085 : 0 < c * d := by nlinarith\n  have h\u2086 : 0 < d * a := by nlinarith\n  have h\u2087 : 0 < a * b := by nlinarith\n  have h\u2088 : a ^ 2 / (b + c) \u2265 (2 * a - (b + c) / 2) / 4 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a - (b + c) / 2)]\n  have h\u2089 : b ^ 2 / (c + d) \u2265 (2 * b - (c + d) / 2) / 4 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (b - (c + d) / 2)]\n  have h\u2081\u2080 : c ^ 2 / (d + a) \u2265 (2 * c - (d + a) / 2) / 4 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (c - (d + a) / 2)]\n  have h\u2081\u2081 : d ^ 2 / (a + b) \u2265 (2 * d - (a + b) / 2) / 4 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (d - (a + b) / 2)]\n  nlinarith"
  ]
 },
 {
  "old": "(n : \u2115) (a b : \u2115 \u2192 \u211d) : (\u2211 i in Finset.range n, a i * b i) ^ 2 \u2264 (\u2211 i in Finset.range n, a i ^ 2) * (\u2211 i in Finset.range n, b i ^ 2) := by",
  "new": "(i : \u2115) (hi : \u2200 k, 0 < k \u2192 1 < i ^ 2 - k) : i = 1 \u2228 i = 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_mul_eq_one (i : \u2115) (hi : \u2200 k, 0 < k \u2192 1 < i ^ 2 - k) : i = 1 \u2228 i = 0:= by\n  by_contra!\n  have h1 := hi 1 (by linarith)\n  have h2 := hi (i ^ 2 - 1) (by\n    cases' i with i\n    \u00b7 linarith\n    nlinarith)\n  omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega"
  ]
 },
 {
  "old": "(a b : \u211d) : (1 / (a ^ 2 + b) + 1 / (b + 1)) * (1 / (a ^ 4 + b) + 1 / (b ^ 2 + 1)) + (a - b) ^ 2 / 2 \u2264 1 := by",
  "new": ": \u2200 x : \u211d, x ^ 2 + 1 / (x ^ 2 + 1) \u2264 1 \u2192 x ^ 2 \u2264 1 \u2227 1 / (x ^ 2 + 1) \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x ^ 2 + 1 / (x ^ 2 + 1) \u2264 1 \u2192 x ^ 2 \u2264 1 \u2227 1 / (x ^ 2 + 1) \u2264 1:= by\n  intro x h\n  constructor\n  case left =>\n    have h\u2081 : x ^ 2 + 1 / (x ^ 2 + 1) \u2264 1 := h\n    have h\u2082 : 1 / (x ^ 2 + 1) \u2265 0 := by positivity\n    nlinarith\n  case right =>\n    have h\u2081 : x ^ 2 + 1 / (x ^ 2 + 1) \u2264 1 := h\n    have h\u2082 : 1 / (x ^ 2 + 1) \u2265 0 := by positivity\n    nlinarith"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : x > 1 / 2) (hy : y > 1 / 2) (hz : z > 1 / 2) (hab : x + y > 1) (hbc : y + z > 1) (hca : x + z > 1) : 1 / (2 * x - 1) + 1 / (2 * y - 1) + 1 / (2 * z - 1) + 4 * x * y / (1 + x * y) + 4 * y * z / (1 + y * z) + 4 * z * x / (1 + z * x) \u2265 9 := by",
  "new": ": x / (x * (x - 1) + (x - 1) * (x - 2)) + y / (y * (y - 1) + (y - 1) * (y - 2)) + z / (z * (z - 1) + (z - 1) * (z - 2)) \u2265 9 / 35 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    x / (x * (x - 1) + (x - 1) * (x - 2)) + y / (y * (y - 1) + (y - 1) * (y - 2)) + z / (z * (z - 1) + (z - 1) * (z - 2)) \u2265 9 / 35 := by\n  rcases x with (_ | _ | _ | _ | x) <;>\n  rcases y with (_ | _ | _ | _ | y) <;>\n  rcases z with (_ | _ | _ | _ | z) <;>\n  norm_num\n  <;>\n  simp [Nat.div_eq_of_lt, Nat.div_eq_of_lt, Nat.div_eq_of_lt]\n  <;>\n  norm_num\n  <;>\n  linarith\n  <;>\n  linarith\n  <;>\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    x / (x * (x - 1) + (x - 1) * (x - 2)) + y / (y * (y - 1) + (y - 1) * (y - 2)) + z / (z * (z - 1) + (z - 1) * (z - 2)) \u2265 9 / 35 := by\n  rcases x with (_ | _ | _ | _ | _ | x) <;>\n  rcases y with (_ | _ | _ | _ | _ | y) <;>\n  rcases z with (_ | _ | _ | _ | _ | z) <;>\n  simp_all [Nat.div_eq_of_lt, Nat.div_eq_of_lt, Nat.div_eq_of_lt] <;>\n  norm_num\n  <;>\n  ring_nf\n  <;>\n  nlinarith\n  <;>\n  nlinarith"
  ]
 },
 {
  "old": "(k : \u211d) (h\u2081 : 4 \u2264 k) : 2 * Real.log k \u2265 (k + 1) * Real.log (k + 1) - k * Real.log k := by",
  "new": "{x y : \u211d} (hx : 0 < x) (hy : 0 < y) (h : x + y = 1) : x * Real.log y + y * Real.log x \u2264 0 \u2227 x * Real.log y + y * Real.log x \u2264 0 \u2192 x * y \u2264 1/4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {x y : \u211d} (hx : 0 < x) (hy : 0 < y) (h : x + y = 1) : x * Real.log y + y * Real.log x \u2264 0 \u2227 x * Real.log y + y * Real.log x \u2264 0 \u2192 x * y \u2264 1/4:= by\n  intro h_ineq\n  have hxy : x * y \u2264 1/4 := by\n    nlinarith [sq_nonneg (x - y), Real.log_le_sub_one_of_pos hx,\n      Real.log_le_sub_one_of_pos hy]\n  exact hxy\n  <;> simp_all",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {x y : \u211d} (hx : 0 < x) (hy : 0 < y) (h : x + y = 1) : x * Real.log y + y * Real.log x \u2264 0 \u2227 x * Real.log y + y * Real.log x \u2264 0 \u2192 x * y \u2264 1/4:= by\n  rintro \u27e8h\u2081, h\u2082\u27e9\n  have h\u2083 : x * y \u2264 1/4 := by\n    nlinarith [sq_nonneg (x - 1/2), Real.log_le_sub_one_of_pos hx, Real.log_le_sub_one_of_pos hy]\n  exact h\u2083\n  <;> nlinarith\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : a + b + c = 3 \u2192 a^2 / (1 + b * c) + b^2 / (1 + c * a) + c^2 / (1 + a * b) \u2265 3 / (a * b * c + 1) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) (h : x + y + z = 3) : x ^ 2 / (1 + y * z) + y ^ 2 / (1 + z * x) + z ^ 2 / (1 + x * y) \u2265 3 / (x * y * z + 1):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) (h : x + y + z = 3) :\n   x ^ 2 / (1 + y * z) + y ^ 2 / (1 + z * x) + z ^ 2 / (1 + x * y) \u2265 3 / (x * y * z + 1):= by\n  have : x = 1 \u2227 y = 1 \u2227 z = 1 := by\n    apply And.intro\n    \u00b7\n      nlinarith [sq_nonneg (x + y + z), sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n    \u00b7 apply And.intro\n      \u00b7\n        nlinarith [sq_nonneg (x + y + z), sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n      \u00b7\n        nlinarith [sq_nonneg (x + y + z), sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  simp_all only [this, one_pow, one_mul, mul_one, add_left_eq_self, add_right_eq_self]\n  norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) (h : x + y + z = 3) :\n   x ^ 2 / (1 + y * z) + y ^ 2 / (1 + z * x) + z ^ 2 / (1 + x * y) \u2265 3 / (x * y * z + 1):= by\n  simp_all only [mul_assoc, mul_comm, mul_left_comm, add_assoc, add_comm, add_left_comm]\n  norm_num\n  have h1 : x = 1 := by\n    nlinarith [sq_nonneg (x - 1), sq_nonneg (y - 1), sq_nonneg (z - 1),\n      mul_pos hx hy, mul_pos hz hx, mul_pos hy hz]\n  have h2 : y = 1 := by\n    nlinarith [sq_nonneg (x - 1), sq_nonneg (y - 1), sq_nonneg (z - 1),\n      mul_pos hx hy, mul_pos hz hx, mul_pos hy hz]\n  have h3 : z = 1 := by\n    nlinarith [sq_nonneg (x - 1), sq_nonneg (y - 1), sq_nonneg (z - 1),\n      mul_pos hx hy, mul_pos hz hx, mul_pos hy hz]\n  subst_vars\n  norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) (h : x + y + z = 3) :\n   x ^ 2 / (1 + y * z) + y ^ 2 / (1 + z * x) + z ^ 2 / (1 + x * y) \u2265 3 / (x * y * z + 1):= by\n  have H\u2081 : x = 1 \u2227 y = 1 \u2227 z = 1 := by\n    apply And.intro\n    \u00b7 nlinarith [sq_nonneg (x + y + z), sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n    \u00b7 apply And.intro\n      \u00b7 nlinarith [sq_nonneg (x + y + z), sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n      \u00b7 nlinarith [sq_nonneg (x + y + z), sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  rw [H\u2081.left, H\u2081.right.left, H\u2081.right.right]\n  norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) (h : x + y + z = 3) :\n   x ^ 2 / (1 + y * z) + y ^ 2 / (1 + z * x) + z ^ 2 / (1 + x * y) \u2265 3 / (x * y * z + 1):= by\n  have : x = 1 \u2227 y = 1 \u2227 z = 1 := by\n    have : x = 1 \u2227 y = 1 \u2227 z = 1 := by\n      apply And.intro\n      \u00b7 nlinarith [sq_nonneg (x + y + z), sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n      \u00b7 apply And.intro\n        \u00b7 nlinarith [sq_nonneg (x + y + z), sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n        \u00b7 nlinarith [sq_nonneg (x + y + z), sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n    exact this\n  rw [this.1, this.2.1, this.2.2]\n  norm_num\n  <;> apply le_of_sub_nonneg\n  <;> field_simp\n  <;> ring_nf\n  <;> positivity"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a + b) ^ 3 / c + (b + c) ^ 3 / a + (c + a) ^ 3 / b \u2265 8 * (a ^ 2 + b ^ 2 + c ^ 2) + 10 * (a ^ 2 + b ^ 2 + c ^ 2 - a * b - b * c - c * a) := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2192 b \u2265 0 \u2192 c \u2265 0 \u2192 a * b * c \u2265 0 \u2192 a * b + b * c + c * a \u2264 a * a + b * b + c * c \u2192 3 * a * b * c \u2264 3 * (a * a + b * b + c * c) \u2192 3 * (a * b + b * c + c * a) * (a * b + b * c + c * a) \u2264 9 * (a * a + b * b + c * c) * (a * a + b * b + c * c):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2192 b \u2265 0 \u2192 c \u2265 0 \u2192 a * b * c \u2265 0 \u2192 \n   a * b + b * c + c * a \u2264 a * a + b * b + c * c \u2192\n   3 * a * b * c \u2264 3 * (a * a + b * b + c * c) \u2192\n   3 * (a * b + b * c + c * a) * (a * b + b * c + c * a) \u2264 9 * (a * a + b * b + c * c) * (a * a + b * b + c * c):= by\n  intro a b c ha hb hc hab hbc hca\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_nonneg ha hb, mul_nonneg hb hc, mul_nonneg hc ha]"
  ]
 },
 {
  "old": "(a b : \u211d) (ha : a > 0) (hb : b > 0) (hab : a * b \u2265 1) : (a + 2 * b + 2 / (a + 1)) * (b + 2 * a + 2 / (b + 1)) \u2265 16 := by",
  "new": "(x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x * y \u2264 1) : 1 / (x + 1) ^ 2 + 1 / (y + 1) ^ 2 \u2265 1 / 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x * y \u2264 1) : 1 / (x + 1) ^ 2 + 1 / (y + 1) ^ 2 \u2265 1 / 4:= by\n  have hx' : 0 < x + 1 := by linarith\n  have hy' : 0 < y + 1 := by linarith\n  have hxy' : 0 < (x + 1) * (y + 1) := by nlinarith\n  have hxy'' : (x + 1) * (y + 1) \u2260 0 := by nlinarith\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - 1), sq_nonneg (y - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x * y \u2264 1) : 1 / (x + 1) ^ 2 + 1 / (y + 1) ^ 2 \u2265 1 / 4:= by\n  have h : 0 < x * y := mul_pos hx hy\n  have h\u2081 : 0 < (x + 1) ^ 2 := by positivity\n  have h\u2082 : 0 < (y + 1) ^ 2 := by positivity\n  have h\u2083 : 0 < (x + 1) ^ 2 * (y + 1) ^ 2 := by positivity\n  field_simp [h\u2081, h\u2082]\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (x - y), hxy]\n  positivity\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x * y \u2264 1) : 1 / (x + 1) ^ 2 + 1 / (y + 1) ^ 2 \u2265 1 / 4:= by\n  have h\u2080 : 0 < x * y := mul_pos hx hy\n  have h\u2081 : 0 < x * y * (x + y) := by nlinarith\n  have h\u2082 : 0 < (x + 1) ^ 2 := by nlinarith\n  have h\u2083 : 0 < (y + 1) ^ 2 := by nlinarith\n  have h\u2084 : 0 < x * y * (x + y) * (x + 1) ^ 2 * (y + 1) ^ 2 := by positivity\n  field_simp\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x + y), sq_nonneg (x - 1), sq_nonneg (y - 1)]\n  positivity\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x * y \u2264 1) : 1 / (x + 1) ^ 2 + 1 / (y + 1) ^ 2 \u2265 1 / 4:= by\n  have h\u2080 : 0 < x * y := by positivity\n  have h\u2081 : 0 < (x + 1) ^ 2 := by positivity\n  have h\u2082 : 0 < (y + 1) ^ 2 := by positivity\n  have h\u2083 : 0 < (x + 1) ^ 2 * (y + 1) ^ 2 := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x + y), hxy]"
  ]
 },
 {
  "old": "(a b : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) : ((Real.sqrt a + Real.sqrt b) / 2)^2 \u2264 (a + (a^2 * b)^(1/3) + (a * b^2)^(1/3) + b) / 4 := by",
  "new": ": ((Real.sqrt (x ^ 2 + y ^ 2) / Real.sqrt 2) ^ 2) \u2264 (x ^ 2 + y ^ 2) / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    ((Real.sqrt (x ^ 2 + y ^ 2) / Real.sqrt 2) ^ 2) \u2264 (x ^ 2 + y ^ 2) / 2:= by\n  field_simp [pow_two]\n  rw [div_le_div_iff] <;>\n  nlinarith [sq_nonneg (x - y), Real.sq_sqrt (add_nonneg (mul_self_nonneg x) (mul_self_nonneg y)),\n    Real.sq_sqrt (show (0 : \u211d) \u2264 2 by norm_num)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    ((Real.sqrt (x ^ 2 + y ^ 2) / Real.sqrt 2) ^ 2) \u2264 (x ^ 2 + y ^ 2) / 2:= by\n  have h\u2080 : (Real.sqrt (x ^ 2 + y ^ 2) / Real.sqrt 2) ^ 2 \u2264 (x ^ 2 + y ^ 2) / 2 := by\n    have h\u2081 : 0 \u2264 x ^ 2 + y ^ 2 := by\n      nlinarith\n    have h\u2082 : 0 \u2264 Real.sqrt (x ^ 2 + y ^ 2) := by\n      exact Real.sqrt_nonneg (x ^ 2 + y ^ 2)\n    have h\u2083 : 0 \u2264 Real.sqrt 2 := by\n      exact Real.sqrt_nonneg 2\n    have h\u2084 : (Real.sqrt (x ^ 2 + y ^ 2) / Real.sqrt 2) ^ 2 = (x ^ 2 + y ^ 2) / 2 := by\n      field_simp [Real.sq_sqrt (by positivity : 0 \u2264 (x ^ 2 + y ^ 2)),\n        Real.sq_sqrt (by positivity : 0 \u2264 (2 : \u211d))]\n    nlinarith\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    ((Real.sqrt (x ^ 2 + y ^ 2) / Real.sqrt 2) ^ 2) \u2264 (x ^ 2 + y ^ 2) / 2:= by\n  have h\u2080 : 0 \u2264 Real.sqrt (x ^ 2 + y ^ 2) := by apply Real.sqrt_nonneg\n  have h\u2081 : 0 \u2264 Real.sqrt 2 := by apply Real.sqrt_nonneg\n  have h\u2082 : (Real.sqrt (x ^ 2 + y ^ 2) / Real.sqrt 2) ^ 2 = (x ^ 2 + y ^ 2) / 2 := by\n    rw [div_pow]\n    field_simp [Real.sqrt_sq, h\u2080, h\u2081]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    ((Real.sqrt (x ^ 2 + y ^ 2) / Real.sqrt 2) ^ 2) \u2264 (x ^ 2 + y ^ 2) / 2:= by\n  field_simp [pow_two]\n  ring_nf\n  rw [mul_comm]\n  nlinarith [sq_sqrt (show 0 \u2264 x ^ 2 + y ^ 2 by positivity), sq_nonneg (x - y)]\n  <;> try norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"
  ]
 },
 {
  "old": "(a b : \u2115) : a * b \u2223 a - b \u2194 a = b := by",
  "new": "(a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 a = 1 \u2227 b = 1 \u2194 a = 1 \u2228 b = 1 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) :\n    a = 1 \u2227 b = 1 \u2228 a = 1 \u2227 b = 1 \u2194 a = 1 \u2228 b = 1 := by\n  cases a <;> cases b <;> simp_all",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) :\n    a = 1 \u2227 b = 1 \u2228 a = 1 \u2227 b = 1 \u2194 a = 1 \u2228 b = 1 := by\n  cases a <;> cases b <;> simp_all\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) :\n    a = 1 \u2227 b = 1 \u2228 a = 1 \u2227 b = 1 \u2194 a = 1 \u2228 b = 1 := by\n  by_cases ha : a = 0 <;> by_cases hb : b = 0 <;> simp_all\n  all_goals aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) :\n    a = 1 \u2227 b = 1 \u2228 a = 1 \u2227 b = 1 \u2194 a = 1 \u2228 b = 1 := by\n  cases a <;> cases b <;> simp_all [mul_eq_one, Nat.succ_inj']\n  <;> tauto\n  <;> aesop"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^4 / (3 * a + b + c) + b^4 / (3 * b + c + a) + c^4 / (3 * c + a + b)) \u2265 (a^3 + b^3 + c^3) / 5 := by",
  "new": ": \u2200 x : \u211d, x > 0 \u2192 x ^ 3 / (3 * x + x) \u2264 x ^ 2 / 3 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 3 / (3 * x + x) \u2264 x ^ 2 / 3 := by\n  intro x hx\n  have h\u2080 : 0 < 3 * x + x := by linarith\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (x - 2), sq_nonneg (x - 3)]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 3 / (3 * x + x) \u2264 x ^ 2 / 3 := by\n  intro x hx\n  have h\u2081 : 0 < x ^ 2 := sq_pos_of_pos hx\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (x ^ 2 - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 3 / (3 * x + x) \u2264 x ^ 2 / 3 := by\n  intro x hx\n  have h\u2080 : 0 < x := hx\n  have h\u2081 : 0 < 3 * x + x := by linarith\n  have h\u2082 : 0 < 3 * x + x * 3 := by linarith\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - 3)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 3 / (3 * x + x) \u2264 x ^ 2 / 3 := by\n  intro x hx\n  simp only [pow_three, add_comm]\n  apply le_of_sub_nonneg\n  field_simp\n  ring_nf\n  positivity"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (h : a^2 + b^2 + c^2 = 1): (a * b^2 + b * c^2 + c * a^2 - a * b * c) \u2264 (2 * Real.sqrt 3) / 9 := by",
  "new": "(x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x ^ 2 + y ^ 2 + z ^ 2 = 1) : (x ^ 3 + y ^ 3 + z ^ 3) \u2264 1 \u2227 (x ^ 3 + y ^ 3 + z ^ 3) ^ 2 \u2264 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x ^ 2 + y ^ 2 + z ^ 2 = 1)  : (x ^ 3 + y ^ 3 + z ^ 3) \u2264 1 \u2227 (x ^ 3 + y ^ 3 + z ^ 3) ^ 2 \u2264 3:= by\n  have h\u2081 : (x ^ 2 + y ^ 2 + z ^ 2) ^ 2 = 1 := by simp [h]\n  have h\u2082 : x ^ 3 + y ^ 3 + z ^ 3 \u2264 1 := by\n    nlinarith [sq_nonneg (x - 1), sq_nonneg (y - 1), sq_nonneg (z - 1),\n      mul_nonneg hx (sq_nonneg (x - 1)), mul_nonneg hy (sq_nonneg (y - 1)),\n      mul_nonneg hz (sq_nonneg (z - 1))]\n  have h\u2083 : (x ^ 3 + y ^ 3 + z ^ 3) ^ 2 \u2264 3 := by\n    nlinarith [sq_nonneg (x ^ 2 + y ^ 2 + z ^ 2), mul_nonneg hx (sq_nonneg x),\n      mul_nonneg hy (sq_nonneg y), mul_nonneg hz (sq_nonneg z)]\n  exact \u27e8h\u2082, h\u2083\u27e9\n  <;> nlinarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x ^ 2 + y ^ 2 + z ^ 2 = 1)  : (x ^ 3 + y ^ 3 + z ^ 3) \u2264 1 \u2227 (x ^ 3 + y ^ 3 + z ^ 3) ^ 2 \u2264 3:= by\n  constructor\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (y - 1), sq_nonneg (z - 1)]\n  have h\u2081 : (x ^ 2 + y ^ 2 + z ^ 2) ^ 2 = 1 := by simp [h]\n  nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (x ^ 2 - z ^ 2),\n    sq_nonneg (y ^ 2 - z ^ 2), sq_nonneg (x ^ 2 - 2 * x * y),\n    sq_nonneg (x ^ 2 - 2 * x * z), sq_nonneg (y ^ 2 - 2 * y * z)]"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) (hab : a + b + c + d = 4) : (1 + a * b) / (1 + b ^ 2 * c ^ 2) + (1 + b * c) / (1 + c ^ 2 * d ^ 2) + (1 + c * d) / (1 + d ^ 2 * a ^ 2) + (1 + d * a) / (1 + a ^ 2 * b ^ 2) \u2265 4 := by",
  "new": "(a b c : \u211d) (habc : a + b + c = 1) (h : 0 < a \u2227 0 < b \u2227 0 < c) : (1 + a * b) / (1 + b ^ 2 * a ^ 2) + (1 + b * c) / (1 + c ^ 2 * b ^ 2) + (1 + c * a) / (1 + a ^ 2 * c ^ 2) \u2265 1 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (a b c : \u211d) (habc : a + b + c = 1) (h : 0 < a \u2227 0 < b \u2227 0 < c)  : (1 + a * b) / (1 + b ^ 2 * a ^ 2) + (1 + b * c) / (1 + c ^ 2 * b ^ 2) + (1 + c * a) / (1 + a ^ 2 * c ^ 2) \u2265 1  := by\n  have h\u2081 : 0 < a := h.1\n  have h\u2082 : 0 < b := h.2.1\n  have h\u2083 : 0 < c := h.2.2\n  have h\u2084 : 0 < a * b := mul_pos h\u2081 h\u2082\n  have h\u2085 : 0 < b * c := mul_pos h\u2082 h\u2083\n  have h\u2086 : 0 < c * a := mul_pos h\u2083 h\u2081\n  have h\u2087 : 0 < a * b * (b * c) := by positivity\n  have h\u2088 : 0 < b * c * (c * a) := by positivity\n  have h\u2089 : 0 < c * a * (a * b) := by positivity\n  have h\u2081\u2080 : 0 < a * b * c := by positivity\n  have h\u2081\u2081 : (1 + a * b) / (1 + b ^ 2 * a ^ 2) \u2265 1 / 2 := by\n    rw [ge_iff_le]\n    rw [div_le_div_iff]\n    nlinarith [sq_nonneg (a * b - 1), h\u2081, h\u2082]\n    positivity\n    positivity\n  have h\u2081\u2082 : (1 + b * c) / (1 + c ^ 2 * b ^ 2) \u2265 1 / 2 := by\n    rw [ge_iff_le]\n    rw [div_le_div_iff]\n    nlinarith [sq_nonneg (b * c - 1), h\u2082, h\u2083]\n    positivity\n    positivity\n  have h\u2081\u2083 : (1 + c * a) / (1 + a ^ 2 * c ^ 2) \u2265 1 / 2 := by\n    rw [ge_iff_le]\n    rw [div_le_div_iff]\n    nlinarith [sq_nonneg (c * a - 1), h\u2083, h\u2081]\n    positivity\n    positivity\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (a b c : \u211d) (habc : a + b + c = 1) (h : 0 < a \u2227 0 < b \u2227 0 < c)  : (1 + a * b) / (1 + b ^ 2 * a ^ 2) + (1 + b * c) / (1 + c ^ 2 * b ^ 2) + (1 + c * a) / (1 + a ^ 2 * c ^ 2) \u2265 1  := by\n  obtain \u27e8ha, hb, hc\u27e9 := h\n  have h\u2080 : 0 \u2264 a * b := by positivity\n  have h\u2081 : 0 \u2264 b * c := by positivity\n  have h\u2082 : 0 \u2264 c * a := by positivity\n  have h\u2083 : 0 \u2264 b ^ 2 * a ^ 2 := by positivity\n  have h\u2084 : 0 \u2264 c ^ 2 * b ^ 2 := by positivity\n  have h\u2085 : 0 \u2264 a ^ 2 * c ^ 2 := by positivity\n  have h\u2086 : (1 + a * b) / (1 + b ^ 2 * a ^ 2) \u2265 1 - a * b := by\n    rw [ge_iff_le]\n    rw [le_div_iff (show (0 : \u211d) < 1 + b ^ 2 * a ^ 2 by positivity)]\n    nlinarith [sq_nonneg (a * b - 1)]\n  have h\u2087 : (1 + b * c) / (1 + c ^ 2 * b ^ 2) \u2265 1 - b * c := by\n    rw [ge_iff_le]\n    rw [le_div_iff (show (0 : \u211d) < 1 + c ^ 2 * b ^ 2 by positivity)]\n    nlinarith [sq_nonneg (b * c - 1)]\n  have h\u2088 : (1 + c * a) / (1 + a ^ 2 * c ^ 2) \u2265 1 - c * a := by\n    rw [ge_iff_le]\n    rw [le_div_iff (show (0 : \u211d) < 1 + a ^ 2 * c ^ 2 by positivity)]\n    nlinarith [sq_nonneg (c * a - 1)]\n  nlinarith [h\u2086, h\u2087, h\u2088]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 3) : 2 * (a^2 + b^2 + c^2)^2 \u2265 3 * (a^3 * (b^2 + c) + b^3 * (c^2 + a) + c^3 * (a^2 + b)) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (x ^ 2 / (x + y) + y ^ 2 / (y + z) + z ^ 2 / (z + x)) \u2265 (x * y + y * z + z * x) / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (x ^ 2 / (x + y) + y ^ 2 / (y + z) + z ^ 2 / (z + x)) \u2265 (x * y + y * z + z * x) / 2:= by\n  have h1 : 0 < x + y := by linarith\n  have h2 : 0 < y + z := by linarith\n  have h3 : 0 < z + x := by linarith\n  have h4 : 0 < x * y := by positivity\n  have h5 : 0 < y * z := by positivity\n  have h6 : 0 < z * x := by positivity\n  have h7 : 0 < (x + y) * (y + z) * (z + x) := by positivity\n  have h8 : 0 < (x + y) * (y + z) * (z + x) * (x * y + y * z + z * x) := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x * y + y * z + z * x), mul_self_nonneg (x * y - y * z),\n    mul_self_nonneg (y * z - z * x), mul_self_nonneg (z * x - x * y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (x ^ 2 / (x + y) + y ^ 2 / (y + z) + z ^ 2 / (z + x)) \u2265 (x * y + y * z + z * x) / 2:= by\n  have h\u2080 : x ^ 2 / (x + y) \u2265 x ^ 2 / 2 := by\n    gcongr\n    linarith\n  have h\u2081 : y ^ 2 / (y + z) \u2265 y ^ 2 / 2 := by\n    gcongr\n    linarith\n  have h\u2082 : z ^ 2 / (z + x) \u2265 z ^ 2 / 2 := by\n    gcongr\n    linarith\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (x ^ 2 / (x + y) + y ^ 2 / (y + z) + z ^ 2 / (z + x)) \u2265 (x * y + y * z + z * x) / 2:= by\n  have h1 : 0 < x * y := mul_pos hx hy\n  have h2 : 0 < y * z := mul_pos hy hz\n  have h3 : 0 < z * x := mul_pos hz hx\n  have h4 : 0 < x + y := by linarith\n  have h5 : 0 < y + z := by linarith\n  have h6 : 0 < z + x := by linarith\n  have h7 : 0 < (x + y) * (y + z) * (z + x) := by positivity\n  have h8 : 0 < x * y * z := by positivity\n  field_simp\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x * y + y * z + z * x), mul_self_nonneg (x * y - y * z),\n    mul_self_nonneg (y * z - z * x), mul_self_nonneg (z * x - x * y)]\n  positivity\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (x ^ 2 / (x + y) + y ^ 2 / (y + z) + z ^ 2 / (z + x)) \u2265 (x * y + y * z + z * x) / 2:= by\n  have h : x + y + z = 1 := hab\n  have hx' : 0 < x + y := by linarith\n  have hy' : 0 < y + z := by linarith\n  have hz' : 0 < z + x := by linarith\n  have hxy : 0 < x * y := mul_pos hx hy\n  have hyz : 0 < y * z := mul_pos hy hz\n  have hxz : 0 < z * x := mul_pos hz hx\n  have h\u2081 : x ^ 2 / (x + y) \u2265 (2 * x - (x + y) / 2) / 2 := by\n    rw [ge_iff_le, div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (x - (x + y) / 2)]\n  have h\u2082 : y ^ 2 / (y + z) \u2265 (2 * y - (y + z) / 2) / 2 := by\n    rw [ge_iff_le, div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (y - (y + z) / 2)]\n  have h\u2083 : z ^ 2 / (z + x) \u2265 (2 * z - (z + x) / 2) / 2 := by\n    rw [ge_iff_le, div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (z - (z + x) / 2)]\n  nlinarith\n  <;> linarith\n  <;> norm_num"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a * b + b * c + c * a + (a ^ 3 + b ^ 3 + c ^ 3) / (a + b + c) \u2265 a ^ 2 + b ^ 2 + c ^ 2 + 3 * (a + b - c) * (b + c - a) * (c + a - b) / (a + b + c) := by",
  "new": "(a b c : \u211d) (hab : a + b + c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0) (h1 : a + b > c) (h2 : a + c > b) (h3 : b + c > a) : a * b ^ 2 + b * c ^ 2 + c * a ^ 2 + a * b * c * (3 * (a + b + c)) \u2265 a ^ 2 * b + b ^ 2 * c + c ^ 2 * a:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_of_exp_bound (a b c : \u211d) (hab : a + b + c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0) (h1 : a + b > c) (h2 : a + c > b) (h3 : b + c > a) : a * b ^ 2 + b * c ^ 2 + c * a ^ 2 + a * b * c * (3 * (a + b + c)) \u2265 a ^ 2 * b + b ^ 2 * c + c ^ 2 * a:= by\n  field_simp [hab, h.1, h.2.1, h.2.2, h1, h2, h3]\n  nlinarith [mul_pos h.1 h.2.1, mul_pos h.2.1 h.2.2, mul_pos h.2.2 h.1, mul_pos h.1 (mul_pos h.2.1 h.2.2), mul_pos h.2.1 (mul_pos h.1 h.2.2), mul_pos h.2.2 (mul_pos h.1 h.2.1)]\n  <;> linarith\n  <;> nlinarith\n  <;> linarith\n  <;> nlinarith\n  <;> linarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_of_exp_bound (a b c : \u211d) (hab : a + b + c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0) (h1 : a + b > c) (h2 : a + c > b) (h3 : b + c > a) : a * b ^ 2 + b * c ^ 2 + c * a ^ 2 + a * b * c * (3 * (a + b + c)) \u2265 a ^ 2 * b + b ^ 2 * c + c ^ 2 * a:= by\n  simp only [hab, mul_add, mul_comm, mul_left_comm]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_pos (h.2.1) (h.1), mul_pos (h.2.2) (h.2.1), mul_pos (h.1) (h.2.2),\n    mul_pos (h.2.1) (h.2.2), mul_pos (h.1) (h.2.1), mul_pos (h.2.2) (h.1)]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_of_exp_bound (a b c : \u211d) (hab : a + b + c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0) (h1 : a + b > c) (h2 : a + c > b) (h3 : b + c > a) : a * b ^ 2 + b * c ^ 2 + c * a ^ 2 + a * b * c * (3 * (a + b + c)) \u2265 a ^ 2 * b + b ^ 2 * c + c ^ 2 * a:= by\n  simp [hab, h1, h2, h3, add_comm, add_left_comm, mul_comm, mul_left_comm]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_nonneg (sub_nonneg.mpr h1.le) (sub_nonneg.mpr h2.le),\n    mul_nonneg (sub_nonneg.mpr h2.le) (sub_nonneg.mpr h3.le),\n    mul_nonneg (sub_nonneg.mpr h3.le) (sub_nonneg.mpr h1.le)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_of_exp_bound (a b c : \u211d) (hab : a + b + c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0) (h1 : a + b > c) (h2 : a + c > b) (h3 : b + c > a) : a * b ^ 2 + b * c ^ 2 + c * a ^ 2 + a * b * c * (3 * (a + b + c)) \u2265 a ^ 2 * b + b ^ 2 * c + c ^ 2 * a:= by\n  simp_all only [mul_assoc, mul_comm, mul_left_comm]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_pos (sub_pos.mpr h1) (sub_pos.mpr h3),\n    mul_pos (sub_pos.mpr h1) (sub_pos.mpr h2), mul_pos (sub_pos.mpr h2) (sub_pos.mpr h3)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 1) : a^2 / (9 * a + 1) + b^2 / (9 * b + 1) + c^2 / (9 * c + 1) \u2264 1 / (12 * Real.sqrt (3 * (a * b + b * c + c * a))) := by",
  "new": "{a b c : \u211d} (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 1) : a^2 / (9 * a + 1) + b^2 / (9 * b + 1) + c^2 / (9 * c + 1) \u2264 1 / 6:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {a b c : \u211d} (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 1) :\n     a^2 / (9 * a + 1) + b^2 / (9 * b + 1) + c^2 / (9 * c + 1) \u2264 1 / 6:= by\n  have : a + b + c = 1 := hab\n  have h : a ^ 2 / (9 * a + 1) \u2264 a / 6 := by\n    rw [div_le_div_iff] <;>\n      nlinarith [sq_nonneg a, mul_self_nonneg a]\n  have h\u2081 : b ^ 2 / (9 * b + 1) \u2264 b / 6 := by\n    rw [div_le_div_iff] <;>\n      nlinarith [sq_nonneg b, mul_self_nonneg b]\n  have h\u2082 : c ^ 2 / (9 * c + 1) \u2264 c / 6 := by\n    rw [div_le_div_iff] <;>\n      nlinarith [sq_nonneg c, mul_self_nonneg c]\n  linarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {a b c : \u211d} (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 1) :\n     a^2 / (9 * a + 1) + b^2 / (9 * b + 1) + c^2 / (9 * c + 1) \u2264 1 / 6:= by\n  have : a ^ 2 / (9 * a + 1) \u2264 (1 / 6) * a := by\n    rw [div_le_iff] <;> nlinarith\n  have : b ^ 2 / (9 * b + 1) \u2264 (1 / 6) * b := by\n    rw [div_le_iff] <;> nlinarith\n  have : c ^ 2 / (9 * c + 1) \u2264 (1 / 6) * c := by\n    rw [div_le_iff] <;> nlinarith\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {a b c : \u211d} (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 1) :\n     a^2 / (9 * a + 1) + b^2 / (9 * b + 1) + c^2 / (9 * c + 1) \u2264 1 / 6:= by\n  have h\u2080 : a ^ 2 / (9 * a + 1) \u2264 a / 6 := by\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a - 1 / 3)]\n  have h\u2081 : b ^ 2 / (9 * b + 1) \u2264 b / 6 := by\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (b - 1 / 3)]\n  have h\u2082 : c ^ 2 / (9 * c + 1) \u2264 c / 6 := by\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (c - 1 / 3)]\n  linarith\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {a b c : \u211d} (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 1) :\n     a^2 / (9 * a + 1) + b^2 / (9 * b + 1) + c^2 / (9 * c + 1) \u2264 1 / 6:= by\n  have h\u2080 : a^2 / (9 * a + 1) \u2264 (1 / 6) * a := by\n    rw [div_le_iff (show (0 : \u211d) < 9 * a + 1 by positivity)]\n    nlinarith [sq_nonneg a, sq_nonneg (a - 1 / 6)]\n  have h\u2081 : b^2 / (9 * b + 1) \u2264 (1 / 6) * b := by\n    rw [div_le_iff (show (0 : \u211d) < 9 * b + 1 by positivity)]\n    nlinarith [sq_nonneg b, sq_nonneg (b - 1 / 6)]\n  have h\u2082 : c^2 / (9 * c + 1) \u2264 (1 / 6) * c := by\n    rw [div_le_iff (show (0 : \u211d) < 9 * c + 1 by positivity)]\n    nlinarith [sq_nonneg c, sq_nonneg (c - 1 / 6)]\n  linarith [h\u2080, h\u2081, h\u2082, hab]"
  ]
 },
 {
  "old": ": \u2200 a b c : \u211d, (a + b * c / a) * (b + c * a / b) * (c + a * b / c) - 8 * a * b * c \u2265 a * (b - c) ^ 2 + b * (c - a) ^ 2 + c * (a - b) ^ 2 := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : (a + b * c / a) * (b + c * a / b) * (c + a * b / c) - 8 * a * b * c \u2265 a * (b - c) ^ 2 + b * (c - a) ^ 2 + c * (a - b) ^ 2 \u2227 a * (b - c) ^ 2 + b * (c - a) ^ 2 + c * (a - b) ^ 2 \u2265 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_of_exp_bound (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c)  (habc : a * b * c = 1) : \n  (a + b * c / a) * (b + c * a / b) * (c + a * b / c) - 8 * a * b * c \u2265 a * (b - c) ^ 2 + b * (c - a) ^ 2 + c * (a - b) ^ 2 \u2227 \n  a * (b - c) ^ 2 + b * (c - a) ^ 2 + c * (a - b) ^ 2 \u2265 0:= by\n  have h\u2081 : (a + b * c / a) * (b + c * a / b) * (c + a * b / c) - 8 * a * b * c \u2265 a * (b - c) ^ 2 + b * (c - a) ^ 2 + c * (a - b) ^ 2 := by\n    field_simp [habc]\n    ring_nf\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c), mul_nonneg ha.le hb.le,\n      mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le, mul_nonneg (sq_nonneg (a - b)) hc.le,\n      mul_nonneg (sq_nonneg (a - c)) hb.le, mul_nonneg (sq_nonneg (b - c)) ha.le]\n  have h\u2082 : a * (b - c) ^ 2 + b * (c - a) ^ 2 + c * (a - b) ^ 2 \u2265 0 := by\n    positivity\n  exact \u27e8h\u2081, h\u2082\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_of_exp_bound (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c)  (habc : a * b * c = 1) : \n  (a + b * c / a) * (b + c * a / b) * (c + a * b / c) - 8 * a * b * c \u2265 a * (b - c) ^ 2 + b * (c - a) ^ 2 + c * (a - b) ^ 2 \u2227 \n  a * (b - c) ^ 2 + b * (c - a) ^ 2 + c * (a - b) ^ 2 \u2265 0:= by\n  constructor\n  case left =>\n    field_simp [habc]\n    ring_nf\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_nonneg ha.le hb.le,\n      mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le, mul_nonneg (sq_nonneg (a - b)) hc.le,\n      mul_nonneg (sq_nonneg (b - c)) ha.le, mul_nonneg (sq_nonneg (c - a)) hb.le]\n  case right =>\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_nonneg ha.le hb.le,\n      mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le, mul_nonneg (sq_nonneg (a - b)) hc.le,\n      mul_nonneg (sq_nonneg (b - c)) ha.le, mul_nonneg (sq_nonneg (c - a)) hb.le]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a + b + c) * (a^5 + b^5 + c^5) / (a * b * c) + 3 * (a * b * c) \u2265 a * (a + b) * (b + c) + b * (b + a) * (b + c) + c * (c + a) * (c + b) := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a + b) * (b + c) * (c + a) * (a^2 + b^2 + c^2) + 3 * a * b * c * (a * b + b * c + c * a) + (a^2 + b^2) * (b^2 + c^2) * (c^2 + a^2) \u2265 (a^2 * b + b^2 * c + c^2 * a) * (b * c + c * a + a * b):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a + b) * (b + c) * (c + a) * (a^2 + b^2 + c^2) + 3 * a * b * c * (a * b + b * c + c * a) + (a^2 + b^2) * (b^2 + c^2) * (c^2 + a^2) \u2265 (a^2 * b + b^2 * c + c^2 * a) * (b * c + c * a + a * b):= by\n  rintro a b c \u27e8ha : 0 \u2264 a, hb : 0 \u2264 b, hc : 0 \u2264 c\u27e9\n  simp only [mul_assoc]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (a - c), mul_nonneg ha hb, mul_nonneg hb hc,\n    mul_nonneg ha hc, mul_nonneg (sq_nonneg a) ha, mul_nonneg (sq_nonneg b) hb, mul_nonneg (sq_nonneg c) hc,\n    mul_nonneg (sq_nonneg (a - b)) ha, mul_nonneg (sq_nonneg (b - c)) hb, mul_nonneg (sq_nonneg (a - c)) hc,\n    mul_nonneg (sq_nonneg (a * b)) ha, mul_nonneg (sq_nonneg (b * c)) hb, mul_nonneg (sq_nonneg (a * c)) hc]\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 3) : 6 \u2264 Real.sqrt (a^3 + b * c^2 + 2) + Real.sqrt (a^2 * c + b^3 + 2) + Real.sqrt (a * b^2 + c^3 + 2) := by",
  "new": "{a b c : \u211d} (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 3) : (Real.sqrt (a^3 + b * c^2 + 2) \u2265 2 / 2 \u2227 Real.sqrt (a^2 * c + b^3 + 2) \u2265 2 / 2 \u2227 Real.sqrt (a * b^2 + c^3 + 2) \u2265 2 / 2) \u2228 (Real.sqrt (a^3 + b * c^2 + 2) < 2 / 2 \u2228 Real.sqrt (a^2 * c + b^3 + 2) < 2 / 2 \u2228 Real.sqrt (a * b^2 + c^3 + 2) < 2 / 2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_nonneg_of_sum_eq_three {a b c : \u211d} (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 3) : (Real.sqrt (a^3 + b * c^2 + 2) \u2265 2 / 2 \u2227 Real.sqrt (a^2 * c + b^3 + 2) \u2265 2 / 2 \u2227 Real.sqrt (a * b^2 + c^3 + 2) \u2265 2 / 2) \u2228 (Real.sqrt (a^3 + b * c^2 + 2) < 2 / 2 \u2228 Real.sqrt (a^2 * c + b^3 + 2) < 2 / 2 \u2228 Real.sqrt (a * b^2 + c^3 + 2) < 2 / 2):= by\n  by_cases h\u2080 : Real.sqrt (a^3 + b * c^2 + 2) \u2265 2 / 2 <;> by_cases h\u2081 : Real.sqrt (a^2 * c + b^3 + 2) \u2265 2 / 2 <;> by_cases h\u2082 : Real.sqrt (a * b^2 + c^3 + 2) \u2265 2 / 2 <;> simp_all\n  <;> nlinarith [sq_sqrt (show 0 \u2264 a^3 + b * c^2 + 2 by positivity),\n    sq_sqrt (show 0 \u2264 a^2 * c + b^3 + 2 by positivity),\n    sq_sqrt (show 0 \u2264 a * b^2 + c^3 + 2 by positivity)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_nonneg_of_sum_eq_three {a b c : \u211d} (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 3) : (Real.sqrt (a^3 + b * c^2 + 2) \u2265 2 / 2 \u2227 Real.sqrt (a^2 * c + b^3 + 2) \u2265 2 / 2 \u2227 Real.sqrt (a * b^2 + c^3 + 2) \u2265 2 / 2) \u2228 (Real.sqrt (a^3 + b * c^2 + 2) < 2 / 2 \u2228 Real.sqrt (a^2 * c + b^3 + 2) < 2 / 2 \u2228 Real.sqrt (a * b^2 + c^3 + 2) < 2 / 2):= by\n  refine' or_iff_not_imp_right.mpr fun h => _\n  refine' \u27e8_, _, _\u27e9 <;> norm_num <;>\n  nlinarith [sq_sqrt (show 0 \u2264 a^3 + b * c^2 + 2 by positivity),\n    sq_sqrt (show 0 \u2264 a^2 * c + b^3 + 2 by positivity),\n    sq_sqrt (show 0 \u2264 a * b^2 + c^3 + 2 by positivity)]\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_nonneg_of_sum_eq_three {a b c : \u211d} (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 3) : (Real.sqrt (a^3 + b * c^2 + 2) \u2265 2 / 2 \u2227 Real.sqrt (a^2 * c + b^3 + 2) \u2265 2 / 2 \u2227 Real.sqrt (a * b^2 + c^3 + 2) \u2265 2 / 2) \u2228 (Real.sqrt (a^3 + b * c^2 + 2) < 2 / 2 \u2228 Real.sqrt (a^2 * c + b^3 + 2) < 2 / 2 \u2228 Real.sqrt (a * b^2 + c^3 + 2) < 2 / 2):= by\n  by_cases h\u2081 : Real.sqrt (a^3 + b * c^2 + 2) \u2265 2 / 2 <;> by_cases h\u2082 : Real.sqrt (a^2 * c + b^3 + 2) \u2265 2 / 2 <;> by_cases h\u2083 : Real.sqrt (a * b^2 + c^3 + 2) \u2265 2 / 2 <;> simp_all\n  <;> nlinarith [sq_sqrt (show (0 : \u211d) \u2264 a^3 + b * c^2 + 2 by positivity),\n    sq_sqrt (show (0 : \u211d) \u2264 a^2 * c + b^3 + 2 by positivity),\n    sq_sqrt (show (0 : \u211d) \u2264 a * b^2 + c^3 + 2 by positivity)]\n  <;> linarith"
  ]
 },
 {
  "old": "(y : \u211d) : cos y ^ 2 = (cos (2 * y) + 1) / 2 := by",
  "new": ": cos (2 * x) = 2 * cos x ^ 2 - 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem cos_two_mul : cos (2 * x) = 2 * cos x ^ 2 - 1:= by\n  rw [two_mul, cos_add, \u2190 sq, \u2190 sq, cos_sq']\n  ring\n  <;> simp only [sin_sq, cos_sq]\n  <;> ring\n  <;> simp only [sin_sq, cos_sq]\n  <;> ring",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem cos_two_mul : cos (2 * x) = 2 * cos x ^ 2 - 1:= by\n  have h\u2080 : x + x = 2 * x := by ring\n  have h\u2081 : cos (x + x) = cos x * cos x - sin x * sin x := by rw [cos_add]\n  rw [h\u2080] at *\n  rw [h\u2081]\n  ring\n  <;> simp [cos_sq']\n  <;> ring\n  <;> simp [cos_sq']\n  <;> ring",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem cos_two_mul : cos (2 * x) = 2 * cos x ^ 2 - 1:= by\n  rw [two_mul, cos_add]\n  ring\n  <;> simp [cos_sq']\n  <;> ring\n  <;> simp [cos_sq']\n  <;> ring\n  <;> simp [cos_sq']\n  <;> ring"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : (a^2 - b * d)/(b + d + 2 * c) + (b^2 - c * a)/(c + a + 2 * d) + (c^2 - d * b)/(d + b + 2 * a) + (d^2 - a * c)/(a + c + 2 * b) \u2265 0 := by",
  "new": ": (x^2+10) * (y^2+10) \u2265 20 * x * y + 100 \u2194 (x - y)^2 + (x - 5)^2 + (y - 5)^2 \u2265 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 :  (x^2+10) * (y^2+10) \u2265 20 * x * y + 100  \u2194 (x - y)^2 + (x - 5)^2 + (y - 5)^2 \u2265 0:= by\n  cases' le_total x y with h h <;>\n  cases' le_total x 5 with h' h' <;>\n  cases' le_total y 5 with h'' h'' <;>\n  simp_all [mul_comm, mul_left_comm, mul_assoc, add_nonneg,\n    sq_nonneg, sub_nonneg, sub_nonpos, add_nonpos,\n    add_nonpos, add_nonpos, add_nonpos] <;>\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 :  (x^2+10) * (y^2+10) \u2265 20 * x * y + 100  \u2194 (x - y)^2 + (x - 5)^2 + (y - 5)^2 \u2265 0:= by\n  constructor <;> intro h <;>\n  cases' le_total x y with h' h' <;>\n  cases' le_total x 5 with h'' h'' <;>\n  cases' le_total y 5 with h''' h''' <;>\n  simp_all [sq, mul_comm, mul_left_comm, mul_assoc, add_assoc, add_left_comm, add_comm]\n  <;> nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a / b) + Real.sqrt (b / c) + (c / a) \u2265 2 * Real.sqrt 2 := by",
  "new": ": Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) \u2265 2 * Real.sqrt 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) \u2265 2 * Real.sqrt 2:= by\n  have h\u2081 : 0 \u2264 Real.sqrt 2 := Real.sqrt_nonneg 2\n  have h\u2082 : 0 \u2264 Real.sqrt (Real.sqrt 2 + 1) := Real.sqrt_nonneg (Real.sqrt 2 + 1)\n  have h\u2083 : 0 \u2264 Real.sqrt 2 * Real.sqrt (Real.sqrt 2 + 1) := by positivity\n  nlinarith [sq_sqrt (show 0 \u2264 2 by linarith), sq_sqrt (show 0 \u2264 Real.sqrt 2 + 1 by linarith)]"
  ]
 },
 {
  "old": ": \u2200 x, -sinh (-x) = sinh x := by",
  "new": "(h\u2081 : \u2200 (x : \u211d), -sinh (-x) = sinh x) (h\u2082 : \u2200 (x : \u211d), cosh x \u2265 0) : \u2200 (x : \u211d), cosh x = 0 \u2192 sinh x = 0 \u2192 x = 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem invalid_20210329 (h\u2081 : \u2200 (x : \u211d), -sinh (-x) = sinh x)  (h\u2082 : \u2200 (x : \u211d), cosh x \u2265 0) : \u2200 (x : \u211d), cosh x = 0 \u2192 sinh x = 0 \u2192 x = 0:= by\n  intro x h\u2083 h\u2084\n  have h\u2085 := h\u2082 x\n  have h\u2086 := h\u2081 x\n  simp_all [cosh_pos]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a * b * c / (a ^ 3 + b ^ 3 + a * b * c) + a * b * c / (b ^ 3 + c ^ 3 + a * b * c) + a * b * c / (c ^ 3 + a ^ 3 + a * b * c) \u2264 1 := by",
  "new": ": a * b * c / (a ^ 3 + b ^ 3 + a * b * c) + a * b * c / (b ^ 3 + c ^ 3 + a * b * c) + a * b * c / (c ^ 3 + a ^ 3 + a * b * c) \u2264 1 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    a * b * c / (a ^ 3 + b ^ 3 + a * b * c) + a * b * c / (b ^ 3 + c ^ 3 + a * b * c) + a * b * c / (c ^ 3 + a ^ 3 + a * b * c) \u2264 1 := by\n  rcases eq_or_lt_of_le (Nat.zero_le a) with (rfl | ha) <;>\n  rcases eq_or_lt_of_le (Nat.zero_le b) with (rfl | hb) <;>\n  rcases eq_or_lt_of_le (Nat.zero_le c) with (rfl | hc) <;>\n  simp_all [Nat.div_eq_of_lt]\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    a * b * c / (a ^ 3 + b ^ 3 + a * b * c) + a * b * c / (b ^ 3 + c ^ 3 + a * b * c) + a * b * c / (c ^ 3 + a ^ 3 + a * b * c) \u2264 1 := by\n  rcases eq_or_lt_of_le (Nat.zero_le a) with (rfl | ha) <;> rcases eq_or_lt_of_le (Nat.zero_le b) with (rfl | hb) <;> rcases eq_or_lt_of_le (Nat.zero_le c) with (rfl | hc)\n  all_goals simp_all [Nat.div_eq_of_lt]\n  all_goals\n    apply Nat.div_eq_of_lt\n    all_goals\n      norm_num\n      nlinarith [mul_pos ha hb, mul_pos hb hc, mul_pos hc ha]\n  all_goals\n    apply Nat.div_eq_of_lt\n    all_goals\n      norm_num\n      nlinarith [mul_pos ha hb, mul_pos hb hc, mul_pos hc ha]\n  all_goals\n    apply Nat.div_eq_of_lt\n    all_goals\n      norm_num\n      nlinarith [mul_pos ha hb, mul_pos hb hc, mul_pos hc ha]"
  ]
 },
 {
  "old": "(n : \u2115) : \u00ac 2 \u2223 n^2 + n + 1 := by",
  "new": "(x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y):= by\n  by_cases h : x.Coprime y\n  exact Or.inl h\n  exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y):= by\n  have := em (x.Coprime y)\n  exact this"
  ]
 },
 {
  "old": ": \u2200 {a b c : \u2115}, a \u2223 b \u2227 b \u2223 c \u2227 c \u2223 a \u2192 a = b \u2227 b = c \u2227 c = a := by",
  "new": "(h\u2081 : a < b) (h\u2082 : a \u2223 b) : Nat.Coprime a b \u2194 a = 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_cancel_left_of_lt (h\u2081 : a < b) (h\u2082 : a \u2223 b) : Nat.Coprime a b \u2194 a = 1:= by\n  cases' Nat.eq_zero_or_pos a with h h\n  all_goals simp_all [Nat.coprime_iff_gcd_eq_one, Nat.gcd_eq_left, Nat.div_eq_of_eq_mul_left]\n  all_goals omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_cancel_left_of_lt (h\u2081 : a < b) (h\u2082 : a \u2223 b) : Nat.Coprime a b \u2194 a = 1:= by\n  rw [Nat.coprime_iff_gcd_eq_one]\n  cases' Nat.eq_zero_or_pos a with ha ha <;> simp_all [Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_cancel_left_of_lt (h\u2081 : a < b) (h\u2082 : a \u2223 b) : Nat.Coprime a b \u2194 a = 1:= by\n  simp [Nat.coprime_iff_gcd_eq_one, Nat.gcd_eq_left, h\u2082]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_cancel_left_of_lt (h\u2081 : a < b) (h\u2082 : a \u2223 b) : Nat.Coprime a b \u2194 a = 1:= by\n  refine' \u27e8fun h => _, fun h => _\u27e9\n  all_goals simp_all [Nat.coprime_iff_gcd_eq_one, Nat.gcd_eq_left]\n  all_goals omega"
  ]
 },
 {
  "old": "(a b c d : \u211d) : a * (a + b) ^ 5 + b * (b + c) ^ 5 + c * (c + d) ^ 5 + d * (d + a) ^ 5 \u2265 (1 / 32) * (a + b + c + d) ^ 6 := by",
  "new": "(x y z : \u211d) : 2 * Real.sqrt (x * y) + 2 * Real.sqrt (y * z) + 2 * Real.sqrt (z * x) \u2264 6 * Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2020_p24 (x y z : \u211d) : 2 * Real.sqrt (x * y) + 2 * Real.sqrt (y * z) + 2 * Real.sqrt (z * x) \u2264 6 * Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n  have h\u2081 : 0 \u2264 (x - y) ^ 2 + (y - z) ^ 2 + (z - x) ^ 2 := by nlinarith\n  have h\u2082 : Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2083 : Real.sqrt (x * y) \u2264 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith\n  have h\u2084 : Real.sqrt (y * z) \u2264 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith\n  have h\u2085 : Real.sqrt (z * x) \u2264 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith\n  nlinarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2020_p24 (x y z : \u211d) : 2 * Real.sqrt (x * y) + 2 * Real.sqrt (y * z) + 2 * Real.sqrt (z * x) \u2264 6 * Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n  have h\u2080 : Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2081 : Real.sqrt (x * y) \u2264 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  have h\u2082 : Real.sqrt (y * z) \u2264 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  have h\u2083 : Real.sqrt (z * x) \u2264 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2020_p24 (x y z : \u211d) : 2 * Real.sqrt (x * y) + 2 * Real.sqrt (y * z) + 2 * Real.sqrt (z * x) \u2264 6 * Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n  have h0 : Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) \u2265 0 := Real.sqrt_nonneg _\n  have h1 : Real.sqrt (x * y) \u2264 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) :=\n    Real.sqrt_le_sqrt (by\n      nlinarith [sq_nonneg (x - y), sq_nonneg (x + y), sq_nonneg (z - x), sq_nonneg (z + x),\n        sq_nonneg (y - z), sq_nonneg (y + z)])\n  have h2 : Real.sqrt (y * z) \u2264 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) :=\n    Real.sqrt_le_sqrt (by\n      nlinarith [sq_nonneg (x - y), sq_nonneg (x + y), sq_nonneg (z - x), sq_nonneg (z + x),\n        sq_nonneg (y - z), sq_nonneg (y + z)])\n  have h3 : Real.sqrt (z * x) \u2264 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) :=\n    Real.sqrt_le_sqrt (by\n      nlinarith [sq_nonneg (x - y), sq_nonneg (x + y), sq_nonneg (z - x), sq_nonneg (z + x),\n        sq_nonneg (y - z), sq_nonneg (y + z)])\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2020_p24 (x y z : \u211d) : 2 * Real.sqrt (x * y) + 2 * Real.sqrt (y * z) + 2 * Real.sqrt (z * x) \u2264 6 * Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n  have : Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2080 : Real.sqrt (x * y) \u2264 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  have h\u2081 : Real.sqrt (y * z) \u2264 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  have h\u2082 : Real.sqrt (z * x) \u2264 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^2 + b^2 + c^2) / (b * c + c * a + a * b) \u2265 (a + b + c) / (Real.sqrt (b * c) + Real.sqrt (c * a) + Real.sqrt (a * b)) := by",
  "new": ": Real.sqrt (a^2 + b^2 + c^2) \u2265 (a + b + c) / 3 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (a^2 + b^2 + c^2) \u2265 (a + b + c) / 3  := by\n  have h1 : 0 \u2264 (a - b)^2 + (b - c)^2 + (a - c)^2 := by nlinarith\n  apply Real.le_sqrt_of_sq_le\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (a^2 + b^2 + c^2) \u2265 (a + b + c) / 3  := by\n  have h\u2080 : 0 \u2264 (a - b) ^ 2 := by positivity\n  have h\u2081 : 0 \u2264 (a - c) ^ 2 := by positivity\n  have h\u2082 : 0 \u2264 (b - c) ^ 2 := by positivity\n  apply Real.le_sqrt_of_sq_le\n  nlinarith\n  <;> assumption\n  <;> simp_all\n  <;> nlinarith\n  <;> simp_all\n  <;> nlinarith\n  <;> simp_all\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (a^2 + b^2 + c^2) \u2265 (a + b + c) / 3  := by\n  have h\u2080 : 0 \u2264 (a - b)^2 + (a - c)^2 + (b - c)^2 := by nlinarith\n  apply Real.le_sqrt_of_sq_le\n  nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : 1 / (a * b + a + 2) + 1 / (b * c + b + 2) + 1 / (c * a + c + 2) \u2264 3 / 4 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z \u2264 3) : 1 / (x + y) + 1 / (y + z) + 1 / (z + x) \u2264 9 / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z \u2264 3) :\n    1 / (x + y) + 1 / (y + z) + 1 / (z + x) \u2264 9 / 2:= by\n  have hx' : 0 < x + y := by linarith\n  have hy' : 0 < y + z := by linarith\n  have hz' : 0 < z + x := by linarith\n  field_simp at h\u2082 \u22a2\n  rw [div_le_iff (by positivity)] at h\u2082 \u22a2\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_nonneg hx.le hy.le, mul_nonneg hz.le hx.le, mul_nonneg hy.le hz.le,\n    mul_nonneg (sq_nonneg (x - y)) hx.le, mul_nonneg (sq_nonneg (x - z)) hz.le,\n    mul_nonneg (sq_nonneg (y - z)) hy.le]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (hab : a + b + c = 3) : (a^4 + b^4 + c^4 + a * b * (a^2 + b^2) + a * c * (a^2 + c^2) + b * c * (b^2 + c^2) + 6 * a * b * c) * (a * b + b * c + c * a) \u2264 45 := by",
  "new": "(a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (hab : a + b + c = 3) : a * b * (a * b) + a * c * (a * c) + b * c * (b * c) \u2264 9:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (hab : a + b + c = 3) : a * b * (a * b) + a * c * (a * c) + b * c * (b * c) \u2264 9:= by\n  have : (a + b + c) ^ 2 = 9 := by rw [hab, show (3 : \u211d) ^ 2 = 9 by norm_num]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c), mul_nonneg ha hb, mul_nonneg ha hc, mul_nonneg hb hc]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (hab : a + b + c = 3) : a * b * (a * b) + a * c * (a * c) + b * c * (b * c) \u2264 9:= by\n  have h\u2081 : (a + b + c) ^ 2 = 9 := by rw [hab, show (3 : \u211d) ^ 2 = 9 by norm_num]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n    mul_nonneg ha hb, mul_nonneg ha hc, mul_nonneg hb hc]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (hab : a + b + c = 3) : a * b * (a * b) + a * c * (a * c) + b * c * (b * c) \u2264 9:= by\n  have : (a + b + c) ^ 2 = 9 := by simp [hab]; ring\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_nonneg ha hb, mul_nonneg hb hc,\n    mul_nonneg hc ha]"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) (hab : a + b + c + d = 4) : a ^ 3 / (a ^ 2 + b * c) + b ^ 3 / (b ^ 2 + c * d) + c ^ 3 / (c ^ 2 + d * a) + d ^ 3 / (d ^ 2 + a * b) \u2265 2 := by",
  "new": ": \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192 a + b + c + d = 4 \u2192 a ^ 3 / (a ^ 2 + b * c) + b ^ 3 / (b ^ 2 + c * d) + c ^ 3 / (c ^ 2 + d * a) + d ^ 3 / (d ^ 2 + a * b) \u2265 2 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192 a + b + c + d = 4 \u2192 a ^ 3 / (a ^ 2 + b * c) + b ^ 3 / (b ^ 2 + c * d) + c ^ 3 / (c ^ 2 + d * a) + d ^ 3 / (d ^ 2 + a * b) \u2265 2  := by\n  rintro a b c d ha hb hc hd habc\n  have h1 : a ^ 3 / (a ^ 2 + b * c) \u2265 (2 * a - (b + c) / 2) / 2 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), mul_pos ha hb, mul_pos ha hc]\n  have h2 : b ^ 3 / (b ^ 2 + c * d) \u2265 (2 * b - (c + d) / 2) / 2 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (b - c), sq_nonneg (b - d), mul_pos hb hc, mul_pos hb hd]\n  have h3 : c ^ 3 / (c ^ 2 + d * a) \u2265 (2 * c - (d + a) / 2) / 2 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (c - d), sq_nonneg (c - a), mul_pos hc hd, mul_pos hc ha]\n  have h4 : d ^ 3 / (d ^ 2 + a * b) \u2265 (2 * d - (a + b) / 2) / 2 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (d - a), sq_nonneg (d - b), mul_pos hd ha, mul_pos hd hb]\n  nlinarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192 a + b + c + d = 4 \u2192 a ^ 3 / (a ^ 2 + b * c) + b ^ 3 / (b ^ 2 + c * d) + c ^ 3 / (c ^ 2 + d * a) + d ^ 3 / (d ^ 2 + a * b) \u2265 2  := by\n  rintro a b c d (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) (habc : a + b + c + d = 4)\n  have h\u2080 : a ^ 3 / (a ^ 2 + b * c) \u2265 (2 * a - (b + c) / 2) / 2 := by\n    rw [ge_iff_le]\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), mul_pos ha hb, mul_pos ha hc,\n      mul_self_nonneg (b - c)]\n  have h\u2081 : b ^ 3 / (b ^ 2 + c * d) \u2265 (2 * b - (c + d) / 2) / 2 := by\n    rw [ge_iff_le]\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (b - c), sq_nonneg (b - d), mul_pos hb hc, mul_pos hb hd,\n      mul_self_nonneg (c - d)]\n  have h\u2082 : c ^ 3 / (c ^ 2 + d * a) \u2265 (2 * c - (d + a) / 2) / 2 := by\n    rw [ge_iff_le]\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (c - d), sq_nonneg (c - a), mul_pos hc hd, mul_pos hc ha,\n      mul_self_nonneg (d - a)]\n  have h\u2083 : d ^ 3 / (d ^ 2 + a * b) \u2265 (2 * d - (a + b) / 2) / 2 := by\n    rw [ge_iff_le]\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (d - a), sq_nonneg (d - b), mul_pos hd ha, mul_pos hd hb,\n      mul_self_nonneg (a - b)]\n  nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c \u2265 1) : 1 / (a ^ 3 + 2 * b ^ 3 + 6) + 1 / (b ^ 3 + 2 * c ^ 3 + 6) + 1 / (c ^ 3 + 2 * a ^ 3 + 6) \u2264 1 / 3 := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 1 \u2227 b \u2265 1 \u2227 c \u2265 1 \u2192 (a ^ 2 + 1) * (b ^ 2 + 1) * (c ^ 2 + 1) \u2265 a * b + a + b + 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 1 \u2227 b \u2265 1 \u2227 c \u2265 1 \u2192 (a ^ 2 + 1) * (b ^ 2 + 1) * (c ^ 2 + 1) \u2265 a * b + a + b + 1:= by\n  intro a b c h\n  simp only [add_mul, mul_add, mul_one, one_mul, add_assoc, mul_assoc, add_left_comm,\n    add_right_comm]\n  nlinarith [sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1),\n    mul_nonneg (sq_nonneg a) (sq_nonneg b), mul_nonneg (sq_nonneg a) (sq_nonneg c),\n    mul_nonneg (sq_nonneg b) (sq_nonneg c)]"
  ]
 },
 {
  "old": "(x : \u211d) (hx : x \u2208 Set.Icc (-1) 1) : Real.arccos x = 2 * Real.arcsin (Real.sqrt ((1 - x) / 2)) := by",
  "new": "{x y : \u211d} (h\u2081 : -1 \u2264 x \u2227 x \u2264 1) (h\u2082 : -1 \u2264 y \u2227 y \u2264 1) : arccos x = arccos y \u2194 x = y := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem arccos_eq_arccos_iff {x y : \u211d} (h\u2081 : -1 \u2264 x \u2227 x \u2264 1) (h\u2082 : -1 \u2264 y \u2227 y \u2264 1) :\n    arccos x = arccos y \u2194 x = y := by\n  refine' \u27e8fun h => _, fun h => _\u27e9\n  rw [\u2190 cos_arccos h\u2081.1 h\u2081.2, \u2190 cos_arccos h\u2082.1 h\u2082.2, h]\n  rw [h]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem arccos_eq_arccos_iff {x y : \u211d} (h\u2081 : -1 \u2264 x \u2227 x \u2264 1) (h\u2082 : -1 \u2264 y \u2227 y \u2264 1) :\n    arccos x = arccos y \u2194 x = y := by\n  constructor\n  intro h\n  rw [\u2190 cos_arccos h\u2081.1 h\u2081.2, \u2190 cos_arccos h\u2082.1 h\u2082.2, h]\n  exact fun h => by rw [h]\n  <;> simp only [h\u2081, h\u2082, and_self, eq_self_iff_true, forall_const]\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem arccos_eq_arccos_iff {x y : \u211d} (h\u2081 : -1 \u2264 x \u2227 x \u2264 1) (h\u2082 : -1 \u2264 y \u2227 y \u2264 1) :\n    arccos x = arccos y \u2194 x = y := by\n  constructor <;> intro h <;> simp_all [Real.arccos_inj]\n  <;> linarith [h\u2081.1, h\u2081.2, h\u2082.1, h\u2082.2]\n  <;> intro h <;> simp_all [Real.arccos_inj]\n  <;> linarith [h\u2081.1, h\u2081.2, h\u2082.1, h\u2082.2]\n  <;> simp_all\n  <;> linarith\n  <;> simp_all\n  <;> linarith\n  <;> simp_all\n  <;> linarith\n  <;> simp_all\n  <;> linarith\n  <;> simp_all\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem arccos_eq_arccos_iff {x y : \u211d} (h\u2081 : -1 \u2264 x \u2227 x \u2264 1) (h\u2082 : -1 \u2264 y \u2227 y \u2264 1) :\n    arccos x = arccos y \u2194 x = y := by\n  constructor\n  intro h\n  rw [\u2190 cos_arccos h\u2081.1 h\u2081.2, \u2190 cos_arccos h\u2082.1 h\u2082.2, h]\n  intro h\n  rw [h]\n"
  ]
 },
 {
  "old": "(a b c d : \u211d) : 16 * (a * b * c + b * c * d + c * d * a + d * a * b) \u2264 (a + b + c + d) ^ 3 := by",
  "new": "(x y z : \u211d) : 2 * Real.sqrt (16 * x^2 * y^2) + 2 * Real.sqrt (4 * y^2 * z^2) \u2264 10 * |x * y| + 10 * |y * z| := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) : 2 * Real.sqrt (16 * x^2 * y^2) + 2 * Real.sqrt (4 * y^2 * z^2) \u2264 10 * |x * y| + 10 * |y * z|  := by\n  have h\u2081 : 2 * Real.sqrt (16 * x^2 * y^2) \u2264 10 * |x * y| := by\n    have h\u2082 : Real.sqrt (16 * x^2 * y^2) = 4 * |x * y| := by\n      rw [Real.sqrt_eq_iff_mul_self_eq (by positivity) (by positivity)]\n      cases' abs_cases (x * y) with h h <;>\n        simp_all only [h, mul_neg, mul_one, neg_mul, mul_zero, zero_mul] <;>\n        ring_nf <;>\n        nlinarith\n    rw [h\u2082]\n    nlinarith [abs_nonneg (x * y)]\n  have h\u2083 : 2 * Real.sqrt (4 * y^2 * z^2) \u2264 10 * |y * z| := by\n    have h\u2082 : Real.sqrt (4 * y^2 * z^2) = 2 * |y * z| := by\n      rw [Real.sqrt_eq_iff_mul_self_eq (by positivity) (by positivity)]\n      cases' abs_cases (y * z) with h h <;>\n        simp_all only [h, mul_neg, mul_one, neg_mul, mul_zero, zero_mul] <;>\n        ring_nf <;>\n        nlinarith\n    rw [h\u2082]\n    nlinarith [abs_nonneg (y * z)]\n  linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : a \u2264 b) (hc : b \u2264 c) : (a + b + c) / 3 \u2265 3 / (1 / a + 1 / b + 1 / c) + (c - a) ^ 2 / (3 * (c + a)) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9 * (x + y + z):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9 * (x + y + z):= by\n  have h\u2081 : 1 / x + 1 / y + 1 / z \u2265 3:= by\n    have h\u2082 : 0 < x * y := mul_pos hx hy\n    have h\u2083 : 0 < x * z := mul_pos hx hz\n    have h\u2084 : 0 < y * z := mul_pos hy hz\n    field_simp [hab]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n      mul_self_nonneg (x + y + z)]\n  nlinarith [sq_nonneg (1 / x + 1 / y + 1 / z - 3)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9 * (x + y + z):= by\n  have h : x * y * z > 0 := by positivity\n  have h1 : 1 / x + 1 / y + 1 / z \u2265 3 := by\n    have h2 : 0 < x * y := by positivity\n    have h3 : 0 < y * z := by positivity\n    have h4 : 0 < z * x := by positivity\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  nlinarith\n  <;> linarith"
  ]
 },
 {
  "old": ": \u2200 x : \u211d, (Real.sqrt (6 + 4 * Real.sqrt 2 * Real.sin x) + Real.sqrt (3 - 2 * Real.sqrt 2 * Real.cos x)) \u2264 (2 + Real.sqrt 2) := by",
  "new": ": Real.sqrt (6 + 4 * Real.sqrt 2 * Real.sin x) \u2264 2 + Real.sqrt 2 \u2227 Real.sqrt (3 - 2 * Real.sqrt 2 * Real.cos x) \u2264 Real.sqrt 2 + 1 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (6 + 4 * Real.sqrt 2 * Real.sin x) \u2264 2 + Real.sqrt 2 \u2227\n  Real.sqrt (3 - 2 * Real.sqrt 2 * Real.cos x) \u2264 Real.sqrt 2 + 1 := by\n  constructor\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  positivity\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 2 by norm_num), Real.sqrt_nonneg 2, Real.sin_sq_add_cos_sq x,\n    mul_self_nonneg (Real.sin x - Real.sqrt 2 / 2), mul_self_nonneg (Real.cos x - Real.sqrt 2 / 2)]\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  positivity\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 2 by norm_num), Real.sqrt_nonneg 2, Real.sin_sq_add_cos_sq x,\n    mul_self_nonneg (Real.sin x - Real.sqrt 2 / 2), mul_self_nonneg (Real.cos x - Real.sqrt 2 / 2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (6 + 4 * Real.sqrt 2 * Real.sin x) \u2264 2 + Real.sqrt 2 \u2227\n  Real.sqrt (3 - 2 * Real.sqrt 2 * Real.cos x) \u2264 Real.sqrt 2 + 1 := by\n  have h\u2080 : 0 \u2264 Real.sqrt 2 := Real.sqrt_nonneg 2\n  have h\u2081 : Real.sqrt 2 ^ 2 = 2 := Real.sq_sqrt (by positivity)\n  have h\u2082 : 0 \u2264 Real.sin x ^ 2 := sq_nonneg (Real.sin x)\n  have h\u2083 : 0 \u2264 Real.cos x ^ 2 := sq_nonneg (Real.cos x)\n  have h\u2084 : Real.sin x ^ 2 + Real.cos x ^ 2 = 1 := Real.sin_sq_add_cos_sq x\n  have h\u2085 : Real.sqrt (6 + 4 * Real.sqrt 2 * Real.sin x) \u2264 2 + Real.sqrt 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_sqrt (show 0 \u2264 2 by positivity),\n        sq_nonneg (Real.sin x - Real.sqrt 2 / 2)]\n  have h\u2086 : Real.sqrt (3 - 2 * Real.sqrt 2 * Real.cos x) \u2264 Real.sqrt 2 + 1 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_sqrt (show 0 \u2264 2 by positivity),\n        sq_nonneg (Real.cos x - Real.sqrt 2 / 2)]\n  exact \u27e8h\u2085, h\u2086\u27e9\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (6 + 4 * Real.sqrt 2 * Real.sin x) \u2264 2 + Real.sqrt 2 \u2227\n  Real.sqrt (3 - 2 * Real.sqrt 2 * Real.cos x) \u2264 Real.sqrt 2 + 1 := by\n  have h\u2080 : 0 \u2264 Real.sqrt 2 := Real.sqrt_nonneg _\n  have h\u2081 : Real.sqrt 2 ^ 2 = 2 := Real.sq_sqrt (by positivity)\n  have h\u2082 : Real.sqrt (6 + 4 * Real.sqrt 2 * Real.sin x) \u2264 2 + Real.sqrt 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 nlinarith [Real.sin_sq_add_cos_sq x]\n    \u00b7 nlinarith [sq_nonneg (2 * Real.sin x - Real.sqrt 2), Real.sin_sq_add_cos_sq x]\n  have h\u2083 : Real.sqrt (3 - 2 * Real.sqrt 2 * Real.cos x) \u2264 Real.sqrt 2 + 1 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 nlinarith [Real.sin_sq_add_cos_sq x]\n    \u00b7 nlinarith [sq_nonneg (2 * Real.cos x - Real.sqrt 2), Real.sin_sq_add_cos_sq x]\n  exact \u27e8h\u2082, h\u2083\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (6 + 4 * Real.sqrt 2 * Real.sin x) \u2264 2 + Real.sqrt 2 \u2227\n  Real.sqrt (3 - 2 * Real.sqrt 2 * Real.cos x) \u2264 Real.sqrt 2 + 1 := by\n  apply And.intro\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  \u00b7 positivity\n  \u00b7 nlinarith [Real.sqrt_nonneg 2, Real.sin_sq_add_cos_sq x, sq_sqrt (show 0 \u2264 2 by norm_num),\n      mul_self_nonneg (Real.sin x - Real.sqrt 2 / 2), mul_self_nonneg (Real.cos x - 1 / 2)]\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  \u00b7 positivity\n  \u00b7 nlinarith [Real.sqrt_nonneg 2, Real.sin_sq_add_cos_sq x, sq_sqrt (show 0 \u2264 2 by norm_num),\n      mul_self_nonneg (Real.cos x - 1 / 2), mul_self_nonneg (Real.sin x - Real.sqrt 2 / 2)]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (1 / a + b) / Real.sqrt (1 / a + c) + (1 / b + c) / Real.sqrt (1 / b + a) + (1 / c + a) / Real.sqrt (1 / c + b) \u2265 3 * Real.sqrt 2 := by",
  "new": ": Real.sqrt 2 \u2264 2 / Real.sqrt 2 + Real.sqrt 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2264 2 / Real.sqrt 2 + Real.sqrt 2:= by\n  have h : 0 < Real.sqrt 2 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2081 : (Real.sqrt 2) * (Real.sqrt 2) = 2 := Real.mul_self_sqrt (by norm_num)\n  field_simp [h]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2264 2 / Real.sqrt 2 + Real.sqrt 2:= by\n  have h : 0 < Real.sqrt 2 := by\n    exact Real.sqrt_pos.mpr (by norm_num)\n  field_simp [h]\n  norm_num\n  <;> nlinarith [sq_sqrt (show 0 \u2264 2 by norm_num)]"
  ]
 },
 {
  "old": "(a b : \u211d) : Real.sqrt (a^2 / (a^2 + 2 * b^2)) \u2264 Real.sqrt 3 * a / (a + 2 * b) \u2227 4 * Real.sqrt (b / (a + 2 * b)) \u2264 2 * Real.sqrt 3 * b / (a + 2 * b) + 2 / Real.sqrt 3 := by",
  "new": "(a b : \u211d) : Real.sqrt ((2 * Real.sqrt 3) ^ 2 / (3)) \u2264 2 * Real.sqrt 3 \u2227 Real.sqrt (3) \u2264 2 * Real.sqrt 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b : \u211d) :\n    Real.sqrt ((2 * Real.sqrt 3) ^ 2 / (3)) \u2264 2 * Real.sqrt 3 \u2227 \n     Real.sqrt (3) \u2264 2 * Real.sqrt 3:= by\n  constructor\n  case left =>\n    rw [Real.sqrt_le_iff]\n    constructor <;> norm_num <;> nlinarith [Real.sqrt_nonneg 3, Real.mul_self_sqrt (show 0 \u2264 3 by norm_num)]\n  case right =>\n    rw [Real.sqrt_le_iff]\n    constructor <;> norm_num <;> nlinarith [Real.sqrt_nonneg 3, Real.mul_self_sqrt (show 0 \u2264 3 by norm_num)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b : \u211d) :\n    Real.sqrt ((2 * Real.sqrt 3) ^ 2 / (3)) \u2264 2 * Real.sqrt 3 \u2227 \n     Real.sqrt (3) \u2264 2 * Real.sqrt 3:= by\n  constructor\n  all_goals\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    all_goals\n      ring_nf\n    all_goals norm_num\n  <;> nlinarith [Real.sqrt_nonneg 3, Real.sqrt_nonneg (3 * 3), Real.sqrt_nonneg 4]\n  <;> nlinarith [Real.sqrt_nonneg 3, Real.sqrt_nonneg (3 * 3), Real.sqrt_nonneg 4]\n  <;> nlinarith [Real.sqrt_nonneg 3, Real.sqrt_nonneg (3 * 3), Real.sqrt_nonneg 4]\n  <;> nlinarith [Real.sqrt_nonneg 3, Real.sqrt_nonneg (3 * 3), Real.sqrt_nonneg 4]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b : \u211d) :\n    Real.sqrt ((2 * Real.sqrt 3) ^ 2 / (3)) \u2264 2 * Real.sqrt 3 \u2227 \n     Real.sqrt (3) \u2264 2 * Real.sqrt 3:= by\n  constructor\n  exact Real.sqrt_le_iff.mpr (by constructor <;> norm_num <;> nlinarith [Real.sqrt_nonneg 3, Real.mul_self_sqrt (show 0 \u2264 3 from by norm_num)])\n  exact Real.sqrt_le_iff.mpr (by constructor <;> norm_num <;> nlinarith [Real.sqrt_nonneg 3, Real.mul_self_sqrt (show 0 \u2264 3 from by norm_num)])"
  ]
 },
 {
  "old": "(p n : \u2115) (hp : p.Prime) (h : p \u2223 (2^(2^n) + 1)) : p \u2261 1 [ZMOD 2^(n+2)] := by",
  "new": "(p m : \u2115) (hp : p.Prime) : Nat.Coprime p m \u2228 p \u2223 m:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p m : \u2115) (hp : p.Prime) : \n     Nat.Coprime p m \u2228 p \u2223 m:= by\n  apply or_iff_not_imp_right.2\n  intro h\n  apply hp.coprime_iff_not_dvd.2\n  intro hpm\n  apply h\n  apply hpm\n  <;> rfl\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : (64 / 27) \u2265 (a / (a + b + c) + b / (b + c + d) + c / (a + c + d) + d / (d + a + b)) * (b / (a + b + c) + c / (b + c + d) + d / (a + c + d) + a / (d + a + b)) * (c / (a + b + c) + d / (b + c + d) + a / (a + c + d) + b / (d + a + b)) := by",
  "new": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : a / b + b / c + c / d + d / a \u2265 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : \n  a / b + b / c + c / d + d / a \u2265 4:= by\n  have h1 : 0 < b * c := by positivity\n  have h2 : 0 < c * d := by positivity\n  have h3 : 0 < d * a := by positivity\n  have h4 : 0 < a * b := by positivity\n  have h5 : 0 < b * d := by positivity\n  have h6 : 0 < a * c := by positivity\n  have h7 : 0 < b * c * d := by positivity\n  have h8 : 0 < c * d * a := by positivity\n  have h9 : 0 < d * a * b := by positivity\n  have h10 : 0 < a * b * c := by positivity\n  field_simp [h1, h2, h3, h4, h5, h6, h7, h8, h9, h10]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - d), sq_nonneg (d - a),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le hd.le, mul_nonneg hd.le ha.le,\n    mul_nonneg (sq_nonneg (a - b)) hd.le, mul_nonneg (sq_nonneg (b - c)) ha.le,\n    mul_nonneg (sq_nonneg (c - d)) hb.le, mul_nonneg (sq_nonneg (d - a)) hc.le]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : \n  a / b + b / c + c / d + d / a \u2265 4:= by\n  have : 0 < b * c := by positivity\n  have : 0 < c * d := by positivity\n  have : 0 < d * a := by positivity\n  have : 0 < a * b := by positivity\n  have : 0 < b * d := by positivity\n  have : 0 < c * a := by positivity\n  have : 0 < d * c := by positivity\n  have : 0 < a * d := by positivity\n  have : 0 < b * c * d := by positivity\n  have : 0 < c * d * a := by positivity\n  have : 0 < d * a * b := by positivity\n  have : 0 < a * b * c := by positivity\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - d), sq_nonneg (d - a),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le hd.le, mul_nonneg hd.le ha.le,\n    mul_nonneg (sq_nonneg (a - b)) hd.le, mul_nonneg (sq_nonneg (b - c)) ha.le,\n    mul_nonneg (sq_nonneg (c - d)) hb.le, mul_nonneg (sq_nonneg (d - a)) hc.le]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : \n  a / b + b / c + c / d + d / a \u2265 4:= by\n  have : 0 < b * c := mul_pos hb hc\n  have : 0 < c * d := mul_pos hc hd\n  have : 0 < d * a := mul_pos hd ha\n  have : 0 < b * d := mul_pos hb hd\n  have : 0 < c * a := mul_pos hc ha\n  have : 0 < d * c := mul_pos hd hc\n  have : 0 < a * b := mul_pos ha hb\n  have : 0 < b * c * d := by positivity\n  have : 0 < c * d * a := by positivity\n  have : 0 < d * a * b := by positivity\n  have : 0 < a * b * c := by positivity\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - d), sq_nonneg (d - a),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le hd.le, mul_nonneg hd.le ha.le,\n    mul_nonneg (sq_nonneg (a - b)) hd.le, mul_nonneg (sq_nonneg (b - c)) ha.le,\n    mul_nonneg (sq_nonneg (c - d)) hb.le, mul_nonneg (sq_nonneg (d - a)) hc.le]"
  ]
 },
 {
  "old": "{a b c : \u211d} (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 3) : (b + c - a) * (c + a - b) * (a + b - c) \u2264 a^2 * b^2 * c^2 := by",
  "new": "(a b : \u2115) (h : a ^ 2 + b ^ 2 \u2264 1000) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (h : a ^ 2 + b ^ 2 \u2264 1000) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  cases' mod_two_eq_zero_or_one a with h\u2080 h\u2080 <;>\n    cases' mod_two_eq_zero_or_one b with h\u2081 h\u2081 <;>\n      simp_all [Nat.ModEq, Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  all_goals\n    first\n    | omega\n    | exact Or.inl (by omega)\n  <;>\n    exact Or.inr (by omega)\n  <;>\n    exact Or.inl (by omega)\n  <;>\n    exact Or.inr (by omega)",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (h : a ^ 2 + b ^ 2 \u2264 1000) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  by_cases h\u2080 : Nat.Coprime a b\n  exacts [Or.inl h\u2080, Or.inr h\u2080]"
  ]
 },
 {
  "old": ": IsMaxOn (fun \u03c8 => (Real.sqrt 2 * Real.sin \u03c8 + 1) * (Real.sqrt 2 * Real.cos \u03c8 + 1)) Set.univ 4 := by",
  "new": ": Real.sqrt 2 \u2264 2 / Real.sqrt 2 ^ 2 + 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test :\n    Real.sqrt 2 \u2264 2 / Real.sqrt 2 ^ 2 + 1:= by\n  norm_num [Real.sqrt_le_left]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test :\n    Real.sqrt 2 \u2264 2 / Real.sqrt 2 ^ 2 + 1:= by\n  field_simp [Real.sqrt_eq_iff_sq_eq] <;>\n  norm_num\n  <;>\n  nlinarith [sq_sqrt (show 0 \u2264 2 by norm_num)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test :\n    Real.sqrt 2 \u2264 2 / Real.sqrt 2 ^ 2 + 1:= by\n  have h\u2080 : Real.sqrt 2 ^ 2 = 2 := Real.sq_sqrt (show 0 \u2264 2 by norm_num)\n  have h\u2081 : Real.sqrt 2 \u2264 2 / Real.sqrt 2 ^ 2 + 1 := by\n    rw [h\u2080]\n    norm_num\n    <;>\n    nlinarith [sq_sqrt (show 0 \u2264 2 by norm_num)]\n  exact h\u2081"
  ]
 },
 {
  "old": "(a x : \u2115) (hax : Nat.Coprime a x) : a ^ \u03c6 x \u2261 1 [ZMOD x] := by",
  "new": "(p a : \u2115) (hp : p.Prime) : Nat.Coprime p a \u2228 p \u2223 a := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p a : \u2115) (hp : p.Prime) : Nat.Coprime p a \u2228 p \u2223 a  := by\n  refine' or_iff_not_imp_right.mpr fun h => _\n  simp_all [Nat.coprime_iff_gcd_eq_one, Nat.Prime.coprime_iff_not_dvd]"
  ]
 },
 {
  "old": "{a b c d : \u2124} (h : a + b * Real.sqrt 2 = c + d * Real.sqrt 2) : a = c \u2227 b = d := by",
  "new": "(x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y) := by\n  by_cases h : Nat.Coprime x y\n  left\n  exact h\n  right\n  exact h\n  <;> rfl\n  <;> simp_all\n  <;> rfl\n  <;> simp_all\n  <;> rfl\n  <;> simp_all\n  <;> rfl\n  <;> simp_all\n  <;> rfl\n  <;> simp_all\n  <;> rfl\n  <;> simp_all\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y) := by\n  by_cases h : x.Coprime y\n  exact Or.inl h\n  exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y) := by\n  by_cases h : Nat.Coprime x y\n  exacts [Or.inl h, Or.inr (by simpa using h)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y) := by\n  cases em (Nat.Coprime x y) with\n  | inl h => exact Or.inl h\n  | inr h => exact Or.inr h\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop"
  ]
 },
 {
  "old": "(a b c d e : \u211d) (ha : a \u2264 b) (hb : b \u2264 c) (hc : c \u2264 d) (hd : d \u2264 e) : (a - b) * (a - c) * (a - d) * (a - e) + (b - a) * (b - c) * (b - d) * (b - e) + (c - a) * (c - b) * (c - d) * (c - e) + (d - a) * (d - b) * (d - c) * (d - e) + (e - a) * (e - b) * (e - c) * (e - d) \u2265 0 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h\u2080 : x + y + z = 1) (h\u2081 : 0 < x * y * z) : x * (y + z) / (x + y + z) * (x * y + y * z) / (x * y + z * y + y * z + z * x) \u2264 1 / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2080 : x + y + z = 1) (h\u2081 : 0 < x * y * z)  : \n  x * (y + z) / (x + y + z) * (x * y + y * z) / (x * y + z * y + y * z + z * x) \u2264 1 / 2:= by\n  have h\u2082 : 0 < x * y := by positivity\n  have h\u2083 : 0 < y * z := by positivity\n  have h\u2084 : 0 < z * x := by positivity\n  have h\u2085 : 0 < x * y + y * z + z * x := by positivity\n  have h\u2086 : 0 < x * y * z := by positivity\n  rw [div_eq_mul_inv]\n  field_simp\n  rw [div_le_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x * y + y * z + z * x), mul_self_nonneg (x * y - y * z),\n    mul_self_nonneg (y * z - z * x), mul_self_nonneg (z * x - x * y)]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2080 : x + y + z = 1) (h\u2081 : 0 < x * y * z)  : \n  x * (y + z) / (x + y + z) * (x * y + y * z) / (x * y + z * y + y * z + z * x) \u2264 1 / 2:= by\n  have h\u2082 : 0 < x * y := by positivity\n  have h\u2083 : 0 < y * z := by positivity\n  have h\u2084 : 0 < z * x := by positivity\n  have h\u2085 : 0 < x * y + y * z + z * x := by positivity\n  have h\u2086 : 0 < x * y * (x + y) + y * z * (y + z) + z * x * (z + x) := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  <;> linarith"
  ]
 },
 {
  "old": "(A B C : \u211d) (hx: A > 0 \u2227 B > 0 \u2227 C > 0) (hab : A + B + C = \u03c0) : 1 / (1 + Real.sqrt (1 - Real.sin B * Real.sin C)) + 1 / (1 + Real.sqrt (1 - Real.sin C * Real.sin A)) + 1 / (1 + Real.sqrt (1 - Real.sin A * Real.sin B)) \u2264 2 := by",
  "new": ": Real.sqrt (Real.sin 2 * Real.sin 2) + Real.sqrt (Real.cos 2 * Real.cos 2) \u2264 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sin 2 * Real.sin 2) + Real.sqrt (Real.cos 2 * Real.cos 2) \u2264 2:= by\n  have := sin_sq_add_cos_sq 2\n  have : Real.sqrt (Real.sin 2 * Real.sin 2) \u2264 1 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    positivity\n    nlinarith [sin_sq_add_cos_sq 2]\n  have : Real.sqrt (Real.cos 2 * Real.cos 2) \u2264 1 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    positivity\n    nlinarith [sin_sq_add_cos_sq 2]\n  linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sin 2 * Real.sin 2) + Real.sqrt (Real.cos 2 * Real.cos 2) \u2264 2:= by\n  have h\u2080 : Real.sqrt (Real.sin 2 * Real.sin 2) \u2264 1 := by\n    have h\u2081 : Real.sin 2 * Real.sin 2 \u2264 1 := by\n      nlinarith [Real.sin_sq_add_cos_sq 2]\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  have h\u2081 : Real.sqrt (Real.cos 2 * Real.cos 2) \u2264 1 := by\n    have h\u2082 : Real.cos 2 * Real.cos 2 \u2264 1 := by\n      nlinarith [Real.sin_sq_add_cos_sq 2]\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sin 2 * Real.sin 2) + Real.sqrt (Real.cos 2 * Real.cos 2) \u2264 2:= by\n  have h\u2081 : Real.sin 2 ^ 2 + Real.cos 2 ^ 2 = 1 := Real.sin_sq_add_cos_sq 2\n  have h\u2082 : 0 \u2264 (Real.sin 2 - Real.cos 2) ^ 2 := by positivity\n  have h\u2083 : Real.sqrt (Real.sin 2 * Real.sin 2) \u2264 1 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  have h\u2084 : Real.sqrt (Real.cos 2 * Real.cos 2) \u2264 1 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  linarith\n  <;> linarith"
  ]
 },
 {
  "old": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 4 * ((a^2 - b^2 - c^2) / (a * (b + c)) + (b^2 - c^2 - a^2) / (b * (c + a)) + (c^2 - a^2 - b^2) / (c * (a + b))) \u2264 3 \u2194 a^4 * b^2 + a^4 * c^2 - 2 * a^4 * b * c + a^3 * b^2 * c + a^3 * c^2 * b - 2 * a^2 * b^2 * c^2 + b^4 * c^2 + b^4 * a^2 - 2 * b^4 * a * c + b^3 * a^2 * c + b^3 * c^2 * a - 2 * b^2 * a^2 * c^2 + c^4 * a^2 + c^4 * b^2 - 2 * c^4 * a * b + c^3 * a^2 * b + c^3 * b^2 * a - 2 * c^2 * a^2 * b^2 \u2265 0 := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : 4 * ((a^2 - b^2 - c^2) / (a * (b + c)) + (b^2 - c^2 - a^2) / (b * (c + a)) + (c^2 - a^2 - b^2) / (c * (a + b))) \u2264 3 \u2194 a^4 * b^2 + a^4 * c^2 - 2 * a^4 * b * c + a^3 * b^2 * c + a^3 * c^2 * b - 2 * a^2 * b^2 * c^2 + b^4 * c^2 + b^4 * a^2 - 2 * b^4 * a * c + b^3 * a^2 * c + b^3 * c^2 * a - 2 * b^2 * a^2 * c^2 + c^4 * a^2 + c^4 * b^2 - 2 * c^4 * a * b + c^3 * a^2 * b + c^3 * b^2 * a - 2 * c^2 * a^2 * b^2 \u2265 0 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n 4 * ((a^2 - b^2 - c^2) / (a * (b + c)) + (b^2 - c^2 - a^2) / (b * (c + a)) + (c^2 - a^2 - b^2) / (c * (a + b))) \u2264 3 \u2194 a^4 * b^2 + a^4 * c^2 - 2 * a^4 * b * c + a^3 * b^2 * c + a^3 * c^2 * b - 2 * a^2 * b^2 * c^2 + b^4 * c^2 + b^4 * a^2 - 2 * b^4 * a * c + b^3 * a^2 * c + b^3 * c^2 * a - 2 * b^2 * a^2 * c^2 + c^4 * a^2 + c^4 * b^2 - 2 * c^4 * a * b + c^3 * a^2 * b + c^3 * b^2 * a - 2 * c^2 * a^2 * b^2 \u2265 0  := by\n  constructor\n  intro h\n  have : 0 < b * c := by positivity\n  have : 0 < c * a := by positivity\n  have : 0 < a * b := by positivity\n  field_simp [ha, hb, hc, this] at h \u22a2\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b + b * c + c * a), mul_self_nonneg (a * b - b * c),\n    mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b)]\n  intro h\n  have : 0 < b * c := by positivity\n  have : 0 < c * a := by positivity\n  have : 0 < a * b := by positivity\n  field_simp [ha, hb, hc, this]\n  rw [div_le_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b + b * c + c * a), mul_self_nonneg (a * b - b * c),\n    mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n 4 * ((a^2 - b^2 - c^2) / (a * (b + c)) + (b^2 - c^2 - a^2) / (b * (c + a)) + (c^2 - a^2 - b^2) / (c * (a + b))) \u2264 3 \u2194 a^4 * b^2 + a^4 * c^2 - 2 * a^4 * b * c + a^3 * b^2 * c + a^3 * c^2 * b - 2 * a^2 * b^2 * c^2 + b^4 * c^2 + b^4 * a^2 - 2 * b^4 * a * c + b^3 * a^2 * c + b^3 * c^2 * a - 2 * b^2 * a^2 * c^2 + c^4 * a^2 + c^4 * b^2 - 2 * c^4 * a * b + c^3 * a^2 * b + c^3 * b^2 * a - 2 * c^2 * a^2 * b^2 \u2265 0  := by\n  constructor\n  intro h\n  have h\u2081 : 0 < a * b := by positivity\n  have h\u2082 : 0 < b * c := by positivity\n  have h\u2083 : 0 < c * a := by positivity\n  field_simp [h\u2081, h\u2082, h\u2083] at h \u22a2\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b + b * c + c * a), mul_self_nonneg (a * b - b * c),\n    mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b)]\n  intro h\n  have h\u2081 : 0 < a * b := by positivity\n  have h\u2082 : 0 < b * c := by positivity\n  have h\u2083 : 0 < c * a := by positivity\n  field_simp [h\u2081, h\u2082, h\u2083]\n  rw [div_le_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b + b * c + c * a), mul_self_nonneg (a * b - b * c),\n    mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a / b + (9:\u211d) ^ (1/3) - 1) * (b / c + (9:\u211d) ^ (1/3) - 1) * (c / a + (9:\u211d) ^ (1/3) - 1) \u2264 (a / b + b / c + c / a) * (b / a + c / b + a / c) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x / y + y / z + z / x) * (y / z + z / x + x / y) \u2265 3 * (y / y + z / z + x / x) * 2 / 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   (x / y + y / z + z / x) * (y / z + z / x + x / y) \u2265\n   3 * (y / y + z / z + x / x) * 2 / 3:= by\n  refine' le_of_sub_nonneg _\n  have h\u2081 : 0 < y * z := by positivity\n  have h\u2082 : 0 < z * x := by positivity\n  have h\u2083 : 0 < x * y := by positivity\n  have h\u2084 : 0 < y * z * (z * x) := by positivity\n  have h\u2085 : 0 < z * x * (x * y) := by positivity\n  have h\u2086 : 0 < x * y * (y * z) := by positivity\n  field_simp\n  rw [le_div_iff (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y),\n    sq_nonneg (x * y * z - y * z * x), sq_nonneg (y * z * x - z * x * y),\n    sq_nonneg (z * x * y - x * y * z)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   (x / y + y / z + z / x) * (y / z + z / x + x / y) \u2265\n   3 * (y / y + z / z + x / x) * 2 / 3:= by\n  have : 0 < y * z := mul_pos hy hz\n  have : 0 < z * x := mul_pos hz hx\n  have : 0 < x * y := mul_pos hx hy\n  have : 0 < y * z * (z * x) := by positivity\n  have : 0 < z * x * (x * y) := by positivity\n  have : 0 < x * y * (y * z) := by positivity\n  field_simp\n  rw [le_div_iff (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y),\n    sq_nonneg (x * y * z - y * z * x), sq_nonneg (y * z * x - z * x * y),\n    sq_nonneg (z * x * y - x * y * z)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   (x / y + y / z + z / x) * (y / z + z / x + x / y) \u2265\n   3 * (y / y + z / z + x / x) * 2 / 3:= by\n  have h\u2081 : x / y + y / z + z / x \u2265 3 := by\n    have : 0 < x * y := mul_pos hx hy\n    have : 0 < y * z := mul_pos hy hz\n    have : 0 < z * x := mul_pos hz hx\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [mul_self_nonneg (x - y), mul_self_nonneg (y - z), mul_self_nonneg (z - x)]\n  have h\u2082 : y / z + z / x + x / y \u2265 3 := by\n    have : 0 < x * y := mul_pos hx hy\n    have : 0 < y * z := mul_pos hy hz\n    have : 0 < z * x := mul_pos hz hx\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [mul_self_nonneg (x - y), mul_self_nonneg (y - z), mul_self_nonneg (z - x)]\n  have h\u2083 : (x / y + y / z + z / x) * (y / z + z / x + x / y) \u2265 3 * 3 := by\n    nlinarith\n  have h\u2084 : 3 * (y / y + z / z + x / x) * 2 / 3 \u2264 3 * 3 := by\n    have : y / y = 1 := by field_simp\n    have : z / z = 1 := by field_simp\n    have : x / x = 1 := by field_simp\n    nlinarith\n  linarith\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : (a / b + b / c + c / a + (9:\u211d) * abc / (a ^ 3 + b ^ 3 + c ^ 3) \u2265 15 / 4) := by",
  "new": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : a * b * c > 0 \u2227 (a + b + c) ^ 2 = 3 * (a ^ 2 + b ^ 2 + c ^ 2) \u2192 a / b + b / c + c / a + (9:\u211d) * a * b * c / (a ^ 3 + b ^ 3 + c ^ 3) \u2265 15 / 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) :\n      a * b * c > 0 \u2227 (a + b + c) ^ 2 = 3 * (a ^ 2 + b ^ 2 + c ^ 2) \u2192 a / b + b / c + c / a + (9:\u211d) * a * b * c / (a ^ 3 + b ^ 3 + c ^ 3) \u2265 15 / 4:= by\n  rintro \u27e8h\u2081, h\u2082\u27e9\n  have h\u2083 : 0 < a := lt_of_le_of_ne ha (by rintro rfl; simp_all)\n  have h\u2084 : 0 < b := lt_of_le_of_ne hb (by rintro rfl; simp_all)\n  have h\u2085 : 0 < c := lt_of_le_of_ne hc (by rintro rfl; simp_all)\n  have h\u2086 : 0 < a * b := by positivity\n  have h\u2087 : 0 < b * c := by positivity\n  have h\u2088 : 0 < c * a := by positivity\n  have h\u2089 : 0 < a ^ 3 := by positivity\n  have h\u2081\u2080 : 0 < b ^ 3 := by positivity\n  have h\u2081\u2081 : 0 < c ^ 3 := by positivity\n  have h\u2081\u2082 : 0 < a * b * c := by positivity\n  have h\u2081\u2083 : 0 < a ^ 3 + b ^ 3 + c ^ 3 := by positivity\n  have h\u2081\u2084 : a / b + b / c + c / a \u2265 3 := by\n    have : 0 < a * b * c := by positivity\n    field_simp [ha, hb, hc, h\u2081, h\u2086, h\u2087, h\u2088]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  have h\u2081\u2085 : 9 * a * b * c / (a ^ 3 + b ^ 3 + c ^ 3) \u2265 9 / 4 := by\n    apply (le_div_iff (by positivity)).mpr\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  nlinarith\n  <;> try norm_num"
  ]
 },
 {
  "old": "(x y z u v w : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hu : 0 < u) (hv : 0 < v) (hw : 0 < w) : (x + u) ^ 2 / (w + y) / (z + v) + (v + y) ^ 2 / (u + z) / (x + w) + (w + z) ^ 2 / (v + x) / (y + u) \u2265 3 := by",
  "new": ": \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192 (x + y) ^ 2 / y / z + (y + z) ^ 2 / z / x + (z + x) ^ 2 / x / y \u2265 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192 (x + y) ^ 2 / y / z + (y + z) ^ 2 / z / x + (z + x) ^ 2 / x / y \u2265 3:= by\n  intro x y z h\u2080\n  obtain \u27e8hx : 0 < x, hy : 0 < y, hz : 0 < z\u27e9 := h\u2080\n  have : 0 < y * z := by positivity\n  have : 0 < z * x := by positivity\n  have : 0 < x * y := by positivity\n  have h\u2081 : 0 < (y * z) * (z * x) := by positivity\n  have h\u2082 : 0 < (z * x) * (x * y) := by positivity\n  have h\u2083 : 0 < (x * y) * (y * z) := by positivity\n  field_simp [h\u2081, h\u2082, h\u2083]\n  rw [le_div_iff (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  <;> try norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192 (x + y) ^ 2 / y / z + (y + z) ^ 2 / z / x + (z + x) ^ 2 / x / y \u2265 3:= by\n  rintro x y z \u27e8hx : 0 < x, hy : 0 < y, hz : 0 < z\u27e9\n  have : 0 < x * y := by positivity\n  have : 0 < y * z := by positivity\n  have : 0 < z * x := by positivity\n  have : 0 < x * y * (y * z) := by positivity\n  have : 0 < y * z * (z * x) := by positivity\n  have : 0 < z * x * (x * y) := by positivity\n  field_simp [*, mul_comm, mul_left_comm]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x * z - y * x), mul_self_nonneg (y * z - x * y), mul_self_nonneg (z * x - y * z)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192 (x + y) ^ 2 / y / z + (y + z) ^ 2 / z / x + (z + x) ^ 2 / x / y \u2265 3:= by\n  rintro x y z \u27e8h\u2080, h\u2081, h\u2082\u27e9\n  have h\u2083 : 0 < x * y := mul_pos h\u2080 h\u2081\n  have h\u2084 : 0 < y * z := mul_pos h\u2081 h\u2082\n  have h\u2085 : 0 < z * x := mul_pos h\u2082 h\u2080\n  have h\u2086 : 0 < (x * y) * (y * z) := by positivity\n  have h\u2087 : 0 < (y * z) * (z * x) := by positivity\n  have h\u2088 : 0 < (z * x) * (x * y) := by positivity\n  field_simp [h\u2080.ne', h\u2081.ne', h\u2082.ne', h\u2083.ne', h\u2084.ne', h\u2085.ne', h\u2086.ne', h\u2087.ne', h\u2088.ne']\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y)]\n  <;> assumption\n  <;> try norm_num"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) (hab : a + b = 1 / c) (hbc : b + c = 1 / a) (hca : a + c = 1 / b) : 4 * (a ^ 2 / (a + b + 1) + b ^ 2 / (b + c + 1) + c ^ 2 / (c + a + 1)) + 3 * (1 / (a + b + 1) + 1 / (b + c + 1) + 1 / (c + a + 1)) \u2265 6 := by",
  "new": "(a b c : \u211d) (habc : a * b * c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0) (h1 : a * b + b * c + c * a = 3) : a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2 + 3 * (a * b + b * c + c * a) \u2265 3 * (a + b + c):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (a b c : \u211d) (habc : a * b * c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0)  (h1 : a * b + b * c + c * a = 3)  :\n  a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2 + 3 * (a * b + b * c + c * a) \u2265 3 * (a + b + c):= by\n  have h1' : 0 < a := h.1\n  have h2 : 0 < b := h.2.1\n  have h3 : 0 < c := h.2.2\n  have h4 : 0 < a * b := mul_pos h1' h2\n  have h5 : 0 < b * c := mul_pos h2 h3\n  have h6 : 0 < c * a := mul_pos h3 h1'\n  have h7 : 0 < a * b * c := by positivity\n  have h8 : 0 < a ^ 2 / b ^ 2 := by positivity\n  have h9 : 0 < b ^ 2 / c ^ 2 := by positivity\n  have h10 : 0 < c ^ 2 / a ^ 2 := by positivity\n  nlinarith [sq_nonneg (a * b - 1), sq_nonneg (b * c - 1), sq_nonneg (c * a - 1)]\n  <;> linarith\n  <;> norm_num"
  ]
 },
 {
  "old": ": \u2200 m n : \u2124, ( m \u2223 n^2+1 \u2227 n \u2223 m^2+1 ) \u2192 \u2203 m' n' : \u2124, ( m' \u2223 n'^2+1 \u2227 n' \u2223 m'^2+1 ) \u2227 (m' > m \u2228 n' > n) := by",
  "new": "(i : \u2115) (hi : \u2203 k, 4 * k = i ^ 2 - 1) : IsUnit i \u2228 \u2203 p, Nat.Prime p \u2227 p \u2223 i \u2227 p = 2 \u2228 p \u2223 4 * (i ^ 2 - 1):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : \u2203 k, 4 * k = i ^ 2 - 1) :\n        IsUnit i \u2228 \u2203 p, Nat.Prime p \u2227 p \u2223 i \u2227 p = 2 \u2228 p \u2223 4 * (i ^ 2 - 1):= by\n  rcases hi with \u27e8k, hk\u27e9\n  apply Or.intro_right\n  use 2\n  simp_all [Nat.Prime]\n  <;> omega\n  <;> apply Nat.Prime\n  <;> simp_all\n  <;> omega\n  <;> apply Nat.Prime\n  <;> simp_all\n  <;> omega\n  <;> apply Nat.Prime\n  <;> simp_all\n  <;> omega\n  <;> apply Nat.Prime\n  <;> simp_all\n  <;> omega"
  ]
 },
 {
  "old": "{a b : \u2124} (h : 21 \u2223 a^2 + b^2) : 21^2 \u2223 a^2 + b^2 := by",
  "new": "{p : \u2115} (hp : p.Prime) {a b : \u2115} (h : p \u2223 a^n + b^n) : p \u2223 a \u2228 1 \u2223 a^n + b^n:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_1_dvd_of_prime_dvd_pow_add_pow {p : \u2115} (hp : p.Prime) {a b : \u2115}\n    (h : p \u2223 a^n + b^n) : p \u2223 a \u2228 1 \u2223 a^n + b^n:= by\n  by_cases h\u2080 : p \u2223 a\n  exacts [Or.inl h\u2080, Or.inr (by simpa [h\u2080] using h)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_1_dvd_of_prime_dvd_pow_add_pow {p : \u2115} (hp : p.Prime) {a b : \u2115}\n    (h : p \u2223 a^n + b^n) : p \u2223 a \u2228 1 \u2223 a^n + b^n:= by\n  by_cases h1 : p \u2223 a\n  left\n  assumption\n  right\n  simp_all [Nat.dvd_add_iff_left, Nat.pow_add]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_1_dvd_of_prime_dvd_pow_add_pow {p : \u2115} (hp : p.Prime) {a b : \u2115}\n    (h : p \u2223 a^n + b^n) : p \u2223 a \u2228 1 \u2223 a^n + b^n:= by\n  by_cases h\u2081 : p \u2223 a\n  exacts [Or.inl h\u2081, Or.inr (by simp [h\u2081])]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_1_dvd_of_prime_dvd_pow_add_pow {p : \u2115} (hp : p.Prime) {a b : \u2115}\n    (h : p \u2223 a^n + b^n) : p \u2223 a \u2228 1 \u2223 a^n + b^n:= by\n  have h1 : p \u2223 a^n + b^n \u2192 p \u2223 a \u2228 1 \u2223 a^n + b^n := by\n    intro h\n    by_cases h2 : p \u2223 a\n    exact Or.inl h2\n    exact Or.inr (by simp [h2, Nat.dvd_add_iff_left h])\n  exact h1 h"
  ]
 },
 {
  "old": "(a b c : \u211d) (h\u2081 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2082 : a + b > c) (h\u2083 : a + c > b) (h\u2084 : b + c > a) : (sin a ^ 2 * sin b ^ 2 * sin c ^ 2 / (sin a ^ 2 * sin b ^ 2 + sin b ^ 2 * sin c ^ 2 + sin c ^ 2 * sin a ^ 2) + cos a ^ 2 * cos b ^ 2 * cos c ^ 2 / (cos a ^ 2 * cos b ^ 2 + cos b ^ 2 * cos c ^ 2 + cos c ^ 2 * cos a ^ 2)) \u2264 1 / 3 := by",
  "new": ": Real.sqrt (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) * Real.sqrt (1 + c ^ 2) \u2264 Real.sqrt (3 + (a ^ 2 + b ^ 2 + c ^ 2)) * Real.sqrt (3 + (a ^ 2 + b ^ 2 + c ^ 2)):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) *\n        Real.sqrt (1 + c ^ 2) \u2264\n       Real.sqrt (3 + (a ^ 2 + b ^ 2 + c ^ 2)) *\n        Real.sqrt (3 + (a ^ 2 + b ^ 2 + c ^ 2)):= by\n  have h\u2080 : Real.sqrt (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) \u2264\n      Real.sqrt (3 + (a ^ 2 + b ^ 2 + c ^ 2)) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_sqrt (by nlinarith : 0 \u2264 1 + a ^ 2), sq_sqrt (by nlinarith : 0 \u2264 1 + b ^ 2),\n      sq_nonneg (a ^ 2 + b ^ 2 - 1), sq_nonneg (a ^ 2 + b ^ 2 + c ^ 2)]\n  calc\n    Real.sqrt (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) * Real.sqrt (1 + c ^ 2) \u2264\n        Real.sqrt (3 + (a ^ 2 + b ^ 2 + c ^ 2)) * Real.sqrt (1 + c ^ 2) := by\n      gcongr\n    _ \u2264 Real.sqrt (3 + (a ^ 2 + b ^ 2 + c ^ 2)) * Real.sqrt (3 + (a ^ 2 + b ^ 2 + c ^ 2)) := by\n      gcongr\n      <;> nlinarith [sq_sqrt (by nlinarith : 0 \u2264 1 + c ^ 2)]\n  <;> norm_num\n  <;> nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : \u221a((a * (b + c)) / (a ^ 2 + b * c)) + \u221a((b * (c + a)) / (b ^ 2 + c * a)) + \u221a((c * (a + b)) / (c ^ 2 + a * b)) \u2264 \u221a(2 * (a + b + c) * (1 / (a + b) + 1 / (b + c) + 1 / (c + a))) := by",
  "new": ": Real.sqrt (2 * (a * b + b * c + c * a)) \u2264 Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) + Real.sqrt (b ^ 2 + c ^ 2 + a ^ 2) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (2 * (a * b + b * c + c * a)) \u2264 Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) + Real.sqrt (b ^ 2 + c ^ 2 + a ^ 2) := by\n  have h\u2081 : 0 \u2264 Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) := Real.sqrt_nonneg _\n  have h\u2082 : 0 \u2264 Real.sqrt (b ^ 2 + c ^ 2 + a ^ 2) := Real.sqrt_nonneg _\n  have h\u2083 : 0 \u2264 Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) + Real.sqrt (b ^ 2 + c ^ 2 + a ^ 2) := by\n    linarith\n  have h\u2084 : 0 \u2264 Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) * Real.sqrt (b ^ 2 + c ^ 2 + a ^ 2) := by positivity\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  \u00b7 nlinarith\n  \u00b7 nlinarith [sq_sqrt (show 0 \u2264 a ^ 2 + b ^ 2 + c ^ 2 by positivity),\n      sq_sqrt (show 0 \u2264 b ^ 2 + c ^ 2 + a ^ 2 by positivity),\n      sq_nonneg (a + b + c),\n      sq_nonneg (a - b),\n      sq_nonneg (b - c),\n      sq_nonneg (c - a)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (2 * (a * b + b * c + c * a)) \u2264 Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) + Real.sqrt (b ^ 2 + c ^ 2 + a ^ 2) := by\n  have h\u2080 : 0 \u2264 Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) := Real.sqrt_nonneg _\n  have h\u2081 : 0 \u2264 Real.sqrt (b ^ 2 + c ^ 2 + a ^ 2) := Real.sqrt_nonneg _\n  have h\u2082 : 0 \u2264 Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) + Real.sqrt (b ^ 2 + c ^ 2 + a ^ 2) := add_nonneg h\u2080 h\u2081\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  \u00b7 positivity\n  \u00b7 nlinarith [sq_sqrt (show 0 \u2264 a ^ 2 + b ^ 2 + c ^ 2 by positivity),\n      sq_sqrt (show 0 \u2264 b ^ 2 + c ^ 2 + a ^ 2 by positivity),\n      sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> try norm_num"
  ]
 },
 {
  "old": "(n : \u2115) (f : \u211d \u2192 \u211d) (hf: \u2200 x y : \u211d, f x * f y \u2265 (f ((x + y) / 2))^2) : \u2200 x : \u2115 \u2192 \u211d, \u220f i in Finset.range n, f (x i) \u2265 (f (\u2211 i in Finset.range n, x i / n))^n := by",
  "new": ": \u220f x in Finset.range n, (x + 1) \u2265 (\u2211 x in Finset.range n, x) + 1 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u220f x in Finset.range n, (x + 1) \u2265 (\u2211 x in Finset.range n, x) + 1 := by\n  induction' n with n ih\n  case zero => simp\n  case succ =>\n    simp_all [Finset.range_succ, Nat.succ_mul, Nat.mul_succ]\n    nlinarith [Nat.mul_le_mul_right (\u2211 x in Finset.range n, x) (Nat.zero_le n)]"
  ]
 },
 {
  "old": ": 0 \u2264 x \u2227 x < 2 * \u03c0 \u2192 (sin x < cos x \u2194 0 \u2264 x \u2227 x < \u03c0 / 4 \u2228 5 * \u03c0 / 4 < x \u2227 x < 2 * \u03c0) := by",
  "new": "(x : \u211d) : sin x \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_le_one (x : \u211d) : sin x \u2264 1:= by\n  have := sin_sq_add_cos_sq x\n  have := sq_nonneg (sin x - 1)\n  have := add_nonneg this (sq_nonneg (cos x))\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_le_one (x : \u211d) : sin x \u2264 1:= by\n  nlinarith [Real.sin_sq_add_cos_sq x]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_le_one (x : \u211d) : sin x \u2264 1:= by\n  have h : sin x \u2264 1 := by\n    have h\u2081 : sin x \u2264 1 := by\n      have h\u2082 : sin x \u2264 1 := by\n        nlinarith [sin_sq_add_cos_sq x]\n      nlinarith [sin_sq_add_cos_sq x]\n    nlinarith [sin_sq_add_cos_sq x]\n  nlinarith [sin_sq_add_cos_sq x]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_le_one (x : \u211d) : sin x \u2264 1:= by\n  nlinarith [Real.sin_sq_add_cos_sq x, Real.sin_le_one x]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b > c) (hbc : b + c > a) (hca : c + a > b) (ha2 : a^2 + b^2 + c^2 = 3) : (a + b) / Real.sqrt (a + b - c) * (b + c) / Real.sqrt (b + c - a) + (b + c) / Real.sqrt (b + c - a) * (c + a) / Real.sqrt (c + a - b) + (c + a) / Real.sqrt (c + a - b) * (a + b) / Real.sqrt (a + b - c) \u2265 12 := by",
  "new": ": Real.sqrt (Real.sqrt (1 + 16 * x ^ 2) + 4 * x) \u2264 2 * Real.sqrt (1 + 8 * x ^ 2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + 16 * x ^ 2) + 4 * x) \u2264 2 * Real.sqrt (1 + 8 * x ^ 2):= by\n  have h\u2080 : 0 \u2264 Real.sqrt (1 + 8 * x ^ 2) := Real.sqrt_nonneg (1 + 8 * x ^ 2)\n  have h\u2081 : 0 \u2264 Real.sqrt (1 + 16 * x ^ 2) := Real.sqrt_nonneg (1 + 16 * x ^ 2)\n  have h\u2082 : 0 \u2264 x ^ 2 := sq_nonneg x\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  \u00b7 nlinarith [sq_sqrt (show 0 \u2264 1 + 8 * x ^ 2 from by positivity), h\u2080]\n  \u00b7 nlinarith [sq_sqrt (show 0 \u2264 1 + 16 * x ^ 2 from by positivity),\n      sq_sqrt (show 0 \u2264 1 + 8 * x ^ 2 from by positivity),\n      mul_self_nonneg (x - 1 / 2),\n      mul_self_nonneg (x + 1 / 2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + 16 * x ^ 2) + 4 * x) \u2264 2 * Real.sqrt (1 + 8 * x ^ 2):= by\n  rw [Real.sqrt_le_iff]\n  refine' \u27e8by positivity, _\u27e9\n  have h\u2081 : 0 \u2264 Real.sqrt (1 + 8 * x ^ 2) := Real.sqrt_nonneg _\n  have h\u2082 : 0 \u2264 (Real.sqrt (1 + 8 * x ^ 2)) ^ 2 := by positivity\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 1 + 8 * x ^ 2 from by positivity),\n    sq_sqrt (show (0 : \u211d) \u2264 1 + 16 * x ^ 2 from by positivity),\n    sq_nonneg (Real.sqrt (1 + 16 * x ^ 2) - 4 * x)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + 16 * x ^ 2) + 4 * x) \u2264 2 * Real.sqrt (1 + 8 * x ^ 2):= by\n  have h\u2081 : 0 \u2264 (4 * x - 1) ^ 2 := sq_nonneg (4 * x - 1)\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  \u00b7 nlinarith [Real.sqrt_nonneg (1 + 16 * x ^ 2), Real.sqrt_nonneg (1 + 8 * x ^ 2)]\n  \u00b7 nlinarith [sq_sqrt (show 0 \u2264 1 + 16 * x ^ 2 from by nlinarith),\n      sq_sqrt (show 0 \u2264 1 + 8 * x ^ 2 from by nlinarith)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) : 3 / 2 \u2264 a * b / (c * (b + c)) + b * c / (a * (c + a)) + c * a / (b * (a + b)) := by",
  "new": ": \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c = 1 \u2192 2 * (a * b / (c * (b + c)) + b * c / (a * (c + a)) + c * a / (b * (a + b))) \u2265 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c = 1 \u2192 2 * (a * b / (c * (b + c)) + b * c / (a * (c + a)) + c * a / (b * (a + b))) \u2265 3:= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have h1 : 0 < b + c := by linarith\n  have h2 : 0 < c * (b + c) := by positivity\n  have h3 : 0 < a * (c + a) := by positivity\n  have h4 : 0 < b * (a + b) := by positivity\n  have h5 : 0 < a * b := by positivity\n  have h6 : 0 < b * c := by positivity\n  have h7 : 0 < c * a := by positivity\n  have h8 : a * b / (c * (b + c)) + b * c / (a * (c + a)) + c * a / (b * (a + b)) \u2265 3 / 2 := by\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      mul_self_nonneg (a * b - c * b), mul_self_nonneg (b * c - a * c), mul_self_nonneg (c * a - b * a)]\n  linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 3) (h : 0 < k) : a / b ^ (k + 1) + b / c ^ (k + 1) + c / a ^ (k + 1) \u2265 a ^ k / b + b ^ k / c + c ^ k / a := by",
  "new": ": \u2200 a b c : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 a + b + c = 3 \u2192 a * b * c = 1 \u2192 a ^ 3 / b ^ 3 + b ^ 3 / c ^ 3 + c ^ 3 / a ^ 3 \u2265 a + b + c:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 a + b + c = 3 \u2192 a * b * c = 1 \u2192\n   a ^ 3 / b ^ 3 + b ^ 3 / c ^ 3 + c ^ 3 / a ^ 3 \u2265 a + b + c:= by\n  intro a b c ha hb hc habc hab\n  have h\u2081 : a = 1 \u2227 b = 1 \u2227 c = 1 := by\n    have : a = 1 := by\n      nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n    have : b = 1 := by\n      nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n    have : c = 1 := by\n      nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n    exact \u27e8by linarith, by linarith, by linarith\u27e9\n  simp_all only [h\u2081, add_assoc, add_left_comm, add_comm, mul_one, one_mul, add_zero]\n  norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 a + b + c = 3 \u2192 a * b * c = 1 \u2192\n   a ^ 3 / b ^ 3 + b ^ 3 / c ^ 3 + c ^ 3 / a ^ 3 \u2265 a + b + c:= by\n  intro a b c h\u2080 h\u2081 h\u2082 h\u2083 h\u2084\n  have h\u2085 : a = 1 \u2227 b = 1 \u2227 c = 1 := by\n    have : a = 1 := by\n      nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n        mul_pos h\u2080 h\u2081, mul_pos h\u2081 h\u2082, mul_pos h\u2082 h\u2080]\n    have : b = 1 := by\n      nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n        mul_pos h\u2080 h\u2081, mul_pos h\u2081 h\u2082, mul_pos h\u2082 h\u2080]\n    have : c = 1 := by\n      nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n        mul_pos h\u2080 h\u2081, mul_pos h\u2081 h\u2082, mul_pos h\u2082 h\u2080]\n    exact \u27e8by assumption, by assumption, by assumption\u27e9\n  simp_all only [h\u2085, one_pow, add_assoc, add_left_comm, add_comm, mul_one, mul_assoc, mul_left_comm,\n    mul_comm]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 a + b + c = 3 \u2192 a * b * c = 1 \u2192\n   a ^ 3 / b ^ 3 + b ^ 3 / c ^ 3 + c ^ 3 / a ^ 3 \u2265 a + b + c:= by\n  rintro a b c h\u2080 h\u2081 h\u2082 h\u2083 h\u2084\n  have : a = 1 \u2227 b = 1 \u2227 c = 1 := by\n    have : a = 1 := by\n      nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c), sq_nonneg (a + b + c)]\n    have : b = 1 := by\n      nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c), sq_nonneg (a + b + c)]\n    have : c = 1 := by\n      nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c), sq_nonneg (a + b + c)]\n    simp [*]\n  simp [this]"
  ]
 },
 {
  "old": "{a n m : \u2115} (ha : 1 < a) : Nat.gcd (a^n - 1) (a^m - 1) = a^(Nat.gcd n m) - 1 := by",
  "new": "(n : \u2115) : (\u2203 x y : \u2115, Nat.gcd x y = 1 \u2227 n = x * y) \u2228 \u2203 a b :\u2115, n = a * b \u2227 0 < a \u2227 0 < b \u2227 0 < a + b \u2227 0 < a^2+ b^2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_goldbach_conjecture (n : \u2115) :  (\u2203 x y : \u2115, Nat.gcd x y = 1 \u2227 n = x * y) \u2228 \u2203 a b :\u2115, n = a * b \u2227 0 < a \u2227 0 < b \u2227 0 < a + b \u2227 0 < a^2+ b^2:= by\n  by_cases h : \u2203 a b : \u2115, n = a * b \u2227 0 < a \u2227 0 < b \u2227 0 < a + b \u2227 0 < a^2 + b^2\n  apply Or.inr\n  exact h\n  apply Or.inl\n  exact \u27e81, n, by simp, by omega\u27e9\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_goldbach_conjecture (n : \u2115) :  (\u2203 x y : \u2115, Nat.gcd x y = 1 \u2227 n = x * y) \u2228 \u2203 a b :\u2115, n = a * b \u2227 0 < a \u2227 0 < b \u2227 0 < a + b \u2227 0 < a^2+ b^2:= by\n  refine' or_iff_not_imp_right.mpr fun h\u2081 => _\n  push_neg at h\u2081\n  refine' \u27e8n, 1, by simp\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_goldbach_conjecture (n : \u2115) :  (\u2203 x y : \u2115, Nat.gcd x y = 1 \u2227 n = x * y) \u2228 \u2203 a b :\u2115, n = a * b \u2227 0 < a \u2227 0 < b \u2227 0 < a + b \u2227 0 < a^2+ b^2:= by\n  left\n  use n, 1\n  simp\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_goldbach_conjecture (n : \u2115) :  (\u2203 x y : \u2115, Nat.gcd x y = 1 \u2227 n = x * y) \u2228 \u2203 a b :\u2115, n = a * b \u2227 0 < a \u2227 0 < b \u2227 0 < a + b \u2227 0 < a^2+ b^2:= by\n  refine' or_iff_not_imp_right.mpr fun h \u21a6 _\n  push_neg at h\n  use 1, n\n  simp_all\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop"
  ]
 },
 {
  "old": "(a b c : \u211d) (h1 : a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1) : a * b + b * c + c * a \u2265 a * Real.sqrt b + b * Real.sqrt c + c * Real.sqrt a := by",
  "new": "(a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 a = 0 \u2227 b = 1 \u2228 a = 1 \u2227 b = 0 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_mul_eq_one (a b : \u2115) (h : a * b = 1) :\n    a = 1 \u2227 b = 1 \u2228 a = 0 \u2227 b = 1 \u2228 a = 1 \u2227 b = 0 := by\n  simp [Nat.eq_zero_of_mul_eq_zero, Nat.eq_one_of_mul_eq_one_right] at h \u22a2\n  omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_mul_eq_one (a b : \u2115) (h : a * b = 1) :\n    a = 1 \u2227 b = 1 \u2228 a = 0 \u2227 b = 1 \u2228 a = 1 \u2227 b = 0 := by\n  by_cases ha : a = 0 <;> by_cases hb : b = 0 <;> simp_all [mul_eq_one_iff]\n  <;> tauto\n  <;> tauto\n  <;> tauto",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_mul_eq_one (a b : \u2115) (h : a * b = 1) :\n    a = 1 \u2227 b = 1 \u2228 a = 0 \u2227 b = 1 \u2228 a = 1 \u2227 b = 0 := by\n  rw [mul_eq_one] at h\n  rcases h with (\u27e8h\u2081, h\u2082\u27e9 | \u27e8h\u2081, h\u2082\u27e9) <;>\n  aesop\n  <;>\n  aesop\n  <;>\n  aesop\n  <;>\n  aesop\n  <;>\n  aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_mul_eq_one (a b : \u2115) (h : a * b = 1) :\n    a = 1 \u2227 b = 1 \u2228 a = 0 \u2227 b = 1 \u2228 a = 1 \u2227 b = 0 := by\n  simp [Nat.eq_one_of_mul_eq_one_left, Nat.eq_one_of_mul_eq_one_right] at h\n  omega"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : (a - b * c) / (b * (1 + c)) + (b - c * a) / (c * (1 + a)) + (c - a * b) / (a * (1 + b)) \u2265 0 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) : x / (y + z) + y / (z + x) + z / (x + y) \u2265 3 / 2 \u2227 (x / (y + z) + y / (z + x) + z / (x + y)) \u2265 3 / 2 \u2227 (x / (y + z) + y / (z + x) + z / (x + y)) \u2265 3 / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h : x * y * z = 1) :\n    x / (y + z) + y / (z + x) + z / (x + y) \u2265 3 / 2 \u2227\n    (x / (y + z) + y / (z + x) + z / (x + y)) \u2265 3 / 2 \u2227\n    (x / (y + z) + y / (z + x) + z / (x + y)) \u2265 3 / 2:= by\n  have h1 : 0 < y + z := by linarith\n  have h2 : 0 < z + x := by linarith\n  have h3 : 0 < x + y := by linarith\n  have h4 : 0 < x * y := by positivity\n  have h5 : 0 < y * z := by positivity\n  have h6 : 0 < x * z := by positivity\n  have h7 : 0 < (y + z) * (z + x) * (x + y) := by positivity\n  apply And.intro\n  \u00b7 field_simp [h1, h2, h3, h4, h5, h6, h7]\n    rw [div_le_div_iff]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n    positivity\n    positivity\n  apply And.intro\n  \u00b7 field_simp [h1, h2, h3, h4, h5, h6, h7]\n    rw [div_le_div_iff]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n    positivity\n    positivity\n  \u00b7 field_simp [h1, h2, h3, h4, h5, h6, h7]\n    rw [div_le_div_iff]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n    positivity\n    positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h : x * y * z = 1) :\n    x / (y + z) + y / (z + x) + z / (x + y) \u2265 3 / 2 \u2227\n    (x / (y + z) + y / (z + x) + z / (x + y)) \u2265 3 / 2 \u2227\n    (x / (y + z) + y / (z + x) + z / (x + y)) \u2265 3 / 2:= by\n  have h0 : 0 < y + z := add_pos hy hz\n  have h1 : 0 < z + x := add_pos hz hx\n  have h2 : 0 < x + y := add_pos hx hy\n  constructor\n  \u00b7 field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n      mul_self_nonneg (x - 1), mul_self_nonneg (y - 1), mul_self_nonneg (z - 1)]\n  \u00b7 constructor\n    \u00b7 field_simp\n      rw [div_le_div_iff (by positivity) (by positivity)]\n      nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n        mul_self_nonneg (x - 1), mul_self_nonneg (y - 1), mul_self_nonneg (z - 1)]\n    \u00b7 field_simp\n      rw [div_le_div_iff (by positivity) (by positivity)]\n      nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n        mul_self_nonneg (x - 1), mul_self_nonneg (y - 1), mul_self_nonneg (z - 1)]"
  ]
 },
 {
  "old": "(n : \u2115) (D : \u211d) : |D - n * Real.log 2| < Real.sqrt n + 1 \u2194 n * Real.log 2 - Real.sqrt n - 1 < D \u2227 D < n * Real.log 2 + Real.sqrt n + 1 := by",
  "new": "(n : \u2115) (hn : 0 < n) : (\u2203 m : \u2115, 2 * m + 1 = n) \u2228 (\u2203 m : \u2115, 2 * m = n \u2227 (Nat.sqrt m)^2 < n):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_sqrt_dvd (n : \u2115) (hn : 0 < n) : (\u2203 m : \u2115, 2 * m + 1 = n) \u2228 (\u2203 m : \u2115, 2 * m = n \u2227 (Nat.sqrt m)^2 < n):= by\n  by_cases h1 : n % 2 = 0\n  case pos =>\n    right\n    use n / 2\n    constructor\n    \u00b7 omega\n    \u00b7 have h2 : (Nat.sqrt (n / 2))^2 < n := by\n        have h21 : (Nat.sqrt (n / 2))^2 \u2264 n / 2 := by\n          apply Nat.le_of_lt_succ\n          nlinarith [Nat.sqrt_le (n / 2)]\n        have h22 : n / 2 < n := by\n          apply Nat.div_lt_of_lt_mul\n          omega\n        omega\n      exact h2\n  case neg =>\n    left\n    use (n - 1) / 2\n    omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_sqrt_dvd (n : \u2115) (hn : 0 < n) : (\u2203 m : \u2115, 2 * m + 1 = n) \u2228 (\u2203 m : \u2115, 2 * m = n \u2227 (Nat.sqrt m)^2 < n):= by\n  by_cases h\u2081 : n % 2 = 0\n  case pos =>\n    right\n    use n / 2\n    constructor\n    \u00b7 omega\n    \u00b7 have : (Nat.sqrt (n / 2)) ^ 2 < n := by\n        have h\u2082 : (Nat.sqrt (n / 2)) ^ 2 \u2264 n / 2 := by\n          nlinarith [Nat.sqrt_le (n / 2)]\n        have h\u2083 : n / 2 < n := by\n          apply Nat.div_lt_self\n          \u00b7 omega\n          \u00b7 omega\n        omega\n      omega\n  case neg =>\n    left\n    use (n - 1) / 2\n    omega\n  <;> omega\n  <;> omega\n  <;> omega"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : x > 0) (hy : y > 0) (hz : z > 0) (hx1 : x + y + z = 1) : 9 * (x^2 * (x + y) * (x + z) + y^2 * (y + z) * (y + x) + z^2 * (z + x) * (z + y)) \u2265 (x + y)^2 + (y + z)^2 + (z + x)^2 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 1) : (x ^ 2 / (x + y) + y ^ 2 / (y + z) + z ^ 2 / (z + x)) \u2265 (x * y + y * z + z * x) / (x + y + z) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 1) : (x ^ 2 / (x + y) + y ^ 2 / (y + z) + z ^ 2 / (z + x)) \u2265 (x * y + y * z + z * x) / (x + y + z)  := by\n  have h\u2081 : 0 < x + y := by linarith\n  have h\u2082 : 0 < y + z := by linarith\n  have h\u2083 : 0 < z + x := by linarith\n  have h\u2084 : 0 < x * y := by positivity\n  have h\u2085 : 0 < y * z := by positivity\n  have h\u2086 : 0 < z * x := by positivity\n  have h\u2087 : 0 < x * y * (x + y) := by positivity\n  have h\u2088 : 0 < y * z * (y + z) := by positivity\n  have h\u2089 : 0 < z * x * (z + x) := by positivity\n  have h\u2081\u2080 : 0 < x * y * (x + y) * (y + z) := by positivity\n  have h\u2081\u2081 : 0 < y * z * (y + z) * (z + x) := by positivity\n  have h\u2081\u2082 : 0 < z * x * (z + x) * (x + y) := by positivity\n  have h\u2081\u2083 : 0 < x * y * (x + y) * (y + z) * (z + x) := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x * y + y * z + z * x), mul_self_nonneg (x * y - y * z),\n    mul_self_nonneg (y * z - z * x), mul_self_nonneg (z * x - x * y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 1) : (x ^ 2 / (x + y) + y ^ 2 / (y + z) + z ^ 2 / (z + x)) \u2265 (x * y + y * z + z * x) / (x + y + z)  := by\n  have h\u2081 : 0 < x + y := by linarith\n  have h\u2082 : 0 < y + z := by linarith\n  have h\u2083 : 0 < z + x := by linarith\n  have h\u2084 : 0 < x * y := by positivity\n  have h\u2085 : 0 < y * z := by positivity\n  have h\u2086 : 0 < z * x := by positivity\n  have h\u2087 : 0 < (x + y) * (y + z) * (z + x) := by positivity\n  have h\u2088 : 0 < x * y * (z + x) := by positivity\n  have h\u2089 : 0 < y * z * (x + y) := by positivity\n  have h\u2081\u2080 : 0 < z * x * (y + z) := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x * y + y * z + z * x), mul_self_nonneg (x * y - y * z),\n    mul_self_nonneg (y * z - z * x), mul_self_nonneg (z * x - x * y)]"
  ]
 },
 {
  "old": "(x y z : \u211d) (h : x^2 + y^2 + z^2 + 1 = 2 * (x * y + y * z + z * x)) : 81 * x^2 * y^2 * z^2 + 2 \u2265 5 * (x * y + y * z + z * x) := by",
  "new": "(x y : \u2115) (h : x ^ 2 + y ^ 2 + 1 = 2 * x * y) : Nat.Coprime x y \u2228 x < y \u2227 y < x:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_small_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 + 1 = 2 * x * y) :\n  Nat.Coprime x y \u2228 x < y \u2227 y < x:= by\n  by_cases h' : x \u2264 y\n  apply Or.inr\n  exact \u27e8by nlinarith, by nlinarith\u27e9\n  apply Or.inl\n  rw [Nat.coprime_iff_gcd_eq_one]\n  rw [Nat.gcd_comm]\n  apply Eq.symm\n  apply Eq.symm\n  rw [Nat.gcd_comm]\n  apply Eq.symm\n  apply Eq.symm\n  rw [Nat.gcd_comm]\n  apply Eq.symm\n  apply Eq.symm\n  rw [Nat.gcd_comm]\n  apply Eq.symm\n  apply Eq.symm\n  ring_nf at h\n  nlinarith\n  <;> linarith"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x \u2227 0 < y \u2227 0 < z) (hx1 : y + z > x) (hx2 : z + x > y) (hx3 : x + y > z) : (x ^ 3 / (y + z) + y ^ 3 / (z + x) + z ^ 3 / (x + y)) \u2264 (x + y + z) ^ 2 / 6 + (x - y) ^ 2 + (y - z) ^ 2 + (z - x) ^ 2 := by",
  "new": ": \u2200 x : \u211d, x > 0 \u2192 x ^ 3 / (2 * x + x) \u2264 x ^ 2 / 3 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 3 / (2 * x + x) \u2264 x ^ 2 / 3 := by\n  intro x hx\n  have h : 0 < x ^ 2 := pow_pos hx 2\n  field_simp [h]\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (x - 1)]\n  positivity\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 3 / (2 * x + x) \u2264 x ^ 2 / 3 := by\n  intro x hx\n  rw [div_le_div_iff] <;> nlinarith [pow_two x, pow_two (x ^ 2), pow_two (x ^ 2 + x)]\n  <;> nlinarith [pow_two x, pow_two (x ^ 2), pow_two (x ^ 2 + x)]\n  <;> nlinarith [pow_two x, pow_two (x ^ 2), pow_two (x ^ 2 + x)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 3 / (2 * x + x) \u2264 x ^ 2 / 3 := by\n  intro x hx\n  field_simp [pow_succ]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 3 / (2 * x + x) \u2264 x ^ 2 / 3 := by\n  intro x hx\n  apply le_of_sub_nonneg\n  field_simp [hx]\n  ring_nf\n  positivity\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (habc : a * b * c = 1) : 3 / 2 \u2264 1 / (a^3 * (b + c)) + 1 / (b^3 * (a + c)) + 1 / (c^3 * (b + a)) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y + y * z + z * x = 1) : 3 / (x ^ 3 * (y ^ 3 + z ^ 3)) + 3 / (y ^ 3 * (z ^ 3 + x ^ 3)) + 3 / (z ^ 3 * (x ^ 3 + y ^ 3)) \u2265 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h : x * y + y * z + z * x = 1) :\n  3 / (x ^ 3 * (y ^ 3 + z ^ 3)) + 3 / (y ^ 3 * (z ^ 3 + x ^ 3)) + 3 / (z ^ 3 * (x ^ 3 + y ^ 3)) \u2265 1:= by\n  have : 0 < x * y := by positivity\n  have : 0 < y * z := by positivity\n  have : 0 < z * x := by positivity\n  have h\u2080 : 0 < x ^ 3 * (y ^ 3 + z ^ 3) := by positivity\n  have h\u2081 : 0 < y ^ 3 * (z ^ 3 + x ^ 3) := by positivity\n  have h\u2082 : 0 < z ^ 3 * (x ^ 3 + y ^ 3) := by positivity\n  have h\u2083 : 3 / (x ^ 3 * (y ^ 3 + z ^ 3)) \u2265 1 / 3 := by\n    rw [ge_iff_le, le_div_iff h\u2080]\n    nlinarith [sq_nonneg (x * y + y * z + z * x),\n      sq_nonneg (x * y - y * z),\n      sq_nonneg (y * z - z * x),\n      sq_nonneg (z * x - x * y)]\n  have h\u2084 : 3 / (y ^ 3 * (z ^ 3 + x ^ 3)) \u2265 1 / 3 := by\n    rw [ge_iff_le, le_div_iff h\u2081]\n    nlinarith [sq_nonneg (x * y + y * z + z * x),\n      sq_nonneg (x * y - y * z),\n      sq_nonneg (y * z - z * x),\n      sq_nonneg (z * x - x * y)]\n  have h\u2085 : 3 / (z ^ 3 * (x ^ 3 + y ^ 3)) \u2265 1 / 3 := by\n    rw [ge_iff_le, le_div_iff h\u2082]\n    nlinarith [sq_nonneg (x * y + y * z + z * x),\n      sq_nonneg (x * y - y * z),\n      sq_nonneg (y * z - z * x),\n      sq_nonneg (z * x - x * y)]\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h : x * y + y * z + z * x = 1) :\n  3 / (x ^ 3 * (y ^ 3 + z ^ 3)) + 3 / (y ^ 3 * (z ^ 3 + x ^ 3)) + 3 / (z ^ 3 * (x ^ 3 + y ^ 3)) \u2265 1:= by\n  have h1 : 0 < x * y := by positivity\n  have h2 : 0 < y * z := by positivity\n  have h3 : 0 < z * x := by positivity\n  have h4 : 0 < x ^ 3 * (y ^ 3 + z ^ 3) := by positivity\n  have h5 : 0 < y ^ 3 * (z ^ 3 + x ^ 3) := by positivity\n  have h6 : 0 < z ^ 3 * (x ^ 3 + y ^ 3) := by positivity\n  have h7 : 3 / (x ^ 3 * (y ^ 3 + z ^ 3)) \u2265 1 := by\n    rw [ge_iff_le]\n    rw [le_div_iff h4]\n    nlinarith [sq_nonneg (x * y), sq_nonneg (y * z), sq_nonneg (z * x)]\n  have h8 : 3 / (y ^ 3 * (z ^ 3 + x ^ 3)) \u2265 1 := by\n    rw [ge_iff_le]\n    rw [le_div_iff h5]\n    nlinarith [sq_nonneg (x * y), sq_nonneg (y * z), sq_nonneg (z * x)]\n  have h9 : 3 / (z ^ 3 * (x ^ 3 + y ^ 3)) \u2265 1 := by\n    rw [ge_iff_le]\n    rw [le_div_iff h6]\n    nlinarith [sq_nonneg (x * y), sq_nonneg (y * z), sq_nonneg (z * x)]\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h : x * y + y * z + z * x = 1) :\n  3 / (x ^ 3 * (y ^ 3 + z ^ 3)) + 3 / (y ^ 3 * (z ^ 3 + x ^ 3)) + 3 / (z ^ 3 * (x ^ 3 + y ^ 3)) \u2265 1:= by\n  have : 0 < x * y := by positivity\n  have : 0 < y * z := by positivity\n  have : 0 < z * x := by positivity\n  have : 0 < x ^ 3 * (y ^ 3 + z ^ 3) := by positivity\n  have : 0 < y ^ 3 * (z ^ 3 + x ^ 3) := by positivity\n  have : 0 < z ^ 3 * (x ^ 3 + y ^ 3) := by positivity\n  have h\u2081 : 3 / (x ^ 3 * (y ^ 3 + z ^ 3)) \u2265 1 := by\n    rw [ge_iff_le, le_div_iff] <;>\n    nlinarith [pow_two (x * y), pow_two (y * z), pow_two (z * x)]\n  have h\u2082 : 3 / (y ^ 3 * (z ^ 3 + x ^ 3)) \u2265 1 := by\n    rw [ge_iff_le, le_div_iff] <;>\n    nlinarith [pow_two (x * y), pow_two (y * z), pow_two (z * x)]\n  have h\u2083 : 3 / (z ^ 3 * (x ^ 3 + y ^ 3)) \u2265 1 := by\n    rw [ge_iff_le, le_div_iff] <;>\n    nlinarith [pow_two (x * y), pow_two (y * z), pow_two (z * x)]\n  linarith"
  ]
 },
 {
  "old": ": \u2200 p : \u2115, \u2200 k : \u2115, \u2200 x : \u2124, (x ^ p ^ k - x ^ p ^ (k - 1)) % p ^ k = 0 := by",
  "new": "(p : \u2115) {a : \u2115} (ha : a \u2260 0) (hp : Nat.Prime p) : p.Coprime a \u2228 p \u2223 a := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {a : \u2115} (ha : a \u2260 0) (hp : Nat.Prime p) :\n        p.Coprime a \u2228 p \u2223 a := by\n  apply or_iff_not_imp_right.mpr\n  intro h\n  have h1 := hp.coprime_iff_not_dvd.mpr h\n  simpa [h1] using h1",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {a : \u2115} (ha : a \u2260 0) (hp : Nat.Prime p) :\n        p.Coprime a \u2228 p \u2223 a := by\n  apply or_iff_not_imp_right.mpr\n  intro h\n  have h1 : p.Coprime a := by\n    rw [Nat.Prime.coprime_iff_not_dvd hp]\n    exact h\n  exact h1",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {a : \u2115} (ha : a \u2260 0) (hp : Nat.Prime p) :\n        p.Coprime a \u2228 p \u2223 a := by\n  refine' or_iff_not_imp_right.mpr fun h => ?_\n  simpa [hp.coprime_iff_not_dvd, ha] using h"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a^2 + b^2 + c^2 = 1): a * b + b * c + c * a \u2265 -0.5 \u2227 (\u2203 a b c : \u211d, a^2 + b^2 + c^2 = 1 \u2227 a * b + b * c + c * a = -0.5) := by",
  "new": "(i : \u2115) (hi : \u2200 k, 0 < k \u2192 k^2 \u2264 i \u2192 (i : \u2124) \u2260 k) : (\u2203 a b : \u2115, a * b = i \u2227 a \u2260 0 \u2227 b \u2260 0 \u2227 a \u2260 b) \u2194 i > 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_mul_eq_one (i : \u2115) (hi : \u2200 k, 0 < k \u2192  k^2 \u2264 i \u2192 (i : \u2124) \u2260 k) : (\u2203  a b : \u2115, a * b = i \u2227 a \u2260 0 \u2227 b \u2260 0 \u2227 a \u2260 b) \u2194 i > 1:= by\n  constructor\n  rintro \u27e8a, b, hab, ha, hb, hab'\u27e9\n  contrapose! hi\n  interval_cases i <;> simp_all (config := {decide := true})\n  rintro hi\n  use 1, i\n  simp\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_mul_eq_one (i : \u2115) (hi : \u2200 k, 0 < k \u2192  k^2 \u2264 i \u2192 (i : \u2124) \u2260 k) : (\u2203  a b : \u2115, a * b = i \u2227 a \u2260 0 \u2227 b \u2260 0 \u2227 a \u2260 b) \u2194 i > 1:= by\n  constructor <;> intro h\n  rcases h with \u27e8a, b, hab, ha, hb, hab'\u27e9\n  have : a * b = i := hab\n  have : a \u2260 0 := ha\n  have : b \u2260 0 := hb\n  have : a \u2260 b := hab'\n  have : i > 1 := by\n    contrapose! hi\n    interval_cases i <;> simp_all\n  linarith\n  use 1, i\n  simp\n  <;> omega\n  <;> aesop"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a / b + b / c + c / a + 3 * a * b * c / (a ^ 2 * b + b ^ 2 * c + c ^ 2 * a)) \u2265 4 := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 (a / b + b / c + c / a + 3 * a * b * c / (a ^ 2 * b + b ^ 2 * c + c ^ 2 * a)) \u2265 4 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192\n   (a / b + b / c + c / a + 3 * a * b * c / (a ^ 2 * b + b ^ 2 * c + c ^ 2 * a)) \u2265 4 := by\n  rintro a b c \u27e8ha : 0 < a, hb : 0 < b, hc : 0 < c\u27e9\n  have h\u2080 : 0 < a * b := by positivity\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * a := by positivity\n  have h\u2083 : 0 < a * b * c := by positivity\n  have h\u2084 : 0 < a ^ 2 * b + b ^ 2 * c + c ^ 2 * a := by positivity\n  have h\u2085 : 0 < a * b * c * (a ^ 2 * b + b ^ 2 * c + c ^ 2 * a) := by positivity\n  field_simp [ha.ne', hb.ne', hc.ne', h\u2080.ne', h\u2081.ne', h\u2082.ne', h\u2083.ne', h\u2084.ne', h\u2085.ne']\n  rw [le_div_iff]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b),\n    mul_nonneg h\u2080.le h\u2081.le, mul_nonneg h\u2081.le h\u2082.le, mul_nonneg h\u2082.le h\u2080.le,\n    mul_nonneg (sq_nonneg (a - b)) h\u2082.le, mul_nonneg (sq_nonneg (b - c)) h\u2080.le,\n    mul_nonneg (sq_nonneg (c - a)) h\u2081.le]\n  positivity\n  <;> norm_num"
  ]
 },
 {
  "old": "(x : \u2102) : x^12 + x^6 + 1 = (x - 1) * (x + 1) * (x^2 + x + 1) * (x^2 - x + 1) * (x^4 - x^2 + 1) := by",
  "new": "(x : \u211d) : x ^ 12 + x ^ 6 + 1 \u2260 0 \u2194 x ^ 4 - x ^ 2 + 1 \u2260 0 \u2227 x ^ 4 + x ^ 2 + 1 \u2260 0 \u2227 x ^ 2 + x + 1 \u2260 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_factors_12 (x : \u211d) : x ^ 12 + x ^ 6 + 1 \u2260 0 \u2194 x ^ 4 - x ^ 2 + 1 \u2260 0 \u2227 x ^ 4 + x ^ 2 + 1 \u2260 0 \u2227 x ^ 2 + x + 1 \u2260 0:= by\n  constructor <;> intro h\n  constructor\n  contrapose! h\n  nlinarith [sq_nonneg (x ^ 6 - 1), sq_nonneg (x ^ 4 - x ^ 2), sq_nonneg (x ^ 2 - 1),\n    sq_nonneg (x - 1), sq_nonneg (x + 1), h]\n  constructor\n  contrapose! h\n  nlinarith [sq_nonneg (x ^ 6 + 1), sq_nonneg (x ^ 4 + x ^ 2), sq_nonneg (x ^ 2 + 1),\n    sq_nonneg (x + 1), sq_nonneg (x - 1), h]\n  contrapose! h\n  nlinarith [sq_nonneg (x ^ 6 - 1), sq_nonneg (x ^ 4 - x ^ 2), sq_nonneg (x ^ 2 - 1),\n    sq_nonneg (x - 1), sq_nonneg (x + 1), h]\n  nlinarith [sq_nonneg (x ^ 6 + 1), sq_nonneg (x ^ 4 + x ^ 2), sq_nonneg (x ^ 2 + 1),\n    sq_nonneg (x + 1), sq_nonneg (x - 1), h]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : (1 / Real.sqrt (3 * a ^ 4 + 5 * b ^ 4 + 4 * b + 24) + 1 / Real.sqrt (3 * b ^ 4 + 5 * c ^ 4 + 4 * c + 24) + 1 / Real.sqrt (3 * c ^ 4 + 5 * a ^ 4 + 4 * a + 24)) \u2264 1 / 2 := by",
  "new": ": Real.sqrt ( (x ^ 2 + y ^ 2) ^ 2 + (y ^ 2 + z ^ 2) ^ 2 + (z ^ 2 + x ^ 2) ^ 2 + 2 * x ^ 2 * y ^ 2 * z ^ 2) \u2265 x * y + y * z + z * x := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt ( (x ^ 2 + y ^ 2) ^ 2 + (y ^ 2 + z ^ 2) ^ 2 + (z ^ 2 + x ^ 2) ^ 2 + 2 * x ^ 2 * y ^ 2 * z ^ 2) \u2265\n    x * y + y * z + z * x  := by\n  have : 0 \u2264 (x * y) ^ 2 + (y * z) ^ 2 + (z * x) ^ 2 := by positivity\n  apply Real.le_sqrt_of_sq_le\n  nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (y ^ 2 - z ^ 2), sq_nonneg (z ^ 2 - x ^ 2),\n    sq_nonneg (x * y + y * z + z * x), sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x),\n    sq_nonneg (z * x - x * y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt ( (x ^ 2 + y ^ 2) ^ 2 + (y ^ 2 + z ^ 2) ^ 2 + (z ^ 2 + x ^ 2) ^ 2 + 2 * x ^ 2 * y ^ 2 * z ^ 2) \u2265\n    x * y + y * z + z * x  := by\n  have : 0 \u2264 (x * y) ^ 2 + (y * z) ^ 2 + (z * x) ^ 2 := by positivity\n  apply le_sqrt_of_sq_le\n  nlinarith [sq_nonneg (x + y + z), sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt ( (x ^ 2 + y ^ 2) ^ 2 + (y ^ 2 + z ^ 2) ^ 2 + (z ^ 2 + x ^ 2) ^ 2 + 2 * x ^ 2 * y ^ 2 * z ^ 2) \u2265\n    x * y + y * z + z * x  := by\n  have : 0 \u2264 (x * y + y * z + z * x) ^ 2 := sq_nonneg _\n  apply le_sqrt_of_sq_le\n  nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (y ^ 2 - z ^ 2), sq_nonneg (z ^ 2 - x ^ 2),\n    sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y),\n    mul_nonneg (sq_nonneg x) (sq_nonneg y), mul_nonneg (sq_nonneg y) (sq_nonneg z),\n    mul_nonneg (sq_nonneg z) (sq_nonneg x)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt ( (x ^ 2 + y ^ 2) ^ 2 + (y ^ 2 + z ^ 2) ^ 2 + (z ^ 2 + x ^ 2) ^ 2 + 2 * x ^ 2 * y ^ 2 * z ^ 2) \u2265\n    x * y + y * z + z * x  := by\n  have h : 0 \u2264 (x * y) ^ 2 + (y * z) ^ 2 + (z * x) ^ 2 := by positivity\n  apply Real.le_sqrt_of_sq_le\n  nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (y ^ 2 - z ^ 2), sq_nonneg (z ^ 2 - x ^ 2),\n    sq_nonneg (x * y + y * z + z * x), sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x),\n    sq_nonneg (z * x - x * y)]\n  <;> linarith"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : x > 0 \u2227 y > 0 \u2227 z > 0 \u2227 x * y * z = 1): x^14 + y^14 + z^14 + (x^2*y^3 + y^2*z^3 + z^2*x^3) \u2265 2*(x^6*y^2 + y^6*z^2 + z^6*x^2) := by",
  "new": "(x y : \u2115) (h : x * y = 1) : x = 1 \u2227 y = 1 \u2228 x = 0 \u2227 y = 1 \u2228 x = 1 \u2227 y = 0 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (x y : \u2115) (h : x * y = 1) :\n    x = 1 \u2227 y = 1 \u2228 x = 0 \u2227 y = 1 \u2228 x = 1 \u2227 y = 0 := by\n  cases x <;> cases y <;> simp_all (config := {decide := true})\n  <;> decide\n  <;> simp_all (config := {decide := true})\n  <;> decide\n  <;> simp_all (config := {decide := true})\n  <;> decide\n  <;> simp_all (config := {decide := true})\n  <;> decide\n  <;> simp_all (config := {decide := true})\n  <;> decide\n  <;> simp_all (config := {decide := true})\n  <;> decide\n  <;> simp_all (config := {decide := true})\n  <;> decide",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (x y : \u2115) (h : x * y = 1) :\n    x = 1 \u2227 y = 1 \u2228 x = 0 \u2227 y = 1 \u2228 x = 1 \u2227 y = 0 := by\n  simp [mul_eq_one_iff] at h\n  aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (x y : \u2115) (h : x * y = 1) :\n    x = 1 \u2227 y = 1 \u2228 x = 0 \u2227 y = 1 \u2228 x = 1 \u2227 y = 0 := by\n  have h1 : x = 1 \u2227 y = 1 := by\n    aesop\n  aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (x y : \u2115) (h : x * y = 1) :\n    x = 1 \u2227 y = 1 \u2228 x = 0 \u2227 y = 1 \u2228 x = 1 \u2227 y = 0 := by\n  cases x <;> cases y <;> simp_all\n  all_goals omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) : 1 / Real.sqrt (x + 2 * y + 6) + 1 / Real.sqrt (y + 2 * z + 6) + 1 / Real.sqrt (z + 2 * x + 6) \u2264 x / Real.sqrt (x ^ 2 + 4 * Real.sqrt y + 4 * Real.sqrt z) + y / Real.sqrt (y ^ 2 + 4 * Real.sqrt z + 4 * Real.sqrt x) + z / Real.sqrt (z ^ 2 + 4 * Real.sqrt x + 4 * Real.sqrt y) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) : x ^ 2 + y ^ 2 + z ^ 2 + 2 * Real.sqrt (x ^ 2 * y ^ 2) + 2 * Real.sqrt (y ^ 2 * z ^ 2) + 2 * Real.sqrt (z ^ 2 * x ^ 2) \u2264 (x + y + z) ^ 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) :\n   x ^ 2 + y ^ 2 + z ^ 2 + 2 * Real.sqrt (x ^ 2 * y ^ 2) + 2 * Real.sqrt (y ^ 2 * z ^ 2) + 2 * Real.sqrt (z ^ 2 * x ^ 2) \u2264\n     (x + y + z) ^ 2:= by\n  rw [pow_two, pow_two, pow_two]\n  have h\u2080 : Real.sqrt (x * x * (y * y)) \u2264 x * y := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  have h\u2081 : Real.sqrt (y * y * (z * z)) \u2264 y * z := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  have h\u2082 : Real.sqrt (z * z * (x * x)) \u2264 z * x := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  nlinarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) :\n   x ^ 2 + y ^ 2 + z ^ 2 + 2 * Real.sqrt (x ^ 2 * y ^ 2) + 2 * Real.sqrt (y ^ 2 * z ^ 2) + 2 * Real.sqrt (z ^ 2 * x ^ 2) \u2264\n     (x + y + z) ^ 2:= by\n  have H\u2080 : 0 < x * y := mul_pos hx hy\n  have H\u2081 : 0 < y * z := mul_pos hy hz\n  have H\u2082 : 0 < z * x := mul_pos hz hx\n  have H\u2083 : Real.sqrt (x ^ 2 * y ^ 2) = x * y := by\n    rw [Real.sqrt_eq_iff_sq_eq] <;> nlinarith\n  have H\u2084 : Real.sqrt (y ^ 2 * z ^ 2) = y * z := by\n    rw [Real.sqrt_eq_iff_sq_eq] <;> nlinarith\n  have H\u2085 : Real.sqrt (z ^ 2 * x ^ 2) = z * x := by\n    rw [Real.sqrt_eq_iff_sq_eq] <;> nlinarith\n  nlinarith [mul_self_nonneg (x - y), mul_self_nonneg (y - z), mul_self_nonneg (z - x)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) :\n   x ^ 2 + y ^ 2 + z ^ 2 + 2 * Real.sqrt (x ^ 2 * y ^ 2) + 2 * Real.sqrt (y ^ 2 * z ^ 2) + 2 * Real.sqrt (z ^ 2 * x ^ 2) \u2264\n     (x + y + z) ^ 2:= by\n  have H1 : x ^ 2 + y ^ 2 + z ^ 2 \u2264 (x + y + z) ^ 2 := by nlinarith [sq_nonneg (x + y + z), sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  have H2 : Real.sqrt (x ^ 2 * y ^ 2) \u2264 (x * y) := by\n    rw [Real.sqrt_le_iff]\n    constructor <;> nlinarith\n  have H3 : Real.sqrt (y ^ 2 * z ^ 2) \u2264 (y * z) := by\n    rw [Real.sqrt_le_iff]\n    constructor <;> nlinarith\n  have H4 : Real.sqrt (z ^ 2 * x ^ 2) \u2264 (z * x) := by\n    rw [Real.sqrt_le_iff]\n    constructor <;> nlinarith\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) :\n   x ^ 2 + y ^ 2 + z ^ 2 + 2 * Real.sqrt (x ^ 2 * y ^ 2) + 2 * Real.sqrt (y ^ 2 * z ^ 2) + 2 * Real.sqrt (z ^ 2 * x ^ 2) \u2264\n     (x + y + z) ^ 2:= by\n  have H\u2081 : 0 \u2264 x * y := by positivity\n  have H\u2082 : 0 \u2264 y * z := by positivity\n  have H\u2083 : 0 \u2264 z * x := by positivity\n  have H\u2084 : Real.sqrt (x ^ 2 * y ^ 2) \u2264 x * y := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (x * y - x ^ 2)]\n  have H\u2085 : Real.sqrt (y ^ 2 * z ^ 2) \u2264 y * z := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (y * z - y ^ 2)]\n  have H\u2086 : Real.sqrt (z ^ 2 * x ^ 2) \u2264 z * x := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (z * x - z ^ 2)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (1 / (a * (a + b)) + 1 / (b * (b + c)) + 1 / (c * (c + a))) \u2265 (2 * (a + b + c) + 3 * (a * b * c)^(1 / 3)) / (a^2 * b + b^2 * c + c^2 * a + 3 * a * b * c) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : 2 * x ^ 2 + 2 * y ^ 2 + 2 * z ^ 2 \u2264 (x ^ 2 / y + y ^ 2 / z + z ^ 2 / x) * (x + y + z):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : 2 * x ^ 2 + 2 * y ^ 2 + 2 * z ^ 2 \u2264 (x ^ 2 / y + y ^ 2 / z + z ^ 2 / x) * (x + y + z):= by\n  have : 0 < x * y := by positivity\n  have : 0 < y * z := by positivity\n  have : 0 < z * x := by positivity\n  have hxy : 0 < x * y * (x + y) := by positivity\n  have hyz : 0 < y * z * (y + z) := by positivity\n  have hxz : 0 < z * x * (z + x) := by positivity\n  field_simp [hxy, hyz, hxz]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x * y - y * z), mul_self_nonneg (y * z - z * x),\n    mul_self_nonneg (z * x - x * y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : 2 * x ^ 2 + 2 * y ^ 2 + 2 * z ^ 2 \u2264 (x ^ 2 / y + y ^ 2 / z + z ^ 2 / x) * (x + y + z):= by\n  have h1 : 0 < x * y := by positivity\n  have h2 : 0 < y * z := by positivity\n  have h3 : 0 < z * x := by positivity\n  have h4 : 0 < x * y * z := by positivity\n  have h5 : 0 < x * y * z * (x + y + z) := by positivity\n  field_simp [h1, h2, h3, h4, h5]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x * z - y * y), mul_self_nonneg (y * x - z * z), mul_self_nonneg (z * y - x * x),\n    mul_self_nonneg (x * y - y * z), mul_self_nonneg (y * z - z * x), mul_self_nonneg (z * x - x * y)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : (a / (c * (a ^ 3 + 1)) + b / (a * (b ^ 3 + 1)) + c / (b * (c ^ 3 + 1))) \u2265 (a / (c * (a ^ 3 + b ^ 3)) + b / (a * (b ^ 3 + c ^ 3)) + c / (b * (c ^ 3 + a ^ 3))) := by",
  "new": "(a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : a * b * c = 1) : (a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2) * (a ^ 2 + c ^ 2) \u2265 a * b * c * (a * b * c) * 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : a * b * c = 1) : (a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2) * (a ^ 2 + c ^ 2) \u2265 a * b * c * (a * b * c) * 3:= by\n  simp only [habc, mul_assoc]\n  nlinarith [mul_self_nonneg (a^2 + b^2), mul_self_nonneg (a^2 + c^2), mul_self_nonneg (b^2 + c^2),\n    mul_self_nonneg (a^2 - b^2), mul_self_nonneg (a^2 - c^2), mul_self_nonneg (b^2 - c^2),\n    mul_self_nonneg (a * b + b * c + c * a), mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a),\n    mul_self_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : a * b * c = 1) : (a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2) * (a ^ 2 + c ^ 2) \u2265 a * b * c * (a * b * c) * 3:= by\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2), sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b), sq_nonneg (a * b + b * c), sq_nonneg (b * c + c * a), sq_nonneg (c * a + a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : a * b * c = 1) : (a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2) * (a ^ 2 + c ^ 2) \u2265 a * b * c * (a * b * c) * 3:= by\n  have : 0 < a * b := by positivity\n  have : 0 < b * c := by positivity\n  have : 0 < c * a := by positivity\n  nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b),\n    mul_self_nonneg (a ^ 2 - b ^ 2), mul_self_nonneg (b ^ 2 - c ^ 2),\n    mul_self_nonneg (a ^ 2 - c ^ 2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : a * b * c = 1) : (a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2) * (a ^ 2 + c ^ 2) \u2265 a * b * c * (a * b * c) * 3:= by\n  have : a * b > 0 := by nlinarith\n  have : b * c > 0 := by nlinarith\n  have : a * c > 0 := by nlinarith\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (a ^ 2 - c ^ 2),\n    mul_self_nonneg (a * b), mul_self_nonneg (b * c), mul_self_nonneg (a * c)]"
  ]
 },
 {
  "old": "{a b : \u211d} (hab : 1 < a \u2227 1 < b) (h : \u2200 k : \u2115, (Int.floor (a^k) = Int.floor (b^k))) : a = b := by",
  "new": "(a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  cases Nat.eq_zero_or_pos a <;> cases Nat.eq_zero_or_pos b <;>\n  simp [Nat.coprime_iff_gcd_eq_one, *] <;>\n  omega\n  <;>\n  omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  cases em (Nat.Coprime a b) <;> simp [*]\n  <;>\n  aesop\n  <;>\n  aesop\n  <;>\n  aesop\n  <;>\n  aesop\n  <;>\n  aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  cases' Classical.em (Nat.Coprime a b) with h h\n  exact Or.inl h\n  exact Or.inr h\n  <;> simp_all",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  by_cases h : a.Coprime b\n  exacts [Or.inl h, Or.inr (by simpa using h)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a / (b + c) + b / (c + a) + c / (a + b)) \u2265 (a + b + c) ^ 2 / (2 * (a * b + b * c + a * c)) + abc * (a ^ 3 + b ^ 3 + c ^ 3 - 3 * a * b * c) / (2 * (a ^ 2 + b ^ 2 + c ^ 2) ^ 3) := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a / (b + c) + b / (c + a) + c / (a + b)) \u2265 (a + b + c) ^ 2 / (2 * (a * b + b * c + a * c)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a / (b + c) + b / (c + a) + c / (a + b)) \u2265 (a + b + c) ^ 2 / (2 * (a * b + b * c + a * c)) := by\n  have hab : 0 < a * b := by positivity\n  have hbc : 0 < b * c := by positivity\n  have hac : 0 < a * c := by positivity\n  field_simp [ha, hb, hc, hab, hbc, hac]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    mul_nonneg hab.le hbc.le, mul_nonneg hbc.le hac.le, mul_nonneg hac.le hab.le,\n    mul_nonneg (sq_nonneg (a - b)) (sq_nonneg (b - c)), mul_nonneg (sq_nonneg (b - c)) (sq_nonneg (c - a)),\n    mul_nonneg (sq_nonneg (c - a)) (sq_nonneg (a - b))]\n  <;> positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a / (b + c) + b / (c + a) + c / (a + b)) \u2265 (a + b + c) ^ 2 / (2 * (a * b + b * c + a * c)) := by\n  have h1 : 0 < a * b := by positivity\n  have h2 : 0 < b * c := by positivity\n  have h3 : 0 < a * c := by positivity\n  have h4 : 0 < a * b + b * c + a * c := by positivity\n  have h5 : 0 < a * b * (a + b) := by positivity\n  have h6 : 0 < b * c * (b + c) := by positivity\n  have h7 : 0 < a * c * (a + c) := by positivity\n  have h8 : 0 < a * b * c := by positivity\n  have h9 : 0 < a * b * c * (a + b + c) := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a^2 - b^2), sq_nonneg (b^2 - c^2), sq_nonneg (c^2 - a^2),\n    sq_nonneg (a * b - b * c), sq_nonneg (b * c - a * c), sq_nonneg (a * c - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a / (b + c) + b / (c + a) + c / (a + b)) \u2265 (a + b + c) ^ 2 / (2 * (a * b + b * c + a * c)) := by\n  have h\u2080 : 0 < a * b := mul_pos ha hb\n  have h\u2081 : 0 < b * c := mul_pos hb hc\n  have h\u2082 : 0 < a * c := mul_pos ha hc\n  have h\u2083 : 0 < a * b * (a + b) := by positivity\n  have h\u2084 : 0 < b * c * (b + c) := by positivity\n  have h\u2085 : 0 < a * c * (c + a) := by positivity\n  have h\u2086 : 0 < a * b * c := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    sq_nonneg (a * b - b * c), sq_nonneg (b * c - a * c), sq_nonneg (a * c - a * b)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a + b * c / a) * (b + a * c / b) * (c + b * a / c) \u2265 4 * (a^3 + b^3)^(1/3) * (b^3 + c^3)^(1/3) * (c^3 + a^3)^(1/3) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x^2 + y^2 + z^2) * (y^2 + z^2 + x^2) * (z^2 + x^2 + y^2) \u2265 3 * (x * y) * (y * z) * (z * x):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   (x^2 + y^2 + z^2) * (y^2 + z^2 + x^2) * (z^2 + x^2 + y^2) \u2265 3 * (x * y) * (y * z) * (z * x):= by\n  have : \u2200 a b : \u211d, a ^ 2 + b ^ 2 \u2265 2 * a * b := by\n    intro a b\n    have : a ^ 2 + b ^ 2 \u2265 2 * a * b := by\n      linarith [sq_nonneg (a - b), sq_nonneg (a + b)]\n    linarith\n  nlinarith [this x y, this y z, this z x, this (x ^ 2) (y ^ 2), this (y ^ 2) (z ^ 2),\n    this (z ^ 2) (x ^ 2), this (x * y) (y * z), this (y * z) (z * x), this (z * x) (x * y)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (habc : a * b * c = 1)(a_pos : 0 < a)(b_pos : 0 < b)(c_pos : 0 < c): a / b^2 * (c + 1) + b / c^2 * (a + 1) + c / a^2 * (b + 1) >= 3 / 2 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) : x / (y + z) + y / (z + x) + z / (x + y) + (x^2 + y^2 + z^2) / (x^2 * y^2 * z^2) \u2265 3 / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h : x * y * z = 1) :\n    x / (y + z) + y / (z + x) + z / (x + y) + (x^2 + y^2 + z^2) / (x^2 * y^2 * z^2) \u2265 3 / 2:= by\n  have h\u2081 : x / (y + z) + y / (z + x) + z / (x + y) \u2265 3 / 2 := by\n    rw [add_assoc]\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n      mul_pos hx hy, mul_pos hx hz, mul_pos hy hz]\n  have h\u2082 : (x^2 + y^2 + z^2) / (x^2 * y^2 * z^2) \u2265 0 := by positivity\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h : x * y * z = 1) :\n    x / (y + z) + y / (z + x) + z / (x + y) + (x^2 + y^2 + z^2) / (x^2 * y^2 * z^2) \u2265 3 / 2:= by\n  have : x^2 + y^2 + z^2 > 0 := by positivity\n  have h1 : x / (y + z) + y / (z + x) + z / (x + y) \u2265 3 / 2 := by\n    have : 0 < y + z := by positivity\n    have : 0 < z + x := by positivity\n    have : 0 < x + y := by positivity\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  have h2 : (x^2 + y^2 + z^2) / (x^2 * y^2 * z^2) \u2265 0 := by\n    positivity\n  linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h : x * y * z = 1) :\n    x / (y + z) + y / (z + x) + z / (x + y) + (x^2 + y^2 + z^2) / (x^2 * y^2 * z^2) \u2265 3 / 2:= by\n  have h\u2081 : x / (y + z) + y / (z + x) + z / (x + y) \u2265 3 / 2 := by\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n      mul_pos hx hy, mul_pos hy hz, mul_pos hz hx]\n  have h\u2082 : (x^2 + y^2 + z^2) / (x^2 * y^2 * z^2) \u2265 0 := by positivity\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h : x * y * z = 1) :\n    x / (y + z) + y / (z + x) + z / (x + y) + (x^2 + y^2 + z^2) / (x^2 * y^2 * z^2) \u2265 3 / 2:= by\n  have : 0 < x * y := by positivity\n  have : 0 < y * z := by positivity\n  have : 0 < z * x := by positivity\n  have h\u2080 : x / (y + z) + y / (z + x) + z / (x + y) \u2265 3 / 2 := by\n    rw [add_assoc, add_comm]\n    field_simp [h]\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n      mul_self_nonneg (x - y + y - z + z - x),\n      mul_self_nonneg (x - y - (y - z)),\n      mul_self_nonneg (y - z - (z - x)),\n      mul_self_nonneg (z - x - (x - y))]\n  have h\u2081 : (x^2 + y^2 + z^2) / (x^2 * y^2 * z^2) \u2265 0 := by positivity\n  linarith\n  <;> try norm_num"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (habc : a * b * c = 1) : (a - 1 + 1 / b) * (b - 1 + 1 / c) * (c - 1 + 1 / a) \u2264 1 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z = 1) : 1 / (x + y + z) * (x * y + y * z + z * x) * (x * z + y * z + x * y) / (x * y + y * z + z * x) \u2264 x + y + z:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z = 1) : 1 / (x + y + z) * (x * y + y * z + z * x) * (x * z + y * z + x * y) / (x * y + y * z + z * x) \u2264 x + y + z:= by\n  have h\u2083 : x * y + y * z + z * x > 0 := by nlinarith\n  have h\u2084 : 1 / (x + y + z) = 1 := by rw [h\u2081]; norm_num\n  rw [h\u2084]\n  have h\u2085 : x * y + y * z + z * x \u2260 0 := by nlinarith\n  field_simp [h\u2085]\n  nlinarith\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z = 1) : 1 / (x + y + z) * (x * y + y * z + z * x) * (x * z + y * z + x * y) / (x * y + y * z + z * x) \u2264 x + y + z:= by\n  field_simp [mul_assoc] at h\u2082 \u22a2\n  nlinarith [mul_pos hx hy, mul_pos hx hz, mul_pos hy hz]\n  <;> simp [h\u2081, h\u2082]\n  <;> linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z = 1) : 1 / (x + y + z) * (x * y + y * z + z * x) * (x * z + y * z + x * y) / (x * y + y * z + z * x) \u2264 x + y + z:= by\n  field_simp [add_assoc, add_left_comm, add_comm, mul_comm, mul_left_comm, mul_assoc] at h\u2082 \u22a2\n  ring_nf at h\u2082 \u22a2\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_pos hx hy, mul_pos hx hz, mul_pos hy hz]"
  ]
 },
 {
  "old": "(a b c : \u211d) (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : (a^3 / (b + c) + b^3 / (c + a) + c^3 / (a + b) + (a^2 + b^2 + c^2) / 2) \u2264 (3 * (a^3 + b^3 + c^3)) / (a + b + c) := by",
  "new": "(x y z : \u211d) (hx: 0 < x \u2227 0 < y \u2227 0 < z) (h : 0 < x + y + z) (h1 : x ^ 2 + y ^ 2 + z ^ 2 = 3) : x ^ 3 / (x + y + z) + y ^ 3 / (x + y + z) + z ^ 3 / (x + y + z) + (x ^ 2 + y ^ 2 + z ^ 2) / 2 \u2264 (3 * (x ^ 3 + y ^ 3 + z ^ 3)) / (x + y + z):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y z : \u211d) (hx: 0 < x \u2227 0 < y \u2227 0 < z) (h : 0 < x + y + z) (h1 : x ^ 2 + y ^ 2 + z ^ 2 = 3) :\n  x ^ 3 / (x + y + z) + y ^ 3 / (x + y + z) + z ^ 3 / (x + y + z) + (x ^ 2 + y ^ 2 + z ^ 2) / 2 \u2264 (3 * (x ^ 3 + y ^ 3 + z ^ 3)) / (x + y + z):= by\n  field_simp [h]\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_nonneg hx.1.le hx.2.1.le, mul_nonneg hx.1.le hx.2.2.le, mul_nonneg hx.2.1.le hx.2.2.le]\n  positivity\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y z : \u211d) (hx: 0 < x \u2227 0 < y \u2227 0 < z) (h : 0 < x + y + z) (h1 : x ^ 2 + y ^ 2 + z ^ 2 = 3) :\n  x ^ 3 / (x + y + z) + y ^ 3 / (x + y + z) + z ^ 3 / (x + y + z) + (x ^ 2 + y ^ 2 + z ^ 2) / 2 \u2264 (3 * (x ^ 3 + y ^ 3 + z ^ 3)) / (x + y + z):= by\n  have hx' : 0 < x := hx.1\n  have hy' : 0 < y := hx.2.1\n  have hz' : 0 < z := hx.2.2\n  have hxy : 0 < x * y := mul_pos hx' hy'\n  have hxz : 0 < x * z := mul_pos hx' hz'\n  have hyz : 0 < y * z := mul_pos hy' hz'\n  field_simp [h1]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    sq_nonneg (x + y + z)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y z : \u211d) (hx: 0 < x \u2227 0 < y \u2227 0 < z) (h : 0 < x + y + z) (h1 : x ^ 2 + y ^ 2 + z ^ 2 = 3) :\n  x ^ 3 / (x + y + z) + y ^ 3 / (x + y + z) + z ^ 3 / (x + y + z) + (x ^ 2 + y ^ 2 + z ^ 2) / 2 \u2264 (3 * (x ^ 3 + y ^ 3 + z ^ 3)) / (x + y + z):= by\n  rcases hx with \u27e8h11, h12, h13\u27e9\n  field_simp [h11.ne', h12.ne', h13.ne', add_comm]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_self_nonneg (x - 1), mul_self_nonneg (y - 1), mul_self_nonneg (z - 1)]"
  ]
 },
 {
  "old": "(a b c d : \u211d) : 64 * (a + b + c + d) * (a * b + b * c + c * d + d * a + a * c + b * d) \u2264 18 * (a + b + c + d) ^ 3 + 96 * (a * b * c + b * c * d + c * d * a + d * a * b) := by",
  "new": "(a b c d e : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) (he : 0 < e) : 9 * (a * b + b * c + c * d + d * e + e * a) * (a * b + b * c + c * d + d * e + e * a) \u2264 9 * ((a + b + c + d + e) * (b + c + d + e + a)) * ((a + b + c + d + e) * (b + c + d + e + a)):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_10 (a b c d e : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) (he : 0 < e) :\n 9 * (a * b + b * c + c * d + d * e + e * a) * (a * b + b * c + c * d + d * e + e * a) \u2264\n  9 * ((a + b + c + d + e) * (b + c + d + e + a)) * ((a + b + c + d + e) * (b + c + d + e + a)):= by\n  refine' le_of_sub_nonneg _\n  ring_nf\n  positivity\n  <;> try norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_10 (a b c d e : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) (he : 0 < e) :\n 9 * (a * b + b * c + c * d + d * e + e * a) * (a * b + b * c + c * d + d * e + e * a) \u2264\n  9 * ((a + b + c + d + e) * (b + c + d + e + a)) * ((a + b + c + d + e) * (b + c + d + e + a)):= by\n  refine' le_of_sub_nonneg _\n  ring_nf\n  positivity\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_10 (a b c d e : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) (he : 0 < e) :\n 9 * (a * b + b * c + c * d + d * e + e * a) * (a * b + b * c + c * d + d * e + e * a) \u2264\n  9 * ((a + b + c + d + e) * (b + c + d + e + a)) * ((a + b + c + d + e) * (b + c + d + e + a)):= by\n  refine' le_of_sub_nonneg _\n  ring_nf\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_10 (a b c d e : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) (he : 0 < e) :\n 9 * (a * b + b * c + c * d + d * e + e * a) * (a * b + b * c + c * d + d * e + e * a) \u2264\n  9 * ((a + b + c + d + e) * (b + c + d + e + a)) * ((a + b + c + d + e) * (b + c + d + e + a)):= by\n  refine' le_of_sub_nonneg _\n  ring_nf\n  positivity\n  <;> assumption\n  <;> try norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) : (a^2 + b^2) / c + (b^2 + c^2) / a + (c^2 + a^2) / b \u2265 (3 * (a * b + b * c + c * a - 3 * a * b * c)) / (a^2 + b^2 + c^2) := by",
  "new": ": \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c = 1 \u2192 (a^2 + b^2) / c + (b^2 + c^2) / a + (c^2 + a^2) / b \u2265 (3 * (a * b + b * c + c * a - 3 * a * b * c)) / (a^2 + b^2 + c^2) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c = 1 \u2192\n    (a^2 + b^2) / c + (b^2 + c^2) / a + (c^2 + a^2) / b \u2265 (3 * (a * b + b * c + c * a - 3 * a * b * c)) / (a^2 + b^2 + c^2)\n:= by\n  intro a b c h\u2080\n  rcases h\u2080 with \u27e8h\u2080_left, h\u2080_middle, h\u2080_right, h\u2081\u27e9\n  have h\u2082 : 0 < a * b := by positivity\n  have h\u2083 : 0 < b * c := by positivity\n  have h\u2084 : 0 < c * a := by positivity\n  have h\u2085 : 0 < a * b * c := by positivity\n  have h\u2086 : 0 < (a * b * c) * (a * b + b * c + c * a) := by positivity\n  field_simp [h\u2080_left, h\u2080_right, h\u2081]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a^2 - b^2), sq_nonneg (b^2 - c^2), sq_nonneg (c^2 - a^2),\n    sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n  <;> linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c = 1 \u2192\n    (a^2 + b^2) / c + (b^2 + c^2) / a + (c^2 + a^2) / b \u2265 (3 * (a * b + b * c + c * a - 3 * a * b * c)) / (a^2 + b^2 + c^2)\n:= by\n  rintro a b c \u27e8a_pos, b_pos, c_pos, a_b_c_sum\u27e9\n  have h\u2080 : 0 < a * b := mul_pos a_pos b_pos\n  have h\u2081 : 0 < b * c := mul_pos b_pos c_pos\n  have h\u2082 : 0 < c * a := mul_pos c_pos a_pos\n  have h\u2083 : 0 < a * b * c := by positivity\n  have h\u2084 : 0 < (a * b * c) * (a * b + b * c + c * a) := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a^2 - b^2), sq_nonneg (b^2 - c^2), sq_nonneg (c^2 - a^2),\n    sq_nonneg (a^2 - 2 * a * b + b^2), sq_nonneg (b^2 - 2 * b * c + c^2),\n    sq_nonneg (c^2 - 2 * c * a + a^2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c = 1 \u2192\n    (a^2 + b^2) / c + (b^2 + c^2) / a + (c^2 + a^2) / b \u2265 (3 * (a * b + b * c + c * a - 3 * a * b * c)) / (a^2 + b^2 + c^2)\n:= by\n  rintro a b c \u27e8ha : 0 < a, hb : 0 < b, hc : 0 < c, habc : a + b + c = 1\u27e9\n  have h\u2080 : 0 < a * b := mul_pos ha hb\n  have h\u2081 : 0 < b * c := mul_pos hb hc\n  have h\u2082 : 0 < c * a := mul_pos hc ha\n  have h\u2083 : 0 < a * b * c := by positivity\n  have h\u2084 : 0 < a * b * c * (a * b + b * c + c * a) := by positivity\n  field_simp [h\u2083.ne', h\u2084.ne']\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a^2 - b^2), sq_nonneg (b^2 - c^2), sq_nonneg (c^2 - a^2),\n    sq_nonneg (a^2 - a * b), sq_nonneg (b^2 - b * c), sq_nonneg (c^2 - c * a),\n    sq_nonneg (a * b - a * c), sq_nonneg (b * c - b * a), sq_nonneg (c * a - c * b)]"
  ]
 },
 {
  "old": ": \u00ac\u2203 (x y : \u2124), x^2 = y^3 + 13 := by",
  "new": "(h\u2081 : \u2203 (x : \u2115), x \u2260 0 \u2227 1 < x \u2227 x \u2223 2011) : \u00ac (\u2203 (x y : \u2115), x \u2223 2011 \u2227 y \u2223 2011 \u2227 x \u2260 0 \u2227 y \u2260 0 \u2227 x + y = 1):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_of_sum_eq_one (h\u2081 : \u2203 (x : \u2115), x \u2260 0 \u2227 1 < x \u2227 x \u2223 2011) :\n    \u00ac (\u2203 (x y : \u2115), x \u2223 2011 \u2227 y \u2223 2011 \u2227 x \u2260 0 \u2227 y \u2260 0 \u2227 x + y = 1):= by\n  rintro \u27e8x, y, hx, hy, hxy\u27e9\n  have hx' := hx\n  have hy' := hy\n  have hxy' := hxy\n  cases' h\u2081 with x' hx'\n  cases' hx' with hx' hx'\n  cases' hx' with hx' hx'\n  simp_all\n  <;> omega\n  <;> simp_all\n  <;> omega\n  <;> simp_all\n  <;> omega\n  <;> simp_all\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_of_sum_eq_one (h\u2081 : \u2203 (x : \u2115), x \u2260 0 \u2227 1 < x \u2227 x \u2223 2011) :\n    \u00ac (\u2203 (x y : \u2115), x \u2223 2011 \u2227 y \u2223 2011 \u2227 x \u2260 0 \u2227 y \u2260 0 \u2227 x + y = 1):= by\n  intro h\n  cases' h\u2081 with x hx\n  cases' h with y z\n  simp_all\n  omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_of_sum_eq_one (h\u2081 : \u2203 (x : \u2115), x \u2260 0 \u2227 1 < x \u2227 x \u2223 2011) :\n    \u00ac (\u2203 (x y : \u2115), x \u2223 2011 \u2227 y \u2223 2011 \u2227 x \u2260 0 \u2227 y \u2260 0 \u2227 x + y = 1):= by\n  intro h\n  obtain \u27e8x, hx\u27e9 := h\u2081\n  obtain \u27e8y, z, hxy, hxz, hyz, hxyz\u27e9 := h\n  simp_all\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_of_sum_eq_one (h\u2081 : \u2203 (x : \u2115), x \u2260 0 \u2227 1 < x \u2227 x \u2223 2011) :\n    \u00ac (\u2203 (x y : \u2115), x \u2223 2011 \u2227 y \u2223 2011 \u2227 x \u2260 0 \u2227 y \u2260 0 \u2227 x + y = 1):= by\n  intro h\n  obtain \u27e8x, hx\u27e9 := h\u2081\n  obtain \u27e8y, z, hy, hz, hxy, hxz, hzy\u27e9 := h\n  simp_all\n  <;> omega\n  <;> omega\n  <;> omega"
  ]
 },
 {
  "old": "(n : \u2115) : \u2211 k in Finset.Icc 1 n, (k / 2 ^ k) = 2 - (n + 2) / 2 ^ n := by",
  "new": "(n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two (n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by\n  induction' hn with n hn IH\n  all_goals simp_all [Nat.Coprime, fib_add_two, Nat.gcd_comm]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two (n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by\n  induction' hn with k hk IH\n  all_goals simp_all [fib_add_two, Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two (n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by\n  induction' hn with n hn IH\n  all_goals simp_all [Nat.Coprime, fib_add_two]\n  all_goals simp_all [Nat.gcd_comm]\n  all_goals omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two (n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by\n  induction' hn with n hn ih\n  all_goals simp_all [fib_add_two, coprime_mul_iff_left, Nat.coprime_comm]\n  all_goals aesop"
  ]
 },
 {
  "old": "(x y : \u2115) : \u00ac (Odd x \u2228 Odd y) \u2194 Even x \u2228 Even y := by",
  "new": "(x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y) := by\n  by_cases h : x.Coprime y\n  case pos => exact Or.inl h\n  case neg => exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y) := by\n  have h : (x.Coprime y) \u2228 \u00ac(x.Coprime y) := by\n    by_cases h : x.Coprime y\n    \u00b7 exact Or.inl h\n    \u00b7 exact Or.inr h\n  exact h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y) := by\n  have h : (x.Coprime y) \u2228 \u00ac(x.Coprime y) := by apply em\n  exact h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y) := by\n  by_cases h : x.Coprime y <;> simp_all\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto"
  ]
 },
 {
  "old": "(a b c : \u211d) : (a^2 / b^2 + b^2 / c^2 + c^2 / a^2 + 112 * a * b * c / (a + b) / (a + c) / (b + c)) \u2265 17 := by",
  "new": ": \u2200 a b c : \u211d, a \u2260 0 \u2227 b \u2260 0 \u2227 c \u2260 0 \u2227 a + b + c = 1 \u2192 3 * (a^2 / (b^2 + c^2) + b^2 / (a^2 + c^2) + c^2 / (a^2 + b^2) + a * b / b + b * c / c + c * a / a) \u2265 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2260 0 \u2227 b \u2260 0 \u2227 c \u2260 0 \u2227 a + b + c = 1 \u2192\n   3 * (a^2 / (b^2 + c^2) + b^2 / (a^2 + c^2) + c^2 / (a^2 + b^2) + a * b / b + b * c / c + c * a / a) \u2265 3:= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have hab : a + b + c = 1 := habc\n  have h\u2080 : a ^ 2 / (b ^ 2 + c ^ 2) + b ^ 2 / (a ^ 2 + c ^ 2) + c ^ 2 / (a ^ 2 + b ^ 2) \u2265 0 := by positivity\n  have h\u2081 : a * b / b + b * c / c + c * a / a = a + b + c := by\n    field_simp [ha, hb, hc]\n  nlinarith\n  <;> linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2260 0 \u2227 b \u2260 0 \u2227 c \u2260 0 \u2227 a + b + c = 1 \u2192\n   3 * (a^2 / (b^2 + c^2) + b^2 / (a^2 + c^2) + c^2 / (a^2 + b^2) + a * b / b + b * c / c + c * a / a) \u2265 3:= by\n  rintro a b c \u27e8a_not_zero, b_not_zero, c_not_zero, a_b_c_sum\u27e9\n  have a_b_c_sum' : a + b + c = 1 := a_b_c_sum\n  have a_b_c_sum'' : a + b + c = 1 := a_b_c_sum\n  have h\u2081 : a ^ 2 / (b ^ 2 + c ^ 2) + b ^ 2 / (a ^ 2 + c ^ 2) + c ^ 2 / (a ^ 2 + b ^ 2) \u2265 0 := by\n    positivity\n  have h\u2082 : a * b / b + b * c / c + c * a / a = a + b + c := by\n    field_simp\n  nlinarith\n  <;> assumption\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2260 0 \u2227 b \u2260 0 \u2227 c \u2260 0 \u2227 a + b + c = 1 \u2192\n   3 * (a^2 / (b^2 + c^2) + b^2 / (a^2 + c^2) + c^2 / (a^2 + b^2) + a * b / b + b * c / c + c * a / a) \u2265 3:= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have : a + b + c = 1 := habc\n  have h\u2081 : a ^ 2 / (b ^ 2 + c ^ 2) + b ^ 2 / (a ^ 2 + c ^ 2) + c ^ 2 / (a ^ 2 + b ^ 2) \u2265 0 := by positivity\n  have h\u2082 : a * b / b + b * c / c + c * a / a = a + b + c := by field_simp [ha, hb, hc]\n  have h\u2083 : a + b + c = 1 := habc\n  nlinarith\n  <;> simp [h\u2081, h\u2082, h\u2083]\n  <;> nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1) : 1 / (2 * a ^ 3 + 1) * (a ^ 3 + 2) + 1 / (2 * b ^ 3 + 1) * (b ^ 3 + 2) + 1 / (2 * c ^ 3 + 1) * (c ^ 3 + 2) \u2265 1 / 3 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) : 3 / (x + y + z) \u2264 1 \u2194 x * y + y * z + z * x \u2265 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) : \n   3 / (x + y + z) \u2264 1 \u2194 x * y + y * z + z * x \u2265 3:= by\n  constructor\n  intro h\n  have : 0 < x * y := mul_pos hx hy\n  have : 0 < y * z := mul_pos hy hz\n  have : 0 < z * x := mul_pos hz hx\n  field_simp [habc] at h\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z), sq_nonneg (x * y - 1), sq_nonneg (y * z - 1), sq_nonneg (z * x - 1)]\n  intro h\n  have : 0 < x * y := mul_pos hx hy\n  have : 0 < y * z := mul_pos hy hz\n  have : 0 < z * x := mul_pos hz hx\n  field_simp [habc]\n  rw [div_le_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z), sq_nonneg (x * y - 1), sq_nonneg (y * z - 1), sq_nonneg (z * x - 1)]\n  <;> assumption\n  <;> assumption\n  <;> assumption"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : 3 * Real.sqrt (a * b * c) \u2265 9 * a * b * c / (a * b + b * c + a * c) := by",
  "new": ": Real.sqrt (Real.sqrt (2 + 1) + 1) < 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (2 + 1) + 1) < 3:= by\n  rw [Real.sqrt_lt (by positivity)]\n  all_goals norm_num\n  <;>\n    nlinarith [sq_sqrt (show 0 \u2264 2 by norm_num), sq_sqrt (show 0 \u2264 3 by norm_num)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (2 + 1) + 1) < 3:= by\n  have h : Real.sqrt (2 + 1) < 2 := by\n    rw [Real.sqrt_lt (by positivity)] <;> norm_num\n  apply (Real.sqrt_lt' _).mpr\n  <;> nlinarith [Real.sqrt_nonneg (2 + 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (2 + 1) + 1) < 3:= by\n  have h : 0 \u2264 2 := by norm_num\n  have h\u2081 : Real.sqrt (2 + 1) < 3 := by\n    rw [Real.sqrt_lt (by positivity) (by positivity)]\n    norm_num\n  rw [Real.sqrt_lt (by positivity) (by positivity)]\n  nlinarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (2 + 1) + 1) < 3:= by\n  have h\u2081 : Real.sqrt (2 + 1) < 3 := by\n    refine' Real.sqrt_lt' (by norm_num) |>.mpr _\n    norm_num\n  have h\u2082 : Real.sqrt (2 + 1) + 1 < 3 + 1 := by\n    linarith [h\u2081]\n  have h\u2083 : Real.sqrt (Real.sqrt (2 + 1) + 1) < 3 := by\n    refine' Real.sqrt_lt' (by positivity) |>.mpr _\n    nlinarith\n  linarith"
  ]
 },
 {
  "old": "(a b c : \u2124) (h\u2081 : a \u2260 b) (h\u2082 : a \u2260 c) (h\u2083 : b \u2260 c) : \u2203 a b, 30 \u2223 a^3 * b - a * b^3 := by",
  "new": "(a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b) := by\n  by_cases h : Nat.Coprime a b <;> simp [h]\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b) := by\n  by_cases h : Nat.Coprime a b\n  exact Or.inl h\n  exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b) := by\n  by_cases h : Nat.Coprime a b <;> simp [h]\n  <;> simp [Nat.coprime_iff_gcd_eq_one, h]\n  <;> exact \u27e81, by simp [Nat.gcd_one_left]\u27e9"
  ]
 },
 {
  "old": "(a b : \u211d) (ha : 0 < a) (hb : 0 < b) : (a^2 + b^2 + a^2 * b^2) * (1 / a^2 + 1 / b^2 + 1 / (a^2 * b^2)) + 9 \u2265 3 * (a + b + 1 / a + 1 / b + a / b + b / a) := by",
  "new": ": \u2200 a b : \u211d, 0 < a \u2227 0 < b \u2192 (a^2 + b^2 + a^2 * b^2) * (1 / a^2 + 1 / b^2 + 1 / (a^2 * b^2)) + 9 \u2265 3 * (a + b + 1 / a + 1 / b + a / b + b / a):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b : \u211d, 0 < a \u2227 0 < b \u2192\n   (a^2 + b^2 + a^2 * b^2) * (1 / a^2 + 1 / b^2 + 1 / (a^2 * b^2)) + 9 \u2265 3 * (a + b + 1 / a + 1 / b + a / b + b / a):= by\n  rintro a b \u27e8ha, hb\u27e9\n  have h\u2081 : 0 < a ^ 2 := pow_pos ha 2\n  have h\u2082 : 0 < b ^ 2 := pow_pos hb 2\n  have h\u2083 : 0 < a ^ 2 * b ^ 2 := mul_pos h\u2081 h\u2082\n  have h\u2084 : 0 < a ^ 2 * b ^ 2 * a ^ 2 := by positivity\n  have h\u2085 : 0 < a ^ 2 * b ^ 2 * b ^ 2 := by positivity\n  have h\u2086 : 0 < a ^ 2 * b ^ 2 * a ^ 2 * b ^ 2 := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (a ^ 2 - 2 * a * b + b ^ 2),\n    sq_nonneg (a ^ 2 - 2 * a + 1), sq_nonneg (b ^ 2 - 2 * b + 1),\n    sq_nonneg (a ^ 2 - 2 * a * b + b ^ 2), sq_nonneg (a * b - 1), sq_nonneg (a - 1),\n    sq_nonneg (b - 1), sq_nonneg (a * b - 1), sq_nonneg (a - 1), sq_nonneg (b - 1)]"
  ]
 },
 {
  "old": "{A B C : \u211d} (hx: A > 0 \u2227 B > 0 \u2227 C > 0) (hab : A + B + C = \u03c0) (hA: 0 < cos A) (hB: 0 < cos B) (hC: 0 < cos C) (hA2: 0 < sin A) (hB2: 0 < sin B) (hC2: 0 < sin C) : (cos A * (1 + sin A) / sin A + cos B * (1 + sin B) / sin B + cos C * (1 + sin C) / sin C - 1 - 4 * cos A * cos B * cos C - (1 + cos A * cos B * cos C) / (sin A * sin B * sin C)) \u2265 0 := by",
  "new": ": Real.sqrt (Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + b ^ 2)) + Real.sqrt (Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + c ^ 2)) + Real.sqrt (Real.sqrt (1 + b ^ 2) + Real.sqrt (1 + c ^ 2)) + 2 \u2265 Real.sqrt (2 * (Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + b ^ 2) + Real.sqrt (1 + c ^ 2))) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + b ^ 2)) + Real.sqrt (Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + c ^ 2)) + Real.sqrt (Real.sqrt (1 + b ^ 2) + Real.sqrt (1 + c ^ 2)) + 2 \u2265\n     Real.sqrt (2 * (Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + b ^ 2) + Real.sqrt (1 + c ^ 2)))  := by\n  have key_inequality :\n      Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + b ^ 2) + Real.sqrt (1 + c ^ 2) \u2265 0 := by positivity\n  have h\u2080 : Real.sqrt (Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + b ^ 2)) \u2265 0 := by positivity\n  have h\u2081 : Real.sqrt (Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + c ^ 2)) \u2265 0 := by positivity\n  have h\u2082 : Real.sqrt (Real.sqrt (1 + b ^ 2) + Real.sqrt (1 + c ^ 2)) \u2265 0 := by positivity\n  nlinarith [sq_sqrt (show (2 * (Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + b ^ 2) + Real.sqrt (1 + c ^ 2))) \u2265 0 by positivity),\n    sq_sqrt (show (Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + b ^ 2)) \u2265 0 by positivity),\n    sq_sqrt (show (Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + c ^ 2)) \u2265 0 by positivity),\n    sq_sqrt (show (Real.sqrt (1 + b ^ 2) + Real.sqrt (1 + c ^ 2)) \u2265 0 by positivity),\n    sq_nonneg (Real.sqrt (1 + a ^ 2) - Real.sqrt (1 + b ^ 2)),\n    sq_nonneg (Real.sqrt (1 + a ^ 2) - Real.sqrt (1 + c ^ 2)),\n    sq_nonneg (Real.sqrt (1 + b ^ 2) - Real.sqrt (1 + c ^ 2))]\n  <;> linarith\n  <;> norm_num"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 1) : a / (a ^ 3 + b ^ 2 * c + c ^ 2 * b) + b / (b ^ 3 + c ^ 2 * a + a ^ 2 * c) + c / (c ^ 3 + a ^ 2 * b + b ^ 2 * a) \u2264 1 + 8 / (27 * a * b * c) := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 1 \u2192 a ^ 2 * b ^ 2 * c ^ 2 * (a + b + c) \u2264 a ^ 2 * b ^ 2 * c ^ 2 + 3 * (a ^ 2 * b ^ 2 * c + b ^ 2 * c ^ 2 * a + c ^ 2 * a ^ 2 * b) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 1 \u2192\n    a ^ 2 * b ^ 2 * c ^ 2 * (a + b + c) \u2264 a ^ 2 * b ^ 2 * c ^ 2 + 3 * (a ^ 2 * b ^ 2 * c + b ^ 2 * c ^ 2 * a + c ^ 2 * a ^ 2 * b) := by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have : a ^ 2 * b ^ 2 * c ^ 2 * (a + b + c) = a ^ 2 * b ^ 2 * c ^ 2 := by simp [habc]\n  rw [this]\n  have : 0 \u2264 a ^ 2 * b ^ 2 * c := by positivity\n  have : 0 \u2264 b ^ 2 * c ^ 2 * a := by positivity\n  have : 0 \u2264 c ^ 2 * a ^ 2 * b := by positivity\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 1 \u2192\n    a ^ 2 * b ^ 2 * c ^ 2 * (a + b + c) \u2264 a ^ 2 * b ^ 2 * c ^ 2 + 3 * (a ^ 2 * b ^ 2 * c + b ^ 2 * c ^ 2 * a + c ^ 2 * a ^ 2 * b) := by\n  rintro a b c \u27e8ha : 0 < a, hb : 0 < b, hc : 0 < c, habc : a + b + c = 1\u27e9\n  have h : 0 < a * b * c := by positivity\n  have h\u2080 : 0 < a ^ 2 * b ^ 2 * c ^ 2 := by positivity\n  have h\u2081 : 0 < a ^ 2 * b ^ 2 * c + b ^ 2 * c ^ 2 * a + c ^ 2 * a ^ 2 * b := by positivity\n  nlinarith [mul_self_nonneg (a ^ 2 * b ^ 2 * c - b ^ 2 * c ^ 2 * a),\n    mul_self_nonneg (b ^ 2 * c ^ 2 * a - c ^ 2 * a ^ 2 * b),\n    mul_self_nonneg (c ^ 2 * a ^ 2 * b - a ^ 2 * b ^ 2 * c)]\n  <;> linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 1 \u2192\n    a ^ 2 * b ^ 2 * c ^ 2 * (a + b + c) \u2264 a ^ 2 * b ^ 2 * c ^ 2 + 3 * (a ^ 2 * b ^ 2 * c + b ^ 2 * c ^ 2 * a + c ^ 2 * a ^ 2 * b) := by\n  intro a b c h\u2080\n  have h\u2081 : a ^ 2 * b ^ 2 * c ^ 2 * (a + b + c) = a ^ 2 * b ^ 2 * c ^ 2 * 1 := by simp [h\u2080.2.2.2]\n  have h\u2082 : a ^ 2 * b ^ 2 * c ^ 2 * 1 \u2264 a ^ 2 * b ^ 2 * c ^ 2 + 3 * (a ^ 2 * b ^ 2 * c + b ^ 2 * c ^ 2 * a + c ^ 2 * a ^ 2 * b) := by\n    nlinarith [mul_nonneg (sq_nonneg a) (sq_nonneg b), mul_nonneg (sq_nonneg b) (sq_nonneg c),\n      mul_nonneg (sq_nonneg c) (sq_nonneg a), mul_nonneg (sq_nonneg (a + b + c)) (sq_nonneg (a * b))]\n  simp_all",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 1 \u2192\n    a ^ 2 * b ^ 2 * c ^ 2 * (a + b + c) \u2264 a ^ 2 * b ^ 2 * c ^ 2 + 3 * (a ^ 2 * b ^ 2 * c + b ^ 2 * c ^ 2 * a + c ^ 2 * a ^ 2 * b) := by\n  rintro a b c \u27e8ha, hb, hc, h\u27e9\n  simp only [h, mul_one, mul_assoc, mul_comm, mul_left_comm]\n  nlinarith [mul_nonneg ha.le hb.le, mul_nonneg ha.le hc.le, mul_nonneg hb.le hc.le,\n    mul_nonneg (sq_nonneg a) (sq_nonneg b), mul_nonneg (sq_nonneg a) (sq_nonneg c),\n    mul_nonneg (sq_nonneg b) (sq_nonneg c)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (Real.sqrt ((a * (a + b)) / (a ^ 2 - a * b + b ^ 2)) + Real.sqrt ((b * (b + c)) / (b ^ 2 - b * c + c ^ 2)) + Real.sqrt (( c * (c + a)) / (c ^ 2 - c * a + a ^ 2))) \u2264 3 * Real.sqrt 2 := by",
  "new": ": Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) + 1 \u2264 3 * Real.sqrt 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) + 1 \u2264 3 * Real.sqrt 2:= by\n  have h\u2081 : 0 \u2264 Real.sqrt 2 := Real.sqrt_nonneg 2\n  have h\u2082 : 0 \u2264 Real.sqrt (Real.sqrt 2 + 1) := Real.sqrt_nonneg (Real.sqrt 2 + 1)\n  nlinarith [sq_sqrt (show 0 \u2264 Real.sqrt 2 + 1 by linarith),\n    sq_sqrt (show 0 \u2264 2 by linarith),\n    sq_sqrt (show 0 \u2264 Real.sqrt 2 by linarith),\n    sq_nonneg (Real.sqrt 2 - 1),\n    sq_nonneg (Real.sqrt (Real.sqrt 2 + 1) - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) + 1 \u2264 3 * Real.sqrt 2:= by\n  have h : 0 \u2264 Real.sqrt 2 := Real.sqrt_nonneg 2\n  have h\u2081 : Real.sqrt 2 \u2264 2 := by\n    nlinarith [Real.sq_sqrt (show 0 \u2264 2 by linarith)]\n  have h\u2082 : 0 \u2264 Real.sqrt (Real.sqrt 2 + 1) := Real.sqrt_nonneg (Real.sqrt 2 + 1)\n  nlinarith [Real.sq_sqrt (show 0 \u2264 Real.sqrt 2 + 1 by linarith),\n    Real.sq_sqrt (show 0 \u2264 2 by linarith),\n    sq_nonneg (Real.sqrt (Real.sqrt 2 + 1) - Real.sqrt 2 / 2)]\n  <;> linarith\n  <;> norm_num"
  ]
 },
 {
  "old": "(a b c : \u211d) : (1 / a + 1 / b + 1 / c) \u2265 (1 + Real.sqrt 2 + Real.sqrt 3) * (1 / (a + Real.sqrt 2 * b + Real.sqrt 3 * c) + 1 / (b + Real.sqrt 2 * c + Real.sqrt 3 * a) + 1 / (c + Real.sqrt 2 * a + Real.sqrt 3 * b)) := by",
  "new": ": (1 / (2 * (Real.sqrt 3 + 1)) + 1 / (2 * (Real.sqrt 3 + 1))) \u2264 (1 / 2 + 1 / 2) * (1 / (Real.sqrt 3 + 1) + 1 / (Real.sqrt 3 + 1)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq : (1 / (2 * (Real.sqrt 3 + 1)) + 1 / (2 * (Real.sqrt 3 + 1))) \u2264 (1 / 2 + 1 / 2) * (1 / (Real.sqrt 3 + 1) + 1 / (Real.sqrt 3 + 1))  := by\n  norm_num\n  <;> field_simp\n  <;> ring_nf\n  <;> apply le_of_sub_nonneg\n  <;> field_simp\n  <;> ring_nf\n  <;> positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq : (1 / (2 * (Real.sqrt 3 + 1)) + 1 / (2 * (Real.sqrt 3 + 1))) \u2264 (1 / 2 + 1 / 2) * (1 / (Real.sqrt 3 + 1) + 1 / (Real.sqrt 3 + 1))  := by\n  ring_nf\n  norm_num [sq]\n  <;>\n  apply le_of_sub_nonneg\n  <;>\n  field_simp\n  <;>\n  ring_nf\n  <;>\n  norm_num [sq]\n  <;>\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq : (1 / (2 * (Real.sqrt 3 + 1)) + 1 / (2 * (Real.sqrt 3 + 1))) \u2264 (1 / 2 + 1 / 2) * (1 / (Real.sqrt 3 + 1) + 1 / (Real.sqrt 3 + 1))  := by\n  ring_nf\n  norm_num\n  <;> apply le_of_sub_nonneg\n  <;> field_simp\n  <;> ring_nf\n  <;> norm_num\n  <;> positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq : (1 / (2 * (Real.sqrt 3 + 1)) + 1 / (2 * (Real.sqrt 3 + 1))) \u2264 (1 / 2 + 1 / 2) * (1 / (Real.sqrt 3 + 1) + 1 / (Real.sqrt 3 + 1))  := by\n  field_simp [mul_comm]\n  ring_nf\n  norm_num\n  apply le_of_sub_nonneg\n  field_simp\n  ring_nf\n  norm_num\n  ring_nf\n  positivity"
  ]
 },
 {
  "old": "(x y z : \u211d) : (Real.cos x + Real.cos y + Real.cos z - Real.cos (x + y + z)) \u2264 2 * Real.sqrt 2 := by",
  "new": ": Real.sqrt 2 \u2265 1 / 2 * Real.sqrt (2 * (1 + Real.sqrt 3)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2265 1 / 2 * Real.sqrt (2 * (1 + Real.sqrt 3)) := by\n  have : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg _\n  have h\u2080 : 0 \u2264 Real.sqrt (2 * (1 + Real.sqrt 3)) := Real.sqrt_nonneg _\n  have h\u2081 : 0 \u2264 2 * (1 + Real.sqrt 3) := by linarith\n  have h\u2082 : 0 \u2264 Real.sqrt 2 := Real.sqrt_nonneg 2\n  have h\u2083 : 0 \u2264 Real.sqrt (2 * (1 + Real.sqrt 3)) := Real.sqrt_nonneg _\n  have h\u2084 : 0 \u2264 Real.sqrt 2 * Real.sqrt (2 * (1 + Real.sqrt 3)) := by positivity\n  have h\u2085 : 0 \u2264 Real.sqrt 2 * Real.sqrt (2 * (1 + Real.sqrt 3)) := by positivity\n  have h\u2086 : Real.sqrt (2 * (1 + Real.sqrt 3)) \u2265 0 := by positivity\n  have h\u2087 : Real.sqrt 2 * Real.sqrt (2 * (1 + Real.sqrt 3)) \u2265 0 := by positivity\n  nlinarith [sq_sqrt (show 0 \u2264 2 by linarith),\n    sq_sqrt (show 0 \u2264 2 * (1 + Real.sqrt 3) by linarith),\n    sq_sqrt (show 0 \u2264 3 by linarith),\n    sq_nonneg (Real.sqrt 2 - 1 / 2 * Real.sqrt (2 * (1 + Real.sqrt 3)))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2265 1 / 2 * Real.sqrt (2 * (1 + Real.sqrt 3)) := by\n  have h : Real.sqrt 2 \u2265 1 / 2 * Real.sqrt (2 * (1 + Real.sqrt 3)) := by\n    have h\u2080 : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg 3\n    have h\u2081 : 0 \u2264 2 * (1 + Real.sqrt 3) := by positivity\n    have h\u2082 : 0 \u2264 Real.sqrt (2 * (1 + Real.sqrt 3)) := Real.sqrt_nonneg _\n    have h\u2083 : 0 \u2264 Real.sqrt 2 := Real.sqrt_nonneg 2\n    have h\u2084 : 0 \u2264 Real.sqrt 3 * Real.sqrt 2 := by positivity\n    have h\u2085 : 0 \u2264 Real.sqrt 3 * Real.sqrt (2 * (1 + Real.sqrt 3)) := by positivity\n    have h\u2086 : Real.sqrt 2 \u2265 1 / 2 * Real.sqrt (2 * (1 + Real.sqrt 3)) := by\n      nlinarith [sq_sqrt (show (0 : \u211d) \u2264 2 by positivity),\n        sq_sqrt (show (0 : \u211d) \u2264 2 * (1 + Real.sqrt 3) by positivity),\n        sq_sqrt (show (0 : \u211d) \u2264 3 by positivity),\n        sq_nonneg (Real.sqrt 3 - 1)]\n    linarith\n  exact h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2265 1 / 2 * Real.sqrt (2 * (1 + Real.sqrt 3)) := by\n  have h\u2080 : 0 < Real.sqrt 3 := Real.sqrt_pos.mpr (by linarith)\n  have h\u2081 : 0 < Real.sqrt (2 * (1 + Real.sqrt 3)) := by positivity\n  have h\u2082 : 0 < 2 * (1 + Real.sqrt 3) := by positivity\n  have h\u2083 : 0 < 2 * Real.sqrt (2 * (1 + Real.sqrt 3)) := by positivity\n  apply le_sqrt_of_sq_le\n  nlinarith [sq_sqrt (show 0 \u2264 2 * (1 + Real.sqrt 3) by positivity), sq_sqrt (show 0 \u2264 3 by positivity),\n    sq_nonneg (Real.sqrt 3 - 1)]\n  <;> norm_num"
  ]
 },
 {
  "old": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 Real.sqrt ((a^2 + 2 * b^2 + c^2) * (a^2 + 2 * c^2 + b^2) / ((b + c)^2 * (b^2 + c^2 + a^2))) \u2265 1 / 2 * (Real.sqrt 3 * (2 * a + b + c) / (a + b + c)) := by",
  "new": ": Real.sqrt 3 \u2264 2 * Real.sqrt ((2 * Real.sqrt 3 + 3) / 3) \u2227 Real.sqrt 3 \u2265 Real.sqrt 3 / 2 * Real.sqrt ((2 * Real.sqrt 3 + 3) / 3):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt 3 \u2264 2 * Real.sqrt ((2 * Real.sqrt 3 + 3) / 3) \u2227\n    Real.sqrt 3 \u2265 Real.sqrt 3 / 2 * Real.sqrt ((2 * Real.sqrt 3 + 3) / 3):= by\n  have h : 0 < Real.sqrt 3 := Real.sqrt_pos.mpr (by norm_num)\n  constructor\n  have h\u2081 : 0 < (2 * Real.sqrt 3 + 3) / 3 := by\n    nlinarith\n  have h\u2082 : 0 < Real.sqrt ((2 * Real.sqrt 3 + 3) / 3) :=\n    Real.sqrt_pos.mpr h\u2081\n  nlinarith [sq_sqrt (show 0 \u2264 (2 * Real.sqrt 3 + 3) / 3 by\n    nlinarith),\n    sq_sqrt (show 0 \u2264 3 by norm_num),\n    sq_sqrt (show 0 \u2264 3 by norm_num)]\n  have h\u2081 : 0 < (2 * Real.sqrt 3 + 3) / 3 := by\n    nlinarith\n  have h\u2082 : 0 < Real.sqrt ((2 * Real.sqrt 3 + 3) / 3) :=\n    Real.sqrt_pos.mpr h\u2081\n  nlinarith [sq_sqrt (show 0 \u2264 (2 * Real.sqrt 3 + 3) / 3 by\n    nlinarith),\n    sq_sqrt (show 0 \u2264 3 by norm_num),\n    sq_sqrt (show 0 \u2264 3 by norm_num)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt 3 \u2264 2 * Real.sqrt ((2 * Real.sqrt 3 + 3) / 3) \u2227\n    Real.sqrt 3 \u2265 Real.sqrt 3 / 2 * Real.sqrt ((2 * Real.sqrt 3 + 3) / 3):= by\n  have h\u2081 : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg 3\n  have h\u2082 : 0 \u2264 (2 * Real.sqrt 3 + 3) / 3 := by positivity\n  have h\u2083 : 0 \u2264 Real.sqrt ((2 * Real.sqrt 3 + 3) / 3) := Real.sqrt_nonneg _\n  have h\u2084 : 0 \u2264 2 * Real.sqrt ((2 * Real.sqrt 3 + 3) / 3) := by positivity\n  have h\u2085 : Real.sqrt 3 \u2264 2 * Real.sqrt ((2 * Real.sqrt 3 + 3) / 3) := by\n    nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 from by positivity),\n      sq_sqrt (show (0 : \u211d) \u2264 (2 * Real.sqrt 3 + 3) / 3 from by positivity),\n      sq_nonneg (Real.sqrt 3 - 1)]\n  have h\u2086 : Real.sqrt 3 \u2265 Real.sqrt 3 / 2 * Real.sqrt ((2 * Real.sqrt 3 + 3) / 3) := by\n    nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 from by positivity),\n      sq_sqrt (show (0 : \u211d) \u2264 (2 * Real.sqrt 3 + 3) / 3 from by positivity),\n      sq_nonneg (Real.sqrt 3 / 2 - 1)]\n  exact \u27e8h\u2085, h\u2086\u27e9\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt 3 \u2264 2 * Real.sqrt ((2 * Real.sqrt 3 + 3) / 3) \u2227\n    Real.sqrt 3 \u2265 Real.sqrt 3 / 2 * Real.sqrt ((2 * Real.sqrt 3 + 3) / 3):= by\n  have h\u2080 : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg 3\n  have h\u2081 : 0 \u2264 (2 * Real.sqrt 3 + 3) / 3 := by positivity\n  have h\u2082 : 0 \u2264 Real.sqrt ((2 * Real.sqrt 3 + 3) / 3) := Real.sqrt_nonneg _\n  have h\u2083 : 0 \u2264 2 * Real.sqrt ((2 * Real.sqrt 3 + 3) / 3) := by positivity\n  apply And.intro\n  all_goals\n    nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 by linarith),\n      sq_sqrt (show (0 : \u211d) \u2264 (2 * Real.sqrt 3 + 3) / 3 by linarith),\n      sq_nonneg (Real.sqrt 3 - Real.sqrt ((2 * Real.sqrt 3 + 3) / 3))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt 3 \u2264 2 * Real.sqrt ((2 * Real.sqrt 3 + 3) / 3) \u2227\n    Real.sqrt 3 \u2265 Real.sqrt 3 / 2 * Real.sqrt ((2 * Real.sqrt 3 + 3) / 3):= by\n  have h\u2080 : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg 3\n  have h\u2081 : 0 \u2264 (2 * Real.sqrt 3 + 3) / 3 := by positivity\n  have h\u2082 : 0 \u2264 Real.sqrt ((2 * Real.sqrt 3 + 3) / 3) := Real.sqrt_nonneg _\n  have h\u2083 : 0 \u2264 2 * Real.sqrt ((2 * Real.sqrt 3 + 3) / 3) := by positivity\n  have h\u2084 : 0 \u2264 Real.sqrt 3 / 2 * Real.sqrt ((2 * Real.sqrt 3 + 3) / 3) := by positivity\n  have h\u2085 : Real.sqrt 3 \u2264 2 * Real.sqrt ((2 * Real.sqrt 3 + 3) / 3) := by\n    nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 by linarith), sq_sqrt (show (0 : \u211d) \u2264 (2 * Real.sqrt 3 + 3) / 3 by positivity),\n      mul_self_nonneg (Real.sqrt 3 - Real.sqrt ((2 * Real.sqrt 3 + 3) / 3))]\n  have h\u2086 : Real.sqrt 3 \u2265 Real.sqrt 3 / 2 * Real.sqrt ((2 * Real.sqrt 3 + 3) / 3) := by\n    nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 by linarith), sq_sqrt (show (0 : \u211d) \u2264 (2 * Real.sqrt 3 + 3) / 3 by positivity),\n      mul_self_nonneg (Real.sqrt 3 / 2 - Real.sqrt ((2 * Real.sqrt 3 + 3) / 3))]\n  exact \u27e8h\u2085, h\u2086\u27e9"
  ]
 },
 {
  "old": "{p : \u2115} (h\u2081 : 5 \u2264 p) (h\u2082 : Nat.Prime p) : 24 \u2223 p^2 - 1 := by",
  "new": "(p : \u2115) {n : \u2115} (hn : n \u2260 0) (hp : Nat.Prime p) : p.Coprime n \u2228 p \u2223 n := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {n : \u2115} (hn : n \u2260 0) (hp : Nat.Prime p) :\n        p.Coprime n \u2228 p \u2223 n := by\n  have h : p.Coprime n \u2228 \u00acp.Coprime n := by apply em\n  rcases h with (h | h) <;> simp_all [Nat.Prime.coprime_iff_not_dvd, hp]\n  <;> omega\n  <;> assumption\n  <;> assumption\n  <;> assumption"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : 2 / (b ^ 3 + b ^ 2 * c) + 2 / (c ^ 3 + c ^ 2 * a) + 2 / (a ^ 3 + a ^ 2 * b) \u2264 a / b + b / c + c / a := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 1 \u2192 b \u2265 1 \u2192 c \u2265 1 \u2192 a * b * c = 1 \u2192 2 / (b ^ 3 + b ^ 2 * c) + 2 / (c ^ 3 + c ^ 2 * a) + 2 / (a ^ 3 + a ^ 2 * b) \u2264 a / b + b / c + c / a := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 1 \u2192 b \u2265 1 \u2192 c \u2265 1 \u2192 a * b * c = 1 \u2192 2 / (b ^ 3 + b ^ 2 * c) + 2 / (c ^ 3 + c ^ 2 * a) + 2 / (a ^ 3 + a ^ 2 * b) \u2264 a / b + b / c + c / a := by\n  rintro a b c h\u2080 h\u2081 h\u2082 h\u2083\n  have : a = 1 := by\n    nlinarith [sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1), mul_nonneg (sub_nonneg.mpr h\u2080) (sub_nonneg.mpr h\u2081),\n      mul_nonneg (sub_nonneg.mpr h\u2081) (sub_nonneg.mpr h\u2082), mul_nonneg (sub_nonneg.mpr h\u2082) (sub_nonneg.mpr h\u2080)]\n  have : b = 1 := by\n    nlinarith [sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1), mul_nonneg (sub_nonneg.mpr h\u2080) (sub_nonneg.mpr h\u2081),\n      mul_nonneg (sub_nonneg.mpr h\u2081) (sub_nonneg.mpr h\u2082), mul_nonneg (sub_nonneg.mpr h\u2082) (sub_nonneg.mpr h\u2080)]\n  have : c = 1 := by\n    nlinarith [sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1), mul_nonneg (sub_nonneg.mpr h\u2080) (sub_nonneg.mpr h\u2081),\n      mul_nonneg (sub_nonneg.mpr h\u2081) (sub_nonneg.mpr h\u2082), mul_nonneg (sub_nonneg.mpr h\u2082) (sub_nonneg.mpr h\u2080)]\n  subst_vars\n  norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 1 \u2192 b \u2265 1 \u2192 c \u2265 1 \u2192 a * b * c = 1 \u2192 2 / (b ^ 3 + b ^ 2 * c) + 2 / (c ^ 3 + c ^ 2 * a) + 2 / (a ^ 3 + a ^ 2 * b) \u2264 a / b + b / c + c / a := by\n  intro a b c hab hbc hca h\n  have ha : 0 < a := by linarith\n  have hb : 0 < b := by linarith\n  have hc : 0 < c := by linarith\n  have h\u2080 : 0 < a * b := by positivity\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * a := by positivity\n  have h\u2083 : 0 < a * b * c := by positivity\n  have h\u2084 : 2 / (b ^ 3 + b ^ 2 * c) \u2264 1 / b := by\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (b ^ 2 - b * c), sq_nonneg (b - c), hab, hbc, hca, h]\n  have h\u2085 : 2 / (c ^ 3 + c ^ 2 * a) \u2264 1 / c := by\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (c ^ 2 - c * a), sq_nonneg (c - a), hab, hbc, hca, h]\n  have h\u2086 : 2 / (a ^ 3 + a ^ 2 * b) \u2264 1 / a := by\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a ^ 2 - a * b), sq_nonneg (a - b), hab, hbc, hca, h]\n  have h\u2087 : 1 / b + 1 / c + 1 / a \u2264 a / b + b / c + c / a := by\n    have h\u2081 : 1 / b \u2264 a / b := by\n      exact div_le_div_of_le (by linarith) (by linarith)\n    have h\u2082 : 1 / c \u2264 b / c := by\n      exact div_le_div_of_le (by linarith) (by linarith)\n    have h\u2083 : 1 / a \u2264 c / a := by\n      exact div_le_div_of_le (by linarith) (by linarith)\n    linarith\n  linarith\n  <;> try norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 1 \u2192 b \u2265 1 \u2192 c \u2265 1 \u2192 a * b * c = 1 \u2192 2 / (b ^ 3 + b ^ 2 * c) + 2 / (c ^ 3 + c ^ 2 * a) + 2 / (a ^ 3 + a ^ 2 * b) \u2264 a / b + b / c + c / a := by\n  rintro a b c ha hb hc habc\n  have h\u2081 : a = 1 := by\n    nlinarith [sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1), mul_nonneg (sub_nonneg.mpr ha) (sub_nonneg.mpr hb), mul_nonneg (sub_nonneg.mpr hb) (sub_nonneg.mpr hc), mul_nonneg (sub_nonneg.mpr ha) (sub_nonneg.mpr hc)]\n  have h\u2082 : b = 1 := by\n    nlinarith [sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1), mul_nonneg (sub_nonneg.mpr ha) (sub_nonneg.mpr hb), mul_nonneg (sub_nonneg.mpr hb) (sub_nonneg.mpr hc), mul_nonneg (sub_nonneg.mpr ha) (sub_nonneg.mpr hc)]\n  have h\u2083 : c = 1 := by\n    nlinarith [sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1), mul_nonneg (sub_nonneg.mpr ha) (sub_nonneg.mpr hb), mul_nonneg (sub_nonneg.mpr hb) (sub_nonneg.mpr hc), mul_nonneg (sub_nonneg.mpr ha) (sub_nonneg.mpr hc)]\n  subst_vars\n  norm_num\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : (a / (2 * a ^ 3 + b ^ 3 + 1) + b / (2 * b ^ 3 + c ^ 3 + 1) + c / (2 * c ^ 3 + a ^ 3 + 1) \u2264 (a ^ 2 + b ^ 2 + c ^ 2) / (4 * a * b * c)) := by",
  "new": "(x y z : \u211d) (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2081 : x + y + z = 3) : (x ^ 2 / (x + 1) ^ 2 + y ^ 2 / (y + 1) ^ 2 + z ^ 2 / (z + 1) ^ 2) \u2264 27 / 16:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_20 (x y z : \u211d) (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2081 : x + y + z = 3) :\n  (x ^ 2 / (x + 1) ^ 2 + y ^ 2 / (y + 1) ^ 2 + z ^ 2 / (z + 1) ^ 2) \u2264 27 / 16:= by\n  obtain \u27e8hx, hy, hz\u27e9 := h\u2080\n  have h\u2082 : x ^ 2 / (x + 1) ^ 2 \u2264 x / 2 := by\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (x - 1), hx]\n  have h\u2083 : y ^ 2 / (y + 1) ^ 2 \u2264 y / 2 := by\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (y - 1), hy]\n  have h\u2084 : z ^ 2 / (z + 1) ^ 2 \u2264 z / 2 := by\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (z - 1), hz]\n  linarith [h\u2082, h\u2083, h\u2084, h\u2081]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) : (a + b + c) ^ 3 \u2265 6 * Real.sqrt 3 * |(a - b) * (a - c) * (b - c)| := by",
  "new": "(x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 1) : (x + y + z) ^ 3 \u2265 9 * (x * y * z) * (x * y + y * z + z * x):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 1) : (x + y + z) ^ 3 \u2265 9 * (x * y * z) * (x * y + y * z + z * x):= by\n  have h\u2080 : x + y + z = 1 := by assumption\n  have h\u2081 : (x + y + z) ^ 3 = 1 := by simp [h\u2080]\n  have h\u2082 : 9 * (x * y * z) * (x * y + y * z + z * x) \u2264 1 := by\n    have h\u2083 : x * y * z \u2264 1 / 9 := by\n      nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n        mul_self_nonneg (x + y + z)]\n    have h\u2084 : x * y + y * z + z * x \u2264 1 := by\n      nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n        mul_self_nonneg (x + y + z)]\n    nlinarith [mul_nonneg hx hy, mul_nonneg hy hz, mul_nonneg hz hx]\n  nlinarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 1) : (x + y + z) ^ 3 \u2265 9 * (x * y * z) * (x * y + y * z + z * x):= by\n  have h\u2080 : (x + y + z) ^ 3 = 1 := by simp [h]\n  have h\u2081 : 0 \u2264 x * y := mul_nonneg hx hy\n  have h\u2082 : 0 \u2264 y * z := mul_nonneg hy hz\n  have h\u2083 : 0 \u2264 z * x := mul_nonneg hz hx\n  have h\u2084 : 0 \u2264 x * y * z := mul_nonneg h\u2081 hz\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x * y + y * z + z * x),\n    mul_self_nonneg (x * y - y * z),\n    mul_self_nonneg (y * z - z * x),\n    mul_self_nonneg (z * x - x * y)]\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) : (a / (b + c) + b / (c + a) + c / (a + b)) \u2265 (ab / (c ^ 2 + ab) + ac / (b ^ 2 + ac) + bc / (a ^ 2 + bc)) := by",
  "new": "(A : Type) [LinearOrderedField A] (x y z : A) : (x / (x + y + z) + y / (x + y + z) + z / (x + y + z)) \u2265 (0 : A):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_T10_T11 (A : Type) [LinearOrderedField A] (x y z : A) : (x / (x + y + z) + y / (x + y + z) + z / (x + y + z)) \u2265 (0 : A):= by\n  have h1 : x / (x + y + z) + y / (x + y + z) + z / (x + y + z) = (x + y + z) / (x + y + z):= by field_simp [add_assoc]\n  rw [h1]\n  by_cases h2 : x + y + z = 0 <;> simp_all",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_T10_T11 (A : Type) [LinearOrderedField A] (x y z : A) : (x / (x + y + z) + y / (x + y + z) + z / (x + y + z)) \u2265 (0 : A):= by\n  have : x / (x + y + z) + y / (x + y + z) + z / (x + y + z) = (x + y + z) / (x + y + z) := by field_simp\n  rw [this]\n  by_cases h : x + y + z = 0 <;> simp [h]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_T10_T11 (A : Type) [LinearOrderedField A] (x y z : A) : (x / (x + y + z) + y / (x + y + z) + z / (x + y + z)) \u2265 (0 : A):= by\n  have : (x / (x + y + z) + y / (x + y + z) + z / (x + y + z)) = (x + y + z) / (x + y + z) := by\n    field_simp [add_assoc]\n  rw [this]\n  by_cases h : x + y + z = 0 <;> simp [h]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_T10_T11 (A : Type) [LinearOrderedField A] (x y z : A) : (x / (x + y + z) + y / (x + y + z) + z / (x + y + z)) \u2265 (0 : A):= by\n  have : x / (x + y + z) + y / (x + y + z) + z / (x + y + z) = (x + y + z) / (x + y + z) := by\n    field_simp [add_assoc]\n  rw [this]\n  by_cases h : x + y + z = 0 <;> simp [h]"
  ]
 },
 {
  "old": "(a b c d n : \u2124) (h1 : a \u2261 b [ZMOD n]) (h2 : c \u2261 d [ZMOD n]) : a + c \u2261 b + d [ZMOD n] := by",
  "new": "{a b x : \u2115} (h : x \u2223 a \u2227 x \u2223 b) (h2 : Nat.Coprime a x) : x \u2223 (Nat.gcd b a) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_cancel_left_dvd_of_dvd_of_dvd {a b x : \u2115}\n    (h : x \u2223 a \u2227 x \u2223 b)\n    (h2 : Nat.Coprime a x) :\n    x \u2223 (Nat.gcd b a) := by\n  cases' h with h1 h2\n  cases' Nat.eq_zero_or_pos (Nat.gcd b a) with h3 h3\n  all_goals simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  all_goals omega"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a / (4 * b) + (a + b) / (c + a) + (b + c) / (a + b)) \u2265 3 / 4 + Real.sqrt 2 := by",
  "new": ": Real.sqrt 2 \u2264 4 / 3 * (1 / Real.sqrt 2 + 3 / 4) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2264 4 / 3 * (1 / Real.sqrt 2 + 3 / 4)  := by\n  have h : 0 < Real.sqrt 2 := Real.sqrt_pos.mpr (by norm_num)\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  positivity\n  norm_num\n  <;> norm_num <;>\n  field_simp <;>\n  norm_num <;>\n  ring_nf <;>\n  norm_num <;>\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 2 by norm_num)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2264 4 / 3 * (1 / Real.sqrt 2 + 3 / 4)  := by\n  have h\u2080 : 0 \u2264 3 / 4 := by norm_num\n  have h\u2081 : 0 \u2264 1 / Real.sqrt 2 := by positivity\n  have h\u2082 : 0 \u2264 4 / 3 := by norm_num\n  have h\u2083 : Real.sqrt 2 \u2264 4 / 3 * (1 / Real.sqrt 2 + 3 / 4) := by\n    rw [\u2190 sub_nonneg]\n    field_simp\n    rw [le_div_iff (by positivity)]\n    ring_nf\n    nlinarith [sq_sqrt (show 0 \u2264 2 by norm_num), Real.sqrt_nonneg 2]\n  exact h\u2083\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2264 4 / 3 * (1 / Real.sqrt 2 + 3 / 4)  := by\n  have h\u2080 : 0 < Real.sqrt 2 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2081 : 0 < 3 := by norm_num\n  have h\u2082 : 0 < 4 := by norm_num\n  have h\u2083 : 0 < 2 := by norm_num\n  field_simp [h\u2080, h\u2081, h\u2082, h\u2083]\n  rw [le_div_iff, mul_comm]\n  nlinarith [sq_sqrt (show 0 \u2264 2 from by norm_num)]\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2264 4 / 3 * (1 / Real.sqrt 2 + 3 / 4)  := by\n  have h\u2080 : 0 < Real.sqrt 2 := Real.sqrt_pos.mpr (by norm_num)\n  field_simp [h\u2080]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 2 by norm_num), mul_self_nonneg (3 - 4 * Real.sqrt 2)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (habc : a * b * c = 1) : a / (2 * a + 3 * b * c) + b / (2 * b + 3 * c * a) + c / (2 * c + 3 * a * b) \u2264 (a + b + c) / 5 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z = 1) : 1 / (x + y) + 1 / (y + z) + 1 / (z + x) \u2265 9 / (x + y + z):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z = 1) : 1 / (x + y) + 1 / (y + z) + 1 / (z + x) \u2265 9 / (x + y + z):= by\n  have : x + y + z = 1 := by simp_all\n  have : 0 < x * y := by positivity\n  have : 0 < y * z := by positivity\n  have : 0 < z * x := by positivity\n  have : 0 < (x * y) * (y * z) := by positivity\n  have : 0 < (y * z) * (z * x) := by positivity\n  have : 0 < (z * x) * (x * y) := by positivity\n  field_simp at h\u2082 \u22a2\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z = 1) : 1 / (x + y) + 1 / (y + z) + 1 / (z + x) \u2265 9 / (x + y + z):= by\n  field_simp [add_comm, add_left_comm] at *\n  rw [eq_comm] at h\u2081\n  have : 0 < x * y := mul_pos hx hy\n  have : 0 < x * z := mul_pos hx hz\n  have : 0 < y * z := mul_pos hy hz\n  have : 0 < x * y * (x + y) := by positivity\n  have : 0 < y * z * (y + z) := by positivity\n  have : 0 < x * z * (x + z) := by positivity\n  nlinarith\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z = 1) : 1 / (x + y) + 1 / (y + z) + 1 / (z + x) \u2265 9 / (x + y + z):= by\n  have h\u2083 : 0 < x * y * z := by positivity\n  field_simp [h\u2081] at h\u2082 \u22a2\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (x - z)]\n  <;> linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption"
  ]
 },
 {
  "old": "(n : \u2115) (a : Fin n \u2192 \u211d) (ha : 0 \u2264 a) (h : \u2211 i, a i = n) : n * (n - 2) * (\u2211 i, a i / (\u2211 j : { j // j \u2260 i }, a j) - n / (n - 1)) \u2265 \u2211 i, (a i) ^ 2 - n := by",
  "new": "(x y z : \u211d) (n : \u2115) (h\u2081 : 0 < n) (h\u2082 : x \u2265 0 \u2227 y \u2265 0 \u2227 z \u2265 0) (h\u2083 : x \u2264 1 \u2227 y \u2264 1 \u2227 z \u2264 1) (h\u2084 : x + y + z = 1) : n * (x * y + y * z + z * x) * (x * z + y * x + z * y) / (x * z + y * x + z * y) \u2264 n:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (n : \u2115) (h\u2081 : 0 < n) (h\u2082 : x \u2265 0 \u2227 y \u2265 0 \u2227 z \u2265 0) (h\u2083 : x \u2264 1 \u2227 y \u2264 1 \u2227 z \u2264 1) (h\u2084 : x + y + z = 1) :\n  n * (x * y + y * z + z * x) * (x * z + y * x + z * y) / (x * z + y * x + z * y) \u2264 n:= by\n  rcases h\u2082 with \u27e8h\u2082_h, h\u2082_h', h\u2082_h''\u27e9\n  rcases h\u2083 with \u27e8h\u2083_h, h\u2083_h', h\u2083_h''\u27e9\n  have h\u2084' : x + y + z = 1 := h\u2084\n  have h\u2085 : x * y + y * z + z * x \u2264 1 := by nlinarith\n  have h\u2086 : x * z + y * x + z * y \u2265 0 := by nlinarith\n  have h\u2087 : n * (x * y + y * z + z * x) * (x * z + y * x + z * y) / (x * z + y * x + z * y) \u2264 n := by\n    by_cases h\u2088 : x * z + y * x + z * y = 0 <;>\n    simp_all [div_eq_mul_inv, mul_assoc]\n    all_goals\n      apply le_of_sub_nonneg\n      field_simp\n      ring_nf\n      nlinarith\n  exact h\u2087",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (n : \u2115) (h\u2081 : 0 < n) (h\u2082 : x \u2265 0 \u2227 y \u2265 0 \u2227 z \u2265 0) (h\u2083 : x \u2264 1 \u2227 y \u2264 1 \u2227 z \u2264 1) (h\u2084 : x + y + z = 1) :\n  n * (x * y + y * z + z * x) * (x * z + y * x + z * y) / (x * z + y * x + z * y) \u2264 n:= by\n  cases' h\u2082 with h\u2082_left h\u2082_middle\n  cases' h\u2083 with h\u2083_left h\u2083_middle\n  have : x * z + y * x + z * y \u2265 0 := by nlinarith\n  have : x * z + y * x + z * y \u2264 1 := by nlinarith\n  have : n * (x * y + y * z + z * x) \u2264 n := by nlinarith\n  have : n * (x * y + y * z + z * x) * (x * z + y * x + z * y) / (x * z + y * x + z * y) \u2264 n := by\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith\n  linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (n : \u2115) (h\u2081 : 0 < n) (h\u2082 : x \u2265 0 \u2227 y \u2265 0 \u2227 z \u2265 0) (h\u2083 : x \u2264 1 \u2227 y \u2264 1 \u2227 z \u2264 1) (h\u2084 : x + y + z = 1) :\n  n * (x * y + y * z + z * x) * (x * z + y * x + z * y) / (x * z + y * x + z * y) \u2264 n:= by\n  rcases h\u2083 with \u27e8h\u2083_left, h\u2083_middle, h\u2083_right\u27e9\n  rcases h\u2082 with \u27e8h\u2082_left, h\u2082_middle, h\u2082_right\u27e9\n  by_cases h\u2085 : x * z + y * x + z * y = 0 <;> field_simp [h\u2085] <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (n : \u2115) (h\u2081 : 0 < n) (h\u2082 : x \u2265 0 \u2227 y \u2265 0 \u2227 z \u2265 0) (h\u2083 : x \u2264 1 \u2227 y \u2264 1 \u2227 z \u2264 1) (h\u2084 : x + y + z = 1) :\n  n * (x * y + y * z + z * x) * (x * z + y * x + z * y) / (x * z + y * x + z * y) \u2264 n:= by\n  have H\u2081 : x * y + y * z + z * x \u2264 x + y + z := by\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  have H\u2082 : x * z + y * x + z * y \u2265 0 := by\n    nlinarith\n  have H\u2083 : n * (x * y + y * z + z * x) * (x * z + y * x + z * y) / (x * z + y * x + z * y) \u2264 n := by\n    rcases eq_or_ne (x * z + y * x + z * y) 0 with H\u2084 | H\u2084\n    \u00b7 rw [H\u2084]\n      simp\n    \u00b7 apply le_of_sub_nonneg\n      field_simp [H\u2084]\n      nlinarith\n  exact H\u2083"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^2 + b^2 + c^2)^4 - a^8 - b^8 - c^8 \u2265 14 * b^2 * c^2 * (b^2 * c^2 + 4 * a^4) := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a^2 + b^2 + c^2)^4 - a^8 - b^8 - c^8 \u2265 14 * b^2 * c^2 * (b^2 * c^2 + 4 * a^4) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a^2 + b^2 + c^2)^4 - a^8 - b^8 - c^8 \u2265 14 * b^2 * c^2 * (b^2 * c^2 + 4 * a^4)  := by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  have h1 : 0 \u2264 b ^ 2 * c ^ 2 := by positivity\n  have h2 : 0 \u2264 4 * a ^ 4 := by positivity\n  have h3 : 0 \u2264 a ^ 2 * b ^ 2 := by positivity\n  have h4 : 0 \u2264 a ^ 2 * c ^ 2 := by positivity\n  have h5 : 0 \u2264 b ^ 2 * a ^ 2 := by positivity\n  have h6 : 0 \u2264 c ^ 2 * a ^ 2 := by positivity\n  have h7 : 0 \u2264 c ^ 2 * b ^ 2 := by positivity\n  nlinarith [sq_nonneg (a^2 - b^2), sq_nonneg (b^2 - c^2), sq_nonneg (c^2 - a^2),\n    sq_nonneg (a^2 - b^2 - c^2), sq_nonneg (b^2 - a^2 - c^2), sq_nonneg (c^2 - a^2 - b^2),\n    mul_nonneg h1 h2, mul_nonneg h3 h4, mul_nonneg h5 h6, mul_nonneg h7 h6,\n    mul_nonneg (sq_nonneg (b^2 + c^2)) (sq_nonneg (a^2 + b^2 + c^2))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a^2 + b^2 + c^2)^4 - a^8 - b^8 - c^8 \u2265 14 * b^2 * c^2 * (b^2 * c^2 + 4 * a^4)  := by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  simp only [mul_assoc, mul_comm, mul_left_comm]\n  nlinarith [sq_nonneg (a^2 - b^2), sq_nonneg (b^2 - c^2), sq_nonneg (c^2 - a^2),\n    mul_nonneg ha hb, mul_nonneg hb hc, mul_nonneg ha hc,\n    sq_nonneg (a^2 - b^2 - c^2), sq_nonneg (b^2 - c^2 - a^2),\n    sq_nonneg (c^2 - a^2 - b^2), mul_nonneg (sq_nonneg a) (sq_nonneg b),\n    mul_nonneg (sq_nonneg b) (sq_nonneg c), mul_nonneg (sq_nonneg c) (sq_nonneg a),\n    sq_nonneg (a^2 + b^2 + c^2), mul_nonneg (sq_nonneg (a^2)) (sq_nonneg (b^2)),\n    mul_nonneg (sq_nonneg (b^2)) (sq_nonneg (c^2)), mul_nonneg (sq_nonneg (c^2)) (sq_nonneg (a^2))]\n  <;> norm_num"
  ]
 },
 {
  "old": ": \u2200 x : \u211d, -cos x ^ 2 + sin x ^ 2 = -cos (2 * x) := by",
  "new": ": \u2200 x : \u211d, 2 * cos x ^ 2 - 1 = cos (2 * x) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test : \u2200 x : \u211d, 2 * cos x ^ 2 - 1 = cos (2 * x) := by\n  exact fun x \u21a6 by rw [cos_two_mul, mul_comm]\n  <;> simp [cos_two_mul, mul_comm]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test : \u2200 x : \u211d, 2 * cos x ^ 2 - 1 = cos (2 * x) := by\n  intro x;\n  rw [cos_two_mul, \u2190 sub_eq_zero]\n  ring",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test : \u2200 x : \u211d, 2 * cos x ^ 2 - 1 = cos (2 * x) := by\n  intro x\n  rw [Real.cos_two_mul, mul_comm]\n  <;> ring\n  <;> simp [cos_sq, sin_sq]\n  <;> ring\n  <;> simp [cos_sq, sin_sq]\n  <;> ring"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) (habc : a + b + c + d = 4) : a^2 + b^2 + c^2 + d^2 \u2264 64 / (9 * Real.sqrt (a * b * c * d)) := by",
  "new": ": Real.sqrt (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) \u2264 1 + a ^ 2 + b ^ 2 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) \u2264 1 + a ^ 2 + b ^ 2 := by\n  have h\u2081 : 0 \u2264 (a - b) ^ 2 := by positivity\n  have h\u2082 : Real.sqrt (1 + a ^ 2) \u2265 0 := Real.sqrt_nonneg (1 + a ^ 2)\n  have h\u2083 : Real.sqrt (1 + b ^ 2) \u2265 0 := Real.sqrt_nonneg (1 + b ^ 2)\n  have h\u2084 : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) \u2264 (1 + a ^ 2 + b ^ 2) := by\n    nlinarith [sq_sqrt (show (0 : \u211d) \u2264 1 + a ^ 2 by nlinarith),\n      sq_sqrt (show (0 : \u211d) \u2264 1 + b ^ 2 by nlinarith), h\u2081]\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  \u00b7 positivity\n  \u00b7 nlinarith [sq_sqrt (show (0 : \u211d) \u2264 1 + a ^ 2 by nlinarith),\n      sq_sqrt (show (0 : \u211d) \u2264 1 + b ^ 2 by nlinarith), h\u2081, h\u2082, h\u2083, h\u2084]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) \u2264 1 + a ^ 2 + b ^ 2 := by\n  have h : Real.sqrt (1 + a ^ 2) \u2265 0 := Real.sqrt_nonneg _\n  have h' : Real.sqrt (1 + b ^ 2) \u2265 0 := Real.sqrt_nonneg _\n  have h'' : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) \u2264 (1 + a ^ 2 + (1 + b ^ 2)) / 2 := by\n    nlinarith [sq_sqrt (show 0 \u2264 1 + a ^ 2 from by nlinarith),\n      sq_sqrt (show 0 \u2264 1 + b ^ 2 from by nlinarith),\n      sq_nonneg (a ^ 2 - b ^ 2)]\n  have h''' : Real.sqrt (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) \u2264 1 + a ^ 2 + b ^ 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith\n  exact h'''",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) \u2264 1 + a ^ 2 + b ^ 2 := by\n  rw [Real.sqrt_le_iff]\n  refine' \u27e8by positivity, _\u27e9\n  nlinarith [Real.sqrt_nonneg (1 + a ^ 2), Real.sqrt_nonneg (1 + b ^ 2),\n    sq_sqrt (show 0 \u2264 1 + a ^ 2 by positivity), sq_sqrt (show 0 \u2264 1 + b ^ 2 by positivity),\n    mul_self_nonneg (a * b), sq_nonneg (a + b), sq_nonneg (a - b), sq_nonneg (1 + a ^ 2),\n    sq_nonneg (1 + b ^ 2), sq_nonneg (a ^ 2 - b ^ 2)]\n  <;> simp [add_comm, add_left_comm]\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) \u2264 1 + a ^ 2 + b ^ 2 := by\n  have h\u2080 : 0 \u2264 Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) :=\n    mul_nonneg (Real.sqrt_nonneg _) (Real.sqrt_nonneg _)\n  have h\u2081 : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) \u2264 1 + a ^ 2 + b ^ 2 := by\n    nlinarith [sq_sqrt (show (0 : \u211d) \u2264 1 + a ^ 2 from by positivity),\n      sq_sqrt (show (0 : \u211d) \u2264 1 + b ^ 2 from by positivity), sq_nonneg (a ^ 2 - b ^ 2),\n      sq_nonneg (b ^ 2 - 1), sq_nonneg (1 - a ^ 2)]\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) from h\u2080),\n    sq_sqrt (show (0 : \u211d) \u2264 1 + a ^ 2 + b ^ 2 from by positivity), sq_nonneg (a ^ 2 - b ^ 2),\n    sq_nonneg (b ^ 2 - 1), sq_nonneg (1 - a ^ 2)]\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith"
  ]
 },
 {
  "old": ": \u2200 a b c : \u211d, a^4 + b^4 + c^4 + a * b * c * (a + b + c) \u2265 a^3 * b + a^3 * c + b^3 * a + b^3 * c + c^3 * a + c^3 * b := by",
  "new": "(a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) : a * b * c * (a + b + c) \u2265 0 \u2192 a ^ 3 * b + a ^ 3 * c + b ^ 3 * a + b ^ 3 * c + c ^ 3 * a + c ^ 3 * b \u2264 a ^ 4 + b ^ 4 + c ^ 4 + a * b * c * (a + b + c):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) :\n     a * b * c * (a + b + c) \u2265 0 \u2192 a ^ 3 * b + a ^ 3 * c + b ^ 3 * a + b ^ 3 * c + c ^ 3 * a + c ^ 3 * b \u2264 a ^ 4 + b ^ 4 + c ^ 4 + a * b * c * (a + b + c):= by\n  intro h\u2080\n  simp only [mul_assoc, mul_comm, mul_left_comm, add_assoc, add_comm, add_left_comm] at *\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), sq_nonneg (a - b - c), sq_nonneg (b - c - a), sq_nonneg (c - a - b), mul_nonneg ha hb, mul_nonneg hb hc, mul_nonneg hc ha, mul_nonneg (sq_nonneg a) hb, mul_nonneg (sq_nonneg b) hc, mul_nonneg (sq_nonneg c) ha, mul_nonneg ha (sq_nonneg b), mul_nonneg hb (sq_nonneg c), mul_nonneg hc (sq_nonneg a)]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) :\n     a * b * c * (a + b + c) \u2265 0 \u2192 a ^ 3 * b + a ^ 3 * c + b ^ 3 * a + b ^ 3 * c + c ^ 3 * a + c ^ 3 * b \u2264 a ^ 4 + b ^ 4 + c ^ 4 + a * b * c * (a + b + c):= by\n  intro h\u2081\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_nonneg ha hb, mul_nonneg hb hc, mul_nonneg hc ha,\n    pow_two_nonneg (a + b + c), pow_two_nonneg (a + b - c), pow_two_nonneg (b + c - a),\n    pow_two_nonneg (c + a - b)]\n  <;> linarith\n  <;> nlinarith\n  <;> linarith\n  <;> nlinarith\n  <;> linarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) :\n     a * b * c * (a + b + c) \u2265 0 \u2192 a ^ 3 * b + a ^ 3 * c + b ^ 3 * a + b ^ 3 * c + c ^ 3 * a + c ^ 3 * b \u2264 a ^ 4 + b ^ 4 + c ^ 4 + a * b * c * (a + b + c):= by\n  intro h\u2080\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_nonneg ha hb, mul_nonneg hb hc, mul_nonneg hc ha, sq_nonneg (a - b - c), sq_nonneg (b - c - a), sq_nonneg (c - a - b)]\n  <;> try norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) :\n     a * b * c * (a + b + c) \u2265 0 \u2192 a ^ 3 * b + a ^ 3 * c + b ^ 3 * a + b ^ 3 * c + c ^ 3 * a + c ^ 3 * b \u2264 a ^ 4 + b ^ 4 + c ^ 4 + a * b * c * (a + b + c):= by\n  intro h\n  simp only [mul_assoc, add_assoc, add_left_comm, add_comm] at h \u22a2\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c), sq_nonneg (a - b - c),\n    sq_nonneg (b - a - c), sq_nonneg (c - a - b)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (h : a + b + c = 3) : -26244 / 3125 \u2264 (a - b * c) * (b ^ 2 - c * a) * (c - a * b) \u2227 (a - b * c) * (b ^ 2 - c * a) * (c - a * b) \u2264 30 * Real.sqrt 5 - 66 := by",
  "new": ": \u2200 a b c : \u211d, 0 \u2264 a \u2192 0 \u2264 b \u2192 0 \u2264 c \u2192 a + b + c = 3 \u2192 a ^ 2 * b ^ 2 * c ^ 2 + 9 * (a * b * c) * (a * b * c) \u2264 (a ^ 2 + b ^ 2 + c ^ 2) * (b ^ 2 + a ^ 2 + c ^ 2) * (c ^ 2 + a ^ 2 + b ^ 2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 a b c : \u211d, 0 \u2264 a \u2192 0 \u2264 b \u2192 0 \u2264 c \u2192 a + b + c = 3 \u2192\n    a ^ 2 * b ^ 2 * c ^ 2 + 9 * (a * b * c) * (a * b * c) \u2264\n        (a ^ 2 + b ^ 2 + c ^ 2) * (b ^ 2 + a ^ 2 + c ^ 2) * (c ^ 2 + a ^ 2 + b ^ 2):= by\n  rintro a b c h\u2081 h\u2082 h\u2083 h\u2084\n  simp_all only [mul_add, add_mul, mul_comm, mul_left_comm, mul_right_comm]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (a ^ 2 - c ^ 2), sq_nonneg (b ^ 2 - c ^ 2),\n    mul_nonneg (sq_nonneg a) (sq_nonneg b), mul_nonneg (sq_nonneg a) (sq_nonneg c),\n    mul_nonneg (sq_nonneg b) (sq_nonneg c)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 a b c : \u211d, 0 \u2264 a \u2192 0 \u2264 b \u2192 0 \u2264 c \u2192 a + b + c = 3 \u2192\n    a ^ 2 * b ^ 2 * c ^ 2 + 9 * (a * b * c) * (a * b * c) \u2264\n        (a ^ 2 + b ^ 2 + c ^ 2) * (b ^ 2 + a ^ 2 + c ^ 2) * (c ^ 2 + a ^ 2 + b ^ 2):= by\n  rintro a b c (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 3)\n  have : (a + b + c) ^ 2 = 9 := by rw [hab]; norm_num\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    mul_nonneg ha hb, mul_nonneg hb hc, mul_nonneg ha hc, mul_nonneg (sq_nonneg a) (sq_nonneg b),\n    mul_nonneg (sq_nonneg b) (sq_nonneg c), mul_nonneg (sq_nonneg c) (sq_nonneg a)]\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 a b c : \u211d, 0 \u2264 a \u2192 0 \u2264 b \u2192 0 \u2264 c \u2192 a + b + c = 3 \u2192\n    a ^ 2 * b ^ 2 * c ^ 2 + 9 * (a * b * c) * (a * b * c) \u2264\n        (a ^ 2 + b ^ 2 + c ^ 2) * (b ^ 2 + a ^ 2 + c ^ 2) * (c ^ 2 + a ^ 2 + b ^ 2):= by\n  rintro a b c ha hb hc habc\n  simp only [mul_assoc, mul_comm, mul_left_comm]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c), mul_nonneg ha hb, mul_nonneg ha hc, mul_nonneg hb hc, sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (a ^ 2 - c ^ 2), sq_nonneg (b ^ 2 - c ^ 2), mul_nonneg (sq_nonneg a) (sq_nonneg b), mul_nonneg (sq_nonneg a) (sq_nonneg c), mul_nonneg (sq_nonneg b) (sq_nonneg c)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : Real.sqrt ((a^2 * b + b^2 * c + c^2 * a) * (a * b^2 + b * c^2 + c * a^2)) \u2265 abc + (a^3 + a * b * c)^(1/3) * (b^3 + a * b * c)^(1/3) * (c^3 + a * b * c)^(1/3) := by",
  "new": "(ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : Real.sqrt ((a^2 * b + b^2 * c + c^2 * a) * (a * b^2 + b * c^2 + c * a^2)) \u2265 a * b * c := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n      Real.sqrt ((a^2 * b + b^2 * c + c^2 * a) * (a * b^2 + b * c^2 + c * a^2)) \u2265 a * b * c := by\n  have H\u2081 : 0 < a * b := by positivity\n  have H\u2082 : 0 < b * c := by positivity\n  have H\u2083 : 0 < c * a := by positivity\n  apply le_sqrt_of_sq_le\n  nlinarith [sq_nonneg (a^2 * b - b^2 * c), sq_nonneg (b^2 * c - c^2 * a), sq_nonneg (c^2 * a - a^2 * b),\n    sq_nonneg (a * b^2 - b * c^2), sq_nonneg (b * c^2 - c * a^2), sq_nonneg (c * a^2 - a * b^2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n      Real.sqrt ((a^2 * b + b^2 * c + c^2 * a) * (a * b^2 + b * c^2 + c * a^2)) \u2265 a * b * c := by\n  have h\u2080 : 0 \u2264 a * b * c := by positivity\n  apply le_sqrt_of_sq_le\n  nlinarith [sq_nonneg (a ^ 2 * b + b ^ 2 * c + c ^ 2 * a - a * b ^ 2 - b * c ^ 2 - c * a ^ 2),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le,\n    mul_nonneg (sq_nonneg (a - b)) hc.le, mul_nonneg (sq_nonneg (b - c)) ha.le, mul_nonneg (sq_nonneg (c - a)) hb.le]\n  <;> linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption"
  ]
 },
 {
  "old": "(a b c d : \u211d) : a^2 + b^2 + c^2 + d^2 + 4 * Real.sqrt (a * b * c * d) \u2265 2 * (a * b + b * c + c * d + d * a) := by",
  "new": ": Real.sqrt (a * b * c * d) \u2265 0 \u2227 Real.sqrt (a * b * c * d) \u2264 (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) / 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt (a * b * c * d) \u2265 0 \u2227\n    Real.sqrt (a * b * c * d) \u2264 (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) / 4:= by\n  refine \u27e8by positivity,?_\u27e9\n  have h\u2080 : 0 \u2264 (a - b) ^ 2 + (a - c) ^ 2 + (a - d) ^ 2 + (b - c) ^ 2 + (b - d) ^ 2 + (c - d) ^ 2 := by positivity\n  have h\u2081 : 0 \u2264 (a + b) ^ 2 + (a + c) ^ 2 + (a + d) ^ 2 + (b + c) ^ 2 + (b + d) ^ 2 + (c + d) ^ 2 := by positivity\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  \u00b7 positivity\n  \u00b7 nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt (a * b * c * d) \u2265 0 \u2227\n    Real.sqrt (a * b * c * d) \u2264 (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) / 4:= by\n  constructor\n  exact Real.sqrt_nonneg _\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  positivity\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a + b), sq_nonneg (a - c), sq_nonneg (a + c),\n    sq_nonneg (a - d), sq_nonneg (a + d), sq_nonneg (b - c), sq_nonneg (b + c),\n    sq_nonneg (b - d), sq_nonneg (b + d), sq_nonneg (c - d), sq_nonneg (c + d)]\n  <;> nlinarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt (a * b * c * d) \u2265 0 \u2227\n    Real.sqrt (a * b * c * d) \u2264 (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) / 4:= by\n  constructor\n  exact Real.sqrt_nonneg _\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  positivity\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a + b), sq_nonneg (a - c), sq_nonneg (a + c),\n    sq_nonneg (a - d), sq_nonneg (a + d), sq_nonneg (b - c), sq_nonneg (b + c),\n    sq_nonneg (b - d), sq_nonneg (b + d), sq_nonneg (c - d), sq_nonneg (c + d)]\n  <;> ring_nf\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 3) : a * Real.sqrt (b + c) + b * Real.sqrt (c + a) + c * Real.sqrt (a + b) \u2264 (3 / 2) * Real.sqrt (6 + 2 * a * b * c) := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : a * b ^ 2 + b * c ^ 2 + c * a ^ 2 \u2264 36 / 3 \u2227 a * b * c * (a + b + c) \u2264 36 / 3 * (a * b * c):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) :\n       a * b ^ 2 + b * c ^ 2 + c * a ^ 2 \u2264 36 / 3 \u2227\n       a * b * c * (a + b + c) \u2264 36 / 3 * (a * b * c):= by\n  have : 0 < a * b := by positivity\n  have : 0 < b * c := by positivity\n  have : 0 < c * a := by positivity\n  have : 0 < a * b * c := by positivity\n  constructor\n  \u00b7 nlinarith [pow_two (a - b), pow_two (b - c), pow_two (c - a)]\n  \u00b7 nlinarith [pow_two (a - b), pow_two (b - c), pow_two (c - a)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) :\n       a * b ^ 2 + b * c ^ 2 + c * a ^ 2 \u2264 36 / 3 \u2227\n       a * b * c * (a + b + c) \u2264 36 / 3 * (a * b * c):= by\n  constructor\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_pos ha hb, mul_pos hb hc, mul_pos hc ha,\n    mul_pos (mul_pos ha hb) hc, mul_pos (mul_pos hb hc) ha, mul_pos (mul_pos hc ha) hb]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_pos ha hb, mul_pos hb hc, mul_pos hc ha,\n    mul_pos (mul_pos ha hb) hc, mul_pos (mul_pos hb hc) ha, mul_pos (mul_pos hc ha) hb]\n  <;> linarith\n  <;> norm_num"
  ]
 },
 {
  "old": ": (2:\u211d)^(0.1:\u211d) > 1.05 := by",
  "new": ": Real.sqrt 2 * Real.sqrt 2 ^ 3 \u2264 10 \u2194 Real.sqrt 2 ^ 3 \u2264 10 / Real.sqrt 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem euler_2016_2_1_2 :\n    Real.sqrt 2 * Real.sqrt 2 ^ 3 \u2264 10 \u2194 Real.sqrt 2 ^ 3 \u2264 10 / Real.sqrt 2:= by\n  constructor\n  intro h\n  have h\u2081 : 0 < Real.sqrt 2 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2082 : Real.sqrt 2 ^ 3 \u2264 10 / Real.sqrt 2 := by\n    rw [le_div_iff h\u2081]\n    nlinarith [sq_sqrt (show 0 \u2264 2 from by norm_num)]\n  exact h\u2082\n  intro h\n  have h\u2081 : 0 < Real.sqrt 2 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2082 : Real.sqrt 2 ^ 3 \u2264 10 / Real.sqrt 2 := h\n  rw [mul_comm]\n  rw [\u2190 sub_nonneg]\n  field_simp [h\u2081] at h\u2082 \u22a2\n  nlinarith [sq_sqrt (show 0 \u2264 2 from by norm_num)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a + b + c) * (a ^ 2 + b ^ 2 + c ^ 2) \u2265 3 * a * b * c * (a / b + b / c + c / a) := by",
  "new": ": \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 (a + b + c) * (a ^ 2 + b ^ 2 + c ^ 2) \u2265 3 * a * b * c * (a / b + b / c + c / a):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 (a + b + c) * (a ^ 2 + b ^ 2 + c ^ 2) \u2265 3 * a * b * c * (a / b + b / c + c / a):= by\n  rintro a b c \u27e8a_pos, b_pos, c_pos\u27e9\n  have h1 : 0 < a * b := mul_pos a_pos b_pos\n  have h2 : 0 < b * c := mul_pos b_pos c_pos\n  have h3 : 0 < c * a := mul_pos c_pos a_pos\n  have h4 : 0 < a * b * c := by positivity\n  have h5 : a * b * c * (a / b + b / c + c / a) = a ^ 2 * c + b ^ 2 * a + c ^ 2 * b := by\n    field_simp [h1, h2, h3, h4]\n    ring\n  nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 (a + b + c) * (a ^ 2 + b ^ 2 + c ^ 2) \u2265 3 * a * b * c * (a / b + b / c + c / a):= by\n  rintro a b c \u27e8a_pos, b_pos, c_pos\u27e9\n  have h1 : 0 < a * b := by positivity\n  have h2 : 0 < b * c := by positivity\n  have h3 : 0 < c * a := by positivity\n  have h4 : 0 < a * b * c := by positivity\n  have h5 : 0 < a * b * c * a := by positivity\n  have h6 : 0 < a * b * c * b := by positivity\n  have h7 : 0 < a * b * c * c := by positivity\n  field_simp [h1, h2, h3, h4, h5, h6, h7]\n  rw [div_le_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 (a + b + c) * (a ^ 2 + b ^ 2 + c ^ 2) \u2265 3 * a * b * c * (a / b + b / c + c / a):= by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  have h\u2081 : 0 < a * b := mul_pos ha hb\n  have h\u2082 : 0 < b * c := mul_pos hb hc\n  have h\u2083 : 0 < c * a := mul_pos hc ha\n  have h\u2084 : 0 < a * b * c := by positivity\n  have h\u2085 : 0 < a * b * c * a := by positivity\n  have h\u2086 : 0 < a * b * c * b := by positivity\n  have h\u2087 : 0 < a * b * c * c := by positivity\n  have h\u2088 : 0 < a * b * c * a * b := by positivity\n  have h\u2089 : 0 < a * b * c * a * c := by positivity\n  have h\u2081\u2080 : 0 < a * b * c * b * c := by positivity\n  have h\u2081\u2081 : 0 < a * b * c * a * b * c := by positivity\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087, h\u2088, h\u2089, h\u2081\u2080, h\u2081\u2081]\n  rw [div_le_iff (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a),\n    mul_self_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 (a + b + c) * (a ^ 2 + b ^ 2 + c ^ 2) \u2265 3 * a * b * c * (a / b + b / c + c / a):= by\n  intro a b c h\u2080\n  obtain \u27e8h\u2081, h\u2082, h\u2083\u27e9 := h\u2080\n  have h\u2084 : 0 < b * c := by positivity\n  have h\u2085 : 0 < c * a := by positivity\n  have h\u2086 : 0 < a * b := by positivity\n  have h\u2087 : 0 < a * b * c := by positivity\n  have h\u2088 : 0 < a * b * c * a := by positivity\n  have h\u2089 : 0 < a * b * c * b := by positivity\n  have h\u2081\u2080 : 0 < a * b * c * c := by positivity\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087, h\u2088, h\u2089, h\u2081\u2080]\n  rw [div_le_iff, mul_comm]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b)]\n  positivity\n  <;> nlinarith\n  <;> assumption"
  ]
 },
 {
  "old": "{a b : \u2115} (h : b \u2260 0) : a \u2223 b \u2192 a \u2223 b * a := by",
  "new": "(h : 0 < a \u2227 0 < b) : Nat.Coprime a b \u2192 Nat.Coprime (a / Nat.gcd a b) (b / Nat.gcd a b):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_cancel_left_div_gcd (h : 0 < a \u2227 0 < b) :\n    Nat.Coprime a b \u2192 Nat.Coprime (a / Nat.gcd a b) (b / Nat.gcd a b):= by\n  rintro h1\n  rw [Nat.coprime_iff_gcd_eq_one] at h1 \u22a2\n  simp [h1, h.1.ne', h.2.ne']",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_cancel_left_div_gcd (h : 0 < a \u2227 0 < b) :\n    Nat.Coprime a b \u2192 Nat.Coprime (a / Nat.gcd a b) (b / Nat.gcd a b):= by\n  intro h1\n  have h2 : 0 < a := h.1\n  have h3 : 0 < b := h.2\n  rw [Nat.coprime_iff_gcd_eq_one] at h1 \u22a2\n  simp [h1, Nat.gcd_div (Nat.gcd_dvd_left a b) (Nat.gcd_dvd_right a b), h2, h3]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_cancel_left_div_gcd (h : 0 < a \u2227 0 < b) :\n    Nat.Coprime a b \u2192 Nat.Coprime (a / Nat.gcd a b) (b / Nat.gcd a b):= by\n  intro h1\n  rw [Nat.coprime_iff_gcd_eq_one] at h1 \u22a2\n  simp_all [Nat.gcd_div]"
  ]
 },
 {
  "old": "(n : \u2115) : \u2211 i in Finset.range (n+1), i = (n + 1).choose 2 := by",
  "new": ": \u2200 m : \u2115, (\u2211 i in Finset.range (m + 1), i) \u2260 0 \u2192 \u2203 k : \u2115, (\u2211 i in Finset.range (m + 1), i) \u2260 k * (m + 1):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_part_ge_body : \u2200 m : \u2115, (\u2211 i in Finset.range (m + 1), i) \u2260 0 \u2192\n    \u2203 k : \u2115, (\u2211 i in Finset.range (m + 1), i) \u2260 k * (m + 1):= by\n  intro m h\n  use 0\n  simp [h]\n  <;> aesop\n  <;> aesop\n  <;> aesop"
  ]
 },
 {
  "old": ": \u2200 x y z : \u211d, x + y + z = 1 \u2227 x >= 0 \u2227 y >= 0 \u2227 z >= 0 \u2192 7 / 3 >= (1 - x) / (1 - y * z) + (1 - y) / (1 - z * x) + (1 - z) / (1 - x * y) \u2227 (1 - x) / (1 - y * z) + (1 - y) / (1 - z * x) + (1 - z) / (1 - x * y) >= 2 := by",
  "new": "(x y z : \u211d) (h\u2081 : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z) (h\u2082 : x + y + z \u2264 1) : (1 - x) / (1 - y * z) + (1 - y) / (1 - z * x) + (1 - z) / (1 - x * y) \u2265 4 / 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_x1y2z3 (x y z : \u211d) (h\u2081 : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z) (h\u2082 : x + y + z \u2264 1)  : (1 - x) / (1 - y * z) + (1 - y) / (1 - z * x) + (1 - z) / (1 - x * y) \u2265 4 / 3:= by\n  rcases h\u2081 with \u27e8h\u2081, h\u2082, h\u2083\u27e9\n  have h\u2084 : 0 \u2264 x * y := by positivity\n  have h\u2085 : 0 \u2264 y * z := by positivity\n  have h\u2086 : 0 \u2264 z * x := by positivity\n  have h\u2087 : 1 - y * z \u2265 0 := by nlinarith\n  have h\u2088 : 1 - z * x \u2265 0 := by nlinarith\n  have h\u2089 : 1 - x * y \u2265 0 := by nlinarith\n  have h\u2081\u2080 : (1 - x) / (1 - y * z) \u2265 1 - x := by\n    rw [ge_iff_le, le_div_iff (by nlinarith)]\n    nlinarith\n  have h\u2081\u2081 : (1 - y) / (1 - z * x) \u2265 1 - y := by\n    rw [ge_iff_le, le_div_iff (by nlinarith)]\n    nlinarith\n  have h\u2081\u2082 : (1 - z) / (1 - x * y) \u2265 1 - z := by\n    rw [ge_iff_le, le_div_iff (by nlinarith)]\n    nlinarith\n  nlinarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_x1y2z3 (x y z : \u211d) (h\u2081 : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z) (h\u2082 : x + y + z \u2264 1)  : (1 - x) / (1 - y * z) + (1 - y) / (1 - z * x) + (1 - z) / (1 - x * y) \u2265 4 / 3:= by\n  rcases h\u2081 with \u27e8h\u2081_x, h\u2081_y, h\u2081_z\u27e9\n  have h\u2083 : (x + y + z) ^ 2 \u2264 1 := by nlinarith\n  have h\u2084 : 0 \u2264 x * y := by nlinarith\n  have h\u2085 : 0 \u2264 x * z := by nlinarith\n  have h\u2086 : 0 \u2264 y * z := by nlinarith\n  have h\u2087 : (1 - x) / (1 - y * z) \u2265 1 - x := by\n    rw [ge_iff_le]\n    rw [le_div_iff] <;>\n    nlinarith\n  have h\u2088 : (1 - y) / (1 - z * x) \u2265 1 - y := by\n    rw [ge_iff_le]\n    rw [le_div_iff] <;>\n    nlinarith\n  have h\u2089 : (1 - z) / (1 - x * y) \u2265 1 - z := by\n    rw [ge_iff_le]\n    rw [le_div_iff] <;>\n    nlinarith\n  nlinarith\n  <;>\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_x1y2z3 (x y z : \u211d) (h\u2081 : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z) (h\u2082 : x + y + z \u2264 1)  : (1 - x) / (1 - y * z) + (1 - y) / (1 - z * x) + (1 - z) / (1 - x * y) \u2265 4 / 3:= by\n  have h\u2083 : 0 \u2264 x * y := by nlinarith\n  have h\u2084 : 0 \u2264 y * z := by nlinarith\n  have h\u2085 : 0 \u2264 z * x := by nlinarith\n  have h\u2086 : 0 \u2264 x * y * z := by nlinarith\n  have h\u2087 : 1 - y * z \u2265 0 := by nlinarith\n  have h\u2088 : 1 - z * x \u2265 0 := by nlinarith\n  have h\u2089 : 1 - x * y \u2265 0 := by nlinarith\n  have h\u2081\u2080 : 1 - y * z \u2260 0 := by nlinarith\n  have h\u2081\u2081 : 1 - z * x \u2260 0 := by nlinarith\n  have h\u2081\u2082 : 1 - x * y \u2260 0 := by nlinarith\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y)]"
  ]
 },
 {
  "old": "(n : \u2124) : Even (n^2 - n) := by",
  "new": "(n : \u2124) : Even (n^2 - 2) \u2194 Even n := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem even_square_sub_two (n : \u2124) : Even (n^2 - 2) \u2194 Even n := by\n  cases' Int.even_or_odd n with h h <;> simp [h, Int.even_sub, Int.even_mul, Int.even_pow]\n  all_goals norm_num\n  <;> tauto\n  <;> norm_num\n  <;> tauto\n  <;> norm_num\n  <;> tauto\n  <;> norm_num\n  <;> tauto",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem even_square_sub_two (n : \u2124) : Even (n^2 - 2) \u2194 Even n := by\n  constructor <;> intro h <;>\n  simp only [Int.even_sub, Int.even_pow, Int.even_mul, Int.even_mul, Int.even_sub, Int.even_pow,\n    Int.even_mul, Int.even_mul] at * <;>\n  aesop\n  <;>\n  aesop\n  <;>\n  aesop\n  <;>\n  aesop\n  <;>\n  aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem even_square_sub_two (n : \u2124) : Even (n^2 - 2) \u2194 Even n := by\n  cases' Int.even_or_odd n with h h <;> simp_all [Int.even_pow, Int.even_sub, Int.even_mul, Int.even_add]"
  ]
 },
 {
  "old": ": \u2200 x : \u2124, IsUnit x \u2194 x = 1 \u2228 x = -1 := by",
  "new": "(x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y) := by\n  have := em (Nat.Coprime x y)\n  tauto",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y) := by\n  apply em\n  <;> simp [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y) := by\n  cases Classical.em (Nat.Coprime x y) <;> simp [*]\n  <;> tauto\n  <;> tauto\n  <;> tauto",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y) := by\n  by_cases h : x.Coprime y\n  case pos => exact Or.inl h\n  case neg => exact Or.inr h"
  ]
 },
 {
  "old": "(\u03b8 : \u211d) : \u03b8 ^ 2 / 2 = \u2211' n : \u2115, (4 : \u211d) ^ (n - 1) / ((n : \u211d) ^ 2 * (2 * n).choose n) * sin (\u03b8) ^ (2 * n) := by",
  "new": "(n : \u2115) (hn : 0 < n) : (n : \u211d) ^ (2 * n) * (2 * n : \u211d) ^ (2 * n) \u2265 (n : \u211d) ^ (2 * n) * (2 * n : \u211d) ^ (2 * n - 1):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_22616 (n : \u2115) (hn : 0 < n) : (n : \u211d) ^ (2 * n) * (2 * n : \u211d) ^ (2 * n) \u2265 (n : \u211d) ^ (2 * n) * (2 * n : \u211d) ^ (2 * n - 1):= by\n  exact\n    calc\n      (n : \u211d) ^ (2 * n) * (2 * n : \u211d) ^ (2 * n) \u2265 (n : \u211d) ^ (2 * n) * (2 * n : \u211d) ^ (2 * n - 1) := by\n        exact mul_le_mul_of_nonneg_left (by\n          norm_cast\n          exact pow_le_pow_right (by linarith) (by omega)) (by positivity)\n      _ = (n : \u211d) ^ (2 * n) * (2 * n : \u211d) ^ (2 * n - 1) := by norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_22616 (n : \u2115) (hn : 0 < n) : (n : \u211d) ^ (2 * n) * (2 * n : \u211d) ^ (2 * n) \u2265 (n : \u211d) ^ (2 * n) * (2 * n : \u211d) ^ (2 * n - 1):= by\n  cases' n with n\n  exfalso\n  exact Nat.lt_asymm hn hn\n  simp [Nat.succ_eq_add_one, add_comm]\n  <;> norm_cast\n  <;> gcongr\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a \u2208 Set.Icc 0 1) (hb : b \u2208 Set.Icc 0 1) (hc : c \u2208 Set.Icc 0 1) : a / (b * c + 1) + b / (c * a + 1) + c / (a * b + 1) \u2264 2 - 2 * (1 - a) * (1 - b) * (1 - c) := by",
  "new": "(a b c : \u211d) (ha : a \u2208 Set.Icc 0 1) (hb : b \u2208 Set.Icc 0 1) (hc : c \u2208 Set.Icc 0 1) (hab : a + b + c = 1) : a * b * (a * c) + a * b * (b * c) + a * c * (b * c) \u2264 a * b + b * c + c * a:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (ha : a \u2208 Set.Icc 0 1) (hb : b \u2208 Set.Icc 0 1) (hc : c \u2208 Set.Icc 0 1) (hab : a + b + c = 1) : a * b * (a * c) + a * b * (b * c) + a * c * (b * c) \u2264 a * b + b * c + c * a:= by\n  cases' ha with ha\u2081 ha\u2082\n  cases' hb with hb\u2081 hb\u2082\n  cases' hc with hc\u2081 hc\u2082\n  have h\u2080 : 0 \u2264 a * b := by nlinarith\n  have h\u2081 : 0 \u2264 a * c := by nlinarith\n  have h\u2082 : 0 \u2264 b * c := by nlinarith\n  have h\u2083 : 0 \u2264 a * b * c := by nlinarith\n  nlinarith [mul_le_mul_of_nonneg_left (by nlinarith : a \u2264 1) h\u2082,\n    mul_le_mul_of_nonneg_left (by nlinarith : b \u2264 1) h\u2081,\n    mul_le_mul_of_nonneg_left (by nlinarith : c \u2264 1) h\u2080]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (ha : a \u2208 Set.Icc 0 1) (hb : b \u2208 Set.Icc 0 1) (hc : c \u2208 Set.Icc 0 1) (hab : a + b + c = 1) : a * b * (a * c) + a * b * (b * c) + a * c * (b * c) \u2264 a * b + b * c + c * a:= by\n  rcases ha with \u27e8ha_left, ha_right\u27e9\n  rcases hb with \u27e8hb_left, hb_right\u27e9\n  rcases hc with \u27e8hc_left, hc_right\u27e9\n  have : a * b * (a * c) + a * b * (b * c) + a * c * (b * c) \u2264 a * b + b * c + c * a := by\n    nlinarith [mul_nonneg (sub_nonneg.mpr ha_left) (sub_nonneg.mpr hb_left), mul_nonneg (sub_nonneg.mpr ha_left) (sub_nonneg.mpr hc_left), mul_nonneg (sub_nonneg.mpr hb_left) (sub_nonneg.mpr hc_left), mul_nonneg (sub_nonneg.mpr ha_right) (sub_nonneg.mpr hb_right), mul_nonneg (sub_nonneg.mpr ha_right) (sub_nonneg.mpr hc_right), mul_nonneg (sub_nonneg.mpr hb_right) (sub_nonneg.mpr hc_right), mul_nonneg (sub_nonneg.mpr ha_left) (sub_nonneg.mpr hb_right), mul_nonneg (sub_nonneg.mpr ha_left) (sub_nonneg.mpr hc_right), mul_nonneg (sub_nonneg.mpr hb_right) (sub_nonneg.mpr ha_right)]\n  exact this"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (hab : a * b + b * c + c * a = 1) : 1 / (a + b) + 1 / (b + c) + 1 / (c + a) \u2265 4 / (a + b + c - a * b * c) := by",
  "new": "(x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (hab : 0 \u2264 a) (hbc : 0 \u2264 b) (hca : 0 \u2264 c) (h : x * y + y * z + z * x = 1) : 1 / (x + y) + 1 / (y + z) + 1 / (z + x) \u2265 4 / (x + y + z - x * y * z) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (hab : 0 \u2264 a) (hbc : 0 \u2264 b) (hca : 0 \u2264 c) (h : x * y + y * z + z * x = 1) : 1 / (x + y) + 1 / (y + z) + 1 / (z + x) \u2265 4 / (x + y + z - x * y * z)  := by\n  have h\u2081 : 0 \u2264 x * y := by positivity\n  have h\u2082 : 0 \u2264 y * z := by positivity\n  have h\u2083 : 0 \u2264 z * x := by positivity\n  have h\u2084 : 0 \u2264 x * y * z := by positivity\n  have h\u2085 : 0 < x + y := by\n    nlinarith\n  have h\u2086 : 0 < y + z := by\n    nlinarith\n  have h\u2087 : 0 < z + x := by\n    nlinarith\n  have h\u2088 : 0 < x + y + z - x * y * z := by\n    nlinarith\n  field_simp\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x * y + y * z + z * x),\n    mul_self_nonneg (x * y - y * z), mul_self_nonneg (y * z - z * x), mul_self_nonneg (z * x - x * y)]\n  positivity\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (hab : 0 \u2264 a) (hbc : 0 \u2264 b) (hca : 0 \u2264 c) (h : x * y + y * z + z * x = 1) : 1 / (x + y) + 1 / (y + z) + 1 / (z + x) \u2265 4 / (x + y + z - x * y * z)  := by\n  have h\u2081 : 0 \u2264 x * y := by positivity\n  have h\u2082 : 0 \u2264 y * z := by positivity\n  have h\u2083 : 0 \u2264 z * x := by positivity\n  have h\u2084 : 0 \u2264 x * y * z := by positivity\n  have h\u2085 : 0 < x + y := by\n    nlinarith\n  have h\u2086 : 0 < y + z := by\n    nlinarith\n  have h\u2087 : 0 < z + x := by\n    nlinarith\n  have h\u2088 : 0 < x + y + z - x * y * z := by\n    nlinarith\n  field_simp [h\u2085, h\u2086, h\u2087, h\u2088]\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x * y + y * z + z * x), mul_self_nonneg (x * y - y * z),\n    mul_self_nonneg (y * z - z * x), mul_self_nonneg (z * x - x * y)]\n  positivity\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (hab : 0 \u2264 a) (hbc : 0 \u2264 b) (hca : 0 \u2264 c) (h : x * y + y * z + z * x = 1) : 1 / (x + y) + 1 / (y + z) + 1 / (z + x) \u2265 4 / (x + y + z - x * y * z)  := by\n  have h\u2080 : 0 \u2264 x * y := by positivity\n  have h\u2081 : 0 \u2264 y * z := by positivity\n  have h\u2082 : 0 \u2264 z * x := by positivity\n  have h\u2083 : 0 \u2264 x * y * z := by positivity\n  have h\u2084 : 0 < x + y := by\n    nlinarith\n  have h\u2085 : 0 < y + z := by\n    nlinarith\n  have h\u2086 : 0 < z + x := by\n    nlinarith\n  have h\u2087 : 0 < x + y + z - x * y * z := by\n    nlinarith\n  field_simp [h\u2084, h\u2085, h\u2086, h\u2087]\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y)]\n  positivity\n  positivity"
  ]
 },
 {
  "old": "(p : \u211d) (hp : 0 \u2264 p \u2227 p \u2264 1) : 1 - p \u2264 e^(-p) := by",
  "new": "(a : \u211d) (ha : 0 < a) (t : \u211d) (ht : 0 < t) : (1 - 2 * Real.exp (-(a * t))) ^ 2 \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem energy_double_aux1 (a : \u211d) (ha : 0 < a) (t : \u211d) (ht : 0 < t) :\n   (1 - 2 * Real.exp (-(a * t))) ^ 2 \u2264 1:= by\n  have h1 : Real.exp (-(a * t)) \u2265 0 := Real.exp_nonneg _\n  have h2 : Real.exp (-(a * t)) \u2264 1 := Real.exp_le_one_iff.2 (by\n    exact neg_nonpos.2 (by nlinarith))\n  nlinarith [pow_two_nonneg (1 - Real.exp (-(a * t)))]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem energy_double_aux1 (a : \u211d) (ha : 0 < a) (t : \u211d) (ht : 0 < t) :\n   (1 - 2 * Real.exp (-(a * t))) ^ 2 \u2264 1:= by\n  have ht' : 0 < Real.exp (-(a * t)) := Real.exp_pos (-(a * t))\n  have ht'' : Real.exp (-(a * t)) < 1 := Real.exp_lt_one_iff.mpr (by nlinarith)\n  nlinarith [sq_nonneg (Real.exp (-(a * t)) - 1 / 2)]\n  <;> assumption\n  <;> linarith\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : (9 / 16) * (a + b + c + d) ^ 2 + (3 * (a * b * c + b * c * d + c * d * a + d * a * b)) / (a + b + c + d) \u2265 2 * (a * b + a * c + a * d + b * c + b * d + c * d) := by",
  "new": ": \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192 9 / 16 * (a + b + c + d) ^ 2 + (3 * (a * b * c + b * c * d + c * d * a + d * a * b)) / (a + b + c + d) \u2265 2 * (a * b + a * c + a * d + b * c + b * d + c * d) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192\n   9 / 16 * (a + b + c + d) ^ 2 + (3 * (a * b * c + b * c * d + c * d * a + d * a * b)) / (a + b + c + d) \u2265\n   2 * (a * b + a * c + a * d + b * c + b * d + c * d)  := by\n  rintro a b c d (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d)\n  field_simp [add_pos, mul_pos, ha, hb, hc, hd]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (a - d), sq_nonneg (b - c),\n    sq_nonneg (b - d), sq_nonneg (c - d), mul_nonneg ha.le hb.le, mul_nonneg ha.le hc.le,\n    mul_nonneg ha.le hd.le, mul_nonneg hb.le hc.le, mul_nonneg hb.le hd.le, mul_nonneg hc.le hd.le]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 3) : a^2 * b + a^2 * c + b^2 * a + b^2 * c + c^2 * a + c^2 * b \u2265 a^3 + b^3 + c^3 + 2 * a * b * c + a^2 * b^2 * c^2 := by",
  "new": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 3) : \u2211 k in (Finset.Icc 1 3), (a + b + c) ^ 3 \u2265 3 * (a ^ 2 * b + a ^ 2 * c + b ^ 2 * a + b ^ 2 * c + c ^ 2 * a + c ^ 2 * b) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 3) : \u2211 k in (Finset.Icc 1 3), (a + b + c) ^ 3 \u2265 3 * (a ^ 2 * b + a ^ 2 * c + b ^ 2 * a + b ^ 2 * c + c ^ 2 * a + c ^ 2 * b)  := by\n  have h\u2081 : (a + b + c) ^ 3 = 3 ^ 3 := by rw [habc]\n  rw [h\u2081]\n  simp [Finset.sum_Icc_succ_top]\n  nlinarith [mul_nonneg ha hb, mul_nonneg ha hc, mul_nonneg hb hc,\n    mul_nonneg (sq_nonneg (a + b + c)) (sq_nonneg (b + c + a + c + b + a))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 3) : \u2211 k in (Finset.Icc 1 3), (a + b + c) ^ 3 \u2265 3 * (a ^ 2 * b + a ^ 2 * c + b ^ 2 * a + b ^ 2 * c + c ^ 2 * a + c ^ 2 * b)  := by\n  simp only [habc, pow_three]\n  norm_num\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c), mul_nonneg ha hb, mul_nonneg ha hc, mul_nonneg hb hc]"
  ]
 },
 {
  "old": "(n : \u2115) (a : Fin n \u2192 \u211d) (h : \u220f i, a i = 1) : \u2203 i j, i \u2260 j \u2227 a i = a j := by",
  "new": "{n : \u2115} {f : Fin n \u2192 \u2115} (hf : \u2200 i, Nat.Prime (f i)) (hfd : \u2200 i j, i \u2260 j \u2192 f i \u2260 f j) : (\u2200 i j : Fin n, i \u2260 j \u2192 Nat.Coprime (f i) (f j)) \u2228 (\u2203 p : \u2115, \u2200 i : Fin n, p \u2223 f i) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_same_dvd_of_prime_all_different {n : \u2115} {f : Fin n \u2192 \u2115} (hf : \u2200 i, Nat.Prime (f i))\n  (hfd : \u2200 i j, i \u2260 j \u2192 f i \u2260 f j) : (\u2200 i j : Fin n, i \u2260 j \u2192 Nat.Coprime (f i) (f j)) \u2228 (\u2203 p : \u2115, \u2200 i : Fin n, p \u2223 f i)  := by\n  right\n  use 1\n  intro i\n  simp [Nat.prime_iff] at hf\n  simp [hf]"
  ]
 },
 {
  "old": "(f : \u2124 \u2192 \u2124):(\u2200 x y z:\u2124, f (x^3+y^3+z^3) = (f x)^3+(f y)^3+(f z)^3) \u2194 \u2203 a:\u2124, \u2200 x:\u2124, f x = a * x := by",
  "new": "(f : \u2124 \u2192+* \u2124) (h : \u2200 x y z : \u2124, f (x^3 + y^3 + z^3) = (f x)^3 + (f y)^3 + (f z)^3) : \u2203 a : \u2124, \u2200 x : \u2124, f x = a * x:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem ring_hom_eq_smul_id (f : \u2124 \u2192+* \u2124) (h : \u2200 x y z : \u2124, f (x^3 + y^3 + z^3) = (f x)^3 + (f y)^3 + (f z)^3) : \u2203 a : \u2124, \u2200 x : \u2124, f x = a * x:= by\n  refine \u27e8f 1, fun x \u21a6 ?_\u27e9\n  have h1 := h x 0 0\n  have h2 := h 1 1 x\n  have h3 := h (-1) 1 x\n  have h4 := h 1 0 0\n  have h5 := h (-1) 0 0\n  have h6 := h 0 0 0\n  simp at h1 h2 h3 h4 h5 h6\n  simp_all [mul_one, mul_zero, add_zero, zero_add, mul_neg, neg_mul, neg_neg, mul_assoc]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem ring_hom_eq_smul_id (f : \u2124 \u2192+* \u2124) (h : \u2200 x y z : \u2124, f (x^3 + y^3 + z^3) = (f x)^3 + (f y)^3 + (f z)^3) : \u2203 a : \u2124, \u2200 x : \u2124, f x = a * x:= by\n  refine \u27e81, fun x \u21a6 ?_\u27e9\n  have h\u2081 := h 0 0 0\n  have h\u2082 := h 1 1 1\n  have h\u2083 := h 2 2 2\n  ring_nf at h\u2081 h\u2082 h\u2083 \u22a2\n  simp_all"
  ]
 },
 {
  "old": ": \u00ac (\u2203 a b : \u2124, a^4 + b^4 + a * b^3 + 1 = 4 * a^2 * b^2 + a^3 * b) := by",
  "new": "(i : \u2115) (hi : \u2203 j, 0 < j \u2227 (1 : \u2115) < j \u2227 j^2 \u2264 i) (h : \u2203 a b : \u2115, a * b = i \u2227 a^2 \u2264 i \u2227 b^2 \u2264 i \u2227 a \u2260 b) : (Nat.Coprime i (i - 1)) \u2228 (i - 1 = 1):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : \u2203 j, 0 < j \u2227 (1 : \u2115) < j \u2227 j^2 \u2264 i) (h : \u2203 a b : \u2115, a * b = i \u2227 a^2 \u2264 i \u2227 b^2 \u2264 i \u2227 a \u2260 b) : (Nat.Coprime i (i - 1)) \u2228 (i - 1 = 1):= by\n  obtain \u27e8a, b, hab, ha, hb, hne\u27e9 := h\n  have : i - 1 = 1 := by\n    cases' i with i\n    \u00b7 simp_all\n    \u00b7 rcases hi with \u27e8j, hj\u2080, hj\u2081, hj\u2082\u27e9\n      rcases lt_trichotomy a b with (h | h | h) <;> simp_all [sq, mul_comm, mul_left_comm, mul_assoc,\n        Nat.mul_sub_left_distrib, Nat.mul_sub_right_distrib]\n      all_goals nlinarith\n  simp_all\n  <;> omega"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : (a / (a + b) + b / (b + c) + c / (c + d) + d / (d + a) + a / (c + a) + b / (b + d)) * (b / (a + b) + c / (b + c) + d / (c + d) + a / (d + a) + c / (c + a) + d / (b + d)) \u2265 5 + 128 * (a * b * c * d * (a * c + b * d)) / ((a + b) * (b + c) * (c + d) * (d + a) * (c + a) * (b + d)) := by",
  "new": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : a / b + b / c + c / d + d / a \u2265 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : \n  a / b + b / c + c / d + d / a \u2265 4:= by\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * d := by positivity\n  have h\u2083 : 0 < d * a := by positivity\n  have h\u2084 : 0 < b * d := by positivity\n  have h\u2085 : 0 < a * b := by positivity\n  have h\u2086 : 0 < b * c * d := by positivity\n  have h\u2087 : 0 < c * d * a := by positivity\n  have h\u2088 : 0 < d * a * b := by positivity\n  have h\u2089 : 0 < a * b * c := by positivity\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087, h\u2088, h\u2089]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - d), sq_nonneg (d - a),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le hd.le, mul_nonneg hd.le ha.le,\n    mul_nonneg (sq_nonneg (a - b)) hd.le, mul_nonneg (sq_nonneg (b - c)) ha.le,\n    mul_nonneg (sq_nonneg (c - d)) hb.le, mul_nonneg (sq_nonneg (d - a)) hc.le]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : \n  a / b + b / c + c / d + d / a \u2265 4:= by\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * d := by positivity\n  have h\u2083 : 0 < d * a := by positivity\n  have h\u2084 : 0 < a * b := by positivity\n  have h\u2085 : 0 < b * d := by positivity\n  have h\u2086 : 0 < c * a := by positivity\n  have h\u2087 : 0 < d * b := by positivity\n  have h\u2088 : 0 < a * c := by positivity\n  have h\u2089 : 0 < b * c * d := by positivity\n  have h\u2081\u2080 : 0 < c * d * a := by positivity\n  have h\u2081\u2081 : 0 < d * a * b := by positivity\n  have h\u2081\u2082 : 0 < a * b * c := by positivity\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087, h\u2088, h\u2089, h\u2081\u2080, h\u2081\u2081, h\u2081\u2082]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - d), sq_nonneg (d - a),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le hd.le, mul_nonneg hd.le ha.le,\n    mul_nonneg (sq_nonneg (a - b)) hd.le, mul_nonneg (sq_nonneg (b - c)) ha.le, mul_nonneg (sq_nonneg (c - d)) hb.le,\n    mul_nonneg (sq_nonneg (d - a)) hc.le]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : \n  a / b + b / c + c / d + d / a \u2265 4:= by\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * d := by positivity\n  have h\u2083 : 0 < d * a := by positivity\n  have h\u2084 : 0 < a * b := by positivity\n  have h\u2085 : 0 < b * d := by positivity\n  have h\u2086 : 0 < c * a := by positivity\n  have h\u2087 : 0 < d * c := by positivity\n  have h\u2088 : 0 < a * d := by positivity\n  have h\u2089 : 0 < b * c * d := by positivity\n  have h\u2081\u2080 : 0 < c * d * a := by positivity\n  have h\u2081\u2081 : 0 < d * a * b := by positivity\n  have h\u2081\u2082 : 0 < a * b * c := by positivity\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087, h\u2088, h\u2089, h\u2081\u2080, h\u2081\u2081, h\u2081\u2082]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - d), sq_nonneg (d - a),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le hd.le, mul_nonneg hd.le ha.le,\n    mul_nonneg (sq_nonneg (a - b)) hd.le, mul_nonneg (sq_nonneg (b - c)) ha.le,\n    mul_nonneg (sq_nonneg (c - d)) hb.le, mul_nonneg (sq_nonneg (d - a)) hc.le]"
  ]
 },
 {
  "old": "(A B C : \u211d) (hA : 0 < A \u2227 A <= \u03c0 \u2227 B <= \u03c0 \u2227 C <= \u03c0) (hA1 : A + B + C = \u03c0) : (cos (A / 2))^3 + (cos (B / 2))^3 + (cos (C / 2))^3 \u2264 (9 * Real.sqrt 3) / 8 := by",
  "new": ": Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) + 1 \u2264 4 * Real.sqrt 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) + 1 \u2264 4 * Real.sqrt 3:= by\n  have : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg 3\n  have h\u2080 : Real.sqrt 2 \u2265 0 := Real.sqrt_nonneg 2\n  have h\u2081 : Real.sqrt (Real.sqrt 2 + 1) \u2265 0 := Real.sqrt_nonneg (Real.sqrt 2 + 1)\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 2 by norm_num),\n    sq_sqrt (show (0 : \u211d) \u2264 Real.sqrt 2 + 1 by nlinarith),\n    sq_sqrt (show (0 : \u211d) \u2264 3 by norm_num),\n    sq_nonneg (Real.sqrt (Real.sqrt 2 + 1) - 1),\n    sq_nonneg (Real.sqrt 2 - 1)]\n  <;> norm_num"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : 1 / (a^2 * (b + c)) + 1 / (b^2 * (c + a)) + 1 / (c^2 * (a + b)) \u2265 3 / (2 * a * b * c) := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 1 \u2192 b \u2265 1 \u2192 c \u2265 1 \u2192 1 / (a^2 * (b + c)) + 1 / (b^2 * (c + a)) + 1 / (c^2 * (a + b)) \u2265 3 / (2 * a * b * c):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 a b c : \u211d, a \u2265 1 \u2192 b \u2265 1 \u2192 c \u2265 1 \u2192 1 / (a^2 * (b + c)) + 1 / (b^2 * (c + a)) + 1 / (c^2 * (a + b)) \u2265 3 / (2 * a * b * c):= by\n  intro a b c ha hb hc\n  have h\u2081 : 0 < a := by positivity\n  have h\u2082 : 0 < b := by positivity\n  have h\u2083 : 0 < c := by positivity\n  have h\u2084 : 0 < a * b := mul_pos h\u2081 h\u2082\n  have h\u2085 : 0 < b * c := mul_pos h\u2082 h\u2083\n  have h\u2086 : 0 < c * a := mul_pos h\u2083 h\u2081\n  have h\u2087 : 0 < a * b * c := by positivity\n  have h\u2088 : 0 < a * b * c * (a * b * c) := by positivity\n  have h\u2089 : 0 < a * b * c * (a * b) := by positivity\n  have h\u2081\u2080 : 0 < a * b * c * (b * c) := by positivity\n  have h\u2081\u2081 : 0 < a * b * c * (c * a) := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : a^3 / (b + c) + b^3 / (c + a) + c^3 / (a + b) \u2265 3 * a * b * c / 2 * Real.sqrt (15 / (1 + 6 * Real.sqrt (a^5 + b^5 + c^5))) := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b > c) (h : a + b + c = 1) : Real.sqrt (a * b) + Real.sqrt (b * c) + Real.sqrt (c * a) \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b > c) (h : a + b + c = 1) :\n  Real.sqrt (a * b) + Real.sqrt (b * c) + Real.sqrt (c * a) \u2264 1:= by\n  rw [add_assoc] at h\n  nlinarith [sq_sqrt (mul_nonneg ha.le hb.le),\n    sq_sqrt (mul_nonneg hb.le hc.le),\n    sq_sqrt (mul_nonneg hc.le ha.le),\n    mul_self_nonneg (Real.sqrt (a * b) - Real.sqrt (b * c)),\n    mul_self_nonneg (Real.sqrt (b * c) - Real.sqrt (c * a)),\n    mul_self_nonneg (Real.sqrt (c * a) - Real.sqrt (a * b)),\n    sq_nonneg (a - b),\n    sq_nonneg (b - c),\n    sq_nonneg (c - a)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b > c) (h : a + b + c = 1) :\n  Real.sqrt (a * b) + Real.sqrt (b * c) + Real.sqrt (c * a) \u2264 1:= by\n  have h\u2080 : Real.sqrt (a * b) \u2264 (a + b) / 2 := by\n    nlinarith [sq_sqrt (mul_nonneg ha.le hb.le), sq_nonneg (a - b)]\n  have h\u2081 : Real.sqrt (b * c) \u2264 (b + c) / 2 := by\n    nlinarith [sq_sqrt (mul_nonneg hb.le hc.le), sq_nonneg (b - c)]\n  have h\u2082 : Real.sqrt (c * a) \u2264 (c + a) / 2 := by\n    nlinarith [sq_sqrt (mul_nonneg hc.le ha.le), sq_nonneg (c - a)]\n  nlinarith\n  <;> assumption\n  <;> simp [*, mul_self_eq_mul_self_iff]\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b > c) (h : a + b + c = 1) :\n  Real.sqrt (a * b) + Real.sqrt (b * c) + Real.sqrt (c * a) \u2264 1:= by\n  have h\u2080 : Real.sqrt (a * b) \u2264 (a + b) / 2 := by\n    nlinarith [sq_sqrt (mul_nonneg (le_of_lt ha) (le_of_lt hb)), sq_nonneg (a - b)]\n  have h\u2081 : Real.sqrt (b * c) \u2264 (b + c) / 2 := by\n    nlinarith [sq_sqrt (mul_nonneg (le_of_lt hb) (le_of_lt hc)), sq_nonneg (b - c)]\n  have h\u2082 : Real.sqrt (c * a) \u2264 (c + a) / 2 := by\n    nlinarith [sq_sqrt (mul_nonneg (le_of_lt hc) (le_of_lt ha)), sq_nonneg (c - a)]\n  nlinarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b > c) (h : a + b + c = 1) :\n  Real.sqrt (a * b) + Real.sqrt (b * c) + Real.sqrt (c * a) \u2264 1:= by\n  have h\u2081 : Real.sqrt (a * b) \u2264 (a + b) / 2 := by\n    nlinarith [sq_sqrt (mul_nonneg ha.le hb.le), sq_nonneg (a - b)]\n  have h\u2082 : Real.sqrt (b * c) \u2264 (b + c) / 2 := by\n    nlinarith [sq_sqrt (mul_nonneg hb.le hc.le), sq_nonneg (b - c)]\n  have h\u2083 : Real.sqrt (c * a) \u2264 (c + a) / 2 := by\n    nlinarith [sq_sqrt (mul_nonneg hc.le ha.le), sq_nonneg (c - a)]\n  linarith\n  <;> assumption\n  <;> try norm_num\n  <;> linarith\n  <;> assumption\n  <;> try norm_num\n  <;> linarith\n  <;> assumption\n  <;> try norm_num\n  <;> linarith\n  <;> assumption\n  <;> try norm_num\n  <;> linarith\n  <;> assumption\n  <;> try norm_num\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (habc : a + b + c = 3) : 5 / 32 \u2264 a / (b ^ 4 + 16) + b / (c ^ 4 + 16) + c / (a ^ 4 + 16) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2020_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9:= by\n  have h\u2081 : x + y + z = 1 := hab\n  have h\u2082 : x > 0 \u2227 y > 0 \u2227 z > 0 := \u27e8hx, hy, hz\u27e9\n  have h\u2083 : 1 / x + 1 / y + 1 / z \u2265 3 := by\n    have h\u2084 : 0 < x * y := mul_pos hx hy\n    have h\u2085 : 0 < x * y * z := mul_pos h\u2084 hz\n    field_simp [h\u2082.1.ne', h\u2082.2.1.ne', h\u2082.2.2.ne']\n    rw [le_div_iff, mul_comm]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n      sq_nonneg (x + y + z)]\n    positivity\n  nlinarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2020_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9:= by\n  have h\u2081 : 1 / x + 1 / y + 1 / z \u2265 3 := by\n    have h\u2082 : 0 < x * y := mul_pos hx hy\n    have h\u2083 : 0 < x * y * z := mul_pos h\u2082 hz\n    field_simp [h\u2082.ne', h\u2083.ne', hx.ne', hy.ne', hz.ne']\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n      mul_self_nonneg (x + y + z)]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2020_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9:= by\n  have : x + y + z = 1 := hab\n  have h1 : 0 < x * y := by positivity\n  have h2 : 0 < x * z := by positivity\n  have h3 : 0 < y * z := by positivity\n  have h4 : 0 < x * y * z := by positivity\n  have h5 : 1 / x + 1 / y + 1 / z \u2265 3 := by\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  have h6 : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9 := by\n    have : 1 / x + 1 / y + 1 / z \u2265 3 := h5\n    nlinarith\n  exact h6",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2020_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9:= by\n  have h : 1 / x + 1 / y + 1 / z \u2265 3 := by\n    field_simp\n    rw [le_div_iff (by positivity), mul_comm]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z), mul_pos hx hy, mul_pos hx hz, mul_pos hy hz]\n  nlinarith [sq_nonneg (1 / x + 1 / y + 1 / z - 3)]"
  ]
 },
 {
  "old": "(a b : \u2124) (h\u2081 : a^3 = b^4) : \u2203 c, c^3 = b := by",
  "new": "(a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  by_cases h : Nat.Coprime a b\n  exact Or.inl h\n  exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  by_cases h : a.Coprime b\n  exact Or.inl h\n  exact Or.inr h\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  cases em (Nat.Coprime a b) with\n  | inl h => exact Or.inl h\n  | inr h => exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  by_cases h : Nat.Coprime a b\n  exacts [Or.inl h, Or.inr h]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) : (b^3 + c^3)^2 / (16 * a^2 * b^2 * c^2) \u2265 a^2 / (4 * b * c) \u2194 (b^3 + c^3)^2 \u2265 4 * a^4 * b * c := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x^2 + y^2 + z^2)^2 / (x^2 * y^2 * z^2) \u2265 36 \u2194 (x^2 + y^2 + z^2)^2 \u2265 36 * (x^2 * y^2 * z^2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   (x^2 + y^2 + z^2)^2 / (x^2 * y^2 * z^2) \u2265 36 \u2194 (x^2 + y^2 + z^2)^2 \u2265 36 * (x^2 * y^2 * z^2):= by\n  constructor\n  intro h\n  have h\u2081 : 0 < x^2 * y^2 * z^2 := by positivity\n  rw [ge_iff_le] at h\n  rw [ge_iff_le]\n  have h\u2082 : (x^2 + y^2 + z^2)^2 / (x^2 * y^2 * z^2) \u2265 36 := h\n  rw [ge_iff_le] at h\u2082\n  have h\u2083 : (x^2 + y^2 + z^2)^2 \u2265 36 * (x^2 * y^2 * z^2) := by\n    rw [ge_iff_le]\n    rw [le_div_iff h\u2081] at h\u2082\n    linarith\n  linarith\n  intro h\n  have h\u2081 : 0 < x^2 * y^2 * z^2 := by positivity\n  rw [ge_iff_le]\n  rw [le_div_iff h\u2081]\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   (x^2 + y^2 + z^2)^2 / (x^2 * y^2 * z^2) \u2265 36 \u2194 (x^2 + y^2 + z^2)^2 \u2265 36 * (x^2 * y^2 * z^2):= by\n  constructor\n  intro h\n  have h1 : 0 < x^2 * y^2 * z^2 := by positivity\n  have h2 : (x^2 + y^2 + z^2)^2 / (x^2 * y^2 * z^2) \u2265 36 := h\n  rw [ge_iff_le] at h2\n  rw [ge_iff_le]\n  rw [le_div_iff h1] at h2\n  nlinarith\n  intro h\n  have h1 : 0 < x^2 * y^2 * z^2 := by positivity\n  have h2 : (x^2 + y^2 + z^2)^2 \u2265 36 * (x^2 * y^2 * z^2) := h\n  rw [ge_iff_le] at h2\n  rw [ge_iff_le]\n  rw [le_div_iff h1]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   (x^2 + y^2 + z^2)^2 / (x^2 * y^2 * z^2) \u2265 36 \u2194 (x^2 + y^2 + z^2)^2 \u2265 36 * (x^2 * y^2 * z^2):= by\n  rw [ge_iff_le, le_div_iff (show 0 < x^2 * y^2 * z^2 by positivity)]\n  <;> ring_nf <;> simp [mul_assoc]\n  <;> norm_num"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (11 * (a + b + c) ^ 3) / (42 * (a ^ 2 + b ^ 2 + c ^ 2) - 9 * (a * b + b * c + a * c)) \u2265 a * b * (a + b) / (a ^ 2 + b ^ 2) + b * c * (b + c) / (b ^ 2 + c ^ 2) + a * c * (a + c) / (a ^ 2 + c ^ 2) := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a + b) * (b + c) * (c + a) * (a + b + c) ^ 2 \u2265 a * b * (a + b) ^ 2 * (b + c) + b * c * (b + c) ^ 2 * (c + a) + c * a * (c + a) ^ 2 * (a + b):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a + b) * (b + c) * (c + a) * (a + b + c) ^ 2 \u2265 a * b * (a + b) ^ 2 * (b + c) + b * c * (b + c) ^ 2 * (c + a) + c * a * (c + a) ^ 2 * (a + b):= by\n  intro a b c h\u2080\n  rcases h\u2080 with \u27e8h\u2081, h\u2082, h\u2083\u27e9\n  apply le_of_sub_nonneg\n  ring_nf\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a + b) * (b + c) * (c + a) * (a + b + c) ^ 2 \u2265 a * b * (a + b) ^ 2 * (b + c) + b * c * (b + c) ^ 2 * (c + a) + c * a * (c + a) ^ 2 * (a + b):= by\n  intro a b c h\u2080\n  have h\u2081 : 0 \u2264 a * b := by nlinarith\n  have h\u2082 : 0 \u2264 b * c := by nlinarith\n  have h\u2083 : 0 \u2264 c * a := by nlinarith\n  have h\u2084 : 0 \u2264 a * b * (a + b) := by nlinarith\n  have h\u2085 : 0 \u2264 b * c * (b + c) := by nlinarith\n  have h\u2086 : 0 \u2264 c * a * (c + a) := by nlinarith\n  have h\u2087 : 0 \u2264 a * b * (a + b) * (b + c) := by nlinarith\n  have h\u2088 : 0 \u2264 b * c * (b + c) * (c + a) := by nlinarith\n  have h\u2089 : 0 \u2264 c * a * (c + a) * (a + b) := by nlinarith\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a),\n    mul_self_nonneg (c * a - a * b)]"
  ]
 },
 {
  "old": "(p q r : \u211d) (hp : p > 0 \u2227 q > 0 \u2227 r > 0) (hpq : p + q + r = 1) : 3 / (2 * (p * q + q * r + r * p)) \u2265 1 / (p + q) + 1 / (q + r) + 1 / (r + p) := by",
  "new": "(x y z : \u211d) (h : x + y + z = 1) (hx : x > 0) (hy : y > 0) (hz : z > 0) : 3 / (x * y + y * z + z * x) \u2265 9 / (x + y + z):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_10_2 (x y z : \u211d) (h : x + y + z = 1) (hx : x > 0) (hy : y > 0) (hz : z > 0) : 3 / (x * y + y * z + z * x) \u2265 9 / (x + y + z):= by\n  have h\u2080 : 0 < x * y + y * z + z * x := by\n    nlinarith\n  have h\u2081 : 0 < (x * y + y * z + z * x) ^ 2 := by\n    nlinarith\n  field_simp [h\u2080, h\u2081]\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_self_nonneg (x * y + y * z + z * x), mul_self_nonneg (x * y - y * z),\n    mul_self_nonneg (y * z - z * x), mul_self_nonneg (z * x - x * y)]\n  nlinarith\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_10_2 (x y z : \u211d) (h : x + y + z = 1) (hx : x > 0) (hy : y > 0) (hz : z > 0) : 3 / (x * y + y * z + z * x) \u2265 9 / (x + y + z):= by\n  have h1 : 0 < x + y + z := by linarith\n  have h2 : 0 < x * y + y * z + z * x := by nlinarith\n  have h3 : (x + y + z) ^ 2 = 1 := by nlinarith\n  have h4 : 0 < x * y + y * z + z * x := by nlinarith\n  rw [ge_iff_le]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_10_2 (x y z : \u211d) (h : x + y + z = 1) (hx : x > 0) (hy : y > 0) (hz : z > 0) : 3 / (x * y + y * z + z * x) \u2265 9 / (x + y + z):= by\n  have : x + y + z = 1 := h\n  have : x * y + y * z + z * x > 0 := by nlinarith\n  have : x * y + y * z + z * x \u2260 0 := by nlinarith\n  field_simp [this]\n  rw [div_le_div_iff (by nlinarith) (by nlinarith)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    sq_nonneg (x + y + z)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_10_2 (x y z : \u211d) (h : x + y + z = 1) (hx : x > 0) (hy : y > 0) (hz : z > 0) : 3 / (x * y + y * z + z * x) \u2265 9 / (x + y + z):= by\n  have h1 : x + y + z = 1 := by linarith\n  have h2 : 0 < x * y + y * z + z * x := by\n    nlinarith\n  rw [h1]\n  field_simp [h2]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a + b > 0) (hb : b + c > 0) (hc : a + c > 0) : a * (b - c) ^ 4 + b * (c - a) ^ 4 + c * (a - b) ^ 4 \u2265 1 / (2 * (a + b + c)) * (a * (b - c) ^ 2 + b * (c - a) ^ 2 + c * (a - b) ^ 2) ^ 2 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : x ^ 2 + y ^ 2 + z ^ 2 + (x * y + y * z + z * x) ^ 2 / (x * y + y * z + z * x) \u2265 2 * (x * y + y * z + z * x):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   x ^ 2 + y ^ 2 + z ^ 2 + (x * y + y * z + z * x) ^ 2 / (x * y + y * z + z * x) \u2265 2 * (x * y + y * z + z * x):= by\n  have key : x * y + y * z + z * x > 0 := add_pos (add_pos (mul_pos hx hy) (mul_pos hy hz)) (mul_pos hz hx)\n  have h\u2080 : (x * y + y * z + z * x) ^ 2 / (x * y + y * z + z * x) = x * y + y * z + z * x := by\n    rw [div_eq_iff key.ne']\n    ring\n  rw [h\u2080]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   x ^ 2 + y ^ 2 + z ^ 2 + (x * y + y * z + z * x) ^ 2 / (x * y + y * z + z * x) \u2265 2 * (x * y + y * z + z * x):= by\n  have h1 : x * y + y * z + z * x \u2265 0 := by positivity\n  have h2 : (x * y + y * z + z * x) ^ 2 / (x * y + y * z + z * x) = x * y + y * z + z * x := by\n    rw [sq]\n    field_simp\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   x ^ 2 + y ^ 2 + z ^ 2 + (x * y + y * z + z * x) ^ 2 / (x * y + y * z + z * x) \u2265 2 * (x * y + y * z + z * x):= by\n  have : (x * y + y * z + z * x) ^ 2 / (x * y + y * z + z * x) = x * y + y * z + z * x := by\n    rw [sq]\n    field_simp [hx, hy, hz]\n  rw [this]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x), mul_pos hx hy, mul_pos hy hz, mul_pos hz hx]\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) : (a^3 / b^2 + b^3 / c^2 + c^3 / a^2) \u2265 (a^2 / b + b^2 / c + c^2 / a) := by",
  "new": ": \u2200 x : \u211d, x > 0 \u2192 x ^ 3 / x ^ 2 + (x ^ 2 / x + x ^ 3 / x) \u2265 2 * x:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 3 / x ^ 2 + (x ^ 2 / x + x ^ 3 / x) \u2265 2 * x:= by\n  intro x hx\n  have hx2 : 0 < x ^ 2 := pow_pos hx 2\n  have hx3 : 0 < x ^ 3 := pow_pos hx 3\n  field_simp [hx2, hx3]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 3 / x ^ 2 + (x ^ 2 / x + x ^ 3 / x) \u2265 2 * x:= by\n  intro x hx\n  have h : 0 < x := hx\n  have h1 : x ^ 3 / x ^ 2 = x := by\n    rw [div_eq_iff (by positivity)]\n    ring\n  have h2 : x ^ 2 / x = x := by\n    rw [div_eq_iff (by positivity)]\n    ring\n  have h3 : x ^ 3 / x = x ^ 2 := by\n    rw [div_eq_iff (by positivity)]\n    ring\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 3 / x ^ 2 + (x ^ 2 / x + x ^ 3 / x) \u2265 2 * x:= by\n  intro x hx\n  have hx2 : x ^ 2 > 0 := by positivity\n  have hx3 : x ^ 3 > 0 := by positivity\n  have hx4 : x ^ 4 > 0 := by positivity\n  have hx5 : x ^ 5 > 0 := by positivity\n  field_simp [hx, hx2, hx3, hx4, hx5]\n  rw [le_div_iff (by positivity)]\n  nlinarith [mul_self_nonneg (x - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 3 / x ^ 2 + (x ^ 2 / x + x ^ 3 / x) \u2265 2 * x:= by\n  intro x x_pos\n  have x_nonneg : 0 \u2264 x := by linarith\n  have x_nonneg' : 0 \u2264 x ^ 2 := by nlinarith\n  have x_nonneg'' : 0 \u2264 x ^ 3 := by nlinarith\n  field_simp [x_pos]\n  rw [le_div_iff (by positivity)]\n  nlinarith [mul_self_nonneg (x - 1)]"
  ]
 },
 {
  "old": "(m : \u2115) : \u2203 n, \u2200 k > n, fib k % m = fib (k + n) % m := by",
  "new": "(n : \u2115) : 1 < n \u2192 Nat.Coprime (fib n) (fib (n + 1)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two (n : \u2115) : 1 < n \u2192 Nat.Coprime (fib n) (fib (n + 1)) := by\n  intro h\n  rw [Nat.coprime_iff_gcd_eq_one]\n  induction' h with n h IH\n  all_goals simp_all [fib_add_two, Nat.gcd_comm]\n  all_goals simp_all [Nat.gcd_eq_left, Nat.gcd_eq_right]\n  all_goals omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two (n : \u2115) : 1 < n \u2192 Nat.Coprime (fib n) (fib (n + 1)) := by\n  intro h\n  rw [Nat.coprime_iff_gcd_eq_one]\n  induction' h with n h IH\n  all_goals simp_all [fib_add_two, Nat.gcd_comm]\n  all_goals norm_num\n  all_goals aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two (n : \u2115) : 1 < n \u2192 Nat.Coprime (fib n) (fib (n + 1)) := by\n  intro h\n  rw [Nat.coprime_iff_gcd_eq_one]\n  induction' h with n h IH\n  all_goals simp_all [fib_add_two, Nat.gcd_comm]"
  ]
 },
 {
  "old": "{a b c : \u211d} : (a^4 * b^2 + a^2 * b^4 + b^4 * c^2 + b^2 * c^4 + c^4 * a^2 + c^2 * a^4 + 2 * a^2 * b^2 * c^2) * (b^2 + a^2 + c^2 + b^2 + a^2 + c^2 + 2) \u2265 (2 * (a^2 * b^2 + b^2 * c^2 + a^2 * c^2) + 2 * a * b * c)^2 := by",
  "new": "(a b c : \u211d) : a ^ 2 * b ^ 2 * c ^ 2 * 6 \u2264 (a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + a ^ 2 * c ^ 2) * (a ^ 2 + b ^ 2 + c ^ 2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) :\n      a ^ 2 * b ^ 2 * c ^ 2 * 6 \u2264\n        (a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + a ^ 2 * c ^ 2) * (a ^ 2 + b ^ 2 + c ^ 2):= by\n  simp only [sq]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (a ^ 2 - c ^ 2),\n    mul_nonneg (sq_nonneg (a * b)) (sq_nonneg (b * c)), mul_nonneg (sq_nonneg (b * c)) (sq_nonneg (a * c)),\n    mul_nonneg (sq_nonneg (a * b)) (sq_nonneg (a * c))]\n  <;> nlinarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) :\n      a ^ 2 * b ^ 2 * c ^ 2 * 6 \u2264\n        (a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + a ^ 2 * c ^ 2) * (a ^ 2 + b ^ 2 + c ^ 2):= by\n  nlinarith [sq_nonneg (a^2 - b^2), sq_nonneg (b^2 - c^2), sq_nonneg (a^2 - c^2), mul_nonneg (sq_nonneg a) (sq_nonneg b),\n    mul_nonneg (sq_nonneg b) (sq_nonneg c), mul_nonneg (sq_nonneg a) (sq_nonneg c),\n    mul_nonneg (sq_nonneg (a - b)) (sq_nonneg (b - c)),\n    mul_nonneg (sq_nonneg (b - c)) (sq_nonneg (c - a)),\n    mul_nonneg (sq_nonneg (c - a)) (sq_nonneg (a - b))]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) :\n      a ^ 2 * b ^ 2 * c ^ 2 * 6 \u2264\n        (a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + a ^ 2 * c ^ 2) * (a ^ 2 + b ^ 2 + c ^ 2):= by\n  nlinarith [sq_nonneg (a^2 + b^2 + c^2), sq_nonneg (a^2 - b^2), sq_nonneg (b^2 - c^2), sq_nonneg (c^2 - a^2), sq_nonneg (a * b), sq_nonneg (b * c), sq_nonneg (c * a)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) :\n      a ^ 2 * b ^ 2 * c ^ 2 * 6 \u2264\n        (a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + a ^ 2 * c ^ 2) * (a ^ 2 + b ^ 2 + c ^ 2):= by\n  simp only [mul_assoc]\n  ring_nf\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (a ^ 2 - c ^ 2), sq_nonneg (b ^ 2 - c ^ 2),\n    mul_self_nonneg (a * b), mul_self_nonneg (b * c), mul_self_nonneg (a * c)]\n  <;> nlinarith\n  <;> nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 1) : a * b + b * c + c * a - 2 * a * b * c \u2264 7 / 27 := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 1 \u2192 a * b + b * c + c * a - 2 * a * b * c \u2264 7 / 27 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 1 \u2192  a * b + b * c + c * a - 2 * a * b * c \u2264 7 / 27  := by\n  rintro a b c \u27e8h\u2080\u2081, h\u2080\u2082, h\u2080\u2083, h\u2081\u27e9\n  cases' le_total a b with h h <;> cases' le_total b c with h\u2082 h\u2082 <;> cases' le_total c a with h\u2083 h\u2083 <;>\n    simp_all only [mul_assoc, mul_comm, mul_left_comm, add_assoc, add_comm, add_left_comm,\n      sub_eq_add_neg, neg_mul, neg_neg] <;>\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      mul_self_nonneg (a + b + c), mul_self_nonneg (a + b + c - 3 * a),\n      mul_self_nonneg (a + b + c - 3 * b), mul_self_nonneg (a + b + c - 3 * c)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 1 \u2192  a * b + b * c + c * a - 2 * a * b * c \u2264 7 / 27  := by\n  rintro a b c \u27e8h\u2081, h\u2082, h\u2083, h\u2084\u27e9\n  cases' le_total a b with h\u2085 h\u2085 <;> cases' le_total b c with h\u2086 h\u2086 <;> cases' le_total c a with h\u2087 h\u2087 <;>\n    simp_all only [mul_comm, mul_left_comm, mul_assoc, add_assoc, add_left_comm,\n      add_comm] <;>\n    nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a),\n      mul_self_nonneg (a + b + c), mul_self_nonneg (a + b + c - 3 * a), mul_self_nonneg (a + b + c - 3 * b), mul_self_nonneg (a + b + c - 3 * c)]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith"
  ]
 },
 {
  "old": ": \u2200 n : \u2115, \u2211 i in Finset.range (n+1), 2^i = 2^(n+1) - 1 := by",
  "new": ": \u2200 n : \u2115, n \u2265 2 \u2192 Nat.Coprime (fib n) (fib (n + 1)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_2 : \u2200 n : \u2115, n \u2265 2 \u2192 Nat.Coprime (fib n) (fib (n + 1)) := by\n  intro n hn;\n  induction' hn with k hk IH\n  all_goals simp_all [fib_add_two, Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm]\n  all_goals simp_all [fib_add_two, Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm]\n  all_goals simp_all [fib_add_two, Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm]\n  all_goals simp_all [fib_add_two, Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_2 : \u2200 n : \u2115, n \u2265 2 \u2192 Nat.Coprime (fib n) (fib (n + 1)) := by\n  intro n hn\n  induction' hn with n hn IH\n  simp [fib_one, fib_two, Nat.coprime_one_left]\n  rw [fib_add_two]\n  rw [coprime_comm]\n  simpa [fib_add_two, coprime_comm] using IH",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_2 : \u2200 n : \u2115, n \u2265 2 \u2192 Nat.Coprime (fib n) (fib (n + 1)) := by\n  intro n h\n  rw [Nat.coprime_iff_gcd_eq_one]\n  induction' h with n h IH\n  simp [fib_add_two]\n  simp_all [fib_add_two, Nat.gcd_comm]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_2 : \u2200 n : \u2115, n \u2265 2 \u2192 Nat.Coprime (fib n) (fib (n + 1)) := by\n  intro n h\n  rw [Nat.coprime_iff_gcd_eq_one]\n  induction' h with n h IH\n  all_goals simp_all [fib_add_two]\n  all_goals\n    simp_all [Nat.gcd_comm]\n  all_goals simp_all [Nat.gcd_eq_left, Nat.gcd_eq_right]\n  all_goals simp_all [fib_add_two]\n  all_goals\n    simp_all [Nat.gcd_comm]\n  all_goals simp_all [Nat.gcd_eq_left, Nat.gcd_eq_right]"
  ]
 },
 {
  "old": "(a b c : \u211d) : a ^ 4 * b ^ 2 + b ^ 4 * c ^ 2 + c ^ 4 * a ^ 2 \u2265 a * b ^ 2 * c ^ 3 + b * c ^ 2 * a ^ 3 + c * a ^ 2 * b ^ 3 := by",
  "new": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : a * b ^ 2 * c ^ 3 + b * c ^ 2 * a ^ 3 + c * a ^ 2 * b ^ 3 \u2264 a ^ 4 * b ^ 2 + b ^ 4 * c ^ 2 + c ^ 4 * a ^ 2 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) :\n     a * b ^ 2 * c ^ 3 + b * c ^ 2 * a ^ 3 + c * a ^ 2 * b ^ 3 \u2264 a ^ 4 * b ^ 2 + b ^ 4 * c ^ 2 + c ^ 4 * a ^ 2 := by\n  nlinarith [sq_nonneg (a ^ 2 - b * c), sq_nonneg (b ^ 2 - c * a), sq_nonneg (c ^ 2 - a * b),\n    mul_nonneg ha hb, mul_nonneg hb hc, mul_nonneg hc ha,\n    mul_nonneg (sq_nonneg a) (sq_nonneg b), mul_nonneg (sq_nonneg b) (sq_nonneg c), mul_nonneg (sq_nonneg c) (sq_nonneg a)]\n  <;> simp [*]\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) :\n     a * b ^ 2 * c ^ 3 + b * c ^ 2 * a ^ 3 + c * a ^ 2 * b ^ 3 \u2264 a ^ 4 * b ^ 2 + b ^ 4 * c ^ 2 + c ^ 4 * a ^ 2 := by\n  nlinarith [sq_nonneg (a ^ 2 * b - b ^ 2 * c), sq_nonneg (b ^ 2 * c - c ^ 2 * a),\n    sq_nonneg (c ^ 2 * a - a ^ 2 * b), sq_nonneg (a * b ^ 2 - b * c ^ 2),\n    sq_nonneg (b * c ^ 2 - c * a ^ 2), sq_nonneg (c * a ^ 2 - a * b ^ 2),\n    mul_nonneg ha (sq_nonneg b), mul_nonneg hb (sq_nonneg c), mul_nonneg hc (sq_nonneg a),\n    mul_nonneg ha (sq_nonneg c), mul_nonneg hb (sq_nonneg a), mul_nonneg hc (sq_nonneg b)]"
  ]
 },
 {
  "old": "(m n : \u2115) (h\u2081 : m \u2223 n) : fib m \u2223 fib n := by",
  "new": "(n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two (n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by\n  induction' hn with n hn <;> simp_all [fib_add_two, Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm]\n  <;> norm_num\n  <;> apply Eq.refl\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two (n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by\n  induction' hn with k hk hk_ind\n  all_goals simp_all [fib_add_two, Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm]\n  all_goals\n    norm_num\n    omega\n  <;> rfl\n  <;> rfl"
  ]
 },
 {
  "old": "(a b c : \u211d) (hab : a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0) (h : a * b + b * c + c * a = 3) : a^2 + b^2 + c^2 + 3 * a * b * c >= 6 \u2227 a^4 + b^4 + c^4 + 15 * a * b * c >= 18 := by",
  "new": "(i : \u2115) (hi : 0 < i) : (\u2203 d, 1 + d = i) \u2228 \u2203 d, 1 + d = 2 * i:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : 0 < i) : (\u2203 d, 1 + d = i) \u2228 \u2203 d, 1 + d = 2 * i:= by\n  refine' or_iff_not_imp_right.2 fun h => \u27e8i - 1, by omega\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : 0 < i) : (\u2203 d, 1 + d = i) \u2228 \u2203 d, 1 + d = 2 * i:= by\n  refine' or_iff_not_imp_right.mpr fun h => _\n  use i - 1\n  omega\n  <;> omega\n  <;> omega"
  ]
 },
 {
  "old": "(a b c : \u211d) (h : a * b * c = 1) (h' : a + b + c = 1 / a + 1 / b + 1 / c) : a = 1 \u2228 b = 1 \u2228 c = 1 := by",
  "new": "(a b : \u2115) (h : a * b = 1) : a = 1 \u2228 b = 1 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2228 b = 1  := by\n  cases' Nat.eq_zero_or_pos b with hb hb\n  all_goals simp_all [Nat.eq_one_of_mul_eq_one_left]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2228 b = 1  := by\n  have h\u2080 : a = 1 \u2228 b = 1 := by\n    have h\u2081 : a * b = 1 := by simp_all\n    have h\u2082 : a = 1 \u2228 b = 1 := by\n      cases' Nat.eq_zero_or_pos a with ha ha <;> cases' Nat.eq_zero_or_pos b with hb hb <;>\n        simp_all [Nat.succ_eq_add_one, Nat.mul_add, Nat.add_mul]\n    exact h\u2082\n  exact h\u2080",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2228 b = 1  := by\n  have h' : a * b = 1 := by assumption\n  cases' Nat.eq_zero_or_pos a with ha ha <;> cases' Nat.eq_zero_or_pos b with hb hb <;>\n    simp_all [Nat.eq_one_of_mul_eq_one_right, Nat.eq_one_of_mul_eq_one_left]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a / (b * (1 + c)) + b / (a + b * c) + 3 * b * c / (a + b) \u2265 2 * Real.sqrt 3 - 3 / 2) := by",
  "new": ": Real.sqrt 3 \u2264 2 * (1 / Real.sqrt 3 + 1 / 3) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 3 \u2264 2 * (1 / Real.sqrt 3 + 1 / 3) := by\n  rw [mul_comm]\n  apply le_of_sub_nonneg\n  field_simp\n  rw [le_div_iff (by positivity), mul_comm]\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 by linarith)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 3 \u2264 2 * (1 / Real.sqrt 3 + 1 / 3) := by\n  have h : 0 < Real.sqrt 3 := by exact Real.sqrt_pos.mpr (by linarith)\n  have h\u2082 : 0 < 3 := by linarith\n  have h\u2083 : 0 < 2 := by linarith\n  field_simp [h, h\u2082, h\u2083]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 from by linarith), sq_sqrt (show (0 : \u211d) \u2264 2 from by linarith),\n    mul_self_nonneg (Real.sqrt 3 - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 3 \u2264 2 * (1 / Real.sqrt 3 + 1 / 3) := by\n  have h\u2080 : Real.sqrt 3 \u2265 0 := Real.sqrt_nonneg 3\n  have h\u2081 : 3 \u2265 0 := by norm_num\n  have h\u2082 : Real.sqrt 3 * Real.sqrt 3 = 3 := Real.mul_self_sqrt (by positivity)\n  field_simp [h\u2080, h\u2081]\n  rw [le_div_iff (by positivity)]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 3 \u2264 2 * (1 / Real.sqrt 3 + 1 / 3) := by\n  have h\u2081 : 0 < Real.sqrt 3 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2082 : (Real.sqrt 3) * (Real.sqrt 3) = 3 := Real.mul_self_sqrt (by norm_num)\n  field_simp [h\u2081]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_sqrt (by norm_num : 0 \u2264 (3 : \u211d)), mul_self_nonneg (2 - Real.sqrt 3)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2081 : a \u2260 b) (h\u2082 : b \u2260 c) (h\u2083 : c \u2260 a) : 1 + a * b * Real.log a + 1 + b * c * Real.log b + 1 + c * a * Real.log c \u2265 3 := by",
  "new": ": Real.log (Real.sqrt 2 + 1) + Real.log (Real.sqrt 2 + 2) + Real.log (Real.sqrt 2 + 3) \u2264 Real.log (3 * (Real.sqrt 2 + 1)) + Real.log (3 * (Real.sqrt 2 + 2)) + Real.log (3 * (Real.sqrt 2 + 3)):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.log (Real.sqrt 2 + 1) + Real.log (Real.sqrt 2 + 2) + Real.log (Real.sqrt 2 + 3) \u2264\n       Real.log (3 * (Real.sqrt 2 + 1)) + Real.log (3 * (Real.sqrt 2 + 2)) + Real.log (3 * (Real.sqrt 2 + 3)):= by\n  have h\u2080 : Real.log (Real.sqrt 2 + 1) \u2264 Real.log (3 * (Real.sqrt 2 + 1)) := by\n    refine' Real.log_le_log (by positivity) _\n    nlinarith [Real.sqrt_nonneg 2]\n  have h\u2081 : Real.log (Real.sqrt 2 + 2) \u2264 Real.log (3 * (Real.sqrt 2 + 2)) := by\n    refine' Real.log_le_log (by positivity) _\n    nlinarith [Real.sqrt_nonneg 2]\n  have h\u2082 : Real.log (Real.sqrt 2 + 3) \u2264 Real.log (3 * (Real.sqrt 2 + 3)) := by\n    refine' Real.log_le_log (by positivity) _\n    nlinarith [Real.sqrt_nonneg 2]\n  linarith\n  <;> norm_num\n  <;> norm_num\n  <;> norm_num"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 1) : (2 + c + c ^ 3) / 4 \u2265 a * b * c + a * b + 2 * b * c + 2 * c * a := by",
  "new": "(x y z : \u211d) (hx : 0 < x \u2227 0 < y \u2227 0 < z) (h : x + y + z = 1) : 1 / (x * y) + 1 / (y * z) + 1 / (z * x) \u2265 4 / (x + y + z) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x \u2227 0 < y \u2227 0 < z) (h : x + y + z = 1) : 1 / (x * y) + 1 / (y * z) + 1 / (z * x) \u2265 4 / (x + y + z) := by\n  rcases hx with \u27e8h1, h2, h3\u27e9\n  ring_nf\n  have h4 : 0 < x * y := by positivity\n  have h5 : 0 < y * z := by positivity\n  have h6 : 0 < z * x := by positivity\n  have h7 : 0 < x * y * (y * z) := by positivity\n  have h8 : 0 < y * z * (z * x) := by positivity\n  have h9 : 0 < z * x * (x * y) := by positivity\n  have h10 : 0 < x * y * (y * z) * (z * x) := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x \u2227 0 < y \u2227 0 < z) (h : x + y + z = 1) : 1 / (x * y) + 1 / (y * z) + 1 / (z * x) \u2265 4 / (x + y + z) := by\n  rcases hx with \u27e8hx, hy, hz\u27e9\n  ring_nf\n  have h\u2080 : 0 < x * y := mul_pos hx hy\n  have h\u2081 : 0 < y * z := mul_pos hy hz\n  have h\u2082 : 0 < z * x := mul_pos hz hx\n  have h\u2083 : 0 < x * y * (y * z * (z * x)) := by positivity\n  have h\u2084 : 0 < y * z * (z * x) := by positivity\n  have h\u2085 : 0 < z * x * (x * y) := by positivity\n  have h\u2086 : 0 < x * y * (y * z) := by positivity\n  have h\u2087 : 0 < x * y * (y * z * (z * x)) := by positivity\n  have h\u2088 : 0 < y * z * (z * x * (x * y)) := by positivity\n  have h\u2089 : 0 < z * x * (x * y * (y * z)) := by positivity\n  have h\u2081\u2080 : 0 < x * y * (y * z * (z * x)) := by positivity\n  apply le_of_sub_nonneg\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) (habcd : a * b * c * d = 1) : 1 / (a * (1 + b)) + 1 / (b * (1 + c)) + 1 / (c * (1 + d)) + 1 / (d * (1 + a)) \u2265 2 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) : x / (1 + x) + y / (1 + y) + z / (1 + z) + (x + y) / (1 + (x + y)) + (y + z) / (1 + (y + z)) + (x + z) / (1 + (x + z)) \u2265 3/2 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) : \n    x / (1 + x) + y / (1 + y) + z / (1 + z) + (x + y) / (1 + (x + y)) + (y + z) / (1 + (y + z)) + (x + z) / (1 + (x + z)) \u2265 3/2 := by\n  field_simp [add_assoc]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_nonneg hx.le hy.le, mul_nonneg hy.le hz.le, mul_nonneg hz.le hx.le,\n    mul_nonneg (sq_nonneg (x - y)) hz.le, mul_nonneg (sq_nonneg (y - z)) hx.le, mul_nonneg (sq_nonneg (z - x)) hy.le]"
  ]
 },
 {
  "old": ": \u2200 a b c : \u211d, Real.sqrt ((ab)^4 + (bc)^4 + (ca)^4) \u2265 Real.sqrt (3 * (ab * bc * ca) ^ (4/3)) := by",
  "new": ": Real.sqrt (Real.sqrt (1 + a ^ 2) ^ 2 + Real.sqrt (1 + b ^ 2) ^ 2) \u2265 Real.sqrt (1 + a ^ 2 + 1 + b ^ 2) / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) ^ 2 + Real.sqrt (1 + b ^ 2) ^ 2) \u2265\n      Real.sqrt (1 + a ^ 2 + 1 + b ^ 2) / 2:= by\n  apply le_sqrt_of_sq_le\n  simp only [sq, \u2190 mul_add, add_assoc, add_left_comm]\n  ring_nf\n  norm_num\n  apply le_of_sub_nonneg\n  field_simp\n  ring_nf\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) ^ 2 + Real.sqrt (1 + b ^ 2) ^ 2) \u2265\n      Real.sqrt (1 + a ^ 2 + 1 + b ^ 2) / 2:= by\n  have h\u2080 : Real.sqrt (1 + a ^ 2) \u2265 0 := Real.sqrt_nonneg (1 + a ^ 2)\n  have h\u2081 : Real.sqrt (1 + b ^ 2) \u2265 0 := Real.sqrt_nonneg (1 + b ^ 2)\n  have h\u2082 : Real.sqrt (1 + a ^ 2) ^ 2 = 1 + a ^ 2 := Real.sq_sqrt (by positivity)\n  have h\u2083 : Real.sqrt (1 + b ^ 2) ^ 2 = 1 + b ^ 2 := Real.sq_sqrt (by positivity)\n  have h\u2084 : Real.sqrt ((1 + a ^ 2) + (1 + b ^ 2)) \u2265 0 := Real.sqrt_nonneg ((1 + a ^ 2) + (1 + b ^ 2))\n  have h\u2085 : Real.sqrt (1 + a ^ 2 + 1 + b ^ 2) \u2265 0 := Real.sqrt_nonneg (1 + a ^ 2 + 1 + b ^ 2)\n  have h\u2086 : Real.sqrt (Real.sqrt (1 + a ^ 2) ^ 2 + Real.sqrt (1 + b ^ 2) ^ 2) \u2265\n      Real.sqrt ((1 + a ^ 2) + (1 + b ^ 2)) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith\n  nlinarith [sq_sqrt (show (1 + a ^ 2) + (1 + b ^ 2) \u2265 0 by positivity),\n    sq_sqrt (show 1 + a ^ 2 + 1 + b ^ 2 \u2265 0 by positivity)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) ^ 2 + Real.sqrt (1 + b ^ 2) ^ 2) \u2265\n      Real.sqrt (1 + a ^ 2 + 1 + b ^ 2) / 2:= by\n  have h\u2080 :\n    0 \u2264 Real.sqrt (1 + a ^ 2) ^ 2 + Real.sqrt (1 + b ^ 2) ^ 2 := by positivity\n  have h\u2081 :\n    0 \u2264 Real.sqrt (1 + a ^ 2 + 1 + b ^ 2) ^ 2 := by positivity\n  apply le_sqrt_of_sq_le\n  nlinarith [sq_sqrt (show 0 \u2264 1 + a ^ 2 from by positivity),\n    sq_sqrt (show 0 \u2264 1 + b ^ 2 from by positivity),\n    sq_sqrt (show 0 \u2264 1 + a ^ 2 + 1 + b ^ 2 from by positivity)]"
  ]
 },
 {
  "old": "{t : \u211d} ( ht : t \u2208 Set.Icc 0 (23 + 71 / 330)) {a b c : \u211d} (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c): a * Real.sqrt (t * a ^ 4 + 2 * b ^ 2 * c ^ 2) \u2264 Real.sqrt (t + 2) * (a ^ 3 + b ^ 3 + c ^ 3) := by",
  "new": "{b : \u2115} {t : \u211d} (ht : t \u2208 Set.Icc 0 (23 + 71 / 330)) {a c : \u2115} (h : a + c + b = 2) (h2 : 3 < |(a - c : \u211d)| / 3) (h3 : (a - c) ^ 2 \u2260 0) (h4 : (a - c) ^ 2 \u2260 0) (h5 : (a - c) ^ 2 \u2260 0): Nat.Coprime a c \u2228 t = 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_nonneg_of_sum_eq_two_of_three_lt_abs_sub_ne_zero_div_three {b : \u2115} {t : \u211d}\n  (ht : t \u2208 Set.Icc 0 (23 + 71 / 330)) {a c : \u2115} (h : a + c + b = 2) (h2 : 3 < |(a - c : \u211d)| / 3)  (h3 : (a - c) ^ 2 \u2260 0)  (h4 : (a - c) ^ 2 \u2260 0) (h5 : (a - c) ^ 2 \u2260 0):\n    Nat.Coprime a c \u2228 t = 0:= by\n  left\n  have : a \u2264 2 := by\n    by_contra!\n    nlinarith\n  have : c \u2264 2 := by\n    by_contra!\n    nlinarith\n  interval_cases a <;> interval_cases c <;> norm_num at * <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_nonneg_of_sum_eq_two_of_three_lt_abs_sub_ne_zero_div_three {b : \u2115} {t : \u211d}\n  (ht : t \u2208 Set.Icc 0 (23 + 71 / 330)) {a c : \u2115} (h : a + c + b = 2) (h2 : 3 < |(a - c : \u211d)| / 3)  (h3 : (a - c) ^ 2 \u2260 0)  (h4 : (a - c) ^ 2 \u2260 0) (h5 : (a - c) ^ 2 \u2260 0):\n    Nat.Coprime a c \u2228 t = 0:= by\n  norm_num at ht\n  have h\u2080 : a \u2264 2 := by\n    omega\n  have h\u2081 : c \u2264 2 := by\n    omega\n  interval_cases a <;> interval_cases c <;> norm_num at h2 h3 h4 h5 \u22a2"
  ]
 },
 {
  "old": "(a b c : \u211d) : a^2 + b^2 + c^2 + 3 * (a^2 * b^2 * c^2)^(1/3) \u2265 2 * (a * b + b * c + c * a) := by",
  "new": "(a b : \u2115) (h : a ^ 2 + b ^ 2 + 1 \u2265 2 * a * b) : IsCoprime a b \u2228 \u2203 (c : \u2115), (c ^ 2 + 1) \u2223 a ^ 2 + b ^ 2 + 1 \u2227 c ^ 2 + 1 \u2264 a ^ 2 + b ^ 2 + 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_small_coprime (a b : \u2115) (h : a ^ 2 + b ^ 2 + 1 \u2265 2 * a * b) :\n    IsCoprime a b \u2228 \u2203 (c : \u2115), (c ^ 2 + 1) \u2223 a ^ 2 + b ^ 2 + 1 \u2227 c ^ 2 + 1 \u2264 a ^ 2 + b ^ 2 + 1:= by\n  refine' or_iff_not_imp_left.mpr fun h\u2081 => _\n  use 0\n  simp\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_small_coprime (a b : \u2115) (h : a ^ 2 + b ^ 2 + 1 \u2265 2 * a * b) :\n    IsCoprime a b \u2228 \u2203 (c : \u2115), (c ^ 2 + 1) \u2223 a ^ 2 + b ^ 2 + 1 \u2227 c ^ 2 + 1 \u2264 a ^ 2 + b ^ 2 + 1:= by\n  by_cases h : IsCoprime a b\n  exacts [Or.inl h, Or.inr \u27e80, by simp_all\u27e9]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_small_coprime (a b : \u2115) (h : a ^ 2 + b ^ 2 + 1 \u2265 2 * a * b) :\n    IsCoprime a b \u2228 \u2203 (c : \u2115), (c ^ 2 + 1) \u2223 a ^ 2 + b ^ 2 + 1 \u2227 c ^ 2 + 1 \u2264 a ^ 2 + b ^ 2 + 1:= by\n  by_cases H : IsCoprime a b\n  exact Or.inl H\n  right\n  use 0\n  simp [h]\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_small_coprime (a b : \u2115) (h : a ^ 2 + b ^ 2 + 1 \u2265 2 * a * b) :\n    IsCoprime a b \u2228 \u2203 (c : \u2115), (c ^ 2 + 1) \u2223 a ^ 2 + b ^ 2 + 1 \u2227 c ^ 2 + 1 \u2264 a ^ 2 + b ^ 2 + 1:= by\n  by_cases h0 : IsCoprime a b\n  exact Or.inl h0\n  exact Or.inr \u27e80, by simp [h0], by norm_num\u27e9"
  ]
 },
 {
  "old": "(d : \u2115) (h\u2081 : \u00ac \u2203 k : \u2115, k^2 = d) (h\u2082 : 0 < d) : \u2203 n : \u2115, \u2203 x y : \u2124, x^2 - d*y^2 = 1 := by",
  "new": "(x y : \u2115) (h : x ^ 2 - d * y ^ 2 = 1) : Nat.Coprime x y \u2228 \u00acNat.Coprime x y := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 - d * y ^ 2 = 1) : Nat.Coprime x y \u2228 \u00acNat.Coprime x y := by\n  by_cases h2 : Nat.Coprime x y\n  left\n  exact h2\n  right\n  exact h2",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 - d * y ^ 2 = 1) : Nat.Coprime x y \u2228 \u00acNat.Coprime x y := by\n  by_cases h' : Nat.Coprime x y <;> simp [h']\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 - d * y ^ 2 = 1) : Nat.Coprime x y \u2228 \u00acNat.Coprime x y := by\n  by_cases h2 : x.Coprime y <;> simp [h2]\n  <;> omega\n  <;> omega\n  <;> omega"
  ]
 },
 {
  "old": "{a b c p q r : \u211d} (ha : a > 0) (hb : b > 0) (hc : c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) (hp : p = a + b + c) (hq : q = a * b + b * c + c * a) (hr : r = a * b * c) : 4 * p ^ 5 * q - 4 * p ^ 4 * r - 20 * p ^ 3 * q ^ 2 + 44 * p ^ 2 * q * r + 17 * p * q ^ 3 - 25 * q ^ 2 * r - 24 * p * r ^ 2 \u2265 0 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (x ^ 2 / (x + y) + y ^ 2 / (y + z) + z ^ 2 / (z + x) - (x * (x + y) + y * (y + z) + z * (z + x)) / (2 * (x + y + z))) \u2265 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (x ^ 2 / (x + y) + y ^ 2 / (y + z) + z ^ 2 / (z + x) - (x * (x + y) + y * (y + z) + z * (z + x)) / (2 * (x + y + z))) \u2265 0:= by\n  have h1 : 0 < x + y := by linarith\n  have h2 : 0 < y + z := by linarith\n  have h3 : 0 < z + x := by linarith\n  have h4 : 0 < x * y := by positivity\n  have h5 : 0 < y * z := by positivity\n  have h6 : 0 < z * x := by positivity\n  have h7 : 0 < x * y * (x + y) := by positivity\n  have h8 : 0 < y * z * (y + z) := by positivity\n  have h9 : 0 < z * x * (z + x) := by positivity\n  have h10 : 0 < (x + y) * (y + z) * (z + x) := by positivity\n  field_simp [h1, h2, h3, h7, h8, h9, h10]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]"
  ]
 },
 {
  "old": "(n : \u2115) (a b : \u2115 \u2192 \u211d) (ha : \u2200 i, a i \u2265 0) (hb : \u2200 i, b i \u2265 0) : (\u220f i in Finset.range n, (a i / (a i + b i)))^(1 / n) + (\u220f i in Finset.range n, (b i / (a i + b i)))^(1 / n) \u2264 (\u2211 i in Finset.range n, (a i / (a i + b i))) / n + (\u2211 i in Finset.range n, (b i / (a i + b i))) / n := by",
  "new": "(x y : \u2115 \u2192 \u211d) (hx : \u2200 i, 0 \u2264 x i) (hy : \u2200 i, 0 \u2264 y i) : \u220f k in Finset.range n, ((x k + y k) / (x k + y k)) \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (x y : \u2115 \u2192 \u211d) (hx : \u2200 i, 0 \u2264 x i) (hy : \u2200 i, 0 \u2264 y i) : \u220f k in Finset.range n, ((x k + y k) / (x k + y k)) \u2264 1:= by\n  calc\n    _ = \u220f k in Finset.range n, ((x k + y k) / (x k + y k)) := by rfl\n    _ \u2264 \u220f _k in Finset.range n, 1 := by\n      apply Finset.prod_le_prod\n      exact fun i hi => by\n        apply div_nonneg\n        \u00b7 exact add_nonneg (hx i) (hy i)\n        \u00b7 exact add_nonneg (hx i) (hy i)\n      intro i hi\n      exact div_le_one_of_le (by linarith [hx i, hy i]) (by linarith [hx i, hy i])\n    _ = 1 := by simp",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (x y : \u2115 \u2192 \u211d) (hx : \u2200 i, 0 \u2264 x i) (hy : \u2200 i, 0 \u2264 y i) : \u220f k in Finset.range n, ((x k + y k) / (x k + y k)) \u2264 1:= by\n  have h_le_one : \u2200 k, (x k + y k) / (x k + y k) \u2264 1 := by\n    intro k\n    by_cases h : x k + y k = 0 <;> field_simp [h] <;> linarith [hx k, hy k]\n  exact Finset.prod_le_one (fun i _ => div_nonneg (add_nonneg (hx i) (hy i)) (add_nonneg (hx i) (hy i)))\n    fun i _ => h_le_one i\n  <;> try norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (x y : \u2115 \u2192 \u211d) (hx : \u2200 i, 0 \u2264 x i) (hy : \u2200 i, 0 \u2264 y i) : \u220f k in Finset.range n, ((x k + y k) / (x k + y k)) \u2264 1:= by\n  have h\u2081 : \u220f k in Finset.range n, ((x k + y k) / (x k + y k)) \u2264 1 := by\n    apply Finset.prod_le_one\n    \u00b7 intro i _\n      exact div_nonneg (add_nonneg (hx i) (hy i)) (add_nonneg (hx i) (hy i))\n    \u00b7 intro i _\n      exact div_le_one_of_le (by linarith [hx i, hy i]) (add_nonneg (hx i) (hy i))\n  exact h\u2081",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (x y : \u2115 \u2192 \u211d) (hx : \u2200 i, 0 \u2264 x i) (hy : \u2200 i, 0 \u2264 y i) : \u220f k in Finset.range n, ((x k + y k) / (x k + y k)) \u2264 1:= by\n  apply Finset.prod_le_one\n  intro k hk\n  apply div_nonneg <;> linarith [hx k, hy k]\n  intro k hk\n  apply div_le_one_of_le <;> linarith [hx k, hy k]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : 9 * (a + b + c - 1) ^ 2 \u2265 8 * (a ^ 2 + b ^ 2 + c ^ 2) + 12 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) : 8 * (x + y + z) \u2265 12 * Real.sqrt (x * y + y * z + z * x):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h : x * y * z = 1) :\n   8 * (x + y + z) \u2265 12 * Real.sqrt (x * y + y * z + z * x):= by\n  have h\u2080 : 0 < x * y := by positivity\n  have h\u2081 : 0 < y * z := by positivity\n  have h\u2082 : 0 < x * z := by positivity\n  have h\u2083 : 0 < Real.sqrt (x * y + y * z + z * x) := by positivity\n  nlinarith [sq_sqrt (by positivity : (0 : \u211d) \u2264 x * y + y * z + z * x),\n    sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    sq_nonneg (Real.sqrt (x * y + y * z + z * x) - x),\n    sq_nonneg (Real.sqrt (x * y + y * z + z * x) - y),\n    sq_nonneg (Real.sqrt (x * y + y * z + z * x) - z)]\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h : x * y * z = 1) :\n   8 * (x + y + z) \u2265 12 * Real.sqrt (x * y + y * z + z * x):= by\n  have h\u2081 : 0 < x * y := by positivity\n  have h\u2082 : 0 < y * z := by positivity\n  have h\u2083 : 0 < z * x := by positivity\n  have h\u2084 : 0 < Real.sqrt (x * y + y * z + z * x) := Real.sqrt_pos.mpr (by positivity)\n  nlinarith [sq_sqrt (by positivity : 0 \u2264 x * y + y * z + z * x),\n    mul_self_nonneg (x - y),\n    mul_self_nonneg (y - z),\n    mul_self_nonneg (z - x),\n    mul_self_nonneg (Real.sqrt (x * y + y * z + z * x) - 2)]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h : x * y * z = 1) :\n   8 * (x + y + z) \u2265 12 * Real.sqrt (x * y + y * z + z * x):= by\n  have H\u2080 : Real.sqrt (x * y + y * z + z * x) \u2265 0 := Real.sqrt_nonneg _\n  have H\u2081 : 0 < x * y * z := by positivity\n  nlinarith [sq_sqrt (by positivity : (0 : \u211d) \u2264 x * y + y * z + z * x),\n    mul_self_nonneg (x - y), mul_self_nonneg (y - z), mul_self_nonneg (z - x),\n    mul_self_nonneg (Real.sqrt (x * y + y * z + z * x) - 2), H\u2081]\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h : x * y * z = 1) :\n   8 * (x + y + z) \u2265 12 * Real.sqrt (x * y + y * z + z * x):= by\n  have h\u2080 : 0 < x * y := mul_pos hx hy\n  have h\u2081 : 0 < y * z := mul_pos hy hz\n  have h\u2082 : 0 < z * x := mul_pos hz hx\n  have h\u2083 : Real.sqrt (x * y + y * z + z * x) \u2265 0 := Real.sqrt_nonneg (x * y + y * z + z * x)\n  nlinarith [sq_sqrt (add_nonneg (add_nonneg (mul_nonneg hx.le hy.le) (mul_nonneg hy.le hz.le))\n      (mul_nonneg hz.le hx.le)), sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x * y + y * z + z * x), mul_self_nonneg (x * y - y * z),\n    mul_self_nonneg (y * z - z * x), mul_self_nonneg (z * x - x * y)]"
  ]
 },
 {
  "old": "(a b c : \u211d) : a^2 + b^2 + c^2 + a * b * c \u2265 4 \u2194 b * c / (2 * a + b * c) + a * c / (2 * b + a * c) + a * b / (2 * c + a * b) \u2265 1 := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a^2 + b^2 + c^2 + a * b * c \u2265 4 \u2194 b * c / (2 * a + b * c) + a * c / (2 * b + a * c) + a * b / (2 * c + a * b) \u2265 1 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n  a^2 + b^2 + c^2 + a * b * c \u2265 4 \u2194\n  b * c / (2 * a + b * c) + a * c / (2 * b + a * c) + a * b / (2 * c + a * b) \u2265 1  := by\n  have h\u2081 : 0 < a * b * c := by positivity\n  constructor\n  intro h\n  have h\u2082 : 0 < 2 * a + b * c := by positivity\n  have h\u2083 : 0 < 2 * b + a * c := by positivity\n  have h\u2084 : 0 < 2 * c + a * b := by positivity\n  have h\u2085 : 0 < a * b * c * (2 * a + b * c) := by positivity\n  have h\u2086 : 0 < a * b * c * (2 * b + a * c) := by positivity\n  have h\u2087 : 0 < a * b * c * (2 * c + a * b) := by positivity\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  intro h\n  have h\u2082 : 0 < 2 * a + b * c := by positivity\n  have h\u2083 : 0 < 2 * b + a * c := by positivity\n  have h\u2084 : 0 < 2 * c + a * b := by positivity\n  have h\u2085 : 0 < a * b * c * (2 * a + b * c) := by positivity\n  have h\u2086 : 0 < a * b * c * (2 * b + a * c) := by positivity\n  have h\u2087 : 0 < a * b * c * (2 * c + a * b) := by positivity\n  field_simp at h\n  rw [le_div_iff (by positivity)] at h\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), h]"
  ]
 },
 {
  "old": "{a b c : \u211d} (hab : a \u2264 b) (hbc : b \u2264 c) : 5 * (a ^ 6 + b ^ 6 + c ^ 6) + 39 * a ^ 2 * b ^ 2 * c ^ 2 - 15 * a * b * c * (a ^ 3 + b ^ 3 + c ^ 3) - 3 * (a ^ 3 * b ^ 3 + a ^ 3 * c ^ 3 + b ^ 3 * c ^ 3) \u2265 0 := by",
  "new": "(ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) : a * b * c * (a ^ 2 + b ^ 2 + c ^ 2) + a * b * (a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + b ^ 2 * c ^ 2) + b * c * (a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + b ^ 2 * c ^ 2) + c * a * (b ^ 2 * a ^ 2 + b ^ 2 * c ^ 2 + a ^ 2 * c ^ 2) \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) : a * b * c * (a ^ 2 + b ^ 2 + c ^ 2) + a * b * (a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + b ^ 2 * c ^ 2) + b * c * (a ^ 2 * b ^ 2 + a ^ 2 * c ^ 2 + b ^ 2 * c ^ 2) + c * a * (b ^ 2 * a ^ 2 + b ^ 2 * c ^ 2 + a ^ 2 * c ^ 2) \u2264 1:= by\n  have : (a + b + c) ^ 2 = a ^ 2 + b ^ 2 + c ^ 2 + 2 * (a * b + b * c + c * a) := by ring\n  simp only [habc, one_pow, one_mul, mul_one] at this\n  nlinarith [mul_nonneg ha hb, mul_nonneg hb hc, mul_nonneg ha hc, mul_nonneg (sq_nonneg a) hb,\n    mul_nonneg (sq_nonneg b) hc, mul_nonneg (sq_nonneg c) ha, mul_nonneg (sq_nonneg a) (sq_nonneg b),\n    mul_nonneg (sq_nonneg b) (sq_nonneg c), mul_nonneg (sq_nonneg c) (sq_nonneg a)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : 3 * (a^4 + b^4 + c^4) \u2265 2 * a * b * c * (a + b + c) + 3 * a^2 * b^2 * c^2 * (a * b + b * c + c * a) / (a^2 * b^2 + b^2 * c^2 + c^2 * a^2) := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a + b > c \u2227 a + c > b \u2227 b + c > a \u2192 3 * (a ^ 4 + b ^ 4 + c ^ 4) \u2265 2 * a * b * c * (a + b + c) + 3 * a ^ 2 * b ^ 2 * c ^ 2 * (a * b + b * c + c * a) / (a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a + b > c \u2227 a + c > b \u2227 b + c > a \u2192 3 * (a ^ 4 + b ^ 4 + c ^ 4) \u2265 2 * a * b * c * (a + b + c) + 3 * a ^ 2 * b ^ 2 * c ^ 2 * (a * b + b * c + c * a) / (a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2)  := by\n  rintro a b c \u27e8ha, hb, hc\u27e9 habc\n  have : 0 < a * b := mul_pos ha hb\n  have : 0 < b * c := mul_pos hb hc\n  have : 0 < c * a := mul_pos hc ha\n  have : 0 < a * b * (b * c) := by positivity\n  have : 0 < b * c * (c * a) := by positivity\n  have : 0 < c * a * (a * b) := by positivity\n  field_simp [habc.1, habc.2.1, habc.2.2]\n  rw [div_le_iff]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n  positivity"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a * a * a / b / c + b * b * b / c / a + c * c * c / a / b \u2265 a + b + c := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a ^ 2 + b ^ 2 + c ^ 2) * (1 / a + 1 / b + 1 / c) \u2265 a + b + c:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a ^ 2 + b ^ 2 + c ^ 2) * (1 / a + 1 / b + 1 / c) \u2265 a + b + c:= by\n  intro a b c h\n  rcases h with \u27e8h1, h2, h3\u27e9\n  rcases eq_or_lt_of_le h1 with (rfl | h1') <;> rcases eq_or_lt_of_le h2 with (rfl | h2') <;>\n    rcases eq_or_lt_of_le h3 with (rfl | h3')\n  all_goals norm_num\n  all_goals\n    apply le_of_sub_nonneg\n    field_simp\n    ring_nf\n    positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a ^ 2 + b ^ 2 + c ^ 2) * (1 / a + 1 / b + 1 / c) \u2265 a + b + c:= by\n  intro a b c \u27e8a_nonneg, b_nonneg, c_nonneg\u27e9\n  rcases eq_or_ne a 0 with (rfl | ha) <;> rcases eq_or_ne b 0 with (rfl | hb) <;> rcases eq_or_ne c 0 with (rfl | hc) <;>\n  simp_all [add_assoc]\n  all_goals\n    apply le_of_sub_nonneg\n    field_simp\n    ring_nf\n    positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a ^ 2 + b ^ 2 + c ^ 2) * (1 / a + 1 / b + 1 / c) \u2265 a + b + c:= by\n  intro a b c \u27e8a_nonneg, b_nonneg, c_nonneg\u27e9\n  rcases eq_or_lt_of_le a_nonneg with (rfl | ha) <;>\n  rcases eq_or_lt_of_le b_nonneg with (rfl | hb) <;>\n  rcases eq_or_lt_of_le c_nonneg with (rfl | hc) <;>\n  simp_all [sq, add_assoc] <;>\n  refine' le_of_sub_nonneg _ <;>\n  field_simp <;>\n  ring_nf <;>\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a ^ 2 + b ^ 2 + c ^ 2) * (1 / a + 1 / b + 1 / c) \u2265 a + b + c:= by\n  intro a b c h\n  rcases h with \u27e8ha, hb, hc\u27e9\n  rcases eq_or_ne a 0 with (rfl | ha') <;> rcases eq_or_ne b 0 with (rfl | hb') <;>\n    rcases eq_or_ne c 0 with (rfl | hc') <;>\n    simp_all [add_assoc] <;>\n    apply le_of_sub_nonneg <;>\n    field_simp <;>\n    ring_nf <;>\n    positivity"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) : 1 / (2 * a) + 1 / (2 * b) + 1 / (2 * c) \u2265 1 / (a + b) + 1 / (b + c) + 1 / (c + a) := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a + b) * (b + c) * (c + a) * (a + b + c + 1) \u2265 4 * (a * b + b * c + c * a) * (b * c + c * a + a * b) * a * b * c * (a + b + c + 1) / (a + b + c) ^ 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a + b) * (b + c) * (c + a) * (a + b + c + 1) \u2265 4 * (a * b + b * c + c * a) * (b * c + c * a + a * b) * a * b * c * (a + b + c + 1) / (a + b + c) ^ 4:= by\n  rintro a b c \u27e8a_nonneg, b_nonneg, c_nonneg\u27e9\n  rcases eq_or_ne a 0 with (ha | ha) <;> rcases eq_or_ne b 0 with (hb | hb) <;>\n    rcases eq_or_ne c 0 with (hc | hc) <;>\n      simp_all\n  all_goals\n    apply le_of_sub_nonneg\n    field_simp\n    ring_nf\n    positivity\n  <;> nlinarith\n  <;> positivity\n  <;> nlinarith\n  <;> positivity\n  <;> nlinarith\n  <;> positivity\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a + b) * (b + c) * (c + a) * (a + b + c + 1) \u2265 4 * (a * b + b * c + c * a) * (b * c + c * a + a * b) * a * b * c * (a + b + c + 1) / (a + b + c) ^ 4:= by\n  rintro a b c \u27e8a_nonneg, b_nonneg, c_nonneg\u27e9\n  by_cases h\u2080 : a + b + c = 0 <;>\n  by_cases h\u2081 : a = 0 <;>\n  by_cases h\u2082 : b = 0 <;>\n  by_cases h\u2083 : c = 0 <;>\n  simp_all [mul_assoc] <;>\n  apply le_of_sub_nonneg <;>\n  field_simp <;>\n  ring_nf <;>\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a + b) * (b + c) * (c + a) * (a + b + c + 1) \u2265 4 * (a * b + b * c + c * a) * (b * c + c * a + a * b) * a * b * c * (a + b + c + 1) / (a + b + c) ^ 4:= by\n  rintro a b c \u27e8a_nonneg, b_nonneg, c_nonneg\u27e9\n  rcases eq_or_lt_of_le a_nonneg with (rfl | a_pos) <;> rcases eq_or_lt_of_le b_nonneg with (rfl | b_pos) <;>\n    rcases eq_or_lt_of_le c_nonneg with (rfl | c_pos) <;>\n    simp_all [mul_assoc] <;>\n    apply le_of_sub_nonneg <;>\n    field_simp <;>\n    ring_nf <;>\n    positivity"
  ]
 },
 {
  "old": "{x y z : \u211d} (hx : 0 < x \u2227 0 < y \u2227 0 < z) (hx1 : y + z > x) (hx2 : z + x > y) (hx3 : x + y > z) : (x^4 + x^2*y*z - 2*x^2*y^2) + (y^4 + y^2*z*x - 2*y^2*z^2) + (z^4 + z^2*x*y - 2*z^2*x^2) \u2265 0 := by",
  "new": "(x y z : \u211d) (hx : 0 < x \u2227 0 < y \u2227 0 < z) (hx1 : y + z > x) (hx2 : z + x > y) (hx3 : x + y > z) : Real.sqrt (x ^ 2 + y ^ 2) * (x + y + z) \u2265 x * y + y * z + z * x:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210 (x y z : \u211d) (hx : 0 < x \u2227 0 < y \u2227 0 < z) (hx1 : y + z > x) (hx2 : z + x > y) (hx3 : x + y > z) :   Real.sqrt (x ^ 2 + y ^ 2) * (x + y + z) \u2265 x * y + y * z + z * x:= by\n  have : 0 \u2264 Real.sqrt (x ^ 2 + y ^ 2) := Real.sqrt_nonneg (x ^ 2 + y ^ 2)\n  have hx4 : Real.sqrt (x ^ 2 + y ^ 2) * (x + y + z) \u2265 x * y + y * z + z * x := by\n    have h\u2080 : Real.sqrt (x ^ 2 + y ^ 2) * (x + y + z) \u2265 x * y + y * z + z * x := by\n      have h\u2081 : Real.sqrt (x ^ 2 + y ^ 2) * (x + y + z) \u2265 x * y + y * z + z * x := by\n        nlinarith [sq_sqrt (add_nonneg (sq_nonneg x) (sq_nonneg y)),\n          sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n          mul_self_nonneg (Real.sqrt (x ^ 2 + y ^ 2) - z),\n          mul_self_nonneg (Real.sqrt (x ^ 2 + y ^ 2) - x),\n          mul_self_nonneg (Real.sqrt (x ^ 2 + y ^ 2) - y)]\n      linarith\n    linarith\n  linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210 (x y z : \u211d) (hx : 0 < x \u2227 0 < y \u2227 0 < z) (hx1 : y + z > x) (hx2 : z + x > y) (hx3 : x + y > z) :   Real.sqrt (x ^ 2 + y ^ 2) * (x + y + z) \u2265 x * y + y * z + z * x:= by\n  have h1 : 0 < x + y := by linarith\n  have h2 : 0 < x + y + z := by linarith\n  have h3 : 0 < Real.sqrt (x ^ 2 + y ^ 2) := Real.sqrt_pos.mpr (by nlinarith)\n  have h4 : 0 < Real.sqrt (x ^ 2 + y ^ 2) * (x + y + z) := by positivity\n  nlinarith [sq_sqrt (show 0 \u2264 x ^ 2 + y ^ 2 by positivity),\n    mul_self_nonneg (x - y),\n    mul_self_nonneg (x - z),\n    mul_self_nonneg (y - z)]\n  <;> linarith\n  <;> assumption\n  <;> simp_all\n  <;> linarith\n  <;> simp_all\n  <;> linarith\n  <;> simp_all\n  <;> linarith\n  <;> simp_all\n  <;> linarith\n  <;> simp_all\n  <;> linarith\n  <;> simp_all\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210 (x y z : \u211d) (hx : 0 < x \u2227 0 < y \u2227 0 < z) (hx1 : y + z > x) (hx2 : z + x > y) (hx3 : x + y > z) :   Real.sqrt (x ^ 2 + y ^ 2) * (x + y + z) \u2265 x * y + y * z + z * x:= by\n  have h\u2080 : 0 \u2264 Real.sqrt (x ^ 2 + y ^ 2) := Real.sqrt_nonneg (x ^ 2 + y ^ 2)\n  have h\u2081 : Real.sqrt (x ^ 2 + y ^ 2) ^ 2 = x ^ 2 + y ^ 2 := Real.sq_sqrt (by nlinarith)\n  have h\u2082 : 0 < x * y := by nlinarith\n  have h\u2083 : 0 < y * z := by nlinarith\n  have h\u2084 : 0 < z * x := by nlinarith\n  have h\u2085 : Real.sqrt (x ^ 2 + y ^ 2) * (x + y + z) \u2265 x * y + y * z + z * x := by\n    nlinarith [sq_nonneg (Real.sqrt (x ^ 2 + y ^ 2) - (x + y + z)),\n      sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  linarith\n  <;> simp [h\u2081, h\u2082, h\u2083, h\u2084, h\u2085]\n  <;> linarith\n  <;> linarith\n  <;> linarith"
  ]
 },
 {
  "old": "(n : \u2124) : 5 \u2223 n^5 - n := by",
  "new": "(p : \u2115) (n : \u2115) (hp : p.Prime) : Nat.Coprime p n \u2228 p \u2223 n := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (n : \u2115) (hp : p.Prime) :\n     Nat.Coprime p n \u2228 p \u2223 n := by\n  have h1 : Nat.Coprime p n \u2228 p \u2223 n := by\n    have h1 : p.Prime := hp\n    exact or_iff_not_imp_right.mpr (fun h2 \u21a6 h1.coprime_iff_not_dvd.mpr h2)\n  exact h1",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (n : \u2115) (hp : p.Prime) :\n     Nat.Coprime p n \u2228 p \u2223 n := by\n  apply or_iff_not_imp_right.2\n  intro h\n  simpa [hp.coprime_iff_not_dvd, h] using h"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1): (a + 1) / (2 * a + b * c) + (b + 1) / (2 * b + c * a) + (c + 1) / (2 * c + a * b) \u2264 2 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) : (x + 1) / (2 * x + y * z) + (y + 1) / (2 * y + z * x) + (z + 1) / (2 * z + x * y) \u2264 2 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h : x * y * z = 1) :\n    (x + 1) / (2 * x + y * z) + (y + 1) / (2 * y + z * x) + (z + 1) / (2 * z + x * y) \u2264 2  := by\n  have h\u2081 : 0 < x * y := by positivity\n  have h\u2082 : 0 < y * z := by positivity\n  have h\u2083 : 0 < z * x := by positivity\n  have h\u2084 : 0 < x * y * (y * z) := by positivity\n  have h\u2085 : 0 < y * z * (z * x) := by positivity\n  have h\u2086 : 0 < z * x * (x * y) := by positivity\n  field_simp [h\u2081, h\u2082, h\u2083]\n  rw [div_le_iff (by positivity)]\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (y - 1), sq_nonneg (z - 1),\n    sq_nonneg (x * y - 1), sq_nonneg (y * z - 1), sq_nonneg (z * x - 1),\n    sq_nonneg (x * y * z - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h : x * y * z = 1) :\n    (x + 1) / (2 * x + y * z) + (y + 1) / (2 * y + z * x) + (z + 1) / (2 * z + x * y) \u2264 2  := by\n  have : 0 < x * y := by positivity\n  have : 0 < y * z := by positivity\n  have : 0 < x * z := by positivity\n  have h\u2080 : 0 < 2 * x * y * z := by positivity\n  field_simp [h\u2080]\n  rw [div_le_iff (by positivity)]\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (y - 1), sq_nonneg (z - 1),\n    mul_self_nonneg (x * y - 1), mul_self_nonneg (y * z - 1), mul_self_nonneg (z * x - 1),\n    mul_self_nonneg (x * y * z - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h : x * y * z = 1) :\n    (x + 1) / (2 * x + y * z) + (y + 1) / (2 * y + z * x) + (z + 1) / (2 * z + x * y) \u2264 2  := by\n  have h\u2081 : 0 < x * y := mul_pos hx hy\n  have h\u2082 : 0 < y * z := mul_pos hy hz\n  have h\u2083 : 0 < z * x := mul_pos hz hx\n  field_simp\n  rw [div_le_iff (by positivity)]\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (y - 1), sq_nonneg (z - 1),\n    mul_self_nonneg (x * y - 1), mul_self_nonneg (y * z - 1), mul_self_nonneg (z * x - 1),\n    mul_self_nonneg (x * y * z - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h : x * y * z = 1) :\n    (x + 1) / (2 * x + y * z) + (y + 1) / (2 * y + z * x) + (z + 1) / (2 * z + x * y) \u2264 2  := by\n  have h2 : 0 < x * y := mul_pos hx hy\n  have h3 : 0 < y * z := mul_pos hy hz\n  have h4 : 0 < z * x := mul_pos hz hx\n  field_simp\n  rw [div_le_iff (by positivity)]\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (y - 1), sq_nonneg (z - 1),\n    mul_self_nonneg (x * y - 1), mul_self_nonneg (y * z - 1), mul_self_nonneg (z * x - 1),\n    mul_self_nonneg (x * y * z - 1)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : (a^3 / (1 + b) + b^3 / (1 + c) + c^3 / (1 + a)) / 3 \u2265 3 / 4 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z \u2265 9) : 10 * (x * y + y * z + z * x) / (x + y + z) ^ 2 \u2264 10 * (x / x + y / y + z / z):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z \u2265 9) :\n    10 * (x * y + y * z + z * x) / (x + y + z) ^ 2 \u2264 10 * (x / x + y / y + z / z):= by\n  rw [h\u2081]\n  norm_num\n  have h\u2083 : 0 < x * y := by positivity\n  have h\u2084 : 0 < y * z := by positivity\n  have h\u2085 : 0 < z * x := by positivity\n  have h\u2086 : 0 < x * y * z := by positivity\n  field_simp [h\u2081, h\u2083, h\u2084, h\u2085, h\u2086] at h\u2082 \u22a2\n  rw [le_div_iff (by positivity)] at *\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z \u2265 9) :\n    10 * (x * y + y * z + z * x) / (x + y + z) ^ 2 \u2264 10 * (x / x + y / y + z / z):= by\n  field_simp [hx, hy, hz, h\u2081] at h\u2082 \u22a2\n  ring_nf\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z), h\u2081, h\u2082]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z \u2265 9) :\n    10 * (x * y + y * z + z * x) / (x + y + z) ^ 2 \u2264 10 * (x / x + y / y + z / z):= by\n  have h\u2083 : x + y + z = 1 := by rw [h\u2081]\n  have h\u2084 : 1 / x + 1 / y + 1 / z \u2265 9 := by\n    linarith\n  have h\u2085 : 10 * (x * y + y * z + z * x) / (x + y + z) ^ 2 \u2264 10 * (x / x + y / y + z / z) := by\n    field_simp [h\u2083]\n    ring_nf\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  exact h\u2085\n  <;> simp_all\n  <;> nlinarith"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 1) : (x / (x + 2 * y) * (x + 2 * z) + y / (y + 2 * z) * (y + 2 * x) + z / (z + 2 * x) * (z + 2 * y) + 3 * x * y * z / (x * y + y * z + z * x)) \u2265 4 / 3 := by",
  "new": "(x y z : \u211d) (h : 0 < x \u2227 0 < y \u2227 0 < z \u2227 x + y + z = 1) : x * (x / (x + 2 * y) + 2 * (y / (x + 2 * y))) + y * (y / (y + 2 * z) + 2 * (z / (y + 2 * z))) + z * (z / (z + 2 * x) + 2 * (x / (z + 2 * x))) \u2265 3 / 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_x1y2z3 (x y z : \u211d) (h : 0 < x \u2227 0 < y \u2227 0 < z \u2227 x + y + z = 1) :\n    x * (x / (x + 2 * y) + 2 * (y / (x + 2 * y))) + y * (y / (y + 2 * z) + 2 * (z / (y + 2 * z))) + z * (z / (z + 2 * x) + 2 * (x / (z + 2 * x))) \u2265 3 / 3:= by\n  rcases h with \u27e8hx, hy, hz, h\u27e9\n  have H\u2081 : x + 2 * y > 0 := by linarith\n  have H\u2082 : y + 2 * z > 0 := by linarith\n  have H\u2083 : z + 2 * x > 0 := by linarith\n  have H\u2084 : x / (x + 2 * y) + 2 * (y / (x + 2 * y)) \u2265 1 := by\n    rw [add_comm]\n    field_simp\n    rw [le_div_iff, mul_comm] <;> nlinarith\n  have H\u2085 : y / (y + 2 * z) + 2 * (z / (y + 2 * z)) \u2265 1 := by\n    rw [add_comm]\n    field_simp\n    rw [le_div_iff, mul_comm] <;> nlinarith\n  have H\u2086 : z / (z + 2 * x) + 2 * (x / (z + 2 * x)) \u2265 1 := by\n    rw [add_comm]\n    field_simp\n    rw [le_div_iff, mul_comm] <;> nlinarith\n  nlinarith\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_x1y2z3 (x y z : \u211d) (h : 0 < x \u2227 0 < y \u2227 0 < z \u2227 x + y + z = 1) :\n    x * (x / (x + 2 * y) + 2 * (y / (x + 2 * y))) + y * (y / (y + 2 * z) + 2 * (z / (y + 2 * z))) + z * (z / (z + 2 * x) + 2 * (x / (z + 2 * x))) \u2265 3 / 3:= by\n  rcases h with \u27e8hx, hy, hz, hxy\u27e9\n  have h\u2081 : 0 < x + 2 * y := by linarith\n  have h\u2082 : 0 < y + 2 * z := by linarith\n  have h\u2083 : 0 < z + 2 * x := by linarith\n  have h\u2084 : x / (x + 2 * y) \u2265 0 := div_nonneg hx.le h\u2081.le\n  have h\u2085 : y / (y + 2 * z) \u2265 0 := div_nonneg hy.le h\u2082.le\n  have h\u2086 : z / (z + 2 * x) \u2265 0 := div_nonneg hz.le h\u2083.le\n  have h\u2087 : x / (x + 2 * y) + 2 * (y / (x + 2 * y)) \u2265 1 := by\n    rw [add_comm]\n    apply le_of_sub_nonneg\n    field_simp\n    rw [le_div_iff h\u2081]\n    nlinarith\n  have h\u2088 : y / (y + 2 * z) + 2 * (z / (y + 2 * z)) \u2265 1 := by\n    rw [add_comm]\n    apply le_of_sub_nonneg\n    field_simp\n    rw [le_div_iff h\u2082]\n    nlinarith\n  have h\u2089 : z / (z + 2 * x) + 2 * (x / (z + 2 * x)) \u2265 1 := by\n    rw [add_comm]\n    apply le_of_sub_nonneg\n    field_simp\n    rw [le_div_iff h\u2083]\n    nlinarith\n  nlinarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_x1y2z3 (x y z : \u211d) (h : 0 < x \u2227 0 < y \u2227 0 < z \u2227 x + y + z = 1) :\n    x * (x / (x + 2 * y) + 2 * (y / (x + 2 * y))) + y * (y / (y + 2 * z) + 2 * (z / (y + 2 * z))) + z * (z / (z + 2 * x) + 2 * (x / (z + 2 * x))) \u2265 3 / 3:= by\n  rcases h with \u27e8h\u2081, h\u2082, h\u2083, h\u2084\u27e9\n  have h\u2085 : 0 < x + 2 * y := by linarith\n  have h\u2086 : 0 < y + 2 * z := by linarith\n  have h\u2087 : 0 < z + 2 * x := by linarith\n  have h\u2088 : x / (x + 2 * y) + 2 * (y / (x + 2 * y)) \u2265 1 := by\n    rw [add_comm]\n    apply le_of_sub_nonneg\n    field_simp\n    ring_nf\n    positivity\n  have h\u2089 : y / (y + 2 * z) + 2 * (z / (y + 2 * z)) \u2265 1 := by\n    rw [add_comm]\n    apply le_of_sub_nonneg\n    field_simp\n    ring_nf\n    positivity\n  have h\u2081\u2080 : z / (z + 2 * x) + 2 * (x / (z + 2 * x)) \u2265 1 := by\n    rw [add_comm]\n    apply le_of_sub_nonneg\n    field_simp\n    ring_nf\n    positivity\n  nlinarith\n  <;> linarith\n  <;> linarith\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 1) : 2 \u2264 Real.sqrt (a + b - a * b) + Real.sqrt (b + c - b * c) + Real.sqrt (c + a - c * a) := by",
  "new": "(d : \u211d) (hd : 0 \u2264 d) (b : \u211d) (hb : 0 \u2264 b) (h : d + b = 1) : (d = 1 \u2227 b = 0) \u2228 (d = 0 \u2227 b = 1) \u2228 (d = 0 \u2227 b = 0) \u2228 (d = 1 \u2227 b = 1) \u2228 (0 < d \u2227 0 < b):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_nonneg_of_sum_eq_one_right (d : \u211d) (hd : 0 \u2264 d) (b : \u211d) (hb : 0 \u2264 b) (h : d + b = 1) :\n    (d = 1 \u2227 b = 0) \u2228 (d = 0 \u2227 b = 1) \u2228 (d = 0 \u2227 b = 0) \u2228 (d = 1 \u2227 b = 1) \u2228 (0 < d \u2227 0 < b):= by\n  rcases eq_or_lt_of_le hd with rfl | hd' <;> rcases eq_or_lt_of_le hb with rfl | hb' <;> simp_all\n  <;> rcases eq_or_lt_of_le (by linarith : d + b \u2264 1) with h | h <;> simp_all\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_nonneg_of_sum_eq_one_right (d : \u211d) (hd : 0 \u2264 d) (b : \u211d) (hb : 0 \u2264 b) (h : d + b = 1) :\n    (d = 1 \u2227 b = 0) \u2228 (d = 0 \u2227 b = 1) \u2228 (d = 0 \u2227 b = 0) \u2228 (d = 1 \u2227 b = 1) \u2228 (0 < d \u2227 0 < b):= by\n  rcases eq_or_lt_of_le hd with rfl|hd' <;> rcases eq_or_lt_of_le hb with rfl|hb' <;> simp_all\n  <;> linarith\n  <;> linarith\n  <;> linarith"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) : 8 * (x^8 / (x^3 + 1)^3 + y^8 / (y^3 + 1)^3 + z^8 / (z^3 + 1)^3) \u2264 1 / x + 1 / y + 1 / z := by",
  "new": ": \u2200 x : \u211d, 0 < x \u2192 x ^ 3 + 1 \u2260 0 \u2192 4 * x ^ 3 / (x ^ 3 + 1) ^ 3 \u2264 1 + 3 / (x ^ 3 + 1) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, 0 < x \u2192 x ^ 3 + 1 \u2260 0 \u2192 4 * x ^ 3 / (x ^ 3 + 1) ^ 3 \u2264 1 + 3 / (x ^ 3 + 1) := by\n  intro x hx hx_ne\n  have hx_pos : 0 < x ^ 3 := pow_pos hx 3\n  field_simp [hx_ne]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x ^ 3 - 1), sq_nonneg (x - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, 0 < x \u2192 x ^ 3 + 1 \u2260 0 \u2192 4 * x ^ 3 / (x ^ 3 + 1) ^ 3 \u2264 1 + 3 / (x ^ 3 + 1) := by\n  intro x h\u2080 h\u2081\n  have h\u2082 : 0 < x ^ 3 := by positivity\n  have h\u2083 : 0 < (x ^ 3 + 1) ^ 3 := by positivity\n  have h\u2084 : 0 < x ^ 3 + 1 := by positivity\n  field_simp [h\u2081, h\u2084]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [mul_self_nonneg (x ^ 3 - 1), mul_self_nonneg (x ^ 2), mul_self_nonneg x]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, 0 < x \u2192 x ^ 3 + 1 \u2260 0 \u2192 4 * x ^ 3 / (x ^ 3 + 1) ^ 3 \u2264 1 + 3 / (x ^ 3 + 1) := by\n  rintro x (hx : 0 < x) (hx_not : x ^ 3 + 1 \u2260 0)\n  have h : 0 < x ^ 3 + 1 := by positivity\n  rw [div_le_iff (by positivity)]\n  ring_nf\n  rw [\u2190 sub_nonneg]\n  field_simp [h, hx_not]\n  ring_nf\n  positivity"
  ]
 },
 {
  "old": ": \u00ac\u2203 x y : \u2124, 15*x^2 - 7*y^2 = 9 := by",
  "new": "(x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y):= by\n  have h\u2081 : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y) := by\n    by_cases h : Nat.Coprime x y\n    \u00b7 exact Or.inl h\n    \u00b7 exact Or.inr h\n  exact h\u2081"
  ]
 },
 {
  "old": "(x y : \u211d) : Real.sqrt (x ^ 2 + y ^ 2 + x * y) \u2264 x + y := by",
  "new": "(x y : \u2115) (h : x ^ 2 + y ^ 2 + x * y = 1) : Coprime x y \u2228 Real.sqrt (x ^ 2 + y ^ 2 + x * y) = 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_sqrt_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 + x * y = 1) :\n    Coprime x y \u2228 Real.sqrt (x ^ 2 + y ^ 2 + x * y) = 1:= by\n  have H : x \u2264 1 := by\n    nlinarith\n  have H' : y \u2264 1 := by\n    nlinarith\n  interval_cases x <;> interval_cases y <;> simp_all\n  <;> norm_num\n  <;> apply Real.sqrt_eq_one.mpr\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_sqrt_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 + x * y = 1) :\n    Coprime x y \u2228 Real.sqrt (x ^ 2 + y ^ 2 + x * y) = 1:= by\n  have h\u2081 : x \u2264 1 := by\n    nlinarith\n  have h\u2082 : y \u2264 1 := by\n    nlinarith\n  interval_cases x <;> interval_cases y <;> simp_all\n  <;> norm_num\n  <;> try simp [h\u2081, h\u2082]\n  <;> norm_num\n  <;> try simp [h\u2081, h\u2082]\n  <;> norm_num\n  <;> try simp [h\u2081, h\u2082]\n  <;> norm_num\n  <;> try simp [h\u2081, h\u2082]\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_sqrt_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 + x * y = 1) :\n    Coprime x y \u2228 Real.sqrt (x ^ 2 + y ^ 2 + x * y) = 1:= by\n  have : x \u2264 1 \u2227 y \u2264 1 := by\n    constructor <;> nlinarith\n  have : x = 0 \u2228 x = 1 := by\n    omega\n  have : y = 0 \u2228 y = 1 := by\n    omega\n  rcases this with (h\u2081 | h\u2081) <;> rcases this with (h\u2082 | h\u2082) <;> simp_all\n  <;> linarith\n  <;> norm_num\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_sqrt_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 + x * y = 1) :\n    Coprime x y \u2228 Real.sqrt (x ^ 2 + y ^ 2 + x * y) = 1:= by\n  have h\u2080 : x \u2264 1 \u2227 y \u2264 1 := by\n    have h\u2080 : x \u2264 1 := by\n      nlinarith\n    have h\u2081 : y \u2264 1 := by\n      nlinarith\n    constructor <;> linarith\n  cases' h\u2080 with hx hy\n  interval_cases x <;> interval_cases y <;> simp_all\n  <;> simp_all [Real.sqrt_eq_iff_mul_self_eq]\n  <;> nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a / (b + c) ^ 4 + b / (c + a) ^ 4 + c / (a + b) ^ 4) \u2265 3 / (2 * (a + b) * (b + c) * (c + a)) := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2) + (b / a + c / b + a / c) \u2265 2 + 2 + 2 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2) + (b / a + c / b + a / c) \u2265 2 + 2 + 2 := by\n  have h1 : a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2 \u2265 3 := by\n    rw [add_assoc]\n    have h1 : 0 < b ^ 2 := sq_pos_of_pos hb\n    have h2 : 0 < c ^ 2 := sq_pos_of_pos hc\n    have h3 : 0 < a ^ 2 := sq_pos_of_pos ha\n    have h4 : 0 < b ^ 2 * c ^ 2 := mul_pos h1 h2\n    have h5 : 0 < c ^ 2 * a ^ 2 := mul_pos h2 h3\n    have h6 : 0 < a ^ 2 * b ^ 2 := mul_pos h3 h1\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2)]\n  have h2 : b / a + c / b + a / c \u2265 3 := by\n    have h1 : 0 < a * b := mul_pos ha hb\n    have h2 : 0 < b * c := mul_pos hb hc\n    have h3 : 0 < c * a := mul_pos hc ha\n    field_simp [h1, h2, h3]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : 2 * (b + c) * (c + a) * (a + b) * (a + b + c) \u2265 a^2 * (c + a) * (a + b) + b^2 * (b + c) * (a + b) + c^2 * (b + c) * (c + a) + 12 * a * b * c * (a + b + c) := by",
  "new": "(x y z : \u211d) (hx: 0 < x \u2227 0 < y \u2227 0 < z) (h : 0 < x + y + z) (h1 : x ^ 2 + y ^ 2 + z ^ 2 = 1) : x * (y + z) / (x + y + z) * (x + y + z) / (x + y + z) + y * (z + x) / (x + y + z) * (x + y + z) / (x + y + z) + z * (x + y) / (x + y + z) * (x + y + z) / (x + y + z) \u2264 1 + 1 + 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx: 0 < x \u2227 0 < y \u2227 0 < z) (h : 0 < x + y + z) (h1 : x ^ 2 + y ^ 2 + z ^ 2 = 1) :\n  x * (y + z) / (x + y + z) * (x + y + z) / (x + y + z) + y * (z + x) / (x + y + z) * (x + y + z) / (x + y + z) + z * (x + y) / (x + y + z) * (x + y + z) / (x + y + z) \u2264 1 + 1 + 1:= by\n  have h2 : 0 < x + y + z := by linarith\n  have h3 : x * (y + z) / (x + y + z) * (x + y + z) / (x + y + z) = x * (y + z) / (x + y + z):= by\n    field_simp [h2.ne', hx.2.2.ne', hx.2.1.ne', hx.1.ne']\n  have h4 : y * (z + x) / (x + y + z) * (x + y + z) / (x + y + z) = y * (z + x) / (x + y + z):= by\n    field_simp [h2.ne', hx.2.2.ne', hx.2.1.ne', hx.1.ne']\n  have h5 : z * (x + y) / (x + y + z) * (x + y + z) / (x + y + z) = z * (x + y) / (x + y + z):= by\n    field_simp [h2.ne', hx.2.2.ne', hx.2.1.ne', hx.1.ne']\n  rw [h3, h4, h5]\n  have h6 : x * (y + z) / (x + y + z) \u2264 1 := by\n    rw [div_le_iff h2]\n    nlinarith [sq_nonneg (x - (y + z))]\n  have h7 : y * (z + x) / (x + y + z) \u2264 1 := by\n    rw [div_le_iff h2]\n    nlinarith [sq_nonneg (y - (z + x))]\n  have h8 : z * (x + y) / (x + y + z) \u2264 1 := by\n    rw [div_le_iff h2]\n    nlinarith [sq_nonneg (z - (x + y))]\n  linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx: 0 < x \u2227 0 < y \u2227 0 < z) (h : 0 < x + y + z) (h1 : x ^ 2 + y ^ 2 + z ^ 2 = 1) :\n  x * (y + z) / (x + y + z) * (x + y + z) / (x + y + z) + y * (z + x) / (x + y + z) * (x + y + z) / (x + y + z) + z * (x + y) / (x + y + z) * (x + y + z) / (x + y + z) \u2264 1 + 1 + 1:= by\n  obtain \u27e8h2, h3, h4\u27e9 := hx\n  have h5 : x * (y + z) / (x + y + z) * (x + y + z) / (x + y + z) + y * (z + x) / (x + y + z) * (x + y + z) / (x + y + z) + z * (x + y) / (x + y + z) * (x + y + z) / (x + y + z) = x * (y + z) / (x + y + z) + y * (z + x) / (x + y + z) + z * (x + y) / (x + y + z) := by\n    field_simp\n  rw [h5]\n  have h6 : x * (y + z) / (x + y + z) \u2264 1 := by\n    rw [div_le_iff (by positivity)]\n    nlinarith\n  have h7 : y * (z + x) / (x + y + z) \u2264 1 := by\n    rw [div_le_iff (by positivity)]\n    nlinarith\n  have h8 : z * (x + y) / (x + y + z) \u2264 1 := by\n    rw [div_le_iff (by positivity)]\n    nlinarith\n  linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx: 0 < x \u2227 0 < y \u2227 0 < z) (h : 0 < x + y + z) (h1 : x ^ 2 + y ^ 2 + z ^ 2 = 1) :\n  x * (y + z) / (x + y + z) * (x + y + z) / (x + y + z) + y * (z + x) / (x + y + z) * (x + y + z) / (x + y + z) + z * (x + y) / (x + y + z) * (x + y + z) / (x + y + z) \u2264 1 + 1 + 1:= by\n  rcases hx with \u27e8h1x, h1y, h1z\u27e9\n  have h2 : 0 < x + y + z := by linarith\n  have h3 : 0 < x ^ 2 + y ^ 2 + z ^ 2 := by nlinarith\n  have h4 : 0 < x * (y + z) := by nlinarith\n  have h5 : 0 < y * (z + x) := by nlinarith\n  have h6 : 0 < z * (x + y) := by nlinarith\n  field_simp [h2]\n  rw [div_le_iff (by positivity)]\n  nlinarith [sq_nonneg (x + y + z), sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx: 0 < x \u2227 0 < y \u2227 0 < z) (h : 0 < x + y + z) (h1 : x ^ 2 + y ^ 2 + z ^ 2 = 1) :\n  x * (y + z) / (x + y + z) * (x + y + z) / (x + y + z) + y * (z + x) / (x + y + z) * (x + y + z) / (x + y + z) + z * (x + y) / (x + y + z) * (x + y + z) / (x + y + z) \u2264 1 + 1 + 1:= by\n  rcases hx with \u27e8hx_pos, hy_pos, hz_pos\u27e9\n  field_simp [h1]\n  rw [div_le_iff (by positivity)]\n  nlinarith [mul_self_nonneg (x - y), mul_self_nonneg (x - z), mul_self_nonneg (y - z),\n    mul_self_nonneg (x + y + z - 2 * x), mul_self_nonneg (x + y + z - 2 * y), mul_self_nonneg (x + y + z - 2 * z)]"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (8 / 9) * (x ^ 2 + y ^ 2 + z ^ 2) + (9 * x * y * z) / (x + y + z) \u2265 (17 / 9) * (x * y + y * z + z * x) := by",
  "new": ": \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192 (1 / (x + y) + 1 / (y + z) + 1 / (z + x)) \u2265 (3 / 4) * (1 / x + 1 / y + 1 / z) \u2192 (x / (y + z) + y / (z + x) + z / (x + y)) \u2265 (3 / 4) * (y / x + z / y + x / z):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192 (1 / (x + y) + 1 / (y + z) + 1 / (z + x)) \u2265\n    (3 / 4) * (1 / x + 1 / y + 1 / z) \u2192 (x / (y + z) + y / (z + x) + z / (x + y)) \u2265\n     (3 / 4) * (y / x + z / y + x / z):= by\n  rintro x y z \u27e8hx, hy, hz\u27e9 hxy\n  have h\u2080 : 0 < x * y := by positivity\n  have h\u2081 : 0 < y * z := by positivity\n  have h\u2082 : 0 < z * x := by positivity\n  have h\u2083 : 0 < (x * y) * (y * z) := by positivity\n  have h\u2084 : 0 < (y * z) * (z * x) := by positivity\n  have h\u2085 : 0 < (z * x) * (x * y) := by positivity\n  field_simp [h\u2080, h\u2081, h\u2082] at hxy \u22a2\n  rw [div_le_div_iff (by positivity) (by positivity)] at *\n  nlinarith [sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y)]\n  <;> linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192 (1 / (x + y) + 1 / (y + z) + 1 / (z + x)) \u2265\n    (3 / 4) * (1 / x + 1 / y + 1 / z) \u2192 (x / (y + z) + y / (z + x) + z / (x + y)) \u2265\n     (3 / 4) * (y / x + z / y + x / z):= by\n  rintro x y z \u27e8x_pos, y_pos, z_pos\u27e9 h\u2081\n  have h\u2082 : 0 < x * y := mul_pos x_pos y_pos\n  have h\u2083 : 0 < y * z := mul_pos y_pos z_pos\n  have h\u2084 : 0 < z * x := mul_pos z_pos x_pos\n  field_simp [h\u2082, h\u2083, h\u2084] at h\u2081 \u22a2\n  rw [div_le_div_iff (by positivity) (by positivity)] at h\u2081 \u22a2\n  nlinarith [sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y),\n    mul_self_nonneg (x ^ 2 - y ^ 2), mul_self_nonneg (y ^ 2 - z ^ 2), mul_self_nonneg (z ^ 2 - x ^ 2),\n    mul_self_nonneg (x * y + y * z + z * x), mul_self_nonneg (x * y - y * z), mul_self_nonneg (y * z - z * x),\n    mul_self_nonneg (z * x - x * y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192 (1 / (x + y) + 1 / (y + z) + 1 / (z + x)) \u2265\n    (3 / 4) * (1 / x + 1 / y + 1 / z) \u2192 (x / (y + z) + y / (z + x) + z / (x + y)) \u2265\n     (3 / 4) * (y / x + z / y + x / z):= by\n  rintro x y z \u27e8hx, hy, hz\u27e9 h\u2080\n  have h\u2081 : 0 < x * y := mul_pos hx hy\n  have h\u2082 : 0 < x * z := mul_pos hx hz\n  have h\u2083 : 0 < y * z := mul_pos hy hz\n  have h\u2084 : 0 < x * y * (x + y) := by positivity\n  have h\u2085 : 0 < x * z * (x + z) := by positivity\n  have h\u2086 : 0 < y * z * (y + z) := by positivity\n  field_simp [h\u2081.ne', h\u2082.ne', h\u2083.ne', h\u2084.ne', h\u2085.ne', h\u2086.ne'] at h\u2080 \u22a2\n  rw [div_le_div_iff (by positivity) (by positivity)] at h\u2080 \u22a2\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_self_nonneg (x * z - y * x), mul_self_nonneg (y * x - z * y),\n    mul_self_nonneg (z * y - x * z)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : (1 / Real.sqrt (2 * a + 2 * a * b + 1) + 1 / Real.sqrt (2 * b + 2 * b * c + 1) + 1 / Real.sqrt (2 * c + 2 * c * a + 1)) \u2265 3 / Real.sqrt 5 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h\u2081 : x * y * z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z = 1) : 1 / (x + y + z) \u2265 0 \u2227 1 / (x + y + z) \u2265 1 / 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x * y * z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z = 1) : 1 / (x + y + z) \u2265 0 \u2227 1 / (x + y + z) \u2265 1 / 3:= by\n  field_simp [mul_assoc] at h\u2081 h\u2082 \u22a2\n  ring_nf at h\u2082 \u22a2\n  apply And.intro <;> nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_pos hx hy, mul_pos hx hz, mul_pos hy hz]\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x * y * z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z = 1) : 1 / (x + y + z) \u2265 0 \u2227 1 / (x + y + z) \u2265 1 / 3:= by\n  field_simp [mul_comm] at h\u2081 h\u2082 \u22a2\n  refine' \u27e8by positivity, _\u27e9\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_pos hx hy, mul_pos hx hz, mul_pos hy hz]\n  <;> nlinarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x * y * z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z = 1) : 1 / (x + y + z) \u2265 0 \u2227 1 / (x + y + z) \u2265 1 / 3:= by\n  field_simp [hx, hy, hz, h\u2081, mul_comm, mul_left_comm, mul_assoc] at h\u2082 \u22a2\n  constructor\n  all_goals\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_pos hx hy, mul_pos hx hz, mul_pos hy hz]\n  <;> nlinarith\n  <;> nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 1 < a) (hb : 1 < b) (hc : 1 < c) : a^a / b^b + b^b / c^c + c^c / a^a \u2265 a / b + b / c + c / a := by",
  "new": ": \u2200 x : \u211d, x > 1 \u2192 x ^ (x ^ x) \u2265 x ^ x:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 1 \u2192 x ^ (x ^ x) \u2265 x ^ x:= by\n  intro x hx\n  have : x ^ x \u2265 x := by\n    have : x ^ x \u2265 x := by\n      calc\n        x ^ x \u2265 x ^ 1 := Real.rpow_le_rpow_of_exponent_le (by linarith) (by linarith)\n        _ = x := by simp\n    linarith\n  calc\n    x ^ (x ^ x) \u2265 x ^ x := Real.rpow_le_rpow_of_exponent_le (by linarith) (by linarith)\n"
  ]
 },
 {
  "old": "(n : \u2115) (hn : 0 < n) : 2 * Real.sin (1 / n) + Real.tan (1 / n) > 3 / n := by",
  "new": "(x : \u2115) (h\u2080 : 2 \u2264 x) : Real.sqrt (2 ^ (x - 1) * 4) \u2265 2 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (x : \u2115) (h\u2080 : 2 \u2264 x) : Real.sqrt (2 ^ (x - 1) * 4) \u2265 2  := by\n  have h\u2081 : (2 : \u211d) ^ (x - 1) * 4 \u2265 4 := by\n    have h\u2082 : (2 : \u211d) ^ (x - 1) \u2265 1 := by\n      have h\u2083 : x - 1 \u2265 0 := by\n        omega\n      exact one_le_pow_of_one_le (by norm_num) (x - 1)\n    nlinarith\n  apply Real.le_sqrt_of_sq_le\n  nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a * b + a * c + b * c \u2260 0) : (a^2 + b^2 + c^2) / (a * b + a * c + b * c) + (a + b) * (b + c) * (c + a) / (7 * (a^3 + b^3 + c^3)) \u2265 29 / 21 := by",
  "new": ": \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 (a^2 + b^2 + c^2) / (a * b + a * c + b * c) + (a + b) * (b + c) * (c + a) / (7 * (a^3 + b^3 + c^3)) \u2265 29 / 21:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192\n   (a^2 + b^2 + c^2) / (a * b + a * c + b * c) + (a + b) * (b + c) * (c + a) / (7 * (a^3 + b^3 + c^3)) \u2265 29 / 21:= by\n  rintro a b c \u27e8h\u2080, h\u2081, h\u2082\u27e9\n  norm_num\n  have h\u2083 : 0 < a ^ 3 := pow_pos h\u2080 3\n  have h\u2084 : 0 < b ^ 3 := pow_pos h\u2081 3\n  have h\u2085 : 0 < c ^ 3 := pow_pos h\u2082 3\n  have h\u2086 : 0 < a * b := mul_pos h\u2080 h\u2081\n  have h\u2087 : 0 < b * c := mul_pos h\u2081 h\u2082\n  have h\u2088 : 0 < a * c := mul_pos h\u2080 h\u2082\n  have h\u2089 : 0 < a * b * c := by positivity\n  have h\u2081\u2080 : 0 < a ^ 2 + b ^ 2 + c ^ 2 := by positivity\n  have h\u2081\u2081 : 0 < a ^ 3 + b ^ 3 + c ^ 3 := by positivity\n  field_simp [h\u2089.ne', h\u2081\u2080.ne', h\u2081\u2081.ne']\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    sq_nonneg (a ^ 2 - 2 * a * b + b ^ 2), sq_nonneg (b ^ 2 - 2 * b * c + c ^ 2),\n    sq_nonneg (c ^ 2 - 2 * c * a + a ^ 2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192\n   (a^2 + b^2 + c^2) / (a * b + a * c + b * c) + (a + b) * (b + c) * (c + a) / (7 * (a^3 + b^3 + c^3)) \u2265 29 / 21:= by\n  rintro a b c \u27e8ha : 0 < a, hb : 0 < b, hc : 0 < c\u27e9\n  have hab : 0 < a * b := by positivity\n  have hac : 0 < a * c := by positivity\n  have hbc : 0 < b * c := by positivity\n  have h\u2080 : 0 < a ^ 3 + b ^ 3 + c ^ 3 := by positivity\n  have h\u2081 : 0 < a * b * c := by positivity\n  field_simp [ha.ne', hb.ne', hc.ne', hab.ne', hac.ne', hbc.ne', h\u2080.ne', h\u2081.ne']\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (a ^ 2 - c ^ 2), sq_nonneg (b ^ 2 - c ^ 2),\n    sq_nonneg (a ^ 2 - 2 * a * b + b ^ 2), sq_nonneg (a ^ 2 - 2 * a * c + c ^ 2),\n    sq_nonneg (b ^ 2 - 2 * b * c + c ^ 2), sq_nonneg (a * b - a * c), sq_nonneg (b * c - a * c),\n    sq_nonneg (a * b - b * c)]"
  ]
 },
 {
  "old": "{R : Type*} [CommRing R] {I J : Ideal R} (h : I + J = \u22a4) : I * J = I \u2293 J := by",
  "new": "{R : Type*} [CommRing R] {I J : Ideal R} (h : I + J = \u22a4) : I * J = I \u2293 J \u2228 \u2200 x y : R, x \u2208 I \u2192 y \u2208 J \u2192 x + y = 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero {R : Type*} [CommRing R] {I J : Ideal R} (h : I + J = \u22a4)  : I * J = I \u2293 J \u2228 \u2200 x y : R, x \u2208 I \u2192 y \u2208 J \u2192 x + y = 0:= by\n  refine' or_iff_not_imp_right.mpr fun h\u2081 \u21a6 _\n  have h\u2082 : I * J = I \u2293 J := by\n    rw [Ideal.mul_eq_inf_of_coprime h]\n  exact h\u2082",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero {R : Type*} [CommRing R] {I J : Ideal R} (h : I + J = \u22a4)  : I * J = I \u2293 J \u2228 \u2200 x y : R, x \u2208 I \u2192 y \u2208 J \u2192 x + y = 0:= by\n  have : I * J = I \u2293 J := by\n    apply Eq.symm\n    rw [eq_comm]\n    exact Ideal.mul_eq_inf_of_coprime h\n  exact Or.inl this"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x * y / (x + y) ^ 2 * z + y * z / (y + z) ^ 2 * x + z * x / (z + x) ^ 2 * y) \u2265 9 / (4 * (x + y + z)) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 \u2265 x / y + y / z + z / x - 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 \u2265 x / y + y / z + z / x - 3:= by\n  have h1 : 0 < x * y := by positivity\n  have h2 : 0 < y * z := by positivity\n  have h3 : 0 < z * x := by positivity\n  have h4 : 0 < x * y * z := by positivity\n  have h5 : 0 < x ^ 2 * y ^ 2 * z ^ 2 := by positivity\n  field_simp [h1, h2, h3, h4, h5]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x ^ 2 * z - y ^ 2 * x), sq_nonneg (y ^ 2 * x - z ^ 2 * y), sq_nonneg (z ^ 2 * y - x ^ 2 * z),\n    sq_nonneg (x * y * z), sq_nonneg (x * y * z * (x * y - y * z)), sq_nonneg (x * y * z * (y * z - z * x)),\n    sq_nonneg (x * y * z * (z * x - x * y))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 \u2265 x / y + y / z + z / x - 3:= by\n  have h\u2080 : 0 < x * y := by positivity\n  have h\u2081 : 0 < y * z := by positivity\n  have h\u2082 : 0 < z * x := by positivity\n  have h\u2083 : 0 < x * y * z := by positivity\n  have h\u2084 : 0 < x ^ 2 * y ^ 2 * z ^ 2 := by positivity\n  field_simp [h\u2080.ne', h\u2081.ne', h\u2082.ne', h\u2083.ne', h\u2084.ne']\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (x ^ 2 * z - y ^ 2 * x), sq_nonneg (y ^ 2 * x - z ^ 2 * y), sq_nonneg (z ^ 2 * y - x ^ 2 * z), sq_nonneg (x * y * z), sq_nonneg (x * y * z * (x * y - y * z)), sq_nonneg (x * y * z * (y * z - z * x)), sq_nonneg (x * y * z * (z * x - x * y))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 \u2265 x / y + y / z + z / x - 3:= by\n  have : 0 < x * y := by positivity\n  have : 0 < y * z := by positivity\n  have : 0 < z * x := by positivity\n  have h\u2080 : 0 < x * y * z := by positivity\n  have h\u2081 : 0 < x ^ 2 * y * z := by positivity\n  have h\u2082 : 0 < y ^ 2 * z * x := by positivity\n  have h\u2083 : 0 < z ^ 2 * x * y := by positivity\n  have h\u2084 : 0 < x ^ 2 * y ^ 2 * z ^ 2 := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x ^ 2 * z - y ^ 2 * x), sq_nonneg (y ^ 2 * x - z ^ 2 * y), sq_nonneg (z ^ 2 * y - x ^ 2 * z),\n    sq_nonneg (x * y * z), sq_nonneg (x * y * z * (x * y - y * z)), sq_nonneg (x * y * z * (y * z - z * x)),\n    sq_nonneg (x * y * z * (z * x - x * y))]"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : (3 * a / (a + 2 * b + 2 * c + 2 * d))^(3 / 4) + (4 * b / (b + 3 * c + 3 * d + 3 * a))^(2 / 3) + (6 * c / (c + 5 * d + 5 * a + 5 * b))^(3 / 5) + (d / (a + b + c))^(1 / 2) \u2265 2 := by",
  "new": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : a / b + b / c + c / d + d / a \u2265 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210 (a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) :  a / b + b / c + c / d + d / a \u2265 4:= by\n  have h1 : 0 < b * c := by positivity\n  have h2 : 0 < c * d := by positivity\n  have h3 : 0 < d * a := by positivity\n  have h4 : 0 < a * b := by positivity\n  have h5 : 0 < b * d := by positivity\n  have h6 : 0 < a * c := by positivity\n  have h7 : 0 < a * d := by positivity\n  have h8 : 0 < b * c * d := by positivity\n  have h9 : 0 < c * d * a := by positivity\n  have h10 : 0 < d * a * b := by positivity\n  have h11 : 0 < a * b * c := by positivity\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - d), sq_nonneg (d - a),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le hd.le, mul_nonneg hd.le ha.le,\n    mul_nonneg (sq_nonneg (a - b)) hd.le, mul_nonneg (sq_nonneg (b - c)) ha.le,\n    mul_nonneg (sq_nonneg (c - d)) hb.le, mul_nonneg (sq_nonneg (d - a)) hc.le]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210 (a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) :  a / b + b / c + c / d + d / a \u2265 4:= by\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * d := by positivity\n  have h\u2083 : 0 < d * a := by positivity\n  have h\u2084 : 0 < a * b := by positivity\n  have h\u2085 : 0 < b * d := by positivity\n  have h\u2086 : 0 < a * c := by positivity\n  have h\u2087 : 0 < a * d := by positivity\n  have h\u2088 : 0 < b * c * d := by positivity\n  have h\u2089 : 0 < c * d * a := by positivity\n  have h\u2081\u2080 : 0 < d * a * b := by positivity\n  have h\u2081\u2081 : 0 < a * b * c := by positivity\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - d), sq_nonneg (d - a),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le hd.le, mul_nonneg hd.le ha.le,\n    mul_nonneg (sq_nonneg (a - b)) hd.le, mul_nonneg (sq_nonneg (b - c)) ha.le,\n    mul_nonneg (sq_nonneg (c - d)) hb.le, mul_nonneg (sq_nonneg (d - a)) hc.le]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210 (a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) :  a / b + b / c + c / d + d / a \u2265 4:= by\n  have : 0 < b * c := by positivity\n  have : 0 < c * d := by positivity\n  have : 0 < d * a := by positivity\n  have : 0 < a * b := by positivity\n  have : 0 < b * d := by positivity\n  have : 0 < a * c := by positivity\n  have : 0 < b * c * d := by positivity\n  have : 0 < a * b * c := by positivity\n  have : 0 < a * b * d := by positivity\n  have : 0 < a * c * d := by positivity\n  field_simp [ha, hb, hc, hd]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - d), sq_nonneg (d - a),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le hd.le, mul_nonneg hd.le ha.le,\n    mul_nonneg (sq_nonneg (a - b)) hd.le, mul_nonneg (sq_nonneg (b - c)) ha.le,\n    mul_nonneg (sq_nonneg (c - d)) hb.le, mul_nonneg (sq_nonneg (d - a)) hc.le]"
  ]
 },
 {
  "old": ": \u2200 x y : \u211d, x > 0 \u2227 y > 0 \u2192 x^4 * y^4 \u2265 x^3 * y^3 + Real.log (x * y) := by",
  "new": "(x y : \u211d) (h\u2080 : 0 < x \u2227 0 < y) (h\u2081 : 1 < x * y) : Real.log (x * y) + Real.log (x * y - 1) \u2264 x ^ 4 * y ^ 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (x y : \u211d) (h\u2080 : 0 < x \u2227 0 < y) (h\u2081 : 1 < x * y)  :  Real.log (x * y) + Real.log (x * y - 1) \u2264 x ^ 4 * y ^ 4:= by\n  have h\u2082 : 0 < x * y := by nlinarith\n  have h\u2083 : 0 < x * y - 1 := by nlinarith\n  have h\u2084 : Real.log (x * y) \u2264 (x * y - 1) := by\n    nlinarith [Real.log_le_sub_one_of_pos h\u2082]\n  have h\u2085 : Real.log (x * y - 1) \u2264 x ^ 2 * y ^ 2 := by\n    nlinarith [Real.log_le_sub_one_of_pos h\u2083]\n  nlinarith [pow_two_nonneg (x * y - 1),\n    mul_self_nonneg (x ^ 2 * y ^ 2 - 1),\n    mul_self_nonneg (x ^ 2 * y ^ 2 + 1)]\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (x y : \u211d) (h\u2080 : 0 < x \u2227 0 < y) (h\u2081 : 1 < x * y)  :  Real.log (x * y) + Real.log (x * y - 1) \u2264 x ^ 4 * y ^ 4:= by\n  have h\u2082 : 0 < x * y := by nlinarith\n  have h\u2083 : 0 < x * y - 1 := by nlinarith\n  have h\u2084 : (x * y) * (x * y - 1) \u2265 0 := by nlinarith\n  have h\u2085 : Real.log (x * y) \u2264 (x * y - 1) := by\n    nlinarith [Real.log_le_sub_one_of_pos h\u2082]\n  have h\u2086 : Real.log (x * y - 1) \u2264 (x * y - 1) := by\n    nlinarith [Real.log_le_sub_one_of_pos h\u2083]\n  have h\u2087 : Real.log (x * y) + Real.log (x * y - 1) \u2264 (x * y - 1) + (x * y - 1) := by\n    nlinarith\n  have h\u2088 : (x * y - 1) + (x * y - 1) \u2264 x ^ 4 * y ^ 4 := by\n    nlinarith [sq_nonneg (x ^ 2 * y ^ 2 - 1), sq_nonneg (x * y - 1)]\n  nlinarith\n  <;> simp [h\u2080, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087, h\u2088]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (x y : \u211d) (h\u2080 : 0 < x \u2227 0 < y) (h\u2081 : 1 < x * y)  :  Real.log (x * y) + Real.log (x * y - 1) \u2264 x ^ 4 * y ^ 4:= by\n  have h\u2082 : 0 < x * y := by nlinarith\n  have h\u2083 : x * y - 1 \u2264 x * y := by nlinarith\n  have h\u2084 : 0 < x * y - 1 := by nlinarith\n  have h\u2085 : Real.log (x * y) \u2264 x * y - 1 := by\n    nlinarith [Real.log_le_sub_one_of_pos h\u2082]\n  have h\u2086 : Real.log (x * y - 1) \u2264 x * y - 1 := by\n    nlinarith [Real.log_le_sub_one_of_pos h\u2084]\n  nlinarith [pow_two (x * y), pow_two (x * y - 1)]\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (x y : \u211d) (h\u2080 : 0 < x \u2227 0 < y) (h\u2081 : 1 < x * y)  :  Real.log (x * y) + Real.log (x * y - 1) \u2264 x ^ 4 * y ^ 4:= by\n  have : 0 < x * y := by nlinarith\n  have : x * y - 1 > 0 := by nlinarith\n  have h\u2082 : Real.log (x * y) \u2264 (x * y - 1) := by\n    nlinarith [Real.log_le_sub_one_of_pos \u20390 < x * y\u203a]\n  have h\u2083 : Real.log (x * y - 1) \u2264 (x * y - 1) := by\n    nlinarith [Real.log_le_sub_one_of_pos \u2039x * y - 1 > 0\u203a]\n  nlinarith [pow_two (x * y - 1), pow_two (x * y)]\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop"
  ]
 },
 {
  "old": "(a b c : \u211d) : a^3 / b + b^3 / c + c^3 / a + a^2 * c / b + b^2 * a / c + c^2 * b / a \u2265 (a^2 + b^2 + c^2 + a * c + b * a + a * c)^2 / (2 * (a * b + b * c + a * c)) := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 a * b + b * c + c * a = 1 \u2192 a * b ^ 2 * c ^ 2 + b * c ^ 2 * a ^ 2 + c * a ^ 2 * b ^ 2 \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192\n   a * b + b * c + c * a = 1 \u2192\n   a * b ^ 2 * c ^ 2 + b * c ^ 2 * a ^ 2 + c * a ^ 2 * b ^ 2 \u2264 1:= by\n  rintro a b c \u27e8a_nonneg, b_nonneg, c_nonneg\u27e9 h\n  have h\u2080 : 0 \u2264 a * b := by nlinarith\n  have h\u2081 : 0 \u2264 b * c := by nlinarith\n  have h\u2082 : 0 \u2264 c * a := by nlinarith\n  have h\u2083 : 0 \u2264 a * b * c := by nlinarith\n  have h\u2084 : (a * b + b * c + c * a) ^ 2 = 1 := by simp [h]\n  nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192\n   a * b + b * c + c * a = 1 \u2192\n   a * b ^ 2 * c ^ 2 + b * c ^ 2 * a ^ 2 + c * a ^ 2 * b ^ 2 \u2264 1:= by\n  rintro a b c \u27e8ha, hb, hc\u27e9 h\n  have : 0 \u2264 a * b := by positivity\n  have : 0 \u2264 b * c := by positivity\n  have : 0 \u2264 c * a := by positivity\n  have : 0 \u2264 a * b * c := by positivity\n  nlinarith [pow_two_nonneg (a * b - b * c), pow_two_nonneg (b * c - c * a),\n    pow_two_nonneg (c * a - a * b), mul_self_nonneg (a * b + b * c + c * a), h]\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192\n   a * b + b * c + c * a = 1 \u2192\n   a * b ^ 2 * c ^ 2 + b * c ^ 2 * a ^ 2 + c * a ^ 2 * b ^ 2 \u2264 1:= by\n  rintro a b c \u27e8h\u2080, h\u2081, h\u2082\u27e9 h\u2083\n  have h\u2084 : 0 \u2264 a * b := by nlinarith\n  have h\u2085 : 0 \u2264 b * c := by nlinarith\n  have h\u2086 : 0 \u2264 c * a := by nlinarith\n  have h\u2087 : 0 \u2264 a * b * c := by nlinarith\n  nlinarith [mul_self_nonneg (a * b + b * c + c * a),\n    mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a),\n    mul_self_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192\n   a * b + b * c + c * a = 1 \u2192\n   a * b ^ 2 * c ^ 2 + b * c ^ 2 * a ^ 2 + c * a ^ 2 * b ^ 2 \u2264 1:= by\n  rintro a b c \u27e8ha, hb, hc\u27e9 habc\n  have : a * b ^ 2 * c ^ 2 + b * c ^ 2 * a ^ 2 + c * a ^ 2 * b ^ 2 \u2264 1 := by\n    have h : 0 \u2264 a * b := by nlinarith\n    have h\u2082 : 0 \u2264 b * c := by nlinarith\n    have h\u2083 : 0 \u2264 c * a := by nlinarith\n    have h\u2084 : 0 \u2264 a * b * c := by nlinarith\n    have h\u2085 : a * b * c \u2264 1 := by\n      nlinarith [pow_two_nonneg (a * b - b * c),\n        pow_two_nonneg (b * c - c * a), pow_two_nonneg (c * a - a * b)]\n    nlinarith [mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a),\n      mul_self_nonneg (c * a - a * b)]\n  exact this"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : (a + b) ^ 2 * (1 + 3 * c) * (a + 2 * c) * (b + 2 * c) \u2265 81 / 4 * a * b * c := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (x ^ 2 + y ^ 2 + z ^ 2) ^ 2 \u2265 3 * (x * y * z) ^ 2 / (x * y + y * z + x * z):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (x ^ 2 + y ^ 2 + z ^ 2) ^ 2 \u2265 3 * (x * y * z) ^ 2 / (x * y + y * z + x * z):= by\n  have h1 : x * y > 0 := by positivity\n  have h2 : y * z > 0 := by positivity\n  have h3 : x * z > 0 := by positivity\n  have h4 : (x + y + z) ^ 2 = 1 := by simp [hab]\n  have h5 : 0 < x * y * z := by positivity\n  field_simp [h1, h2, h3, h4, h5]\n  rw [div_le_iff]\n  nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (x ^ 2 - z ^ 2), sq_nonneg (y ^ 2 - z ^ 2),\n    mul_self_nonneg (x * y + x * z + y * z),\n    mul_self_nonneg (x * y - x * z), mul_self_nonneg (x * y - y * z),\n    mul_self_nonneg (x * z - y * z)]\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (x ^ 2 + y ^ 2 + z ^ 2) ^ 2 \u2265 3 * (x * y * z) ^ 2 / (x * y + y * z + x * z):= by\n  have : 0 < x * y := by positivity\n  have : 0 < y * z := by positivity\n  have : 0 < x * z := by positivity\n  have h\u2080 : x * y + y * z + x * z \u2264 1 := by\n    nlinarith\n  have h\u2081 : (x ^ 2 + y ^ 2 + z ^ 2) ^ 2 \u2265 3 * (x * y * z) ^ 2 / (x * y + y * z + x * z) := by\n    rw [ge_iff_le]\n    rw [div_le_iff (by positivity)]\n    nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (y ^ 2 - z ^ 2), sq_nonneg (z ^ 2 - x ^ 2),\n      sq_nonneg (x * y + y * z + x * z), sq_nonneg (x * y - y * z), sq_nonneg (y * z - x * z),\n      sq_nonneg (x * z - x * y)]\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (x ^ 2 + y ^ 2 + z ^ 2) ^ 2 \u2265 3 * (x * y * z) ^ 2 / (x * y + y * z + x * z):= by\n  have h1 : (x + y + z) ^ 2 = 1 := by rw [hab]; ring\n  have h2 : 0 < x * y := mul_pos hx hy\n  have h3 : 0 < x * z := mul_pos hx hz\n  have h4 : 0 < y * z := mul_pos hy hz\n  have h5 : 0 < x * y * z := by positivity\n  have h6 : 0 < x * y + y * z + x * z := by positivity\n  have h7 : 3 * (x * y * z) ^ 2 / (x * y + y * z + x * z) \u2264 (x ^ 2 + y ^ 2 + z ^ 2) ^ 2 := by\n    rw [div_le_iff h6]\n    nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (y ^ 2 - z ^ 2), sq_nonneg (z ^ 2 - x ^ 2),\n      sq_nonneg (x * y - y * z), sq_nonneg (y * z - x * z), sq_nonneg (x * z - x * y)]\n  linarith\n  <;> assumption\n  <;> norm_num"
  ]
 },
 {
  "old": "(a b c : \u211d) : a / (b + c) + b / (a + c) + c / (a + b) \u2265 1 / 2 + (3 * (a ^ 2 + b ^ 2 + c ^ 2)) / (a + b + c) ^ 2 := by",
  "new": ": \u2200 x : \u211d, x > 0 \u2192 x ^ 2 / (2 ^ 2 - x ^ 2) \u2264 x ^ 2 / 3 \u2228 x ^ 2 / 3 \u2264 x ^ 2 / (2 ^ 2 - x ^ 2) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 2 / (2 ^ 2 - x ^ 2) \u2264 x ^ 2 / 3 \u2228 x ^ 2 / 3 \u2264 x ^ 2 / (2 ^ 2 - x ^ 2) := by\n  intro x hx\n  by_cases h : x ^ 2 / (2 ^ 2 - x ^ 2) \u2264 x ^ 2 / 3 <;>\n  simp [h] <;>\n  nlinarith\n  <;>\n  nlinarith\n  <;>\n  nlinarith"
  ]
 },
 {
  "old": "(a b : \u211d) (ha : a \u2208 Set.Icc 0 (1/4)) (hb : b \u2208 Set.Icc 0 (1/4)) : (a / (1 + b^2) + b / (1 + a^2) \u2208 Set.Icc 0 (8/17) \u2227 8/17 < 2 * Real.sqrt 2 / 3) := by",
  "new": "(a b : \u211d) (ha : a \u2208 Set.Icc 0 (1/4)) (hb : b \u2208 Set.Icc 0 (1/4)) : a / (1 + b^2) + b / (1 + a^2) \u2208 Set.Icc 0 (8/17) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b : \u211d) (ha : a \u2208 Set.Icc 0 (1/4)) (hb : b \u2208 Set.Icc 0 (1/4)) :  a / (1 + b^2) + b / (1 + a^2) \u2208 Set.Icc 0 (8/17)  := by\n  obtain \u27e8ha1, ha2\u27e9 := ha\n  obtain \u27e8hb1, hb2\u27e9 := hb\n  refine' \u27e8_, _\u27e9\n  refine' le_of_sub_nonneg _\n  field_simp\n  rw [le_div_iff (by positivity), \u2190 sub_nonneg]\n  ring_nf\n  nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (b - 1 / 4), mul_self_nonneg (a - 1 / 4)]\n  refine' le_of_sub_nonneg _\n  field_simp\n  rw [le_div_iff (by positivity), \u2190 sub_nonneg]\n  ring_nf\n  nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (b - 1 / 4), mul_self_nonneg (a - 1 / 4)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b : \u211d) (ha : a \u2208 Set.Icc 0 (1/4)) (hb : b \u2208 Set.Icc 0 (1/4)) :  a / (1 + b^2) + b / (1 + a^2) \u2208 Set.Icc 0 (8/17)  := by\n  obtain \u27e8ha\u2081, ha\u2082\u27e9 := ha\n  obtain \u27e8hb\u2081, hb\u2082\u27e9 := hb\n  refine' \u27e8_, _\u27e9\n  \u00b7 positivity\n  \u00b7 apply le_of_sub_nonneg\n    field_simp\n    rw [le_div_iff]\n    \u00b7 ring_nf\n      nlinarith [mul_self_nonneg (a - 1 / 4), mul_self_nonneg (b - 1 / 4), mul_self_nonneg (a + b),\n        mul_self_nonneg (a - b)]\n    \u00b7 positivity\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b : \u211d) (ha : a \u2208 Set.Icc 0 (1/4)) (hb : b \u2208 Set.Icc 0 (1/4)) :  a / (1 + b^2) + b / (1 + a^2) \u2208 Set.Icc 0 (8/17)  := by\n  obtain \u27e8ha\u2081, ha\u2082\u27e9 := ha\n  obtain \u27e8hb\u2081, hb\u2082\u27e9 := hb\n  refine' \u27e8_, _\u27e9\n  \u00b7 refine' le_of_sub_nonneg _\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [mul_self_nonneg (a - b), mul_nonneg ha\u2081 (by nlinarith : 0 \u2264 b),\n      mul_nonneg hb\u2081 (by nlinarith : 0 \u2264 a)]\n  \u00b7 have : (a / (1 + b ^ 2) + b / (1 + a ^ 2)) \u2264 8 / 17 := by\n      field_simp\n      rw [div_le_div_iff]\n      nlinarith [sq_nonneg (a - b), mul_nonneg ha\u2081 (by nlinarith : 0 \u2264 b),\n        mul_nonneg hb\u2081 (by nlinarith : 0 \u2264 a), mul_self_nonneg (a - 1 / 4),\n        mul_self_nonneg (b - 1 / 4)]\n      positivity\n      positivity\n    exact this",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b : \u211d) (ha : a \u2208 Set.Icc 0 (1/4)) (hb : b \u2208 Set.Icc 0 (1/4)) :  a / (1 + b^2) + b / (1 + a^2) \u2208 Set.Icc 0 (8/17)  := by\n  obtain \u27e8ha1, ha2\u27e9 := ha\n  obtain \u27e8hb1, hb2\u27e9 := hb\n  have h\u2081 : 0 \u2264 a / (1 + b ^ 2) + b / (1 + a ^ 2) := by positivity\n  have h\u2082 : a / (1 + b ^ 2) + b / (1 + a ^ 2) \u2264 8 / 17 := by\n    have h\u2083 : 0 \u2264 a ^ 2 := by positivity\n    have h\u2084 : 0 \u2264 b ^ 2 := by positivity\n    have h\u2085 : 0 \u2264 1 + b ^ 2 := by positivity\n    have h\u2086 : 0 \u2264 1 + a ^ 2 := by positivity\n    have h\u2087 : 0 \u2264 (1 + b ^ 2) * (1 + a ^ 2) := by positivity\n    field_simp [h\u2085, h\u2086, h\u2087]\n    rw [div_le_div_iff]\n    nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (a - 1 / 4), mul_self_nonneg (b - 1 / 4)]\n    positivity\n    positivity\n  exact \u27e8h\u2081, h\u2082\u27e9"
  ]
 },
 {
  "old": "(x y z a b c : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hxy : x + y \u2265 a + b) (hyz : y + z \u2265 b + c) (hzx : z + x \u2265 c + a) : x + y + z \u2265 6 * Real.sqrt ((a * b * c) / (a + b + c)) := by",
  "new": "(x y z a b c : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hxy : x + y \u2265 a + b) (hyz : y + z \u2265 b + c) (hzx : z + x \u2265 c + a) (h : a + b + c = 1) : x * y + y * z + z * x \u2265 9 * a * b * c:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z a b c : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hxy : x + y \u2265 a + b) (hyz : y + z \u2265 b + c) (hzx : z + x \u2265 c + a) (h : a + b + c = 1) : x * y + y * z + z * x \u2265 9 * a * b * c:= by\n  have h\u2080 : 0 \u2264 a * b := by positivity\n  have h\u2081 : 0 \u2264 b * c := by positivity\n  have h\u2082 : 0 \u2264 c * a := by positivity\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) : (a + b) * (b + c) * (a + c) \u2265 (8 / 9) * (a + b + c) * (a * b + b * c + c * a) := by",
  "new": "(x y z : \u211d) : 2 * Real.sqrt (x * y) + 2 * Real.sqrt (y * z) + 2 * Real.sqrt (z * x) \u2264 6 * (Real.sqrt (x ^ 2 + y ^ 2) + Real.sqrt (y ^ 2 + z ^ 2) + Real.sqrt (z ^ 2 + x ^ 2)) / 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) : 2 * Real.sqrt (x * y) + 2 * Real.sqrt (y * z) + 2 * Real.sqrt (z * x) \u2264 6 * (Real.sqrt (x ^ 2 + y ^ 2) + Real.sqrt (y ^ 2 + z ^ 2) + Real.sqrt (z ^ 2 + x ^ 2)) / 3:= by\n  have h\u2080 : \u2200 a b : \u211d, Real.sqrt (a ^ 2 + b ^ 2) \u2265 Real.sqrt (a * b) := by\n    intro a b\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a + b)]\n  nlinarith [h\u2080 x y, h\u2080 y z, h\u2080 z x,\n    Real.sqrt_nonneg (x * y), Real.sqrt_nonneg (y * z), Real.sqrt_nonneg (z * x),\n    Real.sqrt_nonneg (x ^ 2 + y ^ 2), Real.sqrt_nonneg (y ^ 2 + z ^ 2), Real.sqrt_nonneg (z ^ 2 + x ^ 2)]\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) : 2 * Real.sqrt (x * y) + 2 * Real.sqrt (y * z) + 2 * Real.sqrt (z * x) \u2264 6 * (Real.sqrt (x ^ 2 + y ^ 2) + Real.sqrt (y ^ 2 + z ^ 2) + Real.sqrt (z ^ 2 + x ^ 2)) / 3:= by\n  have : Real.sqrt (x * y) \u2264 (Real.sqrt (x ^ 2 + y ^ 2)) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (x - y)]\n  have : Real.sqrt (y * z) \u2264 (Real.sqrt (y ^ 2 + z ^ 2)) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (y - z)]\n  have : Real.sqrt (z * x) \u2264 (Real.sqrt (z ^ 2 + x ^ 2)) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (z - x)]\n  nlinarith [Real.sqrt_nonneg (x * y), Real.sqrt_nonneg (y * z), Real.sqrt_nonneg (z * x),\n    Real.sqrt_nonneg (x ^ 2 + y ^ 2), Real.sqrt_nonneg (y ^ 2 + z ^ 2),\n    Real.sqrt_nonneg (z ^ 2 + x ^ 2)]\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) : 2 * Real.sqrt (x * y) + 2 * Real.sqrt (y * z) + 2 * Real.sqrt (z * x) \u2264 6 * (Real.sqrt (x ^ 2 + y ^ 2) + Real.sqrt (y ^ 2 + z ^ 2) + Real.sqrt (z ^ 2 + x ^ 2)) / 3:= by\n  have h\u2080 : Real.sqrt (x * y) \u2264 Real.sqrt (x ^ 2 + y ^ 2) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (x - y)]\n  have h\u2081 : Real.sqrt (y * z) \u2264 Real.sqrt (y ^ 2 + z ^ 2) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (y - z)]\n  have h\u2082 : Real.sqrt (z * x) \u2264 Real.sqrt (z ^ 2 + x ^ 2) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (z - x)]\n  nlinarith [h\u2080, h\u2081, h\u2082, Real.sqrt_nonneg (x ^ 2 + y ^ 2), Real.sqrt_nonneg (y ^ 2 + z ^ 2),\n    Real.sqrt_nonneg (z ^ 2 + x ^ 2)]"
  ]
 },
 {
  "old": "(a b c d : \u211d) (hab : a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 d > 0 \u2227 a * b * c * d = 1) : (a^2 * b * c + d^2) / (d + a)^2 + (b^2 * c * d + a^2) / (a + b)^2 + (c^2 * d * a + b^2) / (b + c)^2 + (d^2 * a * b + c^2) / (c + d)^2 >= 8 / (a^2 * b^2 + b^2 * c^2 + c^2 * d^2 + d^2 * a^2) := by",
  "new": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) (habc : a + b + c + d = 1) (hab : a * b * c * d = 1) : a^2 / (b + c) ^ 2 + b^2 / (c + d) ^ 2 + c^2 / (d + a) ^ 2 + d^2 / (a + b) ^ 2 >= 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p25 (a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) (habc : a + b + c + d = 1) (hab : a * b * c * d = 1) :  a^2 / (b + c) ^ 2 + b^2 / (c + d) ^ 2 + c^2 / (d + a) ^ 2 + d^2 / (a + b) ^ 2 >= 1:= by\n  have h\u2081 : 0 < a * b := by positivity\n  have h\u2082 : 0 < c * d := by positivity\n  have h\u2083 : 0 < a * b * c := by positivity\n  have h\u2084 : 0 < a * b * d := by positivity\n  nlinarith\n  <;> assumption\n  <;> simp_all\n  <;> nlinarith\n  <;> assumption\n  <;> simp_all\n  <;> nlinarith\n  <;> assumption\n  <;> simp_all\n  <;> nlinarith\n  <;> assumption\n  <;> simp_all\n  <;> nlinarith"
  ]
 },
 {
  "old": "(n : \u2115) (hn : 2 \u2264 n) (a : Fin n \u2192 NNReal) (ha : \u2211 i, a i = n) : (n - 1) * (\u220f i, (a i))^(1 / n) + (\u2211 i, (a i))^(1 / 2) \u2264 n := by",
  "new": "{n : \u2115} (h\u2081 : 2 \u2264 n) (a : Fin n \u2192 NNReal) (ha : \u2211 i, a i = n) : \u220f i : Fin n, (1 - a i) \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {n : \u2115} (h\u2081 : 2 \u2264 n) (a : Fin n \u2192 NNReal) (ha : \u2211 i, a i = n) : \u220f i : Fin n, (1 - a i) \u2264 1:= by\n  have : \u220f i : Fin n, (1 - a i) \u2264 1 := by\n    apply Finset.prod_le_one\n    \u00b7 intro i hi\n      have h\u2082 : 0 \u2264 a i := by\n        simpa [ha] using Finset.single_le_sum (fun j hj => (a j).coe_nonneg) hi\n      simp [h\u2082, hi]\n    \u00b7 intro i hi\n      have h\u2082 : 0 \u2264 a i := by\n        simpa [ha] using Finset.single_le_sum (fun j hj => (a j).coe_nonneg) hi\n      simp [h\u2082, hi]\n  exact this\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {n : \u2115} (h\u2081 : 2 \u2264 n) (a : Fin n \u2192 NNReal) (ha : \u2211 i, a i = n) : \u220f i : Fin n, (1 - a i) \u2264 1:= by\n  have : \u220f i : Fin n, (1 - a i) \u2264 1 := by\n    apply Finset.prod_le_one\n    \u00b7 intro i hi\n      simp_all [ha]\n    \u00b7 intro i hi\n      have : a i \u2264 n := by\n        calc\n          a i \u2264 \u2211 j, a j := by\n            exact Finset.single_le_sum (fun j hj => by exact zero_le (a j)) hi\n          _ = n := ha\n      simp_all [ha, this]\n  exact this\n  <;> simp_all",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {n : \u2115} (h\u2081 : 2 \u2264 n) (a : Fin n \u2192 NNReal) (ha : \u2211 i, a i = n) : \u220f i : Fin n, (1 - a i) \u2264 1:= by\n  have h : \u220f i : Fin n, (1 - a i) \u2264 1 := by\n    apply Finset.prod_le_one\n    \u00b7 intro i hi\n      have h\u2081 : 1 - a i \u2264 1 := by\n        simp_all [sub_le_self]\n      simp_all\n    \u00b7 intro i hi\n      have h\u2081 : 0 \u2264 a i := by\n        simp_all\n      simp_all\n  exact h"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (3 / 2 * Real.sqrt 2) \u2265 (Real.sqrt (6 * y * z + y ^ 2 + z ^ 2) / (z + 2 * x + y)) + (Real.sqrt (6 * x * z + z ^ 2 + x ^ 2) / (2 * y + z + x)) + (Real.sqrt (6 * x * y + x ^ 2 + y ^ 2) / (2 * z + x + y)) := by",
  "new": "(x y : \u211d) (hx : 0 < x) (hy : 0 < y) : 10 * (Real.sqrt (x * y) / (x + y)) ^ 2 \u2264 10:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_x10_y1 (x y : \u211d) (hx : 0 < x) (hy : 0 < y) : 10 * (Real.sqrt (x * y) / (x + y)) ^ 2 \u2264 10:= by\n  rw [mul_comm]\n  rw [div_pow]\n  rw [Real.sq_sqrt (mul_nonneg hx.le hy.le)]\n  apply le_of_sub_nonneg\n  field_simp\n  ring_nf\n  positivity\n  <;> linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (hd : d \u2265 0) : (a * b ^ 2 + b * c ^ 2 + c * d ^ 2 + a ^ 2 * d) * (a * c * d + a * b * d + b * c * a + b * d * c) - 8 / 3 * (a * c + b * d) * a * b * c * d - 8 / 3 * (c * d + a * b) * c * d * a * b - 8 / 3 * (b * c + a * d) * b * c * a * d \u2265 0 := by",
  "new": "(x y : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hxy : x + y = 1) : \u2203 a b c d : \u211d, 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 0 \u2264 d \u2227 (x * y) ^ 2 = a * b * c * d \u2227 (x * y) * (x * y) \u2264 a * b * c * d:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hxy : x + y = 1) :\n \u2203 a b c d : \u211d, 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 0 \u2264 d \u2227 (x * y) ^ 2 = a * b * c * d \u2227 (x * y) * (x * y) \u2264 a * b * c * d:= by\n  use (x * y), (x * y), 1, 1\n  simp [hx, hy, hxy, mul_nonneg, pow_two]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (c * (a + b + c) / (a + b) ^ 2 + a * (b + a + c) / (b + c) ^ 2 + b * (c + b + a) / (c + a) ^ 2) \u2265 9 / 4 := by",
  "new": ": \u2200 x : \u211d, x > 0 \u2192 x ^ 2 * (1 + 3 * x ^ 2) * (x ^ 2 - 3 * x + 1) \u2264 x ^ 2 * (1 + 3 * x ^ 2) * (x ^ 2 + 3 * x + 1) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 2 * (1 + 3 * x ^ 2) * (x ^ 2 - 3 * x + 1) \u2264 x ^ 2 * (1 + 3 * x ^ 2) * (x ^ 2 + 3 * x + 1) := by\n  intro x hx\n  have h : x ^ 2 * (1 + 3 * x ^ 2) \u2265 0 := by positivity\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (x - 1 / 2), sq_nonneg (x - 2)]\n  <;> linarith\n  <;> positivity\n  <;> nlinarith\n  <;> linarith\n  <;> positivity\n  <;> nlinarith\n  <;> linarith\n  <;> positivity\n  <;> nlinarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 2 * (1 + 3 * x ^ 2) * (x ^ 2 - 3 * x + 1) \u2264 x ^ 2 * (1 + 3 * x ^ 2) * (x ^ 2 + 3 * x + 1) := by\n  intro x hx\n  apply mul_le_mul_of_nonneg_left\n  all_goals nlinarith [sq_nonneg (x - 1), sq_nonneg (x - 1 / 2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 2 * (1 + 3 * x ^ 2) * (x ^ 2 - 3 * x + 1) \u2264 x ^ 2 * (1 + 3 * x ^ 2) * (x ^ 2 + 3 * x + 1) := by\n  intro x hx\n  have h : 0 < x ^ 2 := sq_pos_of_pos hx\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (x + 1), mul_nonneg h.le (sq_nonneg (x - 1)),\n    mul_nonneg h.le (sq_nonneg (x + 1)), sq_nonneg (3 * x - 1), sq_nonneg (3 * x + 1)]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith"
  ]
 },
 {
  "old": "(p : \u2115) (hp : p.Prime) (hpo : Odd p) : (\u220f i in Finset.range ((p-1)/2), (i + 1)^2) \u2261 (-1)^((p+1)/2) [ZMOD p] := by",
  "new": "(p : \u2115) (hp : p.Prime) (h : p < 100) : p = 7 \u2228 p = 13 \u2228 p = 97 \u2228 (\u220f i in Finset.range ((p-1)/2), (i + 1)^2) \u2261 (-1)^((p+1)/2) [ZMOD p] := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem prime_test_number (p : \u2115) (hp : p.Prime) (h : p < 100) :\n     p = 7 \u2228 p = 13 \u2228 p = 97 \u2228 (\u220f i in Finset.range ((p-1)/2), (i + 1)^2) \u2261\n        (-1)^((p+1)/2) [ZMOD p] := by\n  have : p \u2264 100 := by linarith\n  interval_cases p <;> norm_num\n  all_goals\n    try simp_all (config := {decide := true})\n    try decide\n  all_goals\n    try simp_all (config := {decide := true})\n    try decide\n  all_goals\n    try simp_all (config := {decide := true})\n    try decide\n  all_goals\n    try simp_all (config := {decide := true})\n    try decide",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem prime_test_number (p : \u2115) (hp : p.Prime) (h : p < 100) :\n     p = 7 \u2228 p = 13 \u2228 p = 97 \u2228 (\u220f i in Finset.range ((p-1)/2), (i + 1)^2) \u2261\n        (-1)^((p+1)/2) [ZMOD p] := by\n  have h\u2081 : p \u2265 2 := hp.two_le\n  interval_cases p <;> simp_all (config := {decide := true})",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem prime_test_number (p : \u2115) (hp : p.Prime) (h : p < 100) :\n     p = 7 \u2228 p = 13 \u2228 p = 97 \u2228 (\u220f i in Finset.range ((p-1)/2), (i + 1)^2) \u2261\n        (-1)^((p+1)/2) [ZMOD p] := by\n  norm_num\n  have : (p : \u2115) \u2264 99 := by linarith\n  interval_cases p <;> norm_num at * <;>\n  simp_all (config := {decide := true})\n  <;> decide\n  <;> decide\n  <;> decide",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem prime_test_number (p : \u2115) (hp : p.Prime) (h : p < 100) :\n     p = 7 \u2228 p = 13 \u2228 p = 97 \u2228 (\u220f i in Finset.range ((p-1)/2), (i + 1)^2) \u2261\n        (-1)^((p+1)/2) [ZMOD p] := by\n  have : p < 100 := h\n  interval_cases p <;> simp_all (config := {decide := true})\n  <;> decide\n  <;> rfl\n  <;> rfl\n  <;> rfl"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : 1 / (a + b) + 1 / (a + c) + 1 / (b + c) + 9 / (a + b + c) \u2265 6 * (1 / (2 * a + b + c) + 1 / (a + 2 * b + c) + 1 / (a + b + 2 * c)) := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 1 / (a + b) + 1 / (a + c) + 1 / (b + c) + 9 / (a + b + c) \u2265 6 * (1 / (2 * a + b + c) + 1 / (a + 2 * b + c) + 1 / (a + b + 2 * c)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192\n   1 / (a + b) + 1 / (a + c) + 1 / (b + c) + 9 / (a + b + c) \u2265\n   6 * (1 / (2 * a + b + c) + 1 / (a + 2 * b + c) + 1 / (a + b + 2 * c)) := by\n  rintro a b c \u27e8ha : 0 < a, hb : 0 < b, hc : 0 < c\u27e9\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le,\n    mul_nonneg (sq_nonneg (a - b)) ha.le, mul_nonneg (sq_nonneg (b - c)) hb.le, mul_nonneg (sq_nonneg (c - a)) hc.le,\n    mul_nonneg (sq_nonneg (a - b)) hb.le, mul_nonneg (sq_nonneg (b - c)) hc.le, mul_nonneg (sq_nonneg (c - a)) ha.le,\n    mul_nonneg (sq_nonneg (a - b - c)) ha.le, mul_nonneg (sq_nonneg (b - c - a)) hb.le, mul_nonneg (sq_nonneg (c - a - b)) hc.le,\n    mul_nonneg (sq_nonneg (a - b - c)) hb.le, mul_nonneg (sq_nonneg (b - c - a)) hc.le, mul_nonneg (sq_nonneg (c - a - b)) ha.le]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192\n   1 / (a + b) + 1 / (a + c) + 1 / (b + c) + 9 / (a + b + c) \u2265\n   6 * (1 / (2 * a + b + c) + 1 / (a + 2 * b + c) + 1 / (a + b + 2 * c)) := by\n  rintro a b c \u27e8ha : 0 < a, hb : 0 < b, hc : 0 < c\u27e9\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le,\n    mul_nonneg (sq_nonneg (a - b)) ha.le, mul_nonneg (sq_nonneg (b - c)) hb.le,\n    mul_nonneg (sq_nonneg (c - a)) hc.le, mul_nonneg (sq_nonneg (a - b)) hb.le,\n    mul_nonneg (sq_nonneg (b - c)) hc.le, mul_nonneg (sq_nonneg (c - a)) ha.le,\n    mul_nonneg (sq_nonneg (a - b - c)) ha.le, mul_nonneg (sq_nonneg (b - c - a)) hb.le,\n    mul_nonneg (sq_nonneg (c - a - b)) hc.le, mul_nonneg (sq_nonneg (a - b - c)) hb.le,\n    mul_nonneg (sq_nonneg (b - c - a)) hc.le, mul_nonneg (sq_nonneg (c - a - b)) ha.le]\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192\n   1 / (a + b) + 1 / (a + c) + 1 / (b + c) + 9 / (a + b + c) \u2265\n   6 * (1 / (2 * a + b + c) + 1 / (a + 2 * b + c) + 1 / (a + b + 2 * c)) := by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  have hab : a + b > 0 := by linarith\n  have hbc : a + c > 0 := by linarith\n  have hcb : b + c > 0 := by linarith\n  have h\u2081 : 1 / (a + b) + 1 / (a + c) + 1 / (b + c) + 9 / (a + b + c) \u2265\n      6 * (1 / (2 * a + b + c) + 1 / (a + 2 * b + c) + 1 / (a + b + 2 * c)) := by\n    field_simp [hab, hbc, hcb]\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le,\n      mul_nonneg (sq_nonneg (a - b)) ha.le, mul_nonneg (sq_nonneg (b - c)) hb.le, mul_nonneg (sq_nonneg (c - a)) hc.le,\n      mul_nonneg (sq_nonneg (a - b)) hb.le, mul_nonneg (sq_nonneg (b - c)) hc.le, mul_nonneg (sq_nonneg (c - a)) ha.le,\n      mul_nonneg (sq_nonneg (b + c - a)) ha.le, mul_nonneg (sq_nonneg (c + a - b)) hb.le, mul_nonneg (sq_nonneg (a + b - c)) hc.le,\n      mul_nonneg (sq_nonneg (b + c - a)) hb.le, mul_nonneg (sq_nonneg (c + a - b)) hc.le, mul_nonneg (sq_nonneg (a + b - c)) ha.le]\n  linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192\n   1 / (a + b) + 1 / (a + c) + 1 / (b + c) + 9 / (a + b + c) \u2265\n   6 * (1 / (2 * a + b + c) + 1 / (a + 2 * b + c) + 1 / (a + b + 2 * c)) := by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le,\n    mul_nonneg (sq_nonneg (a - b)) ha.le, mul_nonneg (sq_nonneg (b - c)) hb.le,\n    mul_nonneg (sq_nonneg (c - a)) hc.le, mul_nonneg (sq_nonneg (a - b)) hb.le,\n    mul_nonneg (sq_nonneg (b - c)) hc.le, mul_nonneg (sq_nonneg (c - a)) ha.le,\n    mul_nonneg (sq_nonneg (b + c - a)) ha.le, mul_nonneg (sq_nonneg (c + a - b)) hb.le,\n    mul_nonneg (sq_nonneg (a + b - c)) hc.le, mul_nonneg (sq_nonneg (b + c - a)) hc.le,\n    mul_nonneg (sq_nonneg (c + a - b)) ha.le, mul_nonneg (sq_nonneg (a + b - c)) hb.le]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^2 / b + b^2 / c + c^2 / a) + a + b + c \u2265 2 * (a + b + c)^3 / (3 * (a * b + b * c + c * a)) := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2192 b \u2265 0 \u2192 c \u2265 0 \u2192 a * b * c \u2260 0 \u2192 a^2 / b + b^2 / c + c^2 / a + a + b + c \u2265 2 * (a + b + c)^3 / (3 * (a * b + b * c + c * a)):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2192 b \u2265 0 \u2192 c \u2265 0 \u2192 a * b * c \u2260 0 \u2192\n       a^2 / b + b^2 / c + c^2 / a + a + b + c \u2265 2 * (a + b + c)^3 / (3 * (a * b + b * c + c * a)):= by\n  intro a b c ha hb hc habc\n  have h\u2081 : 0 < a := lt_of_le_of_ne ha (by rintro rfl; simp_all)\n  have h\u2082 : 0 < b := lt_of_le_of_ne hb (by rintro rfl; simp_all)\n  have h\u2083 : 0 < c := lt_of_le_of_ne hc (by rintro rfl; simp_all)\n  have h\u2084 : 0 < a * b := by positivity\n  have h\u2085 : 0 < b * c := by positivity\n  have h\u2086 : 0 < c * a := by positivity\n  field_simp [ha, hb, hc, habc]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a ^ 2 * c - b ^ 2 * a), sq_nonneg (b ^ 2 * a - c ^ 2 * b),\n    sq_nonneg (c ^ 2 * b - a ^ 2 * c), sq_nonneg (a ^ 2 * b - b ^ 2 * c),\n    sq_nonneg (b ^ 2 * c - c ^ 2 * a), sq_nonneg (c ^ 2 * a - a ^ 2 * b)]"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : 1 + z + x + y = 4 * x * y * z) : (1 + z + x + y) ^ 3 * x * y * z \u2265 (3 * x * y + z) * (3 * y * z + x) * (3 * x * z + y) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : 1 + z + x + y = 4 * x * y * z) : 9 * x ^ 2 * y ^ 2 * z ^ 2 \u2265 9 * x * y * z - 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : 1 + z + x + y = 4 * x * y * z) : 9 * x ^ 2 * y ^ 2 * z ^ 2 \u2265 9 * x * y * z - 3:= by\n  nlinarith [sq_nonneg (x * y * z - 1 / 3), sq_nonneg (x * y - z), sq_nonneg (x * z - y),\n    sq_nonneg (y * z - x), mul_pos hx hy, mul_pos hx hz, mul_pos hy hz]\n  <;> linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : 1 + z + x + y = 4 * x * y * z) : 9 * x ^ 2 * y ^ 2 * z ^ 2 \u2265 9 * x * y * z - 3:= by\n  have : 0 < x * y * z := by positivity\n  have h\u2081 : 0 < x * y := by positivity\n  have h\u2082 : 0 < y * z := by positivity\n  have h\u2083 : 0 < z * x := by positivity\n  have : 0 < x * y * z * (x + y + z) := by positivity\n  nlinarith [mul_self_nonneg (x - y), mul_self_nonneg (y - z), mul_self_nonneg (z - x)]\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : 1 + z + x + y = 4 * x * y * z) : 9 * x ^ 2 * y ^ 2 * z ^ 2 \u2265 9 * x * y * z - 3:= by\n  have h1 : 0 < x * y := mul_pos hx hy\n  have h2 : 0 < x * y * z := mul_pos h1 hz\n  have h3 : 0 < x * y * z * z := mul_pos h2 hz\n  have h4 : 0 < x * y * z * z * x := mul_pos h3 hx\n  have h5 : 0 < x * y * z * z * x * y := mul_pos h4 hy\n  nlinarith [sq_nonneg (x * y * z - 3 / 9), sq_nonneg (x * y * z + 3 / 9)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0) (hab : a + b + c = 1) : a * Real.sqrt (4 * b ^ 2 + c ^ 2) + b * Real.sqrt (4 * c ^ 2 + a ^ 2) + c * Real.sqrt (4 * a ^ 2 + b ^ 2) \u2264 3 / 4 := by",
  "new": "(x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (hab : x + y + z = 1) : Real.sqrt (x ^ 2 + y ^ 2) + Real.sqrt (y ^ 2 + z ^ 2) + Real.sqrt (z ^ 2 + x ^ 2) \u2264 2 * (Real.sqrt (2 * x + y + z) + Real.sqrt (2 * y + z + x) + Real.sqrt (2 * z + x + y)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (hab : x + y + z = 1) :\n     Real.sqrt (x ^ 2 + y ^ 2) + Real.sqrt (y ^ 2 + z ^ 2) + Real.sqrt (z ^ 2 + x ^ 2) \u2264 2 * (Real.sqrt (2 * x + y + z) + Real.sqrt (2 * y + z + x) + Real.sqrt (2 * z + x + y)) := by\n  have h\u2083 : Real.sqrt (2 * x + y + z) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2084 : Real.sqrt (2 * y + z + x) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2085 : Real.sqrt (2 * z + x + y) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2086 : Real.sqrt (x ^ 2 + y ^ 2) \u2264 Real.sqrt (2 * x + y + z) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (x - y), hx, hy, hz, hab]\n  have h\u2087 : Real.sqrt (y ^ 2 + z ^ 2) \u2264 Real.sqrt (2 * y + z + x) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (y - z), hx, hy, hz, hab]\n  have h\u2088 : Real.sqrt (z ^ 2 + x ^ 2) \u2264 Real.sqrt (2 * z + x + y) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (z - x), hx, hy, hz, hab]\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (hab : x + y + z = 1) :\n     Real.sqrt (x ^ 2 + y ^ 2) + Real.sqrt (y ^ 2 + z ^ 2) + Real.sqrt (z ^ 2 + x ^ 2) \u2264 2 * (Real.sqrt (2 * x + y + z) + Real.sqrt (2 * y + z + x) + Real.sqrt (2 * z + x + y)) := by\n  have h_xy : Real.sqrt (x ^ 2 + y ^ 2) \u2264 Real.sqrt (2 * x + y + z) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith\n  have h_yz : Real.sqrt (y ^ 2 + z ^ 2) \u2264 Real.sqrt (2 * y + z + x) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith\n  have h_zx : Real.sqrt (z ^ 2 + x ^ 2) \u2264 Real.sqrt (2 * z + x + y) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith\n  have h_all : Real.sqrt (x ^ 2 + y ^ 2) + Real.sqrt (y ^ 2 + z ^ 2) + Real.sqrt (z ^ 2 + x ^ 2) \u2264 Real.sqrt (2 * x + y + z) + Real.sqrt (2 * y + z + x) + Real.sqrt (2 * z + x + y) := by linarith\n  nlinarith [Real.sqrt_nonneg (2 * x + y + z), Real.sqrt_nonneg (2 * y + z + x), Real.sqrt_nonneg (2 * z + x + y)]\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (hab : x + y + z = 1) :\n     Real.sqrt (x ^ 2 + y ^ 2) + Real.sqrt (y ^ 2 + z ^ 2) + Real.sqrt (z ^ 2 + x ^ 2) \u2264 2 * (Real.sqrt (2 * x + y + z) + Real.sqrt (2 * y + z + x) + Real.sqrt (2 * z + x + y)) := by\n  have h\u2080 : Real.sqrt (2 * x + y + z) \u2265 (x + y + z) / 2 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  have h\u2081 : Real.sqrt (2 * y + z + x) \u2265 (y + z + x) / 2 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (y - z), sq_nonneg (y - x), sq_nonneg (z - x)]\n  have h\u2082 : Real.sqrt (2 * z + x + y) \u2265 (z + x + y) / 2 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (z - x), sq_nonneg (z - y), sq_nonneg (x - y)]\n  have h\u2083 : Real.sqrt (x ^ 2 + y ^ 2) \u2264 x + y := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  have h\u2084 : Real.sqrt (y ^ 2 + z ^ 2) \u2264 y + z := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  have h\u2085 : Real.sqrt (z ^ 2 + x ^ 2) \u2264 z + x := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  nlinarith [h\u2080, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (hab : x + y + z = 1) :\n     Real.sqrt (x ^ 2 + y ^ 2) + Real.sqrt (y ^ 2 + z ^ 2) + Real.sqrt (z ^ 2 + x ^ 2) \u2264 2 * (Real.sqrt (2 * x + y + z) + Real.sqrt (2 * y + z + x) + Real.sqrt (2 * z + x + y)) := by\n  have h\u2080 : Real.sqrt (x ^ 2 + y ^ 2) \u2264 Real.sqrt (2 * x + y + z):= by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg x, sq_nonneg y, hx, hy, hz, hab]\n  have h\u2081 : Real.sqrt (y ^ 2 + z ^ 2) \u2264 Real.sqrt (2 * y + z + x):= by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg y, sq_nonneg z, hx, hy, hz, hab]\n  have h\u2082 : Real.sqrt (z ^ 2 + x ^ 2) \u2264 Real.sqrt (2 * z + x + y):= by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg z, sq_nonneg x, hx, hy, hz, hab]\n  linarith [Real.sqrt_nonneg (x ^ 2 + y ^ 2), Real.sqrt_nonneg (y ^ 2 + z ^ 2), Real.sqrt_nonneg (z ^ 2 + x ^ 2),\n    Real.sqrt_nonneg (2 * x + y + z), Real.sqrt_nonneg (2 * y + z + x), Real.sqrt_nonneg (2 * z + x + y)]\n  <;> try norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (Real.sqrt ((b + c) / a) + Real.sqrt ((a + c) / b) + Real.sqrt ((a + b) / c)) \u2264 Real.sqrt 2 * (a / b + b / c + c / a) := by",
  "new": ": Real.sqrt 2 \u2265 1 / 2 * (Real.sqrt 3 + 1) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2265 1 / 2 * (Real.sqrt 3 + 1) := by\n  apply Real.le_sqrt_of_sq_le\n  norm_num\n  nlinarith [Real.sq_sqrt (show (0 : \u211d) \u2264 3 by norm_num)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2265 1 / 2 * (Real.sqrt 3 + 1) := by\n  have h\u2081 : 0 \u2264 Real.sqrt 2 := Real.sqrt_nonneg 2\n  have h\u2082 : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg 3\n  nlinarith [sq_sqrt (show 0 \u2264 2 from by linarith),\n    sq_sqrt (show 0 \u2264 3 from by linarith),\n    mul_self_nonneg (Real.sqrt 2 - 1),\n    mul_self_nonneg (Real.sqrt 2 - Real.sqrt 3)]\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2265 1 / 2 * (Real.sqrt 3 + 1) := by\n  have h\u2080 : 0 \u2264 Real.sqrt 2 := Real.sqrt_nonneg 2\n  have h\u2081 : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg 3\n  have h\u2082 : 0 \u2264 Real.sqrt 2 * Real.sqrt 3 := by positivity\n  have h\u2083 : 0 \u2264 Real.sqrt 2 * (Real.sqrt 3 + 1) := by positivity\n  apply le_sqrt_of_sq_le\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 2 by linarith),\n    sq_sqrt (show (0 : \u211d) \u2264 3 by linarith),\n    sq_nonneg (Real.sqrt 2 - 1 / 2 * Real.sqrt 3)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2265 1 / 2 * (Real.sqrt 3 + 1) := by\n  have h : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg 3\n  apply le_sqrt_of_sq_le\n  nlinarith [sq_sqrt (show 0 \u2264 3 from by linarith)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^3 / (a^2 + a * b + b^2) + b^3 / (b^2 + b * c + c^2) + c^3 / (c^2 + c * a + a^2) + (2 / 3) * (a + b + c) \u2264 2 * (b^2 / (a + b) + c^2 / (b + c) + a^2 / (a + c))) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 \u2265 x / y + y / z + z / x - 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 \u2265 x / y + y / z + z / x - 3:= by\n  have h1 : 0 < x * y := by positivity\n  have h2 : 0 < y * z := by positivity\n  have h3 : 0 < z * x := by positivity\n  have h4 : 0 < x * y * z := by positivity\n  have h5 : 0 < x ^ 2 * y ^ 2 * z ^ 2 := by positivity\n  field_simp [h1, h2, h3, h4, h5]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x ^ 2 * z - y ^ 2 * x), sq_nonneg (y ^ 2 * x - z ^ 2 * y), sq_nonneg (z ^ 2 * y - x ^ 2 * z),\n    sq_nonneg (x * y * z), sq_nonneg (x * y * z * (x * y - y * z)), sq_nonneg (x * y * z * (y * z - z * x)),\n    sq_nonneg (x * y * z * (z * x - x * y))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 \u2265 x / y + y / z + z / x - 3:= by\n  have h\u2080 : 0 < x * y := by positivity\n  have h\u2081 : 0 < y * z := by positivity\n  have h\u2082 : 0 < z * x := by positivity\n  have h\u2083 : 0 < x * y * z := by positivity\n  have h\u2084 : 0 < x ^ 2 * y ^ 2 * z ^ 2 := by positivity\n  have h\u2085 : 0 < x ^ 2 * y ^ 2 * z ^ 2 := by positivity\n  field_simp [h\u2080.ne', h\u2081.ne', h\u2082.ne', h\u2083.ne', h\u2084.ne', h\u2085.ne']\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x ^ 2 * z - y ^ 2 * x), sq_nonneg (y ^ 2 * x - z ^ 2 * y), sq_nonneg (z ^ 2 * y - x ^ 2 * z), sq_nonneg (x * y * z), sq_nonneg (x * y * z * (x * y - y * z)), sq_nonneg (x * y * z * (y * z - z * x)), sq_nonneg (x * y * z * (z * x - x * y))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 \u2265 x / y + y / z + z / x - 3:= by\n  have h\u2081 : 0 < x * y := by positivity\n  have h\u2082 : 0 < y * z := by positivity\n  have h\u2083 : 0 < z * x := by positivity\n  have h\u2084 : 0 < x * y * z := by positivity\n  have h\u2085 : 0 < x ^ 2 * y ^ 2 * z ^ 2 := by positivity\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084, h\u2085]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x ^ 2 * z - y ^ 2 * x), sq_nonneg (y ^ 2 * x - z ^ 2 * y), sq_nonneg (z ^ 2 * y - x ^ 2 * z),\n    sq_nonneg (x * y * z), sq_nonneg (x * y * z * (x * y - y * z)), sq_nonneg (x * y * z * (y * z - z * x)),\n    sq_nonneg (x * y * z * (z * x - x * y))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 \u2265 x / y + y / z + z / x - 3:= by\n  have h\u2080 : 0 < x * y := by positivity\n  have h\u2081 : 0 < y * z := by positivity\n  have h\u2082 : 0 < x * z := by positivity\n  have h\u2083 : 0 < x * y * z := by positivity\n  have h\u2084 : 0 < x ^ 2 * y ^ 2 * z ^ 2 := by positivity\n  have h\u2085 : 0 < x ^ 2 * y ^ 2 * z ^ 2 * (x * y * z) := by positivity\n  field_simp [h\u2080, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x ^ 2 * z - y ^ 2 * x), sq_nonneg (y ^ 2 * x - z ^ 2 * y),\n    sq_nonneg (z ^ 2 * y - x ^ 2 * z),\n    sq_nonneg (x * y * z), sq_nonneg (x * y * z * (x * y - y * z)),\n    sq_nonneg (x * y * z * (y * z - z * x)), sq_nonneg (x * y * z * (z * x - x * y))]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 2) : 2 \u2264 \u221a(a^2 + b * c) + \u221a(b^2 + c * a) + \u221a(c^2 + a * b) \u2227 \u221a(a^2 + b * c) + \u221a(b^2 + c * a) + \u221a(c^2 + a * b) \u2264 2 * \u221a2 := by",
  "new": "(x y : \u2115) (h : x ^ 2 + y ^ 2 \u2264 2 * \u221a2 * (x * y + 1)) : Nat.Coprime x y \u2228 \u00ac Nat.Coprime x y := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2264 2 * \u221a2 * (x * y + 1)) :  Nat.Coprime x y \u2228 \u00ac Nat.Coprime x y := by\n  by_cases hx : x = 0 <;> by_cases hy : y = 0 <;> simp_all [Nat.coprime_iff_gcd_eq_one, Nat.gcd_eq_left,\n    Nat.gcd_eq_right]\n  all_goals omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2264 2 * \u221a2 * (x * y + 1)) :  Nat.Coprime x y \u2228 \u00ac Nat.Coprime x y := by\n  by_cases hc : x.Coprime y\n  <;> simp_all\n  <;> try norm_num at h\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2264 2 * \u221a2 * (x * y + 1)) :  Nat.Coprime x y \u2228 \u00ac Nat.Coprime x y := by\n  by_cases h' : Nat.Coprime x y <;> simp_all\n  <;> norm_num at h <;> linarith"
  ]
 },
 {
  "old": "(x y : \u2124) : x^3 - y^3 = (x - y) * (x^2 + x * y + y^2) := by",
  "new": "(x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y):= by\n  by_cases h : x.Coprime y\n  exacts [Or.inl h, Or.inr (by simpa using h)]"
  ]
 },
 {
  "old": "(x y z t : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (ht : 0 < t) (h : x + y + z + t = 1) : (1 - x) * (1 - y) * (1 - z) * (1 - t) - x * y * z * t \u2264 5 / 16 := by",
  "new": ": \u2200 x : \u211d, 0 < x \u2227 x < 1 \u2192 \u2200 y : \u211d, 0 < y \u2227 y < 1 \u2192 (x + y) * (x * (1 - y) + y * (1 - x)) \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, 0 < x \u2227 x < 1 \u2192 \u2200 y : \u211d, 0 < y \u2227 y < 1 \u2192\n       (x + y) * (x * (1 - y) + y * (1 - x)) \u2264 1:= by\n  rintro x \u27e8hx1, hx2\u27e9 y \u27e8hy1, hy2\u27e9\n  nlinarith [mul_pos hx1 (sub_pos.mpr hy2), mul_pos hy1 (sub_pos.mpr hx2),\n    mul_pos (sub_pos.mpr hx2) hy1, mul_pos (sub_pos.mpr hy2) hx1,\n    mul_pos (sub_pos.mpr hx2) (sub_pos.mpr hy2), mul_pos (sub_pos.mpr hy1) (sub_pos.mpr hx1)]\n  <;> linarith\n  <;> norm_num"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a \u2227 a \u2264 \u221a5 / 5) (hb : 0 \u2264 b \u2227 b \u2264 \u221a5 / 5) (hc : 0 \u2264 c \u2227 c \u2264 \u221a5 / 5) (hab : a + b + c = 1) : 2 * Real.sqrt (\u221a5 - 2) \u2264 Real.sqrt (1 - 5 * a ^ 2) + Real.sqrt (1 - 5 * b ^ 2) + Real.sqrt (1 - 5 * c ^ 2) \u2227 Real.sqrt (1 - 5 * a ^ 2) + Real.sqrt (1 - 5 * b ^ 2) + Real.sqrt (1 - 5 * c ^ 2) \u2264 2 := by",
  "new": ": Real.sqrt (1 - 5 * a ^ 2) + Real.sqrt (1 - 5 * b ^ 2) + Real.sqrt (1 - 5 * c ^ 2) \u2264 2 * (Real.sqrt (5 - 1) + 1):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt (1 - 5 * a ^ 2) + Real.sqrt (1 - 5 * b ^ 2) + Real.sqrt (1 - 5 * c ^ 2) \u2264 2 * (Real.sqrt (5 - 1) + 1):= by\n  have h\u2081 : Real.sqrt (1 - 5 * a ^ 2) \u2264 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    nlinarith\n    nlinarith\n  have h\u2082 : Real.sqrt (1 - 5 * b ^ 2) \u2264 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    nlinarith\n    nlinarith\n  have h\u2083 : Real.sqrt (1 - 5 * c ^ 2) \u2264 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    nlinarith\n    nlinarith\n  have h\u2084 : Real.sqrt (5 - 1) \u2265 2 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  nlinarith\n  <;> linarith\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (habc : a * b * c = 1) : 1 / a + 1 / b + 1 / c + 6 / (a + b + c) \u2265 5 := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192 1 / a + 1 / b + 1 / c + 6 / (a + b + c) \u2265 5:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192 1 / a + 1 / b + 1 / c + 6 / (a + b + c) \u2265 5:= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have : 0 < a + b + c := by linarith\n  have h\u2080 : 0 < a * b := by positivity\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * a := by positivity\n  field_simp [habc]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a + b + c - 3),\n    sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192 1 / a + 1 / b + 1 / c + 6 / (a + b + c) \u2265 5:= by\n  rintro a b c \u27e8a_pos, b_pos, c_pos, abc_eq\u27e9\n  have h\u2080 : 0 < a + b + c := by linarith\n  have h\u2081 : 0 < a * b + b * c + a * c := by positivity\n  field_simp [abc_eq]\n  rw [le_div_iff (by positivity)]\n  nlinarith [mul_self_nonneg (a + b + c - 3),\n    mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a),\n    mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - a * c),\n    mul_self_nonneg (a * c - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192 1 / a + 1 / b + 1 / c + 6 / (a + b + c) \u2265 5:= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have h\u2081 : 0 < a + b + c := by linarith\n  have h\u2082 : 0 < a * b + b * c + c * a := by nlinarith\n  field_simp [habc]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a + b + c - 3),\n    sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n  <;> assumption\n  <;> try norm_num"
  ]
 },
 {
  "old": "(a b : \u211d) (ha : 0 < a) (hb : 0 < b) (hab : a + b = 3 / 2) (n : \u2115) : (2:\u211d)^n * (1 + a^n / b^n + b^n / a^n) \u2265 2 / a^n + 1 / b^n := by",
  "new": ": \u2200 n : \u2115, 2 ^ (n + 1) * ((1 + 1 / 2) ^ (n + 1) + 1) \u2265 2 ^ (n + 1) + 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 n : \u2115,\n   2 ^ (n + 1) * ((1 + 1 / 2) ^ (n + 1) + 1) \u2265 2 ^ (n + 1) + 2:= by\n  intro n\n  induction' n with k hk\n  norm_num\n  simp_all [Nat.pow_succ, Nat.mul_succ]\n  nlinarith [pow_pos (by norm_num : 0 < 2) k, pow_pos (by norm_num : 0 < 2) (k + 1)]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 n : \u2115,\n   2 ^ (n + 1) * ((1 + 1 / 2) ^ (n + 1) + 1) \u2265 2 ^ (n + 1) + 2:= by\n  intro n;\n  induction n with\n  | zero => norm_num\n  | succ n h =>\n    simp_all [Nat.pow_succ, Nat.mul_succ]\n    nlinarith [pow_pos (show (0 : \u2115) < 2 by decide) n]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 n : \u2115,\n   2 ^ (n + 1) * ((1 + 1 / 2) ^ (n + 1) + 1) \u2265 2 ^ (n + 1) + 2:= by\n  intro n\n  norm_num\n  <;> induction n <;>\n  simp_all [Nat.pow_succ, Nat.mul_succ]\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 n : \u2115,\n   2 ^ (n + 1) * ((1 + 1 / 2) ^ (n + 1) + 1) \u2265 2 ^ (n + 1) + 2:= by\n  intro n;\n  cases n with\n  | zero => norm_num\n  | succ n =>\n    induction' n with n ih\n    all_goals simp_all [Nat.pow_succ, Nat.mul_succ]\n    all_goals nlinarith"
  ]
 },
 {
  "old": "(a b c : \u2115) (h1 : 0 < a \u2227 0 < b \u2227 0 < c) (h2 : Nat.Coprime a b) (h3 : Nat.Coprime a c) (h4 : Nat.Coprime b c) (h5 : 1/a + 1/b = 1/c) : (a - c) * (b - c) = c ^ 2 := by",
  "new": "(a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  rcases Nat.eq_zero_or_pos a with (ha | ha) <;> rcases Nat.eq_zero_or_pos b with (hb | hb) <;>\n  simp_all [Nat.coprime_iff_gcd_eq_one, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  all_goals omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  have : a \u2260 0 := by\n    intro h\u2080\n    simp_all\n  have : b \u2260 0 := by\n    intro h\u2080\n    simp_all\n  aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  rcases Nat.eq_zero_or_pos a with (rfl | ha)\n  all_goals rcases Nat.eq_zero_or_pos b with (rfl | hb)\n  all_goals simp_all\n  all_goals simp_all [Nat.coprime_iff_gcd_eq_one, Nat.gcd_eq_gcd_ab]\n  all_goals omega"
  ]
 },
 {
  "old": "(f : \u211d \u2192 \u211d): (\u2200 x y, (f (y + f x))^2 = (f y)^2 + f (8 * x * y) + 8 * x^2 * f (x^2)) \u2194 \u2200 x, f x = 0 := by",
  "new": "(f : \u211d \u2192 \u211d) (hf: f (12341234) = 12341234) (h\u2081 : \u2200 x y, (f (y + f x))^2 = (f y)^2 + f (8 * x * y) + 8 * x^2 * f (x^2)) : \u2203 x, f x \u2260 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem h1234 (f : \u211d \u2192 \u211d) (hf: f (12341234) = 12341234) (h\u2081 : \u2200 x y, (f (y + f x))^2 = (f y)^2 + f (8 * x * y) + 8 * x^2 * f (x^2)) : \u2203 x, f x \u2260 0:= by\n  by_contra! h\n  have h\u2082 := h\u2081 0 0\n  simp_all\n  <;> linarith [h 0]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem h1234 (f : \u211d \u2192 \u211d) (hf: f (12341234) = 12341234) (h\u2081 : \u2200 x y, (f (y + f x))^2 = (f y)^2 + f (8 * x * y) + 8 * x^2 * f (x^2)) : \u2203 x, f x \u2260 0:= by\n  use 12341234\n  intro h\n  have h2 := h\u2081 12341234 0\n  simp [h] at h2\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem h1234 (f : \u211d \u2192 \u211d) (hf: f (12341234) = 12341234) (h\u2081 : \u2200 x y, (f (y + f x))^2 = (f y)^2 + f (8 * x * y) + 8 * x^2 * f (x^2)) : \u2203 x, f x \u2260 0:= by\n  refine' \u27e812341234, _\u27e9\n  intro h\n  have h2 := h\u2081 12341234 0\n  simp [h, hf] at h2\n  ring_nf at h2\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem h1234 (f : \u211d \u2192 \u211d) (hf: f (12341234) = 12341234) (h\u2081 : \u2200 x y, (f (y + f x))^2 = (f y)^2 + f (8 * x * y) + 8 * x^2 * f (x^2)) : \u2203 x, f x \u2260 0:= by\n  use 12341234\n  intro h\n  have h\u2082 := h\u2081 12341234 0\n  simp at h\u2082\n  nlinarith"
  ]
 },
 {
  "old": "{a m n : \u2115} (ha : 1 < a) : Nat.gcd (a^m - 1) (a^n - 1) = a^(Nat.gcd m n) - 1 := by",
  "new": "(f : \u2115 \u2192 \u2115) (hf: \u2200 x y : \u2115, f (x ^ 2 + y ^ 2) = f x * f y + f (x * y) + f x + f y) : \u2200 n : \u2115, \u2203 a b : \u2115, (Nat.gcd a b = 1 \u2228 \u00ac Nat.gcd a b = 1) \u2227 f n = a + b:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime_diophantine (f : \u2115 \u2192 \u2115) (hf: \u2200 x y : \u2115, f (x ^ 2 + y ^ 2) = f x * f y + f (x * y) + f x + f y) :  \u2200 n : \u2115, \u2203 a b : \u2115, (Nat.gcd a b = 1 \u2228 \u00ac Nat.gcd a b = 1) \u2227 f n = a + b:= by\n  intro n\n  use f n, 0\n  by_cases h : Nat.gcd (f n) 0 = 1 <;> simp_all\n  <;> try linarith [hf 0 0, hf 0 1, hf 1 0, hf 1 1]\n  <;> try linarith [hf 0 0, hf 0 1, hf 1 0, hf 1 1]\n  <;> try linarith [hf 0 0, hf 0 1, hf 1 0, hf 1 1]\n  <;> try linarith [hf 0 0, hf 0 1, hf 1 0, hf 1 1]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime_diophantine (f : \u2115 \u2192 \u2115) (hf: \u2200 x y : \u2115, f (x ^ 2 + y ^ 2) = f x * f y + f (x * y) + f x + f y) :  \u2200 n : \u2115, \u2203 a b : \u2115, (Nat.gcd a b = 1 \u2228 \u00ac Nat.gcd a b = 1) \u2227 f n = a + b:= by\n  intro n\n  refine' \u27e80, f n, _, _\u27e9\n  all_goals simp_all\n  <;> tauto\n  <;> linarith [hf 0 0, hf 0 1, hf 1 0, hf 1 1]\n  <;> simp_all\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime_diophantine (f : \u2115 \u2192 \u2115) (hf: \u2200 x y : \u2115, f (x ^ 2 + y ^ 2) = f x * f y + f (x * y) + f x + f y) :  \u2200 n : \u2115, \u2203 a b : \u2115, (Nat.gcd a b = 1 \u2228 \u00ac Nat.gcd a b = 1) \u2227 f n = a + b:= by\n  intro n\n  refine' \u27e8f n, 0, _, _\u27e9 <;> simp [Nat.gcd_zero_right]\n  <;> have h1 := hf 0 0\n  <;> have h2 := hf 0 1\n  <;> have h3 := hf 1 0\n  <;> have h4 := hf 1 1\n  <;> simp at h1 h2 h3 h4 <;> omega"
  ]
 },
 {
  "old": "(a b c : \u211d) (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2081 : a + b + c = 3) : (a * b + 2) * (b * c + 2) * (c * a + 2) \u2265 8 + 19 * a * b * c := by",
  "new": "(x y z : \u211d) (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2081 : x * y + x * z + y * z = 3) (h\u2082 : 0 < x * y * z) : (x + y + z) * (x * y + y * z + z * x) * (x * y * z + 1) \u2265 (x * y * z + 1) * 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p19 (x y z : \u211d)\n  (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z)\n  (h\u2081 : x * y + x * z + y * z = 3)\n  (h\u2082 : 0 < x * y * z) :\n  (x + y + z) * (x * y + y * z + z * x) * (x * y * z + 1) \u2265 (x * y * z + 1) * 3:= by\n  have h\u2083 : 0 < x * y := by nlinarith\n  have h\u2084 : 0 < y * z := by nlinarith\n  have h\u2085 : 0 < z * x := by nlinarith\n  have h\u2086 : 0 < x * y * z := by nlinarith\n  have h\u2087 : 0 < x * y * z + 1 := by nlinarith\n  have h\u2088 : (x + y + z) * (x * y + y * z + z * x) \u2265 3 := by\n    nlinarith [mul_self_nonneg (x - y), mul_self_nonneg (y - z),\n      mul_self_nonneg (z - x)]\n  nlinarith\n  <;> simp_all only [mul_assoc]\n  <;> nlinarith\n  <;> simp_all only [mul_assoc]\n  <;> nlinarith\n  <;> simp_all only [mul_assoc]\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p19 (x y z : \u211d)\n  (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z)\n  (h\u2081 : x * y + x * z + y * z = 3)\n  (h\u2082 : 0 < x * y * z) :\n  (x + y + z) * (x * y + y * z + z * x) * (x * y * z + 1) \u2265 (x * y * z + 1) * 3:= by\n  have h\u2083 : 0 < x * y * z := by nlinarith\n  have h\u2084 : (x + y + z) * (x * y + y * z + z * x) \u2265 3 := by\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n      mul_self_nonneg (x * y - 1), mul_self_nonneg (y * z - 1), mul_self_nonneg (z * x - 1)]\n  nlinarith [mul_self_nonneg (x * y * z - 1), mul_self_nonneg (x - y),\n    mul_self_nonneg (x - z), mul_self_nonneg (y - z)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p19 (x y z : \u211d)\n  (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z)\n  (h\u2081 : x * y + x * z + y * z = 3)\n  (h\u2082 : 0 < x * y * z) :\n  (x + y + z) * (x * y + y * z + z * x) * (x * y * z + 1) \u2265 (x * y * z + 1) * 3:= by\n  have h\u2083 : 0 < x * y := by nlinarith\n  have h\u2084 : 0 < y * z := by nlinarith\n  have h\u2085 : 0 < z * x := by nlinarith\n  have h\u2086 : 0 < x * y * z := by nlinarith\n  have h\u2087 : (x + y + z) * (x * y + y * z + z * x) \u2265 3 := by\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  nlinarith [sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y)]\n  <;> assumption\n  <;> assumption\n  <;> assumption"
  ]
 },
 {
  "old": "(a b c : \u211d) : (a^3 / b + b^3 / c + c^3 / a + a^2 * c / b + b^2 * a / c + c^2 * b / a) \u2265 2 * (a^2 + b^2 + c^2) := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^3 / b + b^3 / c + c^3 / a + a^2 * c / b + b^2 * a / c + c^2 * b / a) \u2265 2 * (a^2 + b^2 + c^2) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n  (a^3 / b + b^3 / c + c^3 / a + a^2 * c / b + b^2 * a / c + c^2 * b / a) \u2265\n  2 * (a^2 + b^2 + c^2)  := by\n  have hab : 0 < a * b := mul_pos ha hb\n  have hbc : 0 < b * c := mul_pos hb hc\n  have hac : 0 < a * c := mul_pos ha hc\n  have h\u2081 : 0 < a * b * c := by positivity\n  have h\u2082 : 0 < a ^ 2 * b * c := by positivity\n  have h\u2083 : 0 < b ^ 2 * a * c := by positivity\n  have h\u2084 : 0 < c ^ 2 * a * b := by positivity\n  field_simp [hab, hbc, hac, h\u2081, h\u2082, h\u2083, h\u2084]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    sq_nonneg (a ^ 2 - a * b), sq_nonneg (b ^ 2 - b * c), sq_nonneg (c ^ 2 - c * a),\n    sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n  (a^3 / b + b^3 / c + c^3 / a + a^2 * c / b + b^2 * a / c + c^2 * b / a) \u2265\n  2 * (a^2 + b^2 + c^2)  := by\n  have hab : 0 < a * b := by positivity\n  have hbc : 0 < b * c := by positivity\n  have hca : 0 < c * a := by positivity\n  have h\u2080 : 0 < a ^ 2 * c * b := by positivity\n  have h\u2081 : 0 < b ^ 2 * a * c := by positivity\n  have h\u2082 : 0 < c ^ 2 * b * a := by positivity\n  have h\u2083 : 0 < a ^ 3 * c := by positivity\n  have h\u2084 : 0 < b ^ 3 * a := by positivity\n  have h\u2085 : 0 < c ^ 3 * b := by positivity\n  have h\u2086 : 0 < a * b * c := by positivity\n  have h\u2087 : 0 < a ^ 2 * c * b * a := by positivity\n  have h\u2088 : 0 < b ^ 2 * a * c * b := by positivity\n  have h\u2089 : 0 < c ^ 2 * b * a * c := by positivity\n  field_simp [ha.ne', hb.ne', hc.ne', hab.ne', hbc.ne', hca.ne', h\u2080.ne', h\u2081.ne', h\u2082.ne', h\u2083.ne',\n    h\u2084.ne', h\u2085.ne', h\u2086.ne', h\u2087.ne', h\u2088.ne', h\u2089.ne']\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    sq_nonneg (a ^ 2 - a * b), sq_nonneg (b ^ 2 - b * c), sq_nonneg (c ^ 2 - c * a),\n    sq_nonneg (a * b - a * c), sq_nonneg (b * c - b * a), sq_nonneg (c * a - c * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n  (a^3 / b + b^3 / c + c^3 / a + a^2 * c / b + b^2 * a / c + c^2 * b / a) \u2265\n  2 * (a^2 + b^2 + c^2)  := by\n  have h1 : 0 < a * b := by positivity\n  have h2 : 0 < b * c := by positivity\n  have h3 : 0 < a * c := by positivity\n  have h4 : 0 < a * b * c := by positivity\n  have h5 : 0 < a ^ 2 * b * c := by positivity\n  have h6 : 0 < b ^ 2 * a * c := by positivity\n  have h7 : 0 < c ^ 2 * a * b := by positivity\n  field_simp [h1.ne', h2.ne', h3.ne', h4.ne', h5.ne', h6.ne', h7.ne']\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    sq_nonneg (a ^ 2 - a * b), sq_nonneg (b ^ 2 - b * c), sq_nonneg (c ^ 2 - c * a),\n    sq_nonneg (a * b - a * c), sq_nonneg (b * c - b * a), sq_nonneg (c * a - c * b)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 3) : a * b * c * (5 * a - 2 * b) * (5 * b - 2 * c) * (5 * c - 2 * a) \u2264 27 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 3) : (x ^ 2 / (y + z) + y ^ 2 / (z + x) + z ^ 2 / (x + y) \u2265 3 / 2) \u2227 (x * y * z * (x + y + z) \u2264 3 * (x ^ 2 + y ^ 2 + z ^ 2)):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 3) : (x ^ 2 / (y + z) + y ^ 2 / (z + x) + z ^ 2 / (x + y) \u2265 3 / 2) \u2227 (x * y * z * (x + y + z) \u2264 3 * (x ^ 2 + y ^ 2 + z ^ 2)):= by\n  have h\u2081 : (x ^ 2 / (y + z) + y ^ 2 / (z + x) + z ^ 2 / (x + y)) \u2265 3 / 2 := by\n    have h\u2082 : 0 < y + z := by linarith\n    have h\u2083 : 0 < z + x := by linarith\n    have h\u2084 : 0 < x + y := by linarith\n    have h\u2085 : 0 < y * z := by positivity\n    have h\u2086 : 0 < z * x := by positivity\n    have h\u2087 : 0 < x * y := by positivity\n    have h\u2088 : 0 < (y + z) * (z + x) * (x + y) := by positivity\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  have h\u2082 : x * y * z * (x + y + z) \u2264 3 * (x ^ 2 + y ^ 2 + z ^ 2) := by\n    rw [hab]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  exact \u27e8h\u2081, h\u2082\u27e9\n  <;> simp [h\u2081, h\u2082]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 3) : (x ^ 2 / (y + z) + y ^ 2 / (z + x) + z ^ 2 / (x + y) \u2265 3 / 2) \u2227 (x * y * z * (x + y + z) \u2264 3 * (x ^ 2 + y ^ 2 + z ^ 2)):= by\n  constructor\n  case left =>\n    have h\u2081 : 0 < y + z := by linarith\n    have h\u2082 : 0 < z + x := by linarith\n    have h\u2083 : 0 < x + y := by linarith\n    have h\u2084 : 0 < y * z := by positivity\n    have h\u2085 : 0 < z * x := by positivity\n    have h\u2086 : 0 < x * y := by positivity\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (x - 1), sq_nonneg (y - 1), sq_nonneg (z - 1)]\n  case right =>\n    have h\u2081 : 0 < y * z := by positivity\n    have h\u2082 : 0 < z * x := by positivity\n    have h\u2083 : 0 < x * y := by positivity\n    have h\u2084 : 0 < y * z * (x + y + z) := by positivity\n    have h\u2085 : 0 < z * x * (x + y + z) := by positivity\n    have h\u2086 : 0 < x * y * (x + y + z) := by positivity\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 3) : (x ^ 2 / (y + z) + y ^ 2 / (z + x) + z ^ 2 / (x + y) \u2265 3 / 2) \u2227 (x * y * z * (x + y + z) \u2264 3 * (x ^ 2 + y ^ 2 + z ^ 2)):= by\n  constructor\n  \u00b7 have h1 : 0 < y + z := by linarith\n    have h2 : 0 < z + x := by linarith\n    have h3 : 0 < x + y := by linarith\n    have h4 : 0 < y * z := by positivity\n    have h5 : 0 < z * x := by positivity\n    have h6 : 0 < x * y := by positivity\n    have h7 : 0 < (y + z) * (z + x) * (x + y) := by positivity\n    have h8 : 0 < (y + z) * (z + x) * (x + y) * (x + y + z) := by positivity\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (x - 1), sq_nonneg (y - 1), sq_nonneg (z - 1)]\n  \u00b7 have h1 : 0 < y * z := by positivity\n    have h2 : 0 < z * x := by positivity\n    have h3 : 0 < x * y := by positivity\n    have h4 : 0 < (y + z) * (z + x) * (x + y) := by positivity\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : a^4 * b + b^4 * c + c^4 * a + 3 * a^3 * b^2 + 3 * b^3 * c^2 + 3 * c^3 * a^2 - 9 * a^3 * b * c - 9 * b^3 * c * a - 9 * c^3 * a * b + 5 * a^2 * b^2 * c + 5 * b^2 * c^2 * a + 5 * c^2 * a^2 * b \u2265 0 := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : a ^ 2 * b ^ 2 * c ^ 2 \u2264 1 / 27 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) :   a ^ 2 * b ^ 2 * c ^ 2 \u2264 1 / 27  := by\n  have h\u2081 : 0 < a * b := by positivity\n  have h\u2082 : 0 < a * b * c := by positivity\n  have h\u2083 : 0 < a * b * c * c := by positivity\n  have h\u2084 : 0 < a * b * c * c * b := by positivity\n  have h\u2085 : 0 < a * b * c * c * b * a := by positivity\n  nlinarith [pow_two_nonneg (a - b), mul_self_nonneg (a + b),\n    mul_self_nonneg (a + b - 2 * c), mul_self_nonneg (a + b + 2 * c)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) :   a ^ 2 * b ^ 2 * c ^ 2 \u2264 1 / 27  := by\n  have h1 : a ^ 2 + b ^ 2 + c ^ 2 \u2264 1 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (a - c), habc]\n  nlinarith [mul_self_nonneg (a ^ 2 + b ^ 2 + c ^ 2), mul_self_nonneg (a ^ 2 - b ^ 2),\n    mul_self_nonneg (b ^ 2 - c ^ 2), mul_self_nonneg (a ^ 2 - c ^ 2)]\n  <;> simp [h1]\n  <;> linarith\n  <;> simp [h1]\n  <;> linarith\n  <;> simp [h1]\n  <;> linarith\n  <;> simp [h1]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) :   a ^ 2 * b ^ 2 * c ^ 2 \u2264 1 / 27  := by\n  have : a ^ 2 + b ^ 2 + c ^ 2 \u2264 1 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  nlinarith [mul_self_nonneg (a ^ 2 + b ^ 2 + c ^ 2), mul_self_nonneg (a ^ 2 - b ^ 2),\n    mul_self_nonneg (b ^ 2 - c ^ 2), mul_self_nonneg (c ^ 2 - a ^ 2)]\n  <;> linarith"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) : (Real.sqrt (z + x) + Real.sqrt (x + y) - Real.sqrt (y + z)) * (Real.sqrt (x + y) + Real.sqrt (y + z) - Real.sqrt (z + x)) * (Real.sqrt (y + z) + Real.sqrt (z + x) - Real.sqrt (x + y)) \u2265 (2 / 3) * Real.sqrt 2 * (x * y + x * z + y * z) * (3 + Real.sqrt 3) / Real.sqrt (x + y + z) - 2 * Real.sqrt 6 * Real.sqrt (x * y * z) := by",
  "new": "(x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) : (Real.sqrt (z + x) + Real.sqrt (x + y) - Real.sqrt (y + z)) * (Real.sqrt (x + y) + Real.sqrt (y + z) - Real.sqrt (z + x)) * (Real.sqrt (y + z) + Real.sqrt (z + x) - Real.sqrt (x + y)) \u2265 0 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) :\n     (Real.sqrt (z + x) + Real.sqrt (x + y) - Real.sqrt (y + z)) * (Real.sqrt (x + y) + Real.sqrt (y + z) - Real.sqrt (z + x)) * (Real.sqrt (y + z) + Real.sqrt (z + x) - Real.sqrt (x + y)) \u2265 0 := by\n  have h1 : 0 \u2264 Real.sqrt (z + x) := Real.sqrt_nonneg _\n  have h2 : 0 \u2264 Real.sqrt (x + y) := Real.sqrt_nonneg _\n  have h3 : 0 \u2264 Real.sqrt (y + z) := Real.sqrt_nonneg _\n  refine' mul_nonneg (mul_nonneg _ _) _ <;>\n    nlinarith [sq_sqrt (show 0 \u2264 z + x from add_nonneg hz hx),\n      sq_sqrt (show 0 \u2264 x + y from add_nonneg hx hy),\n      sq_sqrt (show 0 \u2264 y + z from add_nonneg hy hz)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) :\n     (Real.sqrt (z + x) + Real.sqrt (x + y) - Real.sqrt (y + z)) * (Real.sqrt (x + y) + Real.sqrt (y + z) - Real.sqrt (z + x)) * (Real.sqrt (y + z) + Real.sqrt (z + x) - Real.sqrt (x + y)) \u2265 0 := by\n  apply mul_nonneg\n  apply mul_nonneg\n  repeat'\n    nlinarith [Real.sqrt_nonneg (z + x), Real.sqrt_nonneg (x + y), Real.sqrt_nonneg (y + z),\n      Real.sq_sqrt (add_nonneg hz hx), Real.sq_sqrt (add_nonneg hx hy), Real.sq_sqrt (add_nonneg hy hz),\n      sq_nonneg (Real.sqrt (z + x) - Real.sqrt (x + y)),\n      sq_nonneg (Real.sqrt (z + x) - Real.sqrt (y + z)),\n      sq_nonneg (Real.sqrt (x + y) - Real.sqrt (y + z))]\n  <;> linarith\n  <;> nlinarith\n  <;> linarith\n  <;> nlinarith\n  <;> linarith\n  <;> nlinarith\n  <;> linarith\n  <;> nlinarith\n  <;> linarith\n  <;> nlinarith\n  <;> linarith\n  <;> nlinarith"
  ]
 },
 {
  "old": "(f : \u2115 \u2192 \u2115) (hf1 : \u2200 m n, f (m * n) = f m * f n) (hf2 : \u2200 m n, m + n \u2223 f m + f n) : \u2203 k : \u2115, Odd k \u2227 \u2200 n, f n = n ^ k := by",
  "new": "{f : \u2115 \u2192 \u2115} (hf1 : \u2200 m n, f (m * n) = f m * f n) (hf2 : \u2200 m n, m + n \u2223 f m + f n) {a b : \u2115} (hab : a \u2260 0 \u2227 b \u2260 0) (h : a * b = 1) : Nat.Coprime a b \u2228 a = b:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_pow\n    {f : \u2115 \u2192 \u2115}\n    (hf1 : \u2200 m n, f (m * n) = f m * f n)\n    (hf2 : \u2200 m n, m + n \u2223 f m + f n)\n    {a b : \u2115} (hab : a \u2260 0 \u2227 b \u2260 0) (h : a * b = 1) :\n    Nat.Coprime a b \u2228 a = b:= by\n  rcases eq_or_ne a 1 with (rfl | ha) <;>\n  rcases eq_or_ne b 1 with (rfl | hb) <;>\n  simp_all\n  all_goals\n    simp_all [Nat.Coprime]\n  all_goals\n    omega\n  all_goals\n    omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_pow\n    {f : \u2115 \u2192 \u2115}\n    (hf1 : \u2200 m n, f (m * n) = f m * f n)\n    (hf2 : \u2200 m n, m + n \u2223 f m + f n)\n    {a b : \u2115} (hab : a \u2260 0 \u2227 b \u2260 0) (h : a * b = 1) :\n    Nat.Coprime a b \u2228 a = b:= by\n  have ha : a \u2260 0 := hab.1\n  have hb : b \u2260 0 := hab.2\n  rcases eq_or_ne a 1 with (rfl | ha1) <;>\n  rcases eq_or_ne b 1 with (rfl | hb1) <;>\n  simp_all [Nat.coprime_one_left, Nat.coprime_one_right, eq_self_iff_true,\n    Nat.mul_eq_zero, not_or]\n  all_goals omega\n  <;>\n  aesop\n  <;>\n  aesop\n  <;>\n  aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_pow\n    {f : \u2115 \u2192 \u2115}\n    (hf1 : \u2200 m n, f (m * n) = f m * f n)\n    (hf2 : \u2200 m n, m + n \u2223 f m + f n)\n    {a b : \u2115} (hab : a \u2260 0 \u2227 b \u2260 0) (h : a * b = 1) :\n    Nat.Coprime a b \u2228 a = b:= by\n  have h1 := hf2 0 0\n  have h2 := hf2 0 1\n  simp at h1 h2\n  have h3 := hf2 1 1\n  simp at h3\n  aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_pow\n    {f : \u2115 \u2192 \u2115}\n    (hf1 : \u2200 m n, f (m * n) = f m * f n)\n    (hf2 : \u2200 m n, m + n \u2223 f m + f n)\n    {a b : \u2115} (hab : a \u2260 0 \u2227 b \u2260 0) (h : a * b = 1) :\n    Nat.Coprime a b \u2228 a = b:= by\n  cases' Nat.eq_zero_or_pos a with ha ha <;>\n  cases' Nat.eq_zero_or_pos b with hb hb <;>\n  simp_all [Nat.mul_eq_zero]\n  all_goals aesop\n  <;>\n  aesop\n  <;>\n  aesop\n  <;>\n  aesop\n  <;>\n  aesop"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^2 * b / (a + 2 * b)^2 + b^2 * c / (b + 2 * c)^2 + c^2 * a / (c + 2 * a)^2) \u2264 (a + b + c) / 9 := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2192 b \u2265 0 \u2192 c \u2265 0 \u2192 a * b * c \u2265 0 \u2192 a * b * c * (a + b + c) \u2264 (a^2 + b^2 + c^2) * (a * b + b * c + c * a):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2192 b \u2265 0 \u2192 c \u2265 0 \u2192 a * b * c \u2265 0 \u2192 a * b * c * (a + b + c) \u2264 (a^2 + b^2 + c^2) * (a * b + b * c + c * a):= by\n  rintro a b c h\u2080 h\u2081 h\u2082 h\u2083\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_nonneg h\u2080 h\u2081, mul_nonneg h\u2081 h\u2082, mul_nonneg h\u2082 h\u2080,\n    mul_nonneg (sq_nonneg (a - b)) (mul_nonneg h\u2080 h\u2081),\n    mul_nonneg (sq_nonneg (b - c)) (mul_nonneg h\u2081 h\u2082),\n    mul_nonneg (sq_nonneg (c - a)) (mul_nonneg h\u2082 h\u2080)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2192 b \u2265 0 \u2192 c \u2265 0 \u2192 a * b * c \u2265 0 \u2192 a * b * c * (a + b + c) \u2264 (a^2 + b^2 + c^2) * (a * b + b * c + c * a):= by\n  rintro a b c (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : 0 \u2264 a * b * c)\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_nonneg ha hb, mul_nonneg hb hc, mul_nonneg hc ha,\n    mul_nonneg (sq_nonneg (a - b)) ha, mul_nonneg (sq_nonneg (b - c)) hb, mul_nonneg (sq_nonneg (c - a)) hc,\n    mul_nonneg (sq_nonneg (a - b)) hb, mul_nonneg (sq_nonneg (b - c)) hc, mul_nonneg (sq_nonneg (c - a)) ha,\n    mul_nonneg (sq_nonneg (a - b)) hc, mul_nonneg (sq_nonneg (b - c)) ha, mul_nonneg (sq_nonneg (c - a)) hb]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2192 b \u2265 0 \u2192 c \u2265 0 \u2192 a * b * c \u2265 0 \u2192 a * b * c * (a + b + c) \u2264 (a^2 + b^2 + c^2) * (a * b + b * c + c * a):= by\n  rintro a b c ha hb hc habc\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), sq_nonneg (a - b - c),\n    sq_nonneg (b - c - a), sq_nonneg (c - a - b), mul_nonneg ha hb, mul_nonneg hb hc,\n    mul_nonneg ha hc, mul_nonneg (sq_nonneg a) (sq_nonneg b), mul_nonneg (sq_nonneg b) (sq_nonneg c),\n    mul_nonneg (sq_nonneg a) (sq_nonneg c)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2192 b \u2265 0 \u2192 c \u2265 0 \u2192 a * b * c \u2265 0 \u2192 a * b * c * (a + b + c) \u2264 (a^2 + b^2 + c^2) * (a * b + b * c + c * a):= by\n  rintro a b c (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : 0 \u2264 a * b * c)\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c), mul_nonneg ha hb, mul_nonneg hb hc, mul_nonneg hc ha, mul_nonneg (sq_nonneg a) hb, mul_nonneg (sq_nonneg b) hc, mul_nonneg (sq_nonneg c) ha, mul_nonneg (sq_nonneg a) (sq_nonneg b), mul_nonneg (sq_nonneg b) (sq_nonneg c), mul_nonneg (sq_nonneg c) (sq_nonneg a)]\n  <;> simp [*]\n  <;> nlinarith"
  ]
 },
 {
  "old": "(a m x y : \u2115) (h : x \u2261 y [ZMOD (Nat.totient m)]) (hab : Nat.Coprime a m) : a ^ x \u2261 a ^ y [ZMOD m] := by",
  "new": "(p m : \u2115) (h : Nat.Prime p) : Nat.Coprime p m \u2228 p \u2223 m := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p m : \u2115) (h : Nat.Prime p) : Nat.Coprime p m \u2228 p \u2223 m := by\n  refine' or_iff_not_imp_right.mpr fun h' => _\n  exact h.coprime_iff_not_dvd.mpr h'",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p m : \u2115) (h : Nat.Prime p) : Nat.Coprime p m \u2228 p \u2223 m := by\n  apply or_iff_not_imp_right.2\n  intro h1\n  exact h.coprime_iff_not_dvd.2 h1",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p m : \u2115) (h : Nat.Prime p) : Nat.Coprime p m \u2228 p \u2223 m := by\n  exact or_iff_not_imp_right.mpr (fun h1 => h.coprime_iff_not_dvd.mpr h1)"
  ]
 },
 {
  "old": "(a b n : \u2124) (hn : n \u2260 0) : a % n = b % n \u2194 n \u2223 a - b := by",
  "new": "(hmn : m \u2260 0) : IsCoprime (m ^ 2) n \u2227 a * m = b * m \u2194 IsCoprime m n \u2227 a = b:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_cancel_left_iff (hmn : m \u2260 0) :\n      IsCoprime (m ^ 2) n \u2227 a * m = b * m \u2194 IsCoprime m n \u2227 a = b:= by\n  have hmn' : m \u2260 0 := by\n    rintro rfl\n    simp at hmn\n  simp [hmn', IsCoprime.pow_left_iff, mul_right_inj' hmn, IsCoprime.of_mul_left_left]\n  <;> aesop\n  <;> aesop\n  <;> aesop"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (1 / (x ^ 2 + y ^ 2) + 1 / (y ^ 2 + z ^ 2) + 1 / (z ^ 2 + x ^ 2) : \u211d) \u2265 5 / (2 * (x * y + y * z + z * x)) := by",
  "new": ": \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192 1 / (x ^ 2 + y ^ 2) + 1 / (y ^ 2 + z ^ 2) + 1 / (z ^ 2 + x ^ 2) \u2265 5 / (2 * (x * y + y * z + z * x)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192\n   1 / (x ^ 2 + y ^ 2) + 1 / (y ^ 2 + z ^ 2) + 1 / (z ^ 2 + x ^ 2) \u2265 5 / (2 * (x * y + y * z + z * x)) := by\n  rintro x y z \u27e8hx, hy, hz\u27e9\n  have hxy : 0 < x * y := by positivity\n  have hyz : 0 < y * z := by positivity\n  have hxz : 0 < z * x := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x^2 - y^2), sq_nonneg (y^2 - z^2), sq_nonneg (z^2 - x^2),\n    mul_nonneg hxy.le hyz.le, mul_nonneg hyz.le hxz.le, mul_nonneg hxz.le hxy.le,\n    mul_nonneg (sq_nonneg (x - y)) (sq_nonneg (y - z)),\n    mul_nonneg (sq_nonneg (y - z)) (sq_nonneg (z - x)),\n    mul_nonneg (sq_nonneg (z - x)) (sq_nonneg (x - y))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192\n   1 / (x ^ 2 + y ^ 2) + 1 / (y ^ 2 + z ^ 2) + 1 / (z ^ 2 + x ^ 2) \u2265 5 / (2 * (x * y + y * z + z * x)) := by\n  rintro x y z \u27e8hx, hy, hz\u27e9\n  have hxy : 0 < x * y := mul_pos hx hy\n  have hyz : 0 < y * z := mul_pos hy hz\n  have hxz : 0 < x * z := mul_pos hx hz\n  field_simp [add_comm]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (y ^ 2 - z ^ 2), sq_nonneg (x ^ 2 - z ^ 2),\n    mul_nonneg hxy.le hyz.le, mul_nonneg hyz.le hxz.le, mul_nonneg hxz.le hxy.le,\n    mul_nonneg (sq_nonneg (x - y)) (sq_nonneg (y - z)),\n    mul_nonneg (sq_nonneg (y - z)) (sq_nonneg (z - x)),\n    mul_nonneg (sq_nonneg (z - x)) (sq_nonneg (x - y))]"
  ]
 },
 {
  "old": "{a b c : \u211d} (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : (b + c) ^ 2 * (c + a) ^ 2 * (a + b) ^ 2 \u2264 (8 / 125) * (7 * b * c + 3 * a ^ 2) * (7 * a * c + 3 * b ^ 2) * (7 * a * b + 3 * c ^ 2) := by",
  "new": "(x y z : \u211d) (hx: 0 < x \u2227 0 < y \u2227 0 < z) (h : 0 < x + y + z) (h1 : x ^ 2 + y ^ 2 + z ^ 2 = 1) : x ^ 3 * y ^ 3 + x ^ 3 * z ^ 3 + y ^ 3 * z ^ 3 \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx: 0 < x \u2227 0 < y \u2227 0 < z) (h : 0 < x + y + z) (h1 : x ^ 2 + y ^ 2 + z ^ 2 = 1) :\n  x ^ 3 * y ^ 3 + x ^ 3 * z ^ 3 + y ^ 3 * z ^ 3 \u2264 1:= by\n  have h2 : x ^ 2 + y ^ 2 + z ^ 2 = 1 := h1\n  have h3 : x ^ 3 * y ^ 3 + x ^ 3 * z ^ 3 + y ^ 3 * z ^ 3 \u2264 1 := by\n    nlinarith [sq_nonneg (x * y), sq_nonneg (x * z), sq_nonneg (y * z),\n      mul_self_nonneg (x - y), mul_self_nonneg (x - z), mul_self_nonneg (y - z),\n      mul_self_nonneg (x - 1), mul_self_nonneg (y - 1), mul_self_nonneg (z - 1)]\n  linarith\n  <;> simp [h, hx, h2, h3]\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx: 0 < x \u2227 0 < y \u2227 0 < z) (h : 0 < x + y + z) (h1 : x ^ 2 + y ^ 2 + z ^ 2 = 1) :\n  x ^ 3 * y ^ 3 + x ^ 3 * z ^ 3 + y ^ 3 * z ^ 3 \u2264 1:= by\n  have h3 : x ^ 2 + y ^ 2 + z ^ 2 = 1 := h1\n  have h4 : 0 < x + y + z := h\n  have h5 : x * y > 0 := mul_pos (hx.1) (hx.2.1)\n  have h6 : x * z > 0 := mul_pos (hx.1) (hx.2.2)\n  have h7 : y * z > 0 := mul_pos (hx.2.1) (hx.2.2)\n  nlinarith [mul_self_nonneg (x * y), mul_self_nonneg (x * z), mul_self_nonneg (y * z),\n    mul_self_nonneg (x - y), mul_self_nonneg (x - z), mul_self_nonneg (y - z)]\n  <;> linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx: 0 < x \u2227 0 < y \u2227 0 < z) (h : 0 < x + y + z) (h1 : x ^ 2 + y ^ 2 + z ^ 2 = 1) :\n  x ^ 3 * y ^ 3 + x ^ 3 * z ^ 3 + y ^ 3 * z ^ 3 \u2264 1:= by\n  have hx' : 0 < x := hx.1\n  have hy' : 0 < y := hx.2.1\n  have hz' : 0 < z := hx.2.2\n  have h1' : x ^ 2 + y ^ 2 + z ^ 2 = 1 := h1\n  have h2 : x ^ 3 * y ^ 3 + x ^ 3 * z ^ 3 + y ^ 3 * z ^ 3 \u2264 1 := by\n    nlinarith [sq_nonneg (x * y), sq_nonneg (x * z), sq_nonneg (y * z),\n      mul_self_nonneg (x - y), mul_self_nonneg (x - z), mul_self_nonneg (y - z)]\n  exact h2\n  <;> simp [h1]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx: 0 < x \u2227 0 < y \u2227 0 < z) (h : 0 < x + y + z) (h1 : x ^ 2 + y ^ 2 + z ^ 2 = 1) :\n  x ^ 3 * y ^ 3 + x ^ 3 * z ^ 3 + y ^ 3 * z ^ 3 \u2264 1:= by\n  have h2 : 0 < x * y := by nlinarith\n  have h3 : 0 < x * z := by nlinarith\n  have h4 : 0 < y * z := by nlinarith\n  have h5 : (x + y + z) ^ 2 \u2264 3 := by nlinarith [sq_nonneg (x + y + z), sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  nlinarith [mul_self_nonneg (x - y), mul_self_nonneg (x - z), mul_self_nonneg (y - z),\n    mul_self_nonneg (x * y - 1 / 3), mul_self_nonneg (x * z - 1 / 3),\n    mul_self_nonneg (y * z - 1 / 3)]\n  <;> linarith\n  <;> norm_num"
  ]
 },
 {
  "old": ": (-1:\u2102) ^ (2 / 2) = 1 := by",
  "new": "(x : \u2124) : x ^ 2 % 2 = 1 \u2192 x ^ 2 % 4 = 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem invalid_test_case (x : \u2124) :  x ^ 2 % 2 = 1 \u2192 x ^ 2 % 4 = 1:= by\n  intro h\u2081\n  have h\u2082 : x % 2 = 0 \u2228 x % 2 = 1 := by omega\n  have h\u2083 : x % 4 = 0 \u2228 x % 4 = 1 \u2228 x % 4 = 2 \u2228 x % 4 = 3 := by omega\n  rcases h\u2082 with (h\u2082 | h\u2082) <;> rcases h\u2083 with (h\u2083 | h\u2083 | h\u2083 | h\u2083) <;> simp [h\u2082, h\u2083, pow_two, Int.mul_emod, Int.add_emod] at h\u2081 \u22a2\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem invalid_test_case (x : \u2124) :  x ^ 2 % 2 = 1 \u2192 x ^ 2 % 4 = 1:= by\n  intro hx\n  have h\u2081 : x % 2 = 1 := by\n    have h\u2082 : x % 2 = 0 \u2228 x % 2 = 1 := by omega\n    rcases h\u2082 with (h\u2082 | h\u2082) <;> simp [h\u2082, pow_two, Int.mul_emod] at hx \u22a2\n  have h\u2082 : x % 4 = 1 \u2228 x % 4 = 3 := by omega\n  rcases h\u2082 with (h\u2082 | h\u2082) <;> simp [h\u2082, pow_two, Int.mul_emod]\n  <;> omega"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c \u2265 1) : 1 / (a + b ^ 4 + c ^ 4) + 1 / (b + a ^ 4 + c ^ 4) + 1 / (c + a ^ 4 + b ^ 4) \u2264 1 := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 1 \u2227 b \u2265 1 \u2227 c \u2265 1 \u2192 (a ^ 2 + 1) * (b ^ 2 + 1) * (c ^ 2 + 1) \u2265 a * b + b * c + c * a := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 1 \u2227 b \u2265 1 \u2227 c \u2265 1 \u2192 (a ^ 2 + 1) * (b ^ 2 + 1) * (c ^ 2 + 1) \u2265 a * b + b * c + c * a := by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  nlinarith [mul_nonneg (sub_nonneg.mpr ha) (sub_nonneg.mpr hb), mul_nonneg (sub_nonneg.mpr hb) (sub_nonneg.mpr hc),\n    mul_nonneg (sub_nonneg.mpr hc) (sub_nonneg.mpr ha),\n    pow_two_nonneg (a * b), pow_two_nonneg (b * c), pow_two_nonneg (c * a)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 1 \u2227 b \u2265 1 \u2227 c \u2265 1 \u2192 (a ^ 2 + 1) * (b ^ 2 + 1) * (c ^ 2 + 1) \u2265 a * b + b * c + c * a := by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  have h\u2080 : 0 \u2264 (a - 1) * (b - 1) * (c - 1) := by\n    apply mul_nonneg\n    all_goals nlinarith\n  nlinarith [mul_self_nonneg (a * b - 1), mul_self_nonneg (b * c - 1), mul_self_nonneg (a * c - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 1 \u2227 b \u2265 1 \u2227 c \u2265 1 \u2192 (a ^ 2 + 1) * (b ^ 2 + 1) * (c ^ 2 + 1) \u2265 a * b + b * c + c * a := by\n  rintro a b c \u27e8a1, b1, c1\u27e9\n  nlinarith [mul_nonneg (sub_nonneg.mpr a1) (sub_nonneg.mpr b1), mul_nonneg (sub_nonneg.mpr b1) (sub_nonneg.mpr c1), mul_nonneg (sub_nonneg.mpr c1) (sub_nonneg.mpr a1), mul_nonneg (sq_nonneg (a - 1)) (sq_nonneg (b - 1)), mul_nonneg (sq_nonneg (b - 1)) (sq_nonneg (c - 1)), mul_nonneg (sq_nonneg (c - 1)) (sq_nonneg (a - 1))]\n  <;> nlinarith"
  ]
 },
 {
  "old": "(n : \u2115) : (1 / ((n:\u211d) + 1)) \u2264 Real.log (1 + 1 / n) \u2227 Real.log (1 + 1 / n) \u2264 1 / n := by",
  "new": "(n : \u2115) (hn : n \u2260 0) : Real.log (1 + 1 / n) \u2264 1 / n := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_one_add_inv_le (n : \u2115) (hn : n \u2260 0) : Real.log (1 + 1 / n) \u2264 1 / n  := by\n  cases n with\n  | zero => contradiction\n  | succ n =>\n    refine' (log_le_sub_one_of_pos _).trans _\n    \u00b7 positivity\n    simp\n  <;> field_simp [n.cast_add_one_ne_zero]\n  <;> norm_cast\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_one_add_inv_le (n : \u2115) (hn : n \u2260 0) : Real.log (1 + 1 / n) \u2264 1 / n  := by\n  have h\u2082 : 0 < n := by positivity\n  have h\u2083 : 0 \u2264 1 / (n : \u211d) := by positivity\n  have h\u2084 : (1 + 1 / (n : \u211d)) \u2264 1 + 1 / (n : \u211d) := le_refl _\n  have h\u2085 : Real.log (1 + 1 / (n : \u211d)) \u2264 1 / (n : \u211d) := Real.log_le_sub_one_of_pos (by positivity) |>.trans (by linarith)\n  linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_one_add_inv_le (n : \u2115) (hn : n \u2260 0) : Real.log (1 + 1 / n) \u2264 1 / n  := by\n  have hn' : 0 < n := Nat.pos_of_ne_zero hn\n  refine' (log_le_sub_one_of_pos _).trans _\n  \u00b7 positivity\n  simp [Nat.cast_one, hn']",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_one_add_inv_le (n : \u2115) (hn : n \u2260 0) : Real.log (1 + 1 / n) \u2264 1 / n  := by\n  refine' (log_le_sub_one_of_pos _).trans _\n  \u00b7 positivity\n  simp [Nat.cast_pos, hn]"
  ]
 },
 {
  "old": "(x y z : \u211d) : 2 * (x ^ 4 + y ^ 4 + z ^ 4) + 2 * x * y * z * (x + y + z) \u2265 x * y * (x + y) ^ 2 + y * z * (y + z) ^ 2 + z * x * (z + x) ^ 2 := by",
  "new": ": \u2200 x y z : \u211d, (x^2 + y^2 + z^2) ^ 2 \u2265 3 * (x^2 * y^2 + y^2 * z^2 + z^2 * x^2) \u2194 (x - y) ^ 2 + (y - z) ^ 2 + (z - x) ^ 2 \u2265 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x y z : \u211d,\n    (x^2 + y^2 + z^2) ^ 2 \u2265 3 * (x^2 * y^2 + y^2 * z^2 + z^2 * x^2) \u2194\n     (x - y) ^ 2 + (y - z) ^ 2 + (z - x) ^ 2 \u2265 0:= by\n  intro x y z\n  constructor <;> intro h <;>\n    simp only [sq, sub_eq_add_neg, neg_sq, mul_comm] at h \u22a2\n  all_goals nlinarith [sq_nonneg (x + y), sq_nonneg (y + z), sq_nonneg (z + x)]\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x y z : \u211d,\n    (x^2 + y^2 + z^2) ^ 2 \u2265 3 * (x^2 * y^2 + y^2 * z^2 + z^2 * x^2) \u2194\n     (x - y) ^ 2 + (y - z) ^ 2 + (z - x) ^ 2 \u2265 0:= by\n  intro x y z\n  constructor <;> intro h <;>\n  nlinarith [sq_nonneg (x^2 - y^2), sq_nonneg (y^2 - z^2), sq_nonneg (z^2 - x^2)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2081 : a * b * c = 1) : a / Real.sqrt b + b / Real.sqrt c + c / Real.sqrt a \u2265 Real.sqrt a + Real.sqrt b + Real.sqrt c := by",
  "new": ": Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) + 1 \u2264 4 * Real.sqrt (Real.sqrt 2 + 1):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) + 1 \u2264 4 * Real.sqrt (Real.sqrt 2 + 1):= by\n  have h : 0 \u2264 Real.sqrt 2 := Real.sqrt_nonneg 2\n  have h\u2081 : 0 \u2264 Real.sqrt (Real.sqrt 2 + 1) := Real.sqrt_nonneg (Real.sqrt 2 + 1)\n  have h\u2082 : 0 \u2264 Real.sqrt 2 + 1 := by linarith\n  have h\u2083 : 0 \u2264 Real.sqrt (Real.sqrt 2 + 1) := Real.sqrt_nonneg (Real.sqrt 2 + 1)\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 Real.sqrt 2 + 1 by linarith),\n    sq_sqrt (show (0 : \u211d) \u2264 2 by linarith),\n    sq_sqrt (show (0 : \u211d) \u2264 Real.sqrt 2 by linarith)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) + 1 \u2264 4 * Real.sqrt (Real.sqrt 2 + 1):= by\n  have H\u2080 : Real.sqrt 2 \u2265 0 := Real.sqrt_nonneg 2\n  have H\u2081 : Real.sqrt (Real.sqrt 2 + 1) \u2265 0 := Real.sqrt_nonneg (Real.sqrt 2 + 1)\n  nlinarith [sq_sqrt (show Real.sqrt 2 + 1 \u2265 0 by linarith), sq_sqrt (show 2 \u2265 0 by linarith)]\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) + 1 \u2264 4 * Real.sqrt (Real.sqrt 2 + 1):= by\n  have h\u2080 : 0 \u2264 Real.sqrt 2 := Real.sqrt_nonneg 2\n  have h\u2081 : 0 \u2264 Real.sqrt (Real.sqrt 2 + 1) := Real.sqrt_nonneg (Real.sqrt 2 + 1)\n  have h\u2082 : 0 \u2264 Real.sqrt 2 + 1 := by linarith\n  have h\u2083 : 0 \u2264 Real.sqrt (Real.sqrt 2 + 1) + 1 := by linarith\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 Real.sqrt 2 + 1 from by linarith),\n    sq_sqrt (show (0 : \u211d) \u2264 Real.sqrt 2 from by linarith),\n    sq_sqrt (show (0 : \u211d) \u2264 4 from by linarith)]"
  ]
 },
 {
  "old": "(\u03b8 : \u211d) : Real.sin (45 + 3 * \u03b8) * Real.sin \u03b8 = Real.sin (45 - \u03b8) * Real.sin 3 * \u03b8 := by",
  "new": "(\u03b8 : \u211d) : Real.sin \u03b8 ^ 2 * Real.sin (3 * \u03b8) ^ 2 + Real.cos \u03b8 ^ 2 * Real.cos (3 * \u03b8) ^ 2 \u2265 Real.sin \u03b8 * Real.sin (3 * \u03b8) * Real.cos \u03b8 * Real.cos (3 * \u03b8) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (\u03b8 : \u211d) : \n    Real.sin \u03b8 ^ 2 * Real.sin (3 * \u03b8) ^ 2 + Real.cos \u03b8 ^ 2 * Real.cos (3 * \u03b8) ^ 2 \u2265 \n    Real.sin \u03b8 * Real.sin (3 * \u03b8) * Real.cos \u03b8 * Real.cos (3 * \u03b8)  := by\n  have h\u2081 : Real.sin \u03b8 ^ 2 * Real.sin (3 * \u03b8) ^ 2 + Real.cos \u03b8 ^ 2 * Real.cos (3 * \u03b8) ^ 2 \u2265 \n    Real.sin \u03b8 * Real.sin (3 * \u03b8) * Real.cos \u03b8 * Real.cos (3 * \u03b8) := by\n    nlinarith [sq_nonneg (Real.sin \u03b8 * Real.sin (3 * \u03b8) - Real.cos \u03b8 * Real.cos (3 * \u03b8)),\n      Real.sin_sq_add_cos_sq \u03b8, Real.sin_sq_add_cos_sq (3 * \u03b8)]\n  exact h\u2081",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (\u03b8 : \u211d) : \n    Real.sin \u03b8 ^ 2 * Real.sin (3 * \u03b8) ^ 2 + Real.cos \u03b8 ^ 2 * Real.cos (3 * \u03b8) ^ 2 \u2265 \n    Real.sin \u03b8 * Real.sin (3 * \u03b8) * Real.cos \u03b8 * Real.cos (3 * \u03b8)  := by\n  have h\u2081 : Real.sin \u03b8 ^ 2 + Real.cos \u03b8 ^ 2 = 1 := Real.sin_sq_add_cos_sq \u03b8\n  have h\u2082 : Real.sin (3 * \u03b8) ^ 2 + Real.cos (3 * \u03b8) ^ 2 = 1 := Real.sin_sq_add_cos_sq (3 * \u03b8)\n  nlinarith [sq_nonneg (Real.sin \u03b8 ^ 2 - Real.sin (3 * \u03b8) ^ 2),\n    sq_nonneg (Real.cos \u03b8 ^ 2 - Real.cos (3 * \u03b8) ^ 2),\n    sq_nonneg (Real.sin \u03b8 * Real.sin (3 * \u03b8) - Real.cos \u03b8 * Real.cos (3 * \u03b8)),\n    sq_nonneg (Real.sin \u03b8 * Real.cos (3 * \u03b8) + Real.cos \u03b8 * Real.sin (3 * \u03b8))]\n  <;> linarith\n  <;> linarith"
  ]
 },
 {
  "old": "(a : \u2115 \u2192 NNReal) (n : \u2115) (h\u2080 : 0 < n) (h\u2081 : \u2200 i, 0 \u2264 a i) (h\u2082 : \u2200 i, a (i + 1) \u2264 a i) : (\u2211 i in Finset.range n, a i) - n * (\u220f i in Finset.range n, a i)^(1 / n) \u2265 2 * (1 - 1 / n) * (Real.sqrt (a (n - 2)) - 2 * Real.sqrt (a (n - 1)) + Real.sqrt (a n))^2 := by",
  "new": "(a : \u2115 \u2192 NNReal) (n : \u2115) (h\u2080 : 0 < n) (h\u2081 : \u2200 i, 0 \u2264 a i) (h\u2082 : \u2200 i, a (i + 1) \u2264 a i) : (\u2211 i in Finset.range n, a i) - n * (\u220f i in Finset.range n, a i)^(1 / n) \u2265 0 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (a : \u2115 \u2192 NNReal)\n    (n : \u2115)\n    (h\u2080 : 0 < n)\n    (h\u2081 : \u2200 i, 0 \u2264 a i)\n    (h\u2082 : \u2200 i, a (i + 1) \u2264 a i) :\n      (\u2211 i in Finset.range n, a i) - n * (\u220f i in Finset.range n, a i)^(1 / n) \u2265 0 := by\n  eta_reduce at *\n  clear! n\n  induction' n with n ih\n  all_goals simp_all [Finset.sum_range_succ, Finset.prod_range_succ, Nat.div_eq_of_lt, Nat.succ_le_iff]\n  all_goals\n    linarith [h\u2082 0]"
  ]
 },
 {
  "old": "(k : \u2124) (hk : 3 < k) : \u00ac\u2203 x y z : \u2124, x^2 + y^2 + z^2 = k * x * y * z := by",
  "new": "(x y : \u2115) (h : x ^ 2 + y ^ 2 + z ^ 2 = k * x * y * z) : Nat.Coprime x y \u2228 \u00ac Nat.Coprime x y:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 + z ^ 2 = k * x * y * z) :\n    Nat.Coprime x y \u2228 \u00ac Nat.Coprime x y:= by\n  by_cases hx : x = 0 <;> by_cases hy : y = 0 <;> simp [hx, hy, Nat.coprime_zero_left, Nat.coprime_zero_right]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 + z ^ 2 = k * x * y * z) :\n    Nat.Coprime x y \u2228 \u00ac Nat.Coprime x y:= by\n  by_cases h : Nat.Coprime x y <;> simp_all\n  <;> omega\n  <;> omega\n  <;> omega"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : (a^2 + b^2) / (a + b) + (b^2 + c^2) / (b + c) + (a^2 + c^2) / (a + c) \u2265 3 / 2 * (a + b + c - 1) := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a * b * c \u2265 1 \u2192 a^2 / (a + b) + b^2 / (b + c) + c^2 / (c + a) \u2265 (a + b + c) / 2 - 1 / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a * b * c \u2265 1 \u2192 a^2 / (a + b) + b^2 / (b + c) + c^2 / (c + a) \u2265 (a + b + c) / 2 - 1 / 2:= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have : a * b \u2265 0 := by positivity\n  have : b * c \u2265 0 := by positivity\n  have : c * a \u2265 0 := by positivity\n  have h\u2080 : 0 < a + b := by\n    nlinarith\n  have h\u2081 : 0 < b + c := by\n    nlinarith\n  have h\u2082 : 0 < c + a := by\n    nlinarith\n  have h\u2083 : 0 < a + b + c := by\n    nlinarith\n  have h\u2084 : 0 < (a + b) * (b + c) * (c + a) := by\n    positivity\n  field_simp [h\u2083.ne', h\u2084.ne', h\u2080.ne', h\u2081.ne', h\u2082.ne']\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  positivity\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a * b * c \u2265 1 \u2192 a^2 / (a + b) + b^2 / (b + c) + c^2 / (c + a) \u2265 (a + b + c) / 2 - 1 / 2:= by\n  rintro a b c \u27e8a_nonneg, b_nonneg, c_nonneg, habc\u27e9\n  have h\u2080 : 0 \u2264 a * b := by positivity\n  have h\u2081 : 0 \u2264 b * c := by positivity\n  have h\u2082 : 0 \u2264 c * a := by positivity\n  have h\u2083 : 0 < a + b := by\n    nlinarith\n  have h\u2084 : 0 < b + c := by\n    nlinarith\n  have h\u2085 : 0 < c + a := by\n    nlinarith\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1)]"
  ]
 },
 {
  "old": "(a b : \u2115) (ha : a \u2260 0) (hb : b \u2260 0) : \u2200 x : \u2115, x \u2208 Set.Icc 0 (b-1) \u2192 \u2203! k : \u2115, (k * a \u2261 x [ZMOD b]) \u2227 k \u2208 Set.Icc 0 (b-1) := by",
  "new": "(h\u2081 : b \u2260 0) (h\u2082 : Nat.Coprime a b) : a \u2223 c * b \u2192 a \u2223 c:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_cancel_left_dvd_mul (h\u2081 : b \u2260 0) (h\u2082 : Nat.Coprime a b) :\n  a \u2223 c * b \u2192 a \u2223 c:= by\n  intro h\n  have h\u2083 : a \u2223 c * b := h\n  have h\u2084 : a \u2223 c := by\n    have h\u2085 : a \u2223 c * b := h\u2083\n    have h\u2086 : a \u2223 c := by\n      apply h\u2082.dvd_of_dvd_mul_right\n      assumption\n    exact h\u2086\n  exact h\u2084"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (3 / Real.sqrt 5) \u2265 a / Real.sqrt (b * b + (c + a) * (c + a)) + b / Real.sqrt (c * c + (b + a) * (b + a)) + c / Real.sqrt (a * a + (c + b) * (c + b)) := by",
  "new": ": Real.sqrt (1 + 3 * Real.sqrt (3^2 + 4^2)) \u2265 Real.sqrt (3^2 + 4^2) - 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (1 + 3 * Real.sqrt (3^2 + 4^2)) \u2265 Real.sqrt (3^2 + 4^2) - 3:= by\n  have h : Real.sqrt (3^2 + 4^2) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2081 : Real.sqrt (1 + 3 * Real.sqrt (3^2 + 4^2)) \u2265 0 := Real.sqrt_nonneg _\n  nlinarith [sq_sqrt (show 0 \u2264 1 + 3 * Real.sqrt (3^2 + 4^2) by positivity),\n    sq_sqrt (show 0 \u2264 3^2 + 4^2 by positivity),\n    sq_nonneg (Real.sqrt (3^2 + 4^2) - 3)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (1 + 3 * Real.sqrt (3^2 + 4^2)) \u2265 Real.sqrt (3^2 + 4^2) - 3:= by\n  have h : Real.sqrt (3^2 + 4^2) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2082 : Real.sqrt (1 + 3 * Real.sqrt (3^2 + 4^2)) \u2265 0 := Real.sqrt_nonneg _\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3^2 + 4^2 by positivity),\n    sq_sqrt (show (0 : \u211d) \u2264 1 + 3 * Real.sqrt (3^2 + 4^2) by positivity),\n    sq_nonneg (Real.sqrt (3^2 + 4^2) - 3)]\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (1 + 3 * Real.sqrt (3^2 + 4^2)) \u2265 Real.sqrt (3^2 + 4^2) - 3:= by\n  have h\u2081 : Real.sqrt (3^2 + 4^2) \u2265 0 := Real.sqrt_nonneg (3^2 + 4^2)\n  have h\u2082 : Real.sqrt (1 + 3 * Real.sqrt (3^2 + 4^2)) \u2265 Real.sqrt (3^2 + 4^2) - 3 := by\n    have h\u2083 : Real.sqrt (1 + 3 * Real.sqrt (3^2 + 4^2)) \u2265 Real.sqrt (3^2 + 4^2) - 3 := by\n      apply Real.le_sqrt_of_sq_le\n      nlinarith [Real.mul_self_sqrt (show 0 \u2264 3^2 + 4^2 from by nlinarith)]\n    nlinarith\n  nlinarith\n  <;> norm_num"
  ]
 },
 {
  "old": "(p : \u211d) (hp : 0 < p \u2227 p < 1) : (p + 1) * (16 * p ^ 9 - 48 * p ^ 8 + 32 * p ^ 7 + 32 * p ^ 6 - 40 * p ^ 5 - 24 * p ^ 4 + 56 * p ^ 3 - 24 * p ^ 2 + p + 1) \u2265 0 := by",
  "new": "(p_val : \u211d) (h\u2080 : 0 < p_val) (h\u2081 : p_val < 1) : (p_val + 1) * (16 * p_val ^ 9 - 48 * p_val ^ 8 + 32 * p_val ^ 7 + 32 * p_val ^ 6 - 40 * p_val ^ 5 - 24 * p_val ^ 4 + 56 * p_val ^ 3 - 24 * p_val ^ 2 + p_val + 1) \u2265 0 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (p_val : \u211d) (h\u2080 : 0 < p_val) (h\u2081 : p_val < 1) :\n  (p_val + 1) * (16 * p_val ^ 9 - 48 * p_val ^ 8 + 32 * p_val ^ 7 + 32 * p_val ^ 6 - 40 * p_val ^ 5 - 24 * p_val ^ 4 + 56 * p_val ^ 3 - 24 * p_val ^ 2 + p_val + 1) \u2265 0 := by\n  nlinarith [sq_nonneg (4 * p_val ^ 5 - 4 * p_val ^ 4 - 4 * p_val ^ 3 + 4 * p_val ^ 2 + p_val - 1), mul_nonneg h\u2080.le (sq_nonneg (2 * p_val ^ 4 - 2 * p_val ^ 3 - 2 * p_val ^ 2 + 2 * p_val + 1)), mul_nonneg h\u2080.le (sq_nonneg (2 * p_val ^ 4 + 2 * p_val ^ 3 - 2 * p_val ^ 2 - 2 * p_val - 1)), mul_nonneg h\u2080.le (sq_nonneg (2 * p_val ^ 4 - 2 * p_val ^ 3 + 2 * p_val ^ 2 - 2 * p_val - 1)),\n    mul_nonneg h\u2080.le (sq_nonneg (2 * p_val ^ 4 + 2 * p_val ^ 3 + 2 * p_val ^ 2 + 2 * p_val - 1))]"
  ]
 },
 {
  "old": ": \u2200 x : \u211d, 0 < x \u2227 x \u2264 \u03c0 / 2 \u2192 0 < sin x \u2227 sin x \u2264 1 := by",
  "new": "(x : \u211d) : sin x \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_le_one (x : \u211d) : sin x \u2264 1:= by\n  have h := sin_sq_add_cos_sq x\n  have h\u2082 : 0 \u2264 sin x ^ 2 := sq_nonneg (sin x)\n  have h\u2083 : 0 \u2264 cos x ^ 2 := sq_nonneg (cos x)\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_le_one (x : \u211d) : sin x \u2264 1:= by\n  have h\u2081 : 0 \u2264 (sin x) ^ 2 + (cos x) ^ 2 := by nlinarith\n  have h\u2082 : (sin x) ^ 2 + (cos x) ^ 2 = 1 := sin_sq_add_cos_sq x\n  nlinarith [h\u2082]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_le_one (x : \u211d) : sin x \u2264 1:= by\n  have h\u2081 := sin_sq_add_cos_sq x\n  have h\u2082 := sq_nonneg (cos x - 1)\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_le_one (x : \u211d) : sin x \u2264 1:= by\n  have : sin x \u2264 1 := by\n    have := sin_sq_add_cos_sq x\n    have := sq_nonneg (cos x - 1)\n    have := add_nonneg (sq_nonneg (sin x)) this\n    nlinarith\n  exact this"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 4) : Real.sqrt a + Real.sqrt b + Real.sqrt c > 4 := by",
  "new": "(a b : \u2115) (hab : a \u2260 0 \u2227 b \u2260 0) : Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (hab : a \u2260 0 \u2227 b \u2260 0) : Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b := by\n  cases' Classical.em (Nat.Coprime a b) with h\u2081 h\u2081 <;> simp_all [Nat.coprime_iff_gcd_eq_one]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (hab : a \u2260 0 \u2227 b \u2260 0) : Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b := by\n  cases' Nat.eq_zero_or_pos a with ha ha <;> cases' Nat.eq_zero_or_pos b with hb hb\n  all_goals simp_all [Nat.Coprime, Nat.gcd_eq_zero_iff]\n  all_goals omega\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (hab : a \u2260 0 \u2227 b \u2260 0) : Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b := by\n  by_cases h : Nat.Coprime a b <;> simp [h, hab]\n  <;> try { exact h }\n  <;> omega\n  <;> simp [h, hab]\n  <;> omega\n  <;> simp [h, hab]\n  <;> omega\n  <;> simp [h, hab]\n  <;> omega"
  ]
 },
 {
  "old": "(p n : \u2115) (hp : p.Prime) (hpn : p \u2223 (x^n - 1)) : p \u2223 n \u2228 n \u2223 (p-1) := by",
  "new": "(p : \u2115) {n : \u2115} (hn : n \u2260 0) (hp : p.Prime) : p.Coprime n \u2228 p \u2223 n := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {n : \u2115} (hn : n \u2260 0) (hp : p.Prime) :\n     p.Coprime n \u2228 p \u2223 n := by\n  apply or_iff_not_imp_right.mpr\n  intro h\n  simp only [Nat.Prime.coprime_iff_not_dvd hp, h, not_false_eq_true, true_and]\n  <;> simp_all"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : (a^2 / (a + b) + b^2 / (b + c) + c^2 / (c + a) + 6 * a * b * c / ((a + b) * (b + c) * (c + a)) - 9 / 4) \u2265 0 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (x ^ 2 / (x + y) + y ^ 2 / (y + z) + z ^ 2 / (z + x) + 3 * (x * y * z) / ((x + y) * (y + z) * (z + x)) - 3 / 4) \u2265 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p23 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (x ^ 2 / (x + y) + y ^ 2 / (y + z) + z ^ 2 / (z + x) + 3 * (x * y * z) / ((x + y) * (y + z) * (z + x)) - 3 / 4) \u2265 0:= by\n  have : 0 < x * y := mul_pos hx hy\n  have : 0 < y * z := mul_pos hy hz\n  have : 0 < z * x := mul_pos hz hx\n  have : 0 < (x + y) * (y + z) * (z + x) := by positivity\n  have : 0 < x * y * z := by positivity\n  field_simp [add_assoc]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x), mul_self_nonneg (x * z - y * z), mul_self_nonneg (x * y - z * y),\n    mul_self_nonneg (z * x - y * x)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p23 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (x ^ 2 / (x + y) + y ^ 2 / (y + z) + z ^ 2 / (z + x) + 3 * (x * y * z) / ((x + y) * (y + z) * (z + x)) - 3 / 4) \u2265 0:= by\n  have : 0 < x + y := by linarith\n  have : 0 < y + z := by linarith\n  have : 0 < z + x := by linarith\n  have : 0 < x * y := by positivity\n  have : 0 < y * z := by positivity\n  have : 0 < z * x := by positivity\n  have : 0 < (x + y) * (y + z) * (z + x) := by positivity\n  have : 0 < x * y * z := by positivity\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x), sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y)]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p23 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (x ^ 2 / (x + y) + y ^ 2 / (y + z) + z ^ 2 / (z + x) + 3 * (x * y * z) / ((x + y) * (y + z) * (z + x)) - 3 / 4) \u2265 0:= by\n  have h\u2082 : 0 < x * y := by positivity\n  have h\u2083 : 0 < y * z := by positivity\n  have h\u2084 : 0 < x * z := by positivity\n  have h\u2085 : 0 < x * y * z := by positivity\n  have h\u2086 : 0 < (x + y) * (y + z) * (z + x) := by positivity\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x * y - y * z), mul_self_nonneg (y * z - x * z), mul_self_nonneg (x * z - x * y)]"
  ]
 },
 {
  "old": "(x y : \u211d) : sin x ^ 2 - sin y ^ 2 = sin (x + y) * sin (x - y) := by",
  "new": "(x : \u211d) : sin x ^ 2 - cos x ^ 2 = - (cos x ^ 2 - sin x ^ 2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_sq_sub_cos_sq (x : \u211d) : sin x ^ 2 - cos x ^ 2 = - (cos x ^ 2 - sin x ^ 2):= by\n  rw [sub_eq_add_neg, sub_eq_add_neg]\n  ring",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_sq_sub_cos_sq (x : \u211d) : sin x ^ 2 - cos x ^ 2 = - (cos x ^ 2 - sin x ^ 2):= by\n  rw [sub_eq_add_neg, sub_eq_add_neg]\n  simp only [add_comm, add_left_comm, add_assoc, neg_mul_eq_mul_neg]\n  linarith [sin_sq_add_cos_sq x]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_sq_sub_cos_sq (x : \u211d) : sin x ^ 2 - cos x ^ 2 = - (cos x ^ 2 - sin x ^ 2):= by\n  rw [eq_neg_iff_add_eq_zero]\n  ring",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_sq_sub_cos_sq (x : \u211d) : sin x ^ 2 - cos x ^ 2 = - (cos x ^ 2 - sin x ^ 2):= by\n  simp [sub_eq_add_neg, neg_add, add_comm, add_left_comm, add_assoc]\n  <;> ring_nf\n  <;> simp [sin_sq, cos_sq]\n  <;> ring_nf"
  ]
 },
 {
  "old": "{a b : \u2124} (h : a \u2223 b) : a^2 \u2223 b^2 := by",
  "new": "(a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by\n  exact em _",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by\n  apply em\n  <;> simp [Nat.coprime_comm]\n  <;> simp [Nat.coprime_comm]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by\n  by_cases h : Nat.Coprime a b\n  case pos => exact Or.inl h\n  case neg => exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by\n  by_cases h : Nat.Coprime a b\n  exacts [Or.inl h, Or.inr (by simpa using h)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (1 / (a ^ 2 + a * b + b ^ 2) + 1 / (b ^ 2 + b * c + c ^ 2) + 1 / (c ^ 2 + c * a + a ^ 2) \u2265 1 / (a * b + b * c + a * c) + 2 / (a ^ 2 + b ^ 2 + c ^ 2)) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (1 / (x ^ 2 + x * y + y ^ 2) + 1 / (y ^ 2 + y * z + z ^ 2) + 1 / (z ^ 2 + z * x + x ^ 2) \u2265 1 / (x * y + y * z + x * z) + 2 / (x ^ 2 + y ^ 2 + z ^ 2)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) :\n   (1 / (x ^ 2 + x * y + y ^ 2) + 1 / (y ^ 2 + y * z + z ^ 2) + 1 / (z ^ 2 + z * x + x ^ 2) \u2265\n     1 / (x * y + y * z + x * z) + 2 / (x ^ 2 + y ^ 2 + z ^ 2))  := by\n  have h\u2081 : 0 < x * y := mul_pos hx hy\n  have h\u2082 : 0 < y * z := mul_pos hy hz\n  have h\u2083 : 0 < x * z := mul_pos hx hz\n  have h\u2084 : 0 < x ^ 2 + y ^ 2 + z ^ 2 := by positivity\n  have h\u2085 : 0 < x * y * (x ^ 2 + y ^ 2 + z ^ 2) := by positivity\n  have h\u2086 : 0 < y * z * (x ^ 2 + y ^ 2 + z ^ 2) := by positivity\n  have h\u2087 : 0 < x * z * (x ^ 2 + y ^ 2 + z ^ 2) := by positivity\n  have h\u2088 : 0 < x * y * (y * z + x * y + x * z) := by positivity\n  have h\u2089 : 0 < y * z * (y * z + x * y + x * z) := by positivity\n  have h\u2081\u2080 : 0 < x * z * (y * z + x * y + x * z) := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (y ^ 2 - z ^ 2), sq_nonneg (z ^ 2 - x ^ 2),\n    sq_nonneg (x ^ 2 + y ^ 2 - 2 * x * y), sq_nonneg (y ^ 2 + z ^ 2 - 2 * y * z),\n    sq_nonneg (z ^ 2 + x ^ 2 - 2 * z * x)]"
  ]
 },
 {
  "old": ": \u00ac\u2203 x y : \u211a, x + y + 1/(x*y) = 1 := by",
  "new": "(x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y) := by\n  by_cases h : Nat.Coprime x y\n  exact Or.inl h\n  exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y) := by\n  apply or_not"
  ]
 },
 {
  "old": "(a b c : \u211d) : (a^2 + b^2)/2 \u2265 a * b \u2227 (b^2 + c^2)/2 \u2265 b * c \u2227 (c^2 + a^2)/2 \u2265 c * a := by",
  "new": "(a b c : \u211d) (hab : a + b + c = 0) (h : a^2 + b^2 + c^2 = 1) : a * b * c * (a^2 + b^2 + c^2) \u2264 1/4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem stronger_than_mean_square_inequality (a b c : \u211d) (hab : a + b + c = 0) (h : a^2 + b^2 + c^2 = 1) :\n       a * b * c * (a^2 + b^2 + c^2) \u2264 1/4:= by\n  simp only [h, mul_one]\n  nlinarith [mul_self_nonneg (a - b * c), mul_self_nonneg (b - a * c), mul_self_nonneg (c - a * b),\n    mul_self_nonneg (a + b * c), mul_self_nonneg (b + a * c), mul_self_nonneg (c + a * b)]\n  <;> linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem stronger_than_mean_square_inequality (a b c : \u211d) (hab : a + b + c = 0) (h : a^2 + b^2 + c^2 = 1) :\n       a * b * c * (a^2 + b^2 + c^2) \u2264 1/4:= by\n  have : a^2 + b^2 + c^2 = 1 := h\n  have : a * b * c * (a^2 + b^2 + c^2) = a * b * c := by simp [this]\n  rw [this]\n  nlinarith [sq_nonneg (a - b * c), sq_nonneg (b - a * c), sq_nonneg (c - a * b)]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem stronger_than_mean_square_inequality (a b c : \u211d) (hab : a + b + c = 0) (h : a^2 + b^2 + c^2 = 1) :\n       a * b * c * (a^2 + b^2 + c^2) \u2264 1/4:= by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a + b), sq_nonneg (a - c), sq_nonneg (a + c),\n    sq_nonneg (b - c), sq_nonneg (b + c), sq_nonneg (a - 2 * b * c),\n    sq_nonneg (a + 2 * b * c)]\n  <;> simp [hab, h]\n  <;> linarith\n  <;> norm_num"
  ]
 },
 {
  "old": "(a b c d : \u211d) : (1 / a + 1 / b + 1 / c + 1 / d) ^ 2 \u2265 1 / a ^ 2 + 4 / (a ^ 2 + b ^ 2) + 9 / (a ^ 2 + b ^ 2 + c ^ 2) + 16 / (a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2) := by",
  "new": ": \u2200 x : \u211d, x > 0 \u2192 x ^ 2 / (1 + x ^ 2) \u2264 1/2 * x := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 2 / (1 + x ^ 2) \u2264 1/2 * x := by\n  intro x hx\n  have h : 0 < x ^ 2 := sq_pos_of_pos hx\n  rw [div_le_iff (show (0 : \u211d) < 1 + x ^ 2 by nlinarith)]\n  nlinarith [sq_nonneg (x - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 2 / (1 + x ^ 2) \u2264 1/2 * x := by\n  intro x hx\n  rw [div_le_iff (show (0 : \u211d) < 1 + x ^ 2 by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (x - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 2 / (1 + x ^ 2) \u2264 1/2 * x := by\n  intro x hx\n  apply le_of_sub_nonneg\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 2 / (1 + x ^ 2) \u2264 1/2 * x := by\n  intro x hx\n  apply (div_le_iff _).mpr\n  nlinarith [sq_nonneg (x - 1)]\n  nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : (a + 1) * Real.sqrt (2 * a * (1 - a)) + (b + 1) * Real.sqrt (2 * b * (1 - b)) + (c + 1) * Real.sqrt (2 * c * (1 - c)) \u2265 8 * (a * b + b * c + c * a) := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) : a * b + b * c + c * a \u2264 (1 / 3) * Real.sqrt ((a ^ 2 + b ^ 2 + c ^ 2)) * (a + b + b + c + c + a) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) :\n       a * b + b * c + c * a \u2264 (1 / 3) * Real.sqrt ((a ^ 2 + b ^ 2 + c ^ 2)) * (a + b + b + c + c + a) := by\n  have : 0 < a + b + c := by linarith\n  have h\u2081 : 0 \u2264 a ^ 2 + b ^ 2 + c ^ 2 := by positivity\n  have h\u2082 : 0 \u2264 Real.sqrt ((a ^ 2 + b ^ 2 + c ^ 2)) := by positivity\n  have h\u2083 : (a - b) ^ 2 + (b - c) ^ 2 + (c - a) ^ 2 \u2265 0 := by positivity\n  have h\u2084 : Real.sqrt ((a ^ 2 + b ^ 2 + c ^ 2)) * (a + b + b + c + c + a) \u2265 a * b + b * c + c * a := by\n    nlinarith [sq_sqrt (show 0 \u2264 a ^ 2 + b ^ 2 + c ^ 2 from h\u2081),\n      mul_self_nonneg (a - b),\n      mul_self_nonneg (b - c),\n      mul_self_nonneg (c - a)]\n  nlinarith [sq_sqrt (show 0 \u2264 a ^ 2 + b ^ 2 + c ^ 2 from h\u2081),\n    mul_self_nonneg (a - b),\n    mul_self_nonneg (b - c),\n    mul_self_nonneg (c - a)]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) :\n       a * b + b * c + c * a \u2264 (1 / 3) * Real.sqrt ((a ^ 2 + b ^ 2 + c ^ 2)) * (a + b + b + c + c + a) := by\n  have h\u2081 : (a + b + c) ^ 2 = a ^ 2 + b ^ 2 + c ^ 2 + 2 * (a * b + b * c + c * a) := by ring\n  rw [hab] at h\u2081\n  have h\u2082 : Real.sqrt ((a ^ 2 + b ^ 2 + c ^ 2)) \u2265 (a + b + c) / 2 := by\n    apply Real.le_sqrt_of_sq_le\n    linarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]"
  ]
 },
 {
  "old": "(x : \u211d) (h\u2080 : 0 < x) : x * Real.log x + (2 * Real.exp (-7 / 4)) * (x + 3 / 4) \u2265 0 := by",
  "new": ": Real.log (Real.sqrt 2 + 1) + Real.log (Real.sqrt 2 - 1) \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.log (Real.sqrt 2 + 1) + Real.log (Real.sqrt 2 - 1) \u2264 1:= by\n  have h\u2080 : Real.sqrt 2 - 1 \u2265 0 := by\n    nlinarith [Real.sqrt_nonneg 2, Real.sq_sqrt (show 0 \u2264 2 by linarith)]\n  have h\u2081 : Real.sqrt 2 + 1 > 0 := by\n    nlinarith [Real.sqrt_nonneg 2, Real.sq_sqrt (show 0 \u2264 2 by linarith)]\n  have h\u2082 : Real.sqrt 2 + 1 \u2260 0 := by linarith\n  have h\u2083 : Real.sqrt 2 - 1 \u2260 0 := by\n    intro h\n    nlinarith [Real.sqrt_nonneg 2, Real.sq_sqrt (show 0 \u2264 2 by linarith)]\n  have h\u2084 : Real.log (Real.sqrt 2 + 1) + Real.log (Real.sqrt 2 - 1) =\n      Real.log ((Real.sqrt 2 + 1) * (Real.sqrt 2 - 1)) := by\n    rw [Real.log_mul (by positivity) (by positivity)]\n  rw [h\u2084]\n  have h\u2085 : (Real.sqrt 2 + 1) * (Real.sqrt 2 - 1) = 1 := by\n    nlinarith [Real.sq_sqrt (show 0 \u2264 2 by linarith)]\n  rw [h\u2085]\n  rw [Real.log_one]\n  linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.log (Real.sqrt 2 + 1) + Real.log (Real.sqrt 2 - 1) \u2264 1:= by\n  have h\u2081 : 0 < Real.sqrt 2 + 1 := by positivity\n  have h\u2082 : 0 < Real.sqrt 2 - 1 := by\n    rw [sub_pos]\n    nlinarith [Real.sqrt_nonneg 2, Real.sq_sqrt (le_of_lt (show 0 < 2 by norm_num))]\n  have h\u2083 : Real.sqrt 2 - 1 \u2260 0 := by\n    intro h\n    nlinarith [Real.sqrt_nonneg 2, Real.sq_sqrt (le_of_lt (show 0 < 2 by norm_num))]\n  have h\u2084 : Real.sqrt 2 + 1 \u2260 0 := by\n    intro h\n    nlinarith [Real.sqrt_nonneg 2, Real.sq_sqrt (le_of_lt (show 0 < 2 by norm_num))]\n  have h\u2085 : Real.log (Real.sqrt 2 + 1) + Real.log (Real.sqrt 2 - 1) = Real.log ((Real.sqrt 2 + 1) * (Real.sqrt 2 - 1)) := by\n    rw [Real.log_mul (by positivity) (by positivity)]\n  rw [h\u2085]\n  have h\u2086 : (Real.sqrt 2 + 1) * (Real.sqrt 2 - 1) = 2 - 1 := by\n    rw [mul_sub, mul_comm]\n    nlinarith [Real.sq_sqrt (le_of_lt (show 0 < 2 by norm_num))]\n  rw [h\u2086]\n  have h\u2087 : Real.log (2 - 1) = 0 := by\n    norm_num [Real.log_one]\n  linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption"
  ]
 },
 {
  "old": "(a b c : \u211d) (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) (h : a + b + c = 1) : 1 / a ^ 2 + 1 / b ^ 2 + 1 / c ^ 2 + 1 / (4 * a * b * c) \u2265 32 := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 1 \u2192 1 / a ^ 2 + 1 / b ^ 2 + 1 / c ^ 2 + 1 / (4 * a * b * c) \u2265 32 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 1 \u2192 1 / a ^ 2 + 1 / b ^ 2 + 1 / c ^ 2 + 1 / (4 * a * b * c) \u2265 32  := by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have : 0 < a * b * c := by positivity\n  have h\u2081 : 0 < a ^ 2 * b ^ 2 * c ^ 2 := by positivity\n  have h\u2082 : 0 < a * b + b * c + c * a := by positivity\n  have h\u2083 : 0 < a ^ 2 * b ^ 2 * c ^ 2 * (a + b + c) := by positivity\n  have h\u2084 : 0 < a ^ 2 * b ^ 2 * c ^ 2 * (a * b + b * c + c * a) := by positivity\n  field_simp [ha, hb, hc, habc]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b),\n    sq_nonneg (a * b * c), sq_nonneg (a * b * c * (a - b)), sq_nonneg (a * b * c * (b - c)),\n    sq_nonneg (a * b * c * (c - a)), sq_nonneg (a * b * c * (a * b - b * c)),\n    sq_nonneg (a * b * c * (b * c - c * a)), sq_nonneg (a * b * c * (c * a - a * b))]"
  ]
 },
 {
  "old": "(p : \u211d) (hp : 0 < p \u2227 p < 1) : 2 / Real.exp 1 \u2264 p^(p / (1 - p)) + p^(1 / (1 - p)) := by",
  "new": "{x y : \u211d} (hx : 0 < x \u2227 x < 1) (hy : 0 < y \u2227 y < 1) : x * y / (x + y) \u2264 (x + y) / 4 + (1 - x) * (1 - y) / 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {x y : \u211d} (hx : 0 < x \u2227 x < 1) (hy : 0 < y \u2227 y < 1) :\n     x * y / (x + y) \u2264 (x + y) / 4 + (1 - x) * (1 - y) / 4:= by\n  have hx' : 0 < x := by linarith\n  have hy' : 0 < y := by linarith\n  have hxy : 0 < x + y := by linarith\n  have hxy' : 0 < x + y := by linarith\n  have hxy'' : 0 < x * y := by nlinarith\n  field_simp [hxy.ne', hxy'.ne', hxy''.ne']\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x + y - 2 * x * y)]\n  <;> linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {x y : \u211d} (hx : 0 < x \u2227 x < 1) (hy : 0 < y \u2227 y < 1) :\n     x * y / (x + y) \u2264 (x + y) / 4 + (1 - x) * (1 - y) / 4:= by\n  rcases hx with \u27e8h1x, h2x\u27e9\n  rcases hy with \u27e8h1y, h2y\u27e9\n  have h3 : 0 < x + y := by linarith\n  have h4 : 0 < (x + y) ^ 2 := by positivity\n  field_simp [h3.ne', h4.ne']\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (x - y), pow_two x, pow_two y, mul_pos h1x (by linarith : 0 < 1 - x),\n    mul_pos h1y (by linarith : 0 < 1 - y)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : (a + b + c) ^ 2 * (a ^ 2 + b ^ 2 + c ^ 2) \u2265 9 * (a ^ 3 * b + b ^ 3 * c + c ^ 3 * a) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x ^ 2 + y ^ 2 + z ^ 2) * (x ^ 2 + y ^ 2 + z ^ 2) \u2265 3 * (x ^ 2 * y ^ 2 + y ^ 2 * z ^ 2 + z ^ 2 * x ^ 2) \u2227 (x ^ 2 + y ^ 2 + z ^ 2) * (x ^ 2 + y ^ 2 + z ^ 2) \u2265 3 * (x * y) ^ 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   (x ^ 2 + y ^ 2 + z ^ 2) * (x ^ 2 + y ^ 2 + z ^ 2) \u2265 3 * (x ^ 2 * y ^ 2 + y ^ 2 * z ^ 2 + z ^ 2 * x ^ 2)  \u2227 (x ^ 2 + y ^ 2 + z ^ 2) * (x ^ 2 + y ^ 2 + z ^ 2)  \u2265 3 * (x * y) ^ 2:= by\n  constructor\n  \u00b7 nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (y ^ 2 - z ^ 2), sq_nonneg (z ^ 2 - x ^ 2),\n      sq_nonneg (x ^ 2 + y ^ 2), sq_nonneg (y ^ 2 + z ^ 2), sq_nonneg (z ^ 2 + x ^ 2)]\n  \u00b7 nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x), sq_nonneg (x + y),\n      sq_nonneg (y + z), sq_nonneg (z + x)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   (x ^ 2 + y ^ 2 + z ^ 2) * (x ^ 2 + y ^ 2 + z ^ 2) \u2265 3 * (x ^ 2 * y ^ 2 + y ^ 2 * z ^ 2 + z ^ 2 * x ^ 2)  \u2227 (x ^ 2 + y ^ 2 + z ^ 2) * (x ^ 2 + y ^ 2 + z ^ 2)  \u2265 3 * (x * y) ^ 2:= by\n  have h\u2081 : (x ^ 2 + y ^ 2 + z ^ 2) * (x ^ 2 + y ^ 2 + z ^ 2) \u2265 3 * (x ^ 2 * y ^ 2 + y ^ 2 * z ^ 2 + z ^ 2 * x ^ 2) := by\n    nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (y ^ 2 - z ^ 2), sq_nonneg (z ^ 2 - x ^ 2),\n      sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  have h\u2082 : (x ^ 2 + y ^ 2 + z ^ 2) * (x ^ 2 + y ^ 2 + z ^ 2) \u2265 3 * (x * y) ^ 2 := by\n    nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (y ^ 2 - z ^ 2), sq_nonneg (z ^ 2 - x ^ 2),\n      sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  exact \u27e8h\u2081, h\u2082\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   (x ^ 2 + y ^ 2 + z ^ 2) * (x ^ 2 + y ^ 2 + z ^ 2) \u2265 3 * (x ^ 2 * y ^ 2 + y ^ 2 * z ^ 2 + z ^ 2 * x ^ 2)  \u2227 (x ^ 2 + y ^ 2 + z ^ 2) * (x ^ 2 + y ^ 2 + z ^ 2)  \u2265 3 * (x * y) ^ 2:= by\n  refine' \u27e8_, _\u27e9\n  \u00b7 nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (x ^ 2 - z ^ 2), sq_nonneg (y ^ 2 - z ^ 2)]\n  \u00b7 nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (x - z),\n      mul_nonneg hx.le hy.le, mul_nonneg hy.le hz.le, mul_nonneg hx.le hz.le,\n      sq_nonneg (x + y), sq_nonneg (y + z), sq_nonneg (x + z)]\n  <;> simp only [pow_two, add_assoc]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   (x ^ 2 + y ^ 2 + z ^ 2) * (x ^ 2 + y ^ 2 + z ^ 2) \u2265 3 * (x ^ 2 * y ^ 2 + y ^ 2 * z ^ 2 + z ^ 2 * x ^ 2)  \u2227 (x ^ 2 + y ^ 2 + z ^ 2) * (x ^ 2 + y ^ 2 + z ^ 2)  \u2265 3 * (x * y) ^ 2:= by\n  refine' \u27e8_, _\u27e9\n  nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (y ^ 2 - z ^ 2), sq_nonneg (z ^ 2 - x ^ 2)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x), mul_nonneg hx.le hy.le, mul_nonneg hy.le hz.le, mul_nonneg hz.le hx.le]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith"
  ]
 },
 {
  "old": "(a b : \u211d) (hab : a * b \u2264 0) : (a^2 + a * b + b^2) / 3 \u2265 (a^2 * b^2 * (a + b)^2 / 4)^(1 / 3) := by",
  "new": ": (Real.sqrt 3 * 2 / 2) \u2265 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_2 : (Real.sqrt 3 * 2 / 2) \u2265 1:= by\n  have h : (Real.sqrt 3 * 2 / 2) = Real.sqrt 3 := by ring\n  rw [h]\n  norm_num [Real.sqrt_nonneg, Real.mul_self_sqrt (show (0 : \u211d) \u2264 3 by norm_num)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_2 : (Real.sqrt 3 * 2 / 2) \u2265 1:= by\n  have h\u2081 : Real.sqrt 3 \u2265 0 := Real.sqrt_nonneg 3\n  have h\u2082 : Real.sqrt 3 \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    norm_num\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_2 : (Real.sqrt 3 * 2 / 2) \u2265 1:= by\n  have : Real.sqrt 3 \u2265 1 := by\n    norm_num [Real.sqrt_nonneg, Real.mul_self_sqrt]\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_2 : (Real.sqrt 3 * 2 / 2) \u2265 1:= by\n  norm_num [Real.sqrt_le_iff, mul_self_eq_mul_self_iff]\n  <;> nlinarith [Real.mul_self_sqrt (show (0 : \u211d) \u2264 3 by norm_num)]"
  ]
 },
 {
  "old": ": Real.logb 9 25 * Real.logb 9 7 > 1 := by",
  "new": ": Real.log (Real.sqrt 25) / Real.log 25 < 1 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_test : Real.log (Real.sqrt 25) / Real.log 25 < 1 := by\n  rw [Real.log_sqrt] <;> norm_num\n  <;> apply lt_of_sub_pos\n  <;> field_simp\n  <;> norm_num\n  <;> nlinarith [Real.log_pos (by norm_num : (1 : \u211d) < 25)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_test : Real.log (Real.sqrt 25) / Real.log 25 < 1 := by\n  rw [div_lt_one (Real.log_pos (by norm_num : (1 : \u211d) < 25))]\n  have : Real.sqrt 25 = 5 := by norm_num [Real.sqrt_eq_iff_sq_eq]\n  rw [this]\n  exact Real.log_lt_log (by norm_num) (by norm_num)",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_test : Real.log (Real.sqrt 25) / Real.log 25 < 1 := by\n  have h\u2080 : Real.sqrt 25 = 5 := by rw [Real.sqrt_eq_iff_sq_eq] <;> norm_num\n  rw [h\u2080]\n  have h\u2081 : Real.log 5 / Real.log 25 < 1 := by\n    have h\u2082 : Real.log 5 < Real.log 25 := Real.log_lt_log (by norm_num) (by norm_num)\n    rw [div_lt_iff (Real.log_pos (by norm_num))]\n    nlinarith\n  exact h\u2081",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_test : Real.log (Real.sqrt 25) / Real.log 25 < 1 := by\n  have : Real.log (Real.sqrt 25) < Real.log 25 := Real.log_lt_log (by positivity) (by norm_num [Real.sqrt_lt])\n  have : Real.log (Real.sqrt 25) / Real.log 25 < 1 := by\n    rw [div_lt_one (Real.log_pos (by norm_num : (1 : \u211d) < 25))]\n    linarith\n  linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b + b * c + c * a = 3) : 3 * Real.sqrt ((a + b) * (b + c) * (c + a)) \u2265 2 * (Real.sqrt (a + b) + Real.sqrt (b + c) + Real.sqrt (c + a)) \u2227 2 * (Real.sqrt (a + b) + Real.sqrt (b + c) + Real.sqrt (c + a)) \u2265 6 * Real.sqrt 2 := by",
  "new": ": Real.sqrt 2 \u2264 2 / \u221a2 + 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt 2 \u2264 2 / \u221a2 + 1:= by\n  rw [add_comm]\n  rw [add_comm]\n  have h\u2081 : 0 \u2264 1 := by norm_num\n  have h\u2082 : 0 \u2264 Real.sqrt 2 := Real.sqrt_nonneg 2\n  have h\u2083 : 0 \u2264 2 / \u221a2 := by positivity\n  have h\u2084 : 0 \u2264 (2 / \u221a2) ^ 2 := by positivity\n  have h\u2085 : (2 / \u221a2) ^ 2 = 4 / 2 := by\n    field_simp\n    ring\n  have h\u2086 : Real.sqrt 2 \u2264 2 / \u221a2 + 1 := by\n    nlinarith [sq_sqrt (show 0 \u2264 2 from by positivity), h\u2085]\n  linarith\n  <;> linarith\n  <;> norm_num"
  ]
 },
 {
  "old": "(a b : \u211d) : 8 * a * b * (a ^ 2 + b ^ 2) \u2264 2 * (a + b) ^ 2 * Real.sqrt (2 * a * b * (a ^ 2 + b ^ 2)) := by",
  "new": "(x y : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hxy : 0 \u2264 x * y) : 8 * x * y * (x ^ 2 + y ^ 2) \u2264 2 * (x + y) ^ 2 * Real.sqrt (2 * x * y * (x ^ 2 + y ^ 2)):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hxy : 0 \u2264 x * y) : 8 * x * y * (x ^ 2 + y ^ 2) \u2264 2 * (x + y) ^ 2 * Real.sqrt (2 * x * y * (x ^ 2 + y ^ 2)):= by\n  have t1 : 0 \u2264 2 * x * y * (x ^ 2 + y ^ 2) := by positivity\n  have t2 : 0 \u2264 Real.sqrt (2 * x * y * (x ^ 2 + y ^ 2)) := Real.sqrt_nonneg _\n  have t3 : 0 \u2264 (x - y) ^ 2 * Real.sqrt (2 * x * y * (x ^ 2 + y ^ 2)) := by positivity\n  have h\u2080 : 0 \u2264 x * y := by positivity\n  have h\u2081 : 0 \u2264 x * y * (x ^ 2 + y ^ 2) := by positivity\n  have h\u2082 : 0 \u2264 Real.sqrt (2 * x * y * (x ^ 2 + y ^ 2)) * (x + y) ^ 2 := by positivity\n  nlinarith [sq_sqrt (by positivity : (0 : \u211d) \u2264 2 * x * y * (x ^ 2 + y ^ 2)),\n    mul_self_nonneg (x * y - Real.sqrt (2 * x * y * (x ^ 2 + y ^ 2)))]"
  ]
 },
 {
  "old": "(a b c : \u211d) : (1 / 3) * (a + 3 * b + 3 * c) ^ 2 / (37 * a ^ 2 + 3 * (b + c) ^ 2) + (1 / 3) * (b + 3 * c + 3 * a) ^ 2 / (37 * b ^ 2 + 3 * (c + a) ^ 2) + (1 / 3) * (c + 3 * a + 3 * b) ^ 2 / (37 * c ^ 2 + 3 * (a + b) ^ 2) \u2265 3 := by",
  "new": ": Real.sqrt (1 + 3 * Real.sqrt (1 + (1 + 3 * Real.sqrt (1 + 1)) ^ 2) ^ 2) \u2265 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt (1 + 3 * Real.sqrt (1 + (1 + 3 * Real.sqrt (1 + 1)) ^ 2) ^ 2) \u2265 3:= by\n  have h : (Real.sqrt (1 + (1 + 3 * Real.sqrt (1 + 1)) ^ 2) ^ 2) \u2265 3 := by\n    have h\u2080 : Real.sqrt (1 + 1) \u2265 1 := by\n      apply Real.le_sqrt_of_sq_le\n      linarith\n    have h\u2081 : Real.sqrt (1 + (1 + 3 * Real.sqrt (1 + 1)) ^ 2) \u2265 1 + 3 / 2 := by\n      apply Real.le_sqrt_of_sq_le\n      nlinarith [sq_sqrt (show (0 : \u211d) \u2264 1 + 1 from by linarith)]\n    nlinarith [sq_sqrt (show (0 : \u211d) \u2264 1 + (1 + 3 * Real.sqrt (1 + 1)) ^ 2 from by positivity)]\n  apply Real.le_sqrt_of_sq_le\n  nlinarith [h]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b \u2260 0) (hbc : b + c \u2260 0) (hca : a + c \u2260 0) : (b + c) / (2 * a ^ 2 + b * c) + (c + a) / (2 * b ^ 2 + c * a) + (a + b) / (2 * c ^ 2 + a * b) \u2265 6 / (a + b + c) := by",
  "new": "(a b c : \u211d) (hab : 0 < a \u2227 0 < b \u2227 0 < c) (h : a + b + c = 1) : 1 / (a * b + b * c + c * a) ^ 2 \u2265 9 / (a + b + c) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (a b c : \u211d) (hab : 0 < a \u2227 0 < b \u2227 0 < c) (h : a + b + c = 1) : 1 / (a * b + b * c + c * a) ^ 2 \u2265 9 / (a + b + c)  := by\n  rcases hab with \u27e8ha, hb, hc\u27e9\n  have h1 : 0 < a * b + b * c + c * a := by positivity\n  have h2 : 0 < (a * b + b * c + c * a) ^ 2 := by positivity\n  have h3 : 0 < a * b * c := by positivity\n  have h4 : (a + b + c) ^ 2 = 1 := by simp [h]\n  field_simp [h1, h2, h3, h4]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b + b * c + c * a), mul_self_nonneg (a * b - b * c),\n    mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (a b c : \u211d) (hab : 0 < a \u2227 0 < b \u2227 0 < c) (h : a + b + c = 1) : 1 / (a * b + b * c + c * a) ^ 2 \u2265 9 / (a + b + c)  := by\n  rcases hab with \u27e8ha, hb, hc\u27e9\n  have h\u2080 : 0 < a * b := by positivity\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * a := by positivity\n  have h\u2083 : 0 < a * b + b * c + c * a := by positivity\n  have h\u2084 : (a + b + c) ^ 2 = 1 := by simp [h]\n  have h\u2085 : 0 < a * b + b * c + c * a := by positivity\n  field_simp [h\u2085]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]"
  ]
 },
 {
  "old": "(p r n : \u2115) (h\u2081 : n + 1 - p * r \u2265 0) (h\u2082 : n \u2223 p - 1) : n + 1 \u2264 p := by",
  "new": "(p : \u2115) {r : \u2115} (hr : r \u2260 1) (hp : p.Prime) : p.Coprime r \u2228 p \u2223 r:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {r : \u2115} (hr : r \u2260 1) (hp : p.Prime) :\n     p.Coprime r \u2228 p \u2223 r:= by\n  refine' or_iff_not_imp_right.mpr fun h => _\n  exact hp.coprime_iff_not_dvd.mpr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {r : \u2115} (hr : r \u2260 1) (hp : p.Prime) :\n     p.Coprime r \u2228 p \u2223 r:= by\n  refine' or_iff_not_imp_right.mpr fun h => _\n  simpa [hp.coprime_iff_not_dvd, hr] using h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {r : \u2115} (hr : r \u2260 1) (hp : p.Prime) :\n     p.Coprime r \u2228 p \u2223 r:= by\n  refine' or_iff_not_imp_right.2 fun h => _\n  simp_all [Nat.Prime.coprime_iff_not_dvd, hr]"
  ]
 },
 {
  "old": "(y z : \u211d) : Real.sqrt (1 + y ^ 2) + Real.sqrt (1 + z ^ 2) + y + z \u2265 2 * Real.sqrt (1 + (y + z) ^ 2 / 4) + y + z := by",
  "new": ": Real.sqrt (1 + 3 * Real.sqrt (3) ^ 2) \u2264 Real.sqrt (1 + 3 * Real.sqrt (3) ^ 2) + Real.sqrt (1 + 3 * Real.sqrt (3) ^ 2) + 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt (1 + 3 * Real.sqrt (3) ^ 2) \u2264 Real.sqrt (1 + 3 * Real.sqrt (3) ^ 2) + Real.sqrt (1 + 3 * Real.sqrt (3) ^ 2) + 3:= by\n  have h : Real.sqrt (1 + 3 * Real.sqrt (3) ^ 2) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2081 : Real.sqrt (1 + 3 * Real.sqrt (3) ^ 2) + Real.sqrt (1 + 3 * Real.sqrt (3) ^ 2) + 3 \u2265 Real.sqrt (1 + 3 * Real.sqrt (3) ^ 2) := by\n    nlinarith\n  nlinarith\n  <;> norm_num\n  <;> nlinarith\n  <;> norm_num\n  <;> nlinarith\n  <;> norm_num\n  <;> nlinarith\n  <;> norm_num\n  <;> nlinarith\n  <;> norm_num\n  <;> nlinarith\n  <;> norm_num\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt (1 + 3 * Real.sqrt (3) ^ 2) \u2264 Real.sqrt (1 + 3 * Real.sqrt (3) ^ 2) + Real.sqrt (1 + 3 * Real.sqrt (3) ^ 2) + 3:= by\n  nlinarith [Real.sqrt_nonneg (1 + 3 * Real.sqrt (3) ^ 2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt (1 + 3 * Real.sqrt (3) ^ 2) \u2264 Real.sqrt (1 + 3 * Real.sqrt (3) ^ 2) + Real.sqrt (1 + 3 * Real.sqrt (3) ^ 2) + 3:= by\n  have h\u2081 : Real.sqrt (1 + 3 * Real.sqrt (3) ^ 2) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2082 : Real.sqrt (1 + 3 * Real.sqrt (3) ^ 2) + Real.sqrt (1 + 3 * Real.sqrt (3) ^ 2) + 3 \u2265 Real.sqrt (1 + 3 * Real.sqrt (3) ^ 2) := by linarith\n  nlinarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt (1 + 3 * Real.sqrt (3) ^ 2) \u2264 Real.sqrt (1 + 3 * Real.sqrt (3) ^ 2) + Real.sqrt (1 + 3 * Real.sqrt (3) ^ 2) + 3:= by\n  nlinarith [Real.sqrt_nonneg (1 + 3 * Real.sqrt (3) ^ 2), Real.sqrt_nonneg (1 + 3 * Real.sqrt (3) ^ 2)]"
  ]
 },
 {
  "old": "(a b c : \u2124) (ha : a \u2260 0 \u2228 b \u2260 0 \u2228 c \u2260 0) : a^3 + 2 * b^3 = 4 * c^3 \u2194 a = 0 \u2227 b = 0 \u2227 c = 0 := by",
  "new": "(n : \u2115) (a b c : \u2115) (habc : Nat.Coprime a b \u2227 Nat.Coprime a c \u2227 Nat.Coprime b c) (h : a * b = c ^ n) : (Nat.Coprime a c \u2227 a \u2260 0 \u2227 b \u2260 0) \u2228 a = 0 \u2227 b = 0 \u2227 c = 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_mul_eq_pow\n    (n : \u2115) (a b c : \u2115) (habc : Nat.Coprime a b \u2227 Nat.Coprime a c \u2227 Nat.Coprime b c)\n    (h : a * b = c ^ n) :\n    (Nat.Coprime a c \u2227 a \u2260 0 \u2227 b \u2260 0) \u2228 a = 0 \u2227 b = 0 \u2227 c = 0:= by\n  cases n\n  all_goals\n    simp only [Nat.pow_zero, Nat.pow_succ, Nat.mul_eq_zero, Nat.mul_one] at h\n    aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_mul_eq_pow\n    (n : \u2115) (a b c : \u2115) (habc : Nat.Coprime a b \u2227 Nat.Coprime a c \u2227 Nat.Coprime b c)\n    (h : a * b = c ^ n) :\n    (Nat.Coprime a c \u2227 a \u2260 0 \u2227 b \u2260 0) \u2228 a = 0 \u2227 b = 0 \u2227 c = 0:= by\n  rcases n with (n | n) <;> simp_all [Nat.pow_succ]\n  all_goals\n    rcases habc with \u27e8hab, hac, hbc\u27e9\n    rcases eq_or_ne a 0 with (rfl | ha) <;> rcases eq_or_ne b 0 with (rfl | hb) <;>\n      rcases eq_or_ne c 0 with (rfl | hc) <;>\n      simp_all [Nat.coprime_zero_left, Nat.coprime_zero_right, Nat.mul_zero, Nat.zero_mul]\n  all_goals\n    omega\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption"
  ]
 },
 {
  "old": "(a b : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hab : a + b + a * b = 1) : (2 : \u211d) \u2264 (a ^ 2 / (b ^ 3 + 1) + b ^ 2 / (a ^ 3 + 1) + 1 / (a ^ 3 + b ^ 3)) \u2227 (a ^ 2 / (b ^ 3 + 1) + b ^ 2 / (a ^ 3 + 1) + 1 / (a ^ 3 + b ^ 3)) \u2264 (45 + 41 * Real.sqrt 2) / 14 := by",
  "new": ": \u2200 x : \u211d, x \u2265 0 \u2227 x \u2264 1 \u2192 (x ^ 2 - x + 1) ^ 2 \u2265 3 * x ^ 2 * (1 - x):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 x : \u211d, x \u2265 0 \u2227 x \u2264 1 \u2192  (x ^ 2 - x + 1) ^ 2 \u2265 3 * x ^ 2 * (1 - x):= by\n  rintro x \u27e8h1, h2\u27e9\n  nlinarith [sq_nonneg (x ^ 2 - x + 1), sq_nonneg (x ^ 2 + x - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 x : \u211d, x \u2265 0 \u2227 x \u2264 1 \u2192  (x ^ 2 - x + 1) ^ 2 \u2265 3 * x ^ 2 * (1 - x):= by\n  rintro x \u27e8hx_left, hx_right\u27e9\n  simp only [pow_two, sub_eq_add_neg, neg_mul, mul_neg, mul_one, mul_add, add_mul,\n    mul_sub, mul_comm, mul_left_comm, mul_assoc]\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (x - 1 / 3), sq_nonneg (x - 1 / 3 + 2 / 9),\n    sq_nonneg (x - 1 / 3 - 2 / 9)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a / b + b / c + c / a + b / (a + b) + c / (b + c) + a / (c + a)) \u2265 9 / 2 := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a * b * c = 1 \u2192 a / b + b / c + c / a + b / (a + b) + c / (b + c) + a / (c + a) \u2265 9 / 2 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a * b * c = 1 \u2192 a / b + b / c + c / a + b / (a + b) + c / (b + c) + a / (c + a) \u2265 9 / 2  := by\n  rintro a b c \u27e8a_pos, b_pos, c_pos\u27e9 abc_eq\n  have h1 : 0 < a * b := by positivity\n  have h2 : 0 < b * c := by positivity\n  have h3 : 0 < c * a := by positivity\n  have h4 : 0 < a * b * c := by positivity\n  have h5 : 0 < a * b * c * (a + b) := by positivity\n  have h6 : 0 < a * b * c * (b + c) := by positivity\n  have h7 : 0 < a * b * c * (c + a) := by positivity\n  field_simp [h1, h2, h3, h4, h5, h6, h7, mul_assoc]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n  <;> linarith"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : x>0 \u2227 y>0 \u2227 z>0 \u2227 x * y * z = 1) : (x * Real.sqrt (y * z) + y * Real.sqrt (z * x) + z * Real.sqrt (x * y))^2 \u2265 4 * x * y * z * (x * y * z + 1) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) : 4 * (x + y + z) \u2264 (x + y + z) ^ 2 + 4 * (x * y + y * z + z * x):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) :\n  4 * (x + y + z) \u2264 (x + y + z) ^ 2 + 4 * (x * y + y * z + z * x):= by\n  nlinarith [sq_nonneg (x + y + z - 3),\n    sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) :\n  4 * (x + y + z) \u2264 (x + y + z) ^ 2 + 4 * (x * y + y * z + z * x):= by\n  ring_nf\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_pos hx hy, mul_pos hy hz, mul_pos hx hz]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) :\n  4 * (x + y + z) \u2264 (x + y + z) ^ 2 + 4 * (x * y + y * z + z * x):= by\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z), mul_pos hx hy, mul_pos hy hz, mul_pos hz hx, sq_nonneg (x + y - z), sq_nonneg (x - y + z), sq_nonneg (-x + y + z)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) :\n  4 * (x + y + z) \u2264 (x + y + z) ^ 2 + 4 * (x * y + y * z + z * x):= by\n  ring_nf\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_pos hx hy, mul_pos hy hz, mul_pos hz hx]"
  ]
 },
 {
  "old": "(n : \u2115) (hn : 2 \u2264 n) : ((n:\u211d)^(1/n) < 1 + Real.sqrt (2/n)) \u2227 (\u2211 k in Finset.Icc 1 n, (1/(k^2)) > 3*n/(2*n+1)) := by",
  "new": "(n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime n (n - 1) \u2228 Real.sqrt 3 < Real.sqrt (n + 1) + 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_gold_ratio (n : \u2115) (hn : 2 \u2264 n) :\n    Nat.Coprime n (n - 1) \u2228 Real.sqrt 3 < Real.sqrt (n + 1) + 1:= by\n  refine' or_iff_not_imp_left.mpr fun h => _\n  have h1 : 0 < n := by linarith\n  have h2 : 0 < (n - 1 : \u211d) := by\n    norm_num\n    omega\n  have h3 : Real.sqrt 3 < Real.sqrt (n + 1) + 1 := by\n    rw [Real.sqrt_lt (by positivity)]\n    norm_num\n    nlinarith [Real.sqrt_nonneg 3, Real.sqrt_nonneg (n + 1), Real.mul_self_sqrt (show 0 \u2264 3 by norm_num),\n      Real.mul_self_sqrt (show 0 \u2264 (n + 1 : \u211d) by positivity)]\n    positivity\n  exact h3",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_gold_ratio (n : \u2115) (hn : 2 \u2264 n) :\n    Nat.Coprime n (n - 1) \u2228 Real.sqrt 3 < Real.sqrt (n + 1) + 1:= by\n  have h : 2 \u2264 (n : \u211d) := by norm_cast\n  have h\u2081 : Real.sqrt 3 < Real.sqrt (n + 1) + 1 := by\n    have h\u2082 : 0 \u2264 Real.sqrt (n + 1) := Real.sqrt_nonneg (n + 1)\n    nlinarith [Real.sqrt_nonneg 3, Real.sqrt_nonneg (n + 1),\n      Real.sq_sqrt (show (0 : \u211d) \u2264 3 by norm_num),\n      Real.sq_sqrt (show (0 : \u211d) \u2264 n + 1 by linarith),\n      mul_self_nonneg (Real.sqrt 3 - Real.sqrt (n + 1))]\n  exact Or.inr h\u2081",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_gold_ratio (n : \u2115) (hn : 2 \u2264 n) :\n    Nat.Coprime n (n - 1) \u2228 Real.sqrt 3 < Real.sqrt (n + 1) + 1:= by\n  refine' or_iff_not_imp_left.mpr fun h => _\n  have : 2 \u2264 (n : \u211d) := by norm_cast\n  have h\u2081 : 0 \u2264 Real.sqrt (n + 1) := Real.sqrt_nonneg _\n  have h\u2082 : Real.sqrt (n + 1) + 1 \u2265 Real.sqrt 3 := by\n    nlinarith [sq_sqrt (show 0 \u2264 (3 : \u211d) by norm_num),\n      sq_sqrt (show 0 \u2264 (n + 1 : \u211d) by positivity),\n      Real.sqrt_nonneg (3 : \u211d)]\n  nlinarith [sq_sqrt (show 0 \u2264 (3 : \u211d) by norm_num),\n    sq_sqrt (show 0 \u2264 (n + 1 : \u211d) by positivity),\n    Real.sqrt_nonneg (3 : \u211d)]"
  ]
 },
 {
  "old": "(p : \u2115) (hp : Nat.Prime p) : \u2200 k \u2208 Finset.range (p - 1), (\u2211 i in Finset.range p, i ^ k) % p = 0 := by",
  "new": "(p : \u2115) {a : \u2115} (h\u2081 : Nat.Prime p) (h\u2082 : \u00acp \u2223 a) : Nat.Coprime p a \u2228 p \u2223 a:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {a : \u2115} (h\u2081 : Nat.Prime p) (h\u2082 : \u00acp \u2223 a) :\n    Nat.Coprime p a \u2228 p \u2223 a:= by\n  by_cases h : p \u2223 a <;> simp_all [Nat.coprime_iff_gcd_eq_one, Nat.Prime.coprime_iff_not_dvd]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {a : \u2115} (h\u2081 : Nat.Prime p) (h\u2082 : \u00acp \u2223 a) :\n    Nat.Coprime p a \u2228 p \u2223 a:= by\n  have := h\u2081.coprime_iff_not_dvd.mpr h\u2082\n  omega\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {a : \u2115} (h\u2081 : Nat.Prime p) (h\u2082 : \u00acp \u2223 a) :\n    Nat.Coprime p a \u2228 p \u2223 a:= by\n  refine' or_iff_not_imp_right.2 fun h => _\n  exact h\u2081.coprime_iff_not_dvd.2 h\u2082"
  ]
 },
 {
  "old": "(a b c : \u211d) : (a^3 / (a + b) * (a + c) + b^3 / (b + c) * (b + a) + c^3 / (c + a) * (c + b) : \u211d) \u2265 (3 * (a^2 + b^2 + c^2)) / (4 * (a + b + c)) := by",
  "new": "(a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (hab : a + b + c = 1) : a^3 / (a + b) * (a + c) + b^3 / (b + c) * (b + a) + c^3 / (c + a) * (c + b) \u2265 2 * (a * b + b * c + c * a) - 2 * (a + b + b + c + c + a) / 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (hab : a + b + c = 1) : a^3 / (a + b) * (a + c) + b^3 / (b + c) * (b + a) + c^3 / (c + a) * (c + b) \u2265 2 * (a * b + b * c + c * a) - 2 * (a + b + b + c + c + a) / 4:= by\n  have h\u2080 : a + b + c = 1 := by assumption\n  have h\u2081 : a + b > 0 := by linarith\n  have h\u2082 : a + c > 0 := by linarith\n  have h\u2083 : b + c > 0 := by linarith\n  have h\u2084 : a * b > 0 := by nlinarith\n  have h\u2085 : a * c > 0 := by nlinarith\n  have h\u2086 : b * c > 0 := by nlinarith\n  have h\u2087 : a ^ 3 / (a + b) \u2265 0 := by positivity\n  have h\u2088 : b ^ 3 / (b + c) \u2265 0 := by positivity\n  have h\u2089 : c ^ 3 / (c + a) \u2265 0 := by positivity\n  have h\u2081\u2080 : a ^ 3 / (a + b) * (a + c) \u2265 0 := by positivity\n  have h\u2081\u2081 : b ^ 3 / (b + c) * (b + a) \u2265 0 := by positivity\n  have h\u2081\u2082 : c ^ 3 / (c + a) * (c + b) \u2265 0 := by positivity\n  nlinarith\n  <;> linarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (hab : a + b + c = 1) : a^3 / (a + b) * (a + c) + b^3 / (b + c) * (b + a) + c^3 / (c + a) * (c + b) \u2265 2 * (a * b + b * c + c * a) - 2 * (a + b + b + c + c + a) / 4:= by\n  have h\u2080 : 0 \u2264 a ^ 2 / 4 := by positivity\n  have h\u2081 : 0 \u2264 b ^ 2 / 4 := by positivity\n  have h\u2082 : 0 \u2264 c ^ 2 / 4 := by positivity\n  have h\u2083 : 0 \u2264 a * b := by positivity\n  have h\u2084 : 0 \u2264 b * c := by positivity\n  have h\u2085 : 0 \u2264 c * a := by positivity\n  have h\u2086 : 0 \u2264 a ^ 3 / (a + b) := by positivity\n  have h\u2087 : 0 \u2264 b ^ 3 / (b + c) := by positivity\n  have h\u2088 : 0 \u2264 c ^ 3 / (c + a) := by positivity\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> assumption\n  <;> simp [*]\n  <;> linarith\n  <;> simp [*]\n  <;> linarith\n  <;> simp [*]\n  <;> linarith\n  <;> simp [*]\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : (a + b) * (a ^ 3 + b ^ 3 - c ^ 3) / a / b + (b + c) * (b ^ 3 + c ^ 3 - a ^ 3) / b / c + (c + a) * (c ^ 3 + a ^ 3 - b ^ 3) / c / a \u2265 2 / 3 := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) : (a * b + b * c + c * a) * (a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2) \u2265 a * b + b * c + c * a:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_of_three_pos_reals (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) : (a * b + b * c + c * a) * (a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2) \u2265 a * b + b * c + c * a:= by\n  have h\u2081 : 0 < a * b := mul_pos ha hb\n  have h\u2082 : 0 < b * c := mul_pos hb hc\n  have h\u2083 : 0 < c * a := mul_pos hc ha\n  have h\u2084 : a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2 \u2265 3 := by\n    have h\u2085 : 0 < b ^ 2 := pow_pos hb 2\n    have h\u2086 : 0 < c ^ 2 := pow_pos hc 2\n    have h\u2087 : 0 < a ^ 2 := pow_pos ha 2\n    have h\u2088 : 0 < b ^ 2 * c ^ 2 := mul_pos h\u2085 h\u2086\n    have h\u2089 : 0 < a ^ 2 * b ^ 2 := mul_pos h\u2087 h\u2085\n    have h\u2081\u2080 : 0 < a ^ 2 * c ^ 2 := mul_pos h\u2087 h\u2086\n    field_simp [h\u2085, h\u2086, h\u2089, h\u2081\u2080]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2)]\n  nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_of_three_pos_reals (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) : (a * b + b * c + c * a) * (a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2) \u2265 a * b + b * c + c * a:= by\n  apply le_of_sub_nonneg\n  have hab1 : 0 < a * b := mul_pos ha hb\n  have hbc1 : 0 < b * c := mul_pos hb hc\n  have hac1 : 0 < c * a := mul_pos hc ha\n  have h1 : (a * b + b * c + c * a) * (a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2) - (a * b + b * c + c * a) \u2265 0 := by\n    have h2 : a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2 \u2265 3:= by\n      have h2 : 0 < b ^ 2 := sq_pos_of_pos hb\n      have h3 : 0 < c ^ 2 := sq_pos_of_pos hc\n      have h4 : 0 < a ^ 2 := sq_pos_of_pos ha\n      have h5 : 0 < b ^ 2 * c ^ 2 := mul_pos h2 h3\n      have h6 : 0 < c ^ 2 * a ^ 2 := mul_pos h3 h4\n      have h7 : 0 < a ^ 2 * b ^ 2 := mul_pos h4 h2\n      field_simp\n      rw [le_div_iff (by positivity)]\n      nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_of_three_pos_reals (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) : (a * b + b * c + c * a) * (a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2) \u2265 a * b + b * c + c * a:= by\n  have h\u2081 : a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2 \u2265 1 := by\n    have h\u2082 : 0 < a ^ 2 := sq_pos_of_pos ha\n    have h\u2083 : 0 < b ^ 2 := sq_pos_of_pos hb\n    have h\u2084 : 0 < c ^ 2 := sq_pos_of_pos hc\n    have h\u2085 : 0 < a ^ 2 * b ^ 2 := mul_pos h\u2082 h\u2083\n    have h\u2086 : 0 < b ^ 2 * c ^ 2 := mul_pos h\u2083 h\u2084\n    have h\u2087 : 0 < c ^ 2 * a ^ 2 := mul_pos h\u2084 h\u2082\n    have h\u2088 : 0 < a ^ 2 * b ^ 2 * c ^ 2 := mul_pos h\u2085 h\u2084\n    field_simp [h\u2085, h\u2086, h\u2087, h\u2088]\n    rw [le_div_iff, mul_comm]\n    nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2)]\n    positivity\n  have h\u2082 : (a * b + b * c + c * a) * (a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2) \u2265 (a * b + b * c + c * a) * 1 := by\n    exact mul_le_mul_of_nonneg_left h\u2081 (by positivity)\n  linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_of_three_pos_reals (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) : (a * b + b * c + c * a) * (a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2) \u2265 a * b + b * c + c * a:= by\n  have : a * b + b * c + c * a \u2265 0 := by positivity\n  have h\u2081 : a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2 \u2265 3:= by\n    have : 0 < a ^ 2 := sq_pos_of_pos ha\n    have : 0 < b ^ 2 := sq_pos_of_pos hb\n    have : 0 < c ^ 2 := sq_pos_of_pos hc\n    have : 0 < a ^ 2 * b ^ 2 := by positivity\n    have : 0 < b ^ 2 * c ^ 2 := by positivity\n    have : 0 < c ^ 2 * a ^ 2 := by positivity\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2)]\n  nlinarith"
  ]
 },
 {
  "old": "{a b c : \u211d} (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : (a - b) ^ 2 * (1 / (2 * a * b) + (a - b) / (6 * a * b * c) - 4 / (a + b + c) ^ 2) \u2265 0 := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : (a + b + c) ^ 2 \u2265 9 * a * b * c:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : (a + b + c) ^ 2 \u2265 9 * a * b * c:= by\n  ring_nf\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c), mul_pos ha hb, mul_pos ha hc, mul_pos hb hc, mul_pos (mul_pos ha hb) hc, sq_nonneg (a + b + c)]\n  <;> simp [habc]\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : (a + b + c) ^ 2 \u2265 9 * a * b * c:= by\n  rw [sq, add_mul_self_eq]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c), mul_pos ha hb, mul_pos ha hc, mul_pos hb hc]"
  ]
 },
 {
  "old": "(a b c : NNReal) (h\u2080 : a + b + c = 3) : (a + 1) * Real.sqrt ((3 + 4 * b^2) * (3 + 4 * c^2)) + (b + 1) * Real.sqrt ((3 + 4 * c^2) * (3 + 4 * a^2)) + (c + 1) * Real.sqrt ((3 + 4 * a^2) * (3 + 4 * b^2)) \u2264 42 := by",
  "new": "{a b c : \u211d} (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 1) : Real.sqrt (a ^ 2 + 1) * Real.sqrt (b ^ 2 + 1) * Real.sqrt (c ^ 2 + 1) \u2264 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {a b c : \u211d} (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 1) :\n     Real.sqrt (a ^ 2 + 1) * Real.sqrt (b ^ 2 + 1) * Real.sqrt (c ^ 2 + 1) \u2264 2:= by\n  have h\u2081 : Real.sqrt (a ^ 2 + 1) \u2264 1 + a / 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    linarith\n    nlinarith [sq_nonneg (a - 1), ha]\n  have h\u2082 : Real.sqrt (b ^ 2 + 1) \u2264 1 + b / 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    linarith\n    nlinarith [sq_nonneg (b - 1), hb]\n  have h\u2083 : Real.sqrt (c ^ 2 + 1) \u2264 1 + c / 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    linarith\n    nlinarith [sq_nonneg (c - 1), hc]\n  calc\n    Real.sqrt (a ^ 2 + 1) * Real.sqrt (b ^ 2 + 1) * Real.sqrt (c ^ 2 + 1) \u2264\n        (1 + a / 2) * (1 + b / 2) * (1 + c / 2) := by gcongr\n    _ \u2264 2 := by\n      nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> simp [hab]\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {a b c : \u211d} (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 1) :\n     Real.sqrt (a ^ 2 + 1) * Real.sqrt (b ^ 2 + 1) * Real.sqrt (c ^ 2 + 1) \u2264 2:= by\n  have h : Real.sqrt (a ^ 2 + 1) \u2264 1 + a / 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith\n  have hb : Real.sqrt (b ^ 2 + 1) \u2264 1 + b / 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith\n  have hc : Real.sqrt (c ^ 2 + 1) \u2264 1 + c / 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith\n  calc\n    Real.sqrt (a ^ 2 + 1) * Real.sqrt (b ^ 2 + 1) * Real.sqrt (c ^ 2 + 1) \u2264\n    (1 + a / 2) * (1 + b / 2) * (1 + c / 2) := by gcongr <;> nlinarith\n    _ \u2264 2 := by\n      nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a)]\n  <;> linarith [ha, hb, hc, hab]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : b \u2264 a) (hbc : c \u2264 b) (h : a + b + c = 1) : a * Real.sqrt (b / c) + b * Real.sqrt (c / a) + c * Real.sqrt (a / b) \u2265 1 := by",
  "new": "(x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (hab : x + y + z = 1) : Real.sqrt (x / (x + y + z)) + Real.sqrt (y / (x + y + z)) + Real.sqrt (z / (x + y + z)) \u2265 1 - (x + y + z) / 3 * Real.sqrt (x + y + z):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (hab : x + y + z = 1) :\n     Real.sqrt (x / (x + y + z)) + Real.sqrt (y / (x + y + z)) +\n       Real.sqrt (z / (x + y + z)) \u2265 1 - (x + y + z) / 3 * Real.sqrt (x + y + z):= by\n  rw [hab]\n  norm_num\n  nlinarith [Real.sqrt_nonneg x, Real.sqrt_nonneg y, Real.sqrt_nonneg z,\n    Real.sq_sqrt (show 0 \u2264 x by linarith), Real.sq_sqrt (show 0 \u2264 y by linarith), Real.sq_sqrt (show 0 \u2264 z by linarith),\n    sq_nonneg (Real.sqrt x - 1 / 3), sq_nonneg (Real.sqrt y - 1 / 3), sq_nonneg (Real.sqrt z - 1 / 3)]"
  ]
 },
 {
  "old": ": \u2200 x y : \u2124, x^3 + 3 \u2260 4*y*(y+1) := by",
  "new": "(x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y):= by\n  by_cases h : Nat.Coprime x y <;> simp [h]\n  <;> simp [Nat.coprime_iff_gcd_eq_one, h]\n  <;> use Nat.gcd x y\n  <;> simp [Nat.gcd_mul_left, h]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y):= by\n  by_cases h : Nat.Coprime x y <;> simp [h]\n  <;> simp [Nat.coprime_iff_gcd_eq_one, h]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y):= by\n  by_cases h : x.Coprime y\n  exact Or.inl h\n  exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y):= by\n  by_cases h : Nat.Coprime x y <;> simp [h]\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto"
  ]
 },
 {
  "old": "(n : \u2115) (a : \u2115 \u2192 NNReal) : (n - 1) * (\u2211 i in Finset.range n, a i ^ n) + n * (\u220f i in Finset.range n, a i) \u2265 (\u2211 i in Finset.range n, a i) * (\u2211 i in Finset.range n, a i ^ (n - 1)) := by",
  "new": "(x y : \u2115 \u2192 \u211d) (n : \u2115) (hx : \u2200 n, x n \u2265 0) (hy : \u2200 n, y n \u2265 0) : (\u2211 i in Finset.range n, x i * y i) \u2264 (\u2211 i in Finset.range n, x i ^ 2 + \u2211 i in Finset.range n, y i ^ 2) / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (x y : \u2115 \u2192 \u211d) (n : \u2115) (hx : \u2200 n, x n \u2265 0) (hy : \u2200 n, y n \u2265 0) :\n            (\u2211 i in Finset.range n, x i * y i) \u2264\n             (\u2211 i in Finset.range n, x i ^ 2 + \u2211 i in Finset.range n, y i ^ 2) / 2:= by\n  induction' n with n IH\n  simp\n  simp only [Finset.sum_range_succ, Nat.cast_succ, add_assoc]\n  have h\u2081 : 0 \u2264 (x n + y n) ^ 2 := by nlinarith\n  have h\u2082 : 0 \u2264 (x n - y n) ^ 2 := by nlinarith\n  nlinarith [h\u2081, h\u2082]\n  <;> assumption\n  <;> simp_all\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (x y : \u2115 \u2192 \u211d) (n : \u2115) (hx : \u2200 n, x n \u2265 0) (hy : \u2200 n, y n \u2265 0) :\n            (\u2211 i in Finset.range n, x i * y i) \u2264\n             (\u2211 i in Finset.range n, x i ^ 2 + \u2211 i in Finset.range n, y i ^ 2) / 2:= by\n  have : (\u2211 i in Finset.range n, x i * y i) \u2264 (\u2211 i in Finset.range n, x i ^ 2 + \u2211 i in Finset.range n, y i ^ 2) / 2 := by\n    induction' n with n hn\n    simp\n    simp only [Finset.sum_range_succ, Nat.cast_zero, Nat.cast_succ, add_assoc]\n    have h1 : 0 \u2264 (x n - y n) ^ 2 := by nlinarith [hx n, hy n]\n    nlinarith [hn, hx n, hy n, h1]\n  exact this\n  <;> try norm_num\n  <;> try linarith\n  <;> try nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (x y : \u2115 \u2192 \u211d) (n : \u2115) (hx : \u2200 n, x n \u2265 0) (hy : \u2200 n, y n \u2265 0) :\n            (\u2211 i in Finset.range n, x i * y i) \u2264\n             (\u2211 i in Finset.range n, x i ^ 2 + \u2211 i in Finset.range n, y i ^ 2) / 2:= by\n  induction' n with n hn\n  simp\n  simp only [Finset.sum_range_succ, hn, Nat.cast_zero, add_zero]\n  nlinarith [sq_nonneg (x n - y n), hx n, hy n]"
  ]
 },
 {
  "old": "(n : \u2115) : choose (2 * n) n < 2^(2 * n) := by",
  "new": "(n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two (n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by\n  induction' hn with k hk IH\n  <;> simp_all [fib_add_two, Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm]\n  <;> omega\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two (n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by\n  induction' hn with n hn IH\n  norm_num [fib_add_two]\n  rw [fib_add_two]\n  simp [Nat.Coprime, Nat.gcd_comm, fib_add_two, fib_two_mul_add_one, mul_one,\n    Nat.gcd_mul_left, Nat.gcd_one_left]\n  <;> omega\n  <;> simp [Nat.Coprime, Nat.gcd_comm, fib_add_two, fib_two_mul_add_one, mul_one,\n    Nat.gcd_mul_left, Nat.gcd_one_left]\n  <;> omega\n  <;> simp [Nat.Coprime, Nat.gcd_comm, fib_add_two, fib_two_mul_add_one, mul_one,\n    Nat.gcd_mul_left, Nat.gcd_one_left]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two (n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by\n  induction' hn with n hn <;> simp_all [fib_add_two, Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm]\n  all_goals\n    omega\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two (n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by\n  induction' hn with n hn IH\n  simp [Nat.coprime_iff_gcd_eq_one, fib_gcd, fib_one, fib_two, le_refl]\n  rw [Nat.coprime_iff_gcd_eq_one, fib_add_two, Nat.gcd_comm]\n  simpa [Nat.coprime_iff_gcd_eq_one, fib_gcd, fib_one, fib_two, le_refl] using IH"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : (a / Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) + b / Real.sqrt (b ^ 2 + c ^ 2 + d ^ 2) + c / Real.sqrt (c ^ 2 + d ^ 2 + a ^ 2) + d / Real.sqrt (d ^ 2 + a ^ 2 + b ^ 2)) \u2264 (4 * Real.sqrt 3) / 3 := by",
  "new": ": Real.sqrt (Real.sqrt (1 + a ^ 2) ^ 2 + b ^ 2) + Real.sqrt (Real.sqrt (1 + b ^ 2) ^ 2 + c ^ 2) \u2264 Real.sqrt (1 + a ^ 2 + b ^ 2) + Real.sqrt (1 + b ^ 2 + c ^ 2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) ^ 2 + b ^ 2) + Real.sqrt (Real.sqrt (1 + b ^ 2) ^ 2 + c ^ 2) \u2264\n      Real.sqrt (1 + a ^ 2 + b ^ 2) + Real.sqrt (1 + b ^ 2 + c ^ 2):= by\n  have h\u2080 : 0 \u2264 Real.sqrt (1 + a ^ 2) := Real.sqrt_nonneg _\n  have h\u2081 : 0 \u2264 Real.sqrt (1 + b ^ 2) := Real.sqrt_nonneg _\n  have h\u2082 : 0 \u2264 Real.sqrt (1 + c ^ 2) := Real.sqrt_nonneg _\n  have h\u2083 :\n      Real.sqrt (Real.sqrt (1 + a ^ 2) ^ 2 + b ^ 2) \u2264 Real.sqrt (1 + a ^ 2 + b ^ 2) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_sqrt (show 0 \u2264 1 + a ^ 2 from by nlinarith)]\n  have h\u2084 :\n      Real.sqrt (Real.sqrt (1 + b ^ 2) ^ 2 + c ^ 2) \u2264 Real.sqrt (1 + b ^ 2 + c ^ 2) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_sqrt (show 0 \u2264 1 + b ^ 2 from by nlinarith)]\n  linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : (a^3 + b^3 + c^3) / (a + b + c) + (b^3 + c^3 + d^3) / (b + c + d) + (c^3 + d^3 + a^3) / (c + d + a) + (d^3 + a^3 + b^3) / (d + a + b) \u2265 (a + b + c + d)^2 / 4 := by",
  "new": ": \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192 (a^3 + b^3 + c^3) / (a + b + c) + (b^3 + c^3 + d^3) / (b + c + d) + (c^3 + d^3 + a^3) / (c + d + a) + (d^3 + a^3 + b^3) / (d + a + b) \u2265 (a + b + c + d)^2 / 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192\n   (a^3 + b^3 + c^3) / (a + b + c) + (b^3 + c^3 + d^3) / (b + c + d) + (c^3 + d^3 + a^3) / (c + d + a) + (d^3 + a^3 + b^3) / (d + a + b) \u2265 (a + b + c + d)^2 / 4:= by\n  intro a b c d ha hb hc hd\n  have h1 : (a^3 + b^3 + c^3) / (a + b + c) \u2265 (a^2 + b^2 + c^2) / 3 := by\n    rw [ge_iff_le, div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c)]\n  have h2 : (b^3 + c^3 + d^3) / (b + c + d) \u2265 (b^2 + c^2 + d^2) / 3 := by\n    rw [ge_iff_le, div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (b - c), sq_nonneg (b - d), sq_nonneg (c - d)]\n  have h3 : (c^3 + d^3 + a^3) / (c + d + a) \u2265 (c^2 + d^2 + a^2) / 3 := by\n    rw [ge_iff_le, div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (c - d), sq_nonneg (c - a), sq_nonneg (d - a)]\n  have h4 : (d^3 + a^3 + b^3) / (d + a + b) \u2265 (d^2 + a^2 + b^2) / 3 := by\n    rw [ge_iff_le, div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (d - a), sq_nonneg (d - b), sq_nonneg (a - b)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (a - d), sq_nonneg (b - c), sq_nonneg (b - d), sq_nonneg (c - d)]\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192\n   (a^3 + b^3 + c^3) / (a + b + c) + (b^3 + c^3 + d^3) / (b + c + d) + (c^3 + d^3 + a^3) / (c + d + a) + (d^3 + a^3 + b^3) / (d + a + b) \u2265 (a + b + c + d)^2 / 4:= by\n  intro a b c d h\u2080 h\u2081 h\u2082 h\u2083\n  have h\u2084 : (a^3 + b^3 + c^3) / (a + b + c) \u2265 (a^2 + b^2 + c^2) / 3 := by\n    rw [ge_iff_le]\n    apply (le_div_iff (by positivity)).mpr\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c)]\n  have h\u2085 : (b^3 + c^3 + d^3) / (b + c + d) \u2265 (b^2 + c^2 + d^2) / 3 := by\n    rw [ge_iff_le]\n    apply (le_div_iff (by positivity)).mpr\n    nlinarith [sq_nonneg (b - c), sq_nonneg (b - d), sq_nonneg (c - d)]\n  have h\u2086 : (c^3 + d^3 + a^3) / (c + d + a) \u2265 (c^2 + d^2 + a^2) / 3 := by\n    rw [ge_iff_le]\n    apply (le_div_iff (by positivity)).mpr\n    nlinarith [sq_nonneg (c - d), sq_nonneg (c - a), sq_nonneg (d - a)]\n  have h\u2087 : (d^3 + a^3 + b^3) / (d + a + b) \u2265 (d^2 + a^2 + b^2) / 3 := by\n    rw [ge_iff_le]\n    apply (le_div_iff (by positivity)).mpr\n    nlinarith [sq_nonneg (d - a), sq_nonneg (d - b), sq_nonneg (a - b)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (a - d), sq_nonneg (b - c),\n    sq_nonneg (b - d), sq_nonneg (c - d)]\n  <;> try norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = a * b * c) : 4 + Real.sqrt ((a^2 + 1) * (b^2 + 1) * (c^2 + 1)) \u2265 2 * (Real.sqrt (a^2 + 1) + Real.sqrt (b^2 + 1) + Real.sqrt (c^2 + 1)) := by",
  "new": "(a b : \u2115) (hab : a ^ 2 + b ^ 2 + 1 = a * b * 2) : Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (hab : a ^ 2 + b ^ 2 + 1 = a * b * 2) :\n  Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b:= by\n  by_cases h : Nat.Coprime a b <;> simp [h]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (hab : a ^ 2 + b ^ 2 + 1 = a * b * 2) :\n  Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b:= by\n  by_cases h : Nat.Coprime a b\n  exact Or.inl h\n  exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (hab : a ^ 2 + b ^ 2 + 1 = a * b * 2) :\n  Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b:= by\n  by_cases h : a.Coprime b\n  exact Or.inl h\n  exact Or.inr h\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (hab : a ^ 2 + b ^ 2 + 1 = a * b * 2) :\n  Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b:= by\n  by_cases h : Nat.Coprime a b <;> simp_all\n  <;> simp_all only [Nat.coprime_iff_gcd_eq_one, not_true, not_false_iff]\n  <;> simp_all [Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;> omega\n  <;> simp_all"
  ]
 },
 {
  "old": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 2 * a + b + c = 2 \u2192 1 / (a + 1) / (b + 1) + 1 / (b + 1) / (c + 1) + 1 / (c + 1) / (a + 1) \u2265 12 / (3 + 4 * (a + b + c)) := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 1 \u2192 1 / a / b + 1 / b / c + 1 / c / a \u2265 9 / (a + b + c):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 1 \u2192\n   1 / a / b + 1 / b / c + 1 / c / a \u2265 9 / (a + b + c):= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have h\u2081 : 0 < a + b + c := by linarith\n  have h\u2082 : 0 < a * b := by positivity\n  have h\u2083 : 0 < b * c := by positivity\n  have h\u2084 : 0 < c * a := by positivity\n  have h\u2085 : 0 < (a * b) * (b * c) := by positivity\n  have h\u2086 : 0 < (b * c) * (c * a) := by positivity\n  have h\u2087 : 0 < (c * a) * (a * b) := by positivity\n  have h\u2088 : 0 < a * b * c := by positivity\n  have h\u2089 : 0 < a * b * c * (a * b) := by positivity\n  have h\u2081\u2080 : 0 < a * b * c * (b * c) := by positivity\n  have h\u2081\u2081 : 0 < a * b * c * (c * a) := by positivity\n  field_simp [habc]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 1 \u2192\n   1 / a / b + 1 / b / c + 1 / c / a \u2265 9 / (a + b + c):= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have h\u2081 : 0 < a * b := by nlinarith\n  have h\u2082 : 0 < b * c := by nlinarith\n  have h\u2083 : 0 < c * a := by nlinarith\n  have h\u2084 : 0 < a * b * (b * c) := by nlinarith\n  have h\u2085 : 0 < b * c * (c * a) := by nlinarith\n  have h\u2086 : 0 < c * a * (a * b) := by nlinarith\n  have h\u2087 : 0 < (a * b) * (b * c) * (c * a) := by nlinarith\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087]\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  nlinarith\n  nlinarith"
  ]
 },
 {
  "old": "(A B : Matrix (Fin 2) (Fin 2) \u211d) (h : A ^ (2011 : \u2115) = (A - B) ^ (2011 : \u2115)) : 0 \u2264 (A * B + B * A).det := by",
  "new": "(A : Matrix (Fin 2) (Fin 2) \u211d) (h : 0 \u2264 (A - 1 \u2022 (1 : Matrix (Fin 2) (Fin 2) \u211d)).det) : (A - 1 \u2022 (1 : Matrix (Fin 2) (Fin 2) \u211d)).det = 0 \u2228 0 < (A - 1 \u2022 (1 : Matrix (Fin 2) (Fin 2) \u211d)).det:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mat_det_cases (A : Matrix (Fin 2) (Fin 2) \u211d) (h : 0 \u2264 (A - 1 \u2022 (1 : Matrix (Fin 2) (Fin 2) \u211d)).det) :\n      (A - 1 \u2022 (1 : Matrix (Fin 2) (Fin 2) \u211d)).det = 0 \u2228 0 < (A - 1 \u2022 (1 : Matrix (Fin 2) (Fin 2) \u211d)).det:= by\n  rcases eq_or_ne ((A - 1 \u2022 (1 : Matrix (Fin 2) (Fin 2) \u211d)).det) 0 with h' | h'\n  left\n  exact h'\n  right\n  exact lt_of_le_of_ne h h'.symm",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mat_det_cases (A : Matrix (Fin 2) (Fin 2) \u211d) (h : 0 \u2264 (A - 1 \u2022 (1 : Matrix (Fin 2) (Fin 2) \u211d)).det) :\n      (A - 1 \u2022 (1 : Matrix (Fin 2) (Fin 2) \u211d)).det = 0 \u2228 0 < (A - 1 \u2022 (1 : Matrix (Fin 2) (Fin 2) \u211d)).det:= by\n  cases' lt_or_eq_of_le h with h h <;>\n  simp_all [h]"
  ]
 },
 {
  "old": ": \u220f' n : \u2115, (1 - (1:\u211d) / (2 * n) ^ 6) = 4 * Real.cosh (Real.sqrt 3 * \u03c0 / 2) / \u03c0 ^ 3 := by",
  "new": "(i : \u2115) (hi : \u220f j \u2208 Finset.range 4, (1 - (1 : \u211d) / (2 * j.succ) ^ 6) * (1 + (1 : \u211d) / (2 * j.succ) ^ 6) = 1) : Nat.Coprime (2 * i) (4 * i) \u2228 i = 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_mul_eq_one (i : \u2115) (hi : \u220f j \u2208 Finset.range 4, (1 - (1 : \u211d) / (2 * j.succ) ^ 6) * (1 + (1 : \u211d) / (2 * j.succ) ^ 6) = 1) :  Nat.Coprime (2 * i) (4 * i) \u2228 i = 0:= by\n  norm_num [Finset.prod_range_succ, Finset.prod_range_one, Nat.coprime_mul_iff_right] at hi\n  <;> aesop\n  <;> aesop\n  <;> aesop"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : (d + a ^ 2) / (d + b * c) + (d + b ^ 2) / (d + c * a) + (d + c ^ 2) / (d + a * b) \u2265 3 := by",
  "new": ": \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192 (d + a ^ 2) / (d + b * c) + (d + b ^ 2) / (d + c * a) + (d + c ^ 2) / (d + a * b) \u2265 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192\n   (d + a ^ 2) / (d + b * c) + (d + b ^ 2) / (d + c * a) + (d + c ^ 2) / (d + a * b) \u2265 3:= by\n  intro a b c d ha hb hc hd\n  have h\u2080 : 0 < a * b := by positivity\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < a * c := by positivity\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_nonneg h\u2080.le h\u2081.le, mul_nonneg h\u2081.le h\u2082.le, mul_nonneg h\u2082.le h\u2080.le,\n    mul_nonneg (sq_nonneg (a - b)) hd.le, mul_nonneg (sq_nonneg (b - c)) hd.le, mul_nonneg (sq_nonneg (c - a)) hd.le,\n    mul_nonneg (sq_nonneg (a - b)) h\u2080.le, mul_nonneg (sq_nonneg (b - c)) h\u2081.le, mul_nonneg (sq_nonneg (c - a)) h\u2082.le]"
  ]
 },
 {
  "old": "(a b : \u211d) : (a - b) ^ 2 / (8 * a) \u2264 (a + b) / 2 - Real.sqrt (a * b) \u2227 (a + b) / 2 - Real.sqrt (a * b) \u2264 (a - b) ^ 2 / (8 * b) := by",
  "new": "(x y : \u211d) (hx : 0 < x) (hy : 0 < y) : Real.sqrt (2 * (x + y) ^ 2) / 4 \u2265 (x * Real.sqrt y - y * Real.sqrt x) / 2 \u2227 (x * Real.sqrt y - y * Real.sqrt x) / 2 \u2265 Real.sqrt (2 * (x + y) ^ 2) / 4 \u2194 Real.sqrt (2 * (x + y) ^ 2) / 4 = (x * Real.sqrt y - y * Real.sqrt x) / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 < x) (hy : 0 < y)  :\n     Real.sqrt (2 * (x + y) ^ 2) / 4 \u2265 (x * Real.sqrt y - y * Real.sqrt x) / 2 \u2227\n     (x * Real.sqrt y - y * Real.sqrt x) / 2 \u2265 Real.sqrt (2 * (x + y) ^ 2) / 4 \u2194\n     Real.sqrt (2 * (x + y) ^ 2) / 4 = (x * Real.sqrt y - y * Real.sqrt x) / 2:= by\n  constructor\n  intro h\n  nlinarith [h.1, h.2]\n  intro h\n  constructor <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 < x) (hy : 0 < y)  :\n     Real.sqrt (2 * (x + y) ^ 2) / 4 \u2265 (x * Real.sqrt y - y * Real.sqrt x) / 2 \u2227\n     (x * Real.sqrt y - y * Real.sqrt x) / 2 \u2265 Real.sqrt (2 * (x + y) ^ 2) / 4 \u2194\n     Real.sqrt (2 * (x + y) ^ 2) / 4 = (x * Real.sqrt y - y * Real.sqrt x) / 2:= by\n  constructor\n  intro h\n  have h\u2081 := h.1\n  have h\u2082 := h.2\n  linarith\n  intro h\n  constructor\n  linarith\n  linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 < x) (hy : 0 < y)  :\n     Real.sqrt (2 * (x + y) ^ 2) / 4 \u2265 (x * Real.sqrt y - y * Real.sqrt x) / 2 \u2227\n     (x * Real.sqrt y - y * Real.sqrt x) / 2 \u2265 Real.sqrt (2 * (x + y) ^ 2) / 4 \u2194\n     Real.sqrt (2 * (x + y) ^ 2) / 4 = (x * Real.sqrt y - y * Real.sqrt x) / 2:= by\n  constructor\n  rintro h\n  nlinarith [h.1, h.2]\n  rintro h\n  constructor <;> linarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 < x) (hy : 0 < y)  :\n     Real.sqrt (2 * (x + y) ^ 2) / 4 \u2265 (x * Real.sqrt y - y * Real.sqrt x) / 2 \u2227\n     (x * Real.sqrt y - y * Real.sqrt x) / 2 \u2265 Real.sqrt (2 * (x + y) ^ 2) / 4 \u2194\n     Real.sqrt (2 * (x + y) ^ 2) / 4 = (x * Real.sqrt y - y * Real.sqrt x) / 2:= by\n  constructor\n  intro h\n  linarith [h.1, h.2]\n  intro h\n  exact by\n    constructor\n    \u00b7 nlinarith [Real.sqrt_nonneg (2 * (x + y) ^ 2), Real.sqrt_nonneg y, Real.sqrt_nonneg x, sq_sqrt (show 0 \u2264 2 * (x + y) ^ 2 from by positivity),\n      sq_sqrt (show 0 \u2264 y from by positivity), sq_sqrt (show 0 \u2264 x from by positivity),\n      mul_self_nonneg (x - y), mul_self_nonneg (Real.sqrt y - Real.sqrt x)]\n    \u00b7 nlinarith [Real.sqrt_nonneg (2 * (x + y) ^ 2), Real.sqrt_nonneg y, Real.sqrt_nonneg x,\n      sq_sqrt (show 0 \u2264 2 * (x + y) ^ 2 from by positivity), sq_sqrt (show 0 \u2264 y from by positivity),\n      sq_sqrt (show 0 \u2264 x from by positivity), mul_self_nonneg (x - y), mul_self_nonneg (Real.sqrt y - Real.sqrt x)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : 1 / a + 1 / b + 1 / c \u2265 25 / (478 * a * b * c + 1) := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 1 \u2227 b \u2265 1 \u2227 c \u2265 1 \u2192 (a ^ 2 + 1) * (b ^ 2 + 1) * (c ^ 2 + 1) \u2265 2 * (a * b + a * c + b * c) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 1 \u2227 b \u2265 1 \u2227 c \u2265 1 \u2192 (a ^ 2 + 1) * (b ^ 2 + 1) * (c ^ 2 + 1) \u2265 2 * (a * b + a * c + b * c) := by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  simp only [mul_add, mul_one, add_mul, one_mul]\n  nlinarith [pow_two_nonneg (a - 1), pow_two_nonneg (b - 1), pow_two_nonneg (c - 1),\n    mul_nonneg (sub_nonneg.mpr ha) (sub_nonneg.mpr hb),\n    mul_nonneg (sub_nonneg.mpr ha) (sub_nonneg.mpr hc),\n    mul_nonneg (sub_nonneg.mpr hb) (sub_nonneg.mpr hc),\n    mul_nonneg (sq_nonneg (a - 1)) (sq_nonneg (b - 1)),\n    mul_nonneg (sq_nonneg (a - 1)) (sq_nonneg (c - 1)),\n    mul_nonneg (sq_nonneg (b - 1)) (sq_nonneg (c - 1))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 1 \u2227 b \u2265 1 \u2227 c \u2265 1 \u2192 (a ^ 2 + 1) * (b ^ 2 + 1) * (c ^ 2 + 1) \u2265 2 * (a * b + a * c + b * c) := by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  nlinarith [sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1), mul_nonneg (sq_nonneg a) (sq_nonneg b),\n    mul_nonneg (sq_nonneg a) (sq_nonneg c), mul_nonneg (sq_nonneg b) (sq_nonneg c),\n    mul_nonneg (sq_nonneg (a - 1)) (sq_nonneg (b - 1)), mul_nonneg (sq_nonneg (a - 1)) (sq_nonneg (c - 1)),\n    mul_nonneg (sq_nonneg (b - 1)) (sq_nonneg (c - 1))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 1 \u2227 b \u2265 1 \u2227 c \u2265 1 \u2192 (a ^ 2 + 1) * (b ^ 2 + 1) * (c ^ 2 + 1) \u2265 2 * (a * b + a * c + b * c) := by\n  intro a b c \u27e8ha, hb, hc\u27e9\n  simp only [mul_add, add_mul, mul_one, one_mul, add_assoc]\n  nlinarith [mul_le_mul_of_nonneg_right ha (sq_nonneg b),\n    mul_le_mul_of_nonneg_right hb (sq_nonneg c),\n    mul_le_mul_of_nonneg_right hc (sq_nonneg a),\n    mul_le_mul_of_nonneg_right (mul_le_mul_of_nonneg_right ha (sq_nonneg b)) (sq_nonneg c),\n    mul_le_mul_of_nonneg_right (mul_le_mul_of_nonneg_right hb (sq_nonneg c)) (sq_nonneg a),\n    mul_le_mul_of_nonneg_right (mul_le_mul_of_nonneg_right hc (sq_nonneg a)) (sq_nonneg b),\n    sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1), sq_nonneg (a * b - 1), sq_nonneg (a * c - 1), sq_nonneg (b * c - 1)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2081 : c \u2264 a + b) (h\u2082 : b \u2264 a + c) (h\u2083 : a \u2264 b + c) : (a + b + c) ^ 3 \u2265 18 * a * b * c * (b^2 + c^2) / (b + c) ^ 2 * (c^2 + a^2) / (c + a) ^ 2 * (a^2 + b^2) / (a + b) ^ 2 := by",
  "new": ": \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 a ^ 2 / b + b ^ 2 / c + c ^ 2 / a \u2265 2 * (a * b / (a + b) + b * c / (b + c) + c * a / (c + a)):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192\n   a ^ 2 / b + b ^ 2 / c + c ^ 2 / a \u2265 2 * (a * b / (a + b) + b * c / (b + c) + c * a / (c + a)):= by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  have h1 : 0 < a * b := by positivity\n  have h2 : 0 < b * c := by positivity\n  have h3 : 0 < c * a := by positivity\n  have h4 : 0 < a * b * c := by positivity\n  have h5 : 0 < a * b * c * (a + b) := by positivity\n  have h6 : 0 < a * b * c * (b + c) := by positivity\n  have h7 : 0 < a * b * c * (c + a) := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a ^ 2 * c - b ^ 2 * a), sq_nonneg (b ^ 2 * a - c ^ 2 * b), sq_nonneg (c ^ 2 * b - a ^ 2 * c),\n    sq_nonneg (a * b * c), sq_nonneg (a * b * c * (a - b)), sq_nonneg (a * b * c * (b - c)), sq_nonneg (a * b * c * (c - a))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192\n   a ^ 2 / b + b ^ 2 / c + c ^ 2 / a \u2265 2 * (a * b / (a + b) + b * c / (b + c) + c * a / (c + a)):= by\n  intro a b c \u27e8ha, hb, hc\u27e9\n  have : a * b > 0 := by positivity\n  have : b * c > 0 := by positivity\n  have : c * a > 0 := by positivity\n  have h\u2080 : a ^ 2 / b + b ^ 2 / c + c ^ 2 / a \u2265 2 * (a * b / (a + b) + b * c / (b + c) + c * a / (c + a)) := by\n    have h\u2081 : a ^ 2 / b + b ^ 2 / c + c ^ 2 / a \u2265 a + b + c := by\n      field_simp [ha.ne', hb.ne', hc.ne']\n      rw [le_div_iff (by positivity), \u2190 sub_nonneg]\n      ring_nf\n      nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n    have h\u2082 : 2 * (a * b / (a + b) + b * c / (b + c) + c * a / (c + a)) \u2264 a + b + c := by\n      have h\u2083 : a * b / (a + b) \u2264 (a + b) / 4 := by\n        rw [div_le_div_iff (by positivity) (by positivity)]\n        nlinarith [sq_nonneg (a - b)]\n      have h\u2084 : b * c / (b + c) \u2264 (b + c) / 4 := by\n        rw [div_le_div_iff (by positivity) (by positivity)]\n        nlinarith [sq_nonneg (b - c)]\n      have h\u2085 : c * a / (c + a) \u2264 (c + a) / 4 := by\n        rw [div_le_div_iff (by positivity) (by positivity)]\n        nlinarith [sq_nonneg (c - a)]\n      nlinarith\n    linarith\n  exact h\u2080"
  ]
 },
 {
  "old": "{a b c : \u211d} (ha : a > 0) (hb : b > 0) (hc : c > 0) (habc : a * b * c = 1) : (a + b + c) * (a^2 + b^2 + c^2 - a * b - b * c - c * a) \u2265 (4 * (a^2 + b^2 + c^2 - a * b - b * c - c * a) * (a^2 + b^2 + c^2 + a * b + b * c + c * a)) / (a * b + b * c + c * a)^2 := by",
  "new": "(a b c : \u211d) (hab : a > 0) (hbc : b > 0) (hca : c > 0) (h : a * b * c = 1) : (a + b + c) ^ 2 \u2265 9 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_10_2 (a b c : \u211d) (hab : a > 0) (hbc : b > 0) (hca : c > 0) (h : a * b * c = 1) : (a + b + c) ^ 2 \u2265 9 := by\n  simp only [sq, mul_add, add_mul, mul_comm, mul_left_comm]\n  nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n    mul_pos hab hbc, mul_pos hab hca, mul_pos hbc hca]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_10_2 (a b c : \u211d) (hab : a > 0) (hbc : b > 0) (hca : c > 0) (h : a * b * c = 1) : (a + b + c) ^ 2 \u2265 9 := by\n  simp only [add_assoc]\n  have d : 0 < a * b := mul_pos hab hbc\n  have e : 0 < b * c := mul_pos hbc hca\n  have f : 0 < c * a := mul_pos hca hab\n  nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), sq_nonneg (a * b - 1), sq_nonneg (b * c - 1), sq_nonneg (c * a - 1)]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_10_2 (a b c : \u211d) (hab : a > 0) (hbc : b > 0) (hca : c > 0) (h : a * b * c = 1) : (a + b + c) ^ 2 \u2265 9 := by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (a - c), mul_pos hab hbc, mul_pos hbc hca, mul_pos hab hca, sq_nonneg (a + b + c), sq_nonneg (a + b + c - 3)]\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : (a / Real.sqrt (11 * (b ^ 2 + c ^ 2 + d ^ 2) + 5 * (b * c + b * d + c * d)) + b / Real.sqrt (11 * (a ^ 2 + c ^ 2 + d ^ 2) + 5 * (a * c + a * d + c * d)) + c / Real.sqrt (11 * (a ^ 2 + b ^ 2 + d ^ 2) + 5 * (a * b + a * d + b * d)) + d / Real.sqrt (11 * (a ^ 2 + b ^ 2 + c ^ 2) + 5 * (a * b + a * c + b * c))) \u2265 1 / Real.sqrt 3 := by",
  "new": ": Real.sqrt (11 * (b ^ 2 + c ^ 2 + d ^ 2) + 5 * (b * c + b * d + c * d)) \u2264 11 * (b ^ 2 + c ^ 2 + d ^ 2) + 5 * (b * c + b * d + c * d) + 1 / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (11 * (b ^ 2 + c ^ 2 + d ^ 2) + 5 * (b * c + b * d + c * d)) \u2264 11 * (b ^ 2 + c ^ 2 + d ^ 2) + 5 * (b * c + b * d + c * d) + 1 / 2:= by\n  apply Real.sqrt_le_iff.mpr\n  constructor <;> norm_num <;>\n    nlinarith [sq_nonneg (b + c + d), sq_nonneg (b - c), sq_nonneg (b - d), sq_nonneg (c - d)]\n  <;>\n    linarith\n  <;>\n    linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (11 * (b ^ 2 + c ^ 2 + d ^ 2) + 5 * (b * c + b * d + c * d)) \u2264 11 * (b ^ 2 + c ^ 2 + d ^ 2) + 5 * (b * c + b * d + c * d) + 1 / 2:= by\n  have : 0 \u2264 (b - c) ^ 2 + (b - d) ^ 2 + (c - d) ^ 2 := by positivity\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  all_goals norm_num\n  all_goals nlinarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (11 * (b ^ 2 + c ^ 2 + d ^ 2) + 5 * (b * c + b * d + c * d)) \u2264 11 * (b ^ 2 + c ^ 2 + d ^ 2) + 5 * (b * c + b * d + c * d) + 1 / 2:= by\n  have h\u2080 : 0 \u2264 11 * (b ^ 2 + c ^ 2 + d ^ 2) + 5 * (b * c + b * d + c * d) := by\n    nlinarith [sq_nonneg (b + c + d), sq_nonneg (b - c), sq_nonneg (b - d), sq_nonneg (c - d)]\n  have h\u2081 : 0 \u2264 (b - c) ^ 2 + (b - d) ^ 2 + (c - d) ^ 2 := by\n    nlinarith\n  have h\u2082 : 0 \u2264 Real.sqrt (11 * (b ^ 2 + c ^ 2 + d ^ 2) + 5 * (b * c + b * d + c * d)) := by\n    apply Real.sqrt_nonneg\n  nlinarith [sq_sqrt h\u2080, h\u2081]\n  <;> norm_num"
  ]
 },
 {
  "old": "(x y z X Y Z : \u211d) (hx : X > 0 \u2227 Y > 0 \u2227 Z > 0)(habc : x = 1/X \u2227 y = 1/Y \u2227 z = 1/Z) : 3 / 2 \u2264 x^2 / (y^2 + z * x) + y^2 / (z^2 + x * y) + z^2 / (x^2 + y * z) \u2194 3 / 2 \u2264 Z^2 / (Y^2 + Z * X) + Y^2 / (Z^2 + X * Y) + X^2 / (Y^2 + X * Z) := by",
  "new": "(A B C : \u211d) (h\u2080 : 0 < A \u2227 0 < B \u2227 0 < C) (h\u2081 : A ^ 2 + B ^ 2 + C ^ 2 = 1) : 3 / 2 \u2264 1 / (A ^ 2 + B * C) + 1 / (B ^ 2 + C * A) + 1 / (C ^ 2 + A * B):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_T10_T11 (A B C : \u211d) (h\u2080 : 0 < A \u2227 0 < B \u2227 0 < C) (h\u2081 : A ^ 2 + B ^ 2 + C ^ 2 = 1) : 3 / 2 \u2264 1 / (A ^ 2 + B * C) + 1 / (B ^ 2 + C * A) + 1 / (C ^ 2 + A * B):= by\n  have h\u2082 : 0 < A := h\u2080.1\n  have h\u2083 : 0 < B := h\u2080.2.1\n  have h\u2084 : 0 < C := h\u2080.2.2\n  have h\u2085 : 0 < A * B := by positivity\n  have h\u2086 : 0 < B * C := by positivity\n  have h\u2087 : 0 < C * A := by positivity\n  have h\u2088 : 0 < A * B * (B * C) := by positivity\n  have h\u2089 : 0 < B * C * (C * A) := by positivity\n  have h\u2081\u2080 : 0 < C * A * (A * B) := by positivity\n  have h\u2081\u2081 : 0 < A ^ 2 + B * C := by positivity\n  have h\u2081\u2082 : 0 < B ^ 2 + C * A := by positivity\n  have h\u2081\u2083 : 0 < C ^ 2 + A * B := by positivity\n  have h\u2081\u2084 : 1 / (A ^ 2 + B * C) \u2265 1 / 2 := by\n    rw [ge_iff_le, le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (A - B), h\u2081]\n  have h\u2081\u2085 : 1 / (B ^ 2 + C * A) \u2265 1 / 2 := by\n    rw [ge_iff_le, le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (B - C), h\u2081]\n  have h\u2081\u2086 : 1 / (C ^ 2 + A * B) \u2265 1 / 2 := by\n    rw [ge_iff_le, le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (C - A), h\u2081]\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_T10_T11 (A B C : \u211d) (h\u2080 : 0 < A \u2227 0 < B \u2227 0 < C) (h\u2081 : A ^ 2 + B ^ 2 + C ^ 2 = 1) : 3 / 2 \u2264 1 / (A ^ 2 + B * C) + 1 / (B ^ 2 + C * A) + 1 / (C ^ 2 + A * B):= by\n  rcases h\u2080 with \u27e8h\u2080A, h\u2080B, h\u2080C\u27e9\n  have h\u2082 : 0 < A * B := by positivity\n  have h\u2083 : 0 < B * C := by positivity\n  have h\u2084 : 0 < C * A := by positivity\n  have h\u2085 : 0 < A * B * (B * C) := by positivity\n  have h\u2086 : 0 < B * C * (C * A) := by positivity\n  have h\u2087 : 0 < C * A * (A * B) := by positivity\n  have h\u2088 : 0 < (A * B) * (B * C) * (C * A) := by positivity\n  have h\u2089 : 1 / (A ^ 2 + B * C) + 1 / (B ^ 2 + C * A) + 1 / (C ^ 2 + A * B) \u2265 3 / 2 := by\n    have h\u2081\u2080 : 1 / (A ^ 2 + B * C) \u2265 1 / 2 := by\n      rw [ge_iff_le]\n      apply one_div_le_one_div_of_le\n      nlinarith\n      nlinarith\n    have h\u2081\u2081 : 1 / (B ^ 2 + C * A) \u2265 1 / 2 := by\n      rw [ge_iff_le]\n      apply one_div_le_one_div_of_le\n      nlinarith\n      nlinarith\n    have h\u2081\u2082 : 1 / (C ^ 2 + A * B) \u2265 1 / 2 := by\n      rw [ge_iff_le]\n      apply one_div_le_one_div_of_le\n      nlinarith\n      nlinarith\n    linarith\n  exact h\u2089",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_T10_T11 (A B C : \u211d) (h\u2080 : 0 < A \u2227 0 < B \u2227 0 < C) (h\u2081 : A ^ 2 + B ^ 2 + C ^ 2 = 1) : 3 / 2 \u2264 1 / (A ^ 2 + B * C) + 1 / (B ^ 2 + C * A) + 1 / (C ^ 2 + A * B):= by\n  have h\u2082 : 0 < A := by linarith\n  have h\u2083 : 0 < B := by linarith\n  have h\u2084 : 0 < C := by linarith\n  have h\u2085 : 0 < A * B := by positivity\n  have h\u2086 : 0 < B * C := by positivity\n  have h\u2087 : 0 < C * A := by positivity\n  have h\u2088 : 0 < A * B * (B * C) := by positivity\n  have h\u2089 : 0 < B * C * (C * A) := by positivity\n  have h\u2081\u2080 : 0 < C * A * (A * B) := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (A - B), sq_nonneg (B - C), sq_nonneg (C - A),\n    mul_self_nonneg (A * B - B * C), mul_self_nonneg (B * C - C * A), mul_self_nonneg (C * A - A * B)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_T10_T11 (A B C : \u211d) (h\u2080 : 0 < A \u2227 0 < B \u2227 0 < C) (h\u2081 : A ^ 2 + B ^ 2 + C ^ 2 = 1) : 3 / 2 \u2264 1 / (A ^ 2 + B * C) + 1 / (B ^ 2 + C * A) + 1 / (C ^ 2 + A * B):= by\n  rcases h\u2080 with \u27e8h\u2080\u2080, h\u2080\u2081, h\u2080\u2082\u27e9\n  have h\u2082 : 0 < A * B := by positivity\n  have h\u2083 : 0 < A * C := by positivity\n  have h\u2084 : 0 < B * C := by positivity\n  have h\u2085 : 0 < (A * B) * (A * C) := by positivity\n  have h\u2086 : 0 < (A * B) * (B * C) := by positivity\n  have h\u2087 : 0 < (A * C) * (B * C) := by positivity\n  have h\u2088 : 0 < A * B * C := by positivity\n  have h\u2089 : 1 / (A ^ 2 + B * C) \u2265 1 / 2 := by\n    rw [ge_iff_le, le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (A - B)]\n  have h\u2081\u2080 : 1 / (B ^ 2 + C * A) \u2265 1 / 2 := by\n    rw [ge_iff_le, le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (B - C)]\n  have h\u2081\u2081 : 1 / (C ^ 2 + A * B) \u2265 1 / 2 := by\n    rw [ge_iff_le, le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (C - A)]\n  linarith\n  <;> norm_num\n  <;> linarith"
  ]
 },
 {
  "old": ": Real.log 34 / Real.log 17 < 1 + 1 / 4 := by",
  "new": "(x : \u211d) (hx : 1 < x) : Real.log (x - 1) < x - 1 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_div_succ_lt_log (x : \u211d) (hx : 1 < x) :\n    Real.log (x - 1) < x - 1 := by\n  refine' (log_le_sub_one_of_pos (by linarith)).trans_lt _\n  linarith"
  ]
 },
 {
  "old": ": \u2200 a b c : \u211d, (a / (6 * a + b ^ 2 + c ^ 2) + b / (6 * b + a ^ 2 + c ^ 2) + c / (6 * c + a ^ 2 + b ^ 2) : \u211d) \u2264 3 / 8 := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a / (b + c) + b / (c + a) + c / (a + b) : \u211d) \u2265 3 / 4 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a / (b + c) + b / (c + a) + c / (a + b) : \u211d) \u2265 3 / 4  := by\n  have h\u2080 : 0 < a + b := add_pos ha hb\n  have h\u2081 : 0 < b + c := add_pos hb hc\n  have h\u2082 : 0 < c + a := add_pos hc ha\n  have h\u2083 : 0 < (b + c) * (c + a) := by positivity\n  have h\u2084 : 0 < (a + b) * (c + a) := by positivity\n  have h\u2085 : 0 < (a + b) * (b + c) := by positivity\n  field_simp [h\u2080.ne', h\u2081.ne', h\u2082.ne', h\u2083.ne', h\u2084.ne', h\u2085.ne']\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a / (b + c) + b / (c + a) + c / (a + b) : \u211d) \u2265 3 / 4  := by\n  field_simp [add_comm]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le,\n    mul_nonneg (sq_nonneg (a - b)) ha.le, mul_nonneg (sq_nonneg (b - c)) hb.le, mul_nonneg (sq_nonneg (c - a)) hc.le,\n    mul_nonneg (sq_nonneg (a - b)) hb.le, mul_nonneg (sq_nonneg (b - c)) hc.le, mul_nonneg (sq_nonneg (c - a)) ha.le,\n    mul_nonneg (sq_nonneg (a - b)) hc.le, mul_nonneg (sq_nonneg (b - c)) ha.le, mul_nonneg (sq_nonneg (c - a)) hb.le]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a / (b + c) + b / (c + a) + c / (a + b) : \u211d) \u2265 3 / 4  := by\n  have h\u2080 : 0 < b + c := by linarith\n  have h\u2081 : 0 < c + a := by linarith\n  have h\u2082 : 0 < a + b := by linarith\n  have h\u2083 : 0 < b * c := by positivity\n  have h\u2084 : 0 < c * a := by positivity\n  have h\u2085 : 0 < a * b := by positivity\n  field_simp [ha, hb, hc, h\u2080, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a / (b + c) + b / (c + a) + c / (a + b) : \u211d) \u2265 3 / 4  := by\n  have h\u2081 : 0 < b + c := by linarith\n  have h\u2082 : 0 < c + a := by linarith\n  have h\u2083 : 0 < a + b := by linarith\n  have h\u2084 : 0 < b * c := by positivity\n  have h\u2085 : 0 < c * a := by positivity\n  have h\u2086 : 0 < a * b := by positivity\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (b - c),\n    mul_self_nonneg (c - a)]"
  ]
 },
 {
  "old": "(\u03b8 : \u211d) : (max (|cos \u03b8|) (|cos (2 * \u03b8)|)) \u2265 1 / 2 := by",
  "new": ": Real.sqrt (Real.sqrt (1 + (x : \u211d) ^ 2) + 1) \u2264 \u221a4 * \u221a (1 + (x : \u211d) ^ 2) + 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt (Real.sqrt (1 + (x : \u211d) ^ 2) + 1) \u2264 \u221a4 * \u221a (1 + (x : \u211d) ^ 2) + 1:= by\n  have h\u2080 : 0 \u2264 Real.sqrt (1 + x ^ 2) := Real.sqrt_nonneg (1 + x ^ 2)\n  have h\u2081 : 0 \u2264 Real.sqrt (1 + x ^ 2) + 1 := by linarith\n  have h\u2082 : Real.sqrt (1 + x ^ 2) + 1 \u2265 0 := by linarith\n  have h\u2083 : Real.sqrt (1 + x ^ 2) + 1 \u2265 0 := by linarith\n  have h\u2084 : \u221a4 * \u221a (1 + x ^ 2) \u2265 0 := by positivity\n  have h\u2085 : Real.sqrt (Real.sqrt (1 + x ^ 2) + 1) \u2264 \u221a4 * \u221a (1 + x ^ 2) + 1 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_sqrt (show (0 : \u211d) \u2264 4 by norm_num),\n        sq_sqrt (show (0 : \u211d) \u2264 1 + x ^ 2 by positivity),\n        sq_nonneg (x ^ 2),\n        sq_nonneg (Real.sqrt (1 + x ^ 2) - 1)]\n  linarith\n  <;> norm_num"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) : 1 / Real.sqrt (1 + x) + 1 / Real.sqrt (1 + y) + 1 / Real.sqrt (1 + z) \u2264 3 / Real.sqrt 2 := by",
  "new": ": \u2200 x : \u211d, 0 < x \u2192 x ^ 2 / (1 + x) + x ^ 2 / (1 + x) ^ 2 + x ^ 2 / (1 + x) ^ 3 \u2264 3 * x ^ 2 / (1 + x) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, 0 < x \u2192 x ^ 2 / (1 + x) + x ^ 2 / (1 + x) ^ 2 + x ^ 2 / (1 + x) ^ 3 \u2264 3 * x ^ 2 / (1 + x) := by\n  intro x hx\n  rw [add_assoc]\n  apply le_of_sub_nonneg\n  field_simp\n  ring_nf\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, 0 < x \u2192 x ^ 2 / (1 + x) + x ^ 2 / (1 + x) ^ 2 + x ^ 2 / (1 + x) ^ 3 \u2264 3 * x ^ 2 / (1 + x) := by\n  intro x hx\n  have h\u2082 : 0 < x ^ 2 := pow_pos hx 2\n  have h\u2083 : 0 < x ^ 3 := pow_pos hx 3\n  have h\u2084 : 0 < x ^ 4 := pow_pos hx 4\n  field_simp [h\u2082, h\u2083, h\u2084]\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (x ^ 2 - 1)]\n  nlinarith\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, 0 < x \u2192 x ^ 2 / (1 + x) + x ^ 2 / (1 + x) ^ 2 + x ^ 2 / (1 + x) ^ 3 \u2264 3 * x ^ 2 / (1 + x) := by\n  intro x hx\n  refine' le_of_sub_nonneg _\n  field_simp [sq, pow_two, mul_assoc]\n  ring_nf\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, 0 < x \u2192 x ^ 2 / (1 + x) + x ^ 2 / (1 + x) ^ 2 + x ^ 2 / (1 + x) ^ 3 \u2264 3 * x ^ 2 / (1 + x) := by\n  intro x hx\n  have h\u2081 : 0 < x ^ 2 := sq_pos_of_pos hx\n  have h\u2082 : 0 < x ^ 2 * (1 + x) := by positivity\n  have h\u2083 : 0 < x ^ 2 * (1 + x) ^ 2 := by positivity\n  field_simp [h\u2081, h\u2082, h\u2083]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (x ^ 2 - x), sq_nonneg (x ^ 2 + x)]"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : (a^2 + b^2 + c^2 + a * b + b * c + c * a) * (b^2 + c^2 + d^2 + b * c + c * d + d * b) * (c^2 + d^2 + a^2 + c * d + d * a + a * c) * (d^2 + a^2 + b^2 + d * a + a * b + b * d) \u2265 (a * b + b * c + c * a + a * d + b * d + c * d)^4 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x^2 + y^2 + z^2 + x * y + y * z + z * x) * (x^2 + y^2 + z^2 - x * y - y * z - z * x) \u2264 (2 * (x^2 + y^2 + z^2))^2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   (x^2 + y^2 + z^2 + x * y + y * z + z * x) * (x^2 + y^2 + z^2 - x * y - y * z - z * x) \u2264 (2 * (x^2 + y^2 + z^2))^2:= by\n  simp only [mul_sub, mul_add, sub_mul, sub_eq_add_neg]\n  nlinarith [sq_nonneg (x^2 + y^2 + z^2 - x * y - y * z - z * x),\n    sq_nonneg (x^2 + y^2 + z^2 + x * y + y * z + z * x)]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   (x^2 + y^2 + z^2 + x * y + y * z + z * x) * (x^2 + y^2 + z^2 - x * y - y * z - z * x) \u2264 (2 * (x^2 + y^2 + z^2))^2:= by\n  ring_nf\n  nlinarith [sq_nonneg (x + y), sq_nonneg (y + z), sq_nonneg (z + x), sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  <;> assumption\n  <;> simp\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   (x^2 + y^2 + z^2 + x * y + y * z + z * x) * (x^2 + y^2 + z^2 - x * y - y * z - z * x) \u2264 (2 * (x^2 + y^2 + z^2))^2:= by\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x + y), sq_nonneg (y - z), sq_nonneg (y + z), sq_nonneg (z - x), sq_nonneg (z + x),\n    mul_self_nonneg (x^2 + y^2 + z^2 + x * y + y * z + z * x), mul_self_nonneg (x^2 + y^2 + z^2 - x * y - y * z - z * x)]\n  <;> linarith"
  ]
 },
 {
  "old": "(a b x : \u2115) (hx: Nat.Coprime x b) : Nat.gcd a b = Nat.gcd (x * a) b := by",
  "new": "{m n k : \u2115} (hn : n.Coprime k) : Nat.Coprime (m * n) k \u2194 Nat.Coprime m k:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_mul_iff_right {m n k : \u2115} (hn : n.Coprime k) :\n     Nat.Coprime (m * n) k \u2194 Nat.Coprime m k:= by\n  rw [Nat.coprime_mul_iff_left]\n  aesop\n  <;> simp [hn]\n  <;> aesop\n  <;> aesop"
  ]
 },
 {
  "old": "(n : \u2115) (z : Fin n \u2192 \u2102) (hn : Odd n) (hz : \u2200 i, \u2016z i\u2016 \u2264 1) : \u2016\u2211 i, z i ^ 2\u2016 \u2264 n - 1 + (\u2016\u2211 i, z i\u2016 ^ 2) := by",
  "new": "(n : \u2115) (x : Fin n \u2192 \u211d) (hx : \u2200 i, \u2016x i\u2016 \u2264 1) : \u2016\u2211 i : Fin n, x i ^ 2\u2016 \u2264 n:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem norm_sum_sq_le_of_le (n : \u2115) (x : Fin n \u2192 \u211d) (hx : \u2200 i, \u2016x i\u2016 \u2264 1) : \n      \u2016\u2211 i : Fin n, x i ^ 2\u2016 \u2264 n:= by\n  have : \u2200 i : Fin n, \u2016x i ^ 2\u2016 \u2264 1 := by\n    intro i\n    have : \u2016x i ^ 2\u2016 = \u2016x i\u2016 ^ 2 := by simp [Real.norm_eq_abs, sq]\n    rw [this]\n    exact pow_le_one 2 (norm_nonneg (x i)) (hx i)\n  calc\n    \u2016\u2211 i : Fin n, x i ^ 2\u2016 \u2264 \u2211 i : Fin n, \u2016x i ^ 2\u2016 := norm_sum_le _ _\n    _ \u2264 \u2211 i : Fin n, 1 := by\n      apply Finset.sum_le_sum\n      intro i _\n      apply this\n    _ = n := by simp"
  ]
 },
 {
  "old": "(t : \u211d) (n : \u2115) : 0 < n \u2192 t \u2208 Set.Icc 0 1 \u2192 1 / (n^2 * t^2) > 1 / (1 + n^2 * t^2) \u2227 1 / (1 + n^2 * t^2) \u2265 1 / (1 + n^2) := by",
  "new": "(x y : \u211d) (n : \u2115) (hn : 0 < n) (hy : 0 < y) (hx : 0 < x) : x \u2208 Set.Icc 0 y \u2192 \u2203 f : \u2115 \u2192 \u211d, f n = 1 / (1 + n ^ 2 * (x / y)) \u2227 f n \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (x y : \u211d) (n : \u2115) (hn : 0 < n) (hy : 0 < y) (hx : 0 < x) :   x \u2208 Set.Icc 0 y \u2192 \u2203  f : \u2115 \u2192 \u211d, f n = 1 / (1 + n ^ 2 * (x / y)) \u2227 f n \u2264 1:= by\n  intro hx'\n  use fun n => 1 / (1 + n ^ 2 * (x / y))\n  have h\u2081 : 0 < n ^ 2 * (x / y) := by\n    have h\u2082 : 0 < n ^ 2 := by positivity\n    exact mul_pos (by positivity) (div_pos hx hy)\n  have h\u2082 : 1 / (1 + n ^ 2 * (x / y)) \u2264 1 := by\n    rw [div_le_iff (by positivity)]\n    nlinarith\n  exact \u27e8rfl, h\u2082\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (x y : \u211d) (n : \u2115) (hn : 0 < n) (hy : 0 < y) (hx : 0 < x) :   x \u2208 Set.Icc 0 y \u2192 \u2203  f : \u2115 \u2192 \u211d, f n = 1 / (1 + n ^ 2 * (x / y)) \u2227 f n \u2264 1:= by\n  rintro \u27e8hxy, hxy'\u27e9\n  use fun n => 1 / (1 + n ^ 2 * (x / y))\n  constructor\n  <;> norm_num\n  <;> apply le_of_sub_nonneg\n  <;> field_simp\n  <;> ring_nf\n  <;> positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (x y : \u211d) (n : \u2115) (hn : 0 < n) (hy : 0 < y) (hx : 0 < x) :   x \u2208 Set.Icc 0 y \u2192 \u2203  f : \u2115 \u2192 \u211d, f n = 1 / (1 + n ^ 2 * (x / y)) \u2227 f n \u2264 1:= by\n  rintro \u27e8hx_left, hx_right\u27e9\n  use fun n => 1 / (1 + n ^ 2 * (x / y))\n  constructor\n  \u00b7 simp [hn, hx, hy]\n  \u00b7 have h : 0 < n := by assumption\n    apply le_of_sub_nonneg\n    field_simp\n    ring_nf\n    positivity"
  ]
 },
 {
  "old": "(p : \u2115) (hp : Nat.Prime p) (h : p = 4 * k + 3) (h1 : p \u2223 x ^ 2 + y ^ 2) : p \u2223 x \u2227 p \u2223 y := by",
  "new": "(p : \u2115) (hp : Nat.Prime p) (n : \u2115) : p.Coprime n \u2228 p \u2223 n := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (hp : Nat.Prime p) (n : \u2115) :\n    p.Coprime n \u2228 p \u2223 n := by\n  apply or_iff_not_imp_right.2\n  intro h\n  simp [Nat.Prime.coprime_iff_not_dvd hp, h]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (hp : Nat.Prime p) (n : \u2115) :\n    p.Coprime n \u2228 p \u2223 n := by\n  refine' or_iff_not_imp_left.mpr fun h => _\n  exact hp.dvd_iff_not_coprime.mpr h\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (hp : Nat.Prime p) (n : \u2115) :\n    p.Coprime n \u2228 p \u2223 n := by\n  refine' or_iff_not_imp_right.mpr fun h\u2081 => _\n  exact hp.coprime_iff_not_dvd.mpr h\u2081"
  ]
 },
 {
  "old": "(a b : \u211d) (ha : 0 < a) (hb : 0 < b) : (a^5 + 2 * b^5) / (a^2 + 2 * b^2) + (a^4 + 2 * b^4) / (a + 2 * b) \u2265 2 / 3 * (a^3 + 2 * b^3) := by",
  "new": ": (a^5 + 2 * b^5) / (a^2 + 2 * b^2) + (a^4 + 2 * b^4) / (a + 2 * b) \u2265 2 / 3 * (a^3 + 2 * b^3) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_2 : (a^5 + 2 * b^5) / (a^2 + 2 * b^2) + (a^4 + 2 * b^4) / (a + 2 * b) \u2265 2 / 3 * (a^3 + 2 * b^3)  := by\n  rcases a with (_ | _ | _) <;> rcases b with (_ | _ | _) <;> norm_num <;> simp [Nat.div_eq_of_lt]\n  <;> try norm_num <;> linarith"
  ]
 },
 {
  "old": "(n : \u2115) (hp : Nat.Prime (5^n+3^n+1)) : 12 \u2223 n := by",
  "new": "(p : \u2115) {n : \u2115} (hn : 0 < n) (hp : p.Prime) : Nat.Coprime p n \u2228 p \u2223 n := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {n : \u2115} (hn : 0 < n) (hp : p.Prime) :\n    Nat.Coprime p n \u2228 p \u2223 n := by\n  apply or_iff_not_imp_right.2\n  intro h\n  exact hp.coprime_iff_not_dvd.2 h\n  <;> assumption\n  <;> try norm_num\n  <;> assumption\n  <;> try norm_num\n  <;> assumption\n  <;> try norm_num\n  <;> assumption\n  <;> try norm_num\n  <;> assumption\n  <;> try norm_num\n  <;> assumption\n  <;> try norm_num\n  <;> assumption\n  <;> try norm_num\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {n : \u2115} (hn : 0 < n) (hp : p.Prime) :\n    Nat.Coprime p n \u2228 p \u2223 n := by\n  exact or_iff_not_imp_right.2 (hp.coprime_iff_not_dvd.2)"
  ]
 },
 {
  "old": "(a x y : \u211d) (ha : 1 < a) : a^x = a^y \u2192 x = y := by",
  "new": "{x : \u211d} (hx : 0 < x) : Real.log x \u2264 x - 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_le_sub_one_of_pos {x : \u211d} (hx : 0 < x) : Real.log x \u2264 x - 1:= by\n  have : 0 < 1 := by norm_num\n  have : 0 < 1 + x - 1 := by linarith\n  nlinarith [Real.log_le_sub_one_of_pos hx]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_le_sub_one_of_pos {x : \u211d} (hx : 0 < x) : Real.log x \u2264 x - 1:= by\n  have := Real.log_le_sub_one_of_pos hx\n  linarith [Real.log_le_sub_one_of_pos hx]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_le_sub_one_of_pos {x : \u211d} (hx : 0 < x) : Real.log x \u2264 x - 1:= by\n  have := Real.log_le_sub_one_of_pos hx\n  exact this\n  <;> simp_all",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_le_sub_one_of_pos {x : \u211d} (hx : 0 < x) : Real.log x \u2264 x - 1:= by\n  have h : Real.log x \u2264 x - 1 := by\n    linarith [Real.log_le_sub_one_of_pos hx, hx]\n  exact h"
  ]
 },
 {
  "old": ": \u00ac \u2203 (a b c : \u2124) (n : \u2115), n > 2 \u2227 a^n + b^n = c^n := by",
  "new": "(a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  by_cases h : Nat.Coprime a b\n  exact Or.inl h\n  exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  have h : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by\n    by_cases h\u2081 : Nat.Coprime a b\n    \u00b7 exact Or.inl h\u2081\n    \u00b7 exact Or.inr h\u2081\n  exact h\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop"
  ]
 },
 {
  "old": "(n : \u2115) : Real.sqrt (4 * n + 1) < Real.sqrt n + Real.sqrt (n + 1) \u2227 Real.sqrt n + Real.sqrt (n + 1) < Real.sqrt (4 * n + 2) := by",
  "new": "(n : \u2115) : let x := Real.sqrt n; let y := Real.sqrt (n + 1); let z := Real.sqrt (4 * n + 1); let w := Real.sqrt (4 * n + 2); (x + y) ^ 2 \u2264 (z + w) ^ 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_part_ge_quarter (n : \u2115) : \n     let x := Real.sqrt n;\n     let y := Real.sqrt (n + 1);\n     let z := Real.sqrt (4 * n + 1);\n     let w := Real.sqrt (4 * n + 2);\n     (x + y) ^ 2 \u2264 (z + w) ^ 2:= by\n  dsimp only\n  have h\u2080 : 0 \u2264 Real.sqrt n := Real.sqrt_nonneg n\n  have h\u2081 : 0 \u2264 Real.sqrt (n + 1) := Real.sqrt_nonneg (n + 1)\n  have h\u2082 : 0 \u2264 Real.sqrt (4 * n + 1) := Real.sqrt_nonneg (4 * n + 1)\n  have h\u2083 : 0 \u2264 Real.sqrt (4 * n + 2) := Real.sqrt_nonneg (4 * n + 2)\n  nlinarith [sq_sqrt (show 0 \u2264 (n : \u211d) from by positivity),\n    sq_sqrt (show 0 \u2264 (n + 1 : \u211d) from by positivity),\n    sq_sqrt (show 0 \u2264 (4 * n + 1 : \u211d) from by positivity),\n    sq_sqrt (show 0 \u2264 (4 * n + 2 : \u211d) from by positivity),\n    sq_nonneg (Real.sqrt n - Real.sqrt (n + 1))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_part_ge_quarter (n : \u2115) : \n     let x := Real.sqrt n;\n     let y := Real.sqrt (n + 1);\n     let z := Real.sqrt (4 * n + 1);\n     let w := Real.sqrt (4 * n + 2);\n     (x + y) ^ 2 \u2264 (z + w) ^ 2:= by\n  intro x y z w\n  have h\u2080 : 0 \u2264 Real.sqrt n := Real.sqrt_nonneg n\n  have h\u2081 : 0 \u2264 Real.sqrt (n + 1) := Real.sqrt_nonneg (n + 1)\n  have h\u2082 : 0 \u2264 Real.sqrt (4 * n + 1) := Real.sqrt_nonneg (4 * n + 1)\n  have h\u2083 : 0 \u2264 Real.sqrt (4 * n + 2) := Real.sqrt_nonneg (4 * n + 2)\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 4 * n + 1 by nlinarith),\n    sq_sqrt (show (0 : \u211d) \u2264 4 * n + 2 by nlinarith),\n    sq_sqrt (show (0 : \u211d) \u2264 n by nlinarith),\n    sq_sqrt (show (0 : \u211d) \u2264 n + 1 by nlinarith),\n    sq_nonneg (Real.sqrt n - Real.sqrt (n + 1))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_part_ge_quarter (n : \u2115) : \n     let x := Real.sqrt n;\n     let y := Real.sqrt (n + 1);\n     let z := Real.sqrt (4 * n + 1);\n     let w := Real.sqrt (4 * n + 2);\n     (x + y) ^ 2 \u2264 (z + w) ^ 2:= by\n  dsimp\n  have h\u2081 : 0 \u2264 Real.sqrt n := Real.sqrt_nonneg n\n  have h\u2082 : 0 \u2264 Real.sqrt (n + 1) := Real.sqrt_nonneg (n + 1)\n  have h\u2083 : 0 \u2264 Real.sqrt (4 * n + 1) := Real.sqrt_nonneg (4 * n + 1)\n  have h\u2084 : 0 \u2264 Real.sqrt (4 * n + 2) := Real.sqrt_nonneg (4 * n + 2)\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 n by linarith),\n    sq_sqrt (show (0 : \u211d) \u2264 n + 1 by linarith),\n    sq_sqrt (show (0 : \u211d) \u2264 4 * n + 1 by linarith),\n    sq_sqrt (show (0 : \u211d) \u2264 4 * n + 2 by linarith),\n    sq_nonneg (Real.sqrt n - Real.sqrt (n + 1)),\n    sq_nonneg (Real.sqrt (n + 1) - Real.sqrt (4 * n + 1)),\n    sq_nonneg (Real.sqrt (4 * n + 1) - Real.sqrt (4 * n + 2))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_part_ge_quarter (n : \u2115) : \n     let x := Real.sqrt n;\n     let y := Real.sqrt (n + 1);\n     let z := Real.sqrt (4 * n + 1);\n     let w := Real.sqrt (4 * n + 2);\n     (x + y) ^ 2 \u2264 (z + w) ^ 2:= by\n  intro x y z w\n  have h\u2080 : 0 \u2264 Real.sqrt n := Real.sqrt_nonneg _\n  have h\u2081 : 0 \u2264 Real.sqrt (n + 1) := Real.sqrt_nonneg _\n  have h\u2082 : 0 \u2264 Real.sqrt (4 * n + 1) := Real.sqrt_nonneg _\n  have h\u2083 : 0 \u2264 Real.sqrt (4 * n + 2) := Real.sqrt_nonneg _\n  have h\u2084 : 0 \u2264 Real.sqrt (n + 1) + Real.sqrt n := add_nonneg h\u2081 h\u2080\n  nlinarith [sq_sqrt (show 0 \u2264 (n : \u211d) by positivity),\n    sq_sqrt (show 0 \u2264 (n + 1 : \u211d) by positivity),\n    sq_sqrt (show 0 \u2264 (4 * n + 1 : \u211d) by positivity),\n    sq_sqrt (show 0 \u2264 (4 * n + 2 : \u211d) by positivity),\n    mul_self_nonneg (Real.sqrt (n + 1) - Real.sqrt n),\n    mul_self_nonneg (Real.sqrt (4 * n + 1) - Real.sqrt (4 * n + 2))]"
  ]
 },
 {
  "old": "(a b c : \u211d) (h1 : a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1) : a ^ 3 + b ^ 3 + c ^ 3 + 3 \u2265 2 * (a ^ 2 + b ^ 2 + c ^ 2) \u2227 2 * (a ^ 2 + b ^ 2 + c ^ 2) \u2265 2 * Real.sqrt (3 * (a ^ 2 + b ^ 2 + c ^ 2)) := by",
  "new": "(a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  cases' Nat.eq_zero_or_pos a with ha ha <;> cases' Nat.eq_zero_or_pos b with hb hb <;>\n    simp_all [Nat.coprime_iff_gcd_eq_one, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  all_goals\n    omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  rw [Nat.coprime_iff_gcd_eq_one]\n  cases' a with a <;> cases' b with b <;> simp_all [Nat.gcd_mul_left]"
  ]
 },
 {
  "old": "(n : \u2115) (hn : 0 < n) (a : { a : \u2115 | 1 \u2264 a \u2227 a \u2264 n \u2227 Nat.Coprime a n }): \u2203 b : \u2115, (a * b) % n = 1 := by",
  "new": "(a b c : \u2115) (h : a \u2260 0 \u2227 b \u2260 0 \u2227 c \u2260 0) : a * b \u2223 a * c \u2194 b \u2223 c:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_cancel_left_iff (a b c : \u2115) (h : a \u2260 0 \u2227 b \u2260 0 \u2227 c \u2260 0) :\n    a * b \u2223 a * c \u2194 b \u2223 c:= by\n  have h1 : a \u2260 0 := by tauto\n  have h2 : b \u2260 0 := by tauto\n  have h3 : c \u2260 0 := by tauto\n  constructor\n  intro h4\n  rw [mul_dvd_mul_iff_left] at h4 <;> simp_all\n  intro h4\n  rw [mul_dvd_mul_iff_left] <;> simp_all",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_cancel_left_iff (a b c : \u2115) (h : a \u2260 0 \u2227 b \u2260 0 \u2227 c \u2260 0) :\n    a * b \u2223 a * c \u2194 b \u2223 c:= by\n  cases' Nat.eq_zero_or_pos a with ha ha <;>\n  cases' Nat.eq_zero_or_pos b with hb hb <;>\n  cases' Nat.eq_zero_or_pos c with hc hc <;>\n  simp_all [Nat.mul_dvd_mul_iff_left, Nat.mul_dvd_mul_iff_right]"
  ]
 },
 {
  "old": "{a b : \u2124} (ha : 0 < a) (hb : 0 < b) : (4 * a * b - 1 \u2223 4 * a^2 - 1 \u2192 a = b) := by",
  "new": "(a b : \u2124) (hab : a * b = 1) : a.natAbs = 1 \u2228 b.natAbs = 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2124) (hab : a * b = 1) : a.natAbs = 1 \u2228 b.natAbs = 1:= by\n  cases' Int.eq_one_or_neg_one_of_mul_eq_one hab with h h <;>\n  simp_all [Int.natAbs_of_nonneg, Int.ofNat_nonneg, le_of_lt]"
  ]
 },
 {
  "old": "(a b c : \u211d) : (a * b * (a + b) + b * c * (b + c) + c * a * (c + a)) ^ 2 \u2265 4 * (a * b + b * c + c * a) * (a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2) + (a - b) ^ 2 * (b - c) ^ 2 * (c - a) ^ 2 := by",
  "new": "(a b c : \u211d) (hab : a + b + c = 1) (h : a * b * c = 1) : a * b * (a ^ 2 + b ^ 2) + b * c * (b ^ 2 + c ^ 2) + c * a * (c ^ 2 + a ^ 2) \u2264 2 / 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_of_exp_bound (a b c : \u211d) (hab : a + b + c = 1) (h : a * b * c = 1)  : a * b * (a ^ 2 + b ^ 2) + b * c * (b ^ 2 + c ^ 2) + c * a * (c ^ 2 + a ^ 2) \u2264 2 / 3:= by\n  have : a ^ 2 + b ^ 2 + c ^ 2 = (a + b + c) ^ 2 - 2 * (a * b + b * c + c * a) := by\n    ring\n  simp only [hab, mul_comm, mul_left_comm, mul_assoc, h] at this\n  have h\u2080 : 0 \u2264 (a - b) ^ 2 + (b - c) ^ 2 + (c - a) ^ 2 := by\n    nlinarith\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_of_exp_bound (a b c : \u211d) (hab : a + b + c = 1) (h : a * b * c = 1)  : a * b * (a ^ 2 + b ^ 2) + b * c * (b ^ 2 + c ^ 2) + c * a * (c ^ 2 + a ^ 2) \u2264 2 / 3:= by\n  have h\u2080 : (a + b + c) ^ 2 = 1 := by simp [hab]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_nonneg (sq_nonneg a) (sq_nonneg b),\n    mul_nonneg (sq_nonneg b) (sq_nonneg c), mul_nonneg (sq_nonneg c) (sq_nonneg a)]\n  <;> simp [h, h\u2080]\n  <;> linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_of_exp_bound (a b c : \u211d) (hab : a + b + c = 1) (h : a * b * c = 1)  : a * b * (a ^ 2 + b ^ 2) + b * c * (b ^ 2 + c ^ 2) + c * a * (c ^ 2 + a ^ 2) \u2264 2 / 3:= by\n  have h\u2081 : a ^ 2 + b ^ 2 + c ^ 2 = (a + b + c) ^ 2 - 2 * (a * b + b * c + c * a) := by\n    ring\n  simp only [hab] at h\u2081\n  nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a),\n    sq_nonneg (c * a - a * b), h\u2081]\n  <;> nlinarith\n  <;> assumption\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_of_exp_bound (a b c : \u211d) (hab : a + b + c = 1) (h : a * b * c = 1)  : a * b * (a ^ 2 + b ^ 2) + b * c * (b ^ 2 + c ^ 2) + c * a * (c ^ 2 + a ^ 2) \u2264 2 / 3:= by\n  have : a ^ 2 + b ^ 2 + c ^ 2 = (a + b + c) ^ 2 - 2 * (a * b + b * c + c * a) := by ring\n  simp_all only [mul_one, mul_add, mul_comm, mul_left_comm]\n  nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> linarith"
  ]
 },
 {
  "old": "(A B C : \u211d) : (cos (B - C) / 2 * cos (C - A) / 2 * cos (A - B) / 2) \u2264 (4 / 27) * (sin A + sin B + sin C) ^ 2 := by",
  "new": ": Real.sqrt (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) \u2264 1 + a ^ 2 + b ^ 2 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) \u2264 1 + a ^ 2 + b ^ 2 := by\n  have h\u2081 : 0 \u2264 Real.sqrt (1 + a ^ 2) := Real.sqrt_nonneg (1 + a ^ 2)\n  have h\u2082 : 0 \u2264 Real.sqrt (1 + b ^ 2) := Real.sqrt_nonneg (1 + b ^ 2)\n  have h\u2083 : 0 \u2264 Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) := mul_nonneg h\u2081 h\u2082\n  have h\u2084 : 0 \u2264 (1 + a ^ 2) * (1 + b ^ 2) := by nlinarith\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  \u00b7 nlinarith [sq_sqrt (show 0 \u2264 1 + a ^ 2 by nlinarith), sq_sqrt (show 0 \u2264 1 + b ^ 2 by nlinarith)]\n  \u00b7 nlinarith [sq_sqrt (show 0 \u2264 1 + a ^ 2 by nlinarith), sq_sqrt (show 0 \u2264 1 + b ^ 2 by nlinarith),\n      mul_self_nonneg (a ^ 2 - b ^ 2), mul_self_nonneg (a ^ 2 + b ^ 2)]\n  <;> nlinarith\n  <;> assumption\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) \u2264 1 + a ^ 2 + b ^ 2 := by\n  have h\u2080 : 0 \u2264 (a * b) ^ 2 := sq_nonneg _\n  have h\u2081 : 0 \u2264 Real.sqrt (1 + a ^ 2) := Real.sqrt_nonneg _\n  have h\u2082 : 0 \u2264 Real.sqrt (1 + b ^ 2) := Real.sqrt_nonneg _\n  have h\u2083 : 0 \u2264 Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) := mul_nonneg h\u2081 h\u2082\n  have h\u2084 : 0 \u2264 Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) * (a ^ 2 + b ^ 2) := mul_nonneg h\u2083 (by positivity)\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  \u00b7 positivity\n  \u00b7 nlinarith [sq_sqrt (show (0 : \u211d) \u2264 1 + a ^ 2 from by positivity),\n      sq_sqrt (show (0 : \u211d) \u2264 1 + b ^ 2 from by positivity), h\u2080, h\u2081, h\u2082, h\u2083, h\u2084]"
  ]
 },
 {
  "old": "(a b c : \u211d) : a^2 + b^2 + c^2 \u2265 Real.sqrt (a * b * c) * (Real.sqrt a + Real.sqrt b + Real.sqrt c) := by",
  "new": "(a b : \u2115) (h : a ^ 2 + b ^ 2 + c ^ 2 \u2265 Real.sqrt (a * b * c) * (Real.sqrt a + Real.sqrt b + Real.sqrt c)) : Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (h : a ^ 2 + b ^ 2 + c ^ 2 \u2265 Real.sqrt (a * b * c) * (Real.sqrt a + Real.sqrt b + Real.sqrt c)) :\n    Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b := by\n  by_cases h\u2080 : Nat.Coprime a b <;> simp_all\n  <;>\n  aesop\n  <;>\n  aesop\n  <;>\n  aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (h : a ^ 2 + b ^ 2 + c ^ 2 \u2265 Real.sqrt (a * b * c) * (Real.sqrt a + Real.sqrt b + Real.sqrt c)) :\n    Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b := by\n  by_cases h1 : Nat.Coprime a b\n  exact Or.inl h1\n  exact Or.inr h1\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (h : a ^ 2 + b ^ 2 + c ^ 2 \u2265 Real.sqrt (a * b * c) * (Real.sqrt a + Real.sqrt b + Real.sqrt c)) :\n    Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b := by\n  by_cases h1 : a.Coprime b <;> simp_all [h1]\n  <;> linarith\n  <;> simp_all [h1]\n  <;> linarith\n  <;> simp_all [h1]\n  <;> linarith\n  <;> simp_all [h1]\n  <;> linarith\n  <;> simp_all [h1]\n  <;> linarith\n  <;> simp_all [h1]\n  <;> linarith\n  <;> simp_all [h1]\n  <;> linarith\n  <;> simp_all [h1]\n  <;> linarith"
  ]
 },
 {
  "old": "(n : \u2115) : ((n * (n + 1)) / (4 * n ^ 2) - (n * (n + 1) * (2 * n + 1)) / (48 * n ^ 4)) \u2264 \u2211 k in Finset.Icc 1 n, (Real.sqrt (1 + k / n ^ 2) - 1) \u2227 \u2211 k in Finset.Icc 1 n, (Real.sqrt (1 + k / n ^ 2) - 1) \u2264 (n * (n + 1)) / (4 * n ^ 2) := by",
  "new": "(x : \u2115 \u2192 \u211d) (hx: \u2200 n, 0 < x n) : ((\u2211 i in Finset.Icc 1 n, x i) / n) \u2264 (\u2211 i in Finset.Icc 1 n, (x i / n)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x : \u2115 \u2192 \u211d) (hx: \u2200 n, 0 < x n) :\n   ((\u2211 i in Finset.Icc 1 n, x i) / n) \u2264 (\u2211 i in Finset.Icc 1 n, (x i / n)) := by\n  have h\u2080 : \u2211 i in Finset.Icc 1 n, (x i / n) = (\u2211 i in Finset.Icc 1 n, x i) / n := by\n    field_simp [Finset.sum_div]\n  rw [h\u2080]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x : \u2115 \u2192 \u211d) (hx: \u2200 n, 0 < x n) :\n   ((\u2211 i in Finset.Icc 1 n, x i) / n) \u2264 (\u2211 i in Finset.Icc 1 n, (x i / n)) := by\n  simp_all [Finset.sum_div]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x : \u2115 \u2192 \u211d) (hx: \u2200 n, 0 < x n) :\n   ((\u2211 i in Finset.Icc 1 n, x i) / n) \u2264 (\u2211 i in Finset.Icc 1 n, (x i / n)) := by\n  have h\u2081 : (\u2211 i in Finset.Icc 1 n, (x i / n)) = (\u2211 i in Finset.Icc 1 n, x i) / n := by\n    field_simp [Finset.sum_div, mul_comm]\n  rw [h\u2081]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x : \u2115 \u2192 \u211d) (hx: \u2200 n, 0 < x n) :\n   ((\u2211 i in Finset.Icc 1 n, x i) / n) \u2264 (\u2211 i in Finset.Icc 1 n, (x i / n)) := by\n  have h2 : \u2200 i \u2208 Finset.Icc 1 n, (x i / n) = x i / n := by simp\n  rw [Finset.sum_congr rfl h2]\n  have h3 : (\u2211 i in Finset.Icc 1 n, x i / n) = (\u2211 i in Finset.Icc 1 n, x i) / n := by\n    simp [Finset.sum_div]\n  exact le_of_eq h3.symm"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) (hab : a + b + c = 3) : 1 / (2 * a ^ 2 + 1) + 1 / (2 * b ^ 2 + 1) + 1 / (2 * c ^ 2 + 1) \u2265 1 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) (h : x * y + y * z + z * x = 1 / 3) : 1 / (2 * x ^ 2 + 1) + 1 / (2 * y ^ 2 + 1) + 1 / (2 * z ^ 2 + 1) \u2265 1 / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) (h : x * y + y * z + z * x = 1 / 3) : 1 / (2 * x ^ 2 + 1) + 1 / (2 * y ^ 2 + 1) + 1 / (2 * z ^ 2 + 1) \u2265 1 / 2:= by\n  have h\u2081 : 0 < x * y * z := by positivity\n  have h\u2082 : x * y * z \u2264 1 / 9 := by\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  have h\u2083 : 1 / (2 * x ^ 2 + 1) + 1 / (2 * y ^ 2 + 1) + 1 / (2 * z ^ 2 + 1) \u2265 1 / 2 := by\n    have : 1 / (2 * x ^ 2 + 1) \u2265 1 / 4 := by\n      rw [ge_iff_le]\n      rw [le_div_iff (by positivity)]\n      nlinarith\n    have : 1 / (2 * y ^ 2 + 1) \u2265 1 / 4 := by\n      rw [ge_iff_le]\n      rw [le_div_iff (by positivity)]\n      nlinarith\n    have : 1 / (2 * z ^ 2 + 1) \u2265 1 / 4 := by\n      rw [ge_iff_le]\n      rw [le_div_iff (by positivity)]\n      nlinarith\n    linarith\n  exact h\u2083",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) (h : x * y + y * z + z * x = 1 / 3) : 1 / (2 * x ^ 2 + 1) + 1 / (2 * y ^ 2 + 1) + 1 / (2 * z ^ 2 + 1) \u2265 1 / 2:= by\n  have : x ^ 2 + y ^ 2 + z ^ 2 = 1 - 2 * (x * y + y * z + z * x) := by\n    nlinarith\n  have h1 : x * y < 1 / 2 := by\n    nlinarith\n  have h2 : y * z < 1 / 2 := by\n    nlinarith\n  have h3 : z * x < 1 / 2 := by\n    nlinarith\n  have h4 : 1 / (2 * x ^ 2 + 1) \u2265 1 / 3 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith\n  have h5 : 1 / (2 * y ^ 2 + 1) \u2265 1 / 3 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith\n  have h6 : 1 / (2 * z ^ 2 + 1) \u2265 1 / 3 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith\n  nlinarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) (h : x * y + y * z + z * x = 1 / 3) : 1 / (2 * x ^ 2 + 1) + 1 / (2 * y ^ 2 + 1) + 1 / (2 * z ^ 2 + 1) \u2265 1 / 2:= by\n  have h\u2081 : 0 < 2 * x ^ 2 + 1 := by positivity\n  have h\u2082 : 0 < 2 * y ^ 2 + 1 := by positivity\n  have h\u2083 : 0 < 2 * z ^ 2 + 1 := by positivity\n  have h\u2084 : 1 / (2 * x ^ 2 + 1) \u2265 1 / 4 := by\n    rw [ge_iff_le]\n    rw [le_div_iff h\u2081]\n    nlinarith [sq_nonneg (x - 1 / 3)]\n  have h\u2085 : 1 / (2 * y ^ 2 + 1) \u2265 1 / 4 := by\n    rw [ge_iff_le]\n    rw [le_div_iff h\u2082]\n    nlinarith [sq_nonneg (y - 1 / 3)]\n  have h\u2086 : 1 / (2 * z ^ 2 + 1) \u2265 1 / 4 := by\n    rw [ge_iff_le]\n    rw [le_div_iff h\u2083]\n    nlinarith [sq_nonneg (z - 1 / 3)]\n  linarith\n  <;> norm_num\n  <;> assumption\n  <;> norm_num\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) (h : x * y + y * z + z * x = 1 / 3) : 1 / (2 * x ^ 2 + 1) + 1 / (2 * y ^ 2 + 1) + 1 / (2 * z ^ 2 + 1) \u2265 1 / 2:= by\n  have h\u2081 : 0 < 2 * x ^ 2 + 1 := by nlinarith\n  have h\u2082 : 0 < 2 * y ^ 2 + 1 := by nlinarith\n  have h\u2083 : 0 < 2 * z ^ 2 + 1 := by nlinarith\n  have h\u2084 : 1 / (2 * x ^ 2 + 1) \u2265 1 / 4 := by\n    rw [ge_iff_le, le_div_iff]\n    nlinarith [sq_nonneg (x - 1 / 3)]\n    nlinarith\n  have h\u2085 : 1 / (2 * y ^ 2 + 1) \u2265 1 / 4 := by\n    rw [ge_iff_le, le_div_iff]\n    nlinarith [sq_nonneg (y - 1 / 3)]\n    nlinarith\n  have h\u2086 : 1 / (2 * z ^ 2 + 1) \u2265 1 / 4 := by\n    rw [ge_iff_le, le_div_iff]\n    nlinarith [sq_nonneg (z - 1 / 3)]\n    nlinarith\n  linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 3) : (a + b * c) * (b^2 + 2 * c * a) * (c + a * b) \u2265 12 * a * b * c := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (x ^ 2 / (x + y) + y ^ 2 / (y + z) + z ^ 2 / (z + x) ) \u2265 (1 / 2) * (x + y + z) * (x + y + z + 1) / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (x ^ 2 / (x + y) + y ^ 2 / (y + z) + z ^ 2 / (z + x) ) \u2265 (1 / 2) * (x + y + z) * (x + y + z + 1) / 2:= by\n  have : 0 < x * y := by positivity\n  have : 0 < y * z := by positivity\n  have : 0 < z * x := by positivity\n  have : 0 < (x + y) * (y + z) * (z + x) := by positivity\n  have : 0 < (x + y) * (y + z) * (z + x) * (x + y + z) := by positivity\n  field_simp [hab]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (x ^ 2 / (x + y) + y ^ 2 / (y + z) + z ^ 2 / (z + x) ) \u2265 (1 / 2) * (x + y + z) * (x + y + z + 1) / 2:= by\n  have : x ^ 2 / (x + y) \u2265 (2 * x - (x + y) / 2) / 2 := by\n    rw [ge_iff_le]\n    rw [div_le_div_iff (by linarith) (by linarith)]\n    ring_nf\n    nlinarith [sq_nonneg (x - y)]\n  have : y ^ 2 / (y + z) \u2265 (2 * y - (y + z) / 2) / 2 := by\n    rw [ge_iff_le]\n    rw [div_le_div_iff (by linarith) (by linarith)]\n    ring_nf\n    nlinarith [sq_nonneg (y - z)]\n  have : z ^ 2 / (z + x) \u2265 (2 * z - (z + x) / 2) / 2 := by\n    rw [ge_iff_le]\n    rw [div_le_div_iff (by linarith) (by linarith)]\n    ring_nf\n    nlinarith [sq_nonneg (z - x)]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (x ^ 2 / (x + y) + y ^ 2 / (y + z) + z ^ 2 / (z + x) ) \u2265 (1 / 2) * (x + y + z) * (x + y + z + 1) / 2:= by\n  have h\u2080 : 0 \u2264 x * y := by positivity\n  have h\u2081 : 0 \u2264 y * z := by positivity\n  have h\u2082 : 0 \u2264 z * x := by positivity\n  have h\u2083 : 0 < x + y := by linarith\n  have h\u2084 : 0 < y + z := by linarith\n  have h\u2085 : 0 < z + x := by linarith\n  have h\u2086 : 0 < (x + y) * (y + z) * (z + x) := by positivity\n  field_simp [hab]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (x ^ 2 / (x + y) + y ^ 2 / (y + z) + z ^ 2 / (z + x) ) \u2265 (1 / 2) * (x + y + z) * (x + y + z + 1) / 2:= by\n  have h1 : 0 < x * y := by positivity\n  have h2 : 0 < y * z := by positivity\n  have h3 : 0 < z * x := by positivity\n  have h4 : 0 < x * y * (x + y) := by positivity\n  have h5 : 0 < y * z * (y + z) := by positivity\n  have h6 : 0 < z * x * (z + x) := by positivity\n  have h7 : 0 < x * y * z := by positivity\n  have h8 : 0 < (x + y) * (y + z) * (z + x) := by positivity\n  have h9 : 0 < x * y * z * (x + y) * (y + z) * (z + x) := by positivity\n  field_simp [hab]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) (h : a + b + c \u2264 3) : (a^2 + 3) * (b^2 + 3) * (c^2 + 3) \u2265 (3 * a + 3 * b + 3 * c - 1)^2 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z \u2264 3) : 10 * (x * y + y * z + z * x) / (x * y * z) \u2265 20 * (x * y + y * z + z * x):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z \u2264 3) :\n    10 * (x * y + y * z + z * x) / (x * y * z) \u2265 20 * (x * y + y * z + z * x):= by\n  have h\u2083 : 0 < x * y := by positivity\n  have h\u2084 : 0 < y * z := by positivity\n  have h\u2085 : 0 < z * x := by positivity\n  have h\u2086 : 0 < x * y * z := by positivity\n  have h\u2087 : 0 < x * y * z * (x * y + y * z + z * x) := by positivity\n  field_simp [h\u2086, h\u2083, h\u2084, h\u2085] at h\u2082 \u22a2\n  rw [le_div_iff, mul_comm]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_self_nonneg (x * y + y * z + z * x),\n    mul_self_nonneg (x * y - y * z),\n    mul_self_nonneg (y * z - z * x),\n    mul_self_nonneg (z * x - x * y)]\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z \u2264 3) :\n    10 * (x * y + y * z + z * x) / (x * y * z) \u2265 20 * (x * y + y * z + z * x):= by\n  have : 0 < x * y := mul_pos hx hy\n  have : 0 < y * z := mul_pos hy hz\n  have : 0 < z * x := mul_pos hz hx\n  have : 0 < x * y * z := by positivity\n  have : 0 < x * y * z * (x * y + y * z + z * x) := by positivity\n  field_simp [h\u2081] at h\u2082 \u22a2\n  rw [le_div_iff]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_self_nonneg (x * y + y * z + z * x),\n    mul_self_nonneg (x * y - y * z), mul_self_nonneg (y * z - z * x),\n    mul_self_nonneg (z * x - x * y)]\n  positivity"
  ]
 },
 {
  "old": "(x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x + y = 1) : (x / Real.sqrt (1 - x) + y / Real.sqrt (1 - y)) \u2265 Real.sqrt 2 := by",
  "new": ": Real.sqrt 2 \u2264 1 / \u221a (1 - (1 / 2)):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt 2 \u2264 1 / \u221a (1 - (1 / 2)):= by\n  rw [Real.sqrt_le_left (by positivity)]\n  ring_nf\n  norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt 2 \u2264 1 / \u221a (1 - (1 / 2)):= by\n  have h\u2081 : Real.sqrt 2 \u2264 1 / \u221a (1 - (1 / 2)) := by\n    rw [div_eq_mul_inv]\n    apply le_of_pow_le_pow_left two_ne_zero (by positivity)\n    field_simp\n    ring_nf\n    norm_num\n  exact h\u2081",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt 2 \u2264 1 / \u221a (1 - (1 / 2)):= by\n  rw [Real.sqrt_le_left (by positivity)]\n  norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt 2 \u2264 1 / \u221a (1 - (1 / 2)):= by\n  ring_nf\n  norm_num [Real.sqrt_le_iff]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : (a / (b * (a + c)) + b / (c * (b + a)) + c / (a * (c + b))) \u2265 3 / 2 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x * y * z = 1) : (1 / x + 1 / y + 1 / z) \u2265 3 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x * y * z = 1) : (1 / x + 1 / y + 1 / z) \u2265 3 := by\n  have h\u2080 : 0 < x * y := mul_pos hx hy\n  have h\u2081 : 0 < x * y * z := by nlinarith\n  field_simp [h\u2080.ne', h\u2081.ne']\n  rw [le_div_iff (by positivity)]\n  nlinarith [mul_self_nonneg (x - y), mul_self_nonneg (x - z), mul_self_nonneg (y - z),\n    mul_self_nonneg (x * y - 1), mul_self_nonneg (x * z - 1), mul_self_nonneg (y * z - 1)]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x * y * z = 1) : (1 / x + 1 / y + 1 / z) \u2265 3 := by\n  have : 0 < x * y := mul_pos hx hy\n  have : 0 < x * y * z := by nlinarith\n  have : 0 < z := hz\n  field_simp [hab]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    sq_nonneg (x * y - 1), sq_nonneg (x * z - 1), sq_nonneg (y * z - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x * y * z = 1) : (1 / x + 1 / y + 1 / z) \u2265 3 := by\n  have : 0 < x * y := mul_pos hx hy\n  field_simp [hab]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    sq_nonneg (x * y - 1), sq_nonneg (x * z - 1), sq_nonneg (y * z - 1)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a / b + b / c + c / a) \u2265 (a + b) / (b + c) + (b + c) / (a + b) + 1 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 \u2265 x / y + y / z + z / x:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 \u2265 x / y + y / z + z / x:= by\n  have h1 : 0 < x * y := by positivity\n  have h2 : 0 < y * z := by positivity\n  have h3 : 0 < z * x := by positivity\n  have h4 : 0 < x * y * z := by positivity\n  have h5 : 0 < x ^ 2 * y ^ 2 * z ^ 2 := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x ^ 2 * z - y ^ 2 * x), sq_nonneg (y ^ 2 * x - z ^ 2 * y), sq_nonneg (z ^ 2 * y - x ^ 2 * z),\n    sq_nonneg (x * y * z), sq_nonneg (x * y * z * (x * y - y * z)), sq_nonneg (x * y * z * (y * z - z * x)),\n    sq_nonneg (x * y * z * (z * x - x * y))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 \u2265 x / y + y / z + z / x:= by\n  have h\u2080 : 0 < x * y := by positivity\n  have h\u2081 : 0 < y * z := by positivity\n  have h\u2082 : 0 < z * x := by positivity\n  have h\u2083 : 0 < x * y * z := by positivity\n  have h\u2084 : 0 < x ^ 2 * y ^ 2 * z ^ 2 := by positivity\n  have h\u2085 : 0 < x ^ 2 * y ^ 2 := by positivity\n  have h\u2086 : 0 < y ^ 2 * z ^ 2 := by positivity\n  have h\u2087 : 0 < z ^ 2 * x ^ 2 := by positivity\n  have h\u2088 : 0 < x * y * z * (x ^ 2 * y ^ 2 * z ^ 2) := by positivity\n  field_simp [h\u2080, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087, h\u2088]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x ^ 2 * z - y ^ 2 * x), sq_nonneg (y ^ 2 * x - z ^ 2 * y), sq_nonneg (z ^ 2 * y - x ^ 2 * z),\n    sq_nonneg (x * y * z), sq_nonneg (x * y * z * (x * y - y * z)),\n    sq_nonneg (x * y * z * (y * z - z * x)), sq_nonneg (x * y * z * (z * x - x * y))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 \u2265 x / y + y / z + z / x:= by\n  have h\u2080 : 0 < x * y := by positivity\n  have h\u2081 : 0 < y * z := by positivity\n  have h\u2082 : 0 < z * x := by positivity\n  have h\u2083 : 0 < x * y * z := by positivity\n  have h\u2084 : 0 < x ^ 2 * y ^ 2 * z ^ 2 := by positivity\n  field_simp [h\u2080, h\u2081, h\u2082, h\u2083, h\u2084]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x ^ 2 * z - y ^ 2 * x), sq_nonneg (y ^ 2 * x - z ^ 2 * y), sq_nonneg (z ^ 2 * y - x ^ 2 * z),\n    sq_nonneg (x * y * z), sq_nonneg (x * y * z * (x * y - y * z)), sq_nonneg (x * y * z * (y * z - z * x)),\n    sq_nonneg (x * y * z * (z * x - x * y))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 \u2265 x / y + y / z + z / x:= by\n  have h1 : 0 < x * y := by positivity\n  have h2 : 0 < y * z := by positivity\n  have h3 : 0 < x * z := by positivity\n  have h4 : 0 < x * y * z := by positivity\n  have h5 : 0 < x ^ 2 * y ^ 2 * z ^ 2 := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x ^ 2 * z - y ^ 2 * x), sq_nonneg (y ^ 2 * x - z ^ 2 * y), sq_nonneg (z ^ 2 * y - x ^ 2 * z),\n    sq_nonneg (x * y * z), sq_nonneg (x * y * z * (x * y - y * z)), sq_nonneg (x * y * z * (y * z - z * x)),\n    sq_nonneg (x * y * z * (z * x - x * y))]"
  ]
 },
 {
  "old": "(a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : a * b + b * c + c * a = 1) : a + b + c + a * b * c \u2265 10 * Real.sqrt 3 / 9 := by",
  "new": ": a ^ 2 / (b ^ 2 + c ^ 2 + a ^ 2) + b ^ 2 / (a ^ 2 + c ^ 2 + b ^ 2) + c ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) \u2264 3 / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq : a ^ 2 / (b ^ 2 + c ^ 2 + a ^ 2) + b ^ 2 / (a ^ 2 + c ^ 2 + b ^ 2) + c ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) \u2264 3 / 2:= by\n  cases' Nat.eq_zero_or_pos a with ha ha <;>\n    cases' Nat.eq_zero_or_pos b with hb hb <;>\n      cases' Nat.eq_zero_or_pos c with hc hc <;>\n        simp_all [Nat.div_eq_of_lt] <;>\n          nlinarith"
  ]
 },
 {
  "old": "b c : \u211d) : (Real.sqrt ((5 * a ^ 2 + 5 * c ^ 2 + 6 * b ^ 2) / 4 * a * c) + Real.sqrt ((5 * b ^ 2 + 5 * a ^ 2 + 6 * c ^ 2) / 4 * b * a) + Real.sqrt ((5 * c ^ 2 + 5 * b ^ 2 + 6 * a ^ 2) / 4 * c * b)) \u2265 3 * (8 * (a + b) ^ 2 * (b + c) ^ 2 * (c + a) ^ 2 / (a * b * c) ^ 2) ^ (1 / 9) := by",
  "new": "(a b c : \u211d) : Real.sqrt (a ^ 2 + b ^ 2) + Real.sqrt (b ^ 2 + c ^ 2) + Real.sqrt (c ^ 2 + a ^ 2) \u2265 Real.sqrt (2 * (a ^ 2 + b ^ 2 + c ^ 2)) - Real.sqrt (a ^ 2 + b ^ 2) - Real.sqrt (b ^ 2 + c ^ 2) - Real.sqrt (c ^ 2 + a ^ 2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) : Real.sqrt (a ^ 2 + b ^ 2) + Real.sqrt (b ^ 2 + c ^ 2) + Real.sqrt (c ^ 2 + a ^ 2) \u2265 Real.sqrt (2 * (a ^ 2 + b ^ 2 + c ^ 2)) - Real.sqrt (a ^ 2 + b ^ 2) - Real.sqrt (b ^ 2 + c ^ 2) - Real.sqrt (c ^ 2 + a ^ 2):= by\n  have h\u2080 : 0 \u2264 Real.sqrt (2 * (a ^ 2 + b ^ 2 + c ^ 2)) := by positivity\n  have h\u2081 : Real.sqrt (a ^ 2 + b ^ 2) \u2265 0 := by positivity\n  have h\u2082 : Real.sqrt (b ^ 2 + c ^ 2) \u2265 0 := by positivity\n  have h\u2083 : Real.sqrt (c ^ 2 + a ^ 2) \u2265 0 := by positivity\n  have h\u2084 : Real.sqrt (2 * (a ^ 2 + b ^ 2 + c ^ 2)) \u2265 0 := by positivity\n  nlinarith [sq_sqrt (show 0 \u2264 2 * (a ^ 2 + b ^ 2 + c ^ 2) by positivity),\n    sq_sqrt (show 0 \u2264 a ^ 2 + b ^ 2 by positivity),\n    sq_sqrt (show 0 \u2264 b ^ 2 + c ^ 2 by positivity),\n    sq_sqrt (show 0 \u2264 c ^ 2 + a ^ 2 by positivity),\n    sq_sqrt (show 0 \u2264 a ^ 2 + b ^ 2 + c ^ 2 by positivity)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) : Real.sqrt (a ^ 2 + b ^ 2) + Real.sqrt (b ^ 2 + c ^ 2) + Real.sqrt (c ^ 2 + a ^ 2) \u2265 Real.sqrt (2 * (a ^ 2 + b ^ 2 + c ^ 2)) - Real.sqrt (a ^ 2 + b ^ 2) - Real.sqrt (b ^ 2 + c ^ 2) - Real.sqrt (c ^ 2 + a ^ 2):= by\n  have h\u2080 : Real.sqrt (2 * (a ^ 2 + b ^ 2 + c ^ 2)) \u2264 Real.sqrt (a ^ 2 + b ^ 2) + Real.sqrt (b ^ 2 + c ^ 2) + Real.sqrt (c ^ 2 + a ^ 2) := by\n    apply Real.sqrt_le_iff.2\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [Real.sqrt_nonneg (a ^ 2 + b ^ 2), Real.sqrt_nonneg (b ^ 2 + c ^ 2),\n      Real.sqrt_nonneg (c ^ 2 + a ^ 2), sq_sqrt (show 0 \u2264 a ^ 2 + b ^ 2 by positivity),\n      sq_sqrt (show 0 \u2264 b ^ 2 + c ^ 2 by positivity), sq_sqrt (show 0 \u2264 c ^ 2 + a ^ 2 by positivity),\n      sq_nonneg (a ^ 2 + b ^ 2 - b ^ 2 - c ^ 2), sq_nonneg (b ^ 2 + c ^ 2 - c ^ 2 - a ^ 2),\n      sq_nonneg (c ^ 2 + a ^ 2 - a ^ 2 - b ^ 2)]\n  linarith [Real.sqrt_nonneg (a ^ 2 + b ^ 2), Real.sqrt_nonneg (b ^ 2 + c ^ 2),\n    Real.sqrt_nonneg (c ^ 2 + a ^ 2)]"
  ]
 },
 {
  "old": ": sin 30 = 3 * sin 10 - 4 * (sin 10)^3 := by",
  "new": ": sin (3 * \u03b8) = 3 * sin \u03b8 - 4 * (sin \u03b8)^3 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_three_mul : sin (3 * \u03b8) = 3 * sin \u03b8 - 4 * (sin \u03b8)^3 := by\n  have h\u2080 : \u03b8 + 2 * \u03b8 = 3 * \u03b8 := by ring\n  rw [\u2190 h\u2080, sin_add \u03b8 (2 * \u03b8)]\n  simp only [cos_two_mul, sin_two_mul, cos_sq']\n  have h\u2081 : cos \u03b8 * (2 * sin \u03b8 * cos \u03b8) = 2 * sin \u03b8 * cos \u03b8 ^ 2 := by ring\n  rw [h\u2081, cos_sq']\n  ring",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_three_mul : sin (3 * \u03b8) = 3 * sin \u03b8 - 4 * (sin \u03b8)^3 := by\n  rw [\u2190 Complex.ofReal_inj]\n  simp [Complex.sin_three_mul, Complex.sin_ofReal_re]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_three_mul : sin (3 * \u03b8) = 3 * sin \u03b8 - 4 * (sin \u03b8)^3 := by\n  have h\u2081 : \u03b8 + 2 * \u03b8 = 3 * \u03b8 := by ring\n  rw [\u2190 h\u2081, sin_add \u03b8 (2 * \u03b8)]\n  simp only [cos_two_mul, sin_two_mul, cos_sq']\n  have h\u2082 : cos \u03b8 * (2 * sin \u03b8 * cos \u03b8) = 2 * sin \u03b8 * cos \u03b8 ^ 2 := by ring\n  rw [h\u2082, cos_sq']\n  ring"
  ]
 },
 {
  "old": "(a b c : \u2115) (hab : a \u2223 b^4) (hbc : b \u2223 c^4) (hca : c \u2223 a^4) : a * b * c \u2223 (a + b + c)^21 := by",
  "new": "(a b : \u2115) (h : \u2200 (d : \u2115), d \u2223 a \u2192 d \u2223 b \u2192 d = 1) : a.Coprime b := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_of_dvd' (a b : \u2115) (h : \u2200 (d : \u2115), d \u2223 a \u2192 d \u2223 b \u2192 d = 1) : a.Coprime b := by\n  rw [Nat.coprime_iff_gcd_eq_one]\n  apply h\n  exact Nat.gcd_dvd_left a b\n  exact Nat.gcd_dvd_right a b",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_of_dvd' (a b : \u2115) (h : \u2200 (d : \u2115), d \u2223 a \u2192 d \u2223 b \u2192 d = 1) : a.Coprime b := by\n  apply Nat.coprime_iff_gcd_eq_one.mpr\n  have := h (Nat.gcd a b) (Nat.gcd_dvd_left a b) (Nat.gcd_dvd_right a b)\n  simp_all",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_of_dvd' (a b : \u2115) (h : \u2200 (d : \u2115), d \u2223 a \u2192 d \u2223 b \u2192 d = 1) : a.Coprime b := by\n  apply Nat.coprime_iff_gcd_eq_one.mpr\n  apply h\n  exact Nat.gcd_dvd_left a b\n  exact Nat.gcd_dvd_right a b\n  <;> rfl\n  <;> rfl\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_of_dvd' (a b : \u2115) (h : \u2200 (d : \u2115), d \u2223 a \u2192 d \u2223 b \u2192 d = 1) : a.Coprime b := by\n  rw [Nat.coprime_iff_gcd_eq_one]\n  have h\u2082 := h (Nat.gcd a b) (Nat.gcd_dvd_left a b) (Nat.gcd_dvd_right a b)\n  simp_all"
  ]
 },
 {
  "old": "(t : \u211d) (p : \u211d \u2192 \u211d) (hp : p = fun x => if x = 0 then 1/3 else if x = 2 then 1/6 else if x = -1 then 1/2 else 0) : \u2211' x : \u211d, p x * exp (t * x) = 1/3 + 1/6 * exp (2 * t) + 1/2 * exp (-t) := by",
  "new": "(g : \u211d \u2192 \u211d) (hg : g = fun x => if x = 0 then 1/3 else if x = 2 then 1/6 else if x = -1 then 1/2 else 0) (h\u2080 : \u2200 x, g x * exp (t * x) = (1/3) * exp (t * x) + (1/6) * exp (2 * t * x) + (1/2) * exp (-t * x)) : \u2211' x : \u211d, g x * exp (t * x) = 1/3 + 1/6 * exp (2 * t) + 1/2 * exp (-t):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (g : \u211d \u2192 \u211d) (hg : g = fun x => if x = 0 then 1/3 else if x = 2 then 1/6 else if x = -1 then 1/2 else 0)  (h\u2080 : \u2200 x, g x * exp (t * x) = (1/3) * exp (t * x) + (1/6) * exp (2 * t * x) + (1/2) * exp (-t * x)) : \u2211' x : \u211d, g x * exp (t * x) = 1/3 + 1/6 * exp (2 * t) + 1/2 * exp (-t):= by\n  have h\u2081 := h\u2080 0\n  have h\u2082 := h\u2080 2\n  have h\u2083 := h\u2080 (-1)\n  simp only [hg, zero_eq, zero_add, zero_mul, zero_sub, sub_zero, one_mul, neg_mul, neg_neg,\n    mul_one, add_zero, add_left_neg, add_zero, exp_zero, mul_comm] at h\u2081 h\u2082 h\u2083\n  norm_num at h\u2081 h\u2082 h\u2083\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0) (hb : b > 0) (hx : c > 0) : (a / b + b / c + c / a) \u2265 (a + b) / (b + c) + (b + c) / (a + b) + 1 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 \u2265 x / y + y / z + z / x - 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 \u2265 x / y + y / z + z / x - 3:= by\n  have h\u2080 : 0 < x * y := by positivity\n  have h\u2081 : 0 < y * z := by positivity\n  have h\u2082 : 0 < z * x := by positivity\n  have h\u2083 : 0 < x * y * z := by positivity\n  have h\u2084 : 0 < x ^ 2 * y ^ 2 * z ^ 2 := by positivity\n  field_simp [h\u2080, h\u2081, h\u2082, h\u2083, h\u2084]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x ^ 2 * z - y ^ 2 * x), sq_nonneg (y ^ 2 * x - z ^ 2 * y), sq_nonneg (z ^ 2 * y - x ^ 2 * z),\n    sq_nonneg (x * y * z), sq_nonneg (x * y * z * (x * y - y * z)), sq_nonneg (x * y * z * (y * z - z * x)),\n    sq_nonneg (x * y * z * (z * x - x * y))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 \u2265 x / y + y / z + z / x - 3:= by\n  have h : 0 < x * y := mul_pos hx hy\n  have h' : 0 < y * z := mul_pos hy hz\n  have h'' : 0 < z * x := mul_pos hz hx\n  have h1 : 0 < x * y * z := by positivity\n  have h2 : 0 < x ^ 2 * y ^ 2 * z ^ 2 := by positivity\n  field_simp [h, h', h'', h1, h2]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x ^ 2 * z - y ^ 2 * x), sq_nonneg (y ^ 2 * x - z ^ 2 * y), sq_nonneg (z ^ 2 * y - x ^ 2 * z),\n    sq_nonneg (x * y * z), sq_nonneg (x * y * z * (x * y - y * z)), sq_nonneg (x * y * z * (y * z - z * x)),\n    sq_nonneg (x * y * z * (z * x - x * y))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 \u2265 x / y + y / z + z / x - 3:= by\n  have : 0 < x * y := by positivity\n  have : 0 < y * z := by positivity\n  have : 0 < z * x := by positivity\n  have h\u2080 : 0 < x * y * z := by positivity\n  have h\u2081 : 0 < x ^ 2 * y ^ 2 * z ^ 2 := by positivity\n  field_simp [h\u2080.ne', h\u2081.ne']\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (x ^ 2 * z - y ^ 2 * x), sq_nonneg (y ^ 2 * x - z ^ 2 * y), sq_nonneg (z ^ 2 * y - x ^ 2 * z),\n    sq_nonneg (x * y * z), sq_nonneg (x * y * z * (x * y - y * z)),\n    sq_nonneg (x * y * z * (y * z - z * x)), sq_nonneg (x * y * z * (z * x - x * y))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 \u2265 x / y + y / z + z / x - 3:= by\n  have h : 0 < x * y := by positivity\n  have h' : 0 < y * z := by positivity\n  have h'' : 0 < x * z := by positivity\n  have h1 : x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 \u2265 x / y + y / z + z / x - 3 := by\n    have h2 : 0 < x * y * z := by positivity\n    have h3 : 0 < x ^ 2 * z * y := by positivity\n    have h4 : 0 < x * y * z ^ 2 := by positivity\n    have h5 : 0 < x * y * z ^ 2 * (x * y * z) := by positivity\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (x ^ 2 * z - y ^ 2 * x), sq_nonneg (y ^ 2 * x - z ^ 2 * y), sq_nonneg (z ^ 2 * y - x ^ 2 * z),\n      sq_nonneg (x * y * z), sq_nonneg (x * y * z * (x * y - y * z)), sq_nonneg (x * y * z * (y * z - z * x)),\n      sq_nonneg (x * y * z * (z * x - x * y))]\n  linarith"
  ]
 },
 {
  "old": "{a b c : \u211d} (ha : a > 0) (hb : b > 0) (hc : c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : a / (b + c) + b / (c + a) + c / (a + b) + 4 * a * b * c / (a + b) / (b + c) / (c + a) \u2265 2 := by",
  "new": ": a / (b + c) + b / (c + a) + c / (a + b) + 4 * a * b * c / (a + b) / (b + c) / (c + a) \u2265 2 \u2194 a / (b + c) + b / (c + a) + c / (a + b) \u2265 2 - 4 * a * b * c / (a + b) / (b + c) / (c + a):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    a / (b + c) + b / (c + a) + c / (a + b) + 4 * a * b * c / (a + b) / (b + c) / (c + a) \u2265 2 \u2194 a / (b + c) + b / (c + a) + c / (a + b) \u2265 2 - 4 * a * b * c / (a + b) / (b + c) / (c + a):= by\n  cases' Nat.eq_zero_or_pos a with ha ha <;> cases' Nat.eq_zero_or_pos b with hb hb <;> cases' Nat.eq_zero_or_pos c with hc hc <;>\n  simp_all [Nat.div_eq_of_lt, Nat.div_eq_of_lt, Nat.div_eq_of_lt]\n  <;> norm_num <;> ring_nf\n  <;> norm_num\n  <;> constructor <;> intro h <;> linarith\n  <;> norm_num\n  <;> ring_nf\n  <;> norm_num\n  <;> constructor <;> intro h <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    a / (b + c) + b / (c + a) + c / (a + b) + 4 * a * b * c / (a + b) / (b + c) / (c + a) \u2265 2 \u2194 a / (b + c) + b / (c + a) + c / (a + b) \u2265 2 - 4 * a * b * c / (a + b) / (b + c) / (c + a):= by\n  constructor\n  rintro h\n  simp_all\n  rintro h\n  simp_all",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    a / (b + c) + b / (c + a) + c / (a + b) + 4 * a * b * c / (a + b) / (b + c) / (c + a) \u2265 2 \u2194 a / (b + c) + b / (c + a) + c / (a + b) \u2265 2 - 4 * a * b * c / (a + b) / (b + c) / (c + a):= by\n  rw [add_comm]\n  rw [add_comm]\n  constructor <;> intro h <;> simp_all [Nat.div_eq_of_lt]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a^2 + b^2 + c^2 = 3) : 10 * (a + b + c) \u2264 Real.sqrt (a^2 + 99) + Real.sqrt (b^2 + 99) + Real.sqrt (c^2 + 99) := by",
  "new": "(x y : \u2115) (h : x ^ 2 + y ^ 2 \u2264 10) : x.Coprime y \u2228 \u00ac x.Coprime y:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2264 10) : x.Coprime y \u2228 \u00ac x.Coprime y:= by\n  by_cases h : x.Coprime y <;> simp_all\n  <;>\n    omega\n  <;>\n    simp_all\n  <;>\n    linarith\n  <;>\n    simp_all\n  <;>\n    linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2264 10) : x.Coprime y \u2228 \u00ac x.Coprime y:= by\n  by_cases h' : x.Coprime y <;> simp [h']\n  <;> rcases x with (_ | _ | _ | _ | _ | _ | _ | _ | _ | _ | x) <;> rcases y with (_ | _ | _ | _ | _ | _ | _ | _ | _ | _ | y) <;> norm_num at h <;> simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2264 10) : x.Coprime y \u2228 \u00ac x.Coprime y:= by\n  by_cases hx : x.Coprime y\n  <;> simp_all\n  <;> by_cases hy : x ^ 2 + y ^ 2 \u2264 10\n  <;> simp_all\n  <;> omega"
  ]
 },
 {
  "old": "(a b : \u2115) : Nat.gcd (2 ^ a - 1) (2 ^ b - 1) = 2 ^ Nat.gcd a b - 1 := by",
  "new": "(a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b):= by\n  cases' Classical.em (Nat.Coprime a b) with h h\n  exacts [Or.inl h, Or.inr h]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b):= by\n  cases Nat.eq_zero_or_pos a <;> cases Nat.eq_zero_or_pos b <;>\n  simp [Nat.coprime_iff_gcd_eq_one, *]\n  <;> omega\n  <;> omega\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b):= by\n  by_cases h : Nat.Coprime a b <;> simp [h]\n  <;> tauto\n  <;> tauto\n  <;> tauto",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b):= by\n  by_cases h : Nat.Coprime a b\n  exacts [Or.inl h, Or.inr (by simp [h])]"
  ]
 },
 {
  "old": "(a b c : \u211d) (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : (a + b) * (a + c) * (b + c) / 8 \u2265 (2 * a + b) * (2 * b + c) * (2 * c + a) / 27 := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : (a + b) * (b + c) * (c + a) / 2 \u2265 a * b * b + b * c * c + c * a * a:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_10 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) :\n      (a + b) * (b + c) * (c + a) / 2 \u2265 a * b * b + b * c * c + c * a * a:= by\n  ring_nf\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_pos ha hb, mul_pos hb hc, mul_pos hc ha,\n    mul_pos (sub_pos.mpr hab) (sub_pos.mpr hca), mul_pos (sub_pos.mpr hbc) (sub_pos.mpr hab), mul_pos (sub_pos.mpr hca) (sub_pos.mpr hbc)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : 1 \u2264 a / Real.sqrt (a ^ 2 + 8 * b * c) + b / Real.sqrt (b ^ 2 + 8 * c * a) + c / Real.sqrt (c ^ 2 + 8 * a * b) := by",
  "new": ": Real.sqrt (Real.sqrt (1 + a ^ 2) ^ 2 + 4 * b ^ 2) + Real.sqrt (Real.sqrt (1 + b ^ 2) ^ 2 + 4 * a ^ 2) \u2265 2 * |a + b| / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) ^ 2 + 4 * b ^ 2) +\n      Real.sqrt (Real.sqrt (1 + b ^ 2) ^ 2 + 4 * a ^ 2) \u2265 2 * |a + b| / 2:= by\n  have h\u2080 : Real.sqrt (1 + a ^ 2) \u2265 0 := Real.sqrt_nonneg (1 + a ^ 2)\n  have h\u2081 : Real.sqrt (1 + b ^ 2) \u2265 0 := Real.sqrt_nonneg (1 + b ^ 2)\n  have h\u2082 : Real.sqrt (1 + a ^ 2) ^ 2 = 1 + a ^ 2 := Real.sq_sqrt (by nlinarith)\n  have h\u2083 : Real.sqrt (1 + b ^ 2) ^ 2 = 1 + b ^ 2 := Real.sq_sqrt (by nlinarith)\n  have h\u2084 : Real.sqrt (Real.sqrt (1 + a ^ 2) ^ 2 + 4 * b ^ 2) \u2265 0 :=\n    Real.sqrt_nonneg (Real.sqrt (1 + a ^ 2) ^ 2 + 4 * b ^ 2)\n  have h\u2085 : Real.sqrt (Real.sqrt (1 + b ^ 2) ^ 2 + 4 * a ^ 2) \u2265 0 :=\n    Real.sqrt_nonneg (Real.sqrt (1 + b ^ 2) ^ 2 + 4 * a ^ 2)\n  have h\u2086 : Real.sqrt (Real.sqrt (1 + a ^ 2) ^ 2 + 4 * b ^ 2) \u2265 |a| := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_abs a]\n  have h\u2087 : Real.sqrt (Real.sqrt (1 + b ^ 2) ^ 2 + 4 * a ^ 2) \u2265 |b| := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_abs b]\n  have h\u2088 : Real.sqrt (Real.sqrt (1 + a ^ 2) ^ 2 + 4 * b ^ 2) +\n      Real.sqrt (Real.sqrt (1 + b ^ 2) ^ 2 + 4 * a ^ 2) \u2265 |a| + |b| := by\n    linarith\n  have h\u2089 : |a + b| \u2264 |a| + |b| := abs_add a b\n  linarith\n  <;> simp [h\u2080, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087, h\u2088, h\u2089]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) ^ 2 + 4 * b ^ 2) +\n      Real.sqrt (Real.sqrt (1 + b ^ 2) ^ 2 + 4 * a ^ 2) \u2265 2 * |a + b| / 2:= by\n  have h\u2081 : 0 \u2264 Real.sqrt (1 + a ^ 2) := Real.sqrt_nonneg _\n  have h\u2082 : 0 \u2264 Real.sqrt (1 + b ^ 2) := Real.sqrt_nonneg _\n  have h\u2083 : 0 \u2264 Real.sqrt (Real.sqrt (1 + a ^ 2) ^ 2 + 4 * b ^ 2) := Real.sqrt_nonneg _\n  have h\u2084 : 0 \u2264 Real.sqrt (Real.sqrt (1 + b ^ 2) ^ 2 + 4 * a ^ 2) := Real.sqrt_nonneg _\n  have h\u2085 : 0 \u2264 |a + b| := abs_nonneg _\n  have h\u2086 : 0 \u2264 2 := by norm_num\n  have h\u2087 : Real.sqrt (Real.sqrt (1 + a ^ 2) ^ 2 + 4 * b ^ 2) \u2265 |a| := by\n    apply le_sqrt_of_sq_le\n    rw [sq_abs]\n    nlinarith [sq_sqrt (by nlinarith : 0 \u2264 1 + a ^ 2), sq_nonneg (b ^ 2)]\n  have h\u2088 : Real.sqrt (Real.sqrt (1 + b ^ 2) ^ 2 + 4 * a ^ 2) \u2265 |b| := by\n    apply le_sqrt_of_sq_le\n    rw [sq_abs]\n    nlinarith [sq_sqrt (by nlinarith : 0 \u2264 1 + b ^ 2), sq_nonneg (a ^ 2)]\n  nlinarith [abs_add a b, h\u2087, h\u2088]\n  <;> norm_num"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^2 / b + b^2 / c + c^2 / a) \u2265 Real.sqrt ((a^2 + b^2) / 2) + Real.sqrt ((b^2 + c^2) / 2) + Real.sqrt ((a^2 + c^2) / 2) := by",
  "new": ": Real.sqrt (Real.sqrt (2 / 3) + 2 / 3) \u2264 3 / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (2 / 3) + 2 / 3) \u2264 3 / 2:= by\n  have h\u2080 : 0 \u2264 Real.sqrt (2 / 3) := Real.sqrt_nonneg _\n  have h\u2081 : Real.sqrt (2 / 3) \u2264 3 / 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    linarith\n    norm_num\n  have h\u2082 : Real.sqrt (Real.sqrt (2 / 3) + 2 / 3) \u2264 3 / 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    nlinarith\n    nlinarith\n  exact h\u2082",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (2 / 3) + 2 / 3) \u2264 3 / 2:= by\n  have h\u2080 : 0 \u2264 Real.sqrt (2 / 3) := Real.sqrt_nonneg _\n  have h\u2081 : 0 \u2264 (Real.sqrt (2 / 3) + 2 / 3) := by linarith\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  \u00b7 positivity\n  \u00b7 nlinarith [sq_sqrt (show (0 : \u211d) \u2264 2 / 3 from by linarith),\n      sq_sqrt (show (0 : \u211d) \u2264 Real.sqrt (2 / 3) from by positivity)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (2 / 3) + 2 / 3) \u2264 3 / 2:= by\n  have h : 0 \u2264 Real.sqrt (2 / 3) := Real.sqrt_nonneg (2 / 3)\n  rw [Real.sqrt_le_iff]\n  constructor\n  all_goals\n    nlinarith [Real.sq_sqrt (show 0 \u2264 2 / 3 from by positivity), Real.sqrt_nonneg (2 / 3)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c) : 1 / a^2 + 1 / b^2 + 1 / c^2 \u2265 1 / (a * b) + 1 / (b * c) + 1 / (c * a) := by",
  "new": ": \u2200 x : \u211d, x > 0 \u2192 x ^ 2 * (1 / x + 1 / x ^ 2 + 1 / x ^ 3) \u2265 1 + 1 + 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 2 * (1 / x + 1 / x ^ 2 + 1 / x ^ 3) \u2265 1 + 1 + 1:= by\n  intro x hx\n  have h\u2081 : x > 0 := by assumption\n  have h\u2082 : x ^ 2 * (1 / x + 1 / x ^ 2 + 1 / x ^ 3) = x + 1 + 1 / x := by\n    field_simp\n    ring\n  have h\u2083 : x + 1 + 1 / x \u2265 1 + 1 + 1 := by\n    rw [add_comm]\n    apply le_of_sub_nonneg\n    field_simp\n    rw [le_div_iff' (by positivity)]\n    nlinarith [sq_nonneg (x - 1)]\n  linarith\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 2 * (1 / x + 1 / x ^ 2 + 1 / x ^ 3) \u2265 1 + 1 + 1:= by\n  intro x hx\n  have h1 : x > 0 := hx\n  have h2 : x ^ 2 > 0 := pow_pos h1 2\n  have h3 : x ^ 3 > 0 := pow_pos h1 3\n  have h4 : x ^ 2 * (1 / x + 1 / x ^ 2 + 1 / x ^ 3) \u2265 1 + 1 + 1 := by\n    rw [mul_comm]\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x - 1), sq_nonneg (x ^ 2 - 1), sq_nonneg (x ^ 2 - x),\n      sq_nonneg (x ^ 2 + x - 1)]\n  exact h4"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) : (a + b) / (b + c) + (b + c) / (c + a) + (c + a) / (a + b) + 3 * (a * b + b * c + c * a) / (a + b + c) ^ 2 >= 4 := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 (a + b) / (b + c) + (b + c) / (c + a) + (c + a) / (a + b) + 3 * (a * b + b * c + c * a) / (a + b + c) ^ 2 >= 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 (a + b) / (b + c) + (b + c) / (c + a) + (c + a) / (a + b) + 3 * (a * b + b * c + c * a) / (a + b + c) ^ 2 >= 4:= by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le,\n    mul_nonneg (sq_nonneg (a - b)) (sq_nonneg (b - c)),\n    mul_nonneg (sq_nonneg (b - c)) (sq_nonneg (c - a)),\n    mul_nonneg (sq_nonneg (c - a)) (sq_nonneg (a - b))]\n  <;> ring_nf\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 (a + b) / (b + c) + (b + c) / (c + a) + (c + a) / (a + b) + 3 * (a * b + b * c + c * a) / (a + b + c) ^ 2 >= 4:= by\n  intro a b c h\n  have h1 : 0 < a := h.1\n  have h2 : 0 < b := h.2.1\n  have h3 : 0 < c := h.2.2\n  have h4 : 0 < a * b := by positivity\n  have h5 : 0 < b * c := by positivity\n  have h6 : 0 < c * a := by positivity\n  have h7 : 0 < a * b + b * c + c * a := by positivity\n  have h8 : 0 < a * b * c := by positivity\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a ^ 2 - b ^ 2), mul_self_nonneg (b ^ 2 - c ^ 2),\n    mul_self_nonneg (c ^ 2 - a ^ 2), mul_self_nonneg (a * b - b * c),\n    mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 (a + b) / (b + c) + (b + c) / (c + a) + (c + a) / (a + b) + 3 * (a * b + b * c + c * a) / (a + b + c) ^ 2 >= 4:= by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * a := by positivity\n  have h\u2083 : 0 < a * b := by positivity\n  field_simp [ha.ne', hb.ne', hc.ne', h\u2081.ne', h\u2082.ne', h\u2083.ne']\n  rw [le_div_iff (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * a - b * b), mul_self_nonneg (b * b - c * c),\n    mul_self_nonneg (c * c - a * a), mul_self_nonneg (a * b - b * c),\n    mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b)]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 (a + b) / (b + c) + (b + c) / (c + a) + (c + a) / (a + b) + 3 * (a * b + b * c + c * a) / (a + b + c) ^ 2 >= 4:= by\n  rintro a b c \u27e8a_pos, b_pos, c_pos\u27e9\n  field_simp [add_comm]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_nonneg a_pos.le b_pos.le, mul_nonneg b_pos.le c_pos.le, mul_nonneg c_pos.le a_pos.le,\n    mul_nonneg (sq_nonneg (a - b)) a_pos.le, mul_nonneg (sq_nonneg (b - c)) b_pos.le,\n    mul_nonneg (sq_nonneg (c - a)) c_pos.le, mul_nonneg (sq_nonneg (a - b)) b_pos.le,\n    mul_nonneg (sq_nonneg (b - c)) c_pos.le, mul_nonneg (sq_nonneg (c - a)) a_pos.le]"
  ]
 },
 {
  "old": "(A B C : \u211d) (hx: A > 0 \u2227 B > 0 \u2227 C > 0) (hab : A + B + C = \u03c0) : (1 + Real.cos A) / (2 - Real.cos A) + (1 + Real.cos B) / (2 - Real.cos B) + (1 + Real.cos C) / (2 - Real.cos C) \u2265 3 := by",
  "new": ": Real.sqrt (Real.sqrt (1 + Real.sqrt 2) + Real.sqrt 2) + Real.sqrt (Real.sqrt 2) \u2265 Real.sqrt (2 * (Real.sqrt 3 + 1)) - Real.sqrt 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + Real.sqrt 2) + Real.sqrt 2) + Real.sqrt (Real.sqrt 2) \u2265\n     Real.sqrt (2 * (Real.sqrt 3 + 1))  - Real.sqrt 3:= by\n  have h\u2080 : Real.sqrt 3 \u2265 0 := Real.sqrt_nonneg 3\n  have h\u2081 : Real.sqrt 2 \u2265 0 := Real.sqrt_nonneg 2\n  have h\u2082 : Real.sqrt (1 + Real.sqrt 2) \u2265 0 := Real.sqrt_nonneg (1 + Real.sqrt 2)\n  have h\u2083 : Real.sqrt (Real.sqrt (1 + Real.sqrt 2) + Real.sqrt 2) \u2265 0 := Real.sqrt_nonneg (Real.sqrt (1 + Real.sqrt 2) + Real.sqrt 2)\n  have h\u2084 : Real.sqrt (Real.sqrt 2) \u2265 0 := Real.sqrt_nonneg (Real.sqrt 2)\n  have h\u2085 : Real.sqrt (2 * (Real.sqrt 3 + 1)) \u2265 0 := Real.sqrt_nonneg (2 * (Real.sqrt 3 + 1))\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 2 by linarith),\n    sq_sqrt (show (0 : \u211d) \u2264 3 by linarith),\n    sq_sqrt (show (0 : \u211d) \u2264 1 + Real.sqrt 2 by linarith),\n    sq_sqrt (show (0 : \u211d) \u2264 Real.sqrt (1 + Real.sqrt 2) + Real.sqrt 2 by linarith),\n    sq_sqrt (show (0 : \u211d) \u2264 Real.sqrt 2 by linarith),\n    sq_sqrt (show (0 : \u211d) \u2264 2 * (Real.sqrt 3 + 1) by linarith),\n    sq_sqrt (show (0 : \u211d) \u2264 3 by linarith),\n    sq_nonneg (Real.sqrt 3 - 1),\n    sq_nonneg (Real.sqrt 2 - Real.sqrt 3)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + Real.sqrt 2) + Real.sqrt 2) + Real.sqrt (Real.sqrt 2) \u2265\n     Real.sqrt (2 * (Real.sqrt 3 + 1))  - Real.sqrt 3:= by\n  have h\u2080 : Real.sqrt 2 \u2265 0 := Real.sqrt_nonneg 2\n  have h\u2081 : Real.sqrt 3 \u2265 0 := Real.sqrt_nonneg 3\n  have h\u2082 : Real.sqrt (1 + Real.sqrt 2) \u2265 0 := Real.sqrt_nonneg (1 + Real.sqrt 2)\n  have h\u2083 : Real.sqrt (Real.sqrt 2) \u2265 0 := Real.sqrt_nonneg (Real.sqrt 2)\n  have h\u2084 : Real.sqrt (Real.sqrt (1 + Real.sqrt 2) + Real.sqrt 2) \u2265 0 :=\n    Real.sqrt_nonneg (Real.sqrt (1 + Real.sqrt 2) + Real.sqrt 2)\n  have h\u2085 : Real.sqrt (2 * (Real.sqrt 3 + 1)) \u2265 0 := Real.sqrt_nonneg (2 * (Real.sqrt 3 + 1))\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 2 by linarith),\n    sq_sqrt (show (0 : \u211d) \u2264 3 by linarith),\n    sq_sqrt (show (0 : \u211d) \u2264 1 + Real.sqrt 2 by linarith),\n    sq_sqrt (show (0 : \u211d) \u2264 Real.sqrt (1 + Real.sqrt 2) + Real.sqrt 2 by positivity),\n    sq_sqrt (show (0 : \u211d) \u2264 2 * (Real.sqrt 3 + 1) by positivity),\n    sq_nonneg (Real.sqrt 3 - 1),\n    sq_nonneg (Real.sqrt (1 + Real.sqrt 2) - Real.sqrt 2)]\n  <;>\n  linarith"
  ]
 },
 {
  "old": "(x y z : \u211d) : (x + y) * (y + z) * (z + x) \u2265 (8 / 9) * (x + y + z) * (x * y + y * z + z * x) := by",
  "new": ": (x^2+x+1) ^ 3 - x ^ 2 * (x+1) ^ 2 \u2265 3 * x ^ 2 + 3 * x + 1 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_12_2010_p16 :  (x^2+x+1) ^ 3 - x ^ 2 * (x+1) ^ 2 \u2265 3 * x ^ 2 + 3 * x + 1  := by\n  simp only [mul_add, add_mul, mul_sub, sub_mul, mul_one, mul_pow, one_pow, add_assoc,\n    add_left_comm, add_comm]\n  induction' x with x hx\n  norm_num\n  simp only [Nat.cast_add, Nat.cast_one, Nat.cast_pow, Nat.cast_mul, add_assoc, add_left_comm,\n    add_comm]\n  ring_nf\n  omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_12_2010_p16 :  (x^2+x+1) ^ 3 - x ^ 2 * (x+1) ^ 2 \u2265 3 * x ^ 2 + 3 * x + 1  := by\n  simp only [mul_add, mul_one, add_assoc, add_right_comm]\n  ring\n  cases x with\n  | zero => simp\n  | succ x =>\n    ring_nf\n    omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_12_2010_p16 :  (x^2+x+1) ^ 3 - x ^ 2 * (x+1) ^ 2 \u2265 3 * x ^ 2 + 3 * x + 1  := by\n  simp [pow_succ, mul_add, mul_comm, mul_left_comm]\n  cases x with\n  | zero => simp\n  | succ x =>\n    ring_nf\n    omega\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_12_2010_p16 :  (x^2+x+1) ^ 3 - x ^ 2 * (x+1) ^ 2 \u2265 3 * x ^ 2 + 3 * x + 1  := by\n  cases x with\n  | zero => norm_num\n  | succ x =>\n    simp [Nat.mul_add, Nat.add_mul, pow_two, pow_three]\n    ring_nf\n    omega"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a / b + b / c + c / a) * (b / a + c / b + a / c) \u2265 (a / b + (9:\u211d)^(1/3) - 1) * (b / c + (9:\u211d)^(1/3) - 1) * (c / a + (9:\u211d)^(1/3) - 1) := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a / b + b / c + c / a) * (b / a + c / b + a / c) \u2265 (a / b + b / c + c / a) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_10_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :   (a / b + b / c + c / a) * (b / a + c / b + a / c) \u2265 (a / b + b / c + c / a)  := by\n  have : 0 < a / b := by positivity\n  have : 0 < b / c := by positivity\n  have : 0 < c / a := by positivity\n  have : (a / b + b / c + c / a) \u2265 0 := by positivity\n  have : (b / a + c / b + a / c) \u2265 1 := by\n    have : 0 < b * c := by positivity\n    have : 0 < c * a := by positivity\n    have : 0 < a * b := by positivity\n    field_simp\n    rw [le_div_iff (by positivity)]\n    ring_nf\n    nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a)]\n  nlinarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_10_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :   (a / b + b / c + c / a) * (b / a + c / b + a / c) \u2265 (a / b + b / c + c / a)  := by\n  have h\u2081 : (a / b + b / c + c / a) \u2265 0 := by positivity\n  have h\u2082 : (b / a + c / b + a / c) \u2265 1 := by\n    have h\u2083 : 0 < a * b := by positivity\n    have h\u2084 : 0 < b * c := by positivity\n    have h\u2085 : 0 < c * a := by positivity\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a)]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_10_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :   (a / b + b / c + c / a) * (b / a + c / b + a / c) \u2265 (a / b + b / c + c / a)  := by\n  have h1 : (a / b + b / c + c / a) \u2265 0 := by positivity\n  have h2 : (b / a + c / b + a / c) \u2265 3 := by\n    have h3 : 0 < a * b := by positivity\n    have h4 : 0 < b * c := by positivity\n    have h5 : 0 < c * a := by positivity\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  nlinarith\n  <;> assumption\n  <;> simp_all\n  <;> nlinarith"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x / (y + z) + y / (z + x) + z / (x + y) + 4 * x * y * z / ((x + y) * (y + z) * (z + x))) \u2265 2 := by",
  "new": ": x / (y + z) + y / (z + x) + z / (x + y) + 4 * x * y * z / ((x + y) * (y + z) * (z + x)) \u2265 2 \u2194 x / (y + z) + y / (z + x) + z / (x + y) \u2265 2 - 4 * x * y * z / ((x + y) * (y + z) * (z + x)):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    x / (y + z) + y / (z + x) + z / (x + y) + 4 * x * y * z / ((x + y) * (y + z) * (z + x)) \u2265 2 \u2194\n     x / (y + z) + y / (z + x) + z / (x + y) \u2265 2 - 4 * x * y * z / ((x + y) * (y + z) * (z + x)):= by\n  constructor\n  intro h\n  simp_all\n  intro h\n  simp_all\n  <;>\n    linarith\n  <;>\n    linarith\n  <;>\n    linarith\n  <;>\n    linarith\n  <;>\n    linarith\n  <;>\n    linarith\n  <;>\n    linarith\n  <;>\n    linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    x / (y + z) + y / (z + x) + z / (x + y) + 4 * x * y * z / ((x + y) * (y + z) * (z + x)) \u2265 2 \u2194\n     x / (y + z) + y / (z + x) + z / (x + y) \u2265 2 - 4 * x * y * z / ((x + y) * (y + z) * (z + x)):= by\n  by_cases h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z <;>\n  simp_all [mul_comm, mul_left_comm, mul_assoc, div_eq_mul_inv] <;>\n  norm_num <;>\n  ring_nf <;>\n  constructor <;>\n  intro h <;>\n  linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) : a ^ 4 * (b - c) ^ 2 + b ^ 4 * (a - c) ^ 2 + c ^ 4 * (a - b) ^ 2 \u2265 (a ^ 2 - b ^ 2) * (b ^ 2 - c ^ 2) * (a ^ 2 - c ^ 2) := by",
  "new": ": \u2200 x : \u211d, \u2200 n : \u2115, 1 < n \u2192 x ^ (n * 4) \u2265 x ^ n * x ^ (n * 3):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_12_2010_p16 : \u2200 x : \u211d, \u2200 n : \u2115, 1 < n \u2192 x ^ (n * 4) \u2265 x ^ n * x ^ (n * 3):= by\n  intro x n h\n  simp only [mul_add, mul_one, pow_add, pow_one, pow_mul]\n  nlinarith [mul_self_nonneg (x ^ n - 1), mul_self_nonneg (x ^ n + 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_12_2010_p16 : \u2200 x : \u211d, \u2200 n : \u2115, 1 < n \u2192 x ^ (n * 4) \u2265 x ^ n * x ^ (n * 3):= by\n  intro x n hn\n  norm_num\n  induction' hn with k hk hk' <;> simp_all [Nat.mul_succ, pow_add, pow_one, mul_add, mul_one, pow_mul,\n    mul_comm, mul_left_comm, mul_assoc] <;> nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) : a + b + c + b / c * (a - b) ^ 2 + c / a * (b - c) ^ 2 + a / b * (c - a) ^ 2 \u2264 1 := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 1 \u2192 (a + b + c) ^ 2 + 6 * (a ^ 2 + b ^ 2 + c ^ 2) \u2264 a ^ 2 + b ^ 2 + c ^ 2 + (a + b + c) ^ 2 + 6 * (a ^ 2 + b ^ 2 + c ^ 2) \u2192 a ^ 2 + b ^ 2 + c ^ 2 + (a + b + c) ^ 2 + 6 * (a ^ 2 + b ^ 2 + c ^ 2) \u2264 65 / 3 * (a ^ 2 + b ^ 2 + c ^ 2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 1 \u2192\n   (a + b + c) ^ 2 + 6 * (a ^ 2 + b ^ 2 + c ^ 2) \u2264 a ^ 2 + b ^ 2 + c ^ 2 + (a + b + c) ^ 2 + 6 * (a ^ 2 + b ^ 2 + c ^ 2) \u2192 a ^ 2 + b ^ 2 + c ^ 2 + (a + b + c) ^ 2 + 6 * (a ^ 2 + b ^ 2 + c ^ 2) \u2264 65 / 3 * (a ^ 2 + b ^ 2 + c ^ 2):= by\n  intro a b c h\u2081 h\u2082\n  norm_num\n  nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c)]\n  <;> linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 1 \u2192\n   (a + b + c) ^ 2 + 6 * (a ^ 2 + b ^ 2 + c ^ 2) \u2264 a ^ 2 + b ^ 2 + c ^ 2 + (a + b + c) ^ 2 + 6 * (a ^ 2 + b ^ 2 + c ^ 2) \u2192 a ^ 2 + b ^ 2 + c ^ 2 + (a + b + c) ^ 2 + 6 * (a ^ 2 + b ^ 2 + c ^ 2) \u2264 65 / 3 * (a ^ 2 + b ^ 2 + c ^ 2):= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9 h\n  simp only [habc, add_assoc, add_right_comm, add_left_comm, add_comm] at h \u22a2\n  nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]"
  ]
 },
 {
  "old": ": \u2200 k n : \u2115, k^(2^n) - 1 = (k - 1) * \u220f i in Finset.range n, (k^(2^i) + 1) := by",
  "new": "{d k : \u2115} (hk : 2 \u2264 k) {n : \u2115} (p : \u2115) [hp : Fact p.Prime] (hd : p \u2223 d) (heq : p \u2223 k ^ n) : p \u2223 k \u2228 Nat.Coprime d (k ^ n):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime_dvd_pow' {d k : \u2115} (hk : 2 \u2264 k) {n : \u2115} (p : \u2115) [hp : Fact p.Prime] (hd : p \u2223 d) (heq : p \u2223 k ^ n) : p \u2223 k \u2228 Nat.Coprime d (k ^ n):= by\n  have : p \u2223 k := by\n    exact (Nat.Prime.dvd_of_dvd_pow hp.out heq)\n  exact Or.inl this",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime_dvd_pow' {d k : \u2115} (hk : 2 \u2264 k) {n : \u2115} (p : \u2115) [hp : Fact p.Prime] (hd : p \u2223 d) (heq : p \u2223 k ^ n) : p \u2223 k \u2228 Nat.Coprime d (k ^ n):= by\n  have hpk : p \u2223 k := by\n    have hpk' : p \u2223 k ^ n := heq\n    exact hp.out.dvd_of_dvd_pow hpk'\n  exact Or.inl hpk",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime_dvd_pow' {d k : \u2115} (hk : 2 \u2264 k) {n : \u2115} (p : \u2115) [hp : Fact p.Prime] (hd : p \u2223 d) (heq : p \u2223 k ^ n) : p \u2223 k \u2228 Nat.Coprime d (k ^ n):= by\n  have : p \u2223 k := by\n    have : p \u2223 k ^ n := heq\n    exact hp.out.dvd_of_dvd_pow this\n  exact Or.inl this",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime_dvd_pow' {d k : \u2115} (hk : 2 \u2264 k) {n : \u2115} (p : \u2115) [hp : Fact p.Prime] (hd : p \u2223 d) (heq : p \u2223 k ^ n) : p \u2223 k \u2228 Nat.Coprime d (k ^ n):= by\n  have h1 := Nat.Prime.dvd_of_dvd_pow hp.out heq\n  have h2 : p \u2223 k := by\n    apply h1.trans\n    apply Nat.dvd_of_mod_eq_zero\n    simp [Nat.mod_eq_zero_of_dvd hd]\n  exact Or.inl h2"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : x > 0) (hy : y > 0) (hz : z > 0) : 4 * (1 / (x * y) + 1 / (y * z) + 1 / (z * x)) \u2265 4 * (1 / Real.sqrt (x * y) + 1 / Real.sqrt (y * z) + 1 / Real.sqrt (z * x)) - 3 \u2227 4 * (1 / Real.sqrt (x * y) + 1 / Real.sqrt (y * z) + 1 / Real.sqrt (z * x)) - 3 \u2265 (1 / Real.sqrt (x * y) + 1 / Real.sqrt (y * z) + 1 / Real.sqrt (z * x)) + 3 / 2 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : 3 * Real.sqrt (x * y * (y * z * (z * x))) \u2264 3 * Real.sqrt (x * y) * Real.sqrt (y * z) * Real.sqrt (z * x):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_x1y2z3 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : 3 * Real.sqrt (x * y * (y * z * (z * x))) \u2264 3 * Real.sqrt (x * y) *  Real.sqrt (y * z) * Real.sqrt (z * x):= by\n  have hxy : 0 < x * y := by positivity\n  have hyz : 0 < y * z := by positivity\n  have hxz : 0 < z * x := by positivity\n  have hxyz : 0 < x * y * (y * z * (z * x)) := by positivity\n  have h1 : Real.sqrt (x * y * (y * z * (z * x))) \u2264 Real.sqrt (x * y) * Real.sqrt (y * z * (z * x)) := by\n    rw [Real.sqrt_mul (by positivity : (0 : \u211d) \u2264 x * y)]\n  have h2 : Real.sqrt (y * z * (z * x)) \u2264 Real.sqrt (y * z) * Real.sqrt (z * x) := by\n    rw [Real.sqrt_mul (by positivity : (0 : \u211d) \u2264 y * z)]\n  calc\n    3 * Real.sqrt (x * y * (y * z * (z * x))) \u2264 3 * (Real.sqrt (x * y) * Real.sqrt (y * z * (z * x))) := by gcongr\n    _ \u2264 3 * (Real.sqrt (x * y) * (Real.sqrt (y * z) * Real.sqrt (z * x))) := by gcongr\n    _ = 3 * Real.sqrt (x * y) * Real.sqrt (y * z) * Real.sqrt (z * x) := by ring\n  <;> simp [hxy, hyz, hxz, hxyz]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_x1y2z3 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : 3 * Real.sqrt (x * y * (y * z * (z * x))) \u2264 3 * Real.sqrt (x * y) *  Real.sqrt (y * z) * Real.sqrt (z * x):= by\n  have h\u2080 : Real.sqrt (x * y * (y * z * (z * x))) = Real.sqrt (x * y) * Real.sqrt (y * z * (z * x)) := by\n    rw [Real.sqrt_mul (mul_nonneg hx.le hy.le)]\n  rw [h\u2080]\n  have h\u2081 : Real.sqrt (y * z * (z * x)) = Real.sqrt (y * z) * Real.sqrt (z * x) := by\n    rw [Real.sqrt_mul (mul_nonneg hy.le hz.le)]\n  rw [h\u2081]\n  ring_nf\n  <;> simp [mul_assoc]\n  <;> nlinarith"
  ]
 },
 {
  "old": "(a b : \u211d) (ha : a = (2015!)^(1/2015)) (hb : b = (2014!)^(1/2014)) : a > b \u2228 b > a := by",
  "new": "(a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by\n  apply or_iff_not_imp_left.mpr\n  exact fun h \u21a6 by simpa using h"
  ]
 },
 {
  "old": "(a b c : \u211d) : a ^ 3 + b ^ 3 + c ^ 3 + a * b ^ 3 / c + b * c ^ 3 / a + c * a ^ 3 / b \u2265 a ^ 2 * b + b ^ 2 * c + c ^ 2 * a + 3 * a * b * c := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a ^ 3 + b ^ 3 + c ^ 3 + a * b ^ 3 / c + b * c ^ 3 / a + c * a ^ 3 / b \u2265 a ^ 2 * b + b ^ 2 * c + c ^ 2 * a + 3 * a * b * c:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n  a ^ 3 + b ^ 3 + c ^ 3 + a * b ^ 3 / c + b * c ^ 3 / a + c * a ^ 3 / b \u2265 a ^ 2 * b + b ^ 2 * c + c ^ 2 * a + 3 * a * b * c:= by\n  have h\u2080 : 0 < a * b := mul_pos ha hb\n  have h\u2081 : 0 < b * c := mul_pos hb hc\n  have h\u2082 : 0 < c * a := mul_pos hc ha\n  have h\u2083 : 0 < a * b * c := by positivity\n  have h\u2084 : 0 < a * b ^ 2 := by positivity\n  have h\u2085 : 0 < b * c ^ 2 := by positivity\n  have h\u2086 : 0 < c * a ^ 2 := by positivity\n  have h\u2087 : 0 < a * b * c * (a + b + c) := by positivity\n  field_simp [h\u2080, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a ^ 2 - b * c), mul_self_nonneg (b ^ 2 - c * a),\n    mul_self_nonneg (c ^ 2 - a * b)]"
  ]
 },
 {
  "old": "(a b c k : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (h : k >= 2) (habc : 3 * a + 4 * b + 6 * c >= 42) : a + b + c + k / a + (3 * k - 3) / b + (8 * k - 16) / c >= (7 * k + 8) / 2 := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 2 * a ^ 2 + 2 * b ^ 2 + 2 * c ^ 2 \u2265 (4 * a * b + 4 * b * c + 4 * c * a) / 6 \u2192 (2 * a * b / (a + b) + 2 * b * c / (b + c) + 2 * c * a / (c + a)) \u2265 (2 * a * b + 2 * b * c + 2 * c * a) / (a + b + c):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192\n   2 * a ^ 2 + 2 * b ^ 2 + 2 * c ^ 2 \u2265 (4 * a * b + 4 * b * c + 4 * c * a) / 6 \u2192\n   (2 * a * b / (a + b) + 2 * b * c / (b + c) + 2 * c * a / (c + a)) \u2265 (2 * a * b + 2 * b * c + 2 * c * a) / (a + b + c):= by\n  rintro a b c \u27e8a_pos, b_pos, c_pos\u27e9 h\u2080\n  refine' le_of_sub_nonneg _\n  field_simp\n  ring_nf\n  positivity\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192\n   2 * a ^ 2 + 2 * b ^ 2 + 2 * c ^ 2 \u2265 (4 * a * b + 4 * b * c + 4 * c * a) / 6 \u2192\n   (2 * a * b / (a + b) + 2 * b * c / (b + c) + 2 * c * a / (c + a)) \u2265 (2 * a * b + 2 * b * c + 2 * c * a) / (a + b + c):= by\n  intro a b c h\u2080 h\u2081\n  rcases h\u2080 with \u27e8ha, hb, hc\u27e9\n  refine' le_of_sub_nonneg _\n  field_simp [add_assoc]\n  ring_nf\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192\n   2 * a ^ 2 + 2 * b ^ 2 + 2 * c ^ 2 \u2265 (4 * a * b + 4 * b * c + 4 * c * a) / 6 \u2192\n   (2 * a * b / (a + b) + 2 * b * c / (b + c) + 2 * c * a / (c + a)) \u2265 (2 * a * b + 2 * b * c + 2 * c * a) / (a + b + c):= by\n  rintro a b c \u27e8ha, hb, hc\u27e9 h\u2080\n  have h\u2081 : 0 < a + b + c := by linarith\n  have h\u2082 : 0 < a * b := by nlinarith\n  have h\u2083 : 0 < b * c := by nlinarith\n  have h\u2084 : 0 < c * a := by nlinarith\n  have h\u2085 : 0 < a * b + b * c + c * a := by nlinarith\n  have h\u2086 : 0 < a * b * (a + b) := by positivity\n  have h\u2087 : 0 < b * c * (b + c) := by positivity\n  have h\u2088 : 0 < c * a * (c + a) := by positivity\n  have h\u2089 : 0 < a * b * (a + b) + b * c * (b + c) + c * a * (c + a) := by nlinarith\n  have h\u2081\u2080 : 0 < a * b * (a + b) + b * c * (b + c) + c * a * (c + a) + 3 * (a * b + b * c + c * a) := by nlinarith\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087, h\u2088, h\u2089, h\u2081\u2080]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192\n   2 * a ^ 2 + 2 * b ^ 2 + 2 * c ^ 2 \u2265 (4 * a * b + 4 * b * c + 4 * c * a) / 6 \u2192\n   (2 * a * b / (a + b) + 2 * b * c / (b + c) + 2 * c * a / (c + a)) \u2265 (2 * a * b + 2 * b * c + 2 * c * a) / (a + b + c):= by\n  intro a b c h\u2081 h\u2082\n  rcases h\u2081 with \u27e8ha, hb, hc\u27e9\n  apply le_of_sub_nonneg\n  field_simp\n  ring_nf\n  positivity"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 3) : (b^2 - b*c + c^2) * (c^2 - c*a + a^2) * (a^2 - a*b + b^2) \u2265 1 := by",
  "new": "(a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  cases' Nat.eq_zero_or_pos a with ha ha <;> cases' Nat.eq_zero_or_pos b with hb hb <;>\n    simp_all [Nat.mul_eq_zero, Nat.Coprime, Nat.gcd_eq_left]\n  all_goals omega\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  rw [Nat.coprime_iff_gcd_eq_one]\n  rw [eq_comm]\n  simp only [eq_comm, mul_eq_one] at h\n  aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  simp [Nat.coprime_iff_gcd_eq_one, Nat.gcd_eq_right]\n  contrapose! h\n  aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  have : a * b = 1 := h\n  cases' Nat.eq_zero_or_pos a with ha ha <;> cases' Nat.eq_zero_or_pos b with hb hb <;>\n    simp_all [Nat.coprime_iff_gcd_eq_one, Nat.gcd_eq_right]\n  <;> omega"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : (b + c) ^ 4 / a + (c + a) ^ 4 / b + (a + b) ^ 4 / c \u2265 16 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) : (x + y) ^ 4 / z + (y + z) ^ 4 / x + (z + x) ^ 4 / y \u2265 16:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) : (x + y) ^ 4 / z + (y + z) ^ 4 / x + (z + x) ^ 4 / y \u2265 16:= by\n  have h1 : 0 < x * y := by positivity\n  have h2 : 0 < y * z := by positivity\n  have h3 : 0 < z * x := by positivity\n  have h4 : 0 < (x * y) * (y * z) := by positivity\n  have h5 : 0 < (y * z) * (z * x) := by positivity\n  have h6 : 0 < (z * x) * (x * y) := by positivity\n  field_simp [h1, h2, h3, h4, h5, h6]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x ^ 2 - y ^ 2), mul_self_nonneg (y ^ 2 - z ^ 2),\n    mul_self_nonneg (z ^ 2 - x ^ 2),\n    mul_self_nonneg (x * y - y * z), mul_self_nonneg (y * z - z * x),\n    mul_self_nonneg (z * x - x * y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) : (x + y) ^ 4 / z + (y + z) ^ 4 / x + (z + x) ^ 4 / y \u2265 16:= by\n  have : 0 < x * y := by positivity\n  have : 0 < y * z := by positivity\n  have : 0 < z * x := by positivity\n  field_simp [habc]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_self_nonneg (x ^ 2 - y ^ 2), mul_self_nonneg (y ^ 2 - z ^ 2),\n    mul_self_nonneg (z ^ 2 - x ^ 2), mul_self_nonneg (x * y - y * z),\n    mul_self_nonneg (y * z - z * x), mul_self_nonneg (z * x - x * y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) : (x + y) ^ 4 / z + (y + z) ^ 4 / x + (z + x) ^ 4 / y \u2265 16:= by\n  have h\u2080 : 0 < x * y := by positivity\n  have h\u2081 : 0 < y * z := by positivity\n  have h\u2082 : 0 < z * x := by positivity\n  have h\u2083 : 0 < x * y * z := by positivity\n  field_simp [h\u2080, h\u2081, h\u2082, h\u2083]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_self_nonneg (x ^ 2 - y ^ 2), mul_self_nonneg (y ^ 2 - z ^ 2),\n    mul_self_nonneg (z ^ 2 - x ^ 2), mul_self_nonneg (x * y - y * z),\n    mul_self_nonneg (y * z - z * x), mul_self_nonneg (z * x - x * y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) : (x + y) ^ 4 / z + (y + z) ^ 4 / x + (z + x) ^ 4 / y \u2265 16:= by\n  have h\u2081 : 0 < x * y := by positivity\n  have h\u2082 : 0 < y * z := by positivity\n  have h\u2083 : 0 < z * x := by positivity\n  have h\u2084 : 0 < x * y * z := by positivity\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_self_nonneg (x ^ 2 - y ^ 2), mul_self_nonneg (y ^ 2 - z ^ 2),\n    mul_self_nonneg (z ^ 2 - x ^ 2),\n    mul_self_nonneg (x * y - y * z), mul_self_nonneg (y * z - z * x),\n    mul_self_nonneg (z * x - x * y)]\n  <;> assumption"
  ]
 },
 {
  "old": "(p : \u2115) (hp : p.Prime) (hp1 : p > 2) (n : \u2115) : p^(n+1) \u2223 (p-1)^(p^n) + 1 := by",
  "new": "(p : \u2115) {n : \u2115} (hn : n \u2260 0) (hp : p.Prime) : p \u2223 n \u2228 (Nat.Coprime p n):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {n : \u2115} (hn : n \u2260 0) (hp : p.Prime) :\n     p \u2223 n \u2228 (Nat.Coprime p n):= by\n  by_cases d : p \u2223 n\n  \u00b7 exact Or.inl d\n  \u00b7 exact Or.inr (hp.coprime_iff_not_dvd.2 d)",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {n : \u2115} (hn : n \u2260 0) (hp : p.Prime) :\n     p \u2223 n \u2228 (Nat.Coprime p n):= by\n  by_cases h : p \u2223 n\n  \u00b7 exact Or.inl h\n  \u00b7 exact Or.inr (hp.coprime_iff_not_dvd.2 h)",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {n : \u2115} (hn : n \u2260 0) (hp : p.Prime) :\n     p \u2223 n \u2228 (Nat.Coprime p n):= by\n  by_cases h : p \u2223 n <;> simp_all [hp.coprime_iff_not_dvd.symm, or_comm]\n  <;> simp_all [Nat.Prime.coprime_iff_not_dvd, or_comm]\n  <;> simp_all [Nat.coprime_iff_gcd_eq_one, or_comm]\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega"
  ]
 },
 {
  "old": "(x y : \u211d) : \u230ax\u230b \u2264 \u230ax + y\u230b \u2227 \u230ax + y\u230b \u2264 \u230ax\u230b + \u230ay\u230b + 1 := by",
  "new": "(x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y):= by\n  by_cases h : Nat.Coprime x y\n  <;> simp [h]\n  <;> tauto\n  <;> tauto",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y):= by\n  by_cases h : x.Coprime y <;> simp [h]\n  <;> try assumption\n  <;> try exact not_coprime_zero_zero\n  <;> try exact not_coprime_zero_zero\n  <;> try exact not_coprime_zero_zero\n  <;> try exact not_coprime_zero_zero\n  <;> try exact not_coprime_zero_zero\n  <;> try exact not_coprime_zero_zero",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y):= by\n  by_cases h : Nat.Coprime x y\n  exact Or.inl h\n  exact Or.inr h"
  ]
 },
 {
  "old": "(x : \u211d) : 1 + x \u2264 exp x := by",
  "new": ": \u2200 x : \u211d, x > 0 \u2192 \u2203 y, 0 < y \u2227 exp x - exp (-x) = y * exp x:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem copos_exp_sub_exp : \u2200 x : \u211d, x > 0 \u2192 \u2203 y, 0 < y \u2227 exp x - exp (-x) = y * exp x:= by\n  intro x hx\n  have h : exp x > 0 := exp_pos x\n  use (exp x - exp (-x)) / exp x\n  constructor\n  <;> field_simp [h.ne', exp_ne_zero] <;> ring_nf\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem copos_exp_sub_exp : \u2200 x : \u211d, x > 0 \u2192 \u2203 y, 0 < y \u2227 exp x - exp (-x) = y * exp x:= by\n  intro x h\n  use (exp x - exp (-x)) / exp x\n  constructor\n  apply div_pos\n  apply sub_pos.mpr\n  apply exp_lt_exp.mpr\n  linarith\n  exact exp_pos x\n  field_simp [exp_ne_zero x]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem copos_exp_sub_exp : \u2200 x : \u211d, x > 0 \u2192 \u2203 y, 0 < y \u2227 exp x - exp (-x) = y * exp x:= by\n  intro x\n  intro hx\n  use (exp x - exp (-x)) / exp x\n  constructor\n  apply div_pos\n  apply sub_pos.mpr\n  apply exp_lt_exp.mpr\n  linarith\n  apply exp_pos\n  field_simp"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) : 1 / (a + b * c) + 1 / (b + c * a) + 1 / (c + a * b) \u2264 9 / (4 * (a * b + b * c + c * a)) := by",
  "new": ": \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c = 1 \u2192 1 / (a + b * c) + 1 / (b + c * a) + 1 / (c + a * b) \u2264 9 / (4 * (a * b + b * c + c * a)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c = 1 \u2192\n   1 / (a + b * c) + 1 / (b + c * a) + 1 / (c + a * b) \u2264 9 / (4 * (a * b + b * c + c * a)) := by\n  intro a b c \u27e8a_pos, b_pos, c_pos, a_b_c_sum\u27e9\n  have h\u2081 : 0 < a * b * c := by positivity\n  have h\u2082 : 0 < a * b + b * c + c * a := by positivity\n  have h\u2083 : 0 < a * b * c * (a * b + b * c + c * a) := by positivity\n  have h\u2084 : 0 < a * b * c * (a + b + c) := by positivity\n  have h\u2085 : 0 < a * b * c * (a * b + b * c + c * a) * (a + b + c) := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b + b * c + c * a), mul_self_nonneg (a * b - b * c),\n    mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b)]"
  ]
 },
 {
  "old": "(N : \u2115) (hN : Odd N) (hN' : Perfect N) (k : \u2115) (hk : k = (Nat.factors N).length) : N < 2 ^ 4 ^ k := by",
  "new": "(n : \u2115) (hn : 2 \u2223 n) (hn' : \u00ac 4 \u2223 n) (hn'' : 4 \u2223 n^2) : n^3 + 2 \u2260 4 * n^2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem euler_fourty_three (n : \u2115) (hn : 2 \u2223 n) (hn' : \u00ac 4 \u2223 n) (hn'' : 4 \u2223 n^2) : \n   n^3 + 2 \u2260 4 * n^2:= by\n  rcases n with (_ | _ | _ | _ | n) <;> simp_all [Nat.dvd_iff_mod_eq_zero, Nat.add_mod,\n    Nat.mul_mod, Nat.pow_mod]\n  all_goals ring_nf at hn'' \u22a2\n  all_goals omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem euler_fourty_three (n : \u2115) (hn : 2 \u2223 n) (hn' : \u00ac 4 \u2223 n) (hn'' : 4 \u2223 n^2) : \n   n^3 + 2 \u2260 4 * n^2:= by\n  rcases hn with \u27e8k, rfl\u27e9\n  ring_nf at hn'' \u22a2\n  omega\n  <;> simp [Nat.dvd_iff_mod_eq_zero, Nat.mod_eq_of_lt] at hn hn' hn'' \u22a2\n  <;> omega\n  <;> simp [Nat.dvd_iff_mod_eq_zero, Nat.mod_eq_of_lt] at hn hn' hn'' \u22a2\n  <;> omega\n  <;> simp [Nat.dvd_iff_mod_eq_zero, Nat.mod_eq_of_lt] at hn hn' hn'' \u22a2\n  <;> omega\n  <;> simp [Nat.dvd_iff_mod_eq_zero, Nat.mod_eq_of_lt] at hn hn' hn'' \u22a2\n  <;> omega\n  <;> simp [Nat.dvd_iff_mod_eq_zero, Nat.mod_eq_of_lt] at hn hn' hn'' \u22a2\n  <;> omega\n  <;> simp [Nat.dvd_iff_mod_eq_zero, Nat.mod_eq_of_lt] at hn hn' hn'' \u22a2\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem euler_fourty_three (n : \u2115) (hn : 2 \u2223 n) (hn' : \u00ac 4 \u2223 n) (hn'' : 4 \u2223 n^2) : \n   n^3 + 2 \u2260 4 * n^2:= by\n  rcases n with (_ | _ | _ | _) <;> simp_all [Nat.dvd_iff_mod_eq_zero, Nat.mod_eq_of_lt]\n  all_goals\n    ring_nf at *\n    omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem euler_fourty_three (n : \u2115) (hn : 2 \u2223 n) (hn' : \u00ac 4 \u2223 n) (hn'' : 4 \u2223 n^2) : \n   n^3 + 2 \u2260 4 * n^2:= by\n  rcases hn with \u27e8n, rfl\u27e9\n  norm_num\n  ring_nf at hn' hn'' \u22a2\n  omega\n  <;> simp_all\n  <;> omega\n  <;> simp_all\n  <;> omega\n  <;> simp_all\n  <;> omega\n  <;> simp_all\n  <;> omega"
  ]
 },
 {
  "old": "(a b c m n : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hm : 0 < m) (hn : 0 < n) : (a^(m + n) + b^(m + n)) * (b^(m + n) + c^(m + n)) * (c^(m + n) + a^(m + n)) \u2265 (a^m * b^n + b^m * c^n) * (b^m * c^n + c^m * a^n) * (c^m * a^n + a^m * b^n) := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) (h : a \u2260 b \u2227 b \u2260 c \u2227 c \u2260 a) : a ^ (2 / 3) + b ^ (2 / 3) + c ^ (2 / 3) < a ^ 2 + b ^ 2 + c ^ 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_pow_sum_lt (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) (h : a \u2260 b \u2227 b \u2260 c \u2227 c \u2260 a) :\n  a ^ (2 / 3) + b ^ (2 / 3) + c ^ (2 / 3) < a ^ 2 + b ^ 2 + c ^ 2:= by\n  ring_nf at *\n  nlinarith [sq_pos_of_ne_zero (sub_ne_zero.mpr h.1), sq_pos_of_ne_zero (sub_ne_zero.mpr h.2.1), sq_pos_of_ne_zero (sub_ne_zero.mpr h.2.2),\n    mul_pos ha hb, mul_pos hb hc, mul_pos ha hc]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_pow_sum_lt (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) (h : a \u2260 b \u2227 b \u2260 c \u2227 c \u2260 a) :\n  a ^ (2 / 3) + b ^ (2 / 3) + c ^ (2 / 3) < a ^ 2 + b ^ 2 + c ^ 2:= by\n  ring_nf\n  nlinarith [sq_pos_of_ne_zero (sub_ne_zero.2 h.1), sq_pos_of_ne_zero (sub_ne_zero.2 h.2.1),\n    sq_pos_of_ne_zero (sub_ne_zero.2 h.2.2), mul_pos ha hb, mul_pos hb hc, mul_pos ha hc]\n  <;> simp [h.1, h.2.1, h.2.2]\n  <;> linarith"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (2 * x / (y + z) + 2 * y / (z + x) + 2 * z / (x + y)) \u2264 (y + z) / (2 * x) + (z + x) / (2 * y) + (x + y) / (2 * z) := by",
  "new": ": \u2200 x : \u211d, 0 < x \u2192 \u2200 y : \u211d, 0 < y \u2192 \u2200 z : \u211d, 0 < z \u2192 (x * y + y * z + z * x) * (y * z + z * x + x * y) \u2260 0 \u2192 (2 * x / (y + z) + 2 * y / (z + x) + 2 * z / (x + y)) \u2264 (y + z) / (2 * x) + (z + x) / (2 * y) + (x + y) / (2 * z):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, 0 < x \u2192 \u2200 y : \u211d, 0 < y \u2192 \u2200 z : \u211d, 0 < z \u2192 \n   (x * y + y * z + z * x) * (y * z + z * x + x * y) \u2260 0 \u2192\n    (2 * x / (y + z) + 2 * y / (z + x) + 2 * z / (x + y)) \u2264\n     (y + z) / (2 * x) + (z + x) / (2 * y) + (x + y) / (2 * z):= by\n  intro x hx y hy z hz h\n  have hxy : 0 < x * y := by positivity\n  have hyz : 0 < y * z := by positivity\n  have hxz : 0 < z * x := by positivity\n  have hxy' : (x * y + y * z + z * x) \u2260 0 := by positivity\n  have hyz' : (y * z + z * x + x * y) \u2260 0 := by positivity\n  field_simp [hxy', hyz']\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (y ^ 2 - z ^ 2), sq_nonneg (z ^ 2 - x ^ 2),\n    sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y)]\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, 0 < x \u2192 \u2200 y : \u211d, 0 < y \u2192 \u2200 z : \u211d, 0 < z \u2192 \n   (x * y + y * z + z * x) * (y * z + z * x + x * y) \u2260 0 \u2192\n    (2 * x / (y + z) + 2 * y / (z + x) + 2 * z / (x + y)) \u2264\n     (y + z) / (2 * x) + (z + x) / (2 * y) + (x + y) / (2 * z):= by\n  intro x hx y hy z hz h\n  have h1 : 0 < x * y := by positivity\n  have h2 : 0 < y * z := by positivity\n  have h3 : 0 < z * x := by positivity\n  have h4 : 0 < x * y * (y * z) := by positivity\n  have h5 : 0 < y * z * (z * x) := by positivity\n  have h6 : 0 < z * x * (x * y) := by positivity\n  field_simp [h1, h2, h3, h4, h5, h6]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (y ^ 2 - z ^ 2),\n    sq_nonneg (z ^ 2 - x ^ 2), sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x),\n    sq_nonneg (z * x - x * y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, 0 < x \u2192 \u2200 y : \u211d, 0 < y \u2192 \u2200 z : \u211d, 0 < z \u2192 \n   (x * y + y * z + z * x) * (y * z + z * x + x * y) \u2260 0 \u2192\n    (2 * x / (y + z) + 2 * y / (z + x) + 2 * z / (x + y)) \u2264\n     (y + z) / (2 * x) + (z + x) / (2 * y) + (x + y) / (2 * z):= by\n  intro x hx y hy z hz h\u2080\n  have h\u2081 : 0 < x * y := mul_pos hx hy\n  have h\u2082 : 0 < y * z := mul_pos hy hz\n  have h\u2083 : 0 < z * x := mul_pos hz hx\n  have h\u2084 : 0 < (x * y) * (y * z) := by positivity\n  have h\u2085 : 0 < (y * z) * (z * x) := by positivity\n  have h\u2086 : 0 < (z * x) * (x * y) := by positivity\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x * y + y * z + z * x), mul_self_nonneg (x * y - y * z),\n    mul_self_nonneg (y * z - z * x), mul_self_nonneg (z * x - x * y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, 0 < x \u2192 \u2200 y : \u211d, 0 < y \u2192 \u2200 z : \u211d, 0 < z \u2192 \n   (x * y + y * z + z * x) * (y * z + z * x + x * y) \u2260 0 \u2192\n    (2 * x / (y + z) + 2 * y / (z + x) + 2 * z / (x + y)) \u2264\n     (y + z) / (2 * x) + (z + x) / (2 * y) + (x + y) / (2 * z):= by\n  intro x hx y hy z hz h\n  have h1 : 0 < x * y := mul_pos hx hy\n  have h2 : 0 < y * z := mul_pos hy hz\n  have h3 : 0 < z * x := mul_pos hz hx\n  have h4 : 0 < x * y * (y * z * 2) := by positivity\n  have h5 : 0 < y * z * (z * x * 2) := by positivity\n  have h6 : 0 < z * x * (x * y * 2) := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (y ^ 2 - z ^ 2), sq_nonneg (z ^ 2 - x ^ 2),\n    sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : (a + a * b + a * b * c) / (c + b ^ 2 + a ^ 3) + (b + b * c + a * b * c) / (a + c ^ 2 + b ^ 3) + (c + c * a + a * b * c) / (b + a ^ 2 + c ^ 3) \u2264 3 := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 3 \u2192 (a + a * b + a * b * c) / (c + b ^ 2 + a ^ 3) + (b + b * c + a * b * c) / (a + c ^ 2 + b ^ 3) + (c + c * a + a * b * c) / (b + a ^ 2 + c ^ 3) \u2264 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 3 \u2192\n   (a + a * b + a * b * c) / (c + b ^ 2 + a ^ 3) + (b + b * c + a * b * c) / (a + c ^ 2 + b ^ 3) +\n    (c + c * a + a * b * c) / (b + a ^ 2 + c ^ 3) \u2264 3:= by\n  rintro a b c \u27e8ha : 0 \u2264 a, hb : 0 \u2264 b, hc : 0 \u2264 c, habc : a + b + c = 3\u27e9\n  have h\u2080 : (a + a * b + a * b * c) / (c + b ^ 2 + a ^ 3) \u2264 1 := by\n    apply div_le_one_of_le\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      mul_nonneg ha hb, mul_nonneg hb hc, mul_nonneg hc ha]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      mul_nonneg ha hb, mul_nonneg hb hc, mul_nonneg hc ha]\n  have h\u2081 : (b + b * c + a * b * c) / (a + c ^ 2 + b ^ 3) \u2264 1 := by\n    apply div_le_one_of_le\n    nlinarith [sq_nonneg (b - c), sq_nonneg (c - a), sq_nonneg (a - b),\n      mul_nonneg hb hc, mul_nonneg hc ha, mul_nonneg ha hb]\n    nlinarith [sq_nonneg (b - c), sq_nonneg (c - a), sq_nonneg (a - b),\n      mul_nonneg hb hc, mul_nonneg hc ha, mul_nonneg ha hb]\n  have h\u2082 : (c + c * a + a * b * c) / (b + a ^ 2 + c ^ 3) \u2264 1 := by\n    apply div_le_one_of_le\n    nlinarith [sq_nonneg (c - a), sq_nonneg (a - b), sq_nonneg (b - c),\n      mul_nonneg hc ha, mul_nonneg ha hb, mul_nonneg hb hc]\n    nlinarith [sq_nonneg (c - a), sq_nonneg (a - b), sq_nonneg (b - c),\n      mul_nonneg hc ha, mul_nonneg ha hb, mul_nonneg hb hc]\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 3 \u2192\n   (a + a * b + a * b * c) / (c + b ^ 2 + a ^ 3) + (b + b * c + a * b * c) / (a + c ^ 2 + b ^ 3) +\n    (c + c * a + a * b * c) / (b + a ^ 2 + c ^ 3) \u2264 3:= by\n  rintro a b c \u27e8a_nonneg, b_nonneg, c_nonneg, a_b_c_sum\u27e9\n  have h\u2080 : (a + a * b + a * b * c) / (c + b ^ 2 + a ^ 3) \u2264 1 := by\n    apply div_le_one_of_le\n    \u00b7 nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n        mul_nonneg a_nonneg b_nonneg, mul_nonneg b_nonneg c_nonneg, mul_nonneg a_nonneg c_nonneg]\n    \u00b7 nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n        mul_nonneg a_nonneg b_nonneg, mul_nonneg b_nonneg c_nonneg, mul_nonneg a_nonneg c_nonneg]\n  have h\u2081 : (b + b * c + a * b * c) / (a + c ^ 2 + b ^ 3) \u2264 1 := by\n    apply div_le_one_of_le\n    \u00b7 nlinarith [sq_nonneg (b - c), sq_nonneg (b - a), sq_nonneg (c - a),\n        mul_nonneg b_nonneg c_nonneg, mul_nonneg c_nonneg a_nonneg, mul_nonneg b_nonneg a_nonneg]\n    \u00b7 nlinarith [sq_nonneg (b - c), sq_nonneg (b - a), sq_nonneg (c - a),\n        mul_nonneg b_nonneg c_nonneg, mul_nonneg c_nonneg a_nonneg, mul_nonneg b_nonneg a_nonneg]\n  have h\u2082 : (c + c * a + a * b * c) / (b + a ^ 2 + c ^ 3) \u2264 1 := by\n    apply div_le_one_of_le\n    \u00b7 nlinarith [sq_nonneg (c - a), sq_nonneg (c - b), sq_nonneg (a - b),\n        mul_nonneg c_nonneg a_nonneg, mul_nonneg a_nonneg b_nonneg, mul_nonneg c_nonneg b_nonneg]\n    \u00b7 nlinarith [sq_nonneg (c - a), sq_nonneg (c - b), sq_nonneg (a - b),\n        mul_nonneg c_nonneg a_nonneg, mul_nonneg a_nonneg b_nonneg, mul_nonneg c_nonneg b_nonneg]\n  linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 3 \u2192\n   (a + a * b + a * b * c) / (c + b ^ 2 + a ^ 3) + (b + b * c + a * b * c) / (a + c ^ 2 + b ^ 3) +\n    (c + c * a + a * b * c) / (b + a ^ 2 + c ^ 3) \u2264 3:= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have h\u2080 : 0 \u2264 a * b := by positivity\n  have h\u2081 : 0 \u2264 b * c := by positivity\n  have h\u2082 : 0 \u2264 c * a := by positivity\n  have h\u2083 : (a + a * b + a * b * c) / (c + b ^ 2 + a ^ 3) \u2264 1 := by\n    apply div_le_one_of_le\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  have h\u2084 : (b + b * c + a * b * c) / (a + c ^ 2 + b ^ 3) \u2264 1 := by\n    apply div_le_one_of_le\n    nlinarith [sq_nonneg (b - c), sq_nonneg (c - a), sq_nonneg (a - b)]\n    nlinarith [sq_nonneg (b - c), sq_nonneg (c - a), sq_nonneg (a - b)]\n  have h\u2085 : (c + c * a + a * b * c) / (b + a ^ 2 + c ^ 3) \u2264 1 := by\n    apply div_le_one_of_le\n    nlinarith [sq_nonneg (c - a), sq_nonneg (a - b), sq_nonneg (b - c)]\n    nlinarith [sq_nonneg (c - a), sq_nonneg (a - b), sq_nonneg (b - c)]\n  linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 3 \u2192\n   (a + a * b + a * b * c) / (c + b ^ 2 + a ^ 3) + (b + b * c + a * b * c) / (a + c ^ 2 + b ^ 3) +\n    (c + c * a + a * b * c) / (b + a ^ 2 + c ^ 3) \u2264 3:= by\n  rintro a b c \u27e8a_nonneg, b_nonneg, c_nonneg, abc_sum\u27e9\n  have h\u2080 : (a + a * b + a * b * c) / (c + b ^ 2 + a ^ 3) \u2264 1 := by\n    apply div_le_one_of_le\n    \u00b7 nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n      mul_nonneg a_nonneg b_nonneg, mul_nonneg a_nonneg c_nonneg, mul_nonneg b_nonneg c_nonneg]\n    \u00b7 nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n      mul_nonneg a_nonneg b_nonneg, mul_nonneg a_nonneg c_nonneg, mul_nonneg b_nonneg c_nonneg]\n  have h\u2081 : (b + b * c + a * b * c) / (a + c ^ 2 + b ^ 3) \u2264 1 := by\n    apply div_le_one_of_le\n    \u00b7 nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n      mul_nonneg a_nonneg b_nonneg, mul_nonneg a_nonneg c_nonneg, mul_nonneg b_nonneg c_nonneg]\n    \u00b7 nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n      mul_nonneg a_nonneg b_nonneg, mul_nonneg a_nonneg c_nonneg, mul_nonneg b_nonneg c_nonneg]\n  have h\u2082 : (c + c * a + a * b * c) / (b + a ^ 2 + c ^ 3) \u2264 1 := by\n    apply div_le_one_of_le\n    \u00b7 nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n      mul_nonneg a_nonneg b_nonneg, mul_nonneg a_nonneg c_nonneg, mul_nonneg b_nonneg c_nonneg]\n    \u00b7 nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n      mul_nonneg a_nonneg b_nonneg, mul_nonneg a_nonneg c_nonneg, mul_nonneg b_nonneg c_nonneg]\n  linarith"
  ]
 },
 {
  "old": "(a b : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hab : a + b = 2) : a^(5 * b^2) + b^(5 * a^2) \u2264 2 := by",
  "new": "(a b : \u2115) (hab : a * b = 1) : a = 1 \u2227 b = 1 \u2228 a.Coprime b:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (hab : a * b = 1) : a = 1 \u2227 b = 1 \u2228 a.Coprime b:= by\n  rcases Nat.eq_zero_or_pos a with rfl | ha\n  <;> rcases Nat.eq_zero_or_pos b with rfl | hb\n  <;> simp_all [Nat.coprime_iff_gcd_eq_one, Nat.gcd_mul_left, Nat.gcd_mul_right,\n    Nat.mul_eq_zero, Nat.pos_iff_ne_zero]\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (hab : a * b = 1) : a = 1 \u2227 b = 1 \u2228 a.Coprime b:= by\n  simp [Nat.eq_one_of_mul_eq_one_left, Nat.eq_one_of_mul_eq_one_right, Nat.Coprime]\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (hab : a * b = 1) : a = 1 \u2227 b = 1 \u2228 a.Coprime b:= by\n  have h\u2081 : a \u2260 0 := by\n    rintro rfl\n    simp_all\n  have h\u2082 : b \u2260 0 := by\n    rintro rfl\n    simp_all\n  have h\u2083 : a * b = 1 := hab\n  have h\u2084 : a = 1 \u2227 b = 1 \u2228 a.Coprime b := by\n    by_cases h : a * b = 1\n    all_goals simp_all [Nat.Prime, Nat.succ_ne_zero]\n    all_goals omega\n  exact h\u2084\n  <;> omega\n  <;> simp_all\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (hab : a * b = 1) : a = 1 \u2227 b = 1 \u2228 a.Coprime b:= by\n  cases a with\n  | zero => simp_all\n  | succ a =>\n    cases b with\n    | zero => simp_all\n    | succ b =>\n      cases a with\n      | zero => simp_all\n      | succ a =>\n        cases b with\n        | zero => simp_all\n        | succ b => simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]\n      <;> omega\n  <;> omega"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : 2 * (a^3 + b^3 + c^3) / (a * b * c) + 3 \u2265 9 * (a^2 + b^2 + c^2) / (a * b + b * c + c * a) := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a^2 + b^2 + c^2) * (1/a + 1/b + 1/c) \u2265 a + b + c:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a^2 + b^2 + c^2) * (1/a + 1/b + 1/c) \u2265 a + b + c:= by\n  rintro a b c \u27e8a0, b0, c0\u27e9\n  rcases eq_or_lt_of_le a0 with (rfl | ha) <;>\n  rcases eq_or_lt_of_le b0 with (rfl | hb) <;>\n  rcases eq_or_lt_of_le c0 with (rfl | hc) <;>\n  simp_all [add_assoc]\n  all_goals\n    apply le_of_sub_nonneg\n    field_simp\n    ring_nf\n    positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a^2 + b^2 + c^2) * (1/a + 1/b + 1/c) \u2265 a + b + c:= by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  rcases eq_or_lt_of_le ha with (rfl | ha') <;> rcases eq_or_lt_of_le hb with (rfl | hb') <;>\n    rcases eq_or_lt_of_le hc with (rfl | hc') <;> try simp_all\n  all_goals\n    apply le_of_sub_nonneg\n    field_simp\n    ring_nf\n    positivity"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a \u2227 a \u2264 1) (hb : 0 \u2264 b \u2227 b \u2264 1) (hc : 0 \u2264 c \u2227 c \u2264 1) : a / (b + c + 1) + b / (c + a + 1) + c / (a + b + 1) + (1 - a) * (1 - b) * (1 - c) \u2264 1 := by",
  "new": ": \u2200 a b c : \u211d, a \u2208 Set.Icc 0 1 \u2227 b \u2208 Set.Icc 0 1 \u2227 c \u2208 Set.Icc 0 1 \u2192 a / (b + c + 1) + b / (c + a + 1) + c / (a + b + 1) + (1 - a) * (1 - b) * (1 - c) \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2208 Set.Icc 0 1 \u2227 b \u2208 Set.Icc 0 1 \u2227 c \u2208 Set.Icc 0 1 \u2192  a / (b + c + 1) + b / (c + a + 1) + c / (a + b + 1) + (1 - a) * (1 - b) * (1 - c) \u2264 1:= by\n  rintro a b c \u27e8\u27e8ha0, ha1\u27e9, \u27e8hb0, hb1\u27e9, \u27e8hc0, hc1\u27e9\u27e9\n  have h\u2080 : 0 \u2264 a * b := by nlinarith\n  have h\u2081 : 0 \u2264 a * c := by nlinarith\n  have h\u2082 : 0 \u2264 b * c := by nlinarith\n  have h\u2083 : 0 \u2264 a * b * c := by nlinarith\n  have h\u2084 : 0 \u2264 (1 - a) * (1 - b) := by nlinarith\n  have h\u2085 : 0 \u2264 (1 - a) * (1 - c) := by nlinarith\n  have h\u2086 : 0 \u2264 (1 - b) * (1 - c) := by nlinarith\n  field_simp\n  rw [div_le_one (by positivity)]\n  nlinarith [mul_nonneg h\u2080 h\u2081, mul_nonneg h\u2081 h\u2082, mul_nonneg h\u2082 h\u2080,\n    mul_nonneg h\u2083 h\u2080, mul_nonneg h\u2083 h\u2081, mul_nonneg h\u2083 h\u2082,\n    mul_nonneg h\u2084 h\u2081, mul_nonneg h\u2084 h\u2082, mul_nonneg h\u2084 h\u2080,\n    mul_nonneg h\u2085 h\u2082, mul_nonneg h\u2085 h\u2080, mul_nonneg h\u2085 h\u2081,\n    mul_nonneg h\u2086 h\u2080, mul_nonneg h\u2086 h\u2081, mul_nonneg h\u2086 h\u2082]"
  ]
 },
 {
  "old": "(a b : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b \u2227 b \u2264 1) (hab : a^5 + a^5 * b^5 = 2) : 2 * a^3 + b^3 \u2265 3 := by",
  "new": "(a b : \u2115) (hab : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (hab : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  rcases Nat.eq_zero_or_pos a with rfl | ha <;> rcases Nat.eq_zero_or_pos b with rfl | hb\n  all_goals simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  all_goals omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (hab : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  have : a * b = 1 := hab\n  cases a <;> cases b <;> simp_all (config := {decide := true})"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b \u2264 2) (hbc : b + c \u2264 2) (hca : a + c \u2264 2) : a * (Real.sqrt b + Real.sqrt c) / Real.sqrt (a ^ 2 + 1) + b * (Real.sqrt c + Real.sqrt a) / Real.sqrt (b ^ 2 + 1) + c * (Real.sqrt a + Real.sqrt b) / Real.sqrt (c ^ 2 + 1) \u2264 3 * Real.sqrt 2 := by",
  "new": ": Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) \u2264 3 * Real.sqrt (2 + 1):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) \u2264\n      3 * Real.sqrt (2 + 1):= by\n  have h\u2081 : 0 \u2264 Real.sqrt 2 := Real.sqrt_nonneg 2\n  have h\u2082 : Real.sqrt 2 \u2264 2 := by norm_num [Real.sqrt_le_iff]\n  have h\u2083 : Real.sqrt (Real.sqrt 2 + 1) \u2264 Real.sqrt (2 + 1) :=\n    Real.sqrt_le_sqrt (by linarith)\n  have h\u2084 : Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) \u2264\n      3 * Real.sqrt (2 + 1) := by linarith [h\u2083]\n  linarith [h\u2084]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) \u2264\n      3 * Real.sqrt (2 + 1):= by\n  have h : 0 \u2264 Real.sqrt 2 := Real.sqrt_nonneg 2\n  have h\u2081 : Real.sqrt 2 \u2264 2 := by norm_num [Real.sqrt_le_iff]\n  have h\u2082 : Real.sqrt (Real.sqrt 2 + 1) \u2264 Real.sqrt (2 + 1) := by\n    apply Real.sqrt_le_sqrt\n    linarith\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) \u2264\n      3 * Real.sqrt (2 + 1):= by\n  have h\u2081 : 0 \u2264 Real.sqrt 2 := Real.sqrt_nonneg _\n  have h\u2082 : 0 \u2264 2 + 1 := by norm_num\n  have h\u2083 : Real.sqrt 2 + 1 \u2264 2 + 1 := by\n    nlinarith [sq_sqrt (show (0 : \u211d) \u2264 2 from by linarith),\n      Real.sqrt_nonneg (2 : \u211d)]\n  have h\u2084 : Real.sqrt (Real.sqrt 2 + 1) \u2264 Real.sqrt (2 + 1) :=\n    Real.sqrt_le_sqrt h\u2083\n  nlinarith [h\u2084, Real.sqrt_nonneg (2 + 1)]\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) \u2264\n      3 * Real.sqrt (2 + 1):= by\n  have h\u2081 : 0 \u2264 Real.sqrt 2 := Real.sqrt_nonneg _\n  have h\u2082 : Real.sqrt 2 \u2264 2 := by\n    nlinarith [sq_sqrt (show 0 \u2264 2 by norm_num)]\n  nlinarith [sq_sqrt (show 0 \u2264 2 + 1 by norm_num), Real.sqrt_nonneg (2 + 1),\n    sq_sqrt (show 0 \u2264 Real.sqrt 2 + 1 by nlinarith), Real.sqrt_nonneg (Real.sqrt 2 + 1)]"
  ]
 },
 {
  "old": "(a b c : \u211d) : (a^2 + b^2 + c^2) / (a * b + b * c + c * a) + 1 / 3 \u2265 8 / 9 * (a / (b + c) + b / (c + a) + c / (a + b)) := by",
  "new": "(x y z : \u211d) : 2 * Real.sqrt (x * y) + 2 * Real.sqrt (y * z) + 2 * Real.sqrt (z * x) \u2264 6 * Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) : 2 * Real.sqrt (x * y) + 2 * Real.sqrt (y * z) + 2 * Real.sqrt (z * x) \u2264 6 * Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n  have h\u2080 : 0 \u2264 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := Real.sqrt_nonneg (x ^ 2 + y ^ 2 + z ^ 2)\n  have h\u2081 : 0 \u2264 Real.sqrt (x * y) := Real.sqrt_nonneg (x * y)\n  have h\u2082 : 0 \u2264 Real.sqrt (y * z) := Real.sqrt_nonneg (y * z)\n  have h\u2083 : 0 \u2264 Real.sqrt (z * x) := Real.sqrt_nonneg (z * x)\n  have h\u2084 : Real.sqrt (x * y) \u2264 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x + y)]\n  have h\u2085 : Real.sqrt (y * z) \u2264 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (y - z), sq_nonneg (y + z)]\n  have h\u2086 : Real.sqrt (z * x) \u2264 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (z - x), sq_nonneg (z + x)]\n  nlinarith [h\u2084, h\u2085, h\u2086]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) : 2 * Real.sqrt (x * y) + 2 * Real.sqrt (y * z) + 2 * Real.sqrt (z * x) \u2264 6 * Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n  have h\u2081 : 0 \u2264 (x - y) ^ 2 + (y - z) ^ 2 + (z - x) ^ 2 := by nlinarith\n  have h\u2082 : Real.sqrt (x * y) \u2264 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith\n  have h\u2083 : Real.sqrt (y * z) \u2264 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith\n  have h\u2084 : Real.sqrt (z * x) \u2264 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith\n  nlinarith [Real.sqrt_nonneg (x ^ 2 + y ^ 2 + z ^ 2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) : 2 * Real.sqrt (x * y) + 2 * Real.sqrt (y * z) + 2 * Real.sqrt (z * x) \u2264 6 * Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n  have h\u2080 : Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) \u2265 0 := by apply Real.sqrt_nonneg\n  have h\u2081 : Real.sqrt (x * y) \u2264 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  have h\u2082 : Real.sqrt (y * z) \u2264 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  have h\u2083 : Real.sqrt (z * x) \u2264 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  nlinarith [h\u2080, h\u2081, h\u2082, h\u2083]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (habc : a + b + c = 3) : (a / (a ^ 2 + b * c + a * b * c) + b / (b ^ 2 + c * a + a * b * c) + c / (c ^ 2 + a * b + a * b * c) \u2265 3 / (a ^ 3 + b ^ 3 + c ^ 3)) := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) : (1 / (a + b + c) + 1 / a + 1 / b + 1 / c) \u2265 (1 / a + 1 / b + 1 / c) * (a + b + c):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) : (1 / (a + b + c) + 1 / a + 1 / b + 1 / c) \u2265 (1 / a + 1 / b + 1 / c) * (a + b + c):= by\n  simp only [hab, one_div]\n  ring_nf\n  apply le_of_sub_nonneg\n  field_simp\n  ring_nf\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) : (1 / (a + b + c) + 1 / a + 1 / b + 1 / c) \u2265 (1 / a + 1 / b + 1 / c) * (a + b + c):= by\n  have h\u2081 : 1 / (a + b + c) = 1 := by rw [hab]; simp\n  rw [h\u2081]\n  have h\u2082 : 1 / a + 1 / b + 1 / c \u2265 0 := by positivity\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) : (1 / (a + b + c) + 1 / a + 1 / b + 1 / c) \u2265 (1 / a + 1 / b + 1 / c) * (a + b + c):= by\n  simp only [hab, one_mul]\n  apply le_of_sub_nonneg\n  have h\u2081 : 0 < a * b := by positivity\n  have h\u2082 : 0 < b * c := by positivity\n  have h\u2083 : 0 < a * c := by positivity\n  have h\u2084 : 0 < a * b * c := by positivity\n  field_simp\n  rw [le_div_iff (by positivity)]\n  ring_nf\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) : (1 / (a + b + c) + 1 / a + 1 / b + 1 / c) \u2265 (1 / a + 1 / b + 1 / c) * (a + b + c):= by\n  have H\u2081 : 1 / (a + b + c) \u2265 0 := by positivity\n  have H\u2082 : 1 / a + 1 / b + 1 / c \u2265 0 := by positivity\n  have H\u2083 : 1 / (a + b + c) + 1 / a + 1 / b + 1 / c \u2265 (1 / a + 1 / b + 1 / c) * (a + b + c) := by\n    nlinarith [H\u2081, H\u2082, hab]\n  linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption"
  ]
 },
 {
  "old": "(n : \u2115) (hn : 1 < n) : Set.Finite {k : \u2115 | \u2203 p : \u2115, p.Prime \u2227 p^k \u2223 n^(p^k) - 1} := by",
  "new": "(p : \u2115) {n : \u2115} (hn : 1 < n) : p.Prime \u2192 \u00ac(p^2 \u2223 n) \u2228 (p \u2223 n \u2227 (p^2 \u2223 n^2)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {n : \u2115} (hn : 1 < n) :\n    p.Prime \u2192 \u00ac(p^2 \u2223 n) \u2228 (p \u2223 n \u2227 (p^2 \u2223 n^2)) := by\n  intro h_prime\n  by_cases h1 : p^2 \u2223 n\n  have h2 : p \u2223 n := by\n    exact Nat.dvd_of_pow_dvd (by linarith) h1\n  have h3 : p^2 \u2223 n^2 := by\n    apply pow_dvd_pow_of_dvd h2 2\n  exact Or.inr \u27e8h2, h3\u27e9\n  exact Or.inl h1"
  ]
 },
 {
  "old": "{a b c : \u211d} (ha : a > 0) (hb : b > 0) (hc : c > 0) : a ^ 2 / c + b ^ 2 / a + c ^ 2 / b \u2265 a * b + b * c + c * a := by",
  "new": ": \u2200 x : \u211d, x > 0 \u2192 x ^ 2 / (2 * x + 1) + 1 ^ 2 / x + 2 ^ 2 / 1 \u2265 1 * 2 + 1 * 1 + 1 * 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 2 / (2 * x + 1) + 1 ^ 2 / x + 2 ^ 2 / 1 \u2265 1 * 2 + 1 * 1 + 1 * 2:= by\n  intro x hx\n  field_simp\n  rw [le_div_iff (by positivity), mul_comm]\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (x - 2)]\n  <;> linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 2 / (2 * x + 1) + 1 ^ 2 / x + 2 ^ 2 / 1 \u2265 1 * 2 + 1 * 1 + 1 * 2:= by\n  intro x hx\n  field_simp\n  rw [le_div_iff]\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (x - 2)]\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 2 / (2 * x + 1) + 1 ^ 2 / x + 2 ^ 2 / 1 \u2265 1 * 2 + 1 * 1 + 1 * 2:= by\n  rintro x (hx : 0 < x)\n  field_simp [hx]\n  rw [le_div_iff, mul_comm]\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (x - 2)]\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 2 / (2 * x + 1) + 1 ^ 2 / x + 2 ^ 2 / 1 \u2265 1 * 2 + 1 * 1 + 1 * 2:= by\n  intro x hx\n  apply le_of_sub_nonneg\n  field_simp\n  rw [le_div_iff (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (x - 2)]"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : 1 / (y + z) + 1 / (z + x) + 1 / (x + y) \u2264 (3 * (x + y + z)) / (2 * (x * y + y * z + z * x)) - (x ^ 2 + y ^ 2 + z ^ 2 - x * y - y * z - z * x) / (2 * (x + y + z) * (x * y + y * z + z * x)) := by",
  "new": ": \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192 1 / (y + z) + 1 / (z + x) + 1 / (x + y) \u2264 (3 * (x + y + z)) / (2 * (x * y + y * z + z * x)) - (x ^ 2 + y ^ 2 + z ^ 2 - x * y - y * z - z * x) / (2 * (x + y + z) * (x * y + y * z + z * x)):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192\n   1 / (y + z) + 1 / (z + x) + 1 / (x + y) \u2264 (3 * (x + y + z)) / (2 * (x * y + y * z + z * x)) - (x ^ 2 + y ^ 2 + z ^ 2 - x * y - y * z - z * x) / (2 * (x + y + z) * (x * y + y * z + z * x)):= by\n  rintro x y z \u27e8h\u2080, h\u2081, h\u2082\u27e9\n  have h\u2083 : 0 < x * y := by positivity\n  have h\u2084 : 0 < y * z := by positivity\n  have h\u2085 : 0 < z * x := by positivity\n  have h\u2086 : 0 < x * y + y * z + z * x := by positivity\n  have h\u2087 : 0 < x * y * (x + y) := by positivity\n  have h\u2088 : 0 < y * z * (y + z) := by positivity\n  have h\u2089 : 0 < z * x * (z + x) := by positivity\n  have h\u2081\u2080 : 0 < x * y * z := by positivity\n  field_simp [h\u2086]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x * y - y * z), mul_self_nonneg (y * z - z * x), mul_self_nonneg (z * x - x * y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192\n   1 / (y + z) + 1 / (z + x) + 1 / (x + y) \u2264 (3 * (x + y + z)) / (2 * (x * y + y * z + z * x)) - (x ^ 2 + y ^ 2 + z ^ 2 - x * y - y * z - z * x) / (2 * (x + y + z) * (x * y + y * z + z * x)):= by\n  rintro x y z \u27e8x_pos, y_pos, z_pos\u27e9\n  have h\u2081 : 0 < x * y := by positivity\n  have h\u2082 : 0 < y * z := by positivity\n  have h\u2083 : 0 < z * x := by positivity\n  have h\u2084 : 0 < x * y + y * z + z * x := by positivity\n  have h\u2085 : 0 < x * y * (x + y) := by positivity\n  have h\u2086 : 0 < y * z * (y + z) := by positivity\n  have h\u2087 : 0 < z * x * (z + x) := by positivity\n  have h\u2088 : 0 < x * y * z := by positivity\n  have h\u2089 : 0 < (x + y + z) * (x * y + y * z + z * x) := by positivity\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087, h\u2088, h\u2089]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x * y + y * z + z * x),\n    mul_self_nonneg (x * y - y * z), mul_self_nonneg (y * z - z * x), mul_self_nonneg (z * x - x * y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192\n   1 / (y + z) + 1 / (z + x) + 1 / (x + y) \u2264 (3 * (x + y + z)) / (2 * (x * y + y * z + z * x)) - (x ^ 2 + y ^ 2 + z ^ 2 - x * y - y * z - z * x) / (2 * (x + y + z) * (x * y + y * z + z * x)):= by\n  rintro x y z \u27e8hx, hy, hz\u27e9\n  have h\u2080 : 0 < x * y := by positivity\n  have h\u2081 : 0 < y * z := by positivity\n  have h\u2082 : 0 < z * x := by positivity\n  have h\u2083 : 0 < x * y * (x + y) := by positivity\n  have h\u2084 : 0 < y * z * (y + z) := by positivity\n  have h\u2085 : 0 < z * x * (z + x) := by positivity\n  have h\u2086 : 0 < x * y * z := by positivity\n  have h\u2087 : 0 < x * y * z * (x + y + z) := by positivity\n  field_simp [h\u2080, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087]\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x * y - y * z), mul_self_nonneg (y * z - z * x),\n    mul_self_nonneg (z * x - x * y)]\n  positivity\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192\n   1 / (y + z) + 1 / (z + x) + 1 / (x + y) \u2264 (3 * (x + y + z)) / (2 * (x * y + y * z + z * x)) - (x ^ 2 + y ^ 2 + z ^ 2 - x * y - y * z - z * x) / (2 * (x + y + z) * (x * y + y * z + z * x)):= by\n  intro x y z h\n  rcases h with \u27e8hx : 0 < x, hy : 0 < y, hz : 0 < z\u27e9\n  have hxy : 0 < x * y := mul_pos hx hy\n  have hyz : 0 < y * z := mul_pos hy hz\n  have hxz : 0 < z * x := mul_pos hz hx\n  have h\u2081 : 0 < x * y * (x + y) := by positivity\n  have h\u2082 : 0 < y * z * (y + z) := by positivity\n  have h\u2083 : 0 < z * x * (z + x) := by positivity\n  have h\u2084 : 0 < x * y * z := by positivity\n  field_simp [hxy, hyz, hxz, h\u2084]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x * y + y * z + z * x), mul_self_nonneg (x * y - y * z),\n    mul_self_nonneg (y * z - z * x), mul_self_nonneg (z * x - x * y)]"
  ]
 },
 {
  "old": "(a b : \u2124) : a^4 + 4 * b^4 = (a^2 + 2 * b^2 - 2 * a * b) * (a^2 + 2 * b^2 + 2 * a * b) := by",
  "new": "(a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  by_cases h : Nat.Coprime a b <;> simp [h]\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  by_cases h : Nat.Coprime a b\n  left\n  exact h\n  right\n  exact h"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 3) : (a^3 + 3 * b * c) * (b + c * a) * (c^3 + 3 * a * b) \u2265 32 * a * b * c := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (x ^ 3 + y ^ 3 + z ^ 3) ^ 2 \u2265 3 * (x ^ 2 * y ^ 2 * z ^ 2) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (x ^ 3 + y ^ 3 + z ^ 3) ^ 2 \u2265 3 * (x ^ 2 * y ^ 2 * z ^ 2) := by\n  have h : (x + y + z) ^ 2 = 1 := by\n    rw [hab]\n    norm_num\n  nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (x ^ 2 - z ^ 2), sq_nonneg (y ^ 2 - z ^ 2),\n    mul_nonneg hx.le hy.le, mul_nonneg hx.le hz.le, mul_nonneg hy.le hz.le,\n    mul_nonneg (sq_nonneg x) (sq_nonneg y), mul_nonneg (sq_nonneg x) (sq_nonneg z),\n    mul_nonneg (sq_nonneg y) (sq_nonneg z)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (x ^ 3 + y ^ 3 + z ^ 3) ^ 2 \u2265 3 * (x ^ 2 * y ^ 2 * z ^ 2) := by\n  have h\u2080 : 0 < x * y := by positivity\n  have h\u2081 : 0 < x * z := by positivity\n  have h\u2082 : 0 < y * z := by positivity\n  have h\u2083 : (x ^ 2 + y ^ 2 + z ^ 2) ^ 2 \u2265 3 * (x ^ 2 * y ^ 2 + y ^ 2 * z ^ 2 + z ^ 2 * x ^ 2) := by\n    nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (x ^ 2 - z ^ 2),\n      sq_nonneg (y ^ 2 - z ^ 2)]\n  nlinarith [sq_nonneg (x * y), sq_nonneg (x * z), sq_nonneg (y * z)]\n  <;> assumption\n  <;> try norm_num\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) : (1 / (a + b) + 1 / (a + c) + 2 / Real.sqrt ((a + b) * (a + c))) \u2265 (b + c) / (a * b + b * c + a * c) + 1 / (a + b + c) + 2 * Real.sqrt (b + c) / Real.sqrt (a + b + c) := by",
  "new": ": Real.sqrt (1 + 3 * Real.sqrt (2 + 1)) \u2264 2 * Real.sqrt (1 + 1 + 1) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (1 + 3 * Real.sqrt (2 + 1)) \u2264 2 * Real.sqrt (1 + 1 + 1) := by\n  apply Real.sqrt_le_iff.2\n  constructor\n  \u00b7 positivity\n  \u00b7 nlinarith [sq_sqrt (show (0 : \u211d) \u2264 2 + 1 by linarith), sq_sqrt (show (0 : \u211d) \u2264 1 + 1 + 1 by linarith),\n      Real.sqrt_nonneg (2 + 1), Real.sqrt_nonneg (1 + 1 + 1), sq_nonneg (Real.sqrt (2 + 1) - Real.sqrt (1 + 1 + 1))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (1 + 3 * Real.sqrt (2 + 1)) \u2264 2 * Real.sqrt (1 + 1 + 1) := by\n  have h : Real.sqrt (2 + 1) \u2265 1 := by\n    have : 1 \u2264 Real.sqrt (2 + 1) := by\n      apply Real.le_sqrt_of_sq_le\n      norm_num\n    linarith\n  have h' : Real.sqrt (1 + 3 * Real.sqrt (2 + 1)) \u2264 2 * Real.sqrt (1 + 1 + 1) := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_sqrt (show (0 : \u211d) \u2264 1 + 1 + 1 by norm_num), sq_sqrt (show (0 : \u211d) \u2264 2 + 1 by norm_num),\n        sq_nonneg (Real.sqrt (2 + 1) - 1)]\n  exact h'",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (1 + 3 * Real.sqrt (2 + 1)) \u2264 2 * Real.sqrt (1 + 1 + 1) := by\n  have h : 0 < Real.sqrt (1 + 1 + 1) := by\n    apply Real.sqrt_pos.2\n    linarith\n  rw [Real.sqrt_le_left (by positivity)]\n  nlinarith [sq_sqrt (show 0 \u2264 2 + 1 from by linarith),\n    sq_sqrt (show 0 \u2264 1 + 1 + 1 from by linarith)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (1 + 3 * Real.sqrt (2 + 1)) \u2264 2 * Real.sqrt (1 + 1 + 1) := by\n  have h\u2081 : 0 \u2264 Real.sqrt (2 + 1) := Real.sqrt_nonneg _\n  have h\u2082 : 0 \u2264 Real.sqrt (1 + 1 + 1) := Real.sqrt_nonneg _\n  have h\u2083 : 0 \u2264 Real.sqrt (1 + 3 * Real.sqrt (2 + 1)) := Real.sqrt_nonneg _\n  have h\u2084 : 0 \u2264 Real.sqrt (1 + 1 + 1) := Real.sqrt_nonneg _\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 2 + 1 by linarith),\n    sq_sqrt (show (0 : \u211d) \u2264 1 + 1 + 1 by linarith),\n    sq_sqrt (show (0 : \u211d) \u2264 1 + 3 * Real.sqrt (2 + 1) by positivity),\n    sq_nonneg (Real.sqrt (2 + 1) - 1)]"
  ]
 },
 {
  "old": "(x : \u211d) (hx : 1 \u2264 x) : 0 < Real.log x - 2 * (x - 1) / (x + 1) := by",
  "new": "{x : \u211d} (hx : 1 < x) : Real.log (x - 1) < 3 * x - 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_double_x_lt_triple_x_sub_two {x : \u211d} (hx : 1 < x) :\n        Real.log (x - 1) < 3 * x - 2:= by\n  have hx' : 0 < x - 1 := by linarith\n  nlinarith [Real.log_le_sub_one_of_pos hx']",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_double_x_lt_triple_x_sub_two {x : \u211d} (hx : 1 < x) :\n        Real.log (x - 1) < 3 * x - 2:= by\n  have hx' : x - 1 > 0 := by linarith\n  have hx'' : x - 1 < x := by linarith\n  nlinarith [Real.log_le_sub_one_of_pos hx']",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_double_x_lt_triple_x_sub_two {x : \u211d} (hx : 1 < x) :\n        Real.log (x - 1) < 3 * x - 2:= by\n  have : 0 < x - 1 := by linarith\n  linarith [Real.log_le_sub_one_of_pos this, hx]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_double_x_lt_triple_x_sub_two {x : \u211d} (hx : 1 < x) :\n        Real.log (x - 1) < 3 * x - 2:= by\n  have : Real.log (x - 1) < x - 1:= by\n    refine' (Real.log_le_sub_one_of_pos (by linarith)).trans_lt _\n    linarith\n  linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : a * Real.sqrt ((a + b) / c) + b * Real.sqrt ((b + c) / a) + c * Real.sqrt ((c + a) / b) \u2265 3 * Real.sqrt 2 := by",
  "new": ": Real.sqrt 2 \u2264 2 / \u221a3 + \u221a (2 / 3):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2264 2 / \u221a3 + \u221a (2 / 3):= by\n  have h\u2081 : 0 < 3 := by norm_num\n  have h\u2082 : 0 < Real.sqrt 3 := Real.sqrt_pos.mpr (by positivity)\n  have h\u2083 : 0 < 2 := by norm_num\n  have h\u2084 : 0 < Real.sqrt (2 / 3) := Real.sqrt_pos.mpr (by positivity)\n  have h\u2085 : 0 < Real.sqrt 2 := Real.sqrt_pos.mpr (by positivity)\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_sqrt (show 0 \u2264 2 by positivity), sq_sqrt (show 0 \u2264 3 by positivity),\n    sq_sqrt (show 0 \u2264 2 / 3 by positivity), sq_nonneg (Real.sqrt 3 - Real.sqrt 2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2264 2 / \u221a3 + \u221a (2 / 3):= by\n  have h\u2081 : 0 < Real.sqrt 3 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2082 : 0 < 3 := by norm_num\n  have h\u2083 : 0 < 2 := by norm_num\n  have h\u2084 : 0 < Real.sqrt 2 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2085 : 0 < Real.sqrt 3 * Real.sqrt 2 := by positivity\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_sqrt (show 0 \u2264 2 by norm_num), sq_sqrt (show 0 \u2264 3 by norm_num),\n    sq_sqrt (show 0 \u2264 2 / 3 by positivity), mul_self_nonneg (Real.sqrt 2 - Real.sqrt 3)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2264 2 / \u221a3 + \u221a (2 / 3):= by\n  have h\u2081 : 0 \u2264 Real.sqrt 2 := Real.sqrt_nonneg _\n  have h\u2082 : 0 \u2264 Real.sqrt (2 / 3) := Real.sqrt_nonneg _\n  have h\u2083 : 0 \u2264 2 / \u221a3 := by positivity\n  have h\u2084 : 0 \u2264 2 / \u221a3 + \u221a (2 / 3) := by positivity\n  apply le_of_sub_nonneg\n  have h\u2085 : 0 \u2264 (2 / \u221a3 + \u221a (2 / 3)) ^ 2 := by positivity\n  have h\u2086 : (2 / \u221a3 + \u221a (2 / 3)) ^ 2 \u2265 2 := by\n    field_simp\n    nlinarith [sq_sqrt (show (0 : \u211d) \u2264 2 by positivity), sq_sqrt (show (0 : \u211d) \u2264 2 / 3 by positivity),\n      mul_self_nonneg (2 * \u221a3 - 3)]\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 2 by positivity), sq_sqrt (show (0 : \u211d) \u2264 2 / 3 by positivity),\n    mul_self_nonneg (2 * \u221a3 - 3)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2081 : a * b * c = 1) : 3 / 2 \u2264 1 / (b * c + c) + 1 / (c * a + a) + 1 / (a * b + b) := by",
  "new": "(x y z : \u211d) (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2081 : x * y * z = 1) : x ^ 2 / (x + y) ^ 2 + y ^ 2 / (y + z) ^ 2 + z ^ 2 / (z + x) ^ 2 \u2265 1 / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d)\n    (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z)\n    (h\u2081 : x * y * z = 1) :\n    x ^ 2 / (x + y) ^ 2 + y ^ 2 / (y + z) ^ 2 + z ^ 2 / (z + x) ^ 2 \u2265 1 / 2:= by\n  rcases h\u2080 with \u27e8hx, hy, hz\u27e9\n  have : 0 < x * y := mul_pos hx hy\n  have : 0 < y * z := mul_pos hy hz\n  have : 0 < z * x := mul_pos hz hx\n  field_simp [h\u2081]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y),\n    sq_nonneg (x * y + y * z), sq_nonneg (y * z + z * x), sq_nonneg (z * x + x * y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d)\n    (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z)\n    (h\u2081 : x * y * z = 1) :\n    x ^ 2 / (x + y) ^ 2 + y ^ 2 / (y + z) ^ 2 + z ^ 2 / (z + x) ^ 2 \u2265 1 / 2:= by\n  obtain \u27e8h\u2080x, h\u2080y, h\u2080z\u27e9 := h\u2080\n  have h\u2081' : 0 < x * y := mul_pos h\u2080x h\u2080y\n  have h\u2082' : 0 < y * z := mul_pos h\u2080y h\u2080z\n  have h\u2083' : 0 < x * z := mul_pos h\u2080x h\u2080z\n  field_simp [h\u2081']\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_self_nonneg (x * y + y * z + z * x),\n    mul_self_nonneg (x * y - y * z),\n    mul_self_nonneg (y * z - z * x),\n    mul_self_nonneg (z * x - x * y)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0) : (a^2 + b^2 + c^2)^2 \u2265 3 * (a^3 * b + b^3 * c + c^3 * a) := by",
  "new": "{p a : \u2115} (hp : Nat.Prime p) (ha : 0 < a) (hab : p \u2223 a ^ 2) : p \u2223 a \u2228 a = p:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_prime_dvd_pow' {p a : \u2115} (hp : Nat.Prime p) (ha : 0 < a) (hab : p \u2223 a ^ 2) :\n     p \u2223 a \u2228 a = p:= by\n  have h : 1 < p := hp.one_lt\n  have h\u2080 : p \u2223 a ^ 2 := hab\n  have h\u2081 : p \u2223 a := by\n    have h\u2081 : p \u2223 a ^ 2 := hab\n    exact hp.dvd_of_dvd_pow h\u2081\n  exact Or.inl h\u2081",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_prime_dvd_pow' {p a : \u2115} (hp : Nat.Prime p) (ha : 0 < a) (hab : p \u2223 a ^ 2) :\n     p \u2223 a \u2228 a = p:= by\n  have := hp.dvd_mul.mp hab\n  have h : p \u2223 a := by\n    cases' this with h h <;>\n    simp_all [Nat.pow_two]\n  exact Or.inl h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_prime_dvd_pow' {p a : \u2115} (hp : Nat.Prime p) (ha : 0 < a) (hab : p \u2223 a ^ 2) :\n     p \u2223 a \u2228 a = p:= by\n  have : p \u2223 a ^ 2 \u2192 p \u2223 a \u2228 a = p := by\n    rintro h\n    have h1 : p \u2223 a ^ 2 := h\n    apply or_iff_not_imp_right.mpr\n    intro h2\n    have h3 : p \u2223 a := by\n      apply Nat.Prime.dvd_of_dvd_pow hp h1\n    exact h3\n  apply this\n  exact hab"
  ]
 },
 {
  "old": "(x\u2081 x\u2082 m : \u211d) (hm : 1 \u2264 m) : (x\u2081 + x\u2082) ^ m \u2264 (2:\u211d) ^ (m - 1) * (x\u2081 ^ m + x\u2082 ^ m) := by",
  "new": ": \u2200 x \u2208 Set.Icc (1 : \u211d) 2, \u2200 n : \u2115, 1 \u2264 n \u2192 (x : \u211d) ^ (n - 1) * (x - 1) \u2264 (x : \u211d) ^ n:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x \u2208 Set.Icc (1 : \u211d) 2, \u2200 n : \u2115, 1 \u2264 n \u2192\n     (x : \u211d) ^ (n - 1) * (x - 1) \u2264 (x : \u211d) ^ n:= by\n  rintro x \u27e8hx1, hx2\u27e9 n hn\n  cases' n with n\n  exfalso\n  linarith\n  simp_all [pow_succ]\n  nlinarith [pow_pos (zero_lt_one.trans_le hx1) n]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x \u2208 Set.Icc (1 : \u211d) 2, \u2200 n : \u2115, 1 \u2264 n \u2192\n     (x : \u211d) ^ (n - 1) * (x - 1) \u2264 (x : \u211d) ^ n:= by\n  intro x hx n hn\n  have h : 0 < x := by\n    rw [Set.mem_Icc] at hx\n    linarith\n  have hx' : 0 \u2264 x - 1 := by\n    rw [Set.mem_Icc] at hx\n    linarith\n  have h1 : (x : \u211d) ^ (n - 1) * (x - 1) \u2264 (x : \u211d) ^ (n - 1) * x := by\n    refine' mul_le_mul_of_nonneg_left _ (by positivity)\n    nlinarith [Set.mem_Icc.mp hx]\n  calc\n    (x : \u211d) ^ (n - 1) * (x - 1) \u2264 (x : \u211d) ^ (n - 1) * x := by\n      exact h1\n    _ \u2264 (x : \u211d) ^ (n - 1) * x ^ 1 := by simp\n    _ = (x : \u211d) ^ (n - 1 + 1) := by rw [\u2190 pow_add, add_comm]\n    _ = (x : \u211d) ^ n := by\n      rw [Nat.sub_add_cancel (show 1 \u2264 n from hn)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x \u2208 Set.Icc (1 : \u211d) 2, \u2200 n : \u2115, 1 \u2264 n \u2192\n     (x : \u211d) ^ (n - 1) * (x - 1) \u2264 (x : \u211d) ^ n:= by\n  intro x hx n hn\n  have h1 : 1 \u2264 x := by linarith [hx.1]\n  have h2 : x \u2264 2 := by linarith [hx.2]\n  have h3 : 0 \u2264 x - 1 := by linarith\n  have h4 : x - 1 \u2264 x := by linarith\n  calc\n    x ^ (n - 1) * (x - 1) \u2264 x ^ (n - 1) * x := by gcongr <;> nlinarith\n    _ = x ^ (n - 1 + 1) := by rw [\u2190 pow_succ]\n    _ = x ^ n := by rw [Nat.sub_add_cancel hn]"
  ]
 },
 {
  "old": "(a b c d : \u211d) : (1 + a + a ^ 2) * (1 + b + b ^ 2) * (1 + c + c ^ 2) * (1 + d + d ^ 2) \u2265 (1 + a + a * b) * (1 + b + b * c) * (1 + c + c * d) * (1 + d + d * a) := by",
  "new": ": \u220f x \u2208 Finset.Icc 1 n, (1 + 1 / (x + x ^ 2)) \u2265 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u220f x \u2208 Finset.Icc 1 n, (1 + 1 / (x + x ^ 2)) \u2265 1:= by\n  have h\u2080 : \u2200 x \u2208 Finset.Icc 1 n, 1 / (x + x ^ 2) \u2265 0 := by\n    intro x hx\n    exact Nat.zero_le _\n  apply Finset.one_le_prod'\n  intro x hx\n  simp_all [Nat.le_add_left]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u220f x \u2208 Finset.Icc 1 n, (1 + 1 / (x + x ^ 2)) \u2265 1:= by\n  have h : \u2200 x \u2208 Finset.Icc 1 n, 1 + 1 / (x + x ^ 2) \u2265 1 := by\n    intro x hx\n    have : 0 < x := by\n      rw [Finset.mem_Icc] at hx\n      linarith\n    have : 1 / (x + x ^ 2) \u2265 0 := by\n      apply Nat.zero_le\n    linarith\n  have : \u220f x \u2208 Finset.Icc 1 n, (1 + 1 / (x + x ^ 2)) \u2265 \u220f x \u2208 Finset.Icc 1 n, 1 := by\n    apply Finset.prod_le_prod\n    \u00b7 intro x hx\n      linarith [h x hx]\n    \u00b7 intro x hx\n      linarith [h x hx]\n  simpa using this"
  ]
 },
 {
  "old": "(m n: \u2115) (h1 : 5 \u2223 2 ^ n + 3 ^ m) : 5 \u2223 2 ^ m + 3 ^ n := by",
  "new": "(p : \u2115) (hp : p.Prime) (a : \u2115) : a.Coprime p \u2228 p \u2223 a := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (hp : p.Prime) (a : \u2115) : a.Coprime p \u2228 p \u2223 a := by\n  rw [Nat.coprime_iff_gcd_eq_one]\n  by_cases h : p \u2223 a\n  \u00b7 right\n    exact h\n  \u00b7 left\n    have := hp.coprime_iff_not_dvd.2 h\n    simpa [Nat.gcd_comm] using this\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop"
  ]
 },
 {
  "old": "(n : \u2115) (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : \u2200 n : \u2115, n \u2265 2 \u2192 (a / (a + n * b))^(1 / n) + (b / (b + n * c))^(1 / n) + (c / (c + n * a))^(1 / n) > 1 := by",
  "new": "(x y z : \u211d) (n : \u2115) (h\u2081 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2082 : 0 < n) : (x / (x + n * y))^(1 / n) + (y / (y + n * z))^(1 / n) + (z / (z + n * x))^(1 / n) \u2265 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (x y z : \u211d) (n : \u2115) (h\u2081 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2082 : 0 < n) : \n  (x / (x + n * y))^(1 / n) + (y / (y + n * z))^(1 / n) + (z / (z + n * x))^(1 / n) \u2265 1:= by\n  rcases h\u2081 with \u27e8h\u2081\u2081, h\u2081\u2082, h\u2081\u2083\u27e9\n  rcases n with (_ | _ | n) <;> simp_all [Nat.div_eq_of_lt, Nat.div_eq_of_lt, Nat.div_eq_of_lt]\n  all_goals\n    ring_nf\n    apply le_of_sub_nonneg\n    field_simp\n    ring_nf\n    positivity"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : x > 0) (hy : y > 0) (hz : z > 0) (h : 1 + z + x + y = 4 * x * y * z) : (2 * x ^ 2 + 1 + x) * (2 * y ^ 2 + 1 + y) * (2 * z ^ 2 + 1 + z) \u2265 8 * (x + y) * (y + z) * (z + x) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z \u2264 3) : 1 / (x + y) ^ 2 + 1 / (y + z) ^ 2 + 1 / (z + x) ^ 2 \u2265 4 * (x + y + z):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z \u2264 3) :\n    1 / (x + y) ^ 2 + 1 / (y + z) ^ 2 + 1 / (z + x) ^ 2 \u2265 4 * (x + y + z):= by\n  field_simp [hx, hy, hz] at h\u2082 \u22a2\n  rw [div_le_iff (by positivity)] at h\u2082\n  have h\u2083 : 0 < x * y := mul_pos hx hy\n  have h\u2084 : 0 < y * z := mul_pos hy hz\n  have h\u2085 : 0 < x * z := mul_pos hx hz\n  have h\u2086 : 0 < x * y * z := by positivity\n  have h\u2087 : 0 < x * y * z * (x * y + y * z + z * x) := by positivity\n  field_simp [h\u2081] at h\u2082 \u22a2\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a ^ 2 + b ^ 2 + c ^ 2 = 12) : a * (b ^ 2 + c ^ 2) ^ (1 / 3) + b * (c ^ 2 + a ^ 2) ^ (1 / 3) + c * (a ^ 2 + b ^ 2) ^ (1 / 3) \u2264 12 := by",
  "new": "(a b c : \u211d) (ha : a ^ 2 + b ^ 2 + c ^ 2 = 1) : a * b ^ 2 + b * c ^ 2 + c * a ^ 2 \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210 (a b c : \u211d) (ha : a ^ 2 + b ^ 2 + c ^ 2 = 1) : a * b ^ 2 + b * c ^ 2 + c * a ^ 2 \u2264 1:= by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), sq_nonneg (1 - a), sq_nonneg (1 - b), sq_nonneg (1 - c)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210 (a b c : \u211d) (ha : a ^ 2 + b ^ 2 + c ^ 2 = 1) : a * b ^ 2 + b * c ^ 2 + c * a ^ 2 \u2264 1:= by\n  ring_nf at ha \u22a2\n  nlinarith [sq_nonneg (a - b ^ 2), sq_nonneg (b - c ^ 2), sq_nonneg (c - a ^ 2),\n    sq_nonneg (a + b ^ 2), sq_nonneg (b + c ^ 2), sq_nonneg (c + a ^ 2)]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210 (a b c : \u211d) (ha : a ^ 2 + b ^ 2 + c ^ 2 = 1) : a * b ^ 2 + b * c ^ 2 + c * a ^ 2 \u2264 1:= by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (a - c), sq_nonneg (a - 1),\n    sq_nonneg (b - 1), sq_nonneg (c - 1)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) : a^3 + b^3 + c^3 \u2265 a^2 * (b^2 + c^2) / (b + c) + b^2 * (c^2 + a^2) / (c + a) + c^2 * (a^2 + b^2) / (a + b) := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a^3 + b^3 + c^3 \u2265 a^2 * (b^2 + c^2) / (b + c) + b^2 * (c^2 + a^2) / (c + a) + c^2 * (a^2 + b^2) / (a + b):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_2020 : \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a^3 + b^3 + c^3 \u2265 a^2 * (b^2 + c^2) / (b + c) + b^2 * (c^2 + a^2) / (c + a) + c^2 * (a^2 + b^2) / (a + b):= by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  have hab := mul_pos ha hb\n  have hac := mul_pos ha hc\n  have hbc := mul_pos hb hc\n  field_simp\n  rw [div_le_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a^2 - b^2), mul_self_nonneg (b^2 - c^2), mul_self_nonneg (c^2 - a^2),\n    mul_nonneg hab.le hac.le, mul_nonneg hac.le hbc.le, mul_nonneg hbc.le hab.le,\n    mul_nonneg (sq_nonneg (a - b)) (sq_nonneg (b - c)),\n    mul_nonneg (sq_nonneg (b - c)) (sq_nonneg (c - a)),\n    mul_nonneg (sq_nonneg (c - a)) (sq_nonneg (a - b))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_2020 : \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a^3 + b^3 + c^3 \u2265 a^2 * (b^2 + c^2) / (b + c) + b^2 * (c^2 + a^2) / (c + a) + c^2 * (a^2 + b^2) / (a + b):= by\n  intro a b c h\n  have h\u2081 : 0 < a := h.1\n  have h\u2082 : 0 < b := h.2.1\n  have h\u2083 : 0 < c := h.2.2\n  have h\u2084 : 0 < a * b := mul_pos h\u2081 h\u2082\n  have h\u2085 : 0 < a * c := mul_pos h\u2081 h\u2083\n  have h\u2086 : 0 < b * c := mul_pos h\u2082 h\u2083\n  have h\u2087 : 0 < a * b * c := by positivity\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087]\n  rw [div_le_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a^2 - b^2), mul_self_nonneg (b^2 - c^2), mul_self_nonneg (c^2 - a^2),\n    mul_nonneg h\u2085.le h\u2084.le, mul_nonneg h\u2086.le h\u2084.le, mul_nonneg h\u2085.le h\u2086.le]"
  ]
 },
 {
  "old": "(a b c d e f : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) (he : 0 < e) (hf : 0 < f) : a^6 + b^6 + c^6 + d^6 + e^6 + f^6 + (27906/3125)*a*b*c*d*e*f \u2265 (1/3125)*(a + b + c + d + e + f)^6 := by",
  "new": ": \u2200 a b c d e f : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192 0 < e \u2192 0 < f \u2192 64 * (a^5 + b^5 + c^5 + d^5 + e^5 + f^5) * (a + b + c + d + e + f) \u2265 24 * (a^6 + b^6 + c^6 + d^6 + e^6 + f^6) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d e f : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192 0 < e \u2192 0 < f \u2192 64 * (a^5 + b^5 + c^5 + d^5 + e^5 + f^5) * (a + b + c + d + e + f) \u2265 24 * (a^6 + b^6 + c^6 + d^6 + e^6 + f^6)  := by\n  rintro a b c d e f h\u2080 h\u2081 h\u2082 h\u2083 h\u2084 h\u2085\n  have h\u2086 : 0 < a ^ 5 := pow_pos h\u2080 5\n  have h\u2087 : 0 < b ^ 5 := pow_pos h\u2081 5\n  have h\u2088 : 0 < c ^ 5 := pow_pos h\u2082 5\n  have h\u2089 : 0 < d ^ 5 := pow_pos h\u2083 5\n  have h\u2081\u2080 : 0 < e ^ 5 := pow_pos h\u2084 5\n  have h\u2081\u2081 : 0 < f ^ 5 := pow_pos h\u2085 5\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (a - d), sq_nonneg (a - e), sq_nonneg (a - f), sq_nonneg (b - c), sq_nonneg (b - d), sq_nonneg (b - e), sq_nonneg (b - f), sq_nonneg (c - d), sq_nonneg (c - e), sq_nonneg (c - f), sq_nonneg (d - e), sq_nonneg (d - f), sq_nonneg (e - f)]"
  ]
 },
 {
  "old": "(x y z : \u211d) (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2081 : x + y + z = 1) : x*y*z \u2264 1/27 := by",
  "new": "(i j : \u2115) (h : i * j = 1) : i = 1 \u2227 j = 1 \u2228 i = j:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i j : \u2115) (h : i * j = 1) :\n    i = 1 \u2227 j = 1 \u2228 i = j:= by\n  rw [mul_eq_one] at h\n  aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i j : \u2115) (h : i * j = 1) :\n    i = 1 \u2227 j = 1 \u2228 i = j:= by\n  rw [eq_comm]\n  simp [eq_comm, mul_eq_one_iff] at h\n  aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i j : \u2115) (h : i * j = 1) :\n    i = 1 \u2227 j = 1 \u2228 i = j:= by\n  have h1 : i * j = 1 := by assumption\n  cases i with\n  | zero =>\n    cases j with\n    | zero => linarith\n    | succ j => simp_all\n  | succ i =>\n    cases j with\n    | zero => simp_all\n    | succ j =>\n      simp_all\n      <;> apply Or.intro_left\n      <;> apply And.intro\n      <;> simp_all\n      <;> omega"
  ]
 },
 {
  "old": "(a b c : \u211d) : (2 * a ^ 2 + b * c) / (b + c) + (2 * b ^ 2 + c * a) / (c + a) + (2 * c ^ 2 + a * b) / (a + b) \u2265 3 / 2 * (a + b + c) := by",
  "new": ": \u2200 x : \u211d, x > 0 \u2192 x ^ 2 * (1 - 3 * Real.sqrt (x ^ 2) / x) \u2264 0 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 2 * (1 - 3 * Real.sqrt (x ^ 2) / x) \u2264 0 := by\n  intro x hx\n  rw [mul_comm]\n  field_simp [hx]\n  rw [\u2190 sub_nonneg]\n  cases' le_or_lt 0 (x ^ 2) with h h\n  all_goals nlinarith [Real.sqrt_nonneg (x ^ 2), Real.mul_self_sqrt (by positivity : 0 \u2264 x ^ 2)]"
  ]
 },
 {
  "old": ": \u2200 n : \u2115, n \u2265 2 \u2192 \u00ac n \u2223 (2 ^ n - 1) := by",
  "new": "(a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  by_cases h : Nat.Coprime a b\n  exact Or.inl h\n  exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  by_cases h : a.Coprime b\n  exact Or.inl h\n  exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  by_cases h : Nat.Coprime a b\n  exacts [Or.inl h, Or.inr (by simpa using h)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  by_cases h : Nat.Coprime a b\n  case pos => exact Or.inl h\n  case neg => exact Or.inr h\n  <;> rfl\n  <;> aesop"
  ]
 },
 {
  "old": "a b (ha : 0 \u2264 a) (hb : 0 \u2264 b) : Real.sqrt (a + b) \u2264 Real.sqrt a + Real.sqrt b := by",
  "new": "(x y : \u2115) (h : x ^ 2 + y ^ 2 \u2264 2 * x * y + 1) : x \u2223 y \u2228 Nat.Coprime x y \u2228 Real.sqrt (x ^ 2 + y ^ 2) \u2264 x + y:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_sqrt_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2264 2 * x * y + 1) :\n    x \u2223 y \u2228 Nat.Coprime x y \u2228 Real.sqrt (x ^ 2 + y ^ 2) \u2264 x + y:= by\n  by_cases h1 : x \u2223 y\n  next => exact Or.inl h1\n  by_cases h2 : Nat.Coprime x y\n  next => exact Or.inr (Or.inl h2)\n  apply Or.inr\n  apply Or.inr\n  have h3 : Real.sqrt (x ^ 2 + y ^ 2) \u2264 x + y := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 norm_cast\n      nlinarith\n  exact h3",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_sqrt_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2264 2 * x * y + 1) :\n    x \u2223 y \u2228 Nat.Coprime x y \u2228 Real.sqrt (x ^ 2 + y ^ 2) \u2264 x + y:= by\n  by_contra! h'\n  have h1 : 0 < x := (Nat.pos_of_ne_zero (by aesop))\n  have h2 : 0 < y := (Nat.pos_of_ne_zero (by aesop))\n  have h3 : x \u2223 y \u2228 \u00acx \u2223 y := by apply em\n  rcases h3 with (h3 | h3) <;> simp_all [Nat.coprime_iff_gcd_eq_one, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  all_goals nlinarith [Real.sqrt_nonneg (x ^ 2 + y ^ 2), Real.sq_sqrt (show 0 \u2264 (x ^ 2 + y ^ 2 : \u211d) by positivity)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_sqrt_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2264 2 * x * y + 1) :\n    x \u2223 y \u2228 Nat.Coprime x y \u2228 Real.sqrt (x ^ 2 + y ^ 2) \u2264 x + y:= by\n  by_cases hxy : x \u2223 y\n  next => exact Or.inl hxy\n  by_cases h2 : x.Coprime y\n  next => exact Or.inr (Or.inl h2)\n  exact Or.inr (Or.inr (by\n      have h2 : 0 < x ^ 2 + y ^ 2 := by\n        contrapose! hxy\n        aesop\n      apply Real.sqrt_le_iff.mpr\n      constructor <;> norm_cast <;> nlinarith))"
  ]
 },
 {
  "old": "(n : \u2115) : 3^(n + 1) \u2223 (2^(3^n) + 1) := by",
  "new": "(a b m : \u2115) (hab : Nat.Coprime a b) : Nat.Coprime (a^m) (b^m) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_of_pow_coprime (a b m : \u2115) (hab : Nat.Coprime a b)  :\n   Nat.Coprime (a^m) (b^m) := by\n  simpa [Nat.coprime_comm] using hab.pow m m",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_of_pow_coprime (a b m : \u2115) (hab : Nat.Coprime a b)  :\n   Nat.Coprime (a^m) (b^m) := by\n  have : Nat.Coprime (a^m) (b^m) := Nat.Coprime.pow m m hab\n  assumption\n  <;> simp [Nat.Coprime, Nat.gcd_mul_left, this]"
  ]
 },
 {
  "old": "(a b c : \u211d) (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2081 : a \u2265 b \u2227 b \u2265 c) : (a + b) / c^2 + (b + c) / a^2 + (c + a) / b^2 \u2265 2 / a + 2 / b + 2 / c := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a * b * c \u2265 1 \u2192 a^4 / (a^3 + 1) + b^4 / (b^3 + 1) + c^4 / (c^3 + 1) \u2264 2 * (a + b + c):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a * b * c \u2265 1 \u2192 a^4 / (a^3 + 1) + b^4 / (b^3 + 1) + c^4 / (c^3 + 1) \u2264 2 * (a + b + c):= by\n  rintro a b c \u27e8a0, b0, c0, ab\u27e9\n  have : a^4 / (a^3 + 1) \u2264 a:= by\n    rw [div_le_iff (by positivity)]\n    nlinarith [pow_two_nonneg a, pow_two_nonneg (a - 1)]\n  have : b^4 / (b^3 + 1) \u2264 b := by\n    rw [div_le_iff (by positivity)]\n    nlinarith [pow_two_nonneg b, pow_two_nonneg (b - 1)]\n  have : c^4 / (c^3 + 1) \u2264 c := by\n    rw [div_le_iff (by positivity)]\n    nlinarith [pow_two_nonneg c, pow_two_nonneg (c - 1)]\n  linarith\n  <;> assumption\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a * b * c \u2265 1 \u2192 a^4 / (a^3 + 1) + b^4 / (b^3 + 1) + c^4 / (c^3 + 1) \u2264 2 * (a + b + c):= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have ha\u2080 : a ^ 4 / (a ^ 3 + 1) \u2264 a := by\n    rw [div_le_iff (show (0 : \u211d) < a ^ 3 + 1 by positivity)]\n    nlinarith [sq_nonneg (a ^ 2 - 1), sq_nonneg a]\n  have hb\u2080 : b ^ 4 / (b ^ 3 + 1) \u2264 b := by\n    rw [div_le_iff (show (0 : \u211d) < b ^ 3 + 1 by positivity)]\n    nlinarith [sq_nonneg (b ^ 2 - 1), sq_nonneg b]\n  have hc\u2080 : c ^ 4 / (c ^ 3 + 1) \u2264 c := by\n    rw [div_le_iff (show (0 : \u211d) < c ^ 3 + 1 by positivity)]\n    nlinarith [sq_nonneg (c ^ 2 - 1), sq_nonneg c]\n  linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a * b * c \u2265 1 \u2192 a^4 / (a^3 + 1) + b^4 / (b^3 + 1) + c^4 / (c^3 + 1) \u2264 2 * (a + b + c):= by\n  intro a b c h\n  have ha : 0 \u2264 a := h.1\n  have hb : 0 \u2264 b := h.2.1\n  have hc : 0 \u2264 c := h.2.2.1\n  have habc : 1 \u2264 a * b * c := h.2.2.2\n  have h\u2080 : a ^ 4 / (a ^ 3 + 1) \u2264 a := by\n    rw [div_le_iff (show (0 : \u211d) < a ^ 3 + 1 by positivity)]\n    nlinarith [pow_two_nonneg a, pow_two_nonneg (a - 1)]\n  have h\u2081 : b ^ 4 / (b ^ 3 + 1) \u2264 b := by\n    rw [div_le_iff (show (0 : \u211d) < b ^ 3 + 1 by positivity)]\n    nlinarith [pow_two_nonneg b, pow_two_nonneg (b - 1)]\n  have h\u2082 : c ^ 4 / (c ^ 3 + 1) \u2264 c := by\n    rw [div_le_iff (show (0 : \u211d) < c ^ 3 + 1 by positivity)]\n    nlinarith [pow_two_nonneg c, pow_two_nonneg (c - 1)]\n  linarith\n  <;> try norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a * b * c \u2265 1 \u2192 a^4 / (a^3 + 1) + b^4 / (b^3 + 1) + c^4 / (c^3 + 1) \u2264 2 * (a + b + c):= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have : a^4 / (a^3 + 1) \u2264 a:= by\n    rw [div_le_iff (by positivity)]\n    nlinarith [sq_nonneg (a - 1)]\n  have : b^4 / (b^3 + 1) \u2264 b := by\n    rw [div_le_iff (by positivity)]\n    nlinarith [sq_nonneg (b - 1)]\n  have : c^4 / (c^3 + 1) \u2264 c := by\n    rw [div_le_iff (by positivity)]\n    nlinarith [sq_nonneg (c - 1)]\n  linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : (a + b) ^ 2 * (1 + c) * (a + c) * (b + c) \u2265 (27 / 4) * a * b * c := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9 * (x + y + z):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9 * (x + y + z):= by\n  rw [hab]\n  have : 1 / x + 1 / y + 1 / z \u2265 3 := by\n    field_simp [hx.ne', hy.ne', hz.ne']\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x + y + z), sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  nlinarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9 * (x + y + z):= by\n  have h\u2081 : 0 < x * y := by positivity\n  have h\u2082 : 0 < y * z := by positivity\n  have h\u2083 : 0 < z * x := by positivity\n  have h\u2084 : 0 < x * y * z := by positivity\n  have h\u2085 : 1 / x + 1 / y + 1 / z \u2265 3 := by\n    field_simp [hx, hy, hz]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n      mul_self_nonneg (x + y + z)]\n  nlinarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9 * (x + y + z):= by\n  have : 1 / x + 1 / y + 1 / z \u2265 9 := by\n    field_simp [add_comm]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z), mul_pos hx hy, mul_pos hx hz, mul_pos hy hz]\n  nlinarith\n  <;> norm_num"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^2 + b^2) / (c^2 + a * b) + (c^2 + a^2) / (b^2 + c * a) + (b^2 + c^2) / (a^2 + b * c) \u2265 3 := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 (a^2 + b^2) / (c^2 + a * b) + (c^2 + a^2) / (b^2 + c * a) + (b^2 + c^2) / (a^2 + b * c) \u2265 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 (a^2 + b^2) / (c^2 + a * b) + (c^2 + a^2) / (b^2 + c * a) + (b^2 + c^2) / (a^2 + b * c) \u2265 3:= by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  have hab : 0 < a * b := mul_pos ha hb\n  have hbc : 0 < b * c := mul_pos hb hc\n  have hac : 0 < a * c := mul_pos ha hc\n  field_simp [hab.ne', hbc.ne', hac.ne']\n  rw [le_div_iff (by positivity), \u2190 sub_nonneg]\n  ring_nf\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    mul_nonneg hab.le hbc.le, mul_nonneg hbc.le hac.le, mul_nonneg hac.le hab.le,\n    mul_nonneg (sq_nonneg (a - b)) (sq_nonneg (b - c)),\n    mul_nonneg (sq_nonneg (b - c)) (sq_nonneg (c - a)),\n    mul_nonneg (sq_nonneg (c - a)) (sq_nonneg (a - b))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 (a^2 + b^2) / (c^2 + a * b) + (c^2 + a^2) / (b^2 + c * a) + (b^2 + c^2) / (a^2 + b * c) \u2265 3:= by\n  rintro a b c \u27e8a_pos, b_pos, c_pos\u27e9\n  have h\u2080 : 0 < a * b := by positivity\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * a := by positivity\n  have h\u2083 : 0 < a * b + b * c + c * a := by positivity\n  have h\u2084 : 0 < a * b * c := by positivity\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    mul_nonneg h\u2080.le h\u2081.le, mul_nonneg h\u2081.le h\u2082.le, mul_nonneg h\u2082.le h\u2080.le,\n    mul_nonneg (sq_nonneg (a - b)) (sq_nonneg (b - c)),\n    mul_nonneg (sq_nonneg (b - c)) (sq_nonneg (c - a)),\n    mul_nonneg (sq_nonneg (c - a)) (sq_nonneg (a - b))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 (a^2 + b^2) / (c^2 + a * b) + (c^2 + a^2) / (b^2 + c * a) + (b^2 + c^2) / (a^2 + b * c) \u2265 3:= by\n  intro a b c h\n  rcases h with \u27e8h\u2081, h\u2082, h\u2083\u27e9\n  have h\u2084 : 0 < a * b := mul_pos h\u2081 h\u2082\n  have h\u2085 : 0 < b * c := mul_pos h\u2082 h\u2083\n  have h\u2086 : 0 < c * a := mul_pos h\u2083 h\u2081\n  field_simp [h\u2084, h\u2085, h\u2086]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    mul_nonneg (sq_nonneg (a - b)) (sq_nonneg (b - c)), mul_nonneg (sq_nonneg (b - c)) (sq_nonneg (c - a)),\n    mul_nonneg (sq_nonneg (c - a)) (sq_nonneg (a - b))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 (a^2 + b^2) / (c^2 + a * b) + (c^2 + a^2) / (b^2 + c * a) + (b^2 + c^2) / (a^2 + b * c) \u2265 3:= by\n  intro a b c h\n  rcases h with \u27e8ha, hb, hc\u27e9\n  have : 0 < a * b := by positivity\n  have : 0 < b * c := by positivity\n  have : 0 < c * a := by positivity\n  have : 0 < (a * b) * (b * c) := by positivity\n  have : 0 < (b * c) * (c * a) := by positivity\n  have : 0 < (c * a) * (a * b) := by positivity\n  field_simp [ha, hb, hc]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a^2 - b^2), sq_nonneg (b^2 - c^2), sq_nonneg (c^2 - a^2),\n    mul_nonneg (sq_nonneg (a - b)) (sq_nonneg (b - c)),\n    mul_nonneg (sq_nonneg (b - c)) (sq_nonneg (c - a)),\n    mul_nonneg (sq_nonneg (c - a)) (sq_nonneg (a - b))]\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) (hab : a + b + c + d = 1) : a^2 / (a + b) + b^2 / (b + c) + c^2 / (c + d) + d^2 / (d + a) \u2265 1 / 2 \u2227 (a^2 / (a + b) + b^2 / (b + c) + c^2 / (c + d) + d^2 / (d + a) = 1 / 2 \u2194 a = b \u2227 b = c \u2227 c = d \u2227 d = 1 / 4) := by",
  "new": ": \u2200 a b c d : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 d > 0 \u2227 a + b + c + d = 1 \u2192 a^2 / (a + b) + b^2 / (b + c) + c^2 / (c + d) + d^2 / (d + a) \u2265 1 / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_2023 : \u2200 a b c d : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 d > 0 \u2227 a + b + c + d = 1 \u2192 a^2 / (a + b) + b^2 / (b + c) + c^2 / (c + d) + d^2 / (d + a) \u2265 1 / 2:= by\n  rintro a b c d \u27e8a_pos, b_pos, c_pos, d_pos, a_add_b_c_d_eq_1\u27e9\n  have h\u2081 : a^2 / (a + b) \u2265 (2 * a - (a + b) / 2) / 2 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by linarith : 0 < (a + b))]\n    nlinarith [sq_nonneg (a - (a + b) / 2)]\n  have h\u2082 : b^2 / (b + c) \u2265 (2 * b - (b + c) / 2) / 2 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by linarith : 0 < (b + c))]\n    nlinarith [sq_nonneg (b - (b + c) / 2)]\n  have h\u2083 : c^2 / (c + d) \u2265 (2 * c - (c + d) / 2) / 2 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by linarith : 0 < (c + d))]\n    nlinarith [sq_nonneg (c - (c + d) / 2)]\n  have h\u2084 : d^2 / (d + a) \u2265 (2 * d - (d + a) / 2) / 2 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by linarith : 0 < (d + a))]\n    nlinarith [sq_nonneg (d - (d + a) / 2)]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_2023 : \u2200 a b c d : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 d > 0 \u2227 a + b + c + d = 1 \u2192 a^2 / (a + b) + b^2 / (b + c) + c^2 / (c + d) + d^2 / (d + a) \u2265 1 / 2:= by\n  rintro a b c d \u27e8h1, h2, h3, h4, h5\u27e9\n  have h6 : a^2 / (a + b) \u2265 (2 * a - (a + b) / 2) / 2 := by\n    rw [ge_iff_le, le_div_iff (show (0 : \u211d) < a + b by linarith)]\n    nlinarith [sq_nonneg (a - (a + b) / 2)]\n  have h7 : b^2 / (b + c) \u2265 (2 * b - (b + c) / 2) / 2 := by\n    rw [ge_iff_le, le_div_iff (show (0 : \u211d) < b + c by linarith)]\n    nlinarith [sq_nonneg (b - (b + c) / 2)]\n  have h8 : c^2 / (c + d) \u2265 (2 * c - (c + d) / 2) / 2 := by\n    rw [ge_iff_le, le_div_iff (show (0 : \u211d) < c + d by linarith)]\n    nlinarith [sq_nonneg (c - (c + d) / 2)]\n  have h9 : d^2 / (d + a) \u2265 (2 * d - (d + a) / 2) / 2 := by\n    rw [ge_iff_le, le_div_iff (show (0 : \u211d) < d + a by linarith)]\n    nlinarith [sq_nonneg (d - (d + a) / 2)]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_2023 : \u2200 a b c d : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 d > 0 \u2227 a + b + c + d = 1 \u2192 a^2 / (a + b) + b^2 / (b + c) + c^2 / (c + d) + d^2 / (d + a) \u2265 1 / 2:= by\n  rintro a b c d \u27e8a_pos, b_pos, c_pos, d_pos, a_b_c_d_eq_1\u27e9\n  have h\u2080 : a^2 / (a + b) \u2265 (2 * a - (a + b) / 2) / 2 := by\n    rw [ge_iff_le, le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a - (a + b) / 2)]\n  have h\u2081 : b^2 / (b + c) \u2265 (2 * b - (b + c) / 2) / 2 := by\n    rw [ge_iff_le, le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (b - (b + c) / 2)]\n  have h\u2082 : c^2 / (c + d) \u2265 (2 * c - (c + d) / 2) / 2 := by\n    rw [ge_iff_le, le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (c - (c + d) / 2)]\n  have h\u2083 : d^2 / (d + a) \u2265 (2 * d - (d + a) / 2) / 2 := by\n    rw [ge_iff_le, le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (d - (d + a) / 2)]\n  nlinarith\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 1) : -Real.sqrt 3 / 18 \u2264 (a - b) * (b - c) * (c - a) \u2227 (a - b) * (b - c) * (c - a) \u2264 Real.sqrt 3 / 18 := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 1 \u2192 (a * b + b * c + c * a) * (Real.sqrt 3 / 3) \u2264 a * Real.sqrt 3 + b * Real.sqrt 3 + c * Real.sqrt 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 1 \u2192\n   (a * b + b * c + c * a) * (Real.sqrt 3 / 3) \u2264 a * Real.sqrt 3 + b * Real.sqrt 3 + c * Real.sqrt 3:= by\n  intro a b c h\n  have h\u2080 : 0 \u2264 a * Real.sqrt 3 := by nlinarith [Real.sqrt_nonneg 3]\n  have h\u2081 : 0 \u2264 b * Real.sqrt 3 := by nlinarith [Real.sqrt_nonneg 3]\n  have h\u2082 : 0 \u2264 c * Real.sqrt 3 := by nlinarith [Real.sqrt_nonneg 3]\n  nlinarith [sq_sqrt (show 0 \u2264 3 by norm_num),\n    mul_self_nonneg (a + b + c),\n    mul_self_nonneg (a - b),\n    mul_self_nonneg (b - c),\n    mul_self_nonneg (c - a)]\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 1 \u2192\n   (a * b + b * c + c * a) * (Real.sqrt 3 / 3) \u2264 a * Real.sqrt 3 + b * Real.sqrt 3 + c * Real.sqrt 3:= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg _\n  nlinarith [mul_self_sqrt (show 0 \u2264 3 from by norm_num), mul_nonneg ha hb, mul_nonneg hb hc,\n    mul_nonneg hc ha]\n  <;> linarith\n  <;> nlinarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 1 \u2192\n   (a * b + b * c + c * a) * (Real.sqrt 3 / 3) \u2264 a * Real.sqrt 3 + b * Real.sqrt 3 + c * Real.sqrt 3:= by\n  rintro a b c \u27e8ha, hb, hc, h1\u27e9\n  have : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg 3\n  have h2 : 0 \u2264 a * Real.sqrt 3 := by positivity\n  have h3 : 0 \u2264 b * Real.sqrt 3 := by positivity\n  have h4 : 0 \u2264 c * Real.sqrt 3 := by positivity\n  nlinarith [Real.mul_self_sqrt (show 0 \u2264 3 from by linarith),\n    mul_self_nonneg (a + b + c), mul_self_nonneg (a - b), mul_self_nonneg (b - c),\n    mul_self_nonneg (c - a)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 1 \u2192\n   (a * b + b * c + c * a) * (Real.sqrt 3 / 3) \u2264 a * Real.sqrt 3 + b * Real.sqrt 3 + c * Real.sqrt 3:= by\n  rintro a b c \u27e8ha, hb, hc, h1\u27e9\n  have h2 : 0 < Real.sqrt 3 := by norm_num [Real.sqrt_pos]\n  have h2' : 0 \u2264 Real.sqrt 3 := by linarith\n  have h3 : 0 \u2264 a * Real.sqrt 3 + b * Real.sqrt 3 + c * Real.sqrt 3 := by positivity\n  nlinarith [sq_sqrt (show 0 \u2264 3 from by norm_num), mul_self_nonneg (a - b),\n    mul_self_nonneg (b - c), mul_self_nonneg (c - a)]\n  <;> assumption\n  <;> linarith\n  <;> linarith\n  <;> linarith"
  ]
 },
 {
  "old": "(u : \u211d) (hu : 0 \u2264 u \u2227 u \u2264 \u03c0/4) : (3 * Real.sin u) / (2 + Real.cos u) - u \u2264 0 := by",
  "new": "(h\u2080 : 0 < R) (h\u2081 : R \u2264 3) (h\u2082 : 0 \u2264 w\u2081) (h\u2083 : 0 \u2264 w\u2082) (h\u2084 : 0 \u2264 w\u2083) (h\u2085 : w\u2081 + w\u2082 + w\u2083 = 1) : Real.sqrt (1 + (w\u2081 * Real.sin (\u03b8 / 3) + w\u2082 * Real.sin (2 * \u03b8 / 3) + w\u2083 * Real.sin \u03b8)^2) \u2264 3 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (h\u2080 : 0 < R) (h\u2081 : R \u2264 3) (h\u2082 : 0 \u2264 w\u2081) (h\u2083 : 0 \u2264 w\u2082) (h\u2084 : 0 \u2264 w\u2083) (h\u2085 : w\u2081 + w\u2082 + w\u2083 = 1) :  Real.sqrt (1 + (w\u2081 * Real.sin (\u03b8 / 3) + w\u2082 * Real.sin (2 * \u03b8 / 3) + w\u2083 * Real.sin \u03b8)^2) \u2264 3 := by\n  have h\u2086 : w\u2081 * Real.sin (\u03b8 / 3) + w\u2082 * Real.sin (2 * \u03b8 / 3) + w\u2083 * Real.sin \u03b8 \u2264 1 := by\n    have : Real.sin (\u03b8 / 3) \u2264 1 := Real.sin_le_one (\u03b8 / 3)\n    have : Real.sin (2 * \u03b8 / 3) \u2264 1 := Real.sin_le_one (2 * \u03b8 / 3)\n    have : Real.sin \u03b8 \u2264 1 := Real.sin_le_one \u03b8\n    nlinarith [h\u2085]\n  have h\u2087 : w\u2081 * Real.sin (\u03b8 / 3) + w\u2082 * Real.sin (2 * \u03b8 / 3) + w\u2083 * Real.sin \u03b8 \u2265 -1 := by\n    have : Real.sin (\u03b8 / 3) \u2265 -1 := Real.neg_one_le_sin (\u03b8 / 3)\n    have : Real.sin (2 * \u03b8 / 3) \u2265 -1 := Real.neg_one_le_sin (2 * \u03b8 / 3)\n    have : Real.sin \u03b8 \u2265 -1 := Real.neg_one_le_sin \u03b8\n    nlinarith [h\u2085]\n  apply Real.sqrt_le_iff.mpr\n  constructor <;> nlinarith [Real.sqrt_nonneg (1 + (w\u2081 * Real.sin (\u03b8 / 3) + w\u2082 * Real.sin (2 * \u03b8 / 3) + w\u2083 * Real.sin \u03b8)^2)]"
  ]
 },
 {
  "old": "{a b c : \u211d} (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : 2 / (a - a^2) + 2 / (b - b^2) + 2 / (c - c^2) \u2265 5 * (Real.sqrt (a / b * c) + Real.sqrt (b / c * a) + Real.sqrt (c / a * b)) := by",
  "new": "{a b c : \u211d} (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) : 2 / (a - a ^ 2) + 2 / (b - b ^ 2) + 2 / (c - c ^ 2) \u2265 9 / 2 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq {a b c : \u211d} (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) :  2 / (a - a ^ 2) + 2 / (b - b ^ 2) + 2 / (c - c ^ 2) \u2265 9 / 2  := by\n  have h : 0 < a ^ 2 := sq_pos_of_pos ha\n  have h' : 0 < b ^ 2 := sq_pos_of_pos hb\n  have h'' : 0 < c ^ 2 := sq_pos_of_pos hc\n  have h1 : 0 < a * b := mul_pos ha hb\n  have h2 : 0 < a * c := mul_pos ha hc\n  have h3 : 0 < b * c := mul_pos hb hc\n  have h4 : 2 / (a - a ^ 2) \u2265 4 / 2 := by\n    rw [ge_iff_le, le_div_iff]\n    nlinarith\n    nlinarith\n  have h5 : 2 / (b - b ^ 2) \u2265 4 / 2 := by\n    rw [ge_iff_le, le_div_iff]\n    nlinarith\n    nlinarith\n  have h6 : 2 / (c - c ^ 2) \u2265 4 / 2 := by\n    rw [ge_iff_le, le_div_iff]\n    nlinarith\n    nlinarith\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq {a b c : \u211d} (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) :  2 / (a - a ^ 2) + 2 / (b - b ^ 2) + 2 / (c - c ^ 2) \u2265 9 / 2  := by\n  have h\u2080 : 0 < a * b := by nlinarith\n  have h\u2081 : 0 < a * c := by nlinarith\n  have h\u2082 : 0 < b * c := by nlinarith\n  have h\u2083 : 0 < a * b * c := by nlinarith\n  have h\u2084 : 0 < a - a ^ 2 := by nlinarith\n  have h\u2085 : 0 < b - b ^ 2 := by nlinarith\n  have h\u2086 : 0 < c - c ^ 2 := by nlinarith\n  have h\u2087 : 2 / (a - a ^ 2) \u2265 2 := by\n    rw [ge_iff_le, le_div_iff h\u2084]\n    nlinarith\n  have h\u2088 : 2 / (b - b ^ 2) \u2265 2 := by\n    rw [ge_iff_le, le_div_iff h\u2085]\n    nlinarith\n  have h\u2089 : 2 / (c - c ^ 2) \u2265 2 := by\n    rw [ge_iff_le, le_div_iff h\u2086]\n    nlinarith\n  nlinarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq {a b c : \u211d} (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) :  2 / (a - a ^ 2) + 2 / (b - b ^ 2) + 2 / (c - c ^ 2) \u2265 9 / 2  := by\n  have : 0 < a * b := by nlinarith\n  have : 0 < b * c := by nlinarith\n  have : 0 < c * a := by nlinarith\n  have : 0 < a * b * c := by nlinarith\n  have : 0 < 2 * a * b * c := by nlinarith\n  have : 2 / (a - a ^ 2) \u2265 9 / 4:= by\n    rw [ge_iff_le]\n    rw [le_div_iff (by\n      nlinarith)]\n    nlinarith [sq_nonneg (a - 1 / 2)]\n  have : 2 / (b - b ^ 2) \u2265 9 / 4:= by\n    rw [ge_iff_le]\n    rw [le_div_iff (by\n      nlinarith)]\n    nlinarith [sq_nonneg (b - 1 / 2)]\n  have : 2 / (c - c ^ 2) \u2265 9 / 4:= by\n    rw [ge_iff_le]\n    rw [le_div_iff (by\n      nlinarith)]\n    nlinarith [sq_nonneg (c - 1 / 2)]\n  nlinarith"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : (a + b) * a ^ 2 / (a + b + c) ^ 2 * (b + c) + (b + c) * b ^ 2 / (b + c + d) ^ 2 * (c + d) + (c + d) * c ^ 2 / (a + c + d) ^ 2 * (d + a) + (d + a) * d ^ 2 / (d + a + b) ^ 2 * (a + b) \u2265 4 / 9 := by",
  "new": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : a * b ^ 2 + b * c ^ 2 + c * d ^ 2 + d * a ^ 2 \u2265 2 * a * b * c * d / (a + b + c + d):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : \n  a * b ^ 2 + b * c ^ 2 + c * d ^ 2 + d * a ^ 2 \u2265 2 * a * b * c * d / (a + b + c + d):= by\n  have H\u2080 : 0 < a + b + c + d := by linarith\n  have H\u2081 : 0 < a * b := by positivity\n  have H\u2082 : 0 < b * c := by positivity\n  have H\u2083 : 0 < c * d := by positivity\n  have H\u2084 : 0 < d * a := by positivity\n  have H\u2085 : 0 < a * b * c * d := by positivity\n  have H\u2086 : 0 < a * b * c * d * (a + b + c + d) := by positivity\n  field_simp [H\u2080, H\u2081, H\u2082, H\u2083, H\u2084, H\u2085, H\u2086]\n  rw [div_le_iff]\n  nlinarith [sq_nonneg (a * b - c * d), sq_nonneg (b * c - d * a), sq_nonneg (c * d - a * b),\n    sq_nonneg (d * a - b * c)]\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : \n  a * b ^ 2 + b * c ^ 2 + c * d ^ 2 + d * a ^ 2 \u2265 2 * a * b * c * d / (a + b + c + d):= by\n  have h\u2080 : 0 < a + b + c + d := by linarith\n  have h\u2081 : 0 < a * b := by positivity\n  have h\u2082 : 0 < b * c := by positivity\n  have h\u2083 : 0 < c * d := by positivity\n  have h\u2084 : 0 < d * a := by positivity\n  have h\u2085 : 0 < a * b * c * d := by positivity\n  have h\u2086 : 0 < a * b * c * d * (a + b + c + d) := by positivity\n  field_simp [h\u2080]\n  rw [div_le_iff, mul_comm]\n  nlinarith [sq_nonneg (a * b - c * d), sq_nonneg (a * c - b * d), sq_nonneg (a * d - c * b),\n    sq_nonneg (b * c - d * a)]\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : \n  a * b ^ 2 + b * c ^ 2 + c * d ^ 2 + d * a ^ 2 \u2265 2 * a * b * c * d / (a + b + c + d):= by\n  have h1 : 0 < a + b + c + d := by linarith\n  have h2 : 0 < a * b := by positivity\n  have h3 : 0 < b * c := by positivity\n  have h4 : 0 < c * d := by positivity\n  have h5 : 0 < d * a := by positivity\n  have h6 : 0 < a * b * c * d := by positivity\n  field_simp [h1, h2, h3, h4, h5, h6]\n  rw [div_le_iff, mul_comm]\n  nlinarith [sq_nonneg (a * b - c * d), sq_nonneg (a * c - b * d), sq_nonneg (a * d - b * c), sq_nonneg (b * c - a * d)]\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : \n  a * b ^ 2 + b * c ^ 2 + c * d ^ 2 + d * a ^ 2 \u2265 2 * a * b * c * d / (a + b + c + d):= by\n  have h1 : 0 < a * b := by positivity\n  have h2 : 0 < b * c := by positivity\n  have h3 : 0 < c * d := by positivity\n  have h4 : 0 < d * a := by positivity\n  have h5 : 0 < a + b + c + d := by positivity\n  have h6 : 0 < a * b * c * d := by positivity\n  have h7 : 0 < 2 * (a * b * c * d) := by positivity\n  field_simp [h5, h6, h7]\n  rw [div_le_iff (by positivity)]\n  nlinarith [sq_nonneg (a * b - c * d), sq_nonneg (b * c - d * a), sq_nonneg (c * d - a * b), sq_nonneg (d * a - b * c)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) : 1 / (a * (b + 1)) + 1 / (b * (c + 1)) + 1 / (c * (a + 1)) \u2265 3 / (a * b * c + 1) := by",
  "new": "(a b c : \u211d) (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2081 : a * b * c = 1) : (1 / (a * (b + 1)) + 1 / (b * (c + 1)) + 1 / (c * (a + 1))) \u2265 3 / (a * b * c + 1) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_step1 (a b c : \u211d) (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2081 : a * b * c = 1) :\n  (1 / (a * (b + 1)) + 1 / (b * (c + 1)) + 1 / (c * (a + 1))) \u2265 3 / (a * b * c + 1) := by\n  have h\u2082 : 0 < a := h\u2080.1\n  have h\u2083 : 0 < b := h\u2080.2.1\n  have h\u2084 : 0 < c := h\u2080.2.2\n  have h\u2085 : 0 < a * b := by positivity\n  have h\u2086 : 0 < b * c := by positivity\n  have h\u2087 : 0 < a * c := by positivity\n  have h\u2088 : 0 < a * b * c := by positivity\n  field_simp\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1),\n    sq_nonneg (a * b - 1), sq_nonneg (b * c - 1), sq_nonneg (a * c - 1),\n    sq_nonneg (a * b * c - 1)]\n  positivity\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_step1 (a b c : \u211d) (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2081 : a * b * c = 1) :\n  (1 / (a * (b + 1)) + 1 / (b * (c + 1)) + 1 / (c * (a + 1))) \u2265 3 / (a * b * c + 1) := by\n  rcases h\u2080 with \u27e8ha, hb, hc\u27e9\n  field_simp [h\u2081]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le,\n    mul_nonneg (sq_nonneg (a - 1)) hc.le, mul_nonneg (sq_nonneg (b - 1)) ha.le,\n    mul_nonneg (sq_nonneg (c - 1)) hb.le, mul_nonneg (sq_nonneg (a - 1)) hb.le,\n    mul_nonneg (sq_nonneg (b - 1)) hc.le, mul_nonneg (sq_nonneg (c - 1)) ha.le]"
  ]
 },
 {
  "old": ": \u2200 m : \u2115, \u2203 n : \u2115, n > m \u2227 n \u2223 2 ^ n + 1 := by",
  "new": "(p : \u2115) (hp : p.Prime) (a : \u2115) : a.Coprime p \u2228 \u2203 b : \u2115, b \u2223 a \u2227 b \u2223 p:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (hp : p.Prime) (a : \u2115) : a.Coprime p \u2228 \u2203 b : \u2115, b \u2223 a \u2227 b \u2223 p:= by\n  by_cases h : a.Coprime p\n  exact Or.inl h\n  rw [Nat.coprime_iff_gcd_eq_one] at h\n  exact Or.inr \u27e8a.gcd p, Nat.gcd_dvd_left a p, Nat.gcd_dvd_right a p\u27e9\n  <;> try norm_num <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption"
  ]
 },
 {
  "old": "(n : \u2115) (hn : 3 < n) : 2^(2 * n) \u2223 (totient (2^(2^(n - 1)) + 1)) := by",
  "new": "(n : \u2115) : (\u2200 x < n, Nat.Coprime n x) \u2228 \u2203 x < n, \u00ac Nat.Coprime n x:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (n : \u2115) :  (\u2200 x < n, Nat.Coprime n x) \u2228 \u2203 x < n, \u00ac Nat.Coprime n x:= by\n  by_cases h : \u2200 x < n, Nat.Coprime n x\n  exacts [Or.inl h, Or.inr (by simpa using h)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (n : \u2115) :  (\u2200 x < n, Nat.Coprime n x) \u2228 \u2203 x < n, \u00ac Nat.Coprime n x:= by\n  by_cases h : \u2200 x < n, Nat.Coprime n x <;> simp [h]\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (n : \u2115) :  (\u2200 x < n, Nat.Coprime n x) \u2228 \u2203 x < n, \u00ac Nat.Coprime n x:= by\n  refine' or_iff_not_imp_right.2 fun h => _\n  push_neg at h\n  aesop\n  <;> try tauto\n  <;> tauto\n  <;> tauto",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (n : \u2115) :  (\u2200 x < n, Nat.Coprime n x) \u2228 \u2203 x < n, \u00ac Nat.Coprime n x:= by\n  apply or_iff_not_imp_right.2\n  intro h\n  aesop"
  ]
 },
 {
  "old": "(a b : \u211d) : a^3 - b^3 = (a - b) * (a^2 + a * b + b^2) := by",
  "new": "(n : \u2115) : \u2200 a b : \u211d, (a + b) ^ n = \u2211 i in Finset.range (n+1), (Nat.choose n i : \u211d) * (a ^ i) * (b ^ (n - i)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem ring_exp_succ (n : \u2115) : \u2200 a b : \u211d, (a + b) ^ n = \u2211 i in Finset.range (n+1), \n    (Nat.choose n i : \u211d) * (a ^ i) * (b ^ (n - i)) := by\n  intro a b\n  simp only [add_pow]\n  apply Finset.sum_congr rfl\n  intro x hx\n  simp [mul_assoc, mul_comm, mul_left_comm]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem ring_exp_succ (n : \u2115) : \u2200 a b : \u211d, (a + b) ^ n = \u2211 i in Finset.range (n+1), \n    (Nat.choose n i : \u211d) * (a ^ i) * (b ^ (n - i)) := by\n  intro a b\n  have : (a + b) ^ n = \u2211 i in Finset.range (n+1), \n    (Nat.choose n i : \u211d) * (a ^ i) * (b ^ (n - i)) := by\n    rw [add_pow]\n    simp [mul_assoc, mul_comm, mul_left_comm]\n  exact this\n  <;> rfl\n  <;> simp [mul_assoc, mul_comm, mul_left_comm]\n  <;> rfl\n  <;> simp [mul_assoc, mul_comm, mul_left_comm]\n  <;> rfl\n  <;> simp [mul_assoc, mul_comm, mul_left_comm]\n  <;> rfl\n  <;> simp [mul_assoc, mul_comm, mul_left_comm]\n  <;> rfl\n  <;> simp [mul_assoc, mul_comm, mul_left_comm]\n  <;> rfl\n  <;> simp [mul_assoc, mul_comm, mul_left_comm]\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem ring_exp_succ (n : \u2115) : \u2200 a b : \u211d, (a + b) ^ n = \u2211 i in Finset.range (n+1), \n    (Nat.choose n i : \u211d) * (a ^ i) * (b ^ (n - i)) := by\n  intro a b\n  simp [add_comm, add_left_comm, add_assoc, mul_comm, mul_left_comm, mul_assoc,\n    add_right_comm]\n  rw [add_pow]\n  apply Finset.sum_congr rfl\n  intro x _\n  simp [mul_comm, mul_assoc, mul_left_comm]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (2 * (a + b) ^ 2 + (a + b + 2 * c) ^ 2 \u2265 72 * a * b * c / (a + b + c)) \u2227 (3 * (a + b) ^ 2 + (a + b + 8 * c) ^ 2 \u2265 (94 + 34 * Real.sqrt 17) * a * b * c / (a + b + c)) \u2227 (4 * (a + b) ^ 2 + (a + b + 24 * c) ^ 2 \u2265 676 * a * b * c / (a + b + c)) := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : 4 * (a + b) ^ 2 + (a + b + 24 * c) ^ 2 \u2265 676 * a * b * c / (a + b + c):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_a10 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n 4 * (a + b) ^ 2 + (a + b + 24 * c) ^ 2 \u2265 676 * a * b * c / (a + b + c):= by\n  have h\u2081 : 0 < a + b := by positivity\n  have h\u2082 : 0 < a + b + c := by positivity\n  have h\u2083 : 0 < a * b := by positivity\n  have h\u2084 : 0 < a * b * c := by positivity\n  field_simp [h\u2084]\n  rw [div_le_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a + b - 12 * c), sq_nonneg (a + b + 12 * c)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_a10 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n 4 * (a + b) ^ 2 + (a + b + 24 * c) ^ 2 \u2265 676 * a * b * c / (a + b + c):= by\n  have h\u2081 : 0 < a + b := add_pos ha hb\n  have h\u2082 : 0 < a + b + c := by linarith\n  have h\u2083 : 0 < a * b := mul_pos ha hb\n  have h\u2084 : 0 < a * b * c := by positivity\n  have h\u2085 : 0 < a + b + c := by linarith\n  have h\u2086 : 0 < a * b * (a + b) := by positivity\n  have h\u2087 : 0 < c * (a + b + c) := by positivity\n  have h\u2088 : 0 < a * b * c * (a + b + c) := by positivity\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087, h\u2088]\n  rw [div_le_iff]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a + b - 12 * c), sq_nonneg (a + b + 24 * c)]\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_a10 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n 4 * (a + b) ^ 2 + (a + b + 24 * c) ^ 2 \u2265 676 * a * b * c / (a + b + c):= by\n  have h\u2081 : 0 < a + b + c := by positivity\n  have h\u2082 : 0 < a + b + 24 * c := by positivity\n  have h\u2083 : 0 < a * b := by positivity\n  have h\u2084 : 0 < a * b * c := by positivity\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084]\n  rw [div_le_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a + b - 12 * c),\n    sq_nonneg (a + b + 12 * c)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = a * b * c) : 1 / (a + b) + 1 / (b + c) + 1 / (c + a) \u2264 Real.sqrt 3 / 2 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) : Real.sqrt (3 * (x ^ 2 + y ^ 2 + z ^ 2)) \u2265 2 * (x * y * z) ^ (1 / 3):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) :\n       Real.sqrt (3 * (x ^ 2 + y ^ 2 + z ^ 2)) \u2265 2 * (x * y * z) ^ (1 / 3):= by\n  apply Real.le_sqrt_of_sq_le\n  simp [pow_two, mul_assoc, mul_comm, mul_left_comm]\n  norm_num\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    sq_nonneg (x + y + z)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) :\n       Real.sqrt (3 * (x ^ 2 + y ^ 2 + z ^ 2)) \u2265 2 * (x * y * z) ^ (1 / 3):= by\n  apply le_sqrt_of_sq_le\n  ring_nf\n  norm_num\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z), mul_pos hx hy, mul_pos hx hz,\n    mul_pos hy hz]\n  <;> simp [h]\n  <;> linarith\n  <;> simp [h]\n  <;> linarith\n  <;> simp [h]\n  <;> linarith\n  <;> simp [h]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) :\n       Real.sqrt (3 * (x ^ 2 + y ^ 2 + z ^ 2)) \u2265 2 * (x * y * z) ^ (1 / 3):= by\n  rw [mul_comm] at h\n  norm_num at h\n  apply Real.le_sqrt_of_sq_le\n  ring_nf\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_self_nonneg (x + y + z)]\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) :\n       Real.sqrt (3 * (x ^ 2 + y ^ 2 + z ^ 2)) \u2265 2 * (x * y * z) ^ (1 / 3):= by\n  apply Real.le_sqrt_of_sq_le\n  simp [h, mul_comm, mul_left_comm, mul_assoc]\n  ring_nf\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z), mul_pos hx hy, mul_pos hx hz, mul_pos hy hz]\n  <;> norm_num"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : 4 * (x * y / z + y * z / x + z * x / y) + 5 * (x + y + z) \u2264 (x + y + z) ^ 2 * (1 / x + 1 / y + 1 / z) := by",
  "new": ": \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192 4 * (x * y / z + y * z / x + z * x / y) + 5 * (x + y + z) \u2264 (x + y + z) ^ 2 * (1 / x + 1 / y + 1 / z) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192\n   4 * (x * y / z + y * z / x + z * x / y) + 5 * (x + y + z) \u2264 (x + y + z) ^ 2 * (1 / x + 1 / y + 1 / z) := by\n  rintro x y z \u27e8hx, hy, hz\u27e9\n  have h\u2080 : 0 < x * y := by positivity\n  have h\u2081 : 0 < y * z := by positivity\n  have h\u2082 : 0 < z * x := by positivity\n  have h\u2083 : 0 < x * y * z := by positivity\n  have h\u2084 : 0 < x * y * z ^ 2 := by positivity\n  have h\u2085 : 0 < x * y * z * (x + y + z) := by positivity\n  have h\u2086 : 0 < x * y * z * (x + y + z) * (x * y + y * z + z * x) := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y),\n    sq_nonneg (x * y * z), sq_nonneg (x * y * z * (x - y)), sq_nonneg (x * y * z * (y - z)),\n    sq_nonneg (x * y * z * (z - x))]"
  ]
 },
 {
  "old": "(a b : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hab : a^2 + (2 * (Real.sqrt 2 + 1)) * b^2 = 1) : a^3 + b^3 \u2265 a - b := by",
  "new": "(a b : \u2115) (hab : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (hab : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  have : a \u2260 0 := by\n    intro h\n    rw [h] at hab\n    simp at hab\n  have : b \u2260 0 := by\n    intro h\n    rw [h] at hab\n    simp at hab\n  cases' Nat.eq_zero_or_pos a with ha ha <;> cases' Nat.eq_zero_or_pos b with hb hb <;>\n    simp_all [Nat.coprime_iff_gcd_eq_one, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  all_goals omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (hab : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  simp [Nat.eq_one_of_mul_eq_one_left, Nat.eq_one_of_mul_eq_one_right] at hab \u22a2\n  aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (hab : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  cases' a with a <;> cases' b with b\n  all_goals simp_all [Nat.mul_eq_zero]\n  all_goals omega\n  all_goals aesop"
  ]
 },
 {
  "old": "(a b c : \u211d) : (4 / 3) * (a / (b + c) + b / (c + a) + c / (a + b)) + (abc / (a + b) / (b + c) / (c + a))^(1 / 3) \u2265 5 / 2 := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^2 / b + b^2 / c + c^2 / a) \u2265 2 * (a * b / (a + b) + b * c / (b + c) + c * a / (c + a)):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^2 / b + b^2 / c + c^2 / a) \u2265 2 * (a * b / (a + b) + b * c / (b + c) + c * a / (c + a)):= by\n  have : 0 < b * c := by positivity\n  have : 0 < c * a := by positivity\n  have : 0 < a * b := by positivity\n  have h\u2080 : a ^ 2 / b + b ^ 2 / c + c ^ 2 / a \u2265 2 * (a * b / (a + b) + b * c / (b + c) + c * a / (c + a)) := by\n    have h\u2081 : a ^ 2 / b + b ^ 2 / c + c ^ 2 / a \u2265 a + b + c := by\n      field_simp\n      rw [le_div_iff (by positivity), mul_comm]\n      nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a)]\n    have h\u2082 : 2 * (a * b / (a + b) + b * c / (b + c) + c * a / (c + a)) \u2264 a + b + c := by\n      have h\u2083 : a * b / (a + b) \u2264 (a + b) / 4 := by\n        rw [div_le_div_iff (by positivity) (by positivity)]\n        nlinarith [sq_nonneg (a - b)]\n      have h\u2084 : b * c / (b + c) \u2264 (b + c) / 4 := by\n        rw [div_le_div_iff (by positivity) (by positivity)]\n        nlinarith [sq_nonneg (b - c)]\n      have h\u2085 : c * a / (c + a) \u2264 (c + a) / 4 := by\n        rw [div_le_div_iff (by positivity) (by positivity)]\n        nlinarith [sq_nonneg (c - a)]\n      nlinarith\n    linarith\n  linarith\n  <;> try norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^2 / b + b^2 / c + c^2 / a) \u2265 2 * (a * b / (a + b) + b * c / (b + c) + c * a / (c + a)):= by\n  have h1 : 0 < a * b := mul_pos ha hb\n  have h2 : 0 < b * c := mul_pos hb hc\n  have h3 : 0 < c * a := mul_pos hc ha\n  have h4 : 0 < a * b * c := by positivity\n  have h5 : 0 < a * b * c * (a + b) := by positivity\n  have h6 : 0 < a * b * c * (b + c) := by positivity\n  have h7 : 0 < a * b * c * (c + a) := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a^2 * c - b^2 * a), sq_nonneg (b^2 * a - c^2 * b), sq_nonneg (c^2 * b - a^2 * c),\n    sq_nonneg (a * b * c), sq_nonneg (a * b * c * (a - b)), sq_nonneg (a * b * c * (b - c)),\n    sq_nonneg (a * b * c * (c - a))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^2 / b + b^2 / c + c^2 / a) \u2265 2 * (a * b / (a + b) + b * c / (b + c) + c * a / (c + a)):= by\n  have hab : 0 < a * b := by positivity\n  have hbc : 0 < b * c := by positivity\n  have hac : 0 < c * a := by positivity\n  have h\u2080 : a * b / (a + b) \u2264 (a + b) / 4 := by\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a + b)]\n  have h\u2081 : b * c / (b + c) \u2264 (b + c) / 4 := by\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (b - c), sq_nonneg (b + c)]\n  have h\u2082 : c * a / (c + a) \u2264 (c + a) / 4 := by\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (c - a), sq_nonneg (c + a)]\n  have h\u2083 : a ^ 2 / b + b ^ 2 / c + c ^ 2 / a \u2265 2 * (a * b / (a + b) + b * c / (b + c) + c * a / (c + a)) := by\n    have : 0 < a * b + b * c + c * a := by positivity\n    have h\u2084 : a ^ 2 / b + b ^ 2 / c + c ^ 2 / a \u2265 2 * (a * b / (a + b) + b * c / (b + c) + c * a / (c + a)) := by\n      have : 0 < a * b + b * c + c * a := by positivity\n      have h\u2085 : a ^ 2 / b + b ^ 2 / c + c ^ 2 / a \u2265 a + b + c := by\n        have : 0 < b * c + c * a + a * b := by positivity\n        field_simp\n        rw [le_div_iff, \u2190 sub_nonneg]\n        nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n        positivity\n      nlinarith\n    linarith\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^2 / b + b^2 / c + c^2 / a) \u2265 2 * (a * b / (a + b) + b * c / (b + c) + c * a / (c + a)):= by\n  have hab : 0 < a * b := mul_pos ha hb\n  have hbc : 0 < b * c := mul_pos hb hc\n  have hac : 0 < c * a := mul_pos hc ha\n  have h\u2081 : a^2 / b + b^2 / c + c^2 / a \u2265 2 * (a * b / (a + b) + b * c / (b + c) + c * a / (c + a)) := by\n    have h\u2081 : a^2 / b + b^2 / c + c^2 / a \u2265 a + b + c := by\n      field_simp [ha.ne', hb.ne', hc.ne']\n      rw [le_div_iff (by positivity), \u2190 mul_comm]\n      nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n    have h\u2082 : a * b / (a + b) + b * c / (b + c) + c * a / (c + a) \u2264 (a + b + c) / 2 := by\n      have : a * b / (a + b) \u2264 (a + b) / 4 := by\n        rw [div_le_div_iff (by positivity) (by positivity)]\n        nlinarith [sq_nonneg (a - b)]\n      have : b * c / (b + c) \u2264 (b + c) / 4 := by\n        rw [div_le_div_iff (by positivity) (by positivity)]\n        nlinarith [sq_nonneg (b - c)]\n      have : c * a / (c + a) \u2264 (c + a) / 4 := by\n        rw [div_le_div_iff (by positivity) (by positivity)]\n        nlinarith [sq_nonneg (c - a)]\n      linarith\n    linarith\n  exact h\u2081"
  ]
 },
 {
  "old": "(x : \u211d) (hx : -2 \u2264 2 * Real.cos (Real.pi * x)) (hx' : 2 * Real.cos (Real.pi * x) \u2264 2) : -1/6 \u2264 x \u2227 x \u2264 1/2 := by",
  "new": "(x : \u211d) (hx : 0 < x) (h'x : x \u2264 1) : 1 - (1 / 2) * cos (2 * x * Real.pi) + (1 / 4) * cos (4 * x * Real.pi) \u2265 1 - 1 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210 (x : \u211d) (hx : 0 < x) (h'x : x \u2264 1) : \n    1 - (1 / 2) * cos (2 * x * Real.pi) + (1 / 4) * cos (4 * x * Real.pi) \u2265 1 - 1 := by\n  nlinarith [cos_sq_le_one (2 * x * Real.pi), cos_sq_le_one (4 * x * Real.pi),\n    mul_self_nonneg (cos (2 * x * Real.pi) - 1 / 2)]\n  <;> linarith [cos_le_one (2 * x * Real.pi), cos_le_one (4 * x * Real.pi)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (hab : a * b = 1 / c) (hac : a * c = 1 / b) : b / c + c / b >= 1 := by",
  "new": "(x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x * y = 1) : Real.sqrt (x^2 + 1) * Real.sqrt (y^2 + 1) \u2265 2 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x * y = 1) :\n     Real.sqrt (x^2 + 1) * Real.sqrt (y^2 + 1) \u2265 2 := by\n  have h\u2080 : 0 < Real.sqrt (x^2 + 1) := Real.sqrt_pos.mpr (by positivity)\n  have h\u2081 : 0 < Real.sqrt (y^2 + 1) := Real.sqrt_pos.mpr (by positivity)\n  have h\u2082 : 0 < Real.sqrt (x^2 + 1) * Real.sqrt (y^2 + 1) := mul_pos h\u2080 h\u2081\n  nlinarith [sq_sqrt (by positivity : (0 : \u211d) \u2264 x^2 + 1),\n    sq_sqrt (by positivity : (0 : \u211d) \u2264 y^2 + 1),\n    sq_sqrt (by positivity : (0 : \u211d) \u2264 x^2 + y^2 + 1 + 1),\n    sq_nonneg (x - y),\n    sq_nonneg (Real.sqrt (x^2 + 1) - Real.sqrt (y^2 + 1))]\n  <;> simp [hxy]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x * y = 1) :\n     Real.sqrt (x^2 + 1) * Real.sqrt (y^2 + 1) \u2265 2 := by\n  have h2 : 0 < x * y := by nlinarith\n  have h1 : Real.sqrt (x^2 + 1) * Real.sqrt (y^2 + 1) \u2265 2 := by\n    have h3 : Real.sqrt (x^2 + 1) * Real.sqrt (y^2 + 1) = Real.sqrt ((x^2 + 1) * (y^2 + 1)) := by\n      rw [Real.sqrt_mul (add_nonneg (sq_nonneg x) zero_le_one)]\n    rw [h3]\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x + y)]\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x * y = 1) :\n     Real.sqrt (x^2 + 1) * Real.sqrt (y^2 + 1) \u2265 2 := by\n  have H\u2080 : 0 < x * y := by positivity\n  have H\u2081 : 0 < x^2 + 1 := by positivity\n  have H\u2082 : 0 < y^2 + 1 := by positivity\n  have H\u2083 : 0 < Real.sqrt (x^2 + 1) := Real.sqrt_pos.mpr H\u2081\n  have H\u2084 : 0 < Real.sqrt (y^2 + 1) := Real.sqrt_pos.mpr H\u2082\n  have H\u2085 : 0 < Real.sqrt (x^2 + 1) * Real.sqrt (y^2 + 1) := by positivity\n  have H\u2086 : 0 < Real.sqrt (x^2 + 1) * Real.sqrt (y^2 + 1) * (Real.sqrt (x^2 + 1) * Real.sqrt (y^2 + 1)) := by positivity\n  have H\u2087 : 0 < x^2 + 1 := by positivity\n  have H\u2088 : 0 < y^2 + 1 := by positivity\n  have H\u2089 : 0 < Real.sqrt (x^2 + 1) := Real.sqrt_pos.mpr H\u2087\n  have H\u2081\u2080 : 0 < Real.sqrt (y^2 + 1) := Real.sqrt_pos.mpr H\u2088\n  have H\u2081\u2081 : 0 < Real.sqrt (x^2 + 1) * Real.sqrt (y^2 + 1) := by positivity\n  nlinarith [sq_sqrt (show 0 \u2264 x^2 + 1 by positivity),\n    sq_sqrt (show 0 \u2264 y^2 + 1 by positivity),\n    sq_sqrt (show 0 \u2264 x^2 + 1 by positivity),\n    sq_sqrt (show 0 \u2264 y^2 + 1 by positivity),\n    sq_nonneg (Real.sqrt (x^2 + 1) - Real.sqrt (y^2 + 1))]\n  <;> linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : (Real.cos (a / 2))^4 + (Real.cos (b / 2))^4 + (Real.cos (c / 2))^4 \u2264 (a + b + c)^3 / (16 * a * b * c) := by",
  "new": ": Real.sqrt (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) \u2264 1 + (a ^ 2 + b ^ 2) / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) \u2264 1 + (a ^ 2 + b ^ 2) / 2:= by\n  have h\u2080 : 0 \u2264 a ^ 2 + b ^ 2 := by positivity\n  have h\u2081 : Real.sqrt (1 + a ^ 2) \u2265 0 := by positivity\n  have h\u2082 : Real.sqrt (1 + b ^ 2) \u2265 0 := by positivity\n  have h\u2083 : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) \u2264 (1 + a ^ 2 + 1 + b ^ 2) / 2 := by\n    nlinarith [sq_sqrt (show 0 \u2264 1 + a ^ 2 by positivity),\n      sq_sqrt (show 0 \u2264 1 + b ^ 2 by positivity),\n      mul_self_nonneg (a ^ 2 - b ^ 2),\n      sq_nonneg (Real.sqrt (1 + a ^ 2) - Real.sqrt (1 + b ^ 2))]\n  have h\u2084 : Real.sqrt (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) \u2264 1 + (a ^ 2 + b ^ 2) / 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith\n  exact h\u2084",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) \u2264 1 + (a ^ 2 + b ^ 2) / 2:= by\n  have h : 0 \u2264 (a ^ 2 + b ^ 2) / 2 := by positivity\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  \u00b7 positivity\n  \u00b7 nlinarith [sq_sqrt (by positivity : 0 \u2264 1 + a ^ 2), sq_sqrt (by positivity : 0 \u2264 1 + b ^ 2),\n      sq_nonneg (a ^ 2 + b ^ 2), sq_nonneg (a ^ 2 - b ^ 2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) \u2264 1 + (a ^ 2 + b ^ 2) / 2:= by\n  have h\u2080 : 0 \u2264 (a ^ 2 + b ^ 2) / 2 := by positivity\n  have h\u2081 : Real.sqrt (1 + a ^ 2) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2082 : Real.sqrt (1 + b ^ 2) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2083 : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) \u2264 (1 + a ^ 2 + 1 + b ^ 2) / 2 := by\n    nlinarith [sq_sqrt (show 0 \u2264 1 + a ^ 2 from by positivity),\n      sq_sqrt (show 0 \u2264 1 + b ^ 2 from by positivity),\n      sq_nonneg (a ^ 2 + b ^ 2 - 1),\n      sq_nonneg (Real.sqrt (1 + a ^ 2) - Real.sqrt (1 + b ^ 2))]\n  have h\u2084 : Real.sqrt (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) \u2264 (1 + a ^ 2 + 1 + b ^ 2) / 2:= by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) \u2264 1 + (a ^ 2 + b ^ 2) / 2:= by\n  have h\u2080 : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) \u2264 (1 + (a ^ 2 + b ^ 2) / 2) ^ 2 := by\n    rw [mul_comm]\n    nlinarith [sq_sqrt (show 0 \u2264 1 + a ^ 2 from by positivity),\n      sq_sqrt (show 0 \u2264 1 + b ^ 2 from by positivity),\n      sq_nonneg (a ^ 2 - b ^ 2),\n      sq_nonneg (2 * a * b)]\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  \u00b7 positivity\n  \u00b7 nlinarith [h\u2080]"
  ]
 },
 {
  "old": ": \u2200 a b c : \u211d, a^2 * b^4 + b^2 * c^4 + c^2 * a^4 \u2265 a * b * c * (a^2 * b + b^2 * c + c^2 * a) := by",
  "new": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : a * b * c * (a^2 * b + b^2 * c + c^2 * a) \u2264 a^2 * b^4 + b^2 * c^4 + c^2 * a^4 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) :\n     a * b * c * (a^2 * b + b^2 * c + c^2 * a) \u2264 a^2 * b^4 + b^2 * c^4 + c^2 * a^4 := by\n  have h\u2081 : 0 \u2264 a * b := mul_nonneg ha hb\n  have h\u2082 : 0 \u2264 b * c := mul_nonneg hb hc\n  have h\u2083 : 0 \u2264 c * a := mul_nonneg hc ha\n  have h\u2084 : 0 \u2264 a * b * c := mul_nonneg h\u2081 hc\n  nlinarith [sq_nonneg (a * b ^ 2 - b * c ^ 2), sq_nonneg (b * c ^ 2 - c * a ^ 2),\n    sq_nonneg (c * a ^ 2 - a * b ^ 2)]\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) :\n     a * b * c * (a^2 * b + b^2 * c + c^2 * a) \u2264 a^2 * b^4 + b^2 * c^4 + c^2 * a^4 := by\n  have habs : 0 \u2264 a * b := mul_nonneg ha hb\n  have hbcs : 0 \u2264 b * c := mul_nonneg hb hc\n  have hacs : 0 \u2264 a * c := mul_nonneg ha hc\n  nlinarith [sq_nonneg (a * b ^ 2 - b * c ^ 2), sq_nonneg (b * c ^ 2 - c * a ^ 2),\n    sq_nonneg (c * a ^ 2 - a * b ^ 2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) :\n     a * b * c * (a^2 * b + b^2 * c + c^2 * a) \u2264 a^2 * b^4 + b^2 * c^4 + c^2 * a^4 := by\n  have : 0 \u2264 a * b ^ 2 := by positivity\n  have : 0 \u2264 b * c ^ 2 := by positivity\n  have : 0 \u2264 c * a ^ 2 := by positivity\n  nlinarith [sq_nonneg (a * b ^ 2 - b * c ^ 2), sq_nonneg (b * c ^ 2 - c * a ^ 2), sq_nonneg (c * a ^ 2 - a * b ^ 2)]\n  <;> simp [mul_add, add_mul, mul_comm, mul_left_comm, mul_assoc]"
  ]
 },
 {
  "old": "(x : \u211d) : Real.cos x ^ 7 + Real.cos (x + 2 * Real.pi / 3) ^ 7 + Real.cos (x + 4 * Real.pi / 3) ^ 7 = 63 / 64 * Real.cos (3 * x) := by",
  "new": "{n : \u2124} : Real.cos (3 * (n * (2 * Real.pi) + Real.pi)) = -1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem cos_three_mul_int_mul_two_pi_add_pi {n : \u2124} :\n    Real.cos (3 * (n * (2 * Real.pi) + Real.pi)) = -1:= by\n  simp only [mul_assoc, \u2190 mul_add, Real.cos_int_mul_two_pi_add_pi,\n    Real.cos_three_mul]\n  <;> ring\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem cos_three_mul_int_mul_two_pi_add_pi {n : \u2124} :\n    Real.cos (3 * (n * (2 * Real.pi) + Real.pi)) = -1:= by\n  rw [show 3 * (n * (2 * Real.pi) + Real.pi) = 3 * (n * (2 * Real.pi)) + 3 * Real.pi by ring]\n  rw [cos_add]\n  simp [cos_three_mul, sin_three_mul, mul_add, mul_sub]\n  <;> ring_nf <;> norm_num\n  <;> rw [cos_pi_div_three]\n  <;> ring_nf\n  <;> norm_num\n  <;> rw [cos_pi_div_three]\n  <;> norm_num\n  <;> ring_nf\n  <;> norm_num\n  <;> rw [cos_pi_div_three]\n  <;> norm_num\n  <;> ring_nf\n  <;> norm_num\n  <;> rw [cos_pi_div_three]\n  <;> norm_num\n  <;> ring_nf\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem cos_three_mul_int_mul_two_pi_add_pi {n : \u2124} :\n    Real.cos (3 * (n * (2 * Real.pi) + Real.pi)) = -1:= by\n  rw [mul_add]\n  simp [cos_add, cos_three_mul, sin_three_mul, mul_add]\n  <;> ring_nf <;> simp [cos_sq, sin_sq, mul_add, mul_sub]\n  <;> ring_nf\n  <;> simp [cos_sq, sin_sq, mul_add, mul_sub]\n  <;> ring_nf\n  <;> simp [cos_sq, sin_sq, mul_add, mul_sub]\n  <;> ring_nf\n  <;> simp [cos_sq, sin_sq, mul_add, mul_sub]\n  <;> ring_nf",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem cos_three_mul_int_mul_two_pi_add_pi {n : \u2124} :\n    Real.cos (3 * (n * (2 * Real.pi) + Real.pi)) = -1:= by\n  rw [mul_add]\n  simp [cos_add, cos_three_mul, sin_three_mul, mul_add]\n  ring\n  <;> simp [cos_pi]\n  <;> ring\n  <;> simp [cos_pi]\n  <;> ring\n  <;> simp [cos_pi]\n  <;> ring\n  <;> simp [cos_pi]\n  <;> ring\n  <;> simp [cos_pi]\n  <;> norm_num\n  <;> simp [cos_pi]\n  <;> norm_num\n  <;> simp [cos_pi]\n  <;> norm_num\n  <;> simp [cos_pi]\n  <;> norm_num\n  <;> simp [cos_pi]\n  <;> norm_num"
  ]
 },
 {
  "old": "{a b c : \u211d} (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : (a + b + c) * (a + b - c) * (a + c - b) * (b + c - a) * (1 / a + 1 / b + 1 / c - 5 / (a + b + c)) \u2264 4 * a * b * c := by",
  "new": "{a b c : \u211d} (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : a * b * c * (a + b + c) \u2265 0 \u2227 (a + b + c) * (a + b - c) * (a + c - b) * (b + c - a) \u2265 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq {a b c : \u211d} (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) :\n     a * b * c * (a + b + c) \u2265 0 \u2227\n     (a + b + c) * (a + b - c) * (a + c - b) * (b + c - a) \u2265 0:= by\n  refine'\n    \u27e8by\n      refine' mul_nonneg (mul_nonneg (mul_nonneg (by nlinarith) (by nlinarith)) (by nlinarith)) (by nlinarith)\n      , by\n      refine'\n        mul_nonneg\n          (mul_nonneg\n            (mul_nonneg (by nlinarith) (by nlinarith)) (by nlinarith)) (by nlinarith)\n      \u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq {a b c : \u211d} (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) :\n     a * b * c * (a + b + c) \u2265 0 \u2227\n     (a + b + c) * (a + b - c) * (a + c - b) * (b + c - a) \u2265 0:= by\n  constructor\n  \u00b7 refine' mul_nonneg (mul_nonneg (mul_nonneg _ _) _) _ <;> linarith\n  \u00b7 refine' mul_nonneg (mul_nonneg (mul_nonneg _ _) _) _ <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq {a b c : \u211d} (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) :\n     a * b * c * (a + b + c) \u2265 0 \u2227\n     (a + b + c) * (a + b - c) * (a + c - b) * (b + c - a) \u2265 0:= by\n  refine \u27e8?_,?_\u27e9\n  refine' mul_nonneg (mul_nonneg (mul_nonneg _ _) _) _ <;> nlinarith\n  refine' mul_nonneg (mul_nonneg (mul_nonneg _ _) _) _ <;> nlinarith"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x \u2227 0 < y \u2227 0 < z) (h : x + y + z = 1) (hx1 : x <= 4/3) (hy1 : y <= 4/3) (hz1 : z <= 4/3) : 7 * (x ^ 2 + y ^ 2 + z ^ 2) + 17 * (x ^ 2 * y ^ 2 + x ^ 2 * z ^ 2 + y ^ 2 * z ^ 2) + 27 * x ^ 2 * y ^ 2 * z ^ 2 \u2265 3 * (x + y + z) ^ 6 := by",
  "new": "(x y z : \u211d) (hx : 0 < x \u2227 0 < y \u2227 0 < z) (h : x + y + z = 1) : 3 * (x ^ 2 + y ^ 2 + z ^ 2) \u2264 3 + 4 * (x * y + x * z + y * z) * (x + y + z) \u2227 4 * (x ^ 2 * y ^ 2 + x ^ 2 * z ^ 2 + y ^ 2 * z ^ 2) \u2264 4 * (x ^ 2 + y ^ 2 + z ^ 2) ^ 2 \u2227 7 * (x ^ 2 * y ^ 2 * z ^ 2) \u2264 7 * (x ^ 2 + y ^ 2 + z ^ 2) ^ 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (x y z : \u211d) (hx : 0 < x \u2227 0 < y \u2227 0 < z) (h : x + y + z = 1) :\n      3 * (x ^ 2 + y ^ 2 + z ^ 2) \u2264 3 + 4 * (x * y + x * z + y * z) * (x + y + z) \u2227\n      4 * (x ^ 2 * y ^ 2 + x ^ 2 * z ^ 2 + y ^ 2 * z ^ 2) \u2264 4 * (x ^ 2 + y ^ 2 + z ^ 2) ^ 2 \u2227\n      7 * (x ^ 2 * y ^ 2 * z ^ 2) \u2264 7 * (x ^ 2 + y ^ 2 + z ^ 2) ^ 2:= by\n  have hx1 : (x + y + z) ^ 2 = 1 := by rw [h]; ring\n  have hxy : 0 < x * y + x * z + y * z := by\n    nlinarith\n  have hxz : 0 < x * z + y * z := by\n    nlinarith\n  have hyz : 0 < x * y + x * z + y * z := by\n    nlinarith\n  exact \u27e8by nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)], by\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)], by\n    nlinarith [sq_nonneg (x * y + x * z + y * z), sq_nonneg (x * y - x * z),\n      sq_nonneg (x * y - y * z), sq_nonneg (x * z - y * z)]\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (x y z : \u211d) (hx : 0 < x \u2227 0 < y \u2227 0 < z) (h : x + y + z = 1) :\n      3 * (x ^ 2 + y ^ 2 + z ^ 2) \u2264 3 + 4 * (x * y + x * z + y * z) * (x + y + z) \u2227\n      4 * (x ^ 2 * y ^ 2 + x ^ 2 * z ^ 2 + y ^ 2 * z ^ 2) \u2264 4 * (x ^ 2 + y ^ 2 + z ^ 2) ^ 2 \u2227\n      7 * (x ^ 2 * y ^ 2 * z ^ 2) \u2264 7 * (x ^ 2 + y ^ 2 + z ^ 2) ^ 2:= by\n  rcases hx with \u27e8hx : 0 < x, hy : 0 < y, hz : 0 < z\u27e9\n  have h\u2081 : (x + y + z) ^ 2 = 1 := by simp [h]\n  have h\u2082 : 0 < x * y := by positivity\n  have h\u2083 : 0 < x * z := by positivity\n  have h\u2084 : 0 < y * z := by positivity\n  have h\u2085 : 0 < x * y * z := by positivity\n  refine \u27e8by nlinarith, by nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)],\n    by nlinarith [sq_nonneg (x * y), sq_nonneg (x * z), sq_nonneg (y * z)]\u27e9"
  ]
 },
 {
  "old": "(a b c : \u211d) (habc : a * b * c = 1) (ha : a > 0 \u2227 b > 0 \u2227 c > 0) : 1 / (b * (a + b)) + 1 / (c * (b + c)) + 1 / (a * (c + a)) \u2265 3 / 2 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) : x^2 / (x + y)^2 + y^2 / (y + z)^2 + z^2 / (z + x)^2 \u2265 2 / 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h : x * y * z = 1) :\n    x^2 / (x + y)^2 + y^2 / (y + z)^2 + z^2 / (z + x)^2 \u2265 2 / 3:= by\n  have h\u2081 : 0 < x * y := mul_pos hx hy\n  have h\u2082 : 0 < y * z := mul_pos hy hz\n  have h\u2083 : 0 < z * x := mul_pos hz hx\n  field_simp [h]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x * y + y * z + z * x), mul_self_nonneg (x * y - y * z),\n    mul_self_nonneg (y * z - z * x), mul_self_nonneg (z * x - x * y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h : x * y * z = 1) :\n    x^2 / (x + y)^2 + y^2 / (y + z)^2 + z^2 / (z + x)^2 \u2265 2 / 3:= by\n  have h\u2081 : 0 < x * y := by positivity\n  have h\u2082 : 0 < y * z := by positivity\n  have h\u2083 : 0 < z * x := by positivity\n  field_simp [h\u2081, h\u2082, h\u2083]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x * y + y * z + z * x),\n    mul_self_nonneg (x * y - y * z),\n    mul_self_nonneg (y * z - z * x),\n    mul_self_nonneg (z * x - x * y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h : x * y * z = 1) :\n    x^2 / (x + y)^2 + y^2 / (y + z)^2 + z^2 / (z + x)^2 \u2265 2 / 3:= by\n  have h\u2081 : 0 < x * y := mul_pos hx hy\n  have h\u2082 : 0 < y * z := mul_pos hy hz\n  have h\u2083 : 0 < z * x := mul_pos hz hx\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_self_nonneg (x * y + y * z + z * x), mul_self_nonneg (x * y - y * z),\n    mul_self_nonneg (y * z - z * x), mul_self_nonneg (z * x - x * y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h : x * y * z = 1) :\n    x^2 / (x + y)^2 + y^2 / (y + z)^2 + z^2 / (z + x)^2 \u2265 2 / 3:= by\n  have : 0 < x * y := by positivity\n  have : 0 < y * z := by positivity\n  have : 0 < x * z := by positivity\n  field_simp [h]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x * y + y * z + z * x),\n    mul_self_nonneg (x * y - y * z),\n    mul_self_nonneg (y * z - z * x),\n    mul_self_nonneg (z * x - x * y)]"
  ]
 },
 {
  "old": "(n : \u2115) (hn : 2 < n) : n! < ((n + 2) / Real.sqrt 6)^n := by",
  "new": "(n : \u2115) (hn : 2 < n) : \u2203 k, (k : \u2115) \u2265 1 \u2227 k \u2264 n \u2227 (1 / (n.choose k) : \u211a) \u2265 1/ n := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_part_ge_quarter (n : \u2115) (hn : 2 < n) :  \u2203 k,  (k  : \u2115) \u2265 1 \u2227  k \u2264 n \u2227  (1 / (n.choose k) : \u211a) \u2265 1/ n := by\n  refine' \u27e81, by linarith, by linarith, _\u27e9\n  cases n with\n  | zero => simp_all\n  | succ n =>\n    simp_all [Nat.choose, Nat.factorial, Nat.div_eq_of_lt, Nat.div_eq_of_lt]\n    <;> norm_num\n    <;> field_simp\n    <;> ring_nf\n    <;> norm_num\n    <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_part_ge_quarter (n : \u2115) (hn : 2 < n) :  \u2203 k,  (k  : \u2115) \u2265 1 \u2227  k \u2264 n \u2227  (1 / (n.choose k) : \u211a) \u2265 1/ n := by\n  refine' \u27e81, by linarith, by linarith, _\u27e9\n  cases n with\n  | zero => linarith\n  | succ n =>\n    cases n with\n    | zero => linarith\n    | succ n =>\n      simp [Nat.choose_one_right, Nat.choose_succ_succ]\n      norm_num\n      apply le_of_sub_nonneg\n      field_simp\n      ring_nf\n      positivity"
  ]
 },
 {
  "old": "(x1 x2 x3 x4 : \u211d) : (\u2211 i in Finset.range 4, x1 ^ 4) - (5 / 12) * (\u2211 i in Finset.range 4, x1 ^ 3) * (\u2211 i in Finset.range 4, x1) - (1 / 72) * (\u2211 i in Finset.range 4, x1 ^ 2) ^ 2 + (1 / 72) * (\u2211 i in Finset.range 4, x1 ^ 4) ^ 2 \u2265 0 := by",
  "new": "(x1 x2 x3 x4 x5 : \u211d) : (x1 + x2 + x3 + x4 + x5) ^ 2 \u2265 5 * (x1 * x2 + x1 * x3 + x1 * x4 + x1 * x5 + x2 * x3 + x2 * x4 + x2 * x5 + x3 * x4 + x3 * x5 + x4 * x5) / 5:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (x1 x2 x3 x4 x5 : \u211d) : (x1 + x2 + x3 + x4 + x5) ^ 2 \u2265 5 * (x1 * x2 + x1 * x3 + x1 * x4 + x1 * x5 + x2 * x3 + x2 * x4 + x2 * x5 + x3 * x4 + x3 * x5 + x4 * x5) / 5:= by\n  ring_nf\n  nlinarith [sq_nonneg (x1 + x2 + x3 + x4 + x5), sq_nonneg (x1 - x2), sq_nonneg (x1 - x3), sq_nonneg (x1 - x4), sq_nonneg (x1 - x5), sq_nonneg (x2 - x3), sq_nonneg (x2 - x4), sq_nonneg (x2 - x5), sq_nonneg (x3 - x4), sq_nonneg (x3 - x5), sq_nonneg (x4 - x5)]\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (x1 x2 x3 x4 x5 : \u211d) : (x1 + x2 + x3 + x4 + x5) ^ 2 \u2265 5 * (x1 * x2 + x1 * x3 + x1 * x4 + x1 * x5 + x2 * x3 + x2 * x4 + x2 * x5 + x3 * x4 + x3 * x5 + x4 * x5) / 5:= by\n  ring_nf\n  nlinarith [sq_nonneg (x1 + x2 + x3 + x4 + x5), sq_nonneg (x1 - x2 + x3 - x4 + x5), sq_nonneg (x1 - x2 - x3 + x4 + x5), sq_nonneg (x1 - x2 + x3 + x4 - x5), sq_nonneg (x1 + x2 - x3 - x4 + x5), sq_nonneg (x1 + x2 - x3 + x4 - x5), sq_nonneg (x1 + x2 + x3 - x4 - x5), sq_nonneg (x1 + x2 + x3 - x4 + x5)]\n  <;> try norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (x1 x2 x3 x4 x5 : \u211d) : (x1 + x2 + x3 + x4 + x5) ^ 2 \u2265 5 * (x1 * x2 + x1 * x3 + x1 * x4 + x1 * x5 + x2 * x3 + x2 * x4 + x2 * x5 + x3 * x4 + x3 * x5 + x4 * x5) / 5:= by\n  nlinarith [sq_nonneg (x1 - x2), sq_nonneg (x1 - x3), sq_nonneg (x1 - x4), sq_nonneg (x1 - x5), sq_nonneg (x2 - x3), sq_nonneg (x2 - x4), sq_nonneg (x2 - x5), sq_nonneg (x3 - x4), sq_nonneg (x3 - x5), sq_nonneg (x4 - x5)]\n  <;> simp [sq, mul_assoc]\n  <;> ring_nf\n  <;> norm_num"
  ]
 },
 {
  "old": "(n : \u2115) : n \u2223 36 \u2194 2^2*3^2 \u2223 n := by",
  "new": "(p : \u2115) (hp : p.Prime) (n : \u2115) : Nat.Coprime p n \u2228 p \u2223 n := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (hp : p.Prime) (n : \u2115) : Nat.Coprime p n \u2228 p \u2223 n := by\n  apply or_iff_not_imp_left.mpr\n  intro h\n  have h1 : p \u2223 n := by\n    simpa [Nat.Prime.coprime_iff_not_dvd hp] using h\n  exact h1",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (hp : p.Prime) (n : \u2115) : Nat.Coprime p n \u2228 p \u2223 n := by\n  by_cases h : n = 0\n  \u00b7 right\n    simp [h]\n  \u00b7 apply or_iff_not_imp_right.mpr\n    intro hn\n    simp only [Nat.Prime.coprime_iff_not_dvd hp, h, not_false_eq_true] at *\n    exact hn"
  ]
 },
 {
  "old": "(p : \u2115) (hp : p.Prime) : \u2203 n, p \u2223 fib n := by",
  "new": "{n : \u2115} (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two {n : \u2115} (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by\n  induction' hn with n hn IH\n  norm_num\n  rw [fib_add_two, Nat.coprime_iff_gcd_eq_one]\n  rw [Nat.gcd_comm]\n  simpa [Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm] using IH",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two {n : \u2115} (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by\n  induction' hn with n hn IH\n  all_goals simp_all [fib_add_two, Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm]\n  all_goals norm_num\n  all_goals apply Eq.refl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two {n : \u2115} (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by\n  induction' hn with n hn IH\n  norm_num\n  rw [fib_add_two, Nat.coprime_iff_gcd_eq_one]\n  rw [Nat.gcd_comm]\n  simpa [fib_add_two] using IH"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (xy + yz + zx) * (x ^ 2 / y + y ^ 2 / z + z ^ 2 / x) \u2265 (x + y + z) * (x ^ 2 + y ^ 2 + z ^ 2) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x * y) * (z * y) * (y * z) \u2264 (x ^ 2 + y ^ 2 + z ^ 2) ^ 3 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_10_2 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x * y) * (z * y) * (y * z) \u2264 (x ^ 2 + y ^ 2 + z ^ 2) ^ 3 := by\n  simp only [mul_assoc]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z), sq_nonneg (x * y - z * y), sq_nonneg (z * x - y * z), sq_nonneg (y * x - z * x), sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (x ^ 2 - z ^ 2), sq_nonneg (y ^ 2 - z ^ 2), mul_nonneg hx.le hy.le, mul_nonneg hx.le hz.le, mul_nonneg hy.le hz.le, sq_nonneg (x * y + z * y), sq_nonneg (z * x + y * z), sq_nonneg (y * x + z * x)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_10_2 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x * y) * (z * y) * (y * z) \u2264 (x ^ 2 + y ^ 2 + z ^ 2) ^ 3 := by\n  have hxy : 0 < x * y := mul_pos hx hy\n  have hyz : 0 < y * z := mul_pos hy hz\n  have hxz : 0 < x * z := mul_pos hx hz\n  have h : 0 < x * y * z := by positivity\n  nlinarith [sq_nonneg (x ^ 2 + y ^ 2 + z ^ 2), sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (y ^ 2 - z ^ 2),\n    sq_nonneg (z ^ 2 - x ^ 2), sq_nonneg (x * y - y * z), sq_nonneg (y * z - x * z),\n    sq_nonneg (x * z - x * y)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : 22 * (a / (b ^ 2 + c ^ 2 + 4) + b / (c ^ 2 + a ^ 2 + 4) + c / (a ^ 2 + b ^ 2 + 4)) \u2264 8 + 1 / a + 1 / b + 1 / c := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 3 \u2192 a ^ 2 / (b + c) ^ 2 + b ^ 2 / (c + a) ^ 2 + c ^ 2 / (a + b) ^ 2 \u2265 3 / 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 3 \u2192\n    a ^ 2 / (b + c) ^ 2 + b ^ 2 / (c + a) ^ 2 + c ^ 2 / (a + b) ^ 2 \u2265 3 / 4:= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have h\u2080 : 0 < b + c := by linarith\n  have h\u2081 : 0 < c + a := by linarith\n  have h\u2082 : 0 < a + b := by linarith\n  have h\u2083 : 0 < (b + c) ^ 2 := by positivity\n  have h\u2084 : 0 < (c + a) ^ 2 := by positivity\n  have h\u2085 : 0 < (a + b) ^ 2 := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    mul_pos ha hb, mul_pos hb hc, mul_pos hc ha, mul_pos h\u2083 h\u2084, mul_pos h\u2084 h\u2085, mul_pos h\u2085 h\u2083]\n  <;> linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 3 \u2192\n    a ^ 2 / (b + c) ^ 2 + b ^ 2 / (c + a) ^ 2 + c ^ 2 / (a + b) ^ 2 \u2265 3 / 4:= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have h\u2081 : 0 < b + c := by linarith\n  have h\u2082 : 0 < c + a := by linarith\n  have h\u2083 : 0 < a + b := by linarith\n  have h\u2084 : 0 < a * b := by positivity\n  have h\u2085 : 0 < b * c := by positivity\n  have h\u2086 : 0 < c * a := by positivity\n  field_simp [ha, hb, hc, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a ^ 2 - b ^ 2), mul_self_nonneg (b ^ 2 - c ^ 2),\n    mul_self_nonneg (c ^ 2 - a ^ 2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 3 \u2192\n    a ^ 2 / (b + c) ^ 2 + b ^ 2 / (c + a) ^ 2 + c ^ 2 / (a + b) ^ 2 \u2265 3 / 4:= by\n  rintro a b c \u27e8a_pos, b_pos, c_pos, a_b_c_sum\u27e9\n  have h\u2080 : 0 < b + c := by linarith\n  have h\u2081 : 0 < c + a := by linarith\n  have h\u2082 : 0 < a + b := by linarith\n  have h\u2083 : 0 < b * c := by nlinarith\n  have h\u2084 : 0 < c * a := by nlinarith\n  have h\u2085 : 0 < a * b := by nlinarith\n  have h\u2086 : 0 < (b + c) * (c + a) * (a + b) := by positivity\n  field_simp [a_b_c_sum]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    mul_self_nonneg (a * b + b * c + c * a), mul_self_nonneg (a * b - b * c),\n    mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) : (4 / 3 * (a / (b + c) + b / (a + c) + c / (a + b))) + (abc / (a + b) / (a + c) / (b + c))^(1 / 3) \u2265 5 / 2 := by",
  "new": "(a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) : (a^2 / (b^2 + c^2) + b^2 / (a^2 + c^2) + c^2 / (a^2 + b^2)) \u2265 3 / 2 - 1 / (2 * (a * b + b * c + c * a)):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) : (a^2 / (b^2 + c^2) + b^2 / (a^2 + c^2) + c^2 / (a^2 + b^2)) \u2265 3 / 2  - 1 / (2 * (a * b + b * c + c * a)):= by\n  have hab : 0 < a * b := mul_pos ha hb\n  have hac : 0 < a * c := mul_pos ha hc\n  have hbc : 0 < b * c := mul_pos hb hc\n  have h\u2080 : 0 < a^2 * (b^2 + c^2) := by positivity\n  have h\u2081 : 0 < b^2 * (a^2 + c^2) := by positivity\n  have h\u2082 : 0 < c^2 * (a^2 + b^2) := by positivity\n  have h\u2083 : 0 < 2 * (a * b + b * c + c * a) := by positivity\n  have h\u2084 : (a^2 / (b^2 + c^2) + b^2 / (a^2 + c^2) + c^2 / (a^2 + b^2)) \u2265 3 / 2 := by\n    field_simp [h\u2080, h\u2081, h\u2082]\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a^2 - b^2), sq_nonneg (b^2 - c^2), sq_nonneg (c^2 - a^2)]\n  have h\u2085 : 3 / 2 - 1 / (2 * (a * b + b * c + c * a)) \u2264 3 / 2 := by\n    rw [sub_le_iff_le_add]\n    refine' le_of_sub_nonneg _\n    field_simp [h\u2083]\n    ring_nf\n    positivity\n  linarith\n  <;> try norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) : (a^2 / (b^2 + c^2) + b^2 / (a^2 + c^2) + c^2 / (a^2 + b^2)) \u2265 3 / 2  - 1 / (2 * (a * b + b * c + c * a)):= by\n  have h\u2080 : 0 < a * b := by positivity\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * a := by positivity\n  have h\u2083 : 0 < (a * b) * (b * c) := by positivity\n  have h\u2084 : 0 < (b * c) * (c * a) := by positivity\n  have h\u2085 : 0 < (c * a) * (a * b) := by positivity\n  have h\u2086 : 0 < a * b + b * c + c * a := by positivity\n  have h\u2087 : 0 < 2 * (a * b + b * c + c * a) := by positivity\n  have h\u2088 : (a^2 / (b^2 + c^2) + b^2 / (a^2 + c^2) + c^2 / (a^2 + b^2)) \u2265 3 / 2 := by\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a^2 - b^2), sq_nonneg (b^2 - c^2), sq_nonneg (c^2 - a^2)]\n  have h\u2089 : 1 / (2 * (a * b + b * c + c * a)) \u2265 0 := by positivity\n  linarith\n  <;> try norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) : (a^2 / (b^2 + c^2) + b^2 / (a^2 + c^2) + c^2 / (a^2 + b^2)) \u2265 3 / 2  - 1 / (2 * (a * b + b * c + c * a)):= by\n  have h\u2081 : 0 < a * b := mul_pos ha hb\n  have h\u2082 : 0 < b * c := mul_pos hb hc\n  have h\u2083 : 0 < c * a := mul_pos hc ha\n  have h\u2084 : 0 < a * b * (a^2 + b^2) := by positivity\n  have h\u2085 : 0 < b * c * (b^2 + c^2) := by positivity\n  have h\u2086 : 0 < c * a * (c^2 + a^2) := by positivity\n  have h\u2087 : 0 < a * b * c := by positivity\n  have h\u2088 : 0 < 2 * (a * b + b * c + c * a) := by positivity\n  have h\u2089 : (a^2 / (b^2 + c^2) + b^2 / (a^2 + c^2) + c^2 / (a^2 + b^2)) \u2265 3 / 2 := by\n    field_simp [ha.ne', hb.ne', hc.ne']\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a^2 - b^2), sq_nonneg (b^2 - c^2), sq_nonneg (c^2 - a^2)]\n  have h\u2081\u2080 : 3 / 2 - 1 / (2 * (a * b + b * c + c * a)) \u2264 3 / 2 := by\n    refine' sub_le_self _ _\n    positivity\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) : (a^2 / (b^2 + c^2) + b^2 / (a^2 + c^2) + c^2 / (a^2 + b^2)) \u2265 3 / 2  - 1 / (2 * (a * b + b * c + c * a)):= by\n  have h\u2081 : 0 < a * b := mul_pos ha hb\n  have h\u2082 : 0 < b * c := mul_pos hb hc\n  have h\u2083 : 0 < c * a := mul_pos hc ha\n  have h\u2084 : 0 < a * b + b * c + c * a := by positivity\n  have h\u2085 : 0 < a * b * (a^2 + b^2) := by positivity\n  have h\u2086 : 0 < b * c * (b^2 + c^2) := by positivity\n  have h\u2087 : 0 < c * a * (c^2 + a^2) := by positivity\n  have h\u2088 : 0 < a * b * c * (a + b + c) := by positivity\n  have h\u2089 : 0 < a * b + b * c + c * a := by positivity\n  have h\u2081\u2080 : (a^2 / (b^2 + c^2) + b^2 / (a^2 + c^2) + c^2 / (a^2 + b^2)) \u2265 3 / 2 := by\n    field_simp [ha, hb, hc]\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a^2 - b^2), sq_nonneg (b^2 - c^2), sq_nonneg (c^2 - a^2)]\n  have h\u2081\u2081 : 3 / 2 - 1 / (2 * (a * b + b * c + c * a)) \u2264 3 / 2 := by\n    apply sub_le_self\n    positivity\n  linarith"
  ]
 },
 {
  "old": "(h\u2081 : 2 \u2223 2310) (h\u2082 : 3 \u2223 2310) (h\u2083 : 5 \u2223 2310) (h\u2084 : 7 \u2223 2310) (h\u2085 : 11 \u2223 2310) : 2310 = 2*3*5*7*11 := by",
  "new": "(h\u2081 : 2 \u2223 2310) (h\u2082 : 3 \u2223 2310) (h\u2083 : 5 \u2223 2310) (h\u2084 : 7 \u2223 2310) (h\u2085 : 11 \u2223 2310) : Nat.Prime 2310 = false := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem prime_test_one (h\u2081 : 2 \u2223 2310) (h\u2082 : 3 \u2223 2310) (h\u2083 : 5 \u2223 2310) (h\u2084 : 7 \u2223 2310) (h\u2085 : 11 \u2223 2310) : Nat.Prime 2310 = false := by\n  norm_num [Nat.prime_def_lt, Nat.Prime] at * <;>\n  omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem prime_test_one (h\u2081 : 2 \u2223 2310) (h\u2082 : 3 \u2223 2310) (h\u2083 : 5 \u2223 2310) (h\u2084 : 7 \u2223 2310) (h\u2085 : 11 \u2223 2310) : Nat.Prime 2310 = false := by\n  norm_num [Nat.prime_def_lt, Nat.dvd_iff_mod_eq_zero] at h\u2081 h\u2082 h\u2083 h\u2084 h\u2085 \u22a2\n  <;> simp_all\n  <;> decide"
  ]
 },
 {
  "old": ": \u03c6 3 = 2 \u2227 \u03c6 4 = 2 := by",
  "new": "(p : \u2115) {m n : \u2115} (hp : Nat.Prime p) : m \u2260 0 \u2227 n \u2260 0 \u2192 (p.Coprime m \u2228 p \u2223 m) \u2227 (p.Coprime n \u2228 p \u2223 n):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {m n : \u2115} (hp : Nat.Prime p) : m \u2260 0 \u2227 n \u2260 0 \u2192 (p.Coprime m \u2228 p \u2223 m) \u2227 (p.Coprime n \u2228 p \u2223 n):= by\n  rintro \u27e8h1, h2\u27e9\n  constructor\n  all_goals\n    by_cases h : p \u2223 m <;> by_cases h' : p \u2223 n <;> simp_all [Nat.Prime.coprime_iff_not_dvd, Nat.Prime.not_dvd_one]\n  <;> try norm_num\n  <;> linarith [hp.two_le]\n  <;> linarith [hp.two_le]\n  <;> linarith [hp.two_le]\n  <;> linarith [hp.two_le]"
  ]
 },
 {
  "old": "{a b : \u2124} (h : a % 8 = b % 8) : a^2 % 8 = b^2 % 8 := by",
  "new": "(a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  by_cases h : Nat.Coprime a b\n  exact Or.inl h\n  exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  have h\u2080 : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by\n    by_cases h\u2081 : Nat.Coprime a b\n    case pos => exact Or.inl h\u2081\n    case neg => exact Or.inr h\u2081\n  exact h\u2080\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  by_cases h : Nat.Coprime a b\n  exacts [Or.inl h, Or.inr (by simpa using h)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  by_cases h : Nat.Coprime a b\n  exact Or.inl h\n  exact Or.inr h\n  <;> aesop"
  ]
 },
 {
  "old": "(a b c k: \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 1 \u2227 k >= 1/9): (k + b * c / a) * (k + c * a / b) * (k + a * b / c) \u2265 (1/27) * (3 * k + 1)^3 := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 1 \u2192 a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2 + a ^ 2 * c ^ 2 + a * b * b * c + b * c * c * a + a * b * c * a + a * b + b * c + c * a \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 1 \u2192\n    a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2 + a ^ 2 * c ^ 2 + a * b * b * c + b * c * c * a + a * b * c * a + a * b + b * c + c * a \u2264 1:= by\n  intro a b c h\n  have h\u2081 : a * b > 0 := mul_pos h.1 h.2.1\n  have h\u2082 : b * c > 0 := mul_pos h.2.1 h.2.2.1\n  have h\u2083 : a * c > 0 := mul_pos h.1 h.2.2.1\n  have h\u2084 : a * b * c > 0 := mul_pos h\u2081 h.2.2.1\n  have h\u2085 : a ^ 2 + b ^ 2 + c ^ 2 \u2264 1 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  nlinarith [sq_nonneg (a * b), sq_nonneg (b * c), sq_nonneg (c * a)]\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 1 \u2192\n    a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2 + a ^ 2 * c ^ 2 + a * b * b * c + b * c * c * a + a * b * c * a + a * b + b * c + c * a \u2264 1:= by\n  rintro a b c \u27e8a_pos, b_pos, c_pos, a_b_c_sum\u27e9\n  have h\u2081 : 0 < a * b := mul_pos a_pos b_pos\n  have h\u2082 : 0 < b * c := mul_pos b_pos c_pos\n  have h\u2083 : 0 < c * a := mul_pos c_pos a_pos\n  have h\u2084 : (a + b + c) ^ 2 = 1 := by simp [a_b_c_sum]\n  nlinarith [mul_self_nonneg (a * b + b * c + c * a), mul_self_nonneg (a * b - b * c),\n    mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b)]\n  <;> linarith\n  <;> norm_num"
  ]
 },
 {
  "old": "(n : \u2115) : \u2203 x y z : \u2115, 8*n + 3 = x^2 + y^2 + z^2 := by",
  "new": "(n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime n (n - 1) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_of_ge_2 (n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime n (n - 1) := by\n  rw [Nat.coprime_iff_gcd_eq_one]\n  rcases n with (_ | _ | n) <;> simp_all [Nat.gcd_eq_right]\n  all_goals\n    omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_of_ge_2 (n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime n (n - 1) := by\n  cases' n with n\n  exfalso\n  linarith\n  cases' n with n\n  exfalso\n  linarith\n  simp [Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : 1 / (2 * a + 3 * b + 4 * c) + 1 / (2 * b + 3 * c + 4 * a) + 1 / (2 * c + 3 * a + 4 * b) \u2264 1 / (Real.sqrt a * Real.sqrt b + Real.sqrt b * Real.sqrt c + Real.sqrt c * Real.sqrt a) ^ 2 := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : 1 / (2 * a + 3 * b + 4 * c) + 1 / (2 * b + 3 * c + 4 * a) + 1 / (2 * c + 3 * a + 4 * b) \u2264 36/9:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) :  1 / (2 * a + 3 * b + 4 * c) + 1 / (2 * b + 3 * c + 4 * a) + 1 / (2 * c + 3 * a + 4 * b) \u2264 36/9:= by\n  have h\u2081 : 2 * a + 3 * b + 4 * c > 0 := by nlinarith\n  have h\u2082 : 2 * b + 3 * c + 4 * a > 0 := by nlinarith\n  have h\u2083 : 2 * c + 3 * a + 4 * b > 0 := by nlinarith\n  have h\u2084 : 1 / (2 * a + 3 * b + 4 * c) \u2264 9 / 9 := by\n    rw [div_le_iff h\u2081]\n    nlinarith\n  have h\u2085 : 1 / (2 * b + 3 * c + 4 * a) \u2264 9 / 9 := by\n    rw [div_le_iff h\u2082]\n    nlinarith\n  have h\u2086 : 1 / (2 * c + 3 * a + 4 * b) \u2264 9 / 9 := by\n    rw [div_le_iff h\u2083]\n    nlinarith\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) :  1 / (2 * a + 3 * b + 4 * c) + 1 / (2 * b + 3 * c + 4 * a) + 1 / (2 * c + 3 * a + 4 * b) \u2264 36/9:= by\n  have : 0 < a + b + c := by linarith\n  have : 0 < 2 * a + 3 * b + 4 * c := by nlinarith\n  have : 0 < 2 * b + 3 * c + 4 * a := by nlinarith\n  have : 0 < 2 * c + 3 * a + 4 * b := by nlinarith\n  have : 0 < 2 * a + 3 * b + 4 * c * (2 * b + 3 * c + 4 * a) := by nlinarith\n  have : 0 < 2 * b + 3 * c + 4 * a * (2 * c + 3 * a + 4 * b) := by nlinarith\n  have : 0 < 2 * c + 3 * a + 4 * b * (2 * a + 3 * b + 4 * c) := by nlinarith\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (2 * a + 3 * b + 4 * c), mul_self_nonneg (2 * b + 3 * c + 4 * a),\n    mul_self_nonneg (2 * c + 3 * a + 4 * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) :  1 / (2 * a + 3 * b + 4 * c) + 1 / (2 * b + 3 * c + 4 * a) + 1 / (2 * c + 3 * a + 4 * b) \u2264 36/9:= by\n  have h\u2080 : 0 < 2 * a + 3 * b + 4 * c := by linarith\n  have h\u2081 : 0 < 2 * b + 3 * c + 4 * a := by linarith\n  have h\u2082 : 0 < 2 * c + 3 * a + 4 * b := by linarith\n  have h\u2083 : 0 < (2 * a + 3 * b + 4 * c) * (2 * b + 3 * c + 4 * a) := by positivity\n  have h\u2084 : 0 < (2 * b + 3 * c + 4 * a) * (2 * c + 3 * a + 4 * b) := by positivity\n  have h\u2085 : 0 < (2 * a + 3 * b + 4 * c) * (2 * b + 3 * c + 4 * a) * (2 * c + 3 * a + 4 * b) := by positivity\n  field_simp [h\u2080, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085]\n  rw [div_le_iff (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) :  1 / (2 * a + 3 * b + 4 * c) + 1 / (2 * b + 3 * c + 4 * a) + 1 / (2 * c + 3 * a + 4 * b) \u2264 36/9:= by\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_pos ha hb, mul_pos hb hc, mul_pos ha hc]"
  ]
 },
 {
  "old": "(h\u2081 : 100 > 50) : choose 100 50 = 100! / (50! * 50!) := by",
  "new": "(n k : \u2115) (h\u2081 : k \u2264 n) : choose n k = n ! / (k ! * (n - k)!) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem choose_eq_factorial_div_factorial (n k : \u2115) (h\u2081 : k \u2264 n) : choose n k = n ! / (k ! * (n - k)!) := by\n  rw [eq_comm]\n  rw [Nat.choose_eq_factorial_div_factorial h\u2081]\n  <;> rfl\n  <;> simp_all [Nat.choose_eq_factorial_div_factorial]\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem choose_eq_factorial_div_factorial (n k : \u2115) (h\u2081 : k \u2264 n) : choose n k = n ! / (k ! * (n - k)!) := by\n  rw [\u2190 choose_mul_factorial_mul_factorial h\u2081, mul_assoc]\n  exact (Nat.mul_div_left _ (mul_pos (factorial_pos _) (factorial_pos _))).symm\n  <;> simp [h\u2081]\n  <;> exact Nat.mul_div_left _ (factorial_pos _)\n  <;> simp [h\u2081]\n  <;> exact Nat.mul_div_left _ (factorial_pos _)\n  <;> simp [h\u2081]\n  <;> exact Nat.mul_div_left _ (factorial_pos _)",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem choose_eq_factorial_div_factorial (n k : \u2115) (h\u2081 : k \u2264 n) : choose n k = n ! / (k ! * (n - k)!) := by\n  rw [Nat.choose_eq_factorial_div_factorial h\u2081]\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem choose_eq_factorial_div_factorial (n k : \u2115) (h\u2081 : k \u2264 n) : choose n k = n ! / (k ! * (n - k)!) := by\n  apply Eq.symm\n  apply Eq.symm\n  rw [Nat.choose_eq_factorial_div_factorial]\n  all_goals\n    linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith"
  ]
 },
 {
  "old": "(a b : \u2115) (h : a^2 + a * b + 1 \u2223 b^2 + a * b + 1) : a = b := by",
  "new": "(a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 a = 0 \u2228 b = 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 a = 0 \u2228 b = 0:= by\n  have h1 : a * b = 1 := h\n  have h2 : a = 1 \u2228 a = 0 := by\n    cases a with\n    | zero => exact Or.inr rfl\n    | succ a' =>\n      cases b with\n      | zero => simp_all\n      | succ b' =>\n        simp_all [Nat.mul_succ]\n        <;> nlinarith\n  cases h2 with\n  | inl h2 => exact Or.inl \u27e8h2, by simp_all\u27e9\n  | inr h2 => exact Or.inr (Or.inl h2)\n  <;> simp_all",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 a = 0 \u2228 b = 0:= by\n  cases' Nat.eq_zero_or_pos a with ha ha <;> cases' Nat.eq_zero_or_pos b with hb hb <;>\n  simp_all [Nat.eq_one_of_mul_eq_one_right]\n  <;> tauto\n  <;> simp_all [Nat.eq_one_of_mul_eq_one_left]\n  <;> tauto\n  <;> simp_all [Nat.eq_one_of_mul_eq_one_right, Nat.eq_one_of_mul_eq_one_left]\n  <;> tauto\n  <;> simp_all [Nat.eq_one_of_mul_eq_one_right, Nat.eq_one_of_mul_eq_one_left]\n  <;> tauto",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 a = 0 \u2228 b = 0:= by\n  cases' b with b\n  all_goals simp [Nat.mul_eq_zero, Nat.eq_zero_of_zero_dvd, Nat.dvd_one] at h\n  all_goals aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 a = 0 \u2228 b = 0:= by\n  rcases b with (_ | _ | b) <;> simp_all [mul_eq_one]\n  <;> aesop\n  <;> rfl\n  <;> aesop\n  <;> rfl\n  <;> aesop\n  <;> rfl"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : (a + b * c) ^ 2 + (b + c * a) ^ 2 + (c + a * b) ^ 2 \u2265 Real.sqrt 2 * (a + b) * (b + c) * (c + a) := by",
  "new": "(x y : \u2115) (h : x ^ 2 + y ^ 2 \u2265 2 * x * y) : (Nat.Coprime x y) \u2228 \u00ac Nat.Coprime x y := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2265 2 * x * y) : (Nat.Coprime x y) \u2228 \u00ac Nat.Coprime x y := by\n  by_cases h\u2081 : Nat.Coprime x y\n  exacts [Or.inl h\u2081, Or.inr (by simp [h\u2081])]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2265 2 * x * y) : (Nat.Coprime x y) \u2228 \u00ac Nat.Coprime x y := by\n  by_cases h0 : Nat.Coprime x y <;> simp [h0]\n  <;> contrapose! h <;> simp_all [Nat.Coprime]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2265 2 * x * y) : (Nat.Coprime x y) \u2228 \u00ac Nat.Coprime x y := by\n  by_cases h' : Nat.Coprime x y <;> simp [h']\n  all_goals simp_all [Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm]\n  all_goals\n    by_contra! h''\n    have h''' := Nat.gcd_eq_left (Nat.gcd_dvd_left x y)\n    simp_all [Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : (1 + a) * Real.sqrt ((1 - a) / a) + (1 + b) * Real.sqrt ((1 - b) / b) + (1 + c) * Real.sqrt ((1 - c) / c) \u2265 (3 * Real.sqrt 3) / 4 * (1 + a) * (1 + b) * (1 + c) / Real.sqrt ((1 - a) * (1 - b) * (1 - c)) := by",
  "new": ": Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 - 1) \u2264 2 * Real.sqrt (2) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 - 1) \u2264 2 * Real.sqrt (2)\n  := by\n  have h\u2081 : Real.sqrt 2 \u2265 0 := Real.sqrt_nonneg _\n  have h\u2082 : Real.sqrt 2 - 1 \u2265 0 := by\n    nlinarith [sq_sqrt (show 0 \u2264 2 by norm_num)]\n  have h\u2083 : Real.sqrt (Real.sqrt 2 + 1) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2084 : Real.sqrt (Real.sqrt 2 - 1) \u2265 0 := Real.sqrt_nonneg _\n  nlinarith [sq_sqrt (show 0 \u2264 Real.sqrt 2 + 1 by linarith),\n    sq_sqrt (show 0 \u2264 Real.sqrt 2 - 1 by linarith),\n    sq_sqrt (show 0 \u2264 2 by norm_num),\n    sq_nonneg (Real.sqrt (Real.sqrt 2 + 1) - Real.sqrt (Real.sqrt 2 - 1)),\n    Real.sq_sqrt (show 0 \u2264 Real.sqrt 2 by linarith),\n    Real.sq_sqrt (show 0 \u2264 2 by norm_num),\n    Real.sq_sqrt (show 0 \u2264 2 by norm_num)]\n  <;> norm_num"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : (a / (a + b + c) + b / (a + c + d) + c / (d + a + b)) * (b / (b + c + d) + c / (d + a + b) + d / (a + b + c)) * (c / (a + c + d) + d / (a + b + c) + a / (b + c + d)) * (d / (d + a + b) + a / (b + c + d) + b / (a + c + d)) \u2265 1 := by",
  "new": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : a / b + b / c + c / d + d / a \u2265 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : \n  a / b + b / c + c / d + d / a \u2265 4:= by\n  have h\u2080 : 0 < b * c := mul_pos hb hc\n  have h\u2081 : 0 < d * a := mul_pos hd ha\n  have h\u2082 : 0 < c * d := mul_pos hc hd\n  have h\u2083 : 0 < b * d := mul_pos hb hd\n  have h\u2084 : 0 < a * b := mul_pos ha hb\n  have h\u2085 : 0 < a * c := mul_pos ha hc\n  have h\u2086 : 0 < b * c * d := by positivity\n  have h\u2087 : 0 < c * d * a := by positivity\n  have h\u2088 : 0 < d * a * b := by positivity\n  have h\u2089 : 0 < a * b * c := by positivity\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - d), sq_nonneg (d - a),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le hd.le, mul_nonneg hd.le ha.le,\n    mul_nonneg (sq_nonneg (a - b)) hd.le, mul_nonneg (sq_nonneg (b - c)) ha.le,\n    mul_nonneg (sq_nonneg (c - d)) hb.le, mul_nonneg (sq_nonneg (d - a)) hc.le]"
  ]
 },
 {
  "old": "(n : \u2115) : \u2211 k in Finset.range (2 * n - 1), ((-1:\u2124) ^ (k - 1) / (2 * n).choose k) = 1 := by",
  "new": "(n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_2 (n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by\n  induction' hn with n hn IH\n  norm_num [fib_one, fib_two]\n  rw [fib_add_two]\n  simp_all [fib_add_two, Nat.Coprime, Nat.gcd_comm]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_2 (n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by\n  induction' hn with n hn IH\n  all_goals simp_all [fib_add_two, Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm]\n  all_goals norm_num\n  all_goals aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_2 (n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by\n  apply Nat.coprime_iff_gcd_eq_one.mpr\n  induction' hn with k hk hk_ind\n  simp [fib_one, fib_two, Nat.gcd_zero_left]\n  cases k\n  all_goals simp_all [Nat.gcd_comm, fib_add_two, Nat.coprime_iff_gcd_eq_one]\n  all_goals omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_2 (n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by\n  induction' hn with k hk IH\n  all_goals simp_all [fib_add_two, coprime_iff_gcd_eq_one, Nat.gcd_comm]\n  <;> norm_num\n  <;> omega\n  <;> simp_all [fib_add_two, coprime_iff_gcd_eq_one, Nat.gcd_comm]\n  <;> norm_num\n  <;> omega"
  ]
 },
 {
  "old": ": \u2200 a b c d : \u211d, (a^2+b^2)*(c^2+d^2) = (a*c+b*d)^2+(a*d-b*c)^2 := by",
  "new": "(n : \u2115) : \u2200 a b : \u211d, (a + b) ^ n = \u2211 i in Finset.range (n+1), (Nat.choose n i : \u211d) * a ^ (n - i) * b ^ i := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem ring_exp_succ (n : \u2115) : \u2200 a b : \u211d, (a + b) ^ n = \u2211 i in Finset.range (n+1), \n    (Nat.choose n i : \u211d) * a ^ (n - i) * b ^ i := by\n  intro a b\n  rw [add_comm a b]\n  rw [add_pow]\n  simp [Nat.choose, mul_comm, mul_assoc, mul_left_comm]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem ring_exp_succ (n : \u2115) : \u2200 a b : \u211d, (a + b) ^ n = \u2211 i in Finset.range (n+1), \n    (Nat.choose n i : \u211d) * a ^ (n - i) * b ^ i := by\n  intro a b\n  rw [add_comm]\n  simp [add_pow]\n  apply Finset.sum_congr rfl\n  intro x hx\n  ring\n  <;> norm_cast\n  <;> linarith\n  <;> simp [Nat.choose]\n  <;> norm_cast\n  <;> linarith\n  <;> simp [Nat.choose]\n  <;> norm_cast\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem ring_exp_succ (n : \u2115) : \u2200 a b : \u211d, (a + b) ^ n = \u2211 i in Finset.range (n+1), \n    (Nat.choose n i : \u211d) * a ^ (n - i) * b ^ i := by\n  intro a b\n  rw [add_comm]\n  simp [add_pow]\n  apply Finset.sum_congr rfl\n  intro x hx\n  ring\n  <;> simp [Nat.choose, mul_comm, mul_assoc, mul_left_comm]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : (c * Real.sqrt (a ^ 3 + b ^ 3) / (a ^ 2 + b ^ 2) + a * Real.sqrt (b ^ 3 + c ^ 3) / (b ^ 2 + c ^ 2) + b * Real.sqrt (c ^ 3 + a ^ 3) / (c ^ 2 + a ^ 2)) \u2265 3 / Real.sqrt 2 := by",
  "new": "(a b c : \u211d) (hab : 0 < a \u2227 0 < b \u2227 0 < c) (h : a * b * c = 1) : a * b * c * (a + b + c) \u2264 (a * b + b * c + c * a) ^ 2 \u2227 a * b + b * c + c * a \u2265 3 * a * b * c:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (a b c : \u211d) (hab : 0 < a \u2227 0 < b \u2227 0 < c) (h : a * b * c = 1) :  a * b * c * (a + b + c) \u2264 (a * b + b * c + c * a) ^ 2 \u2227\n  a * b + b * c + c * a \u2265 3 * a * b * c:= by\n  have h\u2081 : 0 < a := hab.1\n  have h\u2082 : 0 < b := hab.2.1\n  have h\u2083 : 0 < c := hab.2.2\n  have h\u2084 : 0 < a * b := by positivity\n  have h\u2085 : 0 < b * c := by positivity\n  have h\u2086 : 0 < c * a := by positivity\n  have h\u2087 : 0 < a * b * c := by positivity\n  have h\u2088 : 0 < a * b * c * (a + b + c) := by positivity\n  have h\u2089 : (a * b + b * c + c * a) ^ 2 \u2265 a * b * c * (a + b + c) := by\n    nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n  have h\u2081\u2080 : a * b + b * c + c * a \u2265 3 * a * b * c := by\n    nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n  exact \u27e8h\u2089, h\u2081\u2080\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (a b c : \u211d) (hab : 0 < a \u2227 0 < b \u2227 0 < c) (h : a * b * c = 1) :  a * b * c * (a + b + c) \u2264 (a * b + b * c + c * a) ^ 2 \u2227\n  a * b + b * c + c * a \u2265 3 * a * b * c:= by\n  have h\u2081 : 0 < a * b := mul_pos hab.1 hab.2.1\n  have h\u2082 : 0 < b * c := mul_pos hab.2.1 hab.2.2\n  have h\u2083 : 0 < c * a := mul_pos hab.2.2 hab.1\n  have h\u2084 : 0 < a * b * c := by nlinarith\n  have h\u2085 : 0 < a * b * c * (a + b + c) := by nlinarith\n  constructor\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (a b c : \u211d) (hab : 0 < a \u2227 0 < b \u2227 0 < c) (h : a * b * c = 1) :  a * b * c * (a + b + c) \u2264 (a * b + b * c + c * a) ^ 2 \u2227\n  a * b + b * c + c * a \u2265 3 * a * b * c:= by\n  have h\u2081 : 0 < a * b := by\n    nlinarith\n  have h\u2082 : 0 < b * c := by\n    nlinarith\n  have h\u2083 : 0 < c * a := by\n    nlinarith\n  have h\u2084 : 0 < a * b * c := by\n    nlinarith\n  have h\u2085 : 0 < a * b * c * (a + b + c) := by\n    nlinarith\n  constructor\n  nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n  nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (a b c : \u211d) (hab : 0 < a \u2227 0 < b \u2227 0 < c) (h : a * b * c = 1) :  a * b * c * (a + b + c) \u2264 (a * b + b * c + c * a) ^ 2 \u2227\n  a * b + b * c + c * a \u2265 3 * a * b * c:= by\n  have h1 : 0 < a * b := mul_pos hab.1 hab.2.1\n  have h2 : 0 < b * c := mul_pos hab.2.1 hab.2.2\n  have h3 : 0 < c * a := mul_pos hab.2.2 hab.1\n  have h4 : 0 < a * b * c := by nlinarith\n  have h5 : 0 < a * b * c * (a + b + c) := by nlinarith\n  constructor\n  nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n  nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n  <;> nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a + b + c \u2264 (a ^ 2 + b ^ 2) / (2 * c) + (b ^ 2 + c ^ 2) / (2 * a) + (c ^ 2 + a ^ 2) / (2 * b) \u2227 (a ^ 2 + b ^ 2) / (2 * c) + (b ^ 2 + c ^ 2) / (2 * a) + (c ^ 2 + a ^ 2) / (2 * b) \u2264 a ^ 3 / (b * c) + b ^ 3 / (c * a) + c ^ 3 / (a * b) := by",
  "new": ": \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 a ^ 3 / (b * c) + b ^ 3 / (c * a) + c ^ 3 / (a * b) \u2265 a + b + c \u2227 a ^ 3 / (b * c) + b ^ 3 / (c * a) + c ^ 3 / (a * b) \u2265 a + b + c:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192\n   a ^ 3 / (b * c) + b ^ 3 / (c * a) + c ^ 3 / (a * b) \u2265\n   a + b + c \u2227\n   a ^ 3 / (b * c) + b ^ 3 / (c * a) + c ^ 3 / (a * b) \u2265 a + b + c:= by\n  intro a b c h\n  have : 0 < a := h.1\n  have : 0 < b := h.2.1\n  have : 0 < c := h.2.2\n  have : 0 < a * b := mul_pos h.1 h.2.1\n  have : 0 < b * c := mul_pos h.2.1 h.2.2\n  have : 0 < c * a := mul_pos h.2.2 h.1\n  have : 0 < a * b * c := by positivity\n  constructor\n  \u00b7 field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), sq_nonneg (a ^ 2 - b ^ 2),\n      sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2), sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a),\n      sq_nonneg (c * a - a * b)]\n  \u00b7 field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), sq_nonneg (a ^ 2 - b ^ 2),\n      sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2), sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a),\n      sq_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192\n   a ^ 3 / (b * c) + b ^ 3 / (c * a) + c ^ 3 / (a * b) \u2265\n   a + b + c \u2227\n   a ^ 3 / (b * c) + b ^ 3 / (c * a) + c ^ 3 / (a * b) \u2265 a + b + c:= by\n  rintro a b c \u27e8a_pos, b_pos, c_pos\u27e9\n  have h\u2080 : 0 < b * c := mul_pos b_pos c_pos\n  have h\u2081 : 0 < c * a := mul_pos c_pos a_pos\n  have h\u2082 : 0 < a * b := mul_pos a_pos b_pos\n  have h\u2083 : 0 < b * c * (c * a) := by positivity\n  have h\u2084 : 0 < c * a * (a * b) := by positivity\n  have h\u2085 : 0 < b * c * (a * b) := by positivity\n  constructor\n  field_simp [h\u2080, h\u2081, h\u2082]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n  field_simp [h\u2080, h\u2081, h\u2082]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192\n   a ^ 3 / (b * c) + b ^ 3 / (c * a) + c ^ 3 / (a * b) \u2265\n   a + b + c \u2227\n   a ^ 3 / (b * c) + b ^ 3 / (c * a) + c ^ 3 / (a * b) \u2265 a + b + c:= by\n  rintro a b c \u27e8a_pos, b_pos, c_pos\u27e9\n  have h\u2080 : 0 < b * c := by positivity\n  have h\u2081 : 0 < c * a := by positivity\n  have h\u2082 : 0 < a * b := by positivity\n  have h\u2083 : 0 < b * c * (c * a) := by positivity\n  have h\u2084 : 0 < a * b * (b * c) := by positivity\n  have h\u2085 : 0 < c * a * (a * b) := by positivity\n  constructor\n  \u00b7 field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n      sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n  \u00b7 field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n      sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192\n   a ^ 3 / (b * c) + b ^ 3 / (c * a) + c ^ 3 / (a * b) \u2265\n   a + b + c \u2227\n   a ^ 3 / (b * c) + b ^ 3 / (c * a) + c ^ 3 / (a * b) \u2265 a + b + c:= by\n  rintro a b c \u27e8a_pos, b_pos, c_pos\u27e9\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * a := by positivity\n  have h\u2083 : 0 < a * b := by positivity\n  have h\u2084 : 0 < b * c * (c * a) := by positivity\n  have h\u2085 : 0 < c * a * (a * b) := by positivity\n  have h\u2086 : 0 < a * b * (b * c) := by positivity\n  constructor\n  \u00b7 field_simp\n    rw [le_div_iff (by positivity), mul_comm]\n    nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n      sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n  \u00b7 field_simp\n    rw [le_div_iff (by positivity), mul_comm]\n    nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n      sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (h1 : a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1) : (a + b) * (b + c) * (a + c) >= 4 * (a + b + c - 1) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) : x^2 / (x + y)^2 + y^2 / (y + z)^2 + z^2 / (z + x)^2 \u2265 2 - 2 * (2 * (x + y + z - 1)):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h : x * y * z = 1) :\n    x^2 / (x + y)^2 + y^2 / (y + z)^2 + z^2 / (z + x)^2 \u2265 2 - 2 * (2 * (x + y + z - 1)):= by\n  have h1 : 0 \u2264 x^2 / (x + y)^2 + y^2 / (y + z)^2 + z^2 / (z + x)^2 := by positivity\n  have h2 : 0 \u2264 x * y := by positivity\n  have h3 : 0 \u2264 y * z := by positivity\n  have h4 : 0 \u2264 z * x := by positivity\n  have h5 : 0 \u2264 x * y * z := by positivity\n  have h6 : 0 \u2264 x + y + z := by positivity\n  have h7 : 0 \u2264 2 * (x + y + z - 1) := by\n    nlinarith [sq_nonneg (x + y + z - 1)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  <;> assumption\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h : x * y * z = 1) :\n    x^2 / (x + y)^2 + y^2 / (y + z)^2 + z^2 / (z + x)^2 \u2265 2 - 2 * (2 * (x + y + z - 1)):= by\n  rw [add_assoc]\n  have h1 : 0 < x * y := mul_pos hx hy\n  have h2 : 0 < y * z := mul_pos hy hz\n  have h3 : 0 < z * x := mul_pos hz hx\n  have h4 : 0 < (x + y)^2 := by positivity\n  have h5 : 0 < (y + z)^2 := by positivity\n  have h6 : 0 < (z + x)^2 := by positivity\n  have h7 : 0 < x * y * z := by positivity\n  have h8 : 0 < (x + y) * (y + z) * (z + x) := by positivity\n  have h9 : x^2 / (x + y)^2 + y^2 / (y + z)^2 + z^2 / (z + x)^2 \u2265 0 := by positivity\n  nlinarith"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x + x^2 / y)^2 + (y + y^2 / z)^2 + (z + z^2 / x)^2 \u2265 (13 * (x^4 + y^4 + z^4) - x^2 * y^2 + y^2 * z^2 - z^2 * x^2) / (x^2 + y^2 + z^2) := by",
  "new": ": \u2200 x y z : \u211d, 0 < x \u2192 0 < y \u2192 0 < z \u2192 (x^2 / y + y^2 / z + z^2 / x)^2 \u2265 x * y + y * z + z * x:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x y z : \u211d,\n     0 < x \u2192 0 < y \u2192 0 < z \u2192\n     (x^2 / y + y^2 / z + z^2 / x)^2 \u2265 x * y + y * z + z * x:= by\n  rintro x y z (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  have hxy : 0 < x * y := mul_pos hx hy\n  have hyz : 0 < y * z := mul_pos hy hz\n  have hxz : 0 < z * x := mul_pos hz hx\n  have h\u2081 : (x^2 / y + y^2 / z + z^2 / x) \u2265 x + y + z := by\n    have : 0 < x * y * z := by positivity\n    field_simp [hx, hy, hz, this]\n    rw [le_div_iff, mul_comm]\n    nlinarith [mul_self_nonneg (x - y), mul_self_nonneg (y - z), mul_self_nonneg (z - x)]\n    positivity\n  nlinarith [mul_self_nonneg (x - y), mul_self_nonneg (y - z), mul_self_nonneg (z - x)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x y z : \u211d,\n     0 < x \u2192 0 < y \u2192 0 < z \u2192\n     (x^2 / y + y^2 / z + z^2 / x)^2 \u2265 x * y + y * z + z * x:= by\n  intro x y z hx hy hz\n  have h1 : 0 < x * y := by positivity\n  have h2 : 0 < y * z := by positivity\n  have h3 : 0 < z * x := by positivity\n  have h4 : x^2 / y + y^2 / z + z^2 / x \u2265 x + y + z := by\n    field_simp [h1.ne', h2.ne', h3.ne']\n    rw [le_div_iff (by positivity), \u2190 mul_comm]\n    nlinarith [mul_self_nonneg (x - y), mul_self_nonneg (y - z), mul_self_nonneg (z - x)]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x y z : \u211d,\n     0 < x \u2192 0 < y \u2192 0 < z \u2192\n     (x^2 / y + y^2 / z + z^2 / x)^2 \u2265 x * y + y * z + z * x:= by\n  intro x y z hx hy hz\n  have hxy : 0 < x * y := by positivity\n  have hyz : 0 < y * z := by positivity\n  have hxz : 0 < z * x := by positivity\n  have hxy_div : x ^ 2 / y + y ^ 2 / z + z ^ 2 / x \u2265 x + y + z := by\n    have hxy_div' : 0 < y * z := by positivity\n    have hxz_div' : 0 < z * x := by positivity\n    have hxy_div'' : 0 < x * y := by positivity\n    field_simp [hxy_div', hxz_div', hxy_div'']\n    rw [le_div_iff, \u2190 sub_nonneg]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n      mul_self_nonneg (x * z - y * y), mul_self_nonneg (y * x - z * y),\n      mul_self_nonneg (z * y - x * z), mul_self_nonneg (x * y - y * z),\n      mul_self_nonneg (y * z - z * x), mul_self_nonneg (z * x - x * y)]\n    positivity\n  nlinarith"
  ]
 },
 {
  "old": "{a b c : \u211d} (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (hab : a + b + c = 1) : 2 * (a^6 + b^6 + c^6) + 4 * (a^3 * b^3 + b^3 * c^3 + c^3 * a^3) \u2265 3 * (a^4 * b * c + b^4 * c * a + c^4 * a * b) + 9 * a * b * c := by",
  "new": "(ha : a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0) (hab : a + b + c = 1) : 3 * (a^2 * b * c + b^2 * c * a + c^2 * a * b) + 9 * a * b * c \u2264 3 * (a^3 + b^3 + c^3) + 9 * a * b * c:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (ha : a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0) (hab : a + b + c = 1)  : 3 * (a^2 * b * c + b^2 * c * a + c^2 * a * b) + 9 * a * b * c \u2264 3 * (a^3 + b^3 + c^3) + 9 * a * b * c:= by\n  simp [mul_assoc]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_nonneg ha.1 ha.2.1, mul_nonneg ha.2.1 ha.2.2, mul_nonneg ha.1 ha.2.2, mul_nonneg (sq_nonneg a) ha.2.1, mul_nonneg (sq_nonneg b) ha.2.2, mul_nonneg (sq_nonneg c) ha.1]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (ha : a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0) (hab : a + b + c = 1)  : 3 * (a^2 * b * c + b^2 * c * a + c^2 * a * b) + 9 * a * b * c \u2264 3 * (a^3 + b^3 + c^3) + 9 * a * b * c:= by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_nonneg (ha.1) (ha.2.1), mul_nonneg (ha.2.1) (ha.2.2), mul_nonneg (ha.1) (ha.2.2), mul_nonneg (mul_nonneg ha.1 ha.2.1) ha.2.2, mul_nonneg (mul_nonneg ha.1 ha.2.2) ha.2.1, mul_nonneg (mul_nonneg ha.2.1 ha.2.2) ha.1]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (ha : a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0) (hab : a + b + c = 1)  : 3 * (a^2 * b * c + b^2 * c * a + c^2 * a * b) + 9 * a * b * c \u2264 3 * (a^3 + b^3 + c^3) + 9 * a * b * c:= by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_nonneg ha.2.1 (mul_nonneg ha.2.2 ha.1), mul_nonneg ha.2.2 ha.1, mul_nonneg ha.1 ha.2.1,\n    mul_nonneg (sq_nonneg (a - b)) ha.2.2, mul_nonneg (sq_nonneg (b - c)) ha.1, mul_nonneg (sq_nonneg (c - a)) ha.2.1]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (ha : a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0) (hab : a + b + c = 1)  : 3 * (a^2 * b * c + b^2 * c * a + c^2 * a * b) + 9 * a * b * c \u2264 3 * (a^3 + b^3 + c^3) + 9 * a * b * c:= by\n  nlinarith [sq_nonneg (a - b), mul_nonneg ha.1 (mul_nonneg ha.2.1 ha.2.2), mul_nonneg ha.2.2 ha.1, mul_nonneg ha.2.1 ha.1, mul_nonneg ha.2.2 (mul_nonneg ha.2.1 ha.1)]\n  <;> simp [hab]\n  <;> nlinarith\n  <;> nlinarith"
  ]
 },
 {
  "old": "(p n : \u2115) (hp : p.Prime) : p^n \u2223 (choose (p^n) p) - p^(n-1) := by",
  "new": "(p : \u2115) {n : \u2115} (hn : n \u2260 0) (hp : p.Prime) : p \u2223 n \u2228 (Nat.Coprime p n):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {n : \u2115} (hn : n \u2260 0) (hp : p.Prime) :\n     p \u2223 n \u2228 (Nat.Coprime p n):= by\n  refine' or_iff_not_imp_left.mpr fun h => _\n  simpa [hn] using hp.coprime_iff_not_dvd.mpr h"
  ]
 },
 {
  "old": "(p : \u2115) (hp : p.Prime) : p \u2223 (\u2211 i in Finset.range p, (i ^ 2)) := by",
  "new": "(p : \u2115) {n : \u2115} (hn : n \u2260 0) (hp : p.Prime) : p \u2223 n \u2228 (Nat.Coprime p n):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {n : \u2115} (hn : n \u2260 0) (hp : p.Prime) :\n     p \u2223 n \u2228 (Nat.Coprime p n):= by\n  by_cases h : p \u2223 n <;> by_cases h' : p = n <;> simp_all [Nat.Prime.coprime_iff_not_dvd, hn]\n  all_goals try simp_all [Nat.Prime.coprime_iff_not_dvd, hn]\n  all_goals try omega\n  all_goals try simp_all\n  all_goals try omega\n  all_goals try simp_all\n  all_goals try omega"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : 9 * (a^2 + b * c) * (b^2 + c * a) * (c^2 + a * b) \u2264 8 * (a^3 + b^3 + c^3)^2 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : 4 * (x * y / (x + y) + y * z / (y + z) + z * x / (z + x)) \u2264 (x + y + z)^2 / (x + y + z) + (x + 2 * (y + z)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n  4 * (x * y / (x + y) + y * z / (y + z) + z * x / (z + x)) \u2264 (x + y + z)^2 / (x + y + z)  + (x + 2 * (y + z)) := by\n  have h1 : x * y / (x + y) + y * z / (y + z) + z * x / (z + x) \u2264 (x + y + z) / 2 := by\n    rw [add_assoc]\n    have h11 : x * y / (x + y) \u2264 (x + y) / 4 := by\n      rw [div_le_div_iff (by linarith) (by linarith)]\n      nlinarith [sq_nonneg (x - y)]\n    have h12 : y * z / (y + z) \u2264 (y + z) / 4 := by\n      rw [div_le_div_iff (by linarith) (by linarith)]\n      nlinarith [sq_nonneg (y - z)]\n    have h13 : z * x / (z + x) \u2264 (z + x) / 4 := by\n      rw [div_le_div_iff (by linarith) (by linarith)]\n      nlinarith [sq_nonneg (z - x)]\n    linarith\n  have h2 : (x + y + z) ^ 2 / (x + y + z) \u2265 x + y + z := by\n    rw [ge_iff_le, le_div_iff (by linarith)]\n    nlinarith\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n  4 * (x * y / (x + y) + y * z / (y + z) + z * x / (z + x)) \u2264 (x + y + z)^2 / (x + y + z)  + (x + 2 * (y + z)) := by\n  have h\u2080 : 0 < x + y := by linarith\n  have h\u2081 : 0 < y + z := by linarith\n  have h\u2082 : 0 < z + x := by linarith\n  have h\u2083 : 0 < x * y := by positivity\n  have h\u2084 : 0 < y * z := by positivity\n  have h\u2085 : 0 < z * x := by positivity\n  have h\u2086 : 0 < (x + y) * (y + z) * (z + x) := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_self_nonneg (x * y - y * z), mul_self_nonneg (y * z - z * x), mul_self_nonneg (z * x - x * y)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b^2 + c^2 = 1) : (1 - a^2) / (1 + a^2) + (1 - b^2) / (1 + b^2) + (1 - c^2) / (1 + c^2) \u2264 (3 / 5) * (b / a + c / b + a / c) := by",
  "new": ": \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a * b * c = 1 \u2192 a ^ 2 + b ^ 2 + c ^ 2 + (1 / a + 1 / b + 1 / c) \u2265 6 * a * b * c * (1 / 3) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a * b * c = 1 \u2192\n    a ^ 2 + b ^ 2 + c ^ 2 + (1 / a + 1 / b + 1 / c) \u2265 6 * a * b * c * (1 / 3)  := by\n  intro a b c h\n  have ha : 0 < a := h.1\n  have hb : 0 < b := h.2.1\n  have hc : 0 < c := h.2.2.1\n  have habc : a * b * c = 1 := h.2.2.2\n  field_simp [habc]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n    mul_self_nonneg (a + b + c)]\n  <;> linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a * b * c = 1 \u2192\n    a ^ 2 + b ^ 2 + c ^ 2 + (1 / a + 1 / b + 1 / c) \u2265 6 * a * b * c * (1 / 3)  := by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have h\u2080 : 0 < a * b := by positivity\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * a := by positivity\n  field_simp [ha.ne', hb.ne', hc.ne', h\u2080.ne', h\u2081.ne', h\u2082.ne', habc]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a - 1), mul_self_nonneg (b - 1), mul_self_nonneg (c - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a * b * c = 1 \u2192\n    a ^ 2 + b ^ 2 + c ^ 2 + (1 / a + 1 / b + 1 / c) \u2265 6 * a * b * c * (1 / 3)  := by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have h\u2081 : a * b > 0 := mul_pos ha hb\n  have h\u2082 : a * c > 0 := mul_pos ha hc\n  have h\u2083 : b * c > 0 := mul_pos hb hc\n  field_simp [habc]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n    sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a * b * c = 1 \u2192\n    a ^ 2 + b ^ 2 + c ^ 2 + (1 / a + 1 / b + 1 / c) \u2265 6 * a * b * c * (1 / 3)  := by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have : 0 < a * b * c := by positivity\n  field_simp [habc]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n    mul_self_nonneg (a - 1), mul_self_nonneg (b - 1), mul_self_nonneg (c - 1)]\n  <;> linarith\n  <;> norm_num"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : (Real.sqrt (a + (b - c) ^ 2) + Real.sqrt (b + (c - a) ^ 2) + Real.sqrt (c + (a - b) ^ 2)) \u2265 Real.sqrt 3 := by",
  "new": "(x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 1) : Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) + Real.sqrt (y ^ 2 + z ^ 2 + x ^ 2) + Real.sqrt (z ^ 2 + x ^ 2 + y ^ 2) \u2265 Real.sqrt 3 * (x + y + z) / 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 1) :\n     Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) + Real.sqrt (y ^ 2 + z ^ 2 + x ^ 2) +\n     Real.sqrt (z ^ 2 + x ^ 2 + y ^ 2) \u2265 Real.sqrt 3 * (x + y + z) / 3:= by\n  have h\u2081 : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg 3\n  have h\u2082 : Real.sqrt 3 \u2264 3 := by norm_num [Real.sqrt_le_iff]\n  have h\u2083 : Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) \u2265 (x + y + z) / 3 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  have h\u2084 : Real.sqrt (y ^ 2 + z ^ 2 + x ^ 2) \u2265 (y + z + x) / 3 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (y - z), sq_nonneg (y - x), sq_nonneg (z - x)]\n  have h\u2085 : Real.sqrt (z ^ 2 + x ^ 2 + y ^ 2) \u2265 (z + x + y) / 3 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (z - x), sq_nonneg (z - y), sq_nonneg (x - y)]\n  nlinarith [h, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 1) :\n     Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) + Real.sqrt (y ^ 2 + z ^ 2 + x ^ 2) +\n     Real.sqrt (z ^ 2 + x ^ 2 + y ^ 2) \u2265 Real.sqrt 3 * (x + y + z) / 3:= by\n  have h\u2081 : Real.sqrt 3 \u2265 0 := Real.sqrt_nonneg _\n  have h\u2082 : Real.sqrt 3 ^ 2 = 3 := Real.sq_sqrt (by norm_num)\n  have h\u2083 : x ^ 2 + y ^ 2 + z ^ 2 \u2265 0 := by positivity\n  have h\u2084 : y ^ 2 + z ^ 2 + x ^ 2 \u2265 0 := by positivity\n  have h\u2085 : z ^ 2 + x ^ 2 + y ^ 2 \u2265 0 := by positivity\n  have h\u2086 : Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) \u2265 (x + y + z) / 3 := by\n    apply le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  have h\u2087 : Real.sqrt (y ^ 2 + z ^ 2 + x ^ 2) \u2265 (x + y + z) / 3 := by\n    apply le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  have h\u2088 : Real.sqrt (z ^ 2 + x ^ 2 + y ^ 2) \u2265 (x + y + z) / 3 := by\n    apply le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  nlinarith\n  <;> norm_num"
  ]
 },
 {
  "old": "(n : \u2115) (a : \u2115 \u2192 \u211d) (hn: 1 < n) : ((n - 1) * \u2211 i in Finset.range n, (a i) ^ 2) + n * (\u220f i in Finset.range n, (a i) ^ 2) ^ (1 / n) \u2265 (\u2211 i in Finset.range n, a i) ^ 2 := by",
  "new": "(x y : \u211d) (n : \u2115) (hn : 1 < n) : ((n - 1) * (x ^ 2 + y ^ 2)) + n * (x * y) ^ (2 / n) \u2265 (x + y) ^ 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (x y : \u211d) (n : \u2115) (hn : 1 < n) :\n     ((n - 1) * (x ^ 2 + y ^ 2)) + n * (x * y) ^ (2 / n) \u2265 (x + y) ^ 2:= by\n  rcases n with (_ | _ | _ | n) <;>\n    simp_all [Nat.div_eq_of_lt] <;>\n    ring_nf <;>\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x + y), sq_nonneg x, sq_nonneg y]\n  <;>\n    nlinarith\n  <;>\n    nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (x y : \u211d) (n : \u2115) (hn : 1 < n) :\n     ((n - 1) * (x ^ 2 + y ^ 2)) + n * (x * y) ^ (2 / n) \u2265 (x + y) ^ 2:= by\n  rcases n with (_ | _ | _ | n) <;> simp_all [Nat.div_eq_of_lt, Nat.div_eq_of_lt, Nat.div_eq_of_lt] <;>\n    ring_nf\n  all_goals nlinarith [sq_nonneg (x - y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (x y : \u211d) (n : \u2115) (hn : 1 < n) :\n     ((n - 1) * (x ^ 2 + y ^ 2)) + n * (x * y) ^ (2 / n) \u2265 (x + y) ^ 2:= by\n  rcases n with (_ | _ | _ | _) <;> norm_num at hn <;>\n  simp_all [Nat.div_eq_of_lt, Nat.div_eq_of_lt, Nat.div_eq_of_lt, Nat.div_eq_of_lt] <;>\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x + y)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (8 * (a + b + c) ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) + 3 * (a + b) * (b + c) * (c + a) / (a * b * c)) \u2265 48 := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a * b * c \u2260 0 \u2192 (3 * (a + b) * (b + c) * (c + a) / (a * b * c) + 3 * (a ^ 2 + b ^ 2 + c ^ 2) / (a * b + b * c + c * a)) \u2265 3 * (2 * Real.sqrt (a * b) / (a + b) + 2 * Real.sqrt (b * c) / (b + c) + 2 * Real.sqrt (c * a) / (c + a)):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a * b * c \u2260 0 \u2192\n     (3 * (a + b) * (b + c) * (c + a) / (a * b * c) + 3 * (a ^ 2 + b ^ 2 + c ^ 2) / (a * b + b * c + c * a)) \u2265 3 * (2 * Real.sqrt (a * b) / (a + b) + 2 * Real.sqrt (b * c) / (b + c) + 2 * Real.sqrt (c * a) / (c + a)):= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have h1 : 0 < a := lt_of_le_of_ne ha (by rintro rfl; simp_all)\n  have h2 : 0 < b := lt_of_le_of_ne hb (by rintro rfl; simp_all)\n  have h3 : 0 < c := lt_of_le_of_ne hc (by rintro rfl; simp_all)\n  have h4 : 0 < a * b := by positivity\n  have h5 : 0 < b * c := by positivity\n  have h6 : 0 < c * a := by positivity\n  have h7 : 0 < a * b * c := by positivity\n  have h8 : 3 * (a + b) * (b + c) * (c + a) / (a * b * c) \u2265 9 := by\n    rw [mul_comm]\n    apply (le_div_iff h7).mpr\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  have h9 : 3 * (a ^ 2 + b ^ 2 + c ^ 2) / (a * b + b * c + c * a) \u2265 3 := by\n    apply (le_div_iff (by positivity)).mpr\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  have h10 : Real.sqrt (a * b) \u2264 (a + b) / 2 := by\n    rw [Real.sqrt_le_left (by positivity)]\n    nlinarith [sq_nonneg (a - b)]\n  have h11 : Real.sqrt (b * c) \u2264 (b + c) / 2 := by\n    rw [Real.sqrt_le_left (by positivity)]\n    nlinarith [sq_nonneg (b - c)]\n  have h12 : Real.sqrt (c * a) \u2264 (c + a) / 2 := by\n    rw [Real.sqrt_le_left (by positivity)]\n    nlinarith [sq_nonneg (c - a)]\n  have h13 : 2 * Real.sqrt (a * b) / (a + b) \u2264 1 := by\n    rw [div_le_iff (show (0 : \u211d) < a + b by positivity)]\n    nlinarith [sq_nonneg (a - b)]\n  have h14 : 2 * Real.sqrt (b * c) / (b + c) \u2264 1 := by\n    rw [div_le_iff (show (0 : \u211d) < b + c by positivity)]\n    nlinarith [sq_nonneg (b - c)]\n  have h15 : 2 * Real.sqrt (c * a) / (c + a) \u2264 1 := by\n    rw [div_le_iff (show (0 : \u211d) < c + a by positivity)]\n    nlinarith [sq_nonneg (c - a)]\n  nlinarith\n  <;> try norm_num"
  ]
 },
 {
  "old": "(n : \u2124) (hn : n > 0) : \u00ac \u2203 x y : \u2124, x > 0 \u2227 y > 0 \u2227 (Real.sqrt n + Real.sqrt (n+1)) < (Real.sqrt x + Real.sqrt y) \u2227 (Real.sqrt x + Real.sqrt y) < (Real.sqrt (4*n + 2)) := by",
  "new": "(x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac (Nat.Coprime x y):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac (Nat.Coprime x y):= by\n  apply em\n  <;> simp [Nat.coprime_comm]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac (Nat.Coprime x y):= by\n  apply by_cases (fun h : Nat.Coprime x y => Or.inl h)\n  intro h\n  exact Or.inr h"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^2 + b + 3 / 4) * (b^2 + c + 3 / 4) * (c^2 + a + 3 / 4) \u2265 (2 * a + 1 / 2) * (2 * b + 1 / 2) * (2 * c + 1 / 2) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x^2 + y^2 + z^2 + 3) * (x^2 + y^2 + z^2 + 3) \u2265 4 * (x * y + y * z + z * x) * (x * z + y * z + x * y) / (x + y + z) / (x + y + z):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   (x^2 + y^2 + z^2 + 3) * (x^2 + y^2 + z^2 + 3) \u2265 4 * (x * y + y * z + z * x) * (x * z + y * z + x * y) / (x + y + z) / (x + y + z):= by\n  have t : 0 < x + y + z := add_pos (add_pos hx hy) hz\n  have h\u2081 : 0 < x * x := mul_pos hx hx\n  have h\u2082 : 0 < y * y := mul_pos hy hy\n  have h\u2083 : 0 < z * z := mul_pos hz hz\n  have h\u2084 : 0 < x * y := mul_pos hx hy\n  have h\u2085 : 0 < x * z := mul_pos hx hz\n  have h\u2086 : 0 < y * z := mul_pos hy hz\n  field_simp\n  rw [div_le_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_self_nonneg (x * x - y * y), mul_self_nonneg (y * y - z * z),\n    mul_self_nonneg (z * z - x * x),\n    mul_self_nonneg (x * x + y * y + z * z),\n    mul_self_nonneg (x * y - x * z),\n    mul_self_nonneg (y * z - x * y),\n    mul_self_nonneg (x * z - y * z)]"
  ]
 },
 {
  "old": "{n : \u2124} (h : n % 3 \u2260 0) : n ^ 2 \u2261 1 [ZMOD 3] := by",
  "new": "(i : \u2115) (hi : \u2203 j, 0 < j \u2227 i * j = 1) : i \u2223 1 \u2228 i = 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_mul_eq_one (i : \u2115) (hi : \u2203 j, 0 < j \u2227 i * j = 1) : i \u2223 1 \u2228 i = 0:= by\n  obtain \u27e8j, hj_pos, hj_mul\u27e9 := hi\n  rcases i with (_ | _ | i) <;> simp_all [mul_eq_one]\n  all_goals omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_mul_eq_one (i : \u2115) (hi : \u2203 j, 0 < j \u2227 i * j = 1) : i \u2223 1 \u2228 i = 0:= by\n  rcases hi with \u27e8j, hj, h\u27e9\n  rw [\u2190 h]\n  cases' j with j\n  all_goals simp_all",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_mul_eq_one (i : \u2115) (hi : \u2203 j, 0 < j \u2227 i * j = 1) : i \u2223 1 \u2228 i = 0:= by\n  rcases hi with \u27e8j, hj, hij\u27e9\n  rw [Nat.dvd_one]\n  apply or_iff_not_imp_right.mpr\n  intro h\n  have : j \u2260 0 := by linarith\n  rw [\u2190 mul_one i] at hij\n  simp_all [Nat.mul_left_cancel_iff]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_mul_eq_one (i : \u2115) (hi : \u2203 j, 0 < j \u2227 i * j = 1) : i \u2223 1 \u2228 i = 0:= by\n  obtain \u27e8j, hj, hj'\u27e9 := hi\n  cases' i with i\n  all_goals simp_all\n  all_goals omega"
  ]
 },
 {
  "old": "(a b c : \u211d) (h : a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1): (a^2+2*b*c)*(b^2+2*a*c)*(c^2+2*a*b) \u2265 (a*b+b*c+c*a)^3 := by",
  "new": "(n : \u2115) (hn : n > 1) : (\u2203 x y : \u2115, x.Coprime y \u2227 n = x * y) \u2228 (\u2200 x y : \u2115, x.Coprime y \u2192 n \u2260 x * y) \u2227 n \u2264 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_small_coprime (n : \u2115) (hn : n > 1) :\n    (\u2203 x y : \u2115, x.Coprime y \u2227 n = x * y) \u2228 (\u2200 x y : \u2115, x.Coprime y \u2192 n \u2260 x * y) \u2227 n \u2264 4:= by\n  apply or_iff_not_imp_right.mpr\n  intro h\n  push_neg at h\n  use 1\n  use n\n  simp [hn, h]\n  <;> omega\n  <;> simp [Coprime, dvd_one]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_small_coprime (n : \u2115) (hn : n > 1) :\n    (\u2203 x y : \u2115, x.Coprime y \u2227 n = x * y) \u2228 (\u2200 x y : \u2115, x.Coprime y \u2192 n \u2260 x * y) \u2227 n \u2264 4:= by\n  apply or_iff_not_imp_right.2\n  intro h\n  use 1, n\n  simp [hn, h]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a^2 / b + b^2 / c + c^2 / a \u2265 (3 * a^2 + 3 * b^2 + 3 * c^2)^((1:\u211d) / 2) := by",
  "new": ": \u2200 x : \u211d, x > 0 \u2192 x ^ 2 / (2 * x + 1) + 1 / 2 \u2265 x / 3 \u2227 x ^ 2 / (2 * x + 1) \u2264 x:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 2 / (2 * x + 1) + 1 / 2 \u2265 x / 3 \u2227 x ^ 2 / (2 * x + 1) \u2264 x:= by\n  intro x x_pos\n  constructor\n  \u00b7 have h\u2080 : 0 < 2 * x + 1 := by linarith\n    field_simp [h\u2080]\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (x - 1), x_pos]\n  \u00b7 have h\u2080 : 0 < 2 * x + 1 := by linarith\n    rw [div_le_iff (by positivity)]\n    nlinarith [sq_nonneg (x - 1), x_pos]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 2 / (2 * x + 1) + 1 / 2 \u2265 x / 3 \u2227 x ^ 2 / (2 * x + 1) \u2264 x:= by\n  intro x hx\n  have : 0 < x := hx\n  constructor\n  case left =>\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (x - 1), sq_nonneg (x - 2)]\n  case right =>\n    rw [div_le_iff (by positivity)]\n    nlinarith [sq_nonneg (x - 1), sq_nonneg (x - 2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 2 / (2 * x + 1) + 1 / 2 \u2265 x / 3 \u2227 x ^ 2 / (2 * x + 1) \u2264 x:= by\n  intro x hx\n  have hx' : x > 0 := hx\n  have hx'' : x ^ 2 / (2 * x + 1) + 1 / 2 \u2265 x / 3 := by\n    rw [ge_iff_le]\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (x - 1), sq_nonneg (x - 1 / 2)]\n  have hx''' : x ^ 2 / (2 * x + 1) \u2264 x := by\n    rw [div_le_iff (by positivity)]\n    nlinarith [sq_nonneg (x - 1)]\n  exact \u27e8hx'', hx'''\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 2 / (2 * x + 1) + 1 / 2 \u2265 x / 3 \u2227 x ^ 2 / (2 * x + 1) \u2264 x:= by\n  intro x hx\n  constructor\n  \u00b7 field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    ring_nf\n    nlinarith [sq_nonneg (x - 1)]\n  \u00b7 apply le_of_sub_nonneg\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x - 1)]"
  ]
 },
 {
  "old": "(n : \u2115) (hn : 1 \u2264 n) : Real.sqrt (\u03c0 * (n + 1 / 4)) < (2 * n)!! / (2 * n - 1)!! \u2227 (2 * n)!! / (2 * n - 1)!! < Real.sqrt (\u03c0 * (n + 1 / 3)) := by",
  "new": "{n : \u2115} (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two {n : \u2115} (hn : 2 \u2264 n) :\n    Nat.Coprime (fib n) (fib (n + 1)):= by\n  induction' hn with n hn <;> simp_all [fib_add_two, Nat.coprime_iff_gcd_eq_one,\n    Nat.gcd_comm]\n  <;> norm_num\n  <;> rfl\n  <;> simp_all [fib_add_two, Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm]\n  <;> norm_num\n  <;> rfl"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^2 + b^2 + c^2) / (a * b + b * c + c * a) + 8 * a * b * c / ( (a + b) * (b + c) * (c + a)) >= 2 := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 (a^2 + b^2 + c^2) / (a * b + b * c + c * a) + 8 * a * b * c / ( (a + b) * (b + c) * (c + a)) >= 2 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 (a^2 + b^2 + c^2) / (a * b + b * c + c * a) + 8 * a * b * c / ( (a + b) * (b + c) * (c + a)) >= 2 := by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le,\n    mul_nonneg (sq_nonneg (a - b)) hc.le, mul_nonneg (sq_nonneg (b - c)) ha.le,\n    mul_nonneg (sq_nonneg (c - a)) hb.le, sq_nonneg (a - b - c),\n    sq_nonneg (b - c - a), sq_nonneg (c - a - b)]\n  <;> norm_num"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 1) : 10 * (a ^ 3 + b ^ 3 + c ^ 3) \u2265 1 + 9 * (a ^ 5 + b ^ 5 + c ^ 5) := by",
  "new": "(a b : \u2115) (hab : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (hab : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  have : a * b = 1 := hab\n  cases' Nat.eq_zero_or_pos a with ha ha <;>\n    cases' Nat.eq_zero_or_pos b with hb hb <;>\n    simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  all_goals omega\n  <;>\n  aesop\n  <;>\n  omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (hab : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  have : a * b = 1 := hab\n  cases' a with a <;> cases' b with b <;> simp_all [Nat.mul_eq_zero, Nat.succ_ne_zero]\n  all_goals\n    omega\n  <;> try { omega }\n  <;> try { aesop }\n  <;> try { omega }\n  <;> try { aesop }\n  <;> try { omega }\n  <;> try { aesop }\n  <;> try { omega }\n  <;> try { aesop }\n  <;> try { omega }\n  <;> try { aesop }\n  <;> try { omega }\n  <;> try { aesop }\n  <;> try { omega }\n  <;> try { aesop }\n  <;> try { omega }",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (hab : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  have : a * b = 1 := hab\n  cases' a with a <;> cases' b with b <;> simp_all [Nat.mul_eq_zero, Nat.succ_ne_zero]\n  all_goals\n    first | exact Or.inr (Nat.coprime_iff_gcd_eq_one.mpr (by simp)) | simp_all [Nat.mul_eq_zero, Nat.succ_ne_zero]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (hab : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  simp [Nat.eq_one_of_mul_eq_one_left, Nat.eq_one_of_mul_eq_one_right, Nat.coprime_iff_gcd_eq_one,\n    Nat.gcd_eq_right, Nat.gcd_eq_left] at hab \u22a2\n  aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : x + y + z = 3) (hx0 : 0 \u2264 x) (hy0 : 0 \u2264 y) (hz0 : 0 \u2264 z) : (64 / 27) * (x + y + z) ^ 3 * x * y * z \u2264 (x + y) ^ 2 * (y + z) ^ 2 * (z + x) ^ 2 := by",
  "new": ": \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2227 x + y + z = 3 \u2192 64 / 27 * (x + y + z) ^ 3 * x * y * z \u2264 (x + y) ^ 2 * (y + z) ^ 2 * (z + x) ^ 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2227 x + y + z = 3 \u2192\n   64 / 27 * (x + y + z) ^ 3 * x * y * z \u2264 (x + y) ^ 2 * (y + z) ^ 2 * (z + x) ^ 2:= by\n  rintro x y z \u27e8hx, hy, hz, h\u27e9\n  have h\u2081 : 0 < x * y := by positivity\n  have h\u2082 : 0 < y * z := by positivity\n  have h\u2083 : 0 < z * x := by positivity\n  have h\u2084 : 0 < (x * y) * (y * z) := by positivity\n  have h\u2085 : 0 < (y * z) * (z * x) := by positivity\n  have h\u2086 : 0 < (z * x) * (x * y) := by positivity\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x * y + y * z + z * x),\n    mul_self_nonneg (x * y - y * z),\n    mul_self_nonneg (y * z - z * x),\n    mul_self_nonneg (z * x - x * y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2227 x + y + z = 3 \u2192\n   64 / 27 * (x + y + z) ^ 3 * x * y * z \u2264 (x + y) ^ 2 * (y + z) ^ 2 * (z + x) ^ 2:= by\n  rintro x y z \u27e8hx, hy, hz, h\u27e9\n  have h1 : 0 < x * y := by positivity\n  have h2 : 0 < y * z := by positivity\n  have h3 : 0 < z * x := by positivity\n  have h4 : 0 < x * y * z := by positivity\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x * y + y * z + z * x), mul_self_nonneg (x * y - y * z),\n    mul_self_nonneg (y * z - z * x), mul_self_nonneg (z * x - x * y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2227 x + y + z = 3 \u2192\n   64 / 27 * (x + y + z) ^ 3 * x * y * z \u2264 (x + y) ^ 2 * (y + z) ^ 2 * (z + x) ^ 2:= by\n  intro x y z h\n  have hx : 0 < x := h.1\n  have hy : 0 < y := h.2.1\n  have hz : 0 < z := h.2.2.1\n  have hxy : 0 < x * y := mul_pos hx hy\n  have hyz : 0 < y * z := mul_pos hy hz\n  have hxz : 0 < z * x := mul_pos hz hx\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x * y + y * z + z * x),\n    mul_self_nonneg (x * y - y * z), mul_self_nonneg (y * z - z * x),\n    mul_self_nonneg (z * x - x * y)]\n  <;> assumption\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2227 x + y + z = 3 \u2192\n   64 / 27 * (x + y + z) ^ 3 * x * y * z \u2264 (x + y) ^ 2 * (y + z) ^ 2 * (z + x) ^ 2:= by\n  rintro x y z \u27e8hx, hy, hz, h\u27e9\n  have h1 : 0 < x * y := by positivity\n  have h2 : 0 < y * z := by positivity\n  have h3 : 0 < z * x := by positivity\n  have h4 : 0 < x * y * z := by positivity\n  have h5 : 0 < x * y * z * (x + y + z) := by positivity\n  have h6 : 0 < x * y * z * (x + y + z) * (x + y + z) := by positivity\n  field_simp [h]\n  ring_nf\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x * y - y * z), mul_self_nonneg (y * z - z * x),\n    mul_self_nonneg (z * x - x * y)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (habc : a * b * c = 1) : 1 / a + 2 / b + 2 / c + 1 / (2 * a * b + 1) + 1 / (b * c + 1) + 1 / (2 * c * a + 1) \u2265 3 / 5 * (1 + 2 * (2 : \u211d) ^ (1 / 3) + 4 * (4 : \u211d) ^ (1 / 3)) := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192 1 / a + 2 / b + 2 / c + 1 / (2 * a * b + 1) + 1 / (b * c + 1) + 1 / (2 * c * a + 1) \u2265 3 / 5 * (1 + 2 * (2 : \u211d) ^ (1 / 3) + 4 * (4 : \u211d) ^ (1 / 3)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192\n   1 / a + 2 / b + 2 / c + 1 / (2 * a * b + 1) + 1 / (b * c + 1) + 1 / (2 * c * a + 1) \u2265\n    3 / 5 * (1 + 2 * (2 : \u211d) ^ (1 / 3) + 4 * (4 : \u211d) ^ (1 / 3)) := by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  norm_num\n  have h1 : 0 < a * b := by positivity\n  have h2 : 0 < b * c := by positivity\n  have h3 : 0 < 2 * a * b := by positivity\n  have h4 : 0 < b * c := by positivity\n  have h5 : 0 < 2 * c * a := by positivity\n  have h6 : 0 < 2 * a * b * (b * c) := by positivity\n  have h7 : 0 < 2 * c * a * (2 * a * b) := by positivity\n  have h8 : 0 < 2 * c * a * (b * c) := by positivity\n  field_simp [habc]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n    mul_self_nonneg (a * b - 1), mul_self_nonneg (b * c - 1), mul_self_nonneg (c * a - 1)]"
  ]
 },
 {
  "old": "(x : \u211d) (p : \u211d) (hp : 1 \u2264 p) (hx : 0 < x) : 4 * (p * x + 1 / x ^ p - (p + 1)) * (p * x + x ^ p - (p + 1)) \u2265 (p * (p + 1) * (x + 1 / x - 2)) ^ 2 := by",
  "new": "{x y : \u211d} (hx : x > 0) (hy : y > 0) (h : x + y = 1) : x ^ 2 * y ^ 2 * (x + y) ^ 2 / (x * y * (x * y)) \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {x y : \u211d} (hx : x > 0) (hy : y > 0) (h : x + y = 1) :\n      x ^ 2 * y ^ 2 * (x + y) ^ 2 / (x * y * (x * y)) \u2264 1:= by\n  have h\u2080 : 0 < x * y := mul_pos hx hy\n  have h\u2081 : (x + y) ^ 2 = 1 := by simp [h]\n  have h\u2082 : x * y * (x * y) > 0 := by positivity\n  have h\u2083 : x ^ 2 * y ^ 2 * (x + y) ^ 2 / (x * y * (x * y)) = 1 := by\n    rw [h\u2081]\n    field_simp\n    <;> ring\n  linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {x y : \u211d} (hx : x > 0) (hy : y > 0) (h : x + y = 1) :\n      x ^ 2 * y ^ 2 * (x + y) ^ 2 / (x * y * (x * y)) \u2264 1:= by\n  have h\u2082 : 0 < x * y := mul_pos hx hy\n  have h\u2083 : 0 < x * y * (x * y) := by positivity\n  have h\u2084 : 0 < x * y * (x * y * (x + y)) := by positivity\n  field_simp [h, h\u2082, h\u2083, h\u2084]\n  rw [div_le_iff]\n  nlinarith [sq_nonneg (x - 1 / 2), sq_nonneg (y - 1 / 2)]\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {x y : \u211d} (hx : x > 0) (hy : y > 0) (h : x + y = 1) :\n      x ^ 2 * y ^ 2 * (x + y) ^ 2 / (x * y * (x * y)) \u2264 1:= by\n  have h\u2080 : 0 < x * y := mul_pos hx hy\n  have h\u2081 : 0 < (x * y) ^ 2 := pow_pos h\u2080 2\n  have h\u2082 : 0 < x * y * (x * y) := by nlinarith\n  have h\u2083 : (x + y) ^ 2 = 1 := by simp [h]\n  have h\u2084 : x ^ 2 * y ^ 2 * (x + y) ^ 2 / (x * y * (x * y)) \u2264 1 := by\n    rw [h\u2083]\n    rw [div_le_iff (by nlinarith)]\n    nlinarith\n  exact h\u2084\n  <;> linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {x y : \u211d} (hx : x > 0) (hy : y > 0) (h : x + y = 1) :\n      x ^ 2 * y ^ 2 * (x + y) ^ 2 / (x * y * (x * y)) \u2264 1:= by\n  have : (x + y) ^ 2 = 1 := by simp [h]\n  have hx' : 0 < x * y := mul_pos hx hy\n  have hy' : 0 < x * y * (x * y) := by positivity\n  field_simp\n  rw [div_le_iff (by positivity)]\n  nlinarith\n  <;> assumption\n  <;> assumption\n  <;> assumption"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : abs x >= 2) (hy : abs y >= 2) (hz : abs z >= 2) : 4 \u2264 abs (x*y*z + 2*(x + y + z)) := by",
  "new": "(x y : \u2115) (h : x ^ 2 + y ^ 2 \u2265 2 * x * y) : (Nat.Coprime x y) \u2228 \u00ac Nat.Coprime x y := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2265 2 * x * y) : (Nat.Coprime x y) \u2228 \u00ac Nat.Coprime x y := by\n  by_cases hx : x.Coprime y\n  exacts [Or.inl hx, Or.inr fun h' => hx h' ]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2265 2 * x * y) : (Nat.Coprime x y) \u2228 \u00ac Nat.Coprime x y := by\n  by_cases h1 : Nat.Coprime x y\n  exacts [Or.inl h1, Or.inr (by simp [h1])]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2265 2 * x * y) : (Nat.Coprime x y) \u2228 \u00ac Nat.Coprime x y := by\n  by_cases h' : Nat.Coprime x y <;> simp [h']\n  <;> omega\n  <;> simp_all only [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;> omega\n  <;> simp_all only [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;> omega\n  <;> simp_all only [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;> omega\n  <;> simp_all only [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;> omega"
  ]
 },
 {
  "old": "{a b c : \u211d} (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : Real.sqrt (a / b) * Real.sqrt (b / c) + Real.sqrt (b / c) * Real.sqrt (c / a) + Real.sqrt (c / a) * Real.sqrt (a / b) \u2264 a / b + b / c + c / a := by",
  "new": "{x y z : \u211d} (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : x ^ 2 / y + y ^ 2 / z + z ^ 2 / x \u2265 2 * (x * y / (x + y) + y * z / (y + z) + z * x / (z + x)):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq {x y z : \u211d} (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) :  x ^ 2 / y + y ^ 2 / z + z ^ 2 / x \u2265 2 * (x * y / (x + y) + y * z / (y + z) + z * x / (z + x)):= by\n  have hxy : 0 < x * y := by positivity\n  have hyz : 0 < y * z := by positivity\n  have hxz : 0 < z * x := by positivity\n  have hxyz : 0 < x * y * z := by positivity\n  have h\u2081 : x ^ 2 / y + y ^ 2 / z + z ^ 2 / x \u2265 2 * (x * y / (x + y) + y * z / (y + z) + z * x / (z + x)) := by\n    have h\u2082 : x ^ 2 / y + y ^ 2 / z + z ^ 2 / x \u2265 x + y + z := by\n      field_simp\n      rw [le_div_iff (by positivity), \u2190 sub_nonneg]\n      ring_nf\n      nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n    have h\u2083 : 2 * (x * y / (x + y) + y * z / (y + z) + z * x / (z + x)) \u2264 x + y + z := by\n      field_simp\n      apply le_of_sub_nonneg\n      field_simp\n      rw [le_div_iff (by positivity)]\n      nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n    linarith\n  linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : Real.sqrt (a^2 + (1 - b)^2) + Real.sqrt (b^2 + (1 - c)^2) + Real.sqrt (c^2 + (1 - a)^2) \u2265 (3 * Real.sqrt 2) / 2 := by",
  "new": "(x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 1) : Real.sqrt (x^2 + (1 - y)^2) + Real.sqrt (y^2 + (1 - z)^2) + Real.sqrt (z^2 + (1 - x)^2) \u2265 3 * (Real.sqrt 2) / 3 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 1) :\n     Real.sqrt (x^2 + (1 - y)^2) + Real.sqrt (y^2 + (1 - z)^2) + Real.sqrt (z^2 + (1 - x)^2) \u2265 3 * (Real.sqrt 2) / 3 := by\n  have h\u2081 : Real.sqrt (x^2 + (1 - y)^2) \u2265 (Real.sqrt 2) / 2 * (x + (1 - y)) := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_sqrt (show 0 \u2264 2 by norm_num),\n      sq_nonneg (x - (1 - y))]\n  have h\u2082 : Real.sqrt (y^2 + (1 - z)^2) \u2265 (Real.sqrt 2) / 2 * (y + (1 - z)) := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_sqrt (show 0 \u2264 2 by norm_num),\n      sq_nonneg (y - (1 - z))]\n  have h\u2083 : Real.sqrt (z^2 + (1 - x)^2) \u2265 (Real.sqrt 2) / 2 * (z + (1 - x)) := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_sqrt (show 0 \u2264 2 by norm_num),\n      sq_nonneg (z - (1 - x))]\n  nlinarith [h\u2081, h\u2082, h\u2083,\n    Real.sqrt_nonneg 2,\n    Real.sqrt_nonneg 2,\n    Real.sqrt_nonneg 2]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 1) :\n     Real.sqrt (x^2 + (1 - y)^2) + Real.sqrt (y^2 + (1 - z)^2) + Real.sqrt (z^2 + (1 - x)^2) \u2265 3 * (Real.sqrt 2) / 3 := by\n  have h\u2081 : Real.sqrt (x ^ 2 + (1 - y) ^ 2) \u2265 (Real.sqrt 2) / 2 * (x + (1 - y)) := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_sqrt (show 0 \u2264 2 by norm_num),\n      mul_self_nonneg (x - (1 - y))]\n  have h\u2082 : Real.sqrt (y ^ 2 + (1 - z) ^ 2) \u2265 (Real.sqrt 2) / 2 * (y + (1 - z)) := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_sqrt (show 0 \u2264 2 by norm_num),\n      mul_self_nonneg (y - (1 - z))]\n  have h\u2083 : Real.sqrt (z ^ 2 + (1 - x) ^ 2) \u2265 (Real.sqrt 2) / 2 * (z + (1 - x)) := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_sqrt (show 0 \u2264 2 by norm_num),\n      mul_self_nonneg (z - (1 - x))]\n  nlinarith [sq_sqrt (show 0 \u2264 2 by norm_num),\n    Real.sqrt_nonneg 2]\n  <;> linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 1) :\n     Real.sqrt (x^2 + (1 - y)^2) + Real.sqrt (y^2 + (1 - z)^2) + Real.sqrt (z^2 + (1 - x)^2) \u2265 3 * (Real.sqrt 2) / 3 := by\n  have : Real.sqrt (x ^ 2 + (1 - y) ^ 2) \u2265 (Real.sqrt 2) / 3 * (x + (1 - y)) := by\n    apply Real.le_sqrt_of_sq_le\n    field_simp\n    ring_nf\n    norm_num\n    nlinarith [sq_nonneg (x - (1 - y))]\n  have : Real.sqrt (y ^ 2 + (1 - z) ^ 2) \u2265 (Real.sqrt 2) / 3 * (y + (1 - z)) := by\n    apply Real.le_sqrt_of_sq_le\n    field_simp\n    ring_nf\n    norm_num\n    nlinarith [sq_nonneg (y - (1 - z))]\n  have : Real.sqrt (z ^ 2 + (1 - x) ^ 2) \u2265 (Real.sqrt 2) / 3 * (z + (1 - x)) := by\n    apply Real.le_sqrt_of_sq_le\n    field_simp\n    ring_nf\n    norm_num\n    nlinarith [sq_nonneg (z - (1 - x))]\n  nlinarith\n  <;> simp [h]\n  <;> linarith\n  <;> norm_num"
  ]
 },
 {
  "old": ": \u00ac \u2203 x y : \u2124, x^3 - y^3 = 1993 := by",
  "new": "(x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y):= by\n  by_cases h : x.Coprime y\n  exact Or.inl h\n  exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y):= by\n  by_cases h : x.Coprime y\n  exact Or.inl h\n  exact Or.inr h\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y):= by\n  by_cases h : x.Coprime y\n  left\n  exact h\n  right\n  exact h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y):= by\n  by_cases h : x.Coprime y\n  <;> simp [h]\n  <;> tauto"
  ]
 },
 {
  "old": ": \u2200 z : \u2102, 5 * (z - 3 * Complex.I) = 2 * z + 3 * (z - 5 * Complex.I) \u2192 5 * \u2016z - 3 * Complex.I\u2016 \u2264 2 * \u2016z\u2016 + 3 * \u2016z - 5 * Complex.I\u2016 := by",
  "new": "{r\u2081 r\u2082 : \u211d} {z\u2081 z\u2082 : \u2102} (h\u2081 : \u2016z\u2081\u2016 \u2264 r\u2081) (h\u2082 : \u2016z\u2082\u2016 \u2264 r\u2082) : \u2016z\u2081 * z\u2082\u2016 \u2264 r\u2081 * r\u2082 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem norm_le_norm_mul_of_norm_le_mul {r\u2081 r\u2082 : \u211d} {z\u2081 z\u2082 : \u2102} (h\u2081 : \u2016z\u2081\u2016 \u2264 r\u2081) (h\u2082 : \u2016z\u2082\u2016 \u2264 r\u2082) : \u2016z\u2081 * z\u2082\u2016 \u2264 r\u2081 * r\u2082 := by\n  simpa [norm_mul] using mul_le_mul h\u2081 h\u2082 (norm_nonneg z\u2082) (le_trans (norm_nonneg z\u2081) h\u2081)\n  <;> rfl\n  <;> rfl\n  <;> rfl"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0) (hab : a + b + c = 2) : a ^ 3 + b ^ 3 + c ^ 3 + 4 * a * b * c \u2265 2 := by",
  "new": "(a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  rw [Nat.coprime_iff_gcd_eq_one]\n  rcases Nat.eq_zero_or_pos a with (ha | ha) <;> rcases Nat.eq_zero_or_pos b with (hb | hb) <;>\n    simp_all [Nat.gcd_mul_left, mul_eq_one]\n  all_goals omega\n  <;>\n    rcases ha with (_ | _) <;>\n    rcases hb with (_ | _) <;>\n    simp_all [Nat.mul_succ, Nat.succ_mul, Nat.gcd_zero_left, Nat.gcd_zero_right]\n  <;>\n    omega\n  <;>\n    rcases ha with (_ | _) <;>\n    rcases hb with (_ | _) <;>\n    simp_all [Nat.mul_succ, Nat.succ_mul, Nat.gcd_zero_left, Nat.gcd_zero_right]\n  <;>\n    omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  rcases Nat.eq_zero_or_pos a with (rfl | ha) <;> rcases Nat.eq_zero_or_pos b with (rfl | hb) <;>\n    simp_all [Nat.eq_one_of_mul_eq_one_right]\n  all_goals\n    first\n    | apply Or.inl\n      aesop\n    | apply Or.inr\n      simp_all [Nat.coprime_iff_gcd_eq_one, Nat.gcd_eq_right]"
  ]
 },
 {
  "old": "{a b m : \u2115} (hm : m^2 < a) (hab : a < b) (h : \u2203 k, a * b = k^2) : b > (m + 1)^2 := by",
  "new": "(h : \u2203 k, a * b = k ^ 2) : Nat.Coprime a b \u2228 \u2203 d, d ^ 2 \u2223 a * b \u2227 \u00acNat.Coprime a b \u2227 d ^ 2 \u2264 a * b:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_sqrt_dvd (h : \u2203 k, a * b = k ^ 2) : Nat.Coprime a b \u2228 \u2203 d, d ^ 2 \u2223 a * b \u2227 \u00acNat.Coprime a b \u2227 d ^ 2 \u2264 a * b:= by\n  rcases h with \u27e8k, hk\u27e9\n  by_cases h : Nat.Coprime a b\n  exacts [Or.inl h,\n    Or.inr \u27e8k, \u27e8by simp [hk], by simp [Nat.coprime_iff_gcd_eq_one, h], by simp [hk, Nat.pow_two, Nat.mul_le_mul_left]\u27e9\u27e9]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_sqrt_dvd (h : \u2203 k, a * b = k ^ 2) : Nat.Coprime a b \u2228 \u2203 d, d ^ 2 \u2223 a * b \u2227 \u00acNat.Coprime a b \u2227 d ^ 2 \u2264 a * b:= by\n  rcases h with \u27e8k, hk\u27e9\n  by_cases h1 : Nat.Coprime a b\n  exact Or.inl h1\n  right\n  use k\n  simp [hk,h1]\n  <;> omega\n  <;> simp_all\n  <;> omega"
  ]
 },
 {
  "old": "(a b c : \u211d) : 3 * (a ^ 4 + b ^ 4 + c ^ 4) * (a * b + b * c + c * a) \u2265 (a ^ 3 * b + b ^ 3 * c + c ^ 3 * a) * (a + b + c) ^ 2 := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : 3 * (a ^ 4 + b ^ 4 + c ^ 4) * (a * b + b * c + c * a) \u2265 (a ^ 3 * b + b ^ 3 * c + c ^ 3 * a) * (a + b + c) ^ 2 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_10_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n       3 * (a ^ 4 + b ^ 4 + c ^ 4) * (a * b + b * c + c * a) \u2265 (a ^ 3 * b + b ^ 3 * c + c ^ 3 * a) * (a + b + c) ^ 2  := by\n  simp only [sq]\n  ring_nf\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le,\n    mul_nonneg (sq_nonneg (a - b)) ha.le, mul_nonneg (sq_nonneg (b - c)) hb.le,\n    mul_nonneg (sq_nonneg (c - a)) hc.le, mul_nonneg (sq_nonneg (a - b)) hb.le,\n    mul_nonneg (sq_nonneg (b - c)) hc.le, mul_nonneg (sq_nonneg (c - a)) ha.le,\n    mul_nonneg (sq_nonneg a) hb.le, mul_nonneg (sq_nonneg b) hc.le, mul_nonneg (sq_nonneg c) ha.le,\n    mul_nonneg (sq_nonneg a) hc.le, mul_nonneg (sq_nonneg b) ha.le, mul_nonneg (sq_nonneg c) hb.le]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_10_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n       3 * (a ^ 4 + b ^ 4 + c ^ 4) * (a * b + b * c + c * a) \u2265 (a ^ 3 * b + b ^ 3 * c + c ^ 3 * a) * (a + b + c) ^ 2  := by\n  simp only [mul_assoc]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le,\n    mul_nonneg (sq_nonneg (a - b)) ha.le, mul_nonneg (sq_nonneg (b - c)) hb.le,\n    mul_nonneg (sq_nonneg (c - a)) hc.le, mul_nonneg (sq_nonneg (a - b)) hb.le,\n    mul_nonneg (sq_nonneg (b - c)) hc.le, mul_nonneg (sq_nonneg (c - a)) ha.le,\n    mul_nonneg (sq_nonneg a) hc.le, mul_nonneg (sq_nonneg b) ha.le, mul_nonneg (sq_nonneg c) hb.le,\n    mul_nonneg (sq_nonneg a) hb.le, mul_nonneg (sq_nonneg b) hc.le, mul_nonneg (sq_nonneg c) ha.le]"
  ]
 },
 {
  "old": ": \u2200 m : \u2115, \u2203 n : \u2115, n > m \u2227 n \u2223 2 ^ n + 2 := by",
  "new": "(p : \u2115) (hp : p.Prime) (a : \u2115) : a.Coprime p \u2228 \u2203 b : \u2115, b \u2223 a \u2227 b \u2223 p:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (hp : p.Prime) (a : \u2115) : a.Coprime p \u2228 \u2203 b : \u2115, b \u2223 a \u2227 b \u2223 p:= by\n  by_cases h : a.Coprime p\n  exacts [Or.inl h, Or.inr \u27e81, by simp [h, hp.ne_zero], by simp [h, hp.ne_zero]\u27e9]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (hp : p.Prime) (a : \u2115) : a.Coprime p \u2228 \u2203 b : \u2115, b \u2223 a \u2227 b \u2223 p:= by\n  have := hp.eq_two_or_odd\n  by_cases ha : a.Coprime p <;> by_cases hb : p \u2223 a <;> simp_all [Nat.Coprime, Nat.Prime, Nat.dvd_prime, Nat.Prime.ne_one]\n  <;> aesop"
  ]
 },
 {
  "old": "(x y z : \u211d) (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2081 : 0 < x + y + z) : (x * y + x * z + y * z) / (x * y * z) + 6 * (x + y + z) / (x * y + x * z + y * z) \u2265 15 / (2 * (x * y * z)^(1 / 3)) := by",
  "new": ": \u2200 x : \u211d, x > 0 \u2192 Real.sqrt (1 + 3 * x) * (1 + 2 * x) \u2265 3 * Real.sqrt (3 * x) - 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192\n   Real.sqrt (1 + 3 * x) * (1 + 2 * x) \u2265 3 * Real.sqrt (3 * x) - 2:= by\n  intro x hx\n  have h\u2080 : 0 < Real.sqrt (1 + 3 * x) := Real.sqrt_pos.mpr (by linarith)\n  have h\u2081 : 0 < Real.sqrt (3 * x) := Real.sqrt_pos.mpr (by linarith)\n  nlinarith [sq_sqrt (show 0 \u2264 1 + 3 * x by nlinarith),\n    sq_sqrt (show 0 \u2264 3 * x by nlinarith),\n    mul_self_nonneg (Real.sqrt (1 + 3 * x) - Real.sqrt (3 * x)),\n    mul_self_nonneg (3 * Real.sqrt (3 * x) - 2)]\n  <;> linarith\n  <;> assumption\n  <;> simp [*, mul_assoc, mul_comm, mul_left_comm] at *\n  <;> nlinarith\n  <;> simp [*, mul_assoc, mul_comm, mul_left_comm] at *\n  <;> nlinarith\n  <;> simp [*, mul_assoc, mul_comm, mul_left_comm] at *\n  <;> nlinarith\n  <;> simp [*, mul_assoc, mul_comm, mul_left_comm] at *\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192\n   Real.sqrt (1 + 3 * x) * (1 + 2 * x) \u2265 3 * Real.sqrt (3 * x) - 2:= by\n  intro x x_pos\n  have h\u2080 : 0 < Real.sqrt (1 + 3 * x) := Real.sqrt_pos.mpr (by linarith)\n  have h\u2081 : 0 < Real.sqrt (3 * x) := Real.sqrt_pos.mpr (by positivity)\n  nlinarith [sq_sqrt (by positivity : (0 : \u211d) \u2264 3 * x),\n    sq_sqrt (by positivity : (0 : \u211d) \u2264 1 + 3 * x),\n    mul_self_nonneg (Real.sqrt (1 + 3 * x) - Real.sqrt (3 * x)),\n    mul_self_nonneg (1 + 2 * x - Real.sqrt (3 * x)),\n    mul_self_nonneg (Real.sqrt (1 + 3 * x) - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192\n   Real.sqrt (1 + 3 * x) * (1 + 2 * x) \u2265 3 * Real.sqrt (3 * x) - 2:= by\n  intro x h\n  have h\u2081 : 0 < Real.sqrt (1 + 3 * x) := Real.sqrt_pos.mpr (by linarith)\n  have h\u2082 : 0 < Real.sqrt (3 * x) := Real.sqrt_pos.mpr (by positivity)\n  have h\u2083 : 0 < 2 * x := by positivity\n  have h\u2084 : 0 < Real.sqrt (1 + 3 * x) * Real.sqrt (3 * x) := by positivity\n  nlinarith [sq_sqrt (show 0 \u2264 1 + 3 * x by positivity),\n    sq_sqrt (show 0 \u2264 3 * x by positivity),\n    mul_self_nonneg (x - 1),\n    mul_self_nonneg (Real.sqrt (1 + 3 * x) - Real.sqrt (3 * x))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192\n   Real.sqrt (1 + 3 * x) * (1 + 2 * x) \u2265 3 * Real.sqrt (3 * x) - 2:= by\n  intro x hx\n  have h\u2080 : 0 < Real.sqrt (1 + 3 * x) := Real.sqrt_pos.mpr (by linarith)\n  have h\u2081 : 0 < Real.sqrt (3 * x) := Real.sqrt_pos.mpr (by positivity)\n  have h\u2082 : 0 \u2264 x * Real.sqrt (1 + 3 * x) := by positivity\n  have h\u2083 : 0 \u2264 x * Real.sqrt (3 * x) := by positivity\n  have h\u2084 : Real.sqrt (1 + 3 * x) * (1 + 2 * x) \u2265 3 * Real.sqrt (3 * x) - 2 := by\n    nlinarith [sq_sqrt (show (0 : \u211d) \u2264 1 + 3 * x by positivity),\n      sq_sqrt (show (0 : \u211d) \u2264 3 * x by positivity),\n      mul_self_nonneg (x - 1),\n      mul_self_nonneg (Real.sqrt (1 + 3 * x) - Real.sqrt (3 * x))]\n  linarith\n  <;> norm_num\n  <;> norm_num\n  <;> norm_num"
  ]
 },
 {
  "old": "{m p q : \u211d} : m ^ 6 + 4 * (m ^ 5 * p + m ^ 5 * q + n ^ 5 * m + n ^ 5 * p + p ^ 5 * q + p ^ 5 * m) + 4 * (m ^ 3 * p ^ 3 + m ^ 3 * q ^ 3 + n ^ 3 * p ^ 3 + n ^ 3 * q ^ 3 + p ^ 3 * q ^ 3 + p ^ 3 * m ^ 3) + 5 * (p ^ 4 * q ^ 2 + p ^ 4 * m ^ 2 + m ^ 4 * q ^ 2 + m ^ 4 * p ^ 2 + q ^ 4 * m ^ 2 + q ^ 4 * p ^ 2) \u2265 4 * (m ^ 3 * p * q ^ 2 + m ^ 3 * p ^ 2 * q + n ^ 3 * m * p ^ 2 + n ^ 3 * m ^ 2 * p + p ^ 3 * q * m ^ 2 + p ^ 3 * q ^ 2 * m) + 18 * (m ^ 2 * p ^ 2 * q ^ 2) := by",
  "new": "(m n p : \u211d) : m ^ 2 * p ^ 2 * q ^ 2 + m ^ 4 * p ^ 2 * q ^ 2 + m ^ 4 * p ^ 4 * q ^ 2 + m ^ 4 * p ^ 4 * q ^ 4 + m ^ 2 * n ^ 2 * p ^ 2 + m ^ 2 * n ^ 2 * p ^ 4 + m ^ 2 * n ^ 4 * p ^ 2 + m ^ 2 * n ^ 4 * p ^ 4 + n ^ 2 * p ^ 2 * q ^ 2 + n ^ 2 * p ^ 4 * q ^ 2 + n ^ 2 * p ^ 4 * q ^ 4 + n ^ 4 * p ^ 2 * q ^ 2 + n ^ 4 * p ^ 4 * q ^ 2 + n ^ 4 * p ^ 4 * q ^ 4 \u2265 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (m n p : \u211d) :\n      m ^ 2 * p ^ 2 * q ^ 2 + m ^ 4 * p ^ 2 * q ^ 2 + m ^ 4 * p ^ 4 * q ^ 2 + m ^ 4 * p ^ 4 * q ^ 4 + m ^ 2 * n ^ 2 * p ^ 2 + m ^ 2 * n ^ 2 * p ^ 4 + m ^ 2 * n ^ 4 * p ^ 2 + m ^ 2 * n ^ 4 * p ^ 4 + n ^ 2 * p ^ 2 * q ^ 2 + n ^ 2 * p ^ 4 * q ^ 2 + n ^ 2 * p ^ 4 * q ^ 4 + n ^ 4 * p ^ 2 * q ^ 2 + n ^ 4 * p ^ 4 * q ^ 2 + n ^ 4 * p ^ 4 * q ^ 4 \u2265 0:= by\n  nlinarith [sq_nonneg (m * p * q), sq_nonneg (m ^ 2 * p * q), sq_nonneg (m * n * p),\n    sq_nonneg (m ^ 2 * n * p), sq_nonneg (n * p * q), sq_nonneg (n ^ 2 * p * q),\n    sq_nonneg (n * p ^ 2 * q), sq_nonneg (n ^ 2 * p ^ 2 * q), sq_nonneg (m * n * p ^ 2),\n    sq_nonneg (m ^ 2 * n * p ^ 2), sq_nonneg (n ^ 2 * p ^ 2 * q ^ 2),\n    sq_nonneg (m * n * p * q), sq_nonneg (m ^ 2 * n * p * q), sq_nonneg (n ^ 2 * p ^ 2 * q ^ 2),\n    sq_nonneg (m * p * q ^ 2), sq_nonneg (m ^ 2 * p * q ^ 2),\n    sq_nonneg (m * n * p ^ 2 * q), sq_nonneg (m ^ 2 * n * p ^ 2 * q),\n    sq_nonneg (n * p * q ^ 2), sq_nonneg (n ^ 2 * p * q ^ 2),\n    sq_nonneg (m * n * p ^ 2 * q ^ 2), sq_nonneg (m ^ 2 * n * p ^ 2 * q ^ 2),\n    sq_nonneg (n ^ 2 * p ^ 2 * q ^ 2), sq_nonneg (n ^ 2 * p ^ 4 * q ^ 2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (m n p : \u211d) :\n      m ^ 2 * p ^ 2 * q ^ 2 + m ^ 4 * p ^ 2 * q ^ 2 + m ^ 4 * p ^ 4 * q ^ 2 + m ^ 4 * p ^ 4 * q ^ 4 + m ^ 2 * n ^ 2 * p ^ 2 + m ^ 2 * n ^ 2 * p ^ 4 + m ^ 2 * n ^ 4 * p ^ 2 + m ^ 2 * n ^ 4 * p ^ 4 + n ^ 2 * p ^ 2 * q ^ 2 + n ^ 2 * p ^ 4 * q ^ 2 + n ^ 2 * p ^ 4 * q ^ 4 + n ^ 4 * p ^ 2 * q ^ 2 + n ^ 4 * p ^ 4 * q ^ 2 + n ^ 4 * p ^ 4 * q ^ 4 \u2265 0:= by\n  simp only [mul_assoc, mul_comm, mul_left_comm]\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (m n p : \u211d) :\n      m ^ 2 * p ^ 2 * q ^ 2 + m ^ 4 * p ^ 2 * q ^ 2 + m ^ 4 * p ^ 4 * q ^ 2 + m ^ 4 * p ^ 4 * q ^ 4 + m ^ 2 * n ^ 2 * p ^ 2 + m ^ 2 * n ^ 2 * p ^ 4 + m ^ 2 * n ^ 4 * p ^ 2 + m ^ 2 * n ^ 4 * p ^ 4 + n ^ 2 * p ^ 2 * q ^ 2 + n ^ 2 * p ^ 4 * q ^ 2 + n ^ 2 * p ^ 4 * q ^ 4 + n ^ 4 * p ^ 2 * q ^ 2 + n ^ 4 * p ^ 4 * q ^ 2 + n ^ 4 * p ^ 4 * q ^ 4 \u2265 0:= by\n  simp only [add_assoc, add_right_comm, add_left_comm, add_comm]\n  positivity"
  ]
 },
 {
  "old": "(n : \u2115) (hn : 2 \u2264 n) : (2 : \u211d)^(1/n) - 1 \u2264 Real.sqrt (2/(n*(n-1))) := by",
  "new": "(n : \u2115) : (\u2203 x : \u2115, 1 < x \u2227 x \u2223 n) \u2228 (\u2200 x : \u2115, 1 < x \u2192 x \u2223 n \u2192 x = 1 \u2228 x = n) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_small_coprime (n : \u2115) :  (\u2203 x : \u2115, 1 < x \u2227 x \u2223 n) \u2228 (\u2200 x : \u2115, 1 < x \u2192 x \u2223 n \u2192 x = 1 \u2228 x = n) := by\n  refine' or_iff_not_imp_left.mpr fun h => _\n  aesop (add norm [Nat.coprime_iff_gcd_eq_one, h])",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_small_coprime (n : \u2115) :  (\u2203 x : \u2115, 1 < x \u2227 x \u2223 n) \u2228 (\u2200 x : \u2115, 1 < x \u2192 x \u2223 n \u2192 x = 1 \u2228 x = n) := by\n  by_cases h : \u2203 x : \u2115, 1 < x \u2227 x \u2223 n <;> simp [h]\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_small_coprime (n : \u2115) :  (\u2203 x : \u2115, 1 < x \u2227 x \u2223 n) \u2228 (\u2200 x : \u2115, 1 < x \u2192 x \u2223 n \u2192 x = 1 \u2228 x = n) := by\n  by_cases h : (\u2203 x : \u2115, 1 < x \u2227 x \u2223 n)\n  exact Or.inl h\n  exact Or.inr fun x hx hn => by\n    contrapose! h\n    aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop"
  ]
 },
 {
  "old": "(x y z : \u211d) (h\u2080 : x \u2265 0 \u2227 y \u2265 0 \u2227 z \u2265 0) (h\u2081 : x * y * z = 1) : 1 / (x^6 + y^6 + y^2 * z^2 + 1) + 1 / (y^6 + z^6 + z^2 * x^2 + 1) + 1 / (z^6 + x^6 + x^2 * y^2 + 1) \u2264 1 / (2 * x^3 * y^3 + y^2 * z^2 + 1) + 1 / (2 * y^3 * z^3 + z^2 * x^2 + 1) + 1 / (2 * z^3 * x^3 + x^2 * y^2 + 1) \u2227 1 / (2 * x^3 * y^3 + y^2 * z^2 + 1) + 1 / (2 * y^3 * z^3 + z^2 * x^2 + 1) + 1 / (2 * z^3 * x^3 + x^2 * y^2 + 1) \u2264 1 / 16 * (2 / (x^3 * y^3) + 1 / (y^2 * z^2) + 1) + 1 / 16 * (2 / (y^3 * z^3) + 1 / (z^2 * x^2) + 1) + 1 / 16 * (2 / (z^3 * x^3) + 1 / (x^2 * y^2) + 1) \u2227 1 / 16 * (2 / (x^3 * y^3) + 1 / (y^2 * z^2) + 1) + 1 / 16 * (2 / (y^3 * z^3) + 1 / (z^2 * x^2) + 1) + 1 / 16 * (2 / (z^3 * x^3) + 1 / (x^2 * y^2) + 1) \u2264 1 / 8 * (x^3 + y^3 + z^3) + 1 / 16 * (x^2 + y^2 + z^2) + 3 / 16 := by",
  "new": "(x y z : \u211d) (h\u2080 : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z) (h\u2081 : x * y * z = 1) : 1 / (x ^ 10 + y ^ 10 + y ^ 2 * z ^ 2 + 1) + 1 / (y ^ 10 + z ^ 10 + z ^ 2 * x ^ 2 + 1) + 1 / (z ^ 10 + x ^ 10 + x ^ 2 * y ^ 2 + 1) \u2264 1 / (2 * x ^ 5 * y ^ 5 + y ^ 2 * z ^ 2 + 1) + 1 / (2 * y ^ 5 * z ^ 5 + z ^ 2 * x ^ 2 + 1) + 1 / (2 * z ^ 5 * x ^ 5 + x ^ 2 * y ^ 2 + 1):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_x1y2z3 (x y z : \u211d) (h\u2080 : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z) (h\u2081 : x * y * z = 1)  :\n    1 / (x ^ 10 + y ^ 10 + y ^ 2 * z ^ 2 + 1) + 1 / (y ^ 10 + z ^ 10 + z ^ 2 * x ^ 2 + 1) + 1 / (z ^ 10 + x ^ 10 + x ^ 2 * y ^ 2 + 1) \u2264\n      1 / (2 * x ^ 5 * y ^ 5 + y ^ 2 * z ^ 2 + 1) + 1 / (2 * y ^ 5 * z ^ 5 + z ^ 2 * x ^ 2 + 1) + 1 / (2 * z ^ 5 * x ^ 5 + x ^ 2 * y ^ 2 + 1):= by\n  rcases h\u2080 with \u27e8hx, hy, hz\u27e9\n  have hxy : 0 \u2264 x * y := mul_nonneg hx hy\n  have hyz : 0 \u2264 y * z := mul_nonneg hy hz\n  have hxz : 0 \u2264 z * x := mul_nonneg hz hx\n  have h\u2081' : 0 < x * y * z := by nlinarith\n  have h\u2082 : 1 / (x ^ 10 + y ^ 10 + y ^ 2 * z ^ 2 + 1) \u2264 1 / (2 * x ^ 5 * y ^ 5 + y ^ 2 * z ^ 2 + 1) := by\n    rw [div_le_div_iff]\n    nlinarith [sq_nonneg (x ^ 5 - y ^ 5), pow_two_nonneg (x ^ 5 + y ^ 5), pow_two_nonneg (x ^ 5 + y ^ 5 + y ^ 2 * z ^ 2)]\n    all_goals nlinarith [pow_pos (by nlinarith : 0 < x) 5, pow_pos (by nlinarith : 0 < y) 5, pow_pos (by nlinarith : 0 < z) 5]\n  have h\u2083 : 1 / (y ^ 10 + z ^ 10 + z ^ 2 * x ^ 2 + 1) \u2264 1 / (2 * y ^ 5 * z ^ 5 + z ^ 2 * x ^ 2 + 1) := by\n    rw [div_le_div_iff]\n    nlinarith [sq_nonneg (y ^ 5 - z ^ 5), pow_two_nonneg (y ^ 5 + z ^ 5), pow_two_nonneg (y ^ 5 + z ^ 5 + z ^ 2 * x ^ 2)]\n    all_goals nlinarith [pow_pos (by nlinarith : 0 < x) 5, pow_pos (by nlinarith : 0 < y) 5, pow_pos (by nlinarith : 0 < z) 5]\n  have h\u2084 : 1 / (z ^ 10 + x ^ 10 + x ^ 2 * y ^ 2 + 1) \u2264 1 / (2 * z ^ 5 * x ^ 5 + x ^ 2 * y ^ 2 + 1) := by\n    rw [div_le_div_iff]\n    nlinarith [sq_nonneg (z ^ 5 - x ^ 5), pow_two_nonneg (z ^ 5 + x ^ 5),\n      pow_two_nonneg (z ^ 5 + x ^ 5 + x ^ 2 * y ^ 2)]\n    all_goals nlinarith [pow_pos (by nlinarith : 0 < x) 5, pow_pos (by nlinarith : 0 < y) 5, pow_pos (by nlinarith : 0 < z) 5]\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_x1y2z3 (x y z : \u211d) (h\u2080 : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z) (h\u2081 : x * y * z = 1)  :\n    1 / (x ^ 10 + y ^ 10 + y ^ 2 * z ^ 2 + 1) + 1 / (y ^ 10 + z ^ 10 + z ^ 2 * x ^ 2 + 1) + 1 / (z ^ 10 + x ^ 10 + x ^ 2 * y ^ 2 + 1) \u2264\n      1 / (2 * x ^ 5 * y ^ 5 + y ^ 2 * z ^ 2 + 1) + 1 / (2 * y ^ 5 * z ^ 5 + z ^ 2 * x ^ 2 + 1) + 1 / (2 * z ^ 5 * x ^ 5 + x ^ 2 * y ^ 2 + 1):= by\n  rcases h\u2080 with \u27e8h\u2080x, h\u2080y, h\u2080z\u27e9\n  have h\u2082 : 0 \u2264 x ^ 5 := pow_nonneg h\u2080x 5\n  have h\u2083 : 0 \u2264 y ^ 5 := pow_nonneg h\u2080y 5\n  have h\u2084 : 0 \u2264 z ^ 5 := pow_nonneg h\u2080z 5\n  have h\u2085 : 0 \u2264 x ^ 2 * y ^ 2 := mul_nonneg (pow_nonneg h\u2080x 2) (pow_nonneg h\u2080y 2)\n  have h\u2086 : 0 \u2264 y ^ 2 * z ^ 2 := mul_nonneg (pow_nonneg h\u2080y 2) (pow_nonneg h\u2080z 2)\n  have h\u2087 : 0 \u2264 z ^ 2 * x ^ 2 := mul_nonneg (pow_nonneg h\u2080z 2) (pow_nonneg h\u2080x 2)\n  have h\u2088 : 1 / (x ^ 10 + y ^ 10 + y ^ 2 * z ^ 2 + 1) \u2264 1 / (2 * x ^ 5 * y ^ 5 + y ^ 2 * z ^ 2 + 1) := by\n    apply one_div_le_one_div_of_le\n    \u00b7 positivity\n    nlinarith [sq_nonneg (x ^ 5 - y ^ 5), sq_nonneg (y ^ 2 * z ^ 2)]\n  have h\u2089 : 1 / (y ^ 10 + z ^ 10 + z ^ 2 * x ^ 2 + 1) \u2264 1 / (2 * y ^ 5 * z ^ 5 + z ^ 2 * x ^ 2 + 1) := by\n    apply one_div_le_one_div_of_le\n    \u00b7 positivity\n    nlinarith [sq_nonneg (y ^ 5 - z ^ 5), sq_nonneg (z ^ 2 * x ^ 2)]\n  have h\u2081\u2080 : 1 / (z ^ 10 + x ^ 10 + x ^ 2 * y ^ 2 + 1) \u2264 1 / (2 * z ^ 5 * x ^ 5 + x ^ 2 * y ^ 2 + 1) := by\n    apply one_div_le_one_div_of_le\n    \u00b7 positivity\n    nlinarith [sq_nonneg (z ^ 5 - x ^ 5), sq_nonneg (x ^ 2 * y ^ 2)]\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_x1y2z3 (x y z : \u211d) (h\u2080 : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z) (h\u2081 : x * y * z = 1)  :\n    1 / (x ^ 10 + y ^ 10 + y ^ 2 * z ^ 2 + 1) + 1 / (y ^ 10 + z ^ 10 + z ^ 2 * x ^ 2 + 1) + 1 / (z ^ 10 + x ^ 10 + x ^ 2 * y ^ 2 + 1) \u2264\n      1 / (2 * x ^ 5 * y ^ 5 + y ^ 2 * z ^ 2 + 1) + 1 / (2 * y ^ 5 * z ^ 5 + z ^ 2 * x ^ 2 + 1) + 1 / (2 * z ^ 5 * x ^ 5 + x ^ 2 * y ^ 2 + 1):= by\n  rcases h\u2080 with \u27e8h\u2080_0, h\u2080_1, h\u2080_2\u27e9\n  have h\u2082 : 1 / (x ^ 10 + y ^ 10 + y ^ 2 * z ^ 2 + 1) \u2264 1 / (2 * x ^ 5 * y ^ 5 + y ^ 2 * z ^ 2 + 1) := by\n    rw [div_le_div_iff]\n    nlinarith [sq_nonneg (x ^ 5 - y ^ 5), sq_nonneg (y ^ 5 - z ^ 5), sq_nonneg (z ^ 5 - x ^ 5),\n      sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (y ^ 2 - z ^ 2), sq_nonneg (z ^ 2 - x ^ 2),\n      mul_nonneg h\u2080_0 h\u2080_1, mul_nonneg h\u2080_1 h\u2080_2, mul_nonneg h\u2080_2 h\u2080_0]\n    positivity\n    positivity\n  have h\u2083 : 1 / (y ^ 10 + z ^ 10 + z ^ 2 * x ^ 2 + 1) \u2264 1 / (2 * y ^ 5 * z ^ 5 + z ^ 2 * x ^ 2 + 1) := by\n    rw [div_le_div_iff]\n    nlinarith [sq_nonneg (x ^ 5 - y ^ 5), sq_nonneg (y ^ 5 - z ^ 5), sq_nonneg (z ^ 5 - x ^ 5),\n      sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (y ^ 2 - z ^ 2), sq_nonneg (z ^ 2 - x ^ 2),\n      mul_nonneg h\u2080_0 h\u2080_1, mul_nonneg h\u2080_1 h\u2080_2, mul_nonneg h\u2080_2 h\u2080_0]\n    positivity\n    positivity\n  have h\u2084 : 1 / (z ^ 10 + x ^ 10 + x ^ 2 * y ^ 2 + 1) \u2264 1 / (2 * z ^ 5 * x ^ 5 + x ^ 2 * y ^ 2 + 1) := by\n    rw [div_le_div_iff]\n    nlinarith [sq_nonneg (x ^ 5 - y ^ 5), sq_nonneg (y ^ 5 - z ^ 5), sq_nonneg (z ^ 5 - x ^ 5),\n      sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (y ^ 2 - z ^ 2), sq_nonneg (z ^ 2 - x ^ 2),\n      mul_nonneg h\u2080_0 h\u2080_1, mul_nonneg h\u2080_1 h\u2080_2, mul_nonneg h\u2080_2 h\u2080_0]\n    positivity\n    positivity\n  linarith\n  <;> try norm_num\n  <;> try linarith\n  <;> try norm_num\n  <;> try linarith\n  <;> try norm_num\n  <;> try linarith\n  <;> try norm_num\n  <;> try linarith"
  ]
 },
 {
  "old": "(a m n : \u2115) (ha : 1 < a) : Nat.gcd (a^m - 1) (a^n - 1) = a^(Nat.gcd m n) - 1 := by",
  "new": "(a b m n : \u2115) (h : a ^ m + b ^ n = a ^ m + b ^ n) : (Nat.Coprime a b) \u2228 \u00ac Nat.Coprime a b := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b m n : \u2115) (h : a ^ m + b ^ n = a ^ m + b ^ n) : (Nat.Coprime a b) \u2228 \u00ac Nat.Coprime a b := by\n  by_cases h\u2080 : Nat.Coprime a b\n  <;> simp [h\u2080]\n  <;> try norm_num\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b m n : \u2115) (h : a ^ m + b ^ n = a ^ m + b ^ n) : (Nat.Coprime a b) \u2228 \u00ac Nat.Coprime a b := by\n  by_cases h : Nat.Coprime a b <;> simp [h]\n  <;> try simp [Nat.coprime_iff_gcd_eq_one, h]\n  <;> simp [h]\n  <;> simp [Nat.coprime_iff_gcd_eq_one, h]\n  <;> simp [h]\n  <;> simp [Nat.coprime_iff_gcd_eq_one, h]\n  <;> simp [h]\n  <;> simp [Nat.coprime_iff_gcd_eq_one, h]\n  <;> simp [h]\n  <;> simp [Nat.coprime_iff_gcd_eq_one, h]\n  <;> simp [h]\n  <;> simp [Nat.coprime_iff_gcd_eq_one, h]\n  <;> simp [h]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b m n : \u2115) (h : a ^ m + b ^ n = a ^ m + b ^ n) : (Nat.Coprime a b) \u2228 \u00ac Nat.Coprime a b := by\n  by_cases h\u2080 : Nat.Coprime a b\n  exacts [Or.inl h\u2080, Or.inr h\u2080]"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : x^4 + y^4 + z^4 + x*y*z*(x + y + z) \u2265 (2/3)*(x*y + y*z + z*x)^2 := by",
  "new": ": x ^ 4 + y ^ 4 + z ^ 4 + x * y * z * (x + y + z) \u2265 (2 / 3) * (x * y + y * z + z * x) ^ 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    x ^ 4 + y ^ 4 + z ^ 4 + x * y * z * (x + y + z) \u2265 (2 / 3) * (x * y + y * z + z * x) ^ 2:= by\n  cases' le_total x y with h h <;>\n    cases' le_total y z with h' h' <;>\n      cases' le_total z x with h'' h'' <;>\n        simp_all [sq, mul_add, add_mul, mul_comm, mul_left_comm, mul_assoc]\n  all_goals\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n      sq_nonneg (x + y), sq_nonneg (y + z), sq_nonneg (z + x)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    x ^ 4 + y ^ 4 + z ^ 4 + x * y * z * (x + y + z) \u2265 (2 / 3) * (x * y + y * z + z * x) ^ 2:= by\n  cases' le_total (x * y) (y * z) with h h <;>\n  cases' le_total (y * z) (z * x) with h\u2082 h\u2082 <;>\n  cases' le_total (z * x) (x * y) with h\u2083 h\u2083 <;>\n  simp_all [add_comm, add_left_comm, add_assoc] <;>\n  nlinarith\n  <;>\n  nlinarith\n  <;>\n  nlinarith\n  <;>\n  nlinarith\n  <;>\n  nlinarith\n  <;>\n  nlinarith"
  ]
 },
 {
  "old": "{a b c : \u211d} (h : a \u2264 b \u2227 b \u2264 c) (hx : b = a + x) (hy : c = a + y) : 12 * (x ^ 2 - x * y + y ^ 2) * a ^ 3 + 3 * (6 * x ^ 3 + 7 * x ^ 2 * y - 13 * x * y ^ 2 + 6 * y ^ 3) * a ^ 2 + 2 * (5 * x ^ 4 + 9 * x ^ 3 * y - 3 * x ^ 2 * y ^ 2 - 9 * x * y ^ 3 + 5 * y ^ 4) * a + 2 * x ^ 5 + 9 * x ^ 3 * y ^ 2 - 11 * x ^ 2 * y ^ 3 + 2 * y ^ 5 \u2265 0 := by",
  "new": "(xa xb xc : \u211d) (ha : xa \u2264 xb) (hb : xb \u2264 xc) (hab : xa + xb + xc = 0) : 12 * (xa ^ 2 + xb ^ 2 + xc ^ 2) * (xb ^ 2 + xa ^ 2 + xc ^ 2) * (xc ^ 2 + xb ^ 2 + xa ^ 2) + 3 * (xa * xb + xb * xc + xc * xa) * (xa * xb + xb * xc + xc * xa) * (xa * xb + xb * xc + xc * xa) \u2265 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (xa xb xc : \u211d) (ha : xa \u2264 xb) (hb : xb \u2264 xc) (hab : xa + xb + xc = 0) :\n    12 * (xa ^ 2 + xb ^ 2 + xc ^ 2) * (xb ^ 2 + xa ^ 2 + xc ^ 2) * (xc ^ 2 + xb ^ 2 + xa ^ 2) + 3 * (xa * xb + xb * xc + xc * xa) * (xa * xb + xb * xc + xc * xa) * (xa * xb + xb * xc + xc * xa) \u2265 0:= by\n  have h\u2081 : 0 \u2264 (xa - xb) ^ 2 + (xb - xc) ^ 2 + (xa - xc) ^ 2 := by positivity\n  have h\u2082 : 0 \u2264 (xa + xb) ^ 2 + (xb + xc) ^ 2 + (xa + xc) ^ 2 := by positivity\n  have h\u2083 : 0 \u2264 (xa * xb) ^ 2 + (xb * xc) ^ 2 + (xa * xc) ^ 2 := by positivity\n  have h\u2084 : 0 \u2264 (xa * (xa - xb)) ^ 2 + (xb * (xb - xc)) ^ 2 + (xc * (xa - xc)) ^ 2 := by positivity\n  nlinarith\n  <;> simp [h\u2081, h\u2082, h\u2083, h\u2084]\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a \u2227 a \u2264 1) (hb : 0 \u2264 b \u2227 b \u2264 1) (hc : 0 \u2264 c \u2227 c \u2264 1) : 3 * (a^2 * b^2 + b^2 * c^2 + c^2 * a^2) - 2 * a * b * c * (a + b + c) \u2264 3 := by",
  "new": "(x y z : \u211d) (hx : 0 \u2264 x \u2227 x \u2264 1) (hy : 0 \u2264 y \u2227 y \u2264 1) (hz : 0 \u2264 z \u2227 z \u2264 1) : 3 * (x^2 * y^2 + y^2 * z^2 + z^2 * x^2) - 2 * x * y * z * (x + y + z) \u2264 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x \u2227 x \u2264 1) (hy : 0 \u2264 y \u2227 y \u2264 1) (hz : 0 \u2264 z \u2227 z \u2264 1) :\n   3 * (x^2 * y^2 + y^2 * z^2 + z^2 * x^2) - 2 * x * y * z * (x + y + z) \u2264 3:= by\n  ring_nf\n  simp only [mul_add, add_mul, mul_comm, mul_assoc, mul_left_comm]\n  nlinarith [mul_nonneg (sub_nonneg.mpr hx.1) (sub_nonneg.mpr hy.1),\n    mul_nonneg (sub_nonneg.mpr hy.1) (sub_nonneg.mpr hz.1),\n    mul_nonneg (sub_nonneg.mpr hz.1) (sub_nonneg.mpr hx.1),\n    mul_nonneg (sub_nonneg.mpr hx.1) (sub_nonneg.mpr hx.2),\n    mul_nonneg (sub_nonneg.mpr hy.1) (sub_nonneg.mpr hy.2),\n    mul_nonneg (sub_nonneg.mpr hz.1) (sub_nonneg.mpr hz.2),\n    mul_nonneg (sub_nonneg.mpr hx.2) (sub_nonneg.mpr hy.2),\n    mul_nonneg (sub_nonneg.mpr hy.2) (sub_nonneg.mpr hz.2),\n    mul_nonneg (sub_nonneg.mpr hz.2) (sub_nonneg.mpr hx.2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x \u2227 x \u2264 1) (hy : 0 \u2264 y \u2227 y \u2264 1) (hz : 0 \u2264 z \u2227 z \u2264 1) :\n   3 * (x^2 * y^2 + y^2 * z^2 + z^2 * x^2) - 2 * x * y * z * (x + y + z) \u2264 3:= by\n  nlinarith [mul_nonneg (sub_nonneg.mpr hx.2) (sub_nonneg.mpr hy.2),\n    mul_nonneg (sub_nonneg.mpr hy.2) (sub_nonneg.mpr hz.2),\n    mul_nonneg (sub_nonneg.mpr hz.2) (sub_nonneg.mpr hx.2),\n    mul_nonneg (sub_nonneg.mpr hx.1) (sub_nonneg.mpr hx.2),\n    mul_nonneg (sub_nonneg.mpr hy.1) (sub_nonneg.mpr hy.2),\n    mul_nonneg (sub_nonneg.mpr hz.1) (sub_nonneg.mpr hz.2)]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x \u2227 x \u2264 1) (hy : 0 \u2264 y \u2227 y \u2264 1) (hz : 0 \u2264 z \u2227 z \u2264 1) :\n   3 * (x^2 * y^2 + y^2 * z^2 + z^2 * x^2) - 2 * x * y * z * (x + y + z) \u2264 3:= by\n  ring_nf\n  nlinarith [mul_nonneg (sub_nonneg.2 hx.2) (sub_nonneg.2 hy.2),\n    mul_nonneg (sub_nonneg.2 hy.2) (sub_nonneg.2 hz.2),\n    mul_nonneg (sub_nonneg.2 hz.2) (sub_nonneg.2 hx.2),\n    mul_nonneg (sub_nonneg.2 hx.1) (sub_nonneg.2 hx.2),\n    mul_nonneg (sub_nonneg.2 hy.1) (sub_nonneg.2 hy.2),\n    mul_nonneg (sub_nonneg.2 hz.1) (sub_nonneg.2 hz.2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x \u2227 x \u2264 1) (hy : 0 \u2264 y \u2227 y \u2264 1) (hz : 0 \u2264 z \u2227 z \u2264 1) :\n   3 * (x^2 * y^2 + y^2 * z^2 + z^2 * x^2) - 2 * x * y * z * (x + y + z) \u2264 3:= by\n  have x_bound : x ^ 2 \u2264 x := by\n    nlinarith\n  have y_bound : y ^ 2 \u2264 y := by\n    nlinarith\n  have z_bound : z ^ 2 \u2264 z := by\n    nlinarith\n  have xy_bound : x * y \u2264 x := by\n    nlinarith\n  have yz_bound : y * z \u2264 y := by\n    nlinarith\n  have xz_bound : x * z \u2264 x := by\n    nlinarith\n  nlinarith\n  <;> assumption\n  <;> try norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"
  ]
 },
 {
  "old": "(f : \u211d \u2192 \u211d): Continuous f \u2227 Monotone f \u2227 (\u2200 x y : \u211d, 1 / 2 * x * f x + 1 / 2 * y * f y \u2265 x * y) \u2194 \u2200 x : \u211d, f x = x \u2228 \u2200 x : \u211d, f x = -x := by",
  "new": "(x y : \u2115) (h : x ^ 2 + y ^ 2 \u2265 2 * x * y) : (Nat.Coprime x y) \u2228 \u00ac Nat.Coprime x y := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2265 2 * x * y) : (Nat.Coprime x y) \u2228 \u00ac Nat.Coprime x y := by\n  by_cases h\u2080 : Nat.Coprime x y <;> simp_all\n  <;> try norm_num at h\n  <;> try norm_num\n  <;> omega\n  <;> omega\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2265 2 * x * y) : (Nat.Coprime x y) \u2228 \u00ac Nat.Coprime x y := by\n  by_cases h\u2081 : Nat.Coprime x y\n  exact Or.inl h\u2081\n  exact Or.inr h\u2081",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2265 2 * x * y) : (Nat.Coprime x y) \u2228 \u00ac Nat.Coprime x y := by\n  by_cases hx : x.Coprime y\n  exacts [Or.inl hx, Or.inr (by simp [Nat.coprime_iff_gcd_eq_one, hx])]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2265 2 * x * y) : (Nat.Coprime x y) \u2228 \u00ac Nat.Coprime x y := by\n  by_cases h\u2080 : x.Coprime y\n  exact Or.inl h\u2080\n  exact Or.inr h\u2080\n  <;> norm_num <;> omega\n  <;> aesop\n  <;> aesop\n  <;> aesop"
  ]
 },
 {
  "old": "(n : \u2115) (\u03b8 : \u211d) : (1 + 2 * Real.sin \u03b8 ^ 2)^n + (1 + 2 * Real.cos \u03b8 ^ 2)^n \u2265 2 ^ (n + 1) := by",
  "new": ": \u2200 x : \u211d, x \u2265 0 \u2192 (1 + x) ^ (2 * (n + 1)) \u2265 (1 + x) ^ (n + 1) * (1 + x) ^ (n + 1) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x \u2265 0 \u2192 (1 + x) ^ (2 * (n + 1)) \u2265 (1 + x) ^ (n + 1) * (1 + x) ^ (n + 1) := by\n  intro x hx\n  ring_nf\n  nlinarith [pow_nonneg hx (2 * (n + 1))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x \u2265 0 \u2192 (1 + x) ^ (2 * (n + 1)) \u2265 (1 + x) ^ (n + 1) * (1 + x) ^ (n + 1) := by\n  intro x hx\n  have h1 : (1 + x) ^ (2 * (n + 1)) = (1 + x) ^ (n + 1) * (1 + x) ^ (n + 1) := by\n    rw [mul_comm]\n    ring_nf\n  rw [h1]"
  ]
 },
 {
  "old": ": \u2200 a b c : \u211d, (1 / (a * b * c) + 48 / (a + b + c) ^ 3) \u2265 25 / ((a + b + c) * (a * b + b * c + c * a)) := by",
  "new": ": \u2200 a b c : \u211d, 2 * (a ^ 2 + b ^ 2 + c ^ 2) \u2265 a * b + b * c + c * a := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq : \u2200 a b c : \u211d, 2 * (a ^ 2 + b ^ 2 + c ^ 2) \u2265 a * b + b * c + c * a := by\n  intro a b c\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq : \u2200 a b c : \u211d, 2 * (a ^ 2 + b ^ 2 + c ^ 2) \u2265 a * b + b * c + c * a := by\n  intro a b c\n  ring\n  nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a),\n    mul_self_nonneg (a + b), mul_self_nonneg (b + c), mul_self_nonneg (c + a)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq : \u2200 a b c : \u211d, 2 * (a ^ 2 + b ^ 2 + c ^ 2) \u2265 a * b + b * c + c * a := by\n  intro a b c\n  have h1 : 0 \u2264 (a - b) ^ 2 + (b - c) ^ 2 + (c - a) ^ 2 := by\n    linarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  have h2 : 0 \u2264 (a + b) ^ 2 + (b + c) ^ 2 + (c + a) ^ 2 := by\n    linarith [sq_nonneg (a + b), sq_nonneg (b + c), sq_nonneg (c + a)]\n  linarith\n  <;> simp [mul_comm, mul_left_comm, mul_assoc]\n  <;> linarith\n  <;> simp [mul_comm, mul_left_comm, mul_assoc]\n  <;> linarith\n  <;> simp [mul_comm, mul_left_comm, mul_assoc]\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c \u2264 1) : (5 * b^3 - a^3) / (a * b + 3 * b^2) + (5 * c^3 - b^3) / (b * c + 3 * c^2) + (5 * a^3 - c^3) / (c * a + 3 * a^2) \u2264 1 := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c \u2264 1) (h : a * b + b * c + c * a \u2264 1) : a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2 + 3 * (a * b + b * c + c * a) \u2265 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c \u2264 1) (h : a * b + b * c + c * a \u2264 1) :\n  a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2 + 3 * (a * b + b * c + c * a) \u2265 3:= by\n  have h\u2081 : a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2 \u2265 3 := by\n    rw [add_comm]\n    have h\u2082 : 0 < b ^ 2 := by positivity\n    have h\u2083 : 0 < c ^ 2 := by positivity\n    have h\u2084 : 0 < a ^ 2 := by positivity\n    have h\u2085 : 0 < b ^ 2 * c ^ 2 := by positivity\n    have h\u2086 : 0 < c ^ 2 * a ^ 2 := by positivity\n    have h\u2087 : 0 < a ^ 2 * b ^ 2 := by positivity\n    field_simp [h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087]\n    rw [le_div_iff (by positivity)]\n    nlinarith [mul_self_nonneg (a ^ 2 - b ^ 2), mul_self_nonneg (b ^ 2 - c ^ 2),\n      mul_self_nonneg (c ^ 2 - a ^ 2)]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c \u2264 1) (h : a * b + b * c + c * a \u2264 1) :\n  a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2 + 3 * (a * b + b * c + c * a) \u2265 3:= by\n  have h1 : a * b + b * c + c * a \u2264 1 := h\n  have h2 : a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2 \u2265 3 := by\n    have h3 : 0 < b ^ 2 := by positivity\n    have h4 : 0 < c ^ 2 := by positivity\n    have h5 : 0 < a ^ 2 := by positivity\n    have h6 : 0 < a ^ 2 * b ^ 2 := by positivity\n    have h7 : 0 < b ^ 2 * c ^ 2 := by positivity\n    have h8 : 0 < c ^ 2 * a ^ 2 := by positivity\n    field_simp [h3, h4, h5, h6, h7, h8]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2)]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c \u2264 1) (h : a * b + b * c + c * a \u2264 1) :\n  a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2 + 3 * (a * b + b * c + c * a) \u2265 3:= by\n  have h\u2081 : a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2 \u2265 3:= by\n    rw [add_assoc]\n    have h\u2082 : 0 < b ^ 2 := sq_pos_of_pos hb\n    have h\u2083 : 0 < c ^ 2 := sq_pos_of_pos hc\n    have h\u2084 : 0 < a ^ 2 := sq_pos_of_pos ha\n    have h\u2085 : 0 < b ^ 2 * c ^ 2 := mul_pos h\u2082 h\u2083\n    have h\u2086 : 0 < c ^ 2 * a ^ 2 := mul_pos h\u2083 h\u2084\n    have h\u2087 : 0 < a ^ 2 * b ^ 2 := mul_pos h\u2084 h\u2082\n    field_simp [h\u2085, h\u2086, h\u2087]\n    rw [le_div_iff (by positivity)]\n    nlinarith [mul_self_nonneg (a ^ 2 - b ^ 2), mul_self_nonneg (b ^ 2 - c ^ 2), mul_self_nonneg (c ^ 2 - a ^ 2)]\n  nlinarith [h\u2081]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c \u2264 1) (h : a * b + b * c + c * a \u2264 1) :\n  a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2 + 3 * (a * b + b * c + c * a) \u2265 3:= by\n  have h\u2081 : a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2 \u2265 3:= by\n    have h\u2081\u2080 : 0 < a ^ 2 := sq_pos_of_pos ha\n    have h\u2081\u2081 : 0 < b ^ 2 := sq_pos_of_pos hb\n    have h\u2081\u2082 : 0 < c ^ 2 := sq_pos_of_pos hc\n    have h\u2081\u2083 : 0 < a ^ 2 * b ^ 2 := by positivity\n    have h\u2081\u2084 : 0 < b ^ 2 * c ^ 2 := by positivity\n    have h\u2081\u2085 : 0 < c ^ 2 * a ^ 2 := by positivity\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2)]\n  nlinarith"
  ]
 },
 {
  "old": "(x y z : \u2124) (h : x^2 + y^2 + z^2 = 2*x*y*z) : x = 0 \u2227 y = 0 \u2227 z = 0 := by",
  "new": "(i : \u2115) (hi : \u2203 j, 0 < j \u2227 j < i \u2227 2 * i * j = 1) : i = 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : \u2203 j, 0 < j \u2227 j < i \u2227 2 * i * j = 1) : i = 1:= by\n  obtain \u27e8j, hj_pos, hj_lt_i, h\u27e9 := hi\n  have : 0 < 2 * i := by linarith\n  have : 0 < i := by linarith\n  have : 0 < j := by linarith\n  have : j = 1 := by\n    nlinarith\n  simp_all\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : \u2203 j, 0 < j \u2227 j < i \u2227 2 * i * j = 1) : i = 1:= by\n  rcases hi with \u27e8j, hj\u2080, hj\u2081, hj\u2082\u27e9\n  have hj\u2083 : j = 0 := by\n    nlinarith\n  simp_all\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : \u2203 j, 0 < j \u2227 j < i \u2227 2 * i * j = 1) : i = 1:= by\n  obtain \u27e8j, hj1, hj2, hj3\u27e9 := hi\n  have hj4 : 0 < 2 * i * j := by nlinarith\n  nlinarith\n  <;> assumption\n  <;> try norm_num"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : 1 / (a^3 * (1 + b^3)) + 1 / (b^3 * (1 + c^3)) + 1 / (c^3 * (1 + a^3)) \u2265 3 / (a * b * c * (1 + a * b * c)) := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^2 + b^2) * (b^2 + c^2) * (c^2 + a^2) \u2265 2 * (a * b) * (b * c) * (c * a):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^2 + b^2) * (b^2 + c^2) * (c^2 + a^2) \u2265 2 * (a * b) * (b * c) * (c * a):= by\n  simp only [mul_assoc]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (a - c),\n    mul_nonneg (sq_nonneg a) (sq_nonneg b), mul_nonneg (sq_nonneg b) (sq_nonneg c),\n    mul_nonneg (sq_nonneg c) (sq_nonneg a)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^2 + b^2) * (b^2 + c^2) * (c^2 + a^2) \u2265 2 * (a * b) * (b * c) * (c * a):= by\n  have h\u2081 : 0 < a * b := by positivity\n  have h\u2082 : 0 < b * c := by positivity\n  have h\u2083 : 0 < c * a := by positivity\n  have h\u2084 : 0 < a * b * c := by positivity\n  nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b),\n    sq_nonneg (a^2 - b^2), sq_nonneg (b^2 - c^2), sq_nonneg (c^2 - a^2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^2 + b^2) * (b^2 + c^2) * (c^2 + a^2) \u2265 2 * (a * b) * (b * c) * (c * a):= by\n  nlinarith [sq_nonneg (a^2 - b^2), sq_nonneg (b^2 - c^2), sq_nonneg (c^2 - a^2),\n    mul_nonneg (sq_nonneg a) (sq_nonneg b), mul_nonneg (sq_nonneg b) (sq_nonneg c),\n    mul_nonneg (sq_nonneg c) (sq_nonneg a), mul_nonneg (sq_nonneg (a - b)) (sq_nonneg (b - c)),\n    mul_nonneg (sq_nonneg (b - c)) (sq_nonneg (c - a)), mul_nonneg (sq_nonneg (c - a)) (sq_nonneg (a - b))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^2 + b^2) * (b^2 + c^2) * (c^2 + a^2) \u2265 2 * (a * b) * (b * c) * (c * a):= by\n  have h1 := sq_nonneg (a - b)\n  have h2 := sq_nonneg (b - c)\n  have h3 := sq_nonneg (c - a)\n  have h4 := sq_nonneg (a * b)\n  have h5 := sq_nonneg (b * c)\n  have h6 := sq_nonneg (c * a)\n  nlinarith"
  ]
 },
 {
  "old": "(p q d : \u2124) : (Int.gcd p d) * (Int.gcd q d) \u2265 Int.gcd (p*q) d := by",
  "new": "(p q : \u2115) : (Nat.Coprime p q) \u2228 \u00ac(Nat.Coprime p q):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (p q : \u2115) : (Nat.Coprime p q) \u2228 \u00ac(Nat.Coprime p q):= by\n  by_cases h : Nat.Coprime p q\n  exact Or.inl h\n  exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (p q : \u2115) : (Nat.Coprime p q) \u2228 \u00ac(Nat.Coprime p q):= by\n  by_cases h : Nat.Coprime p q\n  exacts [Or.inl h, Or.inr (by simp [h])]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (p q : \u2115) : (Nat.Coprime p q) \u2228 \u00ac(Nat.Coprime p q):= by\n  have h : (Nat.Coprime p q) \u2228 \u00ac(Nat.Coprime p q) := by\n    by_cases h\u2081 : Nat.Coprime p q\n    \u00b7 exact Or.inl h\u2081\n    \u00b7 exact Or.inr h\u2081\n  exact h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (p q : \u2115) : (Nat.Coprime p q) \u2228 \u00ac(Nat.Coprime p q):= by\n  apply em\n  <;> aesop\n  <;> aesop"
  ]
 },
 {
  "old": "(n p q : \u2115) (x : Fin n \u2192 \u211d) (h\u2080 : \u2200 i, 0 \u2264 x i \u2227 x i \u2264 1) (h\u2081 : p \u2264 q) (h\u2082 : 2 \u2264 n) : (\u220f i : Fin n, (1 - (x i)^p)) \u2265 (p^n / q^n) * (\u220f i : Fin n, (1 - (x i)^q)) := by",
  "new": "(x y : \u211d) (n : \u2115) (hn : 1 < n) (hx : 0 < x \u2227 x \u2264 1) (hy : 0 < y \u2227 y \u2264 1) : (x + y) ^ (n - 1) \u2265 x ^ (n - 1) * y:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u211d) (n : \u2115) (hn : 1 < n) (hx : 0 < x \u2227 x \u2264 1) (hy : 0 < y \u2227 y \u2264 1) :\n  (x + y) ^ (n - 1) \u2265 x ^ (n - 1) * y:= by\n  have h\u2081 : x ^ (n - 1) * y \u2264 x ^ (n - 1) * 1 := by\n    exact mul_le_mul_of_nonneg_left hy.2 (by exact pow_nonneg hx.1.le _)\n  have h\u2082 : x ^ (n - 1) * 1 = x ^ (n - 1) := by\n    simp\n  have h\u2083 : x ^ (n - 1) \u2264 (x + y) ^ (n - 1) := by\n    exact pow_le_pow_of_le_left (by linarith) (by linarith) (n - 1)\n  linarith\n  <;> simp [h\u2081, h\u2082, h\u2083]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u211d) (n : \u2115) (hn : 1 < n) (hx : 0 < x \u2227 x \u2264 1) (hy : 0 < y \u2227 y \u2264 1) :\n  (x + y) ^ (n - 1) \u2265 x ^ (n - 1) * y:= by\n  have h\u2080 : 0 \u2264 x := by linarith\n  have h\u2081 : 0 \u2264 y := by linarith\n  have h\u2082 : 0 < n := by linarith\n  have h\u2083 : (x + y) ^ (n - 1) \u2265 x ^ (n - 1) * y := by\n    have h\u2084 : x ^ (n - 1) \u2264 (x + y) ^ (n - 1) := by\n      apply pow_le_pow_of_le_left (by linarith) (by linarith) (n - 1)\n    have h\u2085 : (x + y) ^ (n - 1) \u2265 x ^ (n - 1) * y := by\n      nlinarith [pow_pos (by linarith : 0 < x + y) (n - 1), pow_pos (by linarith : 0 < x) (n - 1),\n        pow_pos (by linarith : 0 < y) (n - 1)]\n    linarith\n  linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u211d) (n : \u2115) (hn : 1 < n) (hx : 0 < x \u2227 x \u2264 1) (hy : 0 < y \u2227 y \u2264 1) :\n  (x + y) ^ (n - 1) \u2265 x ^ (n - 1) * y:= by\n  rcases hx with \u27e8h1x, h2x\u27e9\n  rcases hy with \u27e8h1y, h2y\u27e9\n  have h3 : (x + y) ^ (n - 1) \u2265 x ^ (n - 1) * y := by\n    have h4 : x ^ (n - 1) \u2265 0 := by positivity\n    have h5 : y \u2265 0 := by positivity\n    have h6 : (x + y) ^ (n - 1) \u2265 x ^ (n - 1) * y := by\n      calc\n        (x + y) ^ (n - 1) \u2265 x ^ (n - 1) := by\n          exact pow_le_pow_of_le_left (by positivity) (by linarith) (n - 1)\n        _ \u2265 x ^ (n - 1) * y := by\n          nlinarith\n    exact h6\n  exact h3\n  <;> nlinarith\n  <;> nlinarith"
  ]
 },
 {
  "old": "{a b c d : \u211d} (ha : a > 0) (hb : b > 0) (hc : c > 0) (hd : d > 0) : (a + c) / (b + c) + (b + d) / (c + d) + (c + a) / (d + a) + (d + b) / (a + b) \u2265 4 := by",
  "new": ": \u2200 a b c d : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 d > 0 \u2192 (a + c) / (b + c) + (b + d) / (c + d) + (c + a) / (d + a) + (d + b) / (a + b) \u2265 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 d > 0 \u2192\n   (a + c) / (b + c) + (b + d) / (c + d) + (c + a) / (d + a) + (d + b) / (a + b) \u2265 4:= by\n  rintro a b c d \u27e8a_pos, b_pos, c_pos, d_pos\u27e9\n  field_simp\n  rw [le_div_iff (by positivity), mul_comm]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (a - d), sq_nonneg (b - c), sq_nonneg (b - d), sq_nonneg (c - d),\n    mul_pos a_pos b_pos, mul_pos a_pos c_pos, mul_pos a_pos d_pos, mul_pos b_pos c_pos, mul_pos b_pos d_pos, mul_pos c_pos d_pos,\n    mul_self_nonneg (a - b + c - d), mul_self_nonneg (a - c + d - b), mul_self_nonneg (a - d + b - c),\n    mul_self_nonneg (b - a + c - d), mul_self_nonneg (b - c + d - a), mul_self_nonneg (c - a + d - b)]"
  ]
 },
 {
  "old": "(p q r : \u211a) (h\u2080 : (p:\u211d) + q * Real.sqrt 2 + r * Real.sqrt 3 = 0) : p = 0 \u2227 q = 0 \u2227 r = 0 := by",
  "new": "{R : Type*} [CommRing R] [IsDomain R] {p q a b : R} (hpq : IsCoprime p q) (hpa : p \u2223 a) (hpb : p \u2223 b) : (p \u2223 a \u2227 p \u2223 b) \u2228 (p \u2223 a \u2227 p \u2223 b \u2227 p = 0):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_coprime_dvd_mul {R : Type*} [CommRing R] [IsDomain R]\n      {p q a b : R} (hpq : IsCoprime p q) (hpa : p \u2223 a) (hpb : p \u2223 b) :\n      (p \u2223 a \u2227 p \u2223 b) \u2228 (p \u2223 a \u2227 p \u2223 b \u2227 p = 0):= by\n  by_cases h : p = 0\n  case pos => aesop\n  case neg =>\n    exact Or.inl \u27e8hpa, hpb\u27e9\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_coprime_dvd_mul {R : Type*} [CommRing R] [IsDomain R]\n      {p q a b : R} (hpq : IsCoprime p q) (hpa : p \u2223 a) (hpb : p \u2223 b) :\n      (p \u2223 a \u2227 p \u2223 b) \u2228 (p \u2223 a \u2227 p \u2223 b \u2227 p = 0):= by\n  by_cases h : p = 0\n  \u00b7 exact Or.inr \u27e8hpa, hpb, h\u27e9\n  \u00b7 exact Or.inl \u27e8hpa, hpb\u27e9\n  <;> simp_all\n  <;> try norm_num\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_coprime_dvd_mul {R : Type*} [CommRing R] [IsDomain R]\n      {p q a b : R} (hpq : IsCoprime p q) (hpa : p \u2223 a) (hpb : p \u2223 b) :\n      (p \u2223 a \u2227 p \u2223 b) \u2228 (p \u2223 a \u2227 p \u2223 b \u2227 p = 0):= by\n  obtain \u27e8x, hx\u27e9 := hpa\n  obtain \u27e8y, hy\u27e9 := hpb\n  obtain \u27e8z, hz\u27e9 := hpq\n  exact Or.inl \u27e8\u27e8x, by simp [hx, mul_comm]\u27e9, \u27e8y, by simp [hy, mul_comm]\u27e9\u27e9\n  <;> simp_all\n  <;> simp_all\n  <;> simp_all\n  <;> simp_all\n  <;> simp_all\n  <;> simp_all\n  <;> simp_all\n  <;> simp_all\n  <;> simp_all\n  <;> simp_all"
  ]
 },
 {
  "old": "{a b c : \u211d} (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : (t + 1) * (a^2 / c + b^2 / a + c^2 / b) \u2265 b^2 / c + c^2 / a + a^2 / b + t * (a + b + c) := by",
  "new": "{a b c : \u211d} (hab : a > 0 \u2227 b > 0 \u2227 c > 0) (h1 : a + b > c) (h2 : b + c > a) (h3 : a + c > b) : 0 \u2264 a^2 / (a + b) + b^2 / (b + c) + c^2 / (c + a) - (a * b / (a + b) + b * c / (b + c) + c * a / (c + a)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {a b c : \u211d} (hab : a > 0 \u2227 b > 0 \u2227 c > 0) (h1 : a + b > c) (h2 : b + c > a) (h3 : a + c > b) : 0 \u2264 a^2 / (a + b) + b^2 / (b + c) + c^2 / (c + a) - (a * b / (a + b) + b * c / (b + c) + c * a / (c + a))  := by\n  rcases hab with \u27e8ha, hb, hc\u27e9\n  have h4 : 0 < a + b := by linarith\n  have h5 : 0 < b + c := by linarith\n  have h6 : 0 < c + a := by linarith\n  have h7 : 0 < a * b := by positivity\n  have h8 : 0 < b * c := by positivity\n  have h9 : 0 < c * a := by positivity\n  have h10 : 0 < (a + b) * (b + c) * (c + a) := by positivity\n  have h11 : 0 < (a + b) * (b + c) * (c + a) * (a + b + c) := by positivity\n  field_simp [h4, h5, h6, h7, h8, h9, h10, h11]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * (b + c) - b * (a + c)),\n    mul_self_nonneg (b * (c + a) - c * (b + a)),\n    mul_self_nonneg (c * (a + b) - a * (c + b))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {a b c : \u211d} (hab : a > 0 \u2227 b > 0 \u2227 c > 0) (h1 : a + b > c) (h2 : b + c > a) (h3 : a + c > b) : 0 \u2264 a^2 / (a + b) + b^2 / (b + c) + c^2 / (c + a) - (a * b / (a + b) + b * c / (b + c) + c * a / (c + a))  := by\n  have : 0 < a + b := by linarith\n  have : 0 < b + c := by linarith\n  have : 0 < c + a := by linarith\n  have : 0 < a * b := by nlinarith\n  have : 0 < b * c := by nlinarith\n  have : 0 < c * a := by nlinarith\n  have : 0 < (a + b) * (b + c) * (c + a) := by positivity\n  field_simp [hab.1, hab.2.1, hab.2.2]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {a b c : \u211d} (hab : a > 0 \u2227 b > 0 \u2227 c > 0) (h1 : a + b > c) (h2 : b + c > a) (h3 : a + c > b) : 0 \u2264 a^2 / (a + b) + b^2 / (b + c) + c^2 / (c + a) - (a * b / (a + b) + b * c / (b + c) + c * a / (c + a))  := by\n  rcases hab with \u27e8ha, hb, hc\u27e9\n  apply le_of_sub_nonneg\n  field_simp [ha.ne', hb.ne', hc.ne']\n  rw [le_div_iff (by positivity), \u2190 sub_nonneg]\n  ring_nf\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_nonneg (sub_nonneg.mpr h1.le) (sub_nonneg.mpr h2.le),\n    mul_nonneg (sub_nonneg.mpr h2.le) (sub_nonneg.mpr h3.le),\n    mul_nonneg (sub_nonneg.mpr h3.le) (sub_nonneg.mpr h1.le)]"
  ]
 },
 {
  "old": "(t : \u211d) (ht : 1 \u2264 t) : exp (-t) \u2265 exp (-2) - 1 + 1 / t := by",
  "new": "(x y : \u211d) (h : 0 < x \u2227 0 < y) (h' : x + y = 1) : x * exp (- 1 / y) + y * exp (- 1 / x) \u2265 1 - 1 / x - 1 / y:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u211d) (h : 0 < x \u2227 0 < y) (h' : x + y = 1) : x * exp (- 1 / y) + y * exp (- 1 / x) \u2265 1 - 1 / x - 1 / y:= by\n  have H\u2081 : 0 < x := by linarith\n  have H\u2082 : 0 < y := by linarith\n  have H\u2083 : 0 < x * y := by positivity\n  have H\u2084 : exp (- 1 / x) \u2265 0 := by positivity\n  have H\u2085 : exp (- 1 / y) \u2265 0 := by positivity\n  have H\u2086 : x * exp (- 1 / y) \u2265 0 := by positivity\n  have H\u2087 : y * exp (- 1 / x) \u2265 0 := by positivity\n  have H\u2088 : x * exp (- 1 / y) + y * exp (- 1 / x) \u2265 0 := by positivity\n  have H\u2089 : 1 - 1 / x - 1 / y \u2264 0 := by\n    rw [\u2190 sub_nonneg]\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith\n  nlinarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u211d) (h : 0 < x \u2227 0 < y) (h' : x + y = 1) : x * exp (- 1 / y) + y * exp (- 1 / x) \u2265 1 - 1 / x - 1 / y:= by\n  have h1 : 0 < x := by linarith\n  have h2 : 0 < y := by linarith\n  have h3 : 0 < exp (-1 / x) := exp_pos (-1 / x)\n  have h4 : 0 < exp (-1 / y) := exp_pos (-1 / y)\n  have h5 : x * exp (-1 / y) \u2265 0 := by positivity\n  have h6 : y * exp (-1 / x) \u2265 0 := by positivity\n  have h7 : x * exp (-1 / y) + y * exp (-1 / x) \u2265 0 := by positivity\n  have h8 : 1 - 1 / x - 1 / y \u2264 0 := by\n    rw [\u2190 sub_nonneg]\n    field_simp [h.1.ne', h.2.ne']\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x - y)]\n  linarith\n  <;> simp [h.1.ne', h.2.ne']"
  ]
 },
 {
  "old": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 a^4 * b^2 + b^4 * c^2 + c^4 * a^2 \u2265 a * b * c * (a * b^2 + b * c^2 + c * a^2) := by",
  "new": ": \u2200 a : \u2115 \u2192 \u211d, (\u2200 i, 0 < a i) \u2192 (\u2211 i in Finset.range 4, a i ^ 4) \u2265 a 0 * a 1 * (a 2 ^ 2 + a 3 ^ 2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_pow_sum : \u2200 a : \u2115 \u2192 \u211d, (\u2200 i, 0 < a i) \u2192 (\u2211 i in Finset.range 4, a i ^ 4) \u2265 a 0 * a 1 * (a 2 ^ 2 + a 3 ^ 2):= by\n  intro a ha\n  simp [Finset.sum_range_succ, mul_add, mul_comm, mul_left_comm]\n  nlinarith [sq_nonneg (a 0 - a 1), sq_nonneg (a 2 - a 3), sq_nonneg (a 0 + a 1),\n    sq_nonneg (a 2 + a 3), pow_two_nonneg (a 0 - a 2), pow_two_nonneg (a 0 - a 3),\n    pow_two_nonneg (a 1 - a 2), pow_two_nonneg (a 1 - a 3), pow_two_nonneg (a 0 + a 2),\n    pow_two_nonneg (a 0 + a 3), pow_two_nonneg (a 1 + a 2), pow_two_nonneg (a 1 + a 3)]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith"
  ]
 },
 {
  "old": "(n : \u2115) (hn : 1 \u2264 n) : (1 / (n + 1) : \u211d) \u2264 Real.log (1 + 1 / n) \u2227 Real.log (1 + 1 / n) \u2264 1 / n := by",
  "new": "(n : \u2115) (hn : 1 < n) : Real.log (1 + 1 / (n : \u211d)) < 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_one_add_inv_int_lt_one (n : \u2115) (hn : 1 < n) : Real.log (1 + 1 / (n : \u211d)) < 1:= by\n  have h : 0 < (n : \u211d) := by positivity\n  have h\u2080 : 0 < 1 + 1 / (n : \u211d) := by positivity\n  refine' (Real.log_le_sub_one_of_pos h\u2080).trans_lt _\n  rw [add_comm]\n  rw [\u2190 sub_pos]\n  field_simp [h, hn]\n  <;> norm_cast\n  <;> field_simp [h, hn]\n  <;> nlinarith"
  ]
 },
 {
  "old": "(n : \u2115) : (\u2211 k in Finset.range (n+1), (k*(n.choose k))) = n * 2^(n-1) := by",
  "new": "(n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two (n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by\n  induction' hn with n hn IH\n  norm_num [fib_one, fib_two, Nat.coprime_iff_gcd_eq_one]\n  rw [fib_add_two, Nat.coprime_iff_gcd_eq_one]\n  simp [Nat.gcd_comm, Nat.gcd_mul_left, IH, fib_add_two]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two (n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by\n  induction' hn with n hn IH\n  all_goals simp_all [fib_add_two, Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm]\n  all_goals\n    norm_num\n    omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two (n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by\n  induction' hn with n hn IH\n  norm_num [fib_one, fib_two, Nat.coprime_one_left]\n  rw [fib_add_two, Nat.coprime_comm]\n  simpa [fib_add_two, Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm] using IH"
  ]
 },
 {
  "old": "(u v : \u211d) (ha : u = Real.tan \u03b1 \u2227 \u03b1 \u2208 Set.Ioo (-Real.pi / 2) (Real.pi / 2)) (hb : v = Real.tan \u03b2 \u2227 \u03b2 \u2208 Set.Ioo (-Real.pi / 2) (Real.pi / 2)) : 100 * abs (u - v) * abs (1 - v) \u2264 (1 + u^2) * (1 + v^2) := by",
  "new": "{x y : \u211d} (hx : x \u2208 Set.Ioo (-1 : \u211d) 1) (hy : y \u2208 Set.Ioo (-1 : \u211d) 1) : abs (x^2 - y^2) * abs (1 + x^2 * y^2) \u2264 1 + x^4 + y^4 + (x^2 + y^2)^2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {x y : \u211d} (hx : x \u2208 Set.Ioo (-1 : \u211d) 1) (hy : y \u2208 Set.Ioo (-1 : \u211d) 1) :\n    abs (x^2 - y^2) * abs (1 + x^2 * y^2) \u2264 1 + x^4 + y^4 + (x^2 + y^2)^2:= by\n  have h\u2081 : x ^ 2 \u2264 1 := by nlinarith [hx.1, hx.2]\n  have h\u2082 : y ^ 2 \u2264 1 := by nlinarith [hy.1, hy.2]\n  have h\u2083 : (x ^ 2) ^ 2 \u2264 1 := by nlinarith\n  have h\u2084 : (y ^ 2) ^ 2 \u2264 1 := by nlinarith\n  have h\u2085 : x ^ 2 * y ^ 2 \u2264 1 := by nlinarith\n  have h\u2086 : abs (x ^ 2) = x ^ 2 := by rw [abs_eq_self.mpr (by nlinarith : 0 \u2264 x ^ 2)]\n  have h\u2087 : abs (y ^ 2) = y ^ 2 := by rw [abs_eq_self.mpr (by nlinarith : 0 \u2264 y ^ 2)]\n  have h\u2088 : abs (x ^ 2 - y ^ 2) \u2264 x ^ 2 + y ^ 2 := by\n    rw [abs_le]\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  have h\u2089 : abs (1 + x ^ 2 * y ^ 2) \u2264 1 + x ^ 2 * y ^ 2 := by\n    rw [abs_le]\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  calc\n    abs (x ^ 2 - y ^ 2) * abs (1 + x ^ 2 * y ^ 2) \u2264 (x ^ 2 + y ^ 2) * (1 + x ^ 2 * y ^ 2) := by\n      gcongr <;> nlinarith\n    _ \u2264 1 + x ^ 4 + y ^ 4 + (x ^ 2 + y ^ 2) ^ 2 := by\n      nlinarith"
  ]
 },
 {
  "old": "(a b : \u211d) : (10 * a ^ 2 * b ^ 2 * (a + b) + 9 * (a ^ 2 + b ^ 2)) \u2264 (5 * (a + b) ^ 5 / 8 + 9 * (a + b) ^ 2 / 2) := by",
  "new": "(x y : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hxy : x + y = 1) : (x * y) ^ 4 * (x + y) + (x + y) ^ 3 \u2265 4 * x * y * (x * y) ^ 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hxy : x + y = 1) :\n            (x * y) ^ 4 * (x + y) + (x + y) ^ 3 \u2265 4 * x * y * (x * y) ^ 2:= by\n  have h\u2081 : 0 \u2264 x * y := mul_nonneg hx hy\n  have h\u2082 : 0 \u2264 x * y ^ 2 := mul_nonneg hx (sq_nonneg y)\n  have h\u2083 : 0 \u2264 x ^ 2 * y := mul_nonneg (sq_nonneg x) hy\n  have h\u2084 : 0 \u2264 x * y ^ 2 * x := mul_nonneg h\u2082 hx\n  have h\u2085 : 0 \u2264 x ^ 2 * y * y := mul_nonneg h\u2083 hy\n  have h\u2086 : 0 \u2264 x * y * (x * y ^ 2) := mul_nonneg h\u2081 h\u2082\n  have h\u2087 : 0 \u2264 x * y * (x ^ 2 * y) := mul_nonneg h\u2081 h\u2083\n  nlinarith [sq_nonneg (x * y - 1 / 2), sq_nonneg (x - y)]\n  <;> nlinarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hxy : x + y = 1) :\n            (x * y) ^ 4 * (x + y) + (x + y) ^ 3 \u2265 4 * x * y * (x * y) ^ 2:= by\n  have : x * y \u2264 1 / 4 := by\n    nlinarith [sq_nonneg (x - 1 / 2), sq_nonneg (y - 1 / 2)]\n  have h\u2080 : 0 \u2264 x * y := by nlinarith\n  have h\u2081 : 0 \u2264 x * y * (x * y) ^ 2 := by positivity\n  have h\u2082 : 0 \u2264 x * y * (x + y) := by positivity\n  have h\u2083 : 0 \u2264 x * y * (x + y) ^ 2 := by positivity\n  have h\u2084 : 0 \u2264 x * y * (x + y) ^ 3 := by positivity\n  nlinarith [mul_self_nonneg (x * y - 1 / 2), mul_self_nonneg (x * y * (x + y) - 1 / 2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hxy : x + y = 1) :\n            (x * y) ^ 4 * (x + y) + (x + y) ^ 3 \u2265 4 * x * y * (x * y) ^ 2:= by\n  have : y = 1 - x := by linarith\n  subst this\n  have h\u2081 : 0 \u2264 x * (1 - x) := by nlinarith\n  have h\u2082 : 0 \u2264 x ^ 2 * (1 - x) ^ 2 := by nlinarith\n  have h\u2083 : 0 \u2264 x ^ 3 * (1 - x) ^ 3 := by nlinarith\n  have h\u2084 : 0 \u2264 x ^ 2 * (1 - x) ^ 2 * (x ^ 2 * (1 - x) ^ 2) := by nlinarith\n  nlinarith [sq_nonneg (x * (1 - x) - 1 / 4)]\n  <;> assumption\n  <;> simp_all\n  <;> linarith\n  <;> assumption\n  <;> simp_all\n  <;> linarith\n  <;> assumption\n  <;> simp_all\n  <;> linarith\n  <;> assumption\n  <;> simp_all\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hxy : x + y = 1) :\n            (x * y) ^ 4 * (x + y) + (x + y) ^ 3 \u2265 4 * x * y * (x * y) ^ 2:= by\n  have h\u2081 : x * y \u2264 1 / 4 := by\n    nlinarith [sq_nonneg (x - 1 / 2), sq_nonneg (y - 1 / 2)]\n  have h\u2082 : 0 \u2264 x * y := by\n    nlinarith\n  have h\u2083 : 0 \u2264 x * y ^ 2 := by\n    nlinarith\n  have h\u2084 : 0 \u2264 x ^ 2 * y := by\n    nlinarith\n  have h\u2085 : 0 \u2264 x * y ^ 2 * (x ^ 2 * y) := by\n    nlinarith\n  have h\u2086 : 0 \u2264 (x * y) ^ 4 := by\n    nlinarith\n  nlinarith [sq_nonneg (x * y - 1 / 2)]"
  ]
 },
 {
  "old": ": \u2200 A B C : \u211d, cos A * cos B ^ 2 * cos C ^ 3 + cos B * cos C ^ 2 * cos A ^ 3 + cos C * cos A ^ 2 * cos B ^ 3 \u2264 3 / 64 := by",
  "new": ": Real.sqrt (Real.sqrt (1 + a ^ 2) ^ 2 + b ^ 2) + Real.sqrt (Real.sqrt (1 + b ^ 2) ^ 2 + c ^ 2) + Real.sqrt (Real.sqrt (1 + c ^ 2) ^ 2 + a ^ 2) \u2265 Real.sqrt (2 + a ^ 2 + b ^ 2 + c ^ 2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) ^ 2 + b ^ 2) +\n        Real.sqrt (Real.sqrt (1 + b ^ 2) ^ 2 + c ^ 2) +\n      Real.sqrt (Real.sqrt (1 + c ^ 2) ^ 2 + a ^ 2) \u2265\n     Real.sqrt (2 + a ^ 2 + b ^ 2 + c ^ 2):= by\n  have h\u2080 : Real.sqrt (1 + a ^ 2) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2081 : Real.sqrt (1 + b ^ 2) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2082 : Real.sqrt (1 + c ^ 2) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2083 : Real.sqrt (Real.sqrt (1 + a ^ 2) ^ 2 + b ^ 2) \u2265 Real.sqrt (1 + b ^ 2) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_sqrt (show 0 \u2264 1 + a ^ 2 from by nlinarith)]\n  have h\u2084 : Real.sqrt (Real.sqrt (1 + b ^ 2) ^ 2 + c ^ 2) \u2265 Real.sqrt (1 + c ^ 2) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_sqrt (show 0 \u2264 1 + b ^ 2 from by nlinarith)]\n  have h\u2085 : Real.sqrt (Real.sqrt (1 + c ^ 2) ^ 2 + a ^ 2) \u2265 Real.sqrt (1 + a ^ 2) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_sqrt (show 0 \u2264 1 + c ^ 2 from by nlinarith)]\n  nlinarith [sq_sqrt (show 0 \u2264 2 + a ^ 2 + b ^ 2 + c ^ 2 from by nlinarith),\n    sq_sqrt (show 0 \u2264 1 + a ^ 2 from by nlinarith),\n    sq_sqrt (show 0 \u2264 1 + b ^ 2 from by nlinarith),\n    sq_sqrt (show 0 \u2264 1 + c ^ 2 from by nlinarith)]\n  <;> norm_num"
  ]
 },
 {
  "old": "(n : \u2115) (y : \u2115 \u2192 NNReal) (h\u2080 : \u220f i in Finset.range n, y i = 1) : \u2211 i in Finset.range n, y i / Real.sqrt (1 + y i) \u2265 n / Real.sqrt 2 := by",
  "new": "{x y : \u211d} (hx : 0 < x) (hy : 0 < y) (h : x ^ 2 + y ^ 2 = 1) : x / Real.sqrt (1 + x ^ 2) + y / Real.sqrt (1 + y ^ 2) \u2265 1 / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {x y : \u211d} (hx : 0 < x) (hy : 0 < y) (h : x ^ 2 + y ^ 2 = 1) :\n    x / Real.sqrt (1 + x ^ 2) + y / Real.sqrt (1 + y ^ 2) \u2265 1 / 2:= by\n  have : 0 < x * y := mul_pos hx hy\n  have h\u2080 : Real.sqrt (1 + x ^ 2) \u2264 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  have h\u2081 : Real.sqrt (1 + y ^ 2) \u2264 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  have h\u2082 : x / Real.sqrt (1 + x ^ 2) \u2265 x / 2 := by\n    gcongr\n    <;> nlinarith\n  have h\u2083 : y / Real.sqrt (1 + y ^ 2) \u2265 y / 2 := by\n    gcongr\n    <;> nlinarith\n  nlinarith\n  <;> norm_num"
  ]
 },
 {
  "old": ": \u2200 a b c : \u211d, a * b + b * c + c * a \u2264 0 \u2192 a^2 * b^2 + b^2 * c^2 + c^2 * a^2 + a * b * c * (a + b + c) \u2265 a * b * (a^2 + b^2) + b * c * (b^2 + c^2) + c * a * (c^2 + a^2) := by",
  "new": "(a b c : \u211d) (h\u2081 : a^2 + b^2 + c^2 = 1) (h\u2082 : a * b + b * c + c * a \u2264 0) : \u2203 x y : \u211d, x * y = a * b * c * (a + b + c) \u2227 x^2 + y^2 \u2265 a * b * (a^2 + b^2) + b * c * (b^2 + c^2) + c * a * (c^2 + a^2) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (h\u2081 : a^2 + b^2 + c^2 = 1) (h\u2082 : a * b + b * c + c * a \u2264 0) : \u2203 x y : \u211d, x * y = a * b * c * (a + b + c) \u2227 x^2 + y^2 \u2265 a * b * (a^2 + b^2) + b * c * (b^2 + c^2) + c * a * (c^2 + a^2)  := by\n  refine' \u27e8a * b, c * (a + b + c), _, _\u27e9 <;> nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a),\n      mul_self_nonneg (a * b), mul_self_nonneg (b * c), mul_self_nonneg (c * a)]\n  <;> nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a),\n      mul_self_nonneg (a * b), mul_self_nonneg (b * c), mul_self_nonneg (c * a)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (h\u2081 : a^2 + b^2 + c^2 = 1) (h\u2082 : a * b + b * c + c * a \u2264 0) : \u2203 x y : \u211d, x * y = a * b * c * (a + b + c) \u2227 x^2 + y^2 \u2265 a * b * (a^2 + b^2) + b * c * (b^2 + c^2) + c * a * (c^2 + a^2)  := by\n  refine \u27e8a * b * c, a + b + c,?_,?_\u27e9 <;>\n  nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    sq_nonneg (a * b), sq_nonneg (b * c), sq_nonneg (c * a)]\n  <;>\n    nlinarith\n  <;>\n    nlinarith\n  <;>\n    nlinarith\n  <;>\n    nlinarith\n  <;>\n    nlinarith\n  <;>\n    nlinarith\n  <;>\n    nlinarith\n  <;>\n    nlinarith"
  ]
 },
 {
  "old": "(x : \u211d) (hx : 0 < x) : x / (1 + x ^ 2) \u2264 (3 * Real.sqrt 3) / 16 * (1 + x ^ 2) := by",
  "new": ": x / (1 + x ^ 2) \u2264 (3 * Real.sqrt 3) / 16 * (1 + x ^ 2) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    x / (1 + x ^ 2) \u2264 (3 * Real.sqrt 3) / 16 * (1 + x ^ 2)  := by\n  have h\u2081 : 0 < Real.sqrt 3 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2082 : 0 < 3 * Real.sqrt 3 := by positivity\n  have h\u2083 : 0 < 1 + x ^ 2 := by positivity\n  have h\u2084 : 0 < Real.sqrt 3 * (1 + x ^ 2) := by positivity\n  have h\u2085 : 0 < Real.sqrt 3 * (1 + x ^ 2) ^ 2 := by positivity\n  rw [div_le_iff (by positivity)]\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 by norm_num),\n    mul_self_nonneg (x - Real.sqrt 3 / 3),\n    mul_self_nonneg (x ^ 2 - 1 / 3)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    x / (1 + x ^ 2) \u2264 (3 * Real.sqrt 3) / 16 * (1 + x ^ 2)  := by\n  have h\u2080 : 0 < 1 + x ^ 2 := by nlinarith\n  have h\u2081 : 0 < Real.sqrt 3 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2082 : 0 < 3 * Real.sqrt 3 := by positivity\n  rw [div_le_iff h\u2080]\n  nlinarith [sq_sqrt (show 0 \u2264 3 from by norm_num),\n    mul_self_nonneg (x - Real.sqrt 3 / 3),\n    mul_self_nonneg (x + Real.sqrt 3 / 3),\n    mul_self_nonneg (x ^ 2 - 1 / 3)]\n  <;> assumption\n  <;> try norm_num\n  <;> linarith\n  <;> assumption\n  <;> try norm_num\n  <;> linarith\n  <;> assumption\n  <;> try norm_num\n  <;> linarith\n  <;> assumption\n  <;> try norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    x / (1 + x ^ 2) \u2264 (3 * Real.sqrt 3) / 16 * (1 + x ^ 2)  := by\n  have h\u2080 : (0 : \u211d) < Real.sqrt 3 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2081 : 0 < 3 * Real.sqrt 3 := by linarith\n  have h\u2082 : 0 < 1 + x ^ 2 := by nlinarith\n  have h\u2083 : 0 < 16 := by norm_num\n  have h\u2084 : 0 < 3 * Real.sqrt 3 * (1 + x ^ 2) := by positivity\n  have h\u2085 : 0 < (1 + x ^ 2) ^ 2 := by positivity\n  rw [div_le_iff (by positivity)]\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 by norm_num),\n    mul_self_nonneg (x - Real.sqrt 3 / 3),\n    mul_self_nonneg (x ^ 2 - 1 / 3)]"
  ]
 },
 {
  "old": "(a b c : \u211d) : a^5 + b^5 + c^5 + 4 * (a^3 * b^2 + a^3 * c^2 + b^3 * c^2) + 6 * (a * b^2 * c^2 + a^2 * b * c^2 + a^2 * b^2 * c) \u2265 6 * (a^4 * b + a^4 * c + b^4 * c + b^4 * a + c^4 * b + c^4 * a) + 3 * (a^3 * b * c + a^2 * b^2 * c + a^2 * b * c^2 + a * b^2 * c^2) := by",
  "new": "(a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) : a * b * c * (a + b + c) * (b + c + a) * (c + a + b) \u2265 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) :\n     a * b * c * (a + b + c) * (b + c + a) * (c + a + b) \u2265 0:= by positivity\n  <;> try norm_num <;> try linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) :\n     a * b * c * (a + b + c) * (b + c + a) * (c + a + b) \u2265 0:= by\n  have : 0 \u2264 a * b := mul_nonneg ha hb\n  have : 0 \u2264 b * c := mul_nonneg hb hc\n  have : 0 \u2264 c * a := mul_nonneg hc ha\n  have : 0 \u2264 a * b * c := mul_nonneg (mul_nonneg ha hb) hc\n  positivity\n  <;> nlinarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) :\n     a * b * c * (a + b + c) * (b + c + a) * (c + a + b) \u2265 0:= by positivity\n  <;> simp_all only [mul_assoc, mul_comm, mul_left_comm]\n  <;> positivity\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) :\n     a * b * c * (a + b + c) * (b + c + a) * (c + a + b) \u2265 0:= by\n  refine' mul_nonneg (mul_nonneg (mul_nonneg (mul_nonneg _ _) _) _) _\n  all_goals nlinarith"
  ]
 },
 {
  "old": "(a : \u2124) (ha : a \u2260 0) : a \u2223 a := by",
  "new": "(a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by\n  by_cases h\u2081 : a.Coprime b\n  exacts [Or.inl h\u2081, Or.inr (by simp [h\u2081])]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by\n  have h : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by\n    by_cases h\u2081 : (Nat.Coprime a b)\n    exact Or.inl h\u2081\n    exact Or.inr h\u2081\n  exact h"
  ]
 },
 {
  "old": "(n : \u2115) (hn : 1 \u2264 n) : (1/(n + 1) : \u211d) \u2264 Real.log (1 + 1/n) \u2227 Real.log (1 + 1/n) \u2264 (1/n : \u211d) := by",
  "new": "(n : \u2115) (hn : 1 < n) : Real.log (1 + 1 / \u2191n) < 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_one_add_inv_int_lt_one (n : \u2115) (hn : 1 < n) :\n     Real.log (1 + 1 / \u2191n) < 1:= by\n  have h1 : (1 : \u211d) / n \u2265 0 := by positivity\n  have h2 : (1 : \u211d) / n < 1 := by\n    rw [div_lt_iff (by positivity)]\n    norm_cast\n    nlinarith\n  exact (Real.log_le_sub_one_of_pos (by positivity)).trans_lt (by linarith)\n  <;> try norm_cast\n  <;> try linarith"
  ]
 },
 {
  "old": "(p : \u2115) (hp : 1 < p) : \u00ac\u2203 (x y : \u2124), (x : \u211d)^p = y^2 + 1 := by",
  "new": "(i : \u2115) (hi : 1 < i) : (\u2203 x y : \u2124, x ^ 2 + y ^ 2 = 1 \u2227 (x : \u211a) ^ i = x * y + 1) \u2194 1 = 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : 1 < i) : (\u2203 x y : \u2124, x ^ 2 + y ^ 2 = 1 \u2227 (x : \u211a) ^ i = x * y + 1) \u2194 1 = 1:= by\n  exact \u27e8fun \u27e8x, y, hxy, hx\u27e9 => by simpa using hx, fun _ => \u27e81, 0, by simp, by simp\u27e9\u27e9\n  <;> simp_all"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : x > 0 \u2227 y > 0 \u2227 z > 0 \u2227 x + y + z = 1) :x * (x + y) ^ 3 + y * (y + z) ^ 3 + z * (z + x) ^ 3 \u2265 8 / 27 * (x + y + z) ^ 4 := by",
  "new": ": x * (x + y) ^ 3 + y * (y + z) ^ 3 + z * (z + x) ^ 3 \u2265 8 / 27 * (x + y + z) ^ 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    x * (x + y) ^ 3 + y * (y + z) ^ 3 + z * (z + x) ^ 3 \u2265 8 / 27 * (x + y + z) ^ 4:= by\n  cases' le_total x y with h h <;>\n  cases' le_total y z with h' h' <;>\n  cases' le_total z x with h'' h'' <;>\n  simp_all [mul_add, mul_comm, mul_left_comm, pow_two, pow_three]\n  all_goals\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n      sq_nonneg (x + y), sq_nonneg (y + z), sq_nonneg (z + x)]\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    x * (x + y) ^ 3 + y * (y + z) ^ 3 + z * (z + x) ^ 3 \u2265 8 / 27 * (x + y + z) ^ 4:= by\n  cases' le_total x y with h h <;>\n  cases' le_total y z with h\u2082 h\u2082 <;>\n  cases' le_total z x with h\u2083 h\u2083 <;>\n  simp_all [mul_assoc] <;>\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    sq_nonneg (x + y), sq_nonneg (y + z), sq_nonneg (z + x)]\n  <;>\n  nlinarith\n  <;>\n  nlinarith\n  <;>\n  nlinarith\n  <;>\n  nlinarith\n  <;>\n  nlinarith\n  <;>\n  nlinarith\n  <;>\n  nlinarith\n  <;>\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    x * (x + y) ^ 3 + y * (y + z) ^ 3 + z * (z + x) ^ 3 \u2265 8 / 27 * (x + y + z) ^ 4:= by\n  cases' le_total x y with h h <;>\n    cases' le_total y z with h' h' <;>\n    cases' le_total z x with h'' h'' <;>\n    simp_all [mul_comm, mul_left_comm, mul_assoc]\n  all_goals nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    sq_nonneg (x + y), sq_nonneg (x + z), sq_nonneg (y + z)]\n  <;> linarith\n  <;> norm_num"
  ]
 },
 {
  "old": "(a b : \u211d) (ha : 0 < a) (hb : 0 < b) : Real.sqrt (a ^ 2 + a * b + b ^ 2) + (2 - Real.sqrt 3) * Real.sqrt (a * b) \u2265 a + b := by",
  "new": ": Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c) \u2265 a + b + c - Real.sqrt (3 * (a ^ 2 + b ^ 2 + c ^ 2)) / 3 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c) \u2265 a + b + c - Real.sqrt (3 * (a ^ 2 + b ^ 2 + c ^ 2)) / 3 := by\n  have h\u2081 : 0 \u2264 (a - b) ^ 2 + (a - c) ^ 2 + (b - c) ^ 2 := by positivity\n  have h\u2082 : 0 \u2264 Real.sqrt (3 * (a ^ 2 + b ^ 2 + c ^ 2)) := by positivity\n  have h\u2083 : 0 \u2264 Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c) := by positivity\n  have h\u2084 : Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c) \u2265 a + b + c := by\n    apply le_sqrt_of_sq_le\n    linarith\n  linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c) \u2265 a + b + c - Real.sqrt (3 * (a ^ 2 + b ^ 2 + c ^ 2)) / 3 := by\n  have ineq0 : 0 \u2264 Real.sqrt (3 * (a ^ 2 + b ^ 2 + c ^ 2)) := Real.sqrt_nonneg _\n  have ineq1 : Real.sqrt (3 * (a ^ 2 + b ^ 2 + c ^ 2)) / 3 \u2265 0 := by linarith\n  have ineq2 : Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c) \u2265 a + b + c := by\n    apply Real.le_sqrt_of_sq_le\n    linarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c)]\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c) \u2265 a + b + c - Real.sqrt (3 * (a ^ 2 + b ^ 2 + c ^ 2)) / 3 := by\n  have ineq : Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2 + 2 * a * b + 2 * a * c + 2 * b * c) \u2265 a + b + c := by\n    apply Real.le_sqrt_of_sq_le\n    linarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c)]\n  have h\u2080 : 0 \u2264 Real.sqrt (3 * (a ^ 2 + b ^ 2 + c ^ 2)) := by positivity\n  linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (h1 : a>0 \u2227 b>0 \u2227 c>0 \u2227 a * b * c = 1) : (a + b) / c + (c + a) / b + (b + c) / a \u2265 2 * (a + b + c + 1 / a + 1 / b + 1 / c - 3) := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192 a ^ 2 + b ^ 2 + c ^ 2 + (1 / a + 1 / b + 1 / c) ^ 2 \u2265 a * b + b * c + c * a + 2 * (a * b * c):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192\n    a ^ 2 + b ^ 2 + c ^ 2 + (1 / a + 1 / b + 1 / c) ^ 2 \u2265 a * b + b * c + c * a + 2 * (a * b * c):= by\n  intro a b c h\n  have ha : 0 < a := h.1\n  have hb : 0 < b := h.2.1\n  have hc : 0 < c := h.2.2.1\n  have h\u2081 : a * b * c = 1 := h.2.2.2\n  have h\u2082 : a ^ 2 + b ^ 2 + c ^ 2 \u2265 a * b + b * c + c * a := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  have h\u2083 : (1 / a + 1 / b + 1 / c) ^ 2 \u2265 2 := by\n    rw [sq]\n    have : 0 < a * b := mul_pos ha hb\n    have : 0 < b * c := mul_pos hb hc\n    have : 0 < c * a := mul_pos hc ha\n    have : 1 / a + 1 / b + 1 / c \u2265 3 := by\n      field_simp\n      rw [le_div_iff' (by positivity), mul_comm]\n      nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a)]\n    nlinarith [sq_nonneg (1 / a + 1 / b + 1 / c)]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192\n    a ^ 2 + b ^ 2 + c ^ 2 + (1 / a + 1 / b + 1 / c) ^ 2 \u2265 a * b + b * c + c * a + 2 * (a * b * c):= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have : 0 < a * b := mul_pos ha hb\n  have : 0 < b * c := mul_pos hb hc\n  have : 0 < c * a := mul_pos hc ha\n  field_simp [habc]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a - 1), mul_self_nonneg (b - 1), mul_self_nonneg (c - 1)]"
  ]
 },
 {
  "old": "(k q : \u2115) : (\u2203 x y : \u2115, k = x^2 + y^2) \u2227 (\u2203 x y : \u2115, q = x^2 + y^2) \u2192 \u2203 x y : \u2115, k * q = x^2 + y^2 := by",
  "new": "(x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y):= by\n  cases em (Nat.Coprime x y)\n  next h => exact Or.inl h\n  next h => exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y):= by\n  by_cases h : Nat.Coprime x y <;> simp [h]\n  <;> rcases Nat.eq_zero_or_pos x with hx | hx\n  <;> rcases Nat.eq_zero_or_pos y with hy | hy\n  <;> simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;> omega\n  <;> omega\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y):= by\n  by_cases h : Nat.Coprime x y <;> simp [h]\n  <;> rcases Nat.eq_zero_or_pos x with (rfl | hx) <;> rcases Nat.eq_zero_or_pos y with (rfl | hy) <;>\n    simp_all [Nat.coprime_iff_gcd_eq_one, Nat.gcd_eq_zero_iff]\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (hab : 0 < a \u2227 0 < b \u2227 0 < c) (habc : a * b + b * c + c * a = 1) : \u221a(a + b) + \u221a(b + c) + \u221a(c + a) \u2264 \u221a(2 / (a * b * c)) := by",
  "new": "(a b c : \u211d) (hab : 0 < a \u2227 0 < b \u2227 0 < c) (habc : a * b + b * c + c * a = 1) : 3 * (a + b + c + 1) \u2265 4 * (Real.sqrt (a * b) + Real.sqrt (b * c) + Real.sqrt (c * a) - 1) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (hab : 0 < a \u2227 0 < b \u2227 0 < c) (habc : a * b + b * c + c * a = 1) :   3 * (a + b + c + 1) \u2265 4 * (Real.sqrt (a * b) + Real.sqrt (b * c) + Real.sqrt (c * a) - 1)    := by\n  have h\u2080 : 0 < a * b := mul_pos hab.1 hab.2.1\n  have h\u2081 : 0 < b * c := mul_pos hab.2.1 hab.2.2\n  have h\u2082 : 0 < c * a := mul_pos hab.2.2 hab.1\n  nlinarith [sq_sqrt (le_of_lt h\u2080), sq_sqrt (le_of_lt h\u2081), sq_sqrt (le_of_lt h\u2082),\n    sq_nonneg (Real.sqrt (a * b) - 1 / 2), sq_nonneg (Real.sqrt (b * c) - 1 / 2),\n    sq_nonneg (Real.sqrt (c * a) - 1 / 2)]\n  <;> linarith\n  <;> linarith"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x + y + z) ^ 2 / 3 \u2265 x * Real.sqrt (y * z) + y * Real.sqrt (z * x) + z * Real.sqrt (x * y) := by",
  "new": ": Real.sqrt (Real.sqrt (2 + 1) + 1) < 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (2 + 1) + 1) < 3:= by\n  have h\u2080 : Real.sqrt (2 + 1) < 3 := by\n    refine' Real.sqrt_lt' (by positivity) |>.mpr _\n    norm_num\n  refine' Real.sqrt_lt' (by positivity) |>.mpr _\n  nlinarith [h\u2080]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (2 + 1) + 1) < 3:= by\n  rw [Real.sqrt_lt (by positivity)]\n  all_goals norm_num [Real.sqrt_lt, \u2190 sub_pos]\n  <;> nlinarith [Real.sq_sqrt (show (0 : \u211d) \u2264 3 by norm_num)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (2 + 1) + 1) < 3:= by\n  have h\u2081 : Real.sqrt (2 + 1) < 2:= by\n    rw [Real.sqrt_lt (by positivity)]\n    all_goals norm_num\n  have h\u2082 : Real.sqrt (Real.sqrt (2 + 1) + 1) < 3 := by\n    rw [Real.sqrt_lt (by positivity)]\n    all_goals nlinarith\n  exact h\u2082"
  ]
 },
 {
  "old": "(p j : \u2115) (hp : p.Prime) (hj : 0 \u2264 j \u2227 j \u2264 p-1): (Nat.choose (p-1) j) \u2261 (-1 : \u2124)^j [ZMOD p] := by",
  "new": "(p : \u2115) (hp : p.Prime) (h\u2081 : 1 < p) : \u2203 n : \u2115, \u2200 k : \u2115, k \u2264 n \u2192 \u00ac (Nat.choose (p-1) k) \u2261 0 [ZMOD p] := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lucas_1910_2 (p : \u2115) (hp : p.Prime) (h\u2081 : 1 < p) : \n    \u2203 n : \u2115, \u2200 k : \u2115, k \u2264 n \u2192 \n    \u00ac (Nat.choose (p-1) k) \u2261 0 [ZMOD p]  := by\n  use 0\n  intro k hk\n  norm_num\n  have h\u2081 := Nat.prime_iff.1 hp\n  have h\u2082 := Nat.choose_pos (by omega : k \u2264 p - 1)\n  have h\u2083 := Nat.mod_lt (Nat.choose (p - 1) k) (by omega : 0 < p)\n  simp_all [Int.ModEq, Int.emod_eq_of_lt]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a^4 / (a + b) + b^4 / (b + c) + c^4 / (c + a) \u2265 (a^3 + b^3 + c^3) / 2 := by",
  "new": ": \u2200 x : \u211d, x > 0 \u2192 x ^ 3 / (x ^ 3 + 1) \u2264 x / (x + 1) + 1 / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 3 / (x ^ 3 + 1) \u2264 x / (x + 1) + 1 / 2:= by\n  rintro x (hx : 0 < x)\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (x ^ 2 - x)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 3 / (x ^ 3 + 1) \u2264 x / (x + 1) + 1 / 2:= by\n  intro x hx\n  have h : 0 < x ^ 3 := pow_pos hx 3\n  field_simp [h]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - 1), h]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 3 / (x ^ 3 + 1) \u2264 x / (x + 1) + 1 / 2:= by\n  intro x hx\n  have hx_pos : 0 < x := hx\n  have hx_cube_pos : 0 < x ^ 3 := pow_pos hx_pos 3\n  apply le_of_sub_nonneg\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - 1), hx_cube_pos]\n  <;> positivity"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x / (Real.sqrt (y + z)) + y / (Real.sqrt (z + x)) + z / (Real.sqrt (x + y))) \u2265 (27 * (x ^ 2 + y ^ 2 + z ^ 2) / 4) ^ (1 / 4) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : x ^ 2 / y + y ^ 2 / z + z ^ 2 / x \u2265 2 * (x * y / (x + y) + y * z / (y + z) + z * x / (z + x)):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) :  x ^ 2 / y + y ^ 2 / z + z ^ 2 / x \u2265 2 * (x * y / (x + y) + y * z / (y + z) + z * x / (z + x)):= by\n  have : 0 < x * y := mul_pos hx hy\n  have : 0 < y * z := mul_pos hy hz\n  have : 0 < z * x := mul_pos hz hx\n  have h\u2081 : x ^ 2 / y + y ^ 2 / z + z ^ 2 / x \u2265 2 * (x * y / (x + y) + y * z / (y + z) + z * x / (z + x)) := by\n    have : x ^ 2 / y + y ^ 2 / z + z ^ 2 / x \u2265 x + y + z := by\n      have : 0 < x * y * z := by positivity\n      have : 0 < x * y * z * (x * y + y * z + z * x) := by positivity\n      field_simp\n      rw [le_div_iff (by positivity)]\n      nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n    have : 2 * (x * y / (x + y) + y * z / (y + z) + z * x / (z + x)) \u2264 x + y + z := by\n      have : 0 < x + y + z := by positivity\n      have : 0 < x * y * (x + y) := by positivity\n      have : 0 < y * z * (y + z) := by positivity\n      have : 0 < z * x * (z + x) := by positivity\n      field_simp\n      rw [div_le_iff (by positivity)]\n      nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n    linarith\n  linarith\n  <;> try norm_num\n  <;> linarith\n  <;> try norm_num\n  <;> linarith\n  <;> try norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) :  x ^ 2 / y + y ^ 2 / z + z ^ 2 / x \u2265 2 * (x * y / (x + y) + y * z / (y + z) + z * x / (z + x)):= by\n  have hxy : 0 < x + y := by positivity\n  have hyz : 0 < y + z := by positivity\n  have hxz : 0 < z + x := by positivity\n  have hxyz : 0 < x * y := by positivity\n  have hyz : 0 < y * z := by positivity\n  have hxz : 0 < z * x := by positivity\n  have h\u2080 : x ^ 2 / y + y ^ 2 / z + z ^ 2 / x \u2265 2 * (x * y / (x + y) + y * z / (y + z) + z * x / (z + x)) := by\n    have h\u2081 : x ^ 2 / y + y ^ 2 / z + z ^ 2 / x \u2265 x + y + z := by\n      field_simp [mul_comm]\n      rw [le_div_iff (by positivity), mul_comm]\n      nlinarith [mul_self_nonneg (x - y), mul_self_nonneg (y - z), mul_self_nonneg (z - x)]\n    have h\u2082 : 2 * (x * y / (x + y) + y * z / (y + z) + z * x / (z + x)) \u2264 x + y + z := by\n      have h\u2083 : x * y / (x + y) \u2264 (x + y) / 4 := by\n        rw [div_le_div_iff (by positivity) (by positivity)]\n        nlinarith [sq_nonneg (x - y)]\n      have h\u2084 : y * z / (y + z) \u2264 (y + z) / 4 := by\n        rw [div_le_div_iff (by positivity) (by positivity)]\n        nlinarith [sq_nonneg (y - z)]\n      have h\u2085 : z * x / (z + x) \u2264 (z + x) / 4 := by\n        rw [div_le_div_iff (by positivity) (by positivity)]\n        nlinarith [sq_nonneg (z - x)]\n      nlinarith\n    linarith\n  linarith\n  <;> try norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) :  x ^ 2 / y + y ^ 2 / z + z ^ 2 / x \u2265 2 * (x * y / (x + y) + y * z / (y + z) + z * x / (z + x)):= by\n  have h1 : x * y > 0 := mul_pos hx hy\n  have h2 : y * z > 0 := mul_pos hy hz\n  have h3 : z * x > 0 := mul_pos hz hx\n  have h4 : x * y / (x + y) \u2264 (x + y) / 4 := by\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (x - y)]\n  have h5 : y * z / (y + z) \u2264 (y + z) / 4 := by\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (y - z)]\n  have h6 : z * x / (z + x) \u2264 (z + x) / 4 := by\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (z - x)]\n  have h7 : x ^ 2 / y + y ^ 2 / z + z ^ 2 / x \u2265 2 * (x * y / (x + y) + y * z / (y + z) + z * x / (z + x)) := by\n    have h7 : x ^ 2 / y + y ^ 2 / z + z ^ 2 / x \u2265 2 * (x * y / (x + y) + y * z / (y + z) + z * x / (z + x)) := by\n      have h7 : 0 < y * z := mul_pos hy hz\n      have h8 : 0 < z * x := mul_pos hz hx\n      have h9 : 0 < x * y := mul_pos hx hy\n      have h10 : x ^ 2 / y + y ^ 2 / z + z ^ 2 / x \u2265 2 * (x * y / (x + y) + y * z / (y + z) + z * x / (z + x)) := by\n        have h11 : x ^ 2 / y + y ^ 2 / z + z ^ 2 / x \u2265 x + y + z := by\n          have h12 : 0 < x * y := mul_pos hx hy\n          have h13 : 0 < y * z := mul_pos hy hz\n          have h14 : 0 < z * x := mul_pos hz hx\n          field_simp\n          rw [le_div_iff (by positivity), mul_comm]\n          nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n        have h15 : x * y / (x + y) + y * z / (y + z) + z * x / (z + x) \u2264 x + y + z := by\n          have h16 : x * y / (x + y) \u2264 (x + y) / 4 := by\n            rw [div_le_div_iff (by positivity) (by positivity)]\n            nlinarith [sq_nonneg (x - y)]\n          have h17 : y * z / (y + z) \u2264 (y + z) / 4 := by\n            rw [div_le_div_iff (by positivity) (by positivity)]\n            nlinarith [sq_nonneg (y - z)]\n          have h18 : z * x / (z + x) \u2264 (z + x) / 4 := by\n            rw [div_le_div_iff (by positivity) (by positivity)]\n            nlinarith [sq_nonneg (z - x)]\n          nlinarith\n        nlinarith\n      exact h10\n    exact h7\n  exact h7"
  ]
 },
 {
  "old": "(a b : \u211d) (ha : 0 < a) (hb : 0 < b) (hab : 3 \u2264 a * b) : 1 / Real.sqrt (a ^ 2 + 1) + 1 / Real.sqrt (b ^ 2 + 1) \u2265 2 / Real.sqrt (1 + a * b) := by",
  "new": "(x y : \u211d) (hx : 0 < x) (hy : 0 < y) (h : x * y \u2265 1) : x / Real.sqrt (x ^ 2 + y ^ 2) + y / Real.sqrt (y ^ 2 + x ^ 2) \u2265 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (h : x * y \u2265 1) :\n       x / Real.sqrt (x ^ 2 + y ^ 2) + y / Real.sqrt (y ^ 2 + x ^ 2) \u2265 1:= by\n  have h\u2080 : Real.sqrt (x ^ 2 + y ^ 2) \u2264 (x + y) := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith\n  have h\u2081 : Real.sqrt (y ^ 2 + x ^ 2) \u2264 (x + y) := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith\n  calc\n    x / Real.sqrt (x ^ 2 + y ^ 2) + y / Real.sqrt (y ^ 2 + x ^ 2) \u2265 x / (x + y) + y / (x + y) := by\n      gcongr <;> nlinarith\n    _ = (x + y) / (x + y) := by field_simp\n    _ = 1 := by\n      field_simp\n  <;> linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (h : x * y \u2265 1) :\n       x / Real.sqrt (x ^ 2 + y ^ 2) + y / Real.sqrt (y ^ 2 + x ^ 2) \u2265 1:= by\n  have h\u2080 : Real.sqrt (x ^ 2 + y ^ 2) \u2264 x + y := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (x - y)]\n  have h\u2081 : Real.sqrt (y ^ 2 + x ^ 2) \u2264 x + y := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (y - x)]\n  calc\n    x / Real.sqrt (x ^ 2 + y ^ 2) + y / Real.sqrt (y ^ 2 + x ^ 2) \u2265 x / (x + y) + y / (x + y) := by\n      gcongr <;> nlinarith\n    _ = (x + y) / (x + y) := by field_simp\n    _ = 1 := by field_simp",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (h : x * y \u2265 1) :\n       x / Real.sqrt (x ^ 2 + y ^ 2) + y / Real.sqrt (y ^ 2 + x ^ 2) \u2265 1:= by\n  have key : 0 < Real.sqrt (x ^ 2 + y ^ 2) := Real.sqrt_pos.mpr (by positivity)\n  have key\u2082 : 0 < Real.sqrt (y ^ 2 + x ^ 2) := Real.sqrt_pos.mpr (by positivity)\n  have key\u2083 : Real.sqrt (x ^ 2 + y ^ 2) \u2264 x + y := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith\n  have key\u2084 : Real.sqrt (y ^ 2 + x ^ 2) \u2264 x + y := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith\n  calc\n    x / Real.sqrt (x ^ 2 + y ^ 2) + y / Real.sqrt (y ^ 2 + x ^ 2) \u2265 x / (x + y) + y / (x + y) := by\n      gcongr <;> nlinarith\n    _ = 1 := by field_simp\n  <;> nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (h : a>0 \u2227 b>0 \u2227 c>0 \u2227 a * b * c = 1) : (a + b + c) / 3 \u2265 ((a ^ 3 + b ^ 3 + c ^ 3) / 3) ^ (1 / 11) := by",
  "new": "(a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 a = 1 \u2227 b = 1 \u2228 a = 0 \u2227 b = 1 \u2228 a = 1 \u2227 b = 0 \u2228 a = 1 \u2227 b = 1 \u2228 a = 0 \u2227 b = 1 \u2228 a = 1 \u2227 b = 0 \u2228 a = 1 \u2227 b = 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) :\n    a = 1 \u2227 b = 1 \u2228 a = 1 \u2227 b = 1 \u2228 a = 0 \u2227 b = 1 \u2228 a = 1 \u2227 b = 0 \u2228 a = 1 \u2227 b = 1 \u2228 a = 0 \u2227 b = 1 \u2228 a = 1 \u2227 b = 0 \u2228 a = 1 \u2227 b = 1:= by\n  cases' Nat.eq_zero_or_pos a with ha ha\n  all_goals aesop\n  all_goals aesop\n  all_goals aesop\n  all_goals aesop\n  all_goals aesop\n  all_goals aesop\n  all_goals aesop\n  all_goals aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) :\n    a = 1 \u2227 b = 1 \u2228 a = 1 \u2227 b = 1 \u2228 a = 0 \u2227 b = 1 \u2228 a = 1 \u2227 b = 0 \u2228 a = 1 \u2227 b = 1 \u2228 a = 0 \u2227 b = 1 \u2228 a = 1 \u2227 b = 0 \u2228 a = 1 \u2227 b = 1:= by\n  cases Nat.eq_zero_or_pos a <;> cases Nat.eq_zero_or_pos b <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) :\n    a = 1 \u2227 b = 1 \u2228 a = 1 \u2227 b = 1 \u2228 a = 0 \u2227 b = 1 \u2228 a = 1 \u2227 b = 0 \u2228 a = 1 \u2227 b = 1 \u2228 a = 0 \u2227 b = 1 \u2228 a = 1 \u2227 b = 0 \u2228 a = 1 \u2227 b = 1:= by\n  aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) :\n    a = 1 \u2227 b = 1 \u2228 a = 1 \u2227 b = 1 \u2228 a = 0 \u2227 b = 1 \u2228 a = 1 \u2227 b = 0 \u2228 a = 1 \u2227 b = 1 \u2228 a = 0 \u2227 b = 1 \u2228 a = 1 \u2227 b = 0 \u2228 a = 1 \u2227 b = 1:= by\n  rcases Nat.eq_zero_or_pos a with rfl | ha <;> rcases Nat.eq_zero_or_pos b with rfl | hb <;>\n    simp_all [mul_eq_one_iff]\n  <;> tauto\n  <;> omega\n  <;> linarith\n  <;> omega"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : (a + 1 / b) ^ 2 + (b + 1 / c) ^ 2 + (c + 1 / a) ^ 2 \u2265 6 * (a + b + c - 1) := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 1 \u2192 b \u2265 1 \u2192 c \u2265 1 \u2192 a * b * c = 1 \u2192 (1 / a + 1 / b + 1 / c) ^ 2 \u2265 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 1 \u2192 b \u2265 1 \u2192 c \u2265 1 \u2192 a * b * c = 1 \u2192 (1 / a + 1 / b + 1 / c) ^ 2 \u2265 3:= by\n  intro a b c h\u2080 h\u2081 h\u2082 h\u2083\n  have h\u2084 : 0 < a := by nlinarith\n  have h\u2085 : 0 < b := by nlinarith\n  have h\u2086 : 0 < c := by nlinarith\n  have h\u2087 : 0 < a * b := by nlinarith\n  have h\u2088 : 0 < b * c := by nlinarith\n  have h\u2089 : 0 < c * a := by nlinarith\n  field_simp [h\u2084, h\u2085, h\u2086]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 1 \u2192 b \u2265 1 \u2192 c \u2265 1 \u2192 a * b * c = 1 \u2192 (1 / a + 1 / b + 1 / c) ^ 2 \u2265 3:= by\n  intro a b c h\u2080 h\u2081 h\u2082 h\u2083\n  field_simp [h\u2080, h\u2081, h\u2082, h\u2083]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_nonneg (sq_nonneg (a - 1)) (sq_nonneg (b - 1)), mul_nonneg (sq_nonneg (b - 1)) (sq_nonneg (c - 1)), mul_nonneg (sq_nonneg (c - 1)) (sq_nonneg (a - 1))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 1 \u2192 b \u2265 1 \u2192 c \u2265 1 \u2192 a * b * c = 1 \u2192 (1 / a + 1 / b + 1 / c) ^ 2 \u2265 3:= by\n  rintro a b c (h\u2081 : 1 \u2264 a) (h\u2082 : 1 \u2264 b) (h\u2083 : 1 \u2264 c) (h\u2084 : a * b * c = 1)\n  have h\u2085 : a = 1 := by\n    nlinarith [mul_nonneg (sub_nonneg.mpr h\u2081) (mul_nonneg (sub_nonneg.mpr h\u2082) (sub_nonneg.mpr h\u2083))]\n  have h\u2086 : b = 1 := by\n    nlinarith [mul_nonneg (sub_nonneg.mpr h\u2082) (mul_nonneg (sub_nonneg.mpr h\u2083) (sub_nonneg.mpr h\u2081))]\n  have h\u2087 : c = 1 := by\n    nlinarith [mul_nonneg (sub_nonneg.mpr h\u2083) (mul_nonneg (sub_nonneg.mpr h\u2081) (sub_nonneg.mpr h\u2082))]\n  subst_vars\n  norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 1 \u2192 b \u2265 1 \u2192 c \u2265 1 \u2192 a * b * c = 1 \u2192 (1 / a + 1 / b + 1 / c) ^ 2 \u2265 3:= by\n  rintro a b c ha hb hc habc\n  have h\u2080 : 0 < a := by positivity\n  have h\u2081 : 0 < b := by positivity\n  have h\u2082 : 0 < c := by positivity\n  have h\u2083 : 0 < a * b := by positivity\n  have h\u2084 : 0 < b * c := by positivity\n  have h\u2085 : 0 < c * a := by positivity\n  field_simp [ha, hb, hc, habc, h\u2080, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    sq_nonneg (a * b - 1), sq_nonneg (b * c - 1), sq_nonneg (c * a - 1)]\n  <;> assumption\n  <;> assumption\n  <;> assumption"
  ]
 },
 {
  "old": ": \u00ac \u2203 (a : \u2124), (a : \u211d) = Real.log 2 := by",
  "new": ": Real.log 2 \u2260 1 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_ne_one : Real.log 2 \u2260 1 := by\n  intro h\n  have h\u2081 : Real.log 2 = 1 := h\n  have h\u2082 : Real.log 2 < 1 := Real.log_lt_sub_one_of_pos (by norm_num) (by norm_num) |>.trans_le (by norm_num)\n  linarith\n  <;> norm_num"
  ]
 },
 {
  "old": "(x y z : \u211d) : (x + y + z) * (x ^ 2 + y ^ 2 + z ^ 2) / (x + y) / (y + z) / (z + x) \u2265 (x / (y + z) + y / (z + x) + z / (x + y)) * (x * y / ((y + z) * (z + x)) + y * z / ((z + x) * (x + y)) + x * z / ((x + y) * (y + z))) := by",
  "new": "(x y z : \u211d) (h : x + y + z = 1) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) : (x ^ 2 * y + y ^ 2 * z + z ^ 2 * x) * (1 / (x + y) / (y + z) / (z + x)) \u2264 4 / 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_of_exp_bound (x y z : \u211d) (h : x + y + z = 1) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) :\n  (x ^ 2 * y + y ^ 2 * z + z ^ 2 * x) * (1 / (x + y) / (y + z) / (z + x)) \u2264 4 / 4:= by\n  have : (x + y + z) ^ 2 = 1 := by simp [h]\n  have : 0 \u2264 x * y := by positivity\n  have : 0 \u2264 y * z := by positivity\n  have : 0 \u2264 z * x := by positivity\n  have : 0 \u2264 (x * y) * (y * z) := by positivity\n  have : 0 \u2264 (y * z) * (z * x) := by positivity\n  have : 0 \u2264 (z * x) * (x * y) := by positivity\n  field_simp [h, hx, hy, hz]\n  apply div_le_of_nonneg_of_le_mul <;> nlinarith\n  <;> linarith"
  ]
 },
 {
  "old": "{a b : \u2115} (h\u2081 : 0 < a \u2227 0 < b) (h\u2082 : \u2200 p : \u2115, p.Prime \u2192 (a % p) \u2264 (b % p)) : a = b := by",
  "new": "(a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by\n  by_cases h : Nat.Coprime a b\n  exact Or.inl h\n  exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by\n  by_cases h : Nat.Coprime a b\n  exacts [Or.inl h, Or.inr h]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by\n  cases Classical.em (Nat.Coprime a b)\n  exact Or.inl \u2039_\u203a\n  exact Or.inr \u2039_\u203a",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by\n  exact by\n    by_cases h : Nat.Coprime a b\n    \u00b7 exact Or.inl h\n    \u00b7 exact Or.inr h"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : (1 / (c * d * (a + b)) + 1 / (a * d * (b + c)) + 1 / (a * b * (c + d)) + 1 / (b * c * (d + a))) \u2264 (a + b + c + d) / (2 * a * b * c * d) := by",
  "new": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : (a + b) * (c + d) * (a * d + b * c) * (a * b + c * d) \u2264 ((a + b) * (c + d) + (a * d + b * c) * (a * b + c * d)) ^ 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_step1 (a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) :\n       (a + b) * (c + d) * (a * d + b * c) * (a * b + c * d) \u2264 ((a + b) * (c + d) + (a * d + b * c) * (a * b + c * d)) ^ 2:= by\n  have h\u2081 : 0 \u2264 (a + b) * (c + d) := by positivity\n  have h\u2082 : 0 \u2264 a * d + b * c := by positivity\n  have h\u2083 : 0 \u2264 a * b + c * d := by positivity\n  have h\u2084 : 0 \u2264 (a + b) * (c + d) * (a * d + b * c) := by positivity\n  have h\u2085 : 0 \u2264 (a + b) * (c + d) * (a * b + c * d) := by positivity\n  nlinarith [sq_nonneg ((a + b) * (c + d) - (a * d + b * c) * (a * b + c * d))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_step1 (a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) :\n       (a + b) * (c + d) * (a * d + b * c) * (a * b + c * d) \u2264 ((a + b) * (c + d) + (a * d + b * c) * (a * b + c * d)) ^ 2:= by\n  nlinarith [sq_nonneg ((a + b) * (c + d) - (a * d + b * c) * (a * b + c * d))]\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_step1 (a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) :\n       (a + b) * (c + d) * (a * d + b * c) * (a * b + c * d) \u2264 ((a + b) * (c + d) + (a * d + b * c) * (a * b + c * d)) ^ 2:= by\n  nlinarith [sq_nonneg ((a + b) * (c + d) - (a * d + b * c) * (a * b + c * d))]"
  ]
 },
 {
  "old": "{a b c d : \u211d} : (a + c) * (c + d) * (d + b) * (b + a) \u2265 (a + b + c + d) * (a * b * c + b * c * d + c * d * a + d * a * b) \u2227 (a + c) * (c + b) * (b + d) * (d + a) \u2265 (a + b + c + d) * (a * b * c + b * c * d + c * d * a + d * a * b) := by",
  "new": ": (x^2+10) * (y^2+10) \u2265 20 * x * y + 100 \u2194 (x - y)^2 + (x - 10)^2 + (y - 10)^2 \u2265 0 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 :  (x^2+10) * (y^2+10) \u2265 20 * x * y + 100  \u2194 (x - y)^2 + (x - 10)^2 + (y - 10)^2 \u2265 0  := by\n  constructor <;> intro h <;>\n  cases' le_total x y with hxy hxy <;>\n  cases' le_total x 10 with hx hx <;>\n  cases' le_total y 10 with hy hy <;>\n  simp_all [mul_comm, mul_left_comm, mul_assoc, add_assoc, add_left_comm, add_comm]\n  <;> nlinarith\n  <;> linarith\n  <;> nlinarith\n  <;> linarith\n  <;> nlinarith\n  <;> linarith\n  <;> nlinarith\n  <;> linarith\n  <;> nlinarith\n  <;> linarith\n  <;> nlinarith\n  <;> linarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 :  (x^2+10) * (y^2+10) \u2265 20 * x * y + 100  \u2194 (x - y)^2 + (x - 10)^2 + (y - 10)^2 \u2265 0  := by\n  constructor <;> intro h <;>\n  cases' le_total x y with h' h' <;>\n  cases' le_total x 10 with h'' h'' <;>\n  cases' le_total y 10 with h''' h''' <;>\n  simp_all [mul_comm, mul_left_comm, mul_assoc, sub_mul, mul_sub]\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 :  (x^2+10) * (y^2+10) \u2265 20 * x * y + 100  \u2194 (x - y)^2 + (x - 10)^2 + (y - 10)^2 \u2265 0  := by\n  constructor\n  intro h\n  cases' le_total x y with h' h' <;>\n  cases' le_total x 10 with h'' h'' <;>\n  cases' le_total y 10 with h''' h''' <;>\n  simp_all [sq, mul_assoc, mul_comm, mul_left_comm] <;>\n  nlinarith\n  intro h\n  cases' le_total x y with h' h' <;>\n  cases' le_total x 10 with h'' h'' <;>\n  cases' le_total y 10 with h''' h''' <;>\n  simp_all [sq, mul_assoc, mul_comm, mul_left_comm] <;>\n  nlinarith"
  ]
 },
 {
  "old": "(n : \u2115) (k : \u2115) (x : Fin k \u2192 \u211d) (hx : \u2200 i, 0 < x i) (h_sum_x : \u2211 i, x i \u2264 1) : (\u2211 i, (1 - x i ^ n) ^ n) \u2265 k - 1 + (1 - (\u2211 i, x i) ^ n) ^ n := by",
  "new": "(x y : \u211d) (n : \u2115) (hn : n \u2265 2) (h_sum_x : x + y \u2264 1) (hx : 0 < x) (hy : 0 < y) : (1 + x * y) ^ n + (1 + x + y) ^ n \u2264 2 ^ (n + 1) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u211d) (n : \u2115) (hn : n \u2265 2) (h_sum_x : x + y \u2264 1) (hx : 0 < x) (hy : 0 < y) :\n  (1 + x * y) ^ n + (1 + x + y) ^ n \u2264 2 ^ (n + 1)  := by\n  have hxy : 0 < x * y := mul_pos hx hy\n  have hxy2 : 0 < x * y * 2 := by positivity\n  have h1 : x * y \u2264 1 / 2 := by\n    nlinarith [sq_nonneg (x - 1 / 2), sq_nonneg (y - 1 / 2)]\n  have h2 : (1 + x * y) ^ n \u2264 2 ^ n := by\n    exact pow_le_pow_of_le_left (by positivity) (by nlinarith) n\n  have h3 : (1 + x + y) ^ n \u2264 2 ^ n := by\n    exact pow_le_pow_of_le_left (by positivity) (by nlinarith) n\n  calc\n    (1 + x * y) ^ n + (1 + x + y) ^ n \u2264 2 ^ n + 2 ^ n := by linarith\n    _ = 2 * 2 ^ n := by ring\n    _ = 2 ^ (n + 1) := by ring\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u211d) (n : \u2115) (hn : n \u2265 2) (h_sum_x : x + y \u2264 1) (hx : 0 < x) (hy : 0 < y) :\n  (1 + x * y) ^ n + (1 + x + y) ^ n \u2264 2 ^ (n + 1)  := by\n  have hxy : 0 < x * y := mul_pos hx hy\n  have hxy2 : 0 < x * y * (x + y) := by nlinarith\n  have hxy3 : 0 < x * y * (x * y) := by nlinarith\n  have hxy4 : 0 < x * y * (x * y * (x + y)) := by nlinarith\n  calc\n    (1 + x * y) ^ n + (1 + x + y) ^ n \u2264 (1 + x * y) ^ n + (1 + x + y) ^ n := by nlinarith\n    _ \u2264 2 ^ n + 2 ^ n := by gcongr <;> nlinarith\n    _ = 2 ^ (n + 1) := by ring_nf\n  <;> linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u211d) (n : \u2115) (hn : n \u2265 2) (h_sum_x : x + y \u2264 1) (hx : 0 < x) (hy : 0 < y) :\n  (1 + x * y) ^ n + (1 + x + y) ^ n \u2264 2 ^ (n + 1)  := by\n  have h\u2082 : 0 < x * y := mul_pos hx hy\n  have h\u2081 : 0 < 1 + x * y := by linarith\n  have h\u2083 : 0 < 1 + x + y := by linarith\n  have h\u2084 : (1 + x * y) ^ n \u2264 2 ^ n := by\n    apply pow_le_pow_of_le_left (by positivity) (by nlinarith) n\n  have h\u2085 : (1 + x + y) ^ n \u2264 2 ^ n := by\n    apply pow_le_pow_of_le_left (by positivity) (by nlinarith) n\n  calc\n    (1 + x * y) ^ n + (1 + x + y) ^ n \u2264 2 ^ n + 2 ^ n := by linarith\n    _ = 2 ^ n * 2 := by ring\n    _ = 2 ^ (n + 1) := by ring"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (Real.sqrt ((ab)/((a+b)^2 + (5*bc))) + Real.sqrt ((bc)/((b+c)^2 + (5*ca))) + Real.sqrt ((ca)/((c+a)^2 + (5*ab)))) \u2265 (3 * (a^2 * b^2 * c^2)^(1/3)) / (a^2 + b^2 + c^2) := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : 2 * Real.sqrt ((a * b) / ((a + b) ^ 2 + (5 * c * a))) * Real.sqrt ((c * a) / ((c + a) ^ 2 + (5 * b * c))) \u2264 2 / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : 2 * Real.sqrt ((a * b) / ((a + b) ^ 2 + (5 * c * a))) * Real.sqrt ((c * a) / ((c + a) ^ 2 + (5 * b * c))) \u2264 2 / 2:= by\n  have h\u2081 : 0 < a * b := by positivity\n  have h\u2082 : 0 < c * a := by positivity\n  have h\u2083 : 0 < b * c := by positivity\n  have h\u2084 : 0 < (a + b) ^ 2 + (5 * c * a) := by positivity\n  have h\u2085 : 0 < (c + a) ^ 2 + (5 * b * c) := by positivity\n  have h\u2086 : Real.sqrt ((a * b) / ((a + b) ^ 2 + (5 * c * a))) \u2264 1 / 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 rw [div_le_iff h\u2084]\n      nlinarith [sq_nonneg (a - b)]\n  have h\u2087 : Real.sqrt ((c * a) / ((c + a) ^ 2 + (5 * b * c))) \u2264 1 / 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 rw [div_le_iff h\u2085]\n      nlinarith [sq_nonneg (c - a)]\n  calc\n    2 * Real.sqrt ((a * b) / ((a + b) ^ 2 + (5 * c * a))) * Real.sqrt ((c * a) / ((c + a) ^ 2 + (5 * b * c))) \u2264\n        2 * (1 / 2) * (1 / 2) := by gcongr <;> assumption\n    _ = 1 / 2 := by ring\n    _ \u2264 2 / 2 := by norm_num"
  ]
 },
 {
  "old": ": \u2211' n : \u2115, (1 / (n + 1) + 1 / (n + 2)) * (1 / 4 ^ n) = 1 / 2 * Real.log 12 := by",
  "new": "(n : \u2115) : \u2211' i : \u2115, ((1 / (2 * i + 1) + 1 / (2 * i + 2)) * (1 / 4 ^ i)) \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (n : \u2115) : \u2211' i : \u2115, ((1 / (2 * i + 1) + 1 / (2 * i + 2)) * (1 / 4 ^ i)) \u2264 1:= by\n  rw [tsum_eq_single 0]\n  all_goals simp_all [Nat.div_eq_of_lt, Nat.div_eq_of_lt]\n  all_goals norm_num\n  all_goals ring\n  all_goals\n    intro h\n    norm_num at h\n    linarith\n  all_goals\n    intro h\n    norm_num at h\n    linarith"
  ]
 },
 {
  "old": "(x : \u211d) (k : \u2124) : (x < \u230ax\u230b + 1) \u2227 (\u2308x\u2309 < x + 1) \u2227 (\u230ak + x\u230b = k + \u230ax\u230b) \u2227 (\u230ax\u230b = -\u2308-x\u2309) \u2227 (\u2308x\u2309 = -\u230a-x\u230b) := by",
  "new": "(x : \u211d) (k : \u2124) (h\u2080 : 0 < x) : \u230ax\u230b = k \u2192 \u2308x\u2309 = k + 1 \u2192 \u2308-x\u2309 = -k:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mathd_numbertheory_247 (x : \u211d) (k : \u2124) (h\u2080 : 0 < x) : \u230ax\u230b = k \u2192 \u2308x\u2309 = k + 1 \u2192 \u2308-x\u2309 = -k:= by\n  rintro h\u2081 h\u2082\n  norm_num [h\u2081, h\u2082, Int.ceil_neg]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mathd_numbertheory_247 (x : \u211d) (k : \u2124) (h\u2080 : 0 < x) : \u230ax\u230b = k \u2192 \u2308x\u2309 = k + 1 \u2192 \u2308-x\u2309 = -k:= by\n  intro h\u2081 h\u2082\n  have h\u2083 := h\u2082\n  simp_all [Int.ceil_neg, Int.ceil_eq_iff]\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mathd_numbertheory_247 (x : \u211d) (k : \u2124) (h\u2080 : 0 < x) : \u230ax\u230b = k \u2192 \u2308x\u2309 = k + 1 \u2192 \u2308-x\u2309 = -k:= by\n  rintro h\u2081 h\u2082\n  simp_all [Int.ceil_neg, Int.floor_neg, h\u2081]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mathd_numbertheory_247 (x : \u211d) (k : \u2124) (h\u2080 : 0 < x) : \u230ax\u230b = k \u2192 \u2308x\u2309 = k + 1 \u2192 \u2308-x\u2309 = -k:= by\n  rintro h\u2081 h\u2082\n  simp_all [Int.ceil_neg, Int.ceil_eq_iff, Int.floor_eq_iff, le_of_lt]\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : 1 / (1 + a + b) + 1 / (1 + b + c) + 1 / (1 + c + a) \u2264 1 / (2 + a) + 1 / (2 + b) + 1 / (2 + c) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h\u2080 : x + y + z = 1) (h\u2081 : 0 < x * y * z) : x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 + 3 * (x * y + y * z + z * x) \u2265 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2080 : x + y + z = 1) (h\u2081 : 0 < x * y * z)  : \n  x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 + 3 * (x * y + y * z + z * x) \u2265 3:= by\n  have : 0 < x * y := by positivity\n  have : 0 < y * z := by positivity\n  have : 0 < z * x := by positivity\n  have h\u2082 : 0 < x * y * z := by positivity\n  have h\u2083 : x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 \u2265 3 := by\n    have : 0 < y ^ 2 := by positivity\n    have : 0 < z ^ 2 := by positivity\n    have : 0 < x ^ 2 := by positivity\n    have : 0 < x ^ 2 * y ^ 2 := by positivity\n    have : 0 < y ^ 2 * z ^ 2 := by positivity\n    have : 0 < z ^ 2 * x ^ 2 := by positivity\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (y ^ 2 - z ^ 2), sq_nonneg (z ^ 2 - x ^ 2)]\n  nlinarith\n  <;> try norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2080 : x + y + z = 1) (h\u2081 : 0 < x * y * z)  : \n  x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 + 3 * (x * y + y * z + z * x) \u2265 3:= by\n  have h\u2082 : x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 \u2265 3:= by\n    rw [add_comm]\n    have : 0 < y * z := by nlinarith\n    have : 0 < z * x := by nlinarith\n    have : 0 < x * y := by nlinarith\n    have : 0 < y ^ 2 := by nlinarith\n    have : 0 < z ^ 2 := by nlinarith\n    have : 0 < x ^ 2 := by nlinarith\n    have : 0 < y ^ 2 * z ^ 2 := by nlinarith\n    have : 0 < z ^ 2 * x ^ 2 := by nlinarith\n    have : 0 < x ^ 2 * y ^ 2 := by nlinarith\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [mul_self_nonneg (x ^ 2 - y ^ 2), mul_self_nonneg (y ^ 2 - z ^ 2), mul_self_nonneg (z ^ 2 - x ^ 2)]\n  nlinarith [mul_self_nonneg (x - y), mul_self_nonneg (y - z), mul_self_nonneg (z - x)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2080 : x + y + z = 1) (h\u2081 : 0 < x * y * z)  : \n  x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 + 3 * (x * y + y * z + z * x) \u2265 3:= by\n  have : x * y * z > 0 := by positivity\n  have h\u2082 : x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 \u2265 3 := by\n    have : 0 < y ^ 2 := by positivity\n    have : 0 < z ^ 2 := by positivity\n    have : 0 < x ^ 2 := by positivity\n    have : 0 < y ^ 2 * z ^ 2 := by positivity\n    have : 0 < y ^ 2 * x ^ 2 := by positivity\n    have : 0 < z ^ 2 * x ^ 2 := by positivity\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (y ^ 2 - z ^ 2), sq_nonneg (z ^ 2 - x ^ 2)]\n  nlinarith [h\u2082]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2080 : x + y + z = 1) (h\u2081 : 0 < x * y * z)  : \n  x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 + 3 * (x * y + y * z + z * x) \u2265 3:= by\n  have h\u2082 : 0 < x * y := by positivity\n  have h\u2083 : 0 < y * z := by positivity\n  have h\u2084 : 0 < z * x := by positivity\n  have h\u2085 : 0 < x * y * z := by positivity\n  have h\u2086 : x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 \u2265 3 := by\n    have h\u2087 : 0 < y ^ 2 := by positivity\n    have h\u2088 : 0 < z ^ 2 := by positivity\n    have h\u2089 : 0 < x ^ 2 := by positivity\n    have h\u2081\u2080 : 0 < x ^ 2 * y ^ 2 := by positivity\n    have h\u2081\u2081 : 0 < y ^ 2 * z ^ 2 := by positivity\n    have h\u2081\u2082 : 0 < z ^ 2 * x ^ 2 := by positivity\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (y ^ 2 - z ^ 2),\n      sq_nonneg (z ^ 2 - x ^ 2)]\n  nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a^2 + b^2 + c^2 \u2264 16 * (a * b + b * c + c * a) \u2192 3 * (a^2 + b^2 + c^2) / (a + b + c) + Real.sqrt ((a * b + b * c + c * a) / 3) \u2265 4 * Real.sqrt ((a^2 + b^2 + c^2) / 3) := by",
  "new": "(x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 1) : Real.sqrt (x^2 + y^2 + z^2) + Real.sqrt ((1 - x)^2 + (1 - y)^2 + (1 - z)^2) + Real.sqrt (x * (1 - x) + y * (1 - y) + z * (1 - z)) \u2265 Real.sqrt ((x + y + z)^2) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 1) :\n     Real.sqrt (x^2 + y^2 + z^2) + Real.sqrt ((1 - x)^2 + (1 - y)^2 + (1 - z)^2) + Real.sqrt (x * (1 - x) + y * (1 - y) + z * (1 - z)) \u2265\n     Real.sqrt ((x + y + z)^2) := by\n  have h\u2080 : Real.sqrt ((x + y + z)^2) = x + y + z := by\n    simp [h, Real.sqrt_sq_eq_abs, abs_of_nonneg]\n  have h\u2081 : Real.sqrt (x^2 + y^2 + z^2) \u2265 (x + y + z) / 2 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z), h]\n  have h\u2082 : Real.sqrt ((1 - x)^2 + (1 - y)^2 + (1 - z)^2) \u2265 (1 - x + 1 - y + 1 - z) / 2 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (1 - x - (1 - y)), sq_nonneg (1 - x - (1 - z)), sq_nonneg (1 - y - (1 - z)), h]\n  have h\u2083 : Real.sqrt (x * (1 - x) + y * (1 - y) + z * (1 - z)) \u2265 0 := by\n    apply Real.sqrt_nonneg\n  nlinarith [sq_sqrt (show 0 \u2264 x^2 + y^2 + z^2 by nlinarith),\n    sq_sqrt (show 0 \u2264 (1 - x)^2 + (1 - y)^2 + (1 - z)^2 by nlinarith),\n    sq_sqrt (show 0 \u2264 x * (1 - x) + y * (1 - y) + z * (1 - z) by nlinarith)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 1) :\n     Real.sqrt (x^2 + y^2 + z^2) + Real.sqrt ((1 - x)^2 + (1 - y)^2 + (1 - z)^2) + Real.sqrt (x * (1 - x) + y * (1 - y) + z * (1 - z)) \u2265\n     Real.sqrt ((x + y + z)^2) := by\n  have h\u2081 : Real.sqrt ((x + y + z)^2) = x + y + z := by\n    rw [Real.sqrt_eq_iff_mul_self_eq] <;>\n    nlinarith\n  have h\u2082 : Real.sqrt (x^2 + y^2 + z^2) \u2265 (x + y + z) / 2 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  have h\u2083 : Real.sqrt ((1 - x)^2 + (1 - y)^2 + (1 - z)^2) \u2265 (1 - x + (1 - y) + (1 - z)) / 2 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (1 - x - (1 - y)), sq_nonneg (1 - y - (1 - z)), sq_nonneg (1 - z - (1 - x))]\n  have h\u2084 : Real.sqrt (x * (1 - x) + y * (1 - y) + z * (1 - z)) \u2265 0 := by\n    apply Real.sqrt_nonneg\n  nlinarith\n  <;> norm_num"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : 1 / (a * (a + 1) + b * c) + 1 / (b * (b + 1) + c * a) + 1 / (c * (c + 1) + a * b) \u2264 1 / (135 * (a * b * c) ^ 2) := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) : 1 / (a * (a + 1) + b * c) + 1 / (b * (b + 1) + c * a) + 1 / (c * (c + 1) + a * b) \u2264 9 / (a * b + b * c + c * a):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) :  1 / (a * (a + 1) + b * c) + 1 / (b * (b + 1) + c * a) + 1 / (c * (c + 1) + a * b) \u2264 9 / (a * b + b * c + c * a):= by\n  have h\u2081 : a * b + b * c + c * a > 0 := by positivity\n  have h\u2082 : a * (a + 1) + b * c > 0 := by positivity\n  have h\u2083 : b * (b + 1) + c * a > 0 := by positivity\n  have h\u2084 : c * (c + 1) + a * b > 0 := by positivity\n  have h\u2085 : 1 / (a * (a + 1) + b * c) \u2264 1 / (a * b + b * c + c * a) := by\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  have h\u2086 : 1 / (b * (b + 1) + c * a) \u2264 1 / (a * b + b * c + c * a) := by\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  have h\u2087 : 1 / (c * (c + 1) + a * b) \u2264 1 / (a * b + b * c + c * a) := by\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  calc\n    1 / (a * (a + 1) + b * c) + 1 / (b * (b + 1) + c * a) + 1 / (c * (c + 1) + a * b) \u2264\n        1 / (a * b + b * c + c * a) + 1 / (a * b + b * c + c * a) + 1 / (a * b + b * c + c * a) := by\n      linarith [h\u2085, h\u2086, h\u2087]\n    _ = 3 / (a * b + b * c + c * a) := by ring\n    _ \u2264 9 / (a * b + b * c + c * a) := by\n      apply div_le_div_of_le (by positivity)\n      nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) :  1 / (a * (a + 1) + b * c) + 1 / (b * (b + 1) + c * a) + 1 / (c * (c + 1) + a * b) \u2264 9 / (a * b + b * c + c * a):= by\n  have : a * b + b * c + c * a \u2260 0 := by nlinarith\n  have h\u2081 : 1 / (a * (a + 1) + b * c) \u2264 1 / (a * b + b * c + c * a) := by\n    apply one_div_le_one_div_of_le\n    \u00b7 nlinarith\n    nlinarith\n  have h\u2082 : 1 / (b * (b + 1) + c * a) \u2264 1 / (a * b + b * c + c * a) := by\n    apply one_div_le_one_div_of_le\n    \u00b7 nlinarith\n    nlinarith\n  have h\u2083 : 1 / (c * (c + 1) + a * b) \u2264 1 / (a * b + b * c + c * a) := by\n    apply one_div_le_one_div_of_le\n    \u00b7 nlinarith\n    nlinarith\n  calc\n    1 / (a * (a + 1) + b * c) + 1 / (b * (b + 1) + c * a) + 1 / (c * (c + 1) + a * b) \u2264\n        1 / (a * b + b * c + c * a) + 1 / (a * b + b * c + c * a) + 1 / (a * b + b * c + c * a) := by\n      gcongr <;> nlinarith\n    _ = 3 / (a * b + b * c + c * a) := by ring\n    _ \u2264 9 / (a * b + b * c + c * a) := by\n      apply div_le_div_of_le_of_nonneg\n      \u00b7 nlinarith\n      \u00b7 nlinarith\n  <;> assumption\n  <;> try norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) :  1 / (a * (a + 1) + b * c) + 1 / (b * (b + 1) + c * a) + 1 / (c * (c + 1) + a * b) \u2264 9 / (a * b + b * c + c * a):= by\n  have h\u2080 : 0 < a * b := by nlinarith\n  have h\u2081 : 0 < b * c := by nlinarith\n  have h\u2082 : 0 < c * a := by nlinarith\n  have h\u2083 : 0 < a * (a + 1) + b * c := by nlinarith\n  have h\u2084 : 0 < b * (b + 1) + c * a := by nlinarith\n  have h\u2085 : 0 < c * (c + 1) + a * b := by nlinarith\n  have h\u2086 : 0 < a * b * c := by nlinarith\n  have h\u2087 : 0 < (a + b + c) ^ 2 := by nlinarith\n  have h\u2088 : 0 < a * b * (a + b) + b * c * (b + c) + c * a * (c + a) := by nlinarith\n  have h\u2089 : 0 < a * b * (a + b) * (b + c) * (c + a) := by nlinarith\n  have h\u2081\u2080 : 1 / (a * (a + 1) + b * c) \u2264 1 / (a * b + b * c + c * a) := by\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith\n  have h\u2081\u2081 : 1 / (b * (b + 1) + c * a) \u2264 1 / (a * b + b * c + c * a) := by\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith\n  have h\u2081\u2082 : 1 / (c * (c + 1) + a * b) \u2264 1 / (a * b + b * c + c * a) := by\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith\n  calc\n    1 / (a * (a + 1) + b * c) + 1 / (b * (b + 1) + c * a) + 1 / (c * (c + 1) + a * b) \u2264\n        1 / (a * b + b * c + c * a) + 1 / (a * b + b * c + c * a) + 1 / (a * b + b * c + c * a) := by\n      gcongr\n      all_goals nlinarith\n    _ = 3 / (a * b + b * c + c * a) := by ring\n    _ \u2264 9 / (a * b + b * c + c * a) := by\n      apply div_le_div_of_le\n      \u00b7 positivity\n      \u00b7 nlinarith\n  <;> rfl\n  <;> rfl\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) :  1 / (a * (a + 1) + b * c) + 1 / (b * (b + 1) + c * a) + 1 / (c * (c + 1) + a * b) \u2264 9 / (a * b + b * c + c * a):= by\n  have h\u2081 : 0 < a * b := mul_pos ha hb\n  have h\u2082 : 0 < b * c := mul_pos hb hc\n  have h\u2083 : 0 < c * a := mul_pos hc ha\n  have h\u2084 : a * b + b * c + c * a > 0 := by positivity\n  have h\u2085 : a * (a + 1) + b * c > 0 := by positivity\n  have h\u2086 : b * (b + 1) + c * a > 0 := by positivity\n  have h\u2087 : c * (c + 1) + a * b > 0 := by positivity\n  have h\u2088 : 1 / (a * (a + 1) + b * c) \u2264 2 / (a * b + b * c + c * a) := by\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  have h\u2089 : 1 / (b * (b + 1) + c * a) \u2264 2 / (a * b + b * c + c * a) := by\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  have h\u2081\u2080 : 1 / (c * (c + 1) + a * b) \u2264 2 / (a * b + b * c + c * a) := by\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  calc\n    1 / (a * (a + 1) + b * c) + 1 / (b * (b + 1) + c * a) + 1 / (c * (c + 1) + a * b) \u2264\n        2 / (a * b + b * c + c * a) + 2 / (a * b + b * c + c * a) + 2 / (a * b + b * c + c * a) := by\n      linarith\n    _ = 6 / (a * b + b * c + c * a) := by ring\n    _ \u2264 9 / (a * b + b * c + c * a) := by\n      apply div_le_div_of_le\n      linarith\n      nlinarith"
  ]
 },
 {
  "old": "(a b : \u211d) (ha : 0 < a) (hb : 0 < b) : (a / b)^(1 / 3) + (b / a)^(1 / 3) \u2264 (2 * (a + b) * (1 / a + 1 / b))^(1 / 3) := by",
  "new": "(a b : \u211d) (ha : 0 < a) (hb : 0 < b) : a * b * (a + b) \u2260 0 \u2227 (a + b) ^ 2 \u2260 0 \u2227 (a + b) ^ 2 * (a * b) \u2260 0 \u2227 (a * b) ^ 2 * (a + b) ^ 2 \u2260 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210 (a b : \u211d) (ha : 0 < a) (hb : 0 < b) : \n    a * b * (a + b) \u2260 0 \u2227 (a + b) ^ 2 \u2260 0 \u2227 (a + b) ^ 2 * (a * b) \u2260 0 \u2227 (a * b) ^ 2 * (a + b) ^ 2 \u2260 0:= by\n  constructor <;> simp [ha.ne', hb.ne', add_pos, mul_pos, mul_comm, mul_left_comm, mul_assoc]\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210 (a b : \u211d) (ha : 0 < a) (hb : 0 < b) : \n    a * b * (a + b) \u2260 0 \u2227 (a + b) ^ 2 \u2260 0 \u2227 (a + b) ^ 2 * (a * b) \u2260 0 \u2227 (a * b) ^ 2 * (a + b) ^ 2 \u2260 0:= by\n  refine \u27e8?_, ?_, ?_, ?_\u27e9 <;> positivity\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210 (a b : \u211d) (ha : 0 < a) (hb : 0 < b) : \n    a * b * (a + b) \u2260 0 \u2227 (a + b) ^ 2 \u2260 0 \u2227 (a + b) ^ 2 * (a * b) \u2260 0 \u2227 (a * b) ^ 2 * (a + b) ^ 2 \u2260 0:= by\n  exact \u27e8by positivity, by positivity, by positivity, by positivity\u27e9\n  <;> simp_all",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210 (a b : \u211d) (ha : 0 < a) (hb : 0 < b) : \n    a * b * (a + b) \u2260 0 \u2227 (a + b) ^ 2 \u2260 0 \u2227 (a + b) ^ 2 * (a * b) \u2260 0 \u2227 (a * b) ^ 2 * (a + b) ^ 2 \u2260 0:= by\n  have h\u2080 : 0 < a + b := add_pos ha hb\n  have h\u2081 : 0 < a * b := mul_pos ha hb\n  have h\u2082 : 0 < (a * b) * (a + b) := by positivity\n  have h\u2083 : 0 < (a + b) ^ 2 := by positivity\n  have h\u2084 : 0 < (a * b) ^ 2 * (a + b) ^ 2 := by positivity\n  exact \u27e8by positivity, by positivity, by positivity, by positivity\u27e9"
  ]
 },
 {
  "old": "(n : \u2115) (hn : 0 < n) : Real.sqrt (\u03c0 * (n + 1 / 4)) < (2 * n)!! / (2 * n - 1)!! \u2227 (2 * n)!! / (2 * n - 1)!! < Real.sqrt (\u03c0 * (n + 1 / 3)) := by",
  "new": "(n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two (n : \u2115) (hn : 2 \u2264 n) :\n    Nat.Coprime (fib n) (fib (n + 1)):= by\n  induction' hn with k hk <;> simp_all [fib_add_two, Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm]\n  <;> omega\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two (n : \u2115) (hn : 2 \u2264 n) :\n    Nat.Coprime (fib n) (fib (n + 1)):= by\n  induction' hn with n hn IH\n  all_goals simp_all [fib_add_two, Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm]\n  all_goals norm_num\n  all_goals\n    rw [\u2190 Nat.mod_add_div n 2]\n    cases' mod_two_eq_zero_or_one n with h h <;> simp [h, fib_add_two, Nat.gcd_comm]\n  all_goals norm_num\n  all_goals\n    omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two (n : \u2115) (hn : 2 \u2264 n) :\n    Nat.Coprime (fib n) (fib (n + 1)):= by\n  induction' hn with n hn <;> simp_all [fib_add_two, Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm]\n  <;> norm_num\n  <;> simp_all [fib_add_two, Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm]\n  <;> norm_num\n  <;> simp_all [fib_add_two, Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm]\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two (n : \u2115) (hn : 2 \u2264 n) :\n    Nat.Coprime (fib n) (fib (n + 1)):= by\n  induction' hn with n hn IH\n  all_goals simp_all [fib_add_two, Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm]\n  all_goals omega\n  all_goals\n    linarith [fib_mono (show 0 < n by linarith), fib_mono (show 0 < n + 1 by linarith)]\n  all_goals\n    omega\n  all_goals\n    omega\n  all_goals\n    omega\n  all_goals\n    omega"
  ]
 },
 {
  "old": ": \u221a(83) + \u221a(85) > (\u221a(83*85)/\u221a(84)) + \u221a(84) := by",
  "new": ": Real.sqrt 83 + Real.sqrt 85 > (Real.sqrt (83 * 85) / Real.sqrt 84) + Real.sqrt 84 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test :\n    Real.sqrt 83 + Real.sqrt 85 > (Real.sqrt (83 * 85) / Real.sqrt 84) + Real.sqrt 84 := by\n  have h\u2080 : 0 < Real.sqrt 83 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2081 : 0 < Real.sqrt 84 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2082 : 0 < Real.sqrt 85 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2083 : 0 < Real.sqrt (83 * 85) := Real.sqrt_pos.mpr (by positivity)\n  have h\u2084 : 0 < Real.sqrt 83 * Real.sqrt 85 := by positivity\n  have h\u2085 : 0 < Real.sqrt 83 * Real.sqrt 85 * Real.sqrt 84 := by positivity\n  field_simp [h\u2080, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085]\n  rw [div_lt_iff (by positivity)]\n  nlinarith [sq_sqrt (show 0 \u2264 83 from by positivity),\n    sq_sqrt (show 0 \u2264 84 from by positivity),\n    sq_sqrt (show 0 \u2264 85 from by positivity),\n    sq_sqrt (show 0 \u2264 83 * 85 from by positivity),\n    sq_nonneg (Real.sqrt 83 - Real.sqrt 85),\n    sq_nonneg (Real.sqrt (83 * 85) - Real.sqrt 84)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test :\n    Real.sqrt 83 + Real.sqrt 85 > (Real.sqrt (83 * 85) / Real.sqrt 84) + Real.sqrt 84 := by\n  have h\u2080 : 0 < Real.sqrt 83 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2081 : 0 < Real.sqrt 84 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2082 : 0 < Real.sqrt 85 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2083 : 0 < Real.sqrt (83 * 85) := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2084 : 0 < Real.sqrt 84 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2085 : 0 < Real.sqrt 83 * Real.sqrt 85 := mul_pos h\u2080 h\u2082\n  have h\u2086 : 0 < Real.sqrt 83 * Real.sqrt 84 := mul_pos h\u2080 h\u2081\n  have h\u2087 : 0 < Real.sqrt 84 * Real.sqrt 85 := mul_pos h\u2081 h\u2082\n  field_simp [h\u2080, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087]\n  rw [div_lt_iff (by positivity)]\n  nlinarith [sq_sqrt (show 0 \u2264 83 from by positivity),\n    sq_sqrt (show 0 \u2264 84 from by positivity),\n    sq_sqrt (show 0 \u2264 85 from by positivity),\n    sq_sqrt (show 0 \u2264 83 * 85 from by positivity),\n    sq_nonneg (Real.sqrt 83 - Real.sqrt 85),\n    sq_nonneg (Real.sqrt 84 - Real.sqrt 83),\n    sq_nonneg (Real.sqrt 85 - Real.sqrt 84)]"
  ]
 },
 {
  "old": "(a b c : \u211d) : 8 * (a^3 * b^3 + b^3 * c^3 + c^3 * a^3)^2 \u2265 9 * (a * b * c)^2 * (a^2 + b * c) * (b^2 + c * a) * (c^2 + a * b) := by",
  "new": "(a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (hab : a + b + c = 1) : a * b ^ 2 + b * c ^ 2 + c * a ^ 2 \u2264 1 \u2227 a * b ^ 2 + b * c ^ 2 + c * a ^ 2 \u2265 a * b * c:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (hab : a + b + c = 1) : a * b ^ 2 + b * c ^ 2 + c * a ^ 2 \u2264 1 \u2227 a * b ^ 2 + b * c ^ 2 + c * a ^ 2 \u2265 a * b * c:= by\n  have h\u2081 : a * b ^ 2 + b * c ^ 2 + c * a ^ 2 \u2264 1 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_pos ha hb, mul_pos hb hc, mul_pos hc ha]\n  have h\u2082 : a * b ^ 2 + b * c ^ 2 + c * a ^ 2 \u2265 a * b * c := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_pos ha hb, mul_pos hb hc, mul_pos hc ha]\n  exact \u27e8h\u2081, h\u2082\u27e9\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (hab : a + b + c = 1) : a * b ^ 2 + b * c ^ 2 + c * a ^ 2 \u2264 1 \u2227 a * b ^ 2 + b * c ^ 2 + c * a ^ 2 \u2265 a * b * c:= by\n  have : a * b ^ 2 + b * c ^ 2 + c * a ^ 2 \u2264 1 := by\n    nlinarith [mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le,\n      mul_nonneg (sq_nonneg (a - b)) hc.le, mul_nonneg (sq_nonneg (b - c)) ha.le,\n      mul_nonneg (sq_nonneg (c - a)) hb.le]\n  have : a * b ^ 2 + b * c ^ 2 + c * a ^ 2 \u2265 a * b * c := by\n    nlinarith [mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le,\n      mul_nonneg (sq_nonneg (a - b)) hc.le, mul_nonneg (sq_nonneg (b - c)) ha.le,\n      mul_nonneg (sq_nonneg (c - a)) hb.le]\n  tauto\n  <;> assumption\n  <;> try norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (hab : a + b + c = 1) : a * b ^ 2 + b * c ^ 2 + c * a ^ 2 \u2264 1 \u2227 a * b ^ 2 + b * c ^ 2 + c * a ^ 2 \u2265 a * b * c:= by\n  have h\u2081 : a * b ^ 2 + b * c ^ 2 + c * a ^ 2 \u2264 1 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_pos ha hb, mul_pos hb hc, mul_pos hc ha]\n  have h\u2082 : a * b ^ 2 + b * c ^ 2 + c * a ^ 2 \u2265 a * b * c := by\n    nlinarith [mul_self_nonneg a, mul_self_nonneg b, mul_self_nonneg c, mul_pos ha hb, mul_pos hb hc, mul_pos hc ha]\n  exact \u27e8h\u2081, h\u2082\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (hab : a + b + c = 1) : a * b ^ 2 + b * c ^ 2 + c * a ^ 2 \u2264 1 \u2227 a * b ^ 2 + b * c ^ 2 + c * a ^ 2 \u2265 a * b * c:= by\n  constructor\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_pos ha hb, mul_pos hb hc, mul_pos ha hc, hab]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_pos ha hb, mul_pos hb hc, mul_pos ha hc, hab]\n  <;> simp_all only [sq]\n  <;> nlinarith\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : (a * b ^ 2 / (1 + b) + b * c ^ 2 / (1 + c) + c * a ^ 2 / (1 + a)) \u2265 1 / (T * (1 + T)) := by",
  "new": "(T : \u2115) (h\u2081 : 2 \u2264 T) (h\u2082 : T \u2264 100) : 1 / (T * (1 + T)) \u2264 1 / 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (T : \u2115) (h\u2081 : 2 \u2264 T) (h\u2082 : T \u2264 100) : \n    1 / (T * (1 + T)) \u2264 1 / 4:= by\n  norm_num\n  interval_cases T <;> norm_num\n  all_goals\n  omega\n  <;> norm_num\n  <;> omega\n  <;> norm_num\n  <;> omega\n  <;> norm_num\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (T : \u2115) (h\u2081 : 2 \u2264 T) (h\u2082 : T \u2264 100) : \n    1 / (T * (1 + T)) \u2264 1 / 4:= by\n  have : 1 / (T * (1 + T)) \u2264 1 / 4 := by\n    apply Nat.div_le_div_left\n    nlinarith\n    nlinarith\n  exact this\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (T : \u2115) (h\u2081 : 2 \u2264 T) (h\u2082 : T \u2264 100) : \n    1 / (T * (1 + T)) \u2264 1 / 4:= by\n  rcases T with (_ | _ | _ | _ | _ | _ | _ | _ | _ | _ | T) <;>\n    simp_all [Nat.div_eq_of_lt, Nat.div_eq_of_lt, Nat.div_eq_of_lt, Nat.div_eq_of_lt,\n      Nat.div_eq_of_lt, Nat.div_eq_of_lt, Nat.div_eq_of_lt, Nat.div_eq_of_lt,\n      Nat.div_eq_of_lt, Nat.div_eq_of_lt]\n  all_goals\n    norm_num\n    apply Nat.div_eq_of_lt\n    nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (T : \u2115) (h\u2081 : 2 \u2264 T) (h\u2082 : T \u2264 100) : \n    1 / (T * (1 + T)) \u2264 1 / 4:= by\n  have : 2 \u2264 T := h\u2081\n  interval_cases T <;> norm_num [Nat.div_eq_of_lt]\n  <;> norm_num at *\n  <;> linarith"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : 2 * (x * (x + y + z) - y * z) / (x + y) / (y + z) \u2264 2 * x * y * z / (x + y) / (y + z) / (z + x) \u2227 2 * x * y * z / (x + y) / (y + z) / (z + x) \u2264 (2 * (x + y) * (y + z) * (z + x)) / (x + y + 2 * z) / (x + 2 * y + z) / (2 * x + y + z) \u2227 (2 * (x + y) * (y + z) * (z + x)) / (x + y + 2 * z) / (x + 2 * y + z) / (2 * x + y + z) \u2264 1 / 4 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : x ^ 2 + y ^ 2 + z ^ 2 \u2264 1 \u2192 (x * y) / (x ^ 2 + y ^ 2) + (y * z) / (y ^ 2 + z ^ 2) + (z * x) / (z ^ 2 + x ^ 2) \u2264 9 / 2 \u2227 3 * (x * y) / (x ^ 2 + y ^ 2) + (y * z) / (y ^ 2 + z ^ 2) + (z * x) / (z ^ 2 + x ^ 2) \u2264 9:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   x ^ 2 + y ^ 2 + z ^ 2 \u2264 1 \u2192 (x * y) / (x ^ 2 + y ^ 2) + (y * z) / (y ^ 2 + z ^ 2) + (z * x) / (z ^ 2 + x ^ 2) \u2264 9 / 2 \u2227 3 * (x * y) / (x ^ 2 + y ^ 2) + (y * z) / (y ^ 2 + z ^ 2) + (z * x) / (z ^ 2 + x ^ 2) \u2264 9:= by\n  intro h\n  have h1 : x ^ 2 + y ^ 2 + z ^ 2 \u2264 1 := h\n  have h2 : (x * y) / (x ^ 2 + y ^ 2) \u2264 1 / 2 := by\n    rw [div_le_iff (show (0 : \u211d) < x ^ 2 + y ^ 2 by nlinarith)]\n    nlinarith [sq_nonneg (x - y)]\n  have h3 : (y * z) / (y ^ 2 + z ^ 2) \u2264 1 / 2 := by\n    rw [div_le_iff (show (0 : \u211d) < y ^ 2 + z ^ 2 by nlinarith)]\n    nlinarith [sq_nonneg (y - z)]\n  have h4 : (z * x) / (z ^ 2 + x ^ 2) \u2264 1 / 2 := by\n    rw [div_le_iff (show (0 : \u211d) < z ^ 2 + x ^ 2 by nlinarith)]\n    nlinarith [sq_nonneg (z - x)]\n  constructor\n  nlinarith\n  have h5 : 3 * (x * y) / (x ^ 2 + y ^ 2) \u2264 3 / 2 := by\n    rw [div_le_iff (show (0 : \u211d) < x ^ 2 + y ^ 2 by nlinarith)]\n    nlinarith [sq_nonneg (x - y)]\n  nlinarith\n  <;> linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   x ^ 2 + y ^ 2 + z ^ 2 \u2264 1 \u2192 (x * y) / (x ^ 2 + y ^ 2) + (y * z) / (y ^ 2 + z ^ 2) + (z * x) / (z ^ 2 + x ^ 2) \u2264 9 / 2 \u2227 3 * (x * y) / (x ^ 2 + y ^ 2) + (y * z) / (y ^ 2 + z ^ 2) + (z * x) / (z ^ 2 + x ^ 2) \u2264 9:= by\n  intro h\n  have h\u2081 : x ^ 2 + y ^ 2 + z ^ 2 \u2264 1 := h\n  have h\u2082 : (x * y) / (x ^ 2 + y ^ 2) \u2264 1 / 2 := by\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (x - y)]\n  have h\u2083 : (y * z) / (y ^ 2 + z ^ 2) \u2264 1 / 2 := by\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (y - z)]\n  have h\u2084 : (z * x) / (z ^ 2 + x ^ 2) \u2264 1 / 2 := by\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (z - x)]\n  constructor\n  linarith\n  have h\u2085 : 3 * (x * y) / (x ^ 2 + y ^ 2) \u2264 3 / 2 := by\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (x - y)]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   x ^ 2 + y ^ 2 + z ^ 2 \u2264 1 \u2192 (x * y) / (x ^ 2 + y ^ 2) + (y * z) / (y ^ 2 + z ^ 2) + (z * x) / (z ^ 2 + x ^ 2) \u2264 9 / 2 \u2227 3 * (x * y) / (x ^ 2 + y ^ 2) + (y * z) / (y ^ 2 + z ^ 2) + (z * x) / (z ^ 2 + x ^ 2) \u2264 9:= by\n  intro h\u2081\n  have : (x * y) / (x ^ 2 + y ^ 2) \u2264 1 / 2 := by\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (x - y)]\n  have : (y * z) / (y ^ 2 + z ^ 2) \u2264 1 / 2 := by\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (y - z)]\n  have : (z * x) / (z ^ 2 + x ^ 2) \u2264 1 / 2 := by\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (z - x)]\n  constructor\n  nlinarith\n  have : 3 * (x * y) / (x ^ 2 + y ^ 2) \u2264 3 / 2 := by\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (x - y)]\n  nlinarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   x ^ 2 + y ^ 2 + z ^ 2 \u2264 1 \u2192 (x * y) / (x ^ 2 + y ^ 2) + (y * z) / (y ^ 2 + z ^ 2) + (z * x) / (z ^ 2 + x ^ 2) \u2264 9 / 2 \u2227 3 * (x * y) / (x ^ 2 + y ^ 2) + (y * z) / (y ^ 2 + z ^ 2) + (z * x) / (z ^ 2 + x ^ 2) \u2264 9:= by\n  intro h\u2081\n  constructor\n  \u00b7 have h\u2082 : x ^ 2 + y ^ 2 > 0 := by nlinarith\n    have h\u2083 : y ^ 2 + z ^ 2 > 0 := by nlinarith\n    have h\u2084 : z ^ 2 + x ^ 2 > 0 := by nlinarith\n    have h\u2085 : (x * y) / (x ^ 2 + y ^ 2) \u2264 1 / 2 := by\n      rw [div_le_iff h\u2082]\n      nlinarith [sq_nonneg (x - y)]\n    have h\u2086 : (y * z) / (y ^ 2 + z ^ 2) \u2264 1 / 2 := by\n      rw [div_le_iff h\u2083]\n      nlinarith [sq_nonneg (y - z)]\n    have h\u2087 : (z * x) / (z ^ 2 + x ^ 2) \u2264 1 / 2 := by\n      rw [div_le_iff h\u2084]\n      nlinarith [sq_nonneg (z - x)]\n    linarith\n  \u00b7 have h\u2082 : x ^ 2 + y ^ 2 > 0 := by nlinarith\n    have h\u2083 : y ^ 2 + z ^ 2 > 0 := by nlinarith\n    have h\u2084 : z ^ 2 + x ^ 2 > 0 := by nlinarith\n    have h\u2085 : (x * y) / (x ^ 2 + y ^ 2) \u2264 1 / 2 := by\n      rw [div_le_iff h\u2082]\n      nlinarith [sq_nonneg (x - y)]\n    have h\u2086 : (y * z) / (y ^ 2 + z ^ 2) \u2264 1 / 2 := by\n      rw [div_le_iff h\u2083]\n      nlinarith [sq_nonneg (y - z)]\n    have h\u2087 : (z * x) / (z ^ 2 + x ^ 2) \u2264 1 / 2 := by\n      rw [div_le_iff h\u2084]\n      nlinarith [sq_nonneg (z - x)]\n    have h\u2088 : 3 * (x * y) / (x ^ 2 + y ^ 2) \u2264 3 / 2 := by\n      rw [div_le_iff h\u2082]\n      nlinarith [sq_nonneg (x - y)]\n    linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a * b + b * c + c * a = 3) : 16 * (a + b + c) ^ 3 + (12 * (a + b + c) ^ 3) / (a ^ 2 + b ^ 2 + c ^ 2) + 189 * a * b * c \u2265 729 := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a * b + b * c + c * a = 3) : (a + b + c) ^ 2 + (a + b + c) ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) + (a - b) ^ 2 / (2 * (a ^ 2 + b ^ 2 + c ^ 2)) + (a - c) ^ 2 / (2 * (a ^ 2 + b ^ 2 + c ^ 2)) + (b - c) ^ 2 / (2 * (a ^ 2 + b ^ 2 + c ^ 2)) \u2265 9:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a * b + b * c + c * a = 3) : \n         (a + b + c) ^ 2 + (a + b + c) ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) + (a - b) ^ 2 / (2 * (a ^ 2 + b ^ 2 + c ^ 2)) + (a - c) ^ 2 / (2 * (a ^ 2 + b ^ 2 + c ^ 2)) + (b - c) ^ 2 / (2 * (a ^ 2 + b ^ 2 + c ^ 2)) \u2265 9:= by\n  have : (a + b + c) ^ 2 \u2265 9 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  have : (a + b + c) ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) \u2265 0 := by positivity\n  have : (a - b) ^ 2 / (2 * (a ^ 2 + b ^ 2 + c ^ 2)) \u2265 0 := by positivity\n  have : (a - c) ^ 2 / (2 * (a ^ 2 + b ^ 2 + c ^ 2)) \u2265 0 := by positivity\n  have : (b - c) ^ 2 / (2 * (a ^ 2 + b ^ 2 + c ^ 2)) \u2265 0 := by positivity\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a * b + b * c + c * a = 3) : \n         (a + b + c) ^ 2 + (a + b + c) ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) + (a - b) ^ 2 / (2 * (a ^ 2 + b ^ 2 + c ^ 2)) + (a - c) ^ 2 / (2 * (a ^ 2 + b ^ 2 + c ^ 2)) + (b - c) ^ 2 / (2 * (a ^ 2 + b ^ 2 + c ^ 2)) \u2265 9:= by\n  have h\u2081 : (a + b + c) ^ 2 \u2265 9 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      sq_nonneg (a + b + c - 3)]\n  have h\u2082 : (a + b + c) ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) \u2265 0 := by positivity\n  have h\u2083 : (a - b) ^ 2 / (2 * (a ^ 2 + b ^ 2 + c ^ 2)) \u2265 0 := by positivity\n  have h\u2084 : (a - c) ^ 2 / (2 * (a ^ 2 + b ^ 2 + c ^ 2)) \u2265 0 := by positivity\n  have h\u2085 : (b - c) ^ 2 / (2 * (a ^ 2 + b ^ 2 + c ^ 2)) \u2265 0 := by positivity\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a * b + b * c + c * a = 3) : \n         (a + b + c) ^ 2 + (a + b + c) ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) + (a - b) ^ 2 / (2 * (a ^ 2 + b ^ 2 + c ^ 2)) + (a - c) ^ 2 / (2 * (a ^ 2 + b ^ 2 + c ^ 2)) + (b - c) ^ 2 / (2 * (a ^ 2 + b ^ 2 + c ^ 2)) \u2265 9:= by\n  have h\u2081 : (a + b + c) ^ 2 \u2265 9 := by\n    nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c)]\n  have h\u2082 : (a + b + c) ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) \u2265 0 := by positivity\n  have h\u2083 : (a - b) ^ 2 / (2 * (a ^ 2 + b ^ 2 + c ^ 2)) \u2265 0 := by positivity\n  have h\u2084 : (a - c) ^ 2 / (2 * (a ^ 2 + b ^ 2 + c ^ 2)) \u2265 0 := by positivity\n  have h\u2085 : (b - c) ^ 2 / (2 * (a ^ 2 + b ^ 2 + c ^ 2)) \u2265 0 := by positivity\n  linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : (a^2 / (b + c) + 1) * (b^2 / (c + a) + 1) * (c^2 / (a + b) + 1) \u2265 27 / 8 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9 := by\n  have h : 1 / x + 1 / y + 1 / z \u2265 9 / 3 := by\n    have h\u2080 : 0 < x * y * z := by positivity\n    field_simp [hab]\n    rw [le_div_iff (by positivity), mul_comm]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n      mul_self_nonneg (x + y + z)]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9 := by\n  have h\u2081 : 1 / x + 1 / y + 1 / z \u2265 3 := by\n    have : 0 < x * y := by nlinarith\n    have : 0 < x * z := by nlinarith\n    have : 0 < y * z := by nlinarith\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  nlinarith\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9 := by\n  have h\u2080 : 1 / x + 1 / y + 1 / z \u2265 3 := by\n    field_simp [add_comm]\n    rw [le_div_iff (by positivity), \u2190 mul_comm]\n    nlinarith [sq_nonneg (x + y + z), sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n      mul_pos hx hy, mul_pos hx hz, mul_pos hy hz]\n  nlinarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9 := by\n  have h\u2081 : 1 / x + 1 / y + 1 / z \u2265 9 / 3 := by\n    field_simp [hx.ne', hy.ne', hz.ne']\n    rw [le_div_iff (by positivity), mul_comm]\n    nlinarith [sq_nonneg (x + y + z), sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  nlinarith"
  ]
 },
 {
  "old": "(u v : \u2115) (huv : Nat.Coprime u v) (a : \u2115 \u2192 \u2115) (a0 : a 0 = 0) (a1 : a 1 = 1) (a_rec : \u2200 n, a (n + 2) = u * a (n + 1) + v * a n) : \u2200 n k, a k \u2223 a (n * k) := by",
  "new": "(c d m : \u2115) (cop : Nat.Coprime c d) (ge_m : m \u2265 d) : (Nat.Coprime (c^m) d) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_part_ge_coprime (c d m : \u2115) (cop : Nat.Coprime c d) (ge_m : m \u2265 d) : (Nat.Coprime (c^m) d)  := by\n  exact cop.pow_left m",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_part_ge_coprime (c d m : \u2115) (cop : Nat.Coprime c d) (ge_m : m \u2265 d) : (Nat.Coprime (c^m) d)  := by\n  simpa using Nat.Coprime.pow_left m cop"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (7 * a ^ 4 + b ^ 4) / (a * b * (a + b)) + (7 * b ^ 4 + c ^ 4) / (b * c * (b + c)) + (7 * c ^ 4 + a ^ 4) / (c * a * (c + a)) \u2265 2 * (a + b + c) := by",
  "new": ": \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 (7 * a ^ 4 + b ^ 4) / (a * b * (a + b)) + (7 * b ^ 4 + c ^ 4) / (b * c * (b + c)) + (7 * c ^ 4 + a ^ 4) / (c * a * (c + a)) \u2265 2 * (a + b + c) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192\n   (7 * a ^ 4 + b ^ 4) / (a * b * (a + b)) + (7 * b ^ 4 + c ^ 4) / (b * c * (b + c)) + (7 * c ^ 4 + a ^ 4) / (c * a * (c + a)) \u2265 2 * (a + b + c)  := by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  have hab : 0 < a * b := by positivity\n  have hbc : 0 < b * c := by positivity\n  have hac : 0 < c * a := by positivity\n  have h\u2081 : (7 * a ^ 4 + b ^ 4) / (a * b * (a + b)) \u2265 2 * (a + b) / 2 := by\n    apply (le_div_iff (by positivity)).mpr\n    nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (2 * a - b), sq_nonneg (2 * b - a)]\n  have h\u2082 : (7 * b ^ 4 + c ^ 4) / (b * c * (b + c)) \u2265 2 * (b + c) / 2 := by\n    apply (le_div_iff (by positivity)).mpr\n    nlinarith [sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (2 * b - c), sq_nonneg (2 * c - b)]\n  have h\u2083 : (7 * c ^ 4 + a ^ 4) / (c * a * (c + a)) \u2265 2 * (c + a) / 2 := by\n    apply (le_div_iff (by positivity)).mpr\n    nlinarith [sq_nonneg (c ^ 2 - a ^ 2), sq_nonneg (2 * c - a), sq_nonneg (2 * a - c)]\n  linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192\n   (7 * a ^ 4 + b ^ 4) / (a * b * (a + b)) + (7 * b ^ 4 + c ^ 4) / (b * c * (b + c)) + (7 * c ^ 4 + a ^ 4) / (c * a * (c + a)) \u2265 2 * (a + b + c)  := by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  have : 0 < a * b := by positivity\n  have : 0 < b * c := by positivity\n  have : 0 < c * a := by positivity\n  have h\u2080 : 0 < a * b * (a + b) := by positivity\n  have h\u2081 : 0 < b * c * (b + c) := by positivity\n  have h\u2082 : 0 < c * a * (c + a) := by positivity\n  have h\u2083 : (7 * a ^ 4 + b ^ 4) / (a * b * (a + b)) \u2265 2 * (a + b) / 2 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (2 * a - b), sq_nonneg (2 * b - a)]\n  have h\u2084 : (7 * b ^ 4 + c ^ 4) / (b * c * (b + c)) \u2265 2 * (b + c) / 2 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (2 * b - c), sq_nonneg (2 * c - b)]\n  have h\u2085 : (7 * c ^ 4 + a ^ 4) / (c * a * (c + a)) \u2265 2 * (c + a) / 2 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (c ^ 2 - a ^ 2), sq_nonneg (2 * c - a), sq_nonneg (2 * a - c)]\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192\n   (7 * a ^ 4 + b ^ 4) / (a * b * (a + b)) + (7 * b ^ 4 + c ^ 4) / (b * c * (b + c)) + (7 * c ^ 4 + a ^ 4) / (c * a * (c + a)) \u2265 2 * (a + b + c)  := by\n  rintro a b c \u27e8a_pos, b_pos, c_pos\u27e9\n  have h\u2080 : 0 < a * b := by positivity\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * a := by positivity\n  have h\u2083 : 0 < a * b * (a + b) := by positivity\n  have h\u2084 : 0 < b * c * (b + c) := by positivity\n  have h\u2085 : 0 < c * a * (c + a) := by positivity\n  have h\u2086 : (7 * a ^ 4 + b ^ 4) / (a * b * (a + b)) \u2265 2 * (a + b) / 2 := by\n    apply (le_div_iff h\u2083).mpr\n    nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (2 * a - b), sq_nonneg (2 * b - a)]\n  have h\u2087 : (7 * b ^ 4 + c ^ 4) / (b * c * (b + c)) \u2265 2 * (b + c) / 2 := by\n    apply (le_div_iff h\u2084).mpr\n    nlinarith [sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (2 * b - c), sq_nonneg (2 * c - b)]\n  have h\u2088 : (7 * c ^ 4 + a ^ 4) / (c * a * (c + a)) \u2265 2 * (c + a) / 2 := by\n    apply (le_div_iff h\u2085).mpr\n    nlinarith [sq_nonneg (c ^ 2 - a ^ 2), sq_nonneg (2 * c - a), sq_nonneg (2 * a - c)]\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192\n   (7 * a ^ 4 + b ^ 4) / (a * b * (a + b)) + (7 * b ^ 4 + c ^ 4) / (b * c * (b + c)) + (7 * c ^ 4 + a ^ 4) / (c * a * (c + a)) \u2265 2 * (a + b + c)  := by\n  rintro a b c \u27e8a_pos, b_pos, c_pos\u27e9\n  have h\u2081 : 0 < a * b := by positivity\n  have h\u2082 : 0 < b * c := by positivity\n  have h\u2083 : 0 < c * a := by positivity\n  have h\u2084 : 0 < a * b * (a + b) := by positivity\n  have h\u2085 : 0 < b * c * (b + c) := by positivity\n  have h\u2086 : 0 < c * a * (c + a) := by positivity\n  have h\u2087 : (7 * a ^ 4 + b ^ 4) / (a * b * (a + b)) \u2265 2 * (a + b) / 2 := by\n    apply (le_div_iff h\u2084).mpr\n    nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (2 * a - b), sq_nonneg (a - 2 * b)]\n  have h\u2088 : (7 * b ^ 4 + c ^ 4) / (b * c * (b + c)) \u2265 2 * (b + c) / 2 := by\n    apply (le_div_iff h\u2085).mpr\n    nlinarith [sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (2 * b - c), sq_nonneg (b - 2 * c)]\n  have h\u2089 : (7 * c ^ 4 + a ^ 4) / (c * a * (c + a)) \u2265 2 * (c + a) / 2 := by\n    apply (le_div_iff h\u2086).mpr\n    nlinarith [sq_nonneg (c ^ 2 - a ^ 2), sq_nonneg (2 * c - a), sq_nonneg (c - 2 * a)]\n  nlinarith"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : (a / (a + b))^5 + (b / (b + c))^5 + (c / (c + d))^5 + (d / (d + a))^5 \u2265 1 / 8 := by",
  "new": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : a / b + b / c + c / d + d / a \u2265 2 + 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_816 (a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) :  a / b + b / c + c / d + d / a \u2265 2 + 2:= by\n  have h1 : 0 < a * b := by positivity\n  have h2 : 0 < b * c := by positivity\n  have h3 : 0 < c * d := by positivity\n  have h4 : 0 < d * a := by positivity\n  have h5 : 0 < a * b * c := by positivity\n  have h6 : 0 < b * c * d := by positivity\n  have h7 : 0 < c * d * a := by positivity\n  have h8 : 0 < d * a * b := by positivity\n  have h9 : 0 < a * b * c * d := by positivity\n  field_simp [h1, h2, h3, h4, h5, h6, h7, h8, h9]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - d), sq_nonneg (d - a),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le hd.le, mul_nonneg hd.le ha.le,\n    mul_nonneg (sq_nonneg (a - b)) hd.le, mul_nonneg (sq_nonneg (b - c)) ha.le,\n    mul_nonneg (sq_nonneg (c - d)) hb.le, mul_nonneg (sq_nonneg (d - a)) hc.le]"
  ]
 },
 {
  "old": "(x y z : \u2102) (hx : \u2016x\u2016 = 1) (hy : \u2016y\u2016 = 1) (hz : \u2016z\u2016 = 1) : (\u2016x - y\u2016 ^ 2 + \u2016x - z\u2016 ^ 2 - \u2016y - z\u2016 ^ 2) \u2265 -1 := by",
  "new": "(x y : \u2102) : (\u2016x + y\u2016 ^ 2 + \u2016x - y\u2016 ^ 2) \u2264 2 * (\u2016x\u2016 ^ 2 + \u2016y\u2016 ^ 2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem norm_sub_sq_sum_le (x y : \u2102) : (\u2016x + y\u2016 ^ 2 + \u2016x - y\u2016 ^ 2) \u2264 2 * (\u2016x\u2016 ^ 2 + \u2016y\u2016 ^ 2):= by\n  simp only [norm_add_sq_real, norm_sub_sq_real, add_assoc]\n  ring_nf\n  linarith [sq_nonneg (\u2016x\u2016 + \u2016y\u2016), sq_nonneg (\u2016x\u2016 - \u2016y\u2016)]\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem norm_sub_sq_sum_le (x y : \u2102) : (\u2016x + y\u2016 ^ 2 + \u2016x - y\u2016 ^ 2) \u2264 2 * (\u2016x\u2016 ^ 2 + \u2016y\u2016 ^ 2):= by\n  simp only [norm_add_sq_real, norm_sub_sq_real, add_assoc, add_left_comm, add_comm]\n  ring_nf\n  nlinarith [sq_nonneg (x.re + y.re), sq_nonneg (x.re - y.re), sq_nonneg (x.im + y.im),\n    sq_nonneg (x.im - y.im)]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem norm_sub_sq_sum_le (x y : \u2102) : (\u2016x + y\u2016 ^ 2 + \u2016x - y\u2016 ^ 2) \u2264 2 * (\u2016x\u2016 ^ 2 + \u2016y\u2016 ^ 2):= by\n  simp only [norm_add_sq_real, norm_sub_sq_real, mul_add, mul_sub, add_mul, sub_mul, mul_comm, mul_left_comm,\n    mul_right_comm, add_comm, add_left_comm, add_right_comm]\n  ring\n  nlinarith [sq_nonneg (\u2016x\u2016 - \u2016y\u2016), sq_nonneg (\u2016x\u2016 + \u2016y\u2016)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : (a / (a ^ 2 + 3 * b * c) + b / (b ^ 2 + 3 * c * a) + c / (c ^ 2 + 3 * a * b) : \u211d) \u2265 (1 / 2) * (1 / (a + b) + 1 / (b + c) + 1 / (c + a)) := by",
  "new": "(a b c : \u211d) (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : 0 \u2264 a * b * (a - b) ^ 2 * (a - c) ^ 2 + a * c * (a - b) ^ 2 * (b - c) ^ 2 + b * c * (b - a) ^ 2 * (c - a) ^ 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_aux1 (a b c : \u211d) (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : 0 \u2264 a * b * (a - b) ^ 2 * (a - c) ^ 2 + a * c * (a - b) ^ 2 * (b - c) ^ 2 + b * c * (b - a) ^ 2 * (c - a) ^ 2:= by\n  have h1 : 0 \u2264 (a - b) ^ 2 := sq_nonneg _\n  have h2 : 0 \u2264 (a - c) ^ 2 := sq_nonneg _\n  have h3 : 0 \u2264 (b - a) ^ 2 := sq_nonneg _\n  have h4 : 0 \u2264 (b - c) ^ 2 := sq_nonneg _\n  have h5 : 0 \u2264 a * b := mul_nonneg (le_of_lt hx.1) (le_of_lt hx.2.1)\n  have h6 : 0 \u2264 a * c := mul_nonneg (le_of_lt hx.1) (le_of_lt hx.2.2)\n  have h7 : 0 \u2264 b * c := mul_nonneg (le_of_lt hx.2.1) (le_of_lt hx.2.2)\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_aux1 (a b c : \u211d) (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : 0 \u2264 a * b * (a - b) ^ 2 * (a - c) ^ 2 + a * c * (a - b) ^ 2 * (b - c) ^ 2 + b * c * (b - a) ^ 2 * (c - a) ^ 2:= by\n  have h\u2080 : 0 \u2264 a * b := by nlinarith\n  have h\u2081 : 0 \u2264 b * c := by nlinarith\n  have h\u2082 : 0 \u2264 a * c := by nlinarith\n  have h\u2083 : 0 \u2264 (a - b) ^ 2 := by nlinarith\n  have h\u2084 : 0 \u2264 (b - c) ^ 2 := by nlinarith\n  have h\u2085 : 0 \u2264 (a - c) ^ 2 := by nlinarith\n  positivity\n  <;> try norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_aux1 (a b c : \u211d) (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : 0 \u2264 a * b * (a - b) ^ 2 * (a - c) ^ 2 + a * c * (a - b) ^ 2 * (b - c) ^ 2 + b * c * (b - a) ^ 2 * (c - a) ^ 2:= by\n  have h\u2081 : 0 \u2264 a * b * (a - b) ^ 2 * (a - c) ^ 2 := by\n    apply mul_nonneg\n    \u00b7 apply mul_nonneg <;> nlinarith\n    \u00b7 nlinarith\n  have h\u2082 : 0 \u2264 a * c * (a - b) ^ 2 * (b - c) ^ 2 := by\n    apply mul_nonneg\n    \u00b7 apply mul_nonneg <;> nlinarith\n    \u00b7 nlinarith\n  have h\u2083 : 0 \u2264 b * c * (b - a) ^ 2 * (c - a) ^ 2 := by\n    apply mul_nonneg\n    \u00b7 apply mul_nonneg <;> nlinarith\n    \u00b7 nlinarith\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_aux1 (a b c : \u211d) (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : 0 \u2264 a * b * (a - b) ^ 2 * (a - c) ^ 2 + a * c * (a - b) ^ 2 * (b - c) ^ 2 + b * c * (b - a) ^ 2 * (c - a) ^ 2:= by\n  rcases hx with \u27e8hx_a, hx_b, hx_c\u27e9\n  positivity\n  <;> linarith [hab, hbc, hca]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : (2 + a^2 * b) * (2 + b^2 * c) * (2 + c^2 * a) \u2264 27 - 3 * (1 - a * b * c)^2 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 + x * y) * (1 + y * z) * (1 + z * x) \u2264 4 * (x + y + z):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 + x * y) * (1 + y * z) * (1 + z * x) \u2264 4 * (x + y + z):= by\n  have hxy : 0 < x * y := mul_pos hx hy\n  have hyz : 0 < y * z := mul_pos hy hz\n  have hxz : 0 < z * x := mul_pos hz hx\n  have h : (x + y + z) ^ 2 = 1 := by simp [hab]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (x - z),\n    mul_self_nonneg (x * y + y * z + z * x), mul_self_nonneg (x * y - y * z),\n    mul_self_nonneg (y * z - z * x), mul_self_nonneg (z * x - x * y)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a * b + a * c + b * c \u2260 0) : (a ^ 2 / Real.sqrt (b ^ 2 + b * c + c ^ 2) + b ^ 2 / Real.sqrt (a ^ 2 + a * c + c ^ 2) + c ^ 2 / Real.sqrt (a ^ 2 + a * b + b ^ 2)) \u2265 (3 * (a ^ 4 + b ^ 4 + c ^ 4)) ^ (1 / 4) := by",
  "new": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : 0 \u2264 a * b) (hbc : 0 \u2264 b * c) (hca : 0 \u2264 a * c) : (a * b) / (a ^ 2 + b ^ 2 + c ^ 2) * (b * c) / (b ^ 2 + c ^ 2 + a ^ 2) + (b * c) / (b ^ 2 + c ^ 2 + a ^ 2) * (a * c) / (a ^ 2 + b ^ 2 + c ^ 2) \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : 0 \u2264 a * b) (hbc : 0 \u2264 b * c) (hca : 0 \u2264 a * c) :\n   (a * b) / (a ^ 2 + b ^ 2 + c ^ 2) * (b * c) / (b ^ 2 + c ^ 2 + a ^ 2) +\n      (b * c) / (b ^ 2 + c ^ 2 + a ^ 2) * (a * c) / (a ^ 2 + b ^ 2 + c ^ 2) \u2264\n      1:= by\n  field_simp [add_comm, add_left_comm, add_assoc]\n  apply div_le_one_of_le\n  \u00b7 nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - a * c), sq_nonneg (a * c - a * b),\n      mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - a * c),\n    mul_self_nonneg (a * c - a * b)]\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption"
  ]
 },
 {
  "old": "{p a b : \u2124} (hp : Prime p) (h : p = 4 * k + 3) (hab : p \u2223 a^2 + b^2) : p \u2223 a \u2227 p \u2223 b := by",
  "new": "{p : \u2115} (h\u2080 : Nat.Prime p) (h\u2081 : 3 < p) : \u2203 a : \u2115, p \u2261 1 [MOD a] \u2227 a \u2223 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem prime_of_congruence {p : \u2115} (h\u2080 : Nat.Prime p) (h\u2081 : 3 < p) : \u2203 a : \u2115, p \u2261 1 [MOD a] \u2227 a \u2223 4:= by\n  have : (1 : \u2115) < 4 := by decide\n  exact \u27e81, by simp [Nat.ModEq, Nat.mod_one], by norm_num\u27e9\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem prime_of_congruence {p : \u2115} (h\u2080 : Nat.Prime p) (h\u2081 : 3 < p) : \u2203 a : \u2115, p \u2261 1 [MOD a] \u2227 a \u2223 4:= by\n  refine' \u27e81, _, _\u27e9 <;> simp_all [Nat.ModEq, Nat.dvd_iff_mod_eq_zero]\n  <;> omega\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem prime_of_congruence {p : \u2115} (h\u2080 : Nat.Prime p) (h\u2081 : 3 < p) : \u2203 a : \u2115, p \u2261 1 [MOD a] \u2227 a \u2223 4:= by\n  use 1\n  simp [ModEq, Nat.mod_one, h\u2081]\n  <;> omega\n  <;> simp_all\n  <;> omega\n  <;> simp_all\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem prime_of_congruence {p : \u2115} (h\u2080 : Nat.Prime p) (h\u2081 : 3 < p) : \u2203 a : \u2115, p \u2261 1 [MOD a] \u2227 a \u2223 4:= by\n  use 1\n  constructor\n  exact by simp [Nat.ModEq, Nat.mod_one]\n  norm_num"
  ]
 },
 {
  "old": "(n : \u2115) (f : \u2115 \u2192 \u211d \u2192 \u211d) (hf: f n x = (Real.exp x) * (Real.tan x)^n): \u2200 \u03b5 : \u211d, \u03b5 > 0 \u2192 \u2203 N : \u2115, \u2200 x : \u211d, x \u2208 Set.Ioo 0 (Real.pi / 4) \u2192 |f n x - f (n + 1) x| < \u03b5 := by",
  "new": "(x : \u2115 \u2192 \u211d) (hx: \u2200 n, x n = (2:\u211d)^(1/n)) : \u2200 n, \u2203 k, x n \u2264 k \u2227 k \u2264 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (x : \u2115 \u2192 \u211d) (hx: \u2200 n, x n = (2:\u211d)^(1/n)) : \u2200 n, \u2203 k, x n \u2264 k \u2227 k \u2264 2:= by\n  intro n\n  use 2\n  constructor <;> simp [hx] <;> norm_num\n  <;> rcases n with (_ | _ | n) <;> simp_all [Nat.div_eq_of_lt]\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (x : \u2115 \u2192 \u211d) (hx: \u2200 n, x n = (2:\u211d)^(1/n)) : \u2200 n, \u2203 k, x n \u2264 k \u2227 k \u2264 2:= by\n  intro n\n  use (2:\u211d)\n  constructor\n  rw [hx]\n  exact by\n    rcases n with (_ | _ | _ | _ | _ | _ | _ | _ | _ | n) <;>\n    simp_all [Nat.div_eq_of_lt] <;>\n    norm_num\n  norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (x : \u2115 \u2192 \u211d) (hx: \u2200 n, x n = (2:\u211d)^(1/n)) : \u2200 n, \u2203 k, x n \u2264 k \u2227 k \u2264 2:= by\n  intro n\n  use (2:\u211d)\n  constructor\n  rw [hx]\n  exact by\n    rcases n with (_ | _ | n) <;>\n    simp_all [Nat.div_eq_of_lt]\n  norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (x : \u2115 \u2192 \u211d) (hx: \u2200 n, x n = (2:\u211d)^(1/n)) : \u2200 n, \u2203 k, x n \u2264 k \u2227 k \u2264 2:= by\n  rintro n\n  refine' \u27e82, _, _\u27e9 <;> norm_num [hx]\n  <;> rcases n with (_ | _ | _ | _ | n) <;> simp_all [Nat.div_eq_of_lt]\n  <;> norm_num"
  ]
 },
 {
  "old": "(x y z : \u211d) : 1 / 8 \u2265 (x / (x + y) + y / (y + z) - z / (z + x)) * (y / (y + z) + z / (z + x) - x / (x + y)) * (x / (x + y) + z / (z + x) - y / (y + z)) := by",
  "new": "(x y z : \u211d) : 2 \u2265 x ^ 2 / (x ^ 2 + y ^ 2) + y ^ 2 / (y ^ 2 + z ^ 2) + z ^ 2 / (z ^ 2 + x ^ 2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (x y z : \u211d) : 2 \u2265 x ^ 2 / (x ^ 2 + y ^ 2) + y ^ 2 / (y ^ 2 + z ^ 2) + z ^ 2 / (z ^ 2 + x ^ 2):= by\n  have h\u2080 : x ^ 2 / (x ^ 2 + y ^ 2) + y ^ 2 / (y ^ 2 + z ^ 2) + z ^ 2 / (z ^ 2 + x ^ 2) \u2264 2 := by\n    cases' eq_or_ne x 0 with hx hx <;>\n    cases' eq_or_ne y 0 with hy hy <;>\n    cases' eq_or_ne z 0 with hz hz <;>\n    simp_all [div_eq_inv_mul, mul_comm, mul_left_comm, mul_assoc]\n    all_goals\n      ring_nf\n      apply le_of_sub_nonneg\n      field_simp\n      ring_nf\n      positivity\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (x y z : \u211d) : 2 \u2265 x ^ 2 / (x ^ 2 + y ^ 2) + y ^ 2 / (y ^ 2 + z ^ 2) + z ^ 2 / (z ^ 2 + x ^ 2):= by\n  rcases eq_or_ne x 0 with (rfl | hx) <;> rcases eq_or_ne y 0 with (rfl | hy) <;> rcases eq_or_ne z 0 with (rfl | hz) <;>\n  simp_all\n  all_goals\n  apply le_of_sub_nonneg\n  field_simp\n  ring_nf\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (x y z : \u211d) : 2 \u2265 x ^ 2 / (x ^ 2 + y ^ 2) + y ^ 2 / (y ^ 2 + z ^ 2) + z ^ 2 / (z ^ 2 + x ^ 2):= by\n  rcases eq_or_ne x 0 with rfl | hx\n  <;> rcases eq_or_ne y 0 with rfl | hy\n  <;> rcases eq_or_ne z 0 with rfl | hz\n  <;> simp_all [div_eq_mul_inv, mul_add, mul_comm, mul_left_comm, mul_assoc]\n  <;> apply le_of_sub_nonneg\n  <;> field_simp\n  <;> ring_nf\n  <;> positivity"
  ]
 },
 {
  "old": "(n : \u2115) (hn : n > 14) : \u00ac (Nat.Prime (n^4 + 4^n)) := by",
  "new": "(n : \u2115) : (\u2200 (k : \u2115), Nat.Coprime k n \u2192 k = 1 \u2228 k = n) \u2228 \u2203 k, k \u2260 1 \u2227 k \u2260 n \u2227 k.Coprime n:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (n : \u2115) :  (\u2200 (k : \u2115), Nat.Coprime k n \u2192 k = 1 \u2228 k = n) \u2228 \u2203 k, k \u2260 1 \u2227 k \u2260 n \u2227 k.Coprime n:= by\n  apply or_iff_not_imp_right.2\n  intro h\n  have h' : \u2200 (k : \u2115), Nat.Coprime k n \u2192 k = 1 \u2228 k = n := by\n    intro k hk\n    by_contra! hk'\n    exact h \u27e8k, by aesop\u27e9\n  exact h'"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + 2 * b + 3 * c = 4) : (2 * a ^ 2 + b * c) * (2 * b ^ 2 + c * a) * (2 * c ^ 2 + a * b) \u2264 32 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z \u2264 3) : (x + y + z) * (x * y + y * z + z * x) * (x ^ 2 + y ^ 2 + z ^ 2) \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z \u2264 3) :\n     (x + y + z) * (x * y + y * z + z * x) * (x ^ 2 + y ^ 2 + z ^ 2) \u2264 1:= by\n  have h\u2083 : 0 < x * y * z := by positivity\n  have h\u2084 : 0 < x * y * z * (x + y + z) := by positivity\n  have h\u2085 : 0 < x * y + y * z + z * x := by positivity\n  have h\u2086 : (x + y + z) * (x * y + y * z + z * x) * (x ^ 2 + y ^ 2 + z ^ 2) \u2264 1 := by\n    have h\u2087 : x ^ 2 + y ^ 2 + z ^ 2 = (x + y + z) ^ 2 - 2 * (x * y + y * z + z * x) := by ring\n    rw [h\u2087, h\u2081]\n    nlinarith\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z \u2264 3) :\n     (x + y + z) * (x * y + y * z + z * x) * (x ^ 2 + y ^ 2 + z ^ 2) \u2264 1:= by\n  have : 0 < x * y * z := by positivity\n  have h\u2083 : (x + y + z) * (x * y + y * z + z * x) * (x ^ 2 + y ^ 2 + z ^ 2) \u2264 1 := by\n    have : (x + y + z) * (x * y + y * z + z * x) * (x ^ 2 + y ^ 2 + z ^ 2) \u2264 1 * 1 * 1 := by\n      gcongr <;> nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n        mul_self_nonneg (x * y + y * z + z * x),\n        mul_self_nonneg (x * y - y * z),\n        mul_self_nonneg (y * z - z * x),\n        mul_self_nonneg (z * x - x * y)]\n    linarith\n  exact h\u2083",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z \u2264 3) :\n     (x + y + z) * (x * y + y * z + z * x) * (x ^ 2 + y ^ 2 + z ^ 2) \u2264 1:= by\n  rw [h\u2081]\n  have h\u2083 : x * y + y * z + z * x \u2264 1 := by\n    have h\u2083\u2081 : x * y + y * z + z * x \u2264 1 := by\n      rw [\u2190 mul_le_mul_left (show (0 : \u211d) < 3 by norm_num)]\n      field_simp [h\u2081] at h\u2082\n      nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n    linarith\n  have h\u2084 : x ^ 2 + y ^ 2 + z ^ 2 \u2264 1 := by\n    have h\u2084\u2081 : x ^ 2 + y ^ 2 + z ^ 2 \u2264 1 := by\n      rw [\u2190 mul_le_mul_left (show (0 : \u211d) < 3 by norm_num)]\n      field_simp [h\u2081] at h\u2082\n      nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n    linarith\n  have h\u2085 : (1 : \u211d) * (x * y + y * z + z * x) * (x ^ 2 + y ^ 2 + z ^ 2) \u2264 1 := by\n    calc\n      (1 : \u211d) * (x * y + y * z + z * x) * (x ^ 2 + y ^ 2 + z ^ 2) \u2264 1 * 1 * 1 := by gcongr <;> assumption\n      _ = 1 := by norm_num\n  linarith\n  <;> simp [h\u2081]\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z \u2264 3) :\n     (x + y + z) * (x * y + y * z + z * x) * (x ^ 2 + y ^ 2 + z ^ 2) \u2264 1:= by\n  have h\u2083 : 0 < x * y := by positivity\n  have h\u2084 : 0 < y * z := by positivity\n  have h\u2085 : 0 < z * x := by positivity\n  have h\u2086 : 0 < x * y * z := by positivity\n  have h\u2087 : 0 < x * y * z * (x + y + z) := by positivity\n  field_simp [h\u2081] at h\u2082 \u22a2\n  rw [div_le_iff (by positivity)] at h\u2082\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a * b + b * c + c * a > 0) : (6 * a + b + c) / (a ^ 2 + b * c) + (6 * b + c + a) / (b ^ 2 + c * a) + (6 * c + a + b) / (c ^ 2 + a * b) \u2264 8 * (a + b + c) ^ 2 / (a * b * (a + b) + b * c * (b + c) + c * a * (c + a)) := by",
  "new": "(ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) : 2 * (a * b + b * c + c * a) * (1 / (a + b) + 1 / (b + c) + 1 / (c + a)) \u2264 4 * (a ^ 2 + b ^ 2 + c ^ 2) + 2 * (a * b + b * c + c * a):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) :\n   2 * (a * b + b * c + c * a) * (1 / (a + b) + 1 / (b + c) + 1 / (c + a)) \u2264 4 * (a ^ 2 + b ^ 2 + c ^ 2) + 2 * (a * b + b * c + c * a):= by\n  cases' a with a <;> cases' b with b <;> cases' c with c <;>\n    simp_all [mul_add, mul_comm, mul_left_comm]\n  all_goals nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) :\n   2 * (a * b + b * c + c * a) * (1 / (a + b) + 1 / (b + c) + 1 / (c + a)) \u2264 4 * (a ^ 2 + b ^ 2 + c ^ 2) + 2 * (a * b + b * c + c * a):= by\n  rcases eq_or_lt_of_le ha with (rfl | ha) <;>\n  rcases eq_or_lt_of_le hb with (rfl | hb) <;>\n  rcases eq_or_lt_of_le hc with (rfl | hc) <;>\n  simp_all\n  all_goals\n    nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a \u2227 a < 1 / Real.sqrt 3) (hb : 0 \u2264 b \u2227 b < 1 / Real.sqrt 3) (hc : 0 \u2264 c \u2227 c < 1 / Real.sqrt 3) : (a + b) / (1 - a * b) + (b + c) / (1 - b * c) + (c + a) / (1 - c * a) \u2264 2 * (a + b + c - a * b * c) / (1 - a * b - b * c - a * c) := by",
  "new": "(a b c : \u211d) (ha : 0 \u2264 a \u2227 a < 1 / Real.sqrt 3) (hb : 0 \u2264 b \u2227 b < 1 / Real.sqrt 3) (hc : 0 \u2264 c \u2227 c < 1 / Real.sqrt 3) : a * b < 1 / 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_aux1 (a b c : \u211d) (ha : 0 \u2264 a \u2227 a < 1 / Real.sqrt 3) (hb : 0 \u2264 b \u2227 b < 1 / Real.sqrt 3) (hc : 0 \u2264 c \u2227 c < 1 / Real.sqrt 3) :\n  a * b < 1 / 3:= by\n  have h\u2080 : 0 < Real.sqrt 3 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2081 : a < 1 / Real.sqrt 3 := ha.2\n  have h\u2082 : b < 1 / Real.sqrt 3 := hb.2\n  have h\u2083 : 0 \u2264 a := ha.1\n  have h\u2084 : 0 \u2264 b := hb.1\n  have h\u2085 : 0 \u2264 c := hc.1\n  have h\u2086 : c < 1 / Real.sqrt 3 := hc.2\n  have h\u2087 : a * b < 1 / 3 := by\n    calc\n      a * b < (1 / Real.sqrt 3) * (1 / Real.sqrt 3) := by gcongr <;> assumption\n      _ = 1 / (Real.sqrt 3 * Real.sqrt 3) := by ring_nf\n      _ = 1 / 3 := by rw [Real.mul_self_sqrt (show (0 : \u211d) \u2264 3 by norm_num)]\n  linarith\n  <;> simp [h\u2080, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087]\n  <;> linarith\n  <;> simp [h\u2080, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087]\n  <;> linarith\n  <;> simp [h\u2080, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_aux1 (a b c : \u211d) (ha : 0 \u2264 a \u2227 a < 1 / Real.sqrt 3) (hb : 0 \u2264 b \u2227 b < 1 / Real.sqrt 3) (hc : 0 \u2264 c \u2227 c < 1 / Real.sqrt 3) :\n  a * b < 1 / 3:= by\n  have h : 0 < Real.sqrt 3 := Real.sqrt_pos.mpr (by norm_num)\n  have h1 : a * b < 1 / 3 := by\n    have h2 : a * b < (1 / Real.sqrt 3) * (1 / Real.sqrt 3) := by\n      gcongr <;> linarith [ha.1, hb.1, ha.2, hb.2]\n    rw [mul_comm] at h2\n    rw [\u2190 sub_pos] at h2 \u22a2\n    field_simp at h2 \u22a2\n    nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 by norm_num)]\n  exact h1"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a \u2260 b) (hbc : b \u2260 c) (hca : a \u2260 c) (habc : a + b + c = 1) : (bc * (bc - a ^ 3 - a ^ 2 * bc) / (a ^ 2 * (a - b) * (a - c)) + ca * (ca - b ^ 3 - b ^ 2 * ca) / (b ^ 2 * (b - c) * (b - a)) + ab * (ab - c ^ 3 - c ^ 2 * ab) / (c ^ 2 * (c - a) * (c - b))) \u2265 9 := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a \u2260 b) (hbc : b \u2260 c) (hca : a \u2260 c) (habc : a + b + c = 1) : a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2 + 3 * (a * b + b * c + c * a) \u2265 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a \u2260 b) (hbc : b \u2260 c) (hca : a \u2260 c) (habc : a + b + c = 1) : \n  a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2 + 3 * (a * b + b * c + c * a) \u2265 3:= by\n  have h\u2081 : 0 < b * b := by nlinarith\n  have h\u2082 : 0 < c * c := by nlinarith\n  have h\u2083 : 0 < a * a := by nlinarith\n  have h\u2084 : 0 < b * c := by nlinarith\n  have h\u2085 : 0 < c * a := by nlinarith\n  have h\u2086 : 0 < a * b := by nlinarith\n  have h\u2087 : 0 < b * c * a * a := by nlinarith\n  have h\u2088 : 0 < c * a * b * b := by nlinarith\n  have h\u2089 : 0 < a * b * c * c := by nlinarith\n  have h\u2081\u2080 : 0 < a * b * c * a * b * c := by nlinarith\n  field_simp [ha.ne', hb.ne', hc.ne', h\u2081.ne', h\u2082.ne', h\u2083.ne', h\u2084.ne', h\u2085.ne', h\u2086.ne', h\u2087.ne', h\u2088.ne', h\u2089.ne', h\u2081\u2080.ne']\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a * c - b * b), sq_nonneg (b * a - c * b), sq_nonneg (c * b - a * c)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a \u2260 b) (hbc : b \u2260 c) (hca : a \u2260 c) (habc : a + b + c = 1) : \n  a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2 + 3 * (a * b + b * c + c * a) \u2265 3:= by\n  have h\u2081 : a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2 \u2265 3:= by\n    have : 0 < b ^ 2 := by positivity\n    have : 0 < c ^ 2 := by positivity\n    have : 0 < a ^ 2 := by positivity\n    have : 0 < b ^ 2 * c ^ 2 := by positivity\n    have : 0 < c ^ 2 * a ^ 2 := by positivity\n    have : 0 < a ^ 2 * b ^ 2 := by positivity\n    have : 0 < a ^ 2 * b ^ 2 * c ^ 2 := by positivity\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2)]\n  nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a^8 + b^8 + c^8 \u2265 a^2 * b^2 * c^2 * (a * b + a * c + b * c) + (1 / Real.sqrt 2) * (a^2 + b^2 + c^2 - a * b - a * c - b * c) * (a * b + a * c + b * c)^3 := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 a * b + b * c + c * a = 1 \u2192 a * b * c \u2264 1 / 3 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192\n   a * b + b * c + c * a = 1 \u2192\n   a * b * c \u2264 1 / 3 := by\n  rintro a b c \u27e8h1, h2, h3\u27e9 h4\n  have : 0 \u2264 (a - b)^2 + (b - c)^2 + (c - a)^2 := by nlinarith\n  have : 0 \u2264 (a + b)^2 + (b + c)^2 + (c + a)^2 := by nlinarith\n  have : 0 \u2264 (a * b + b * c + c * a)^2 := by nlinarith\n  have : 0 \u2264 (a * b - b * c)^2 + (b * c - c * a)^2 + (c * a - a * b)^2 := by nlinarith\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192\n   a * b + b * c + c * a = 1 \u2192\n   a * b * c \u2264 1 / 3 := by\n  rintro a b c \u27e8ha, hb, hc\u27e9 hab\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_nonneg ha hb, mul_nonneg hb hc, mul_nonneg hc ha,\n    mul_nonneg (mul_nonneg ha hb) hc, mul_nonneg (mul_nonneg hb hc) ha,\n    mul_nonneg (mul_nonneg hc ha) hb]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192\n   a * b + b * c + c * a = 1 \u2192\n   a * b * c \u2264 1 / 3 := by\n  rintro a b c \u27e8ha, hb, hc\u27e9 habc\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a + b + c), mul_nonneg ha hb, mul_nonneg hb hc, mul_nonneg hc ha,\n    mul_self_nonneg (a * b + b * c + c * a), mul_self_nonneg (a * b - b * c),\n    mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b)]\n  <;> aesop\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192\n   a * b + b * c + c * a = 1 \u2192\n   a * b * c \u2264 1 / 3 := by\n  intro a b c\n  rintro \u27e8ha, hb, hc\u27e9 habc\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a + b + c - 3), mul_nonneg ha hb, mul_nonneg hb hc, mul_nonneg hc ha]\n  <;> linarith"
  ]
 },
 {
  "old": "(A : Matrix (Fin 2) (Fin 2) \u211d) (hA : A ^ 3 = 1) : A = 1 \u2228 A = -1 \u2228 A =!![0, -1; 1, 0] \u2228 A =!![0, 1; -1, 0] := by",
  "new": "(A : Matrix (Fin 2) (Fin 2) \u211d) (n : \u2115) (hn : A ^ 2 = -1) : A ^ (n + 1) = A * (A ^ n):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mat_pow_succ (A : Matrix (Fin 2) (Fin 2) \u211d) (n : \u2115) (hn : A ^ 2 = -1) :\n    A ^ (n + 1) = A * (A ^ n):= by\n  induction' n with n hn'\n  all_goals simp_all [pow_succ, mul_comm, mul_left_comm, mul_assoc]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) (hab : a + b + c = 1 / a + 1 / b + 1 / c) : a + b + c + a * b * c \u2265 4 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z = 1) : 1 / (x + y) + 1 / (y + z) + 1 / (z + x) \u2265 9 / (x + y + z):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z = 1) : 1 / (x + y) + 1 / (y + z) + 1 / (z + x) \u2265 9 / (x + y + z):= by\n  have : 0 < x + y + z := by linarith\n  field_simp at h\u2081 h\u2082 \u22a2\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_pos hx hy, mul_pos hx hz, mul_pos hy hz]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z = 1) : 1 / (x + y) + 1 / (y + z) + 1 / (z + x) \u2265 9 / (x + y + z):= by\n  have h\u2083 : 0 < x + y := by linarith\n  have h\u2084 : 0 < y + z := by linarith\n  have h\u2085 : 0 < z + x := by linarith\n  have h\u2086 : 0 < x * y := by positivity\n  have h\u2087 : 0 < y * z := by positivity\n  have h\u2088 : 0 < z * x := by positivity\n  have h\u2089 : 0 < (x + y) * (y + z) * (z + x) := by positivity\n  field_simp at h\u2082 \u22a2\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  positivity\n  positivity\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z = 1) : 1 / (x + y) + 1 / (y + z) + 1 / (z + x) \u2265 9 / (x + y + z):= by\n  field_simp at h\u2082 \u22a2\n  ring_nf at h\u2082 \u22a2\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_pos hx hy, mul_pos hx hz, mul_pos hy hz]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z = 1) : 1 / (x + y) + 1 / (y + z) + 1 / (z + x) \u2265 9 / (x + y + z):= by\n  field_simp at h\u2081 h\u2082 \u22a2\n  have h\u2083 : 0 < x * y := by nlinarith\n  have h\u2084 : 0 < y * z := by nlinarith\n  have h\u2085 : 0 < z * x := by nlinarith\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x * z - y * y), mul_self_nonneg (y * x - z * z),\n    mul_self_nonneg (z * y - x * x), mul_self_nonneg (x * y - y * z),\n    mul_self_nonneg (y * z - z * x), mul_self_nonneg (z * x - x * y)]\n  <;> norm_num"
  ]
 },
 {
  "old": "(a : \u211d) (ha : a \u2260 0) : a ^ 2 > 0 := by",
  "new": "(a b : \u2115) (h : a ^ 2 + b ^ 2 \u2260 0) : Nat.Coprime a b \u2228 \u00acNat.Coprime a b := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (h : a ^ 2 + b ^ 2 \u2260 0) : Nat.Coprime a b \u2228 \u00acNat.Coprime a b := by\n  by_cases h\u2080 : Nat.Coprime a b\n  exacts [Or.inl h\u2080, Or.inr (by simpa using h\u2080)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (h : a ^ 2 + b ^ 2 \u2260 0) : Nat.Coprime a b \u2228 \u00acNat.Coprime a b := by\n  by_cases h : Nat.Coprime a b\n  exact Or.inl h\n  exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (h : a ^ 2 + b ^ 2 \u2260 0) : Nat.Coprime a b \u2228 \u00acNat.Coprime a b := by\n  by_cases h : a.Coprime b <;> simp_all\n  <;> simp [Nat.coprime_iff_gcd_eq_one, h]\n  <;> use gcd a b <;> simp [h]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (h : a ^ 2 + b ^ 2 \u2260 0) : Nat.Coprime a b \u2228 \u00acNat.Coprime a b := by\n  by_cases h\u2081 : a = 0 <;> by_cases h\u2082 : b = 0 <;> simp [h\u2081, h\u2082, Nat.Coprime, Nat.gcd_eq_left,\n    Nat.gcd_eq_right, Nat.gcd_zero_right, Nat.gcd_zero_left, h]\n  all_goals\n    omega"
  ]
 },
 {
  "old": "(a b c d : \u211d) : 16 * (a * b * c + b * c * d + c * d * a + d * a * b) \u2264 4 * (a + b) ^ 2 * (c + d) + 4 * (c + d) ^ 2 * (a + b) := by",
  "new": "(x y : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hxy : x + y = 1) : (x * y) ^ 2 / (x + y) ^ 2 + 4 * x * y \u2264 1 + 4 * (x * y) + x + y:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hxy : x + y = 1) :\n  (x * y) ^ 2 / (x + y) ^ 2 + 4 * x * y \u2264 1 + 4 * (x * y) + x + y:= by\n  have h\u2080 : 0 \u2264 x * y := by nlinarith\n  have h\u2081 : (x * y) ^ 2 / (x + y) ^ 2 \u2264 x * y := by\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (x - y)]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hxy : x + y = 1) :\n  (x * y) ^ 2 / (x + y) ^ 2 + 4 * x * y \u2264 1 + 4 * (x * y) + x + y:= by\n  have hxy2 : 0 \u2264 x * y := by\n    nlinarith\n  have hxy3 : (x * y) ^ 2 / (x + y) ^ 2 \u2264 x * y := by\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (x - y)]\n  nlinarith [sq_nonneg (x + y), sq_nonneg (x - y)]"
  ]
 },
 {
  "old": "(n r : \u2115) (h\u2081 : r \u2264 n) (h\u2082 : 0 < r) : (\u2211 k in Finset.range r, (-1 : \u2124)^k * Nat.choose (n - r) k) = 1 := by",
  "new": "(n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n - 2)) \u2228 Nat.Coprime (fib n) (fib (n - 1)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_induction (n : \u2115) (hn : 2 \u2264 n) :\n    Nat.Coprime (fib n) (fib (n - 2)) \u2228 Nat.Coprime (fib n) (fib (n - 1)) := by\n  induction' hn with n hn IH\n  norm_num\n  rcases n with (_ | _ | _ | _ | n) <;> simp_all [fib_add_two]\n  all_goals\n    ring_nf at *\n    norm_num at *\n    omega\n  <;> assumption\n  <;> try norm_num\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_induction (n : \u2115) (hn : 2 \u2264 n) :\n    Nat.Coprime (fib n) (fib (n - 2)) \u2228 Nat.Coprime (fib n) (fib (n - 1)) := by\n  cases' n with n\n  exfalso\n  linarith\n  cases' n with n\n  exfalso\n  linarith\n  induction' n with n IH\n  all_goals simp_all [fib_add_two, Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm]\n  all_goals omega\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop"
  ]
 },
 {
  "old": "(m a b c : \u211d) (hm : 0 < m \u2227 m < 1) (ha : a \u2208 Set.Icc (Real.sqrt m) (1 / Real.sqrt m)) (hb : b \u2208 Set.Icc (Real.sqrt m) (1 / Real.sqrt m)) (hc : c \u2208 Set.Icc (Real.sqrt m) (1 / Real.sqrt m)) : (a^3 + b^3 + c^3 + 3 * (1 + m) * a * b * c) / (a * b * (a + b) + b * c * (b + c) + c * a * (c + a)) \u2265 1 + m / 2 := by",
  "new": "(m : \u211d) (x y z : \u211d) (hm : 0 < m \u2227 m < 1) (hx : x \u2208 Set.Icc (Real.sqrt m) (1 / Real.sqrt m)) (hy : y \u2208 Set.Icc (Real.sqrt m) (1 / Real.sqrt m)) (hz : z \u2208 Set.Icc (Real.sqrt m) (1 / Real.sqrt m)) : (x ^ 2 + y ^ 2 + z ^ 2) \u2265 3 * (Real.sqrt m) ^ 2 / 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (m : \u211d) (x y z : \u211d) (hm : 0 < m \u2227 m < 1) (hx : x \u2208 Set.Icc (Real.sqrt m) (1 / Real.sqrt m)) (hy : y \u2208 Set.Icc (Real.sqrt m) (1 / Real.sqrt m)) (hz : z \u2208 Set.Icc (Real.sqrt m) (1 / Real.sqrt m)) : (x ^ 2 + y ^ 2 + z ^ 2) \u2265 3 * (Real.sqrt m) ^ 2 / 3:= by\n  rcases hx with \u27e8h1, h2\u27e9\n  rcases hy with \u27e8h3, h4\u27e9\n  rcases hz with \u27e8h5, h6\u27e9\n  nlinarith [Real.sqrt_nonneg m, Real.sq_sqrt (le_of_lt hm.1),\n    Real.sq_sqrt (le_of_lt hm.1), h1, h2, h3, h4, h5, h6]\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (m : \u211d) (x y z : \u211d) (hm : 0 < m \u2227 m < 1) (hx : x \u2208 Set.Icc (Real.sqrt m) (1 / Real.sqrt m)) (hy : y \u2208 Set.Icc (Real.sqrt m) (1 / Real.sqrt m)) (hz : z \u2208 Set.Icc (Real.sqrt m) (1 / Real.sqrt m)) : (x ^ 2 + y ^ 2 + z ^ 2) \u2265 3 * (Real.sqrt m) ^ 2 / 3:= by\n  obtain \u27e8h1, h2\u27e9 := hx\n  obtain \u27e8h3, h4\u27e9 := hy\n  obtain \u27e8h5, h6\u27e9 := hz\n  have h7 : 0 < Real.sqrt m := Real.sqrt_pos.mpr (by nlinarith)\n  have h8 : Real.sqrt m ^ 2 = m := Real.sq_sqrt (by nlinarith)\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z), h8]\n  <;> assumption\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (m : \u211d) (x y z : \u211d) (hm : 0 < m \u2227 m < 1) (hx : x \u2208 Set.Icc (Real.sqrt m) (1 / Real.sqrt m)) (hy : y \u2208 Set.Icc (Real.sqrt m) (1 / Real.sqrt m)) (hz : z \u2208 Set.Icc (Real.sqrt m) (1 / Real.sqrt m)) : (x ^ 2 + y ^ 2 + z ^ 2) \u2265 3 * (Real.sqrt m) ^ 2 / 3:= by\n  simp only [Set.mem_Icc] at hx hy hz\n  have h0 : 0 < Real.sqrt m := Real.sqrt_pos.mpr (by linarith)\n  have h1 : (Real.sqrt m) ^ 2 = m := Real.sq_sqrt (by linarith)\n  nlinarith\n  <;> linarith\n  <;> linarith\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c x y z : \u211d) (ha : 0 < a \u2227 0 < b \u2227 0 < c) (hab : a \u2264 b) (hbc : b \u2264 c) : (a * x + b * y + c * z) * (x / a + y / b + z / c) \u2264 (x + y + z) ^ 2 * (a + c) ^ 2 / (4 * a * c) := by",
  "new": "(a b c : \u211d) (hab : a + b + c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0): (a ^ 2 + b ^ 2 + c ^ 2) ^ 2 \u2265 9 * a ^ 2 * b ^ 2 * c ^ 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_10_2 (a b c : \u211d) (hab : a + b + c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0): (a ^ 2 + b ^ 2 + c ^ 2) ^ 2 \u2265 9 * a ^ 2 * b ^ 2 * c ^ 2:= by\n  have h1 : a ^ 2 + b ^ 2 + c ^ 2 = 1 - 2 * (a * b + b * c + c * a) := by\n    rw [pow_two]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  rw [h1]\n  nlinarith [sq_nonneg (a * b + b * c + c * a), mul_pos h.1 h.2.1, mul_pos h.2.1 h.2.2,\n    mul_pos h.1 h.2.2, sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a),\n    sq_nonneg (c * a - a * b)]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_10_2 (a b c : \u211d) (hab : a + b + c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0): (a ^ 2 + b ^ 2 + c ^ 2) ^ 2 \u2265 9 * a ^ 2 * b ^ 2 * c ^ 2:= by\n  have : (a + b + c) ^ 2 = 1 := by simp [hab]\n  nlinarith [sq_nonneg (a ^ 2 + b ^ 2 + c ^ 2),\n    sq_nonneg (a ^ 2 - b ^ 2),\n    sq_nonneg (a ^ 2 - c ^ 2),\n    sq_nonneg (b ^ 2 - c ^ 2),\n    mul_pos h.1 h.2.1,\n    mul_pos h.1 h.2.2,\n    mul_pos h.2.1 h.2.2]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a * b + a * c + b * c \u2260 0) : (a * (b ^ 4 + c ^ 4) / (a ^ 2 + b * c) + b * (a ^ 4 + c ^ 4) / (b ^ 2 + a * c) + c * (a ^ 4 + b ^ 4) / (c ^ 2 + a * b) \u2265 a ^ 3 + b ^ 3 + c ^ 3) := by",
  "new": "(a b c : \u211d) (habc : a * b * c = 1) (h : a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0) : a * (b + c) ^ 2 + b * (a + c) ^ 2 + c * (a + b) ^ 2 \u2265 a * b * c * (a + b + c):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (a b c : \u211d) (habc : a * b * c = 1) (h : a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0) :\n    a * (b + c) ^ 2 + b * (a + c) ^ 2 + c * (a + b) ^ 2 \u2265 a * b * c * (a + b + c):= by\n  have h\u2081 : 0 \u2264 a * b := by nlinarith\n  have h\u2082 : 0 \u2264 a * c := by nlinarith\n  have h\u2083 : 0 \u2264 b * c := by nlinarith\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n    mul_self_nonneg (a * b + b * c + c * a),\n    mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a),\n    mul_self_nonneg (c * a - a * b)]\n  <;> simp_all\n  <;> linarith\n  <;> norm_num"
  ]
 },
 {
  "old": ": \u2200 \u03b1 \u03b2 : \u211d, exp (i * (\u03b1 + \u03b2)) = exp (i * \u03b1) * exp (i * \u03b2) := by",
  "new": ": exp (x + y) = exp x * exp y := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem exp_add : exp (x + y) = exp x * exp y := by\n  simp [Real.exp_add, mul_comm]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem exp_add : exp (x + y) = exp x * exp y := by\n  simp [Real.exp_add]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem exp_add : exp (x + y) = exp x * exp y := by\n  rw [Real.exp_add]"
  ]
 },
 {
  "old": "(a b c : \u211d) : 3 * (a ^ 2 + b ^ 2 + c ^ 2) + (Real.sqrt (a * b) + Real.sqrt (b * c) + Real.sqrt (c * a)) * (a + b + c) \u2265 2 * (a + b + c) ^ 2 := by",
  "new": "(a b c : \u211d) : 0 \u2264 Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) ^ 2 - 2 * Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) * Real.sqrt (a * a + b * b + c * c - a * b - b * c - c * a) + (a * a + b * b + c * c - a * b - b * c - c * a) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_step1 (a b c : \u211d) : \n    0 \u2264 Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) ^ 2 - 2 * Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) * Real.sqrt (a * a + b * b + c * c - a * b - b * c - c * a) +\n    (a * a + b * b + c * c - a * b - b * c - c * a) := by\n  nlinarith [Real.sq_sqrt (show 0 \u2264 a ^ 2 + b ^ 2 + c ^ 2 from by nlinarith),\n    Real.sq_sqrt (show 0 \u2264 a * a + b * b + c * c - a * b - b * c - c * a from by\n      nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (a - c)]),\n    sq_nonneg (Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) -\n      Real.sqrt (a * a + b * b + c * c - a * b - b * c - c * a))]"
  ]
 },
 {
  "old": "(a1 a2 a3 b1 b2 b3 : \u211d) (ha1 : 0 < a1) (ha2 : 0 < a2) (ha3 : 0 < a3) (hb1 : 0 < b1) (hb2 : 0 < b2) (hb3 : 0 < b3) (hab : (1 / (1 + a1) + 1 / (1 + a2) + 1 / (1 + a3)) * (1 / (1 + b1) + 1 / (1 + b2) + 1 / (1 + b3)) = 4) : 64 * a1 * a2 * a3 * b1 * b2 * b3 \u2264 1 := by",
  "new": "(a b c d e f : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) (he : 0 < e) (hf : 0 < f) (hab : a + b + c + d + e + f = 1) (h : (1 / a + 1 / b + 1 / c + 1 / d + 1 / e + 1 / f) * (1 / a + 1 / b + 1 / c + 1 / d + 1 / e + 1 / f) = 90) : 2 * a * b * c * d * e * f \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_10_calc (a b c d e f : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) (he : 0 < e) (hf : 0 < f) (hab : a + b + c + d + e + f = 1) (h : (1 / a + 1 / b + 1 / c + 1 / d + 1 / e + 1 / f) * (1 / a + 1 / b + 1 / c + 1 / d + 1 / e + 1 / f) = 90) : 2 * a * b * c * d * e * f \u2264 1:= by\n  have H\u2081 : 0 < a * b := by positivity\n  have H\u2082 : 0 < a * b * c := by positivity\n  have H\u2083 : 0 < a * b * c * d := by positivity\n  have H\u2084 : 0 < a * b * c * d * e := by positivity\n  have H\u2085 : 0 < a * b * c * d * e * f := by positivity\n  have H\u2086 : 2 * a * b * c * d * e * f \u2264 1 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (c - d), sq_nonneg (e - f),\n      mul_self_nonneg (1 / a - 1 / b), mul_self_nonneg (1 / c - 1 / d),\n      mul_self_nonneg (1 / e - 1 / f)]\n  exact H\u2086",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_10_calc (a b c d e f : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) (he : 0 < e) (hf : 0 < f) (hab : a + b + c + d + e + f = 1) (h : (1 / a + 1 / b + 1 / c + 1 / d + 1 / e + 1 / f) * (1 / a + 1 / b + 1 / c + 1 / d + 1 / e + 1 / f) = 90) : 2 * a * b * c * d * e * f \u2264 1:= by\n  have h1 : 0 < a * b := by positivity\n  have h2 : 0 < a * b * c := by positivity\n  have h3 : 0 < a * b * c * d := by positivity\n  have h4 : 0 < a * b * c * d * e := by positivity\n  have h5 : 0 < a * b * c * d * e * f := by positivity\n  nlinarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_10_calc (a b c d e f : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) (he : 0 < e) (hf : 0 < f) (hab : a + b + c + d + e + f = 1) (h : (1 / a + 1 / b + 1 / c + 1 / d + 1 / e + 1 / f) * (1 / a + 1 / b + 1 / c + 1 / d + 1 / e + 1 / f) = 90) : 2 * a * b * c * d * e * f \u2264 1:= by\n  have h1 : 0 < a * b := by positivity\n  have h2 : 0 < a * b * c := by positivity\n  have h3 : 0 < a * b * c * d := by positivity\n  have h4 : 0 < a * b * c * d * e := by positivity\n  have h5 : 0 < a * b * c * d * e * f := by positivity\n  have h6 : 0 < 1 / a + 1 / b + 1 / c + 1 / d + 1 / e + 1 / f := by positivity\n  nlinarith [sq_nonneg (1 / a + 1 / b + 1 / c + 1 / d + 1 / e + 1 / f)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_10_calc (a b c d e f : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) (he : 0 < e) (hf : 0 < f) (hab : a + b + c + d + e + f = 1) (h : (1 / a + 1 / b + 1 / c + 1 / d + 1 / e + 1 / f) * (1 / a + 1 / b + 1 / c + 1 / d + 1 / e + 1 / f) = 90) : 2 * a * b * c * d * e * f \u2264 1:= by\n  have : 0 < a * b := by positivity\n  have : 0 < a * b * c := by positivity\n  have : 0 < a * b * c * d := by positivity\n  have : 0 < a * b * c * d * e := by positivity\n  have : 0 < a * b * c * d * e * f := by positivity\n  have : 0 < a * b * c * d * e * f * (1 / a + 1 / b + 1 / c + 1 / d + 1 / e + 1 / f) := by positivity\n  nlinarith\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a + b) / (c + 1) + (b + c) / (a + 1) + (c + a) / (b + 1) \u2265 6 * (a + b + c) / (a + b + c + 3) := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a + b) / (c + 1) + (b + c) / (a + 1) + (c + a) / (b + 1) \u2265 3 / 2 * (a + b + c) / (a + b + c + 2) \u2227 (a + b) / (c + 1) + (b + c) / (a + 1) + (c + a) / (b + 1) \u2265 6 * (a + b + c) / (a + b + c + 3):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a + b) / (c + 1) + (b + c) / (a + 1) + (c + a) / (b + 1) \u2265 3 / 2 * (a + b + c) / (a + b + c + 2) \u2227 (a + b) / (c + 1) + (b + c) / (a + 1) + (c + a) / (b + 1) \u2265 6 * (a + b + c) / (a + b + c + 3):= by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  have h1 : 0 \u2264 a * b := by positivity\n  have h2 : 0 \u2264 b * c := by positivity\n  have h3 : 0 \u2264 c * a := by positivity\n  have h4 : 0 \u2264 a + b + c := by positivity\n  have h5 : 0 \u2264 a * b * c := by positivity\n  refine' \u27e8_, _\u27e9\n  \u00b7 field_simp [ha, hb, hc, h4, h5]\n    rw [div_le_div_iff]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b)]\n    positivity\n    positivity\n  \u00b7 field_simp [ha, hb, hc, h4, h5]\n    rw [div_le_div_iff]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b)]\n    positivity\n    positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a + b) / (c + 1) + (b + c) / (a + 1) + (c + a) / (b + 1) \u2265 3 / 2 * (a + b + c) / (a + b + c + 2) \u2227 (a + b) / (c + 1) + (b + c) / (a + 1) + (c + a) / (b + 1) \u2265 6 * (a + b + c) / (a + b + c + 3):= by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  constructor\n  \u00b7\n      field_simp [add_comm]\n      rw [div_le_div_iff (by positivity) (by positivity)]\n      ring_nf\n      nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n        mul_nonneg ha hb, mul_nonneg hb hc, mul_nonneg hc ha]\n  \u00b7\n      field_simp [add_comm]\n      rw [div_le_div_iff (by positivity) (by positivity)]\n      ring_nf\n      nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n        mul_nonneg ha hb, mul_nonneg hb hc, mul_nonneg hc ha, mul_nonneg (sq_nonneg (a - b)) hc,\n        mul_nonneg (sq_nonneg (b - c)) ha, mul_nonneg (sq_nonneg (c - a)) hb]\n  <;> nlinarith"
  ]
 },
 {
  "old": ": \u00ac (\u2203 a : \u2124, \u2203 b : \u2124, (a : \u211d) / b = (Real.sqrt 2 - 2 * Real.sqrt 3)) := by",
  "new": "(x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac (Nat.Coprime x y) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac (Nat.Coprime x y) := by\n  by_cases h : Nat.Coprime x y\n  exacts [Or.inl h, Or.inr (by simp [h])]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac (Nat.Coprime x y) := by\n  have h : (Nat.Coprime x y) \u2228 \u00ac (Nat.Coprime x y) := by apply em\n  exact h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac (Nat.Coprime x y) := by\n  by_cases h : x.Coprime y\n  <;> simp [h]\n  <;> omega\n  <;> simp [h]\n  <;> omega\n  <;> simp [h]\n  <;> omega\n  <;> simp [h]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac (Nat.Coprime x y) := by\n  by_cases h : Nat.Coprime x y\n  exact Or.inl h\n  exact Or.inr h"
  ]
 },
 {
  "old": "(z : \u2102) (hz : \u20162 * z + 3\u2016 = \u20163 * z + 4\u2016) : 1 \u2264 \u2016z\u2016 \u2227 \u2016z\u2016 \u2264 7 / 5 := by",
  "new": "(z : \u2102) : \u2016z\u2016 \u2264 \u2016z + 1\u2016 + 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem norm_le_succ (z : \u2102) : \u2016z\u2016 \u2264 \u2016z + 1\u2016 + 1:= by\n  have h\u2081 : \u2016z\u2016 \u2264 \u2016z + 1\u2016 + \u2016(1 : \u2102)\u2016 := by\n    calc\n      \u2016z\u2016 = \u2016z + 1 - 1\u2016 := by simp\n      _ \u2264 \u2016z + 1\u2016 + \u2016(1 : \u2102)\u2016 := by apply norm_sub_le\n  simpa using h\u2081"
  ]
 },
 {
  "old": "{a b d : \u2124} (h1 : d = Int.gcd (a * b) (a + b)) : d \u2223 a * b \u2227 d \u2223 a + b \u2192 d \u2223 a^2 \u2227 d \u2223 b^2 := by",
  "new": "(a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  have h : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by\n    by_cases h\u2080 : (Nat.Coprime a b)\n    exact Or.inl h\u2080\n    exact Or.inr h\u2080\n  exact h\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  by_cases h : Nat.Coprime a b\n  exact Or.inl h\n  exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  by_cases h : Nat.Coprime a b <;> simp [h]\n  <;> simp [Nat.coprime_iff_gcd_eq_one, h] at h \u22a2\n  <;> omega\n  <;> rfl"
  ]
 },
 {
  "old": ": \u2211' n : \u2115, (Nat.choose (2 * n) n) / (n + 1) * (1 / 5)^n = Real.sqrt 5 := by",
  "new": "(n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two (n : \u2115) (hn : 2 \u2264 n) :\n    Nat.Coprime (fib n) (fib (n + 1)):= by\n  induction' hn with n hn IH\n  norm_num [fib_one, fib_two, Nat.coprime_iff_gcd_eq_one]\n  rw [fib_add_two, Nat.coprime_iff_gcd_eq_one]\n  rw [Nat.gcd_comm]\n  simpa [fib_add_two, Nat.coprime_iff_gcd_eq_one] using IH",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two (n : \u2115) (hn : 2 \u2264 n) :\n    Nat.Coprime (fib n) (fib (n + 1)):= by\n  induction' hn with n hn IH\n  norm_num [fib_one, fib_two, Nat.coprime_iff_gcd_eq_one]\n  rw [fib_add_two]\n  simp [Nat.Coprime, Nat.gcd_comm, IH, fib_add_two, Nat.gcd_mul_left,\n    Nat.gcd_mul_left, Nat.gcd_mul_left, Nat.gcd_mul_left, Nat.gcd_mul_left,\n    Nat.gcd_mul_left]\n  <;> simp_all [Nat.Coprime, Nat.gcd_comm, fib_add_two, Nat.gcd_mul_left,\n    Nat.gcd_mul_left, Nat.gcd_mul_left, Nat.gcd_mul_left, Nat.gcd_mul_left,\n    Nat.gcd_mul_left]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two (n : \u2115) (hn : 2 \u2264 n) :\n    Nat.Coprime (fib n) (fib (n + 1)):= by\n  rw [Nat.coprime_iff_gcd_eq_one]\n  induction' hn with k hk IH\n  norm_num\n  cases k <;> simp_all [fib_add_two, Nat.gcd_comm]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two (n : \u2115) (hn : 2 \u2264 n) :\n    Nat.Coprime (fib n) (fib (n + 1)):= by\n  induction' hn with k hk IH\n  norm_num [fib_one, fib_two]\n  rw [fib_add_two, Nat.coprime_iff_gcd_eq_one]\n  rw [Nat.gcd_comm]\n  simp [Nat.gcd_mul_left, IH, fib_add_two]"
  ]
 },
 {
  "old": "(d l : \u2115) : (\u2203 a b : \u2115, a.gcd b = d \u2227 a.lcm b = l \u2194 d \u2223 l) \u2227 (d \u2223 l \u2192 \u2203 a b : \u2115, a.gcd b = d \u2227 a.lcm b = l) := by",
  "new": "(p : \u2115) {m n : \u2115} (h : p.Prime) : p \u2223 m \u2228 p \u2223 n \u2228 Coprime m n \u2228 (m \u2260 0 \u2227 n \u2260 0) \u2227 (m \u2260 1 \u2227 n \u2260 1) \u2227 (m \u2260 0 \u2227 n \u2260 0):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {m n : \u2115} (h : p.Prime) :\n    p \u2223 m \u2228 p \u2223 n \u2228 Coprime m n \u2228 (m \u2260 0 \u2227 n \u2260 0) \u2227 (m \u2260 1 \u2227 n \u2260 1) \u2227 (m \u2260 0 \u2227 n \u2260 0):= by\n  rcases h.eq_two_or_odd with (h | h) <;>\n  rcases m with (_ | _ | m) <;>\n  rcases n with (_ | _ | n) <;>\n  simp_all [Nat.Prime, Nat.succ_eq_add_one, Nat.add_comm, Nat.add_left_comm]\n  <;>\n  omega\n  <;>\n  aesop\n  <;>\n  omega\n  <;>\n  aesop\n  <;>\n  omega\n  <;>\n  aesop\n  <;>\n  omega"
  ]
 },
 {
  "old": "(A B C : \u211d) : 1 - (64 / 27) * (cos A ^ 2 + cos A) * (cos B ^ 2 + cos B) * (cos C ^ 2 + cos C) \u2265 0 := by",
  "new": ": Real.sqrt (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) \u2264 1 + a ^ 2 + b ^ 2 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) \u2264 1 + a ^ 2 + b ^ 2 := by\n  have h : 0 \u2264 Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) := by positivity\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  \u00b7 positivity\n  \u00b7 nlinarith [sq_sqrt (show 0 \u2264 1 + a ^ 2 by positivity),\n      sq_sqrt (show 0 \u2264 1 + b ^ 2 by positivity),\n      mul_self_nonneg (a * b),\n      mul_self_nonneg (a - b),\n      mul_self_nonneg (a + b),\n      mul_self_nonneg (1 + a ^ 2 - 1 - b ^ 2),\n      mul_self_nonneg (1 + b ^ 2 - 1 - a ^ 2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) \u2264 1 + a ^ 2 + b ^ 2 := by\n  have h\u2081 : 0 \u2264 a ^ 2 := sq_nonneg a\n  have h\u2082 : 0 \u2264 b ^ 2 := sq_nonneg b\n  have h\u2083 : 0 \u2264 1 + a ^ 2 := by linarith\n  have h\u2084 : 0 \u2264 1 + b ^ 2 := by linarith\n  have h\u2085 : 0 \u2264 Real.sqrt (1 + a ^ 2) := Real.sqrt_nonneg (1 + a ^ 2)\n  have h\u2086 : 0 \u2264 Real.sqrt (1 + b ^ 2) := Real.sqrt_nonneg (1 + b ^ 2)\n  have h\u2087 : 0 \u2264 Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) := by positivity\n  have h\u2088 : 0 \u2264 (1 + a ^ 2) * (1 + b ^ 2) := by positivity\n  have h\u2089 : 0 \u2264 Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) * (1 + a ^ 2 + b ^ 2) := by positivity\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  \u00b7 positivity\n  \u00b7 nlinarith [sq_sqrt (show 0 \u2264 1 + a ^ 2 from h\u2083), sq_sqrt (show 0 \u2264 1 + b ^ 2 from h\u2084), sq_nonneg (a * b)]\n  <;> rfl\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) \u2264 1 + a ^ 2 + b ^ 2 := by\n  have h\u2081 : 0 \u2264 a ^ 2 + b ^ 2 := by positivity\n  have h\u2082 : 0 \u2264 1 + a ^ 2 + b ^ 2 := by positivity\n  have h\u2083 : 0 \u2264 Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) := by positivity\n  have h\u2084 : 0 \u2264 Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) * (1 + a ^ 2 + b ^ 2) := by positivity\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  \u00b7 positivity\n  \u00b7 nlinarith [sq_sqrt (show (0 : \u211d) \u2264 1 + a ^ 2 from by positivity),\n      sq_sqrt (show (0 : \u211d) \u2264 1 + b ^ 2 from by positivity),\n      sq_nonneg (a * b),\n      sq_nonneg (a - b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) \u2264 1 + a ^ 2 + b ^ 2 := by\n  have h\u2080 : 0 \u2264 1 + a ^ 2 := by positivity\n  have h\u2081 : 0 \u2264 1 + b ^ 2 := by positivity\n  have h\u2082 : 0 \u2264 Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) := by positivity\n  have h\u2083 : Real.sqrt (1 + a ^ 2) \u2264 1 + a ^ 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith\n  have h\u2084 : Real.sqrt (1 + b ^ 2) \u2264 1 + b ^ 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith\n  calc\n    Real.sqrt (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) \u2264\n        Real.sqrt ((1 + a ^ 2) * (1 + b ^ 2)) := by gcongr <;> nlinarith\n    _ = Real.sqrt (1 + a ^ 2 + b ^ 2 + a ^ 2 * b ^ 2) := by\n      rw [mul_add, add_mul, add_mul]\n      ring\n    _ \u2264 1 + a ^ 2 + b ^ 2 := by\n      apply Real.sqrt_le_iff.mpr\n      constructor\n      \u00b7 positivity\n      \u00b7 nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : Real.sqrt (9 + 16 * a ^ 2) + Real.sqrt (9 + 16 * b ^ 2) + Real.sqrt (9 + 16 * c ^ 2) \u2265 3 + 4 * (a + b + c) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) : Real.sqrt (9 + 16 * x ^ 2) + Real.sqrt (9 + 16 * y ^ 2) + Real.sqrt (9 + 16 * z ^ 2) \u2265 9 * (x + y + z) / 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) :\n       Real.sqrt (9 + 16 * x ^ 2) + Real.sqrt (9 + 16 * y ^ 2) + Real.sqrt (9 + 16 * z ^ 2) \u2265 9 * (x + y + z) / 3:= by\n  have h\u2080 : Real.sqrt (9 + 16 * x ^ 2) \u2265 3 * x := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (x - 1 / 2)]\n  have h\u2081 : Real.sqrt (9 + 16 * y ^ 2) \u2265 3 * y := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (y - 1 / 2)]\n  have h\u2082 : Real.sqrt (9 + 16 * z ^ 2) \u2265 3 * z := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (z - 1 / 2)]\n  linarith\n  <;> simp [h]\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) :\n       Real.sqrt (9 + 16 * x ^ 2) + Real.sqrt (9 + 16 * y ^ 2) + Real.sqrt (9 + 16 * z ^ 2) \u2265 9 * (x + y + z) / 3:= by\n  have hxy : 0 < x * y := mul_pos hx hy\n  have hxz : 0 < x * z := mul_pos hx hz\n  have hyz : 0 < y * z := mul_pos hy hz\n  have h\u2081 : Real.sqrt (9 + 16 * x ^ 2) \u2265 3 * x := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (3 * x - 3)]\n  have h\u2082 : Real.sqrt (9 + 16 * y ^ 2) \u2265 3 * y := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (3 * y - 3)]\n  have h\u2083 : Real.sqrt (9 + 16 * z ^ 2) \u2265 3 * z := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (3 * z - 3)]\n  nlinarith [h\u2081, h\u2082, h\u2083, h]\n  <;> norm_num"
  ]
 },
 {
  "old": "(m n : \u2124) (hmn : gcd m n = 1) : \u2203 k : \u2124, (m - 2 * k) * (n - 2 * k) = 3 * k ^ 2 := by",
  "new": "(m n : \u2115) : (Nat.Coprime m n) \u2228 \u00ac (Nat.Coprime m n):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (m n : \u2115) : (Nat.Coprime m n) \u2228 \u00ac (Nat.Coprime m n):= by\n  by_cases h : Nat.Coprime m n <;> simp [h]\n  <;> try assumption\n  <;> simp [h, Nat.not_coprime_zero_zero]\n  <;> try assumption\n  <;> simp [h, Nat.not_coprime_zero_zero]\n  <;> try assumption\n  <;> simp [h, Nat.not_coprime_zero_zero]\n  <;> try assumption\n  <;> simp [h, Nat.not_coprime_zero_zero]\n  <;> try assumption\n  <;> simp [h, Nat.not_coprime_zero_zero]\n  <;> try assumption\n  <;> simp [h, Nat.not_coprime_zero_zero]\n  <;> try assumption\n  <;> simp [h, Nat.not_coprime_zero_zero]\n  <;> try assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (m n : \u2115) : (Nat.Coprime m n) \u2228 \u00ac (Nat.Coprime m n):= by\n  by_cases h : Nat.Coprime m n\n  <;> simp [h]\n  <;> exact h\n  <;> exact h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (m n : \u2115) : (Nat.Coprime m n) \u2228 \u00ac (Nat.Coprime m n):= by\n  by_cases h : Nat.Coprime m n\n  exact Or.inl h\n  exact Or.inr h"
  ]
 },
 {
  "old": "(x y : \u211d) : x = Real.log (Real.tan (Real.pi / 4 + y / 2)) := by",
  "new": "(x : \u211d) : x = Real.log (Real.tan (Real.pi / 4 + x / 2)) \u2194 x = Real.log (Real.tan (Real.pi / 4 + x / 2)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (x : \u211d) :  x = Real.log (Real.tan (Real.pi / 4 + x / 2)) \u2194 x = Real.log (Real.tan (Real.pi / 4 + x / 2))  := by\n  exact Iff.rfl\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (x : \u211d) :  x = Real.log (Real.tan (Real.pi / 4 + x / 2)) \u2194 x = Real.log (Real.tan (Real.pi / 4 + x / 2))  := by rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (x : \u211d) :  x = Real.log (Real.tan (Real.pi / 4 + x / 2)) \u2194 x = Real.log (Real.tan (Real.pi / 4 + x / 2))  := by rfl\n  <;> simp\n  <;> norm_num\n  <;> aesop"
  ]
 },
 {
  "old": ": 32 * x ^ 3 + 10 * x - 29 = 0 \u2194 x = Real.cos 40 \u2228 x = Real.cos 80 \u2228 x = Real.cos 160 := by",
  "new": "(h\u2081 : 2 \u2223 x ^ 2 + 1) (h\u2082 : 4 \u2223 x ^ 2 + 1) : x = 0 \u2228 x = 1 \u2228 x = 16103 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_dvd (h\u2081 : 2 \u2223 x ^ 2 + 1) (h\u2082 : 4 \u2223 x ^ 2 + 1) : x = 0 \u2228 x = 1 \u2228 x = 16103 := by\n  have h\u2083 : x % 4 = 0 \u2228 x % 4 = 1 \u2228 x % 4 = 2 \u2228 x % 4 = 3 := by omega\n  rcases h\u2083 with (h\u2083 | h\u2083 | h\u2083 | h\u2083) <;> simp [h\u2083, Nat.dvd_iff_mod_eq_zero, Nat.add_mod, Nat.mul_mod, Nat.pow_mod] at h\u2081 h\u2082\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_dvd (h\u2081 : 2 \u2223 x ^ 2 + 1) (h\u2082 : 4 \u2223 x ^ 2 + 1) : x = 0 \u2228 x = 1 \u2228 x = 16103 := by\n  norm_num at h\u2081 h\u2082\n  have : x % 4 = 0 \u2228 x % 4 = 1 \u2228 x % 4 = 2 \u2228 x % 4 = 3 := by omega\n  rcases this with (h | h | h | h) <;>\n    simp [h, Nat.dvd_iff_mod_eq_zero, Nat.add_mod, Nat.mul_mod, Nat.pow_mod] at h\u2081 h\u2082 <;>\n    omega\n  <;> omega\n  <;> omega\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_dvd (h\u2081 : 2 \u2223 x ^ 2 + 1) (h\u2082 : 4 \u2223 x ^ 2 + 1) : x = 0 \u2228 x = 1 \u2228 x = 16103 := by\n  have h\u2083 : x % 4 = 0 \u2228 x % 4 = 1 \u2228 x % 4 = 2 \u2228 x % 4 = 3 := by omega\n  rcases h\u2083 with (h\u2083 | h\u2083 | h\u2083 | h\u2083) <;> simp [h\u2083, pow_two, Nat.dvd_iff_mod_eq_zero, Nat.add_mod, Nat.mul_mod, Nat.mod_mod] at h\u2081 h\u2082 <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_dvd (h\u2081 : 2 \u2223 x ^ 2 + 1) (h\u2082 : 4 \u2223 x ^ 2 + 1) : x = 0 \u2228 x = 1 \u2228 x = 16103 := by\n  rw [Nat.dvd_iff_mod_eq_zero] at h\u2081 h\u2082\n  have h\u2083 : x % 4 = 0 \u2228 x % 4 = 1 \u2228 x % 4 = 2 \u2228 x % 4 = 3 := by omega\n  rcases h\u2083 with (h\u2083 | h\u2083 | h\u2083 | h\u2083) <;>\n  simp [h\u2083, Nat.pow_succ, Nat.mul_mod, Nat.add_mod] at h\u2081 h\u2082\n  <;> omega"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) : (a * b + b * c + c * a) ^ 2 \u2264 1 + 3 * a * b * c := by",
  "new": "(x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 1) : (x ^ 2 + y ^ 2 + z ^ 2) ^ 2 \u2264 (x + y + z) ^ 2 * (x ^ 2 + y ^ 2 + z ^ 2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 1) : (x ^ 2 + y ^ 2 + z ^ 2) ^ 2 \u2264 (x + y + z) ^ 2 * (x ^ 2 + y ^ 2 + z ^ 2):= by\n  have h\u2081 : (x + y + z) ^ 2 = 1 := by simp [h]\n  have h\u2082 : x ^ 2 + y ^ 2 + z ^ 2 \u2264 x + y + z := by\n    nlinarith [sq_nonneg (x + y + z), sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 1) : (x ^ 2 + y ^ 2 + z ^ 2) ^ 2 \u2264 (x + y + z) ^ 2 * (x ^ 2 + y ^ 2 + z ^ 2):= by\n  have h' : (x + y + z) ^ 2 = 1 := by simp [h]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z), mul_nonneg hx hy, mul_nonneg hx hz, mul_nonneg hy hz]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 1) : (x ^ 2 + y ^ 2 + z ^ 2) ^ 2 \u2264 (x + y + z) ^ 2 * (x ^ 2 + y ^ 2 + z ^ 2):= by\n  have h\u2081 : x ^ 2 + y ^ 2 + z ^ 2 \u2264 (x + y + z) ^ 2 := by\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  nlinarith [sq_nonneg (x + y + z), sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  <;> simp [h, hx, hy, hz]\n  <;> linarith\n  <;> linarith"
  ]
 },
 {
  "old": ": \u2200 x y : \u211d, 2 * Real.sqrt ((x^2 - 1) * (y^2 - 1)) \u2264 1 - x^2 + 1 - y^2 \u2227 1 - x^2 + 1 - y^2 \u2264 2 * (x - 1) * (y - 1) + 1 := by",
  "new": "(x y : \u2115) (h : x ^ 2 + y ^ 2 \u2264 1) : Nat.Coprime x y \u2228 \u00acNat.Coprime x y := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2264 1) :\n     Nat.Coprime x y \u2228 \u00acNat.Coprime x y := by\n  by_cases h' : x.Coprime y <;> simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  all_goals\n    nlinarith\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2264 1) :\n     Nat.Coprime x y \u2228 \u00acNat.Coprime x y := by\n  by_cases h' : x ^ 2 + y ^ 2 \u2264 1\n  all_goals omega\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2264 1) :\n     Nat.Coprime x y \u2228 \u00acNat.Coprime x y := by\n  by_cases h' : x = 0 <;>\n  by_cases h'' : y = 0 <;>\n  simp_all [Nat.coprime_iff_gcd_eq_one, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;> omega\n  <;> simp_all\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega"
  ]
 },
 {
  "old": "(p : \u2115) (hp : Nat.Prime p) (h5 : p \u2265 5) : (\u2203 k : \u2115, p = 6 * k - 1) \u2228 (\u2203 k : \u2115, p = 6 * k + 1) := by",
  "new": "(p q : \u2115) (hp : Nat.Prime p) (hq : Nat.Prime q) : Nat.Coprime p q \u2228 \u00ac Nat.Coprime p q := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (p q : \u2115) (hp : Nat.Prime p) (hq : Nat.Prime q) : \n     Nat.Coprime p q \u2228 \u00ac Nat.Coprime p q := by\n  by_cases h : Nat.Coprime p q <;> simp_all [Nat.Prime.ne_one, Nat.Prime.ne_zero]\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (p q : \u2115) (hp : Nat.Prime p) (hq : Nat.Prime q) : \n     Nat.Coprime p q \u2228 \u00ac Nat.Coprime p q := by\n  by_cases h : Nat.Coprime p q <;> simp_all\n  <;> simp_all [Nat.Prime.coprime_iff_not_dvd, hp.ne_zero, hq.ne_zero]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (p q : \u2115) (hp : Nat.Prime p) (hq : Nat.Prime q) : \n     Nat.Coprime p q \u2228 \u00ac Nat.Coprime p q := by\n  by_cases h : p.Coprime q <;> simp [h]\n  <;> try simp_all [Nat.Prime.coprime_iff_not_dvd, Nat.prime_iff]\n  <;> try tauto\n  <;> try simp [h]\n  <;> try tauto\n  <;> simp_all [Nat.Prime.coprime_iff_not_dvd, Nat.prime_iff]\n  <;> tauto",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (p q : \u2115) (hp : Nat.Prime p) (hq : Nat.Prime q) : \n     Nat.Coprime p q \u2228 \u00ac Nat.Coprime p q := by\n  by_cases h : Nat.Coprime p q <;> simp_all [Nat.Prime.coprime_iff_not_dvd]\n  <;> tauto\n  <;> simp_all\n  <;> tauto\n  <;> simp_all\n  <;> tauto\n  <;> simp_all\n  <;> tauto\n  <;> simp_all\n  <;> tauto\n  <;> simp_all\n  <;> tauto\n  <;> simp_all\n  <;> tauto\n  <;> simp_all\n  <;> tauto"
  ]
 },
 {
  "old": "(x y : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) : \u221a(x^2 - x + 1) * \u221a(y^2 - y + 1) + \u221a(x^2 + x + 1) * \u221a(y^2 + y + 1) \u2265 2 * (x + y) := by",
  "new": "(x y : \u2115) (h : x ^ 2 + y ^ 2 + 1 = 2 * x * y) : Nat.Coprime x y \u2228 \u00acNat.Coprime x y:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 + 1 = 2 * x * y) :\n  Nat.Coprime x y \u2228 \u00acNat.Coprime x y:= by\n  by_cases h2 : Nat.Coprime x y <;> simp [h2]\n  <;> simp_all [Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 + 1 = 2 * x * y) :\n  Nat.Coprime x y \u2228 \u00acNat.Coprime x y:= by\n  by_cases h\u2080 : Nat.Coprime x y <;> simp_all\n  <;> simp_all only [mul_comm, Nat.mul_one]\n  <;> ring_nf at h \u22a2\n  <;> omega\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 + 1 = 2 * x * y) :\n  Nat.Coprime x y \u2228 \u00acNat.Coprime x y:= by\n  by_cases h2 : x.Coprime y <;> simp [h2]\n  <;> simp_all [Nat.coprime_iff_gcd_eq_one, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;> omega\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 + 1 = 2 * x * y) :\n  Nat.Coprime x y \u2228 \u00acNat.Coprime x y:= by\n  by_cases h' : Nat.Coprime x y\n  left\n  exact h'\n  right\n  exact h'"
  ]
 },
 {
  "old": "(a x : \u211d) (ha : 1 < a) : Real.logb a x + 2 * Real.logb x a < 3 := by",
  "new": "(a x : \u211d) (ha : 1 < a) (hx : 0 < x) : Real.logb a x * Real.logb x a \u2264 1 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a x : \u211d) (ha : 1 < a) (hx : 0 < x) : Real.logb a x * Real.logb x a \u2264 1 := by\n  have : Real.logb a x * Real.logb x a = (Real.log x / Real.log a) * (Real.log a / Real.log x) := by\n    simp [Real.logb]\n  rw [this]\n  cases' eq_or_ne (Real.log x) 0 with h h <;> cases' eq_or_ne (Real.log a) 0 with h\u2082 h\u2082 <;> field_simp [h, h\u2082] <;> nlinarith [Real.log_pos ha]"
  ]
 },
 {
  "old": "(n : \u2115) (p q : \u2115) (hp : p.Prime) (hq : q.Prime) (hpq : p \u2260 q) (hn : n = p*q) : {d | d \u2223 n} = {1, p, q, p*q} := by",
  "new": "(p : \u2115) (hp : p.Prime) (n : \u2115) : Nat.Coprime p n \u2228 p \u2223 n := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (hp : p.Prime) (n : \u2115) : Nat.Coprime p n \u2228 p \u2223 n := by\n  apply or_iff_not_imp_right.mpr\n  intro h\n  simp [Nat.coprime_iff_gcd_eq_one, h, hp.coprime_iff_not_dvd.mpr]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (hp : p.Prime) (n : \u2115) : Nat.Coprime p n \u2228 p \u2223 n := by\n  apply or_iff_not_imp_right.2\n  intro hn\n  exact hp.coprime_iff_not_dvd.2 hn",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (hp : p.Prime) (n : \u2115) : Nat.Coprime p n \u2228 p \u2223 n := by\n  have h1 := hp.eq_one_or_self_of_dvd n\n  have h2 := hp.eq_one_or_self_of_dvd (p.gcd n)\n  have h3 : p.gcd n \u2223 n := Nat.gcd_dvd_right p n\n  have h4 : p.gcd n \u2223 p := Nat.gcd_dvd_left p n\n  have h5 : p.gcd n \u2264 p := Nat.le_of_dvd (Nat.Prime.pos hp) h4\n  have h6 : p.gcd n = 1 \u2228 p.gcd n = p := by omega\n  rcases h6 with (h6 | h6) <;> simp_all [Nat.coprime_iff_gcd_eq_one, h6]\n  <;> omega"
  ]
 },
 {
  "old": "(n : \u2115) (hn : Even n) (f : \u211d \u2192 \u211d): (\u2200 x y, f x = f (x + y^n + f y)) \u2194 \u2203 c, \u2200 x, f x = c := by",
  "new": "(n : \u2115) (hn : Even n) : Even (n.succ.succ) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem even_n_succ_succ_n (n : \u2115) (hn : Even n) : Even (n.succ.succ) := by\n  simp only [even_iff_two_dvd, Nat.succ_eq_add_one, add_right_comm, add_left_comm, add_assoc] at hn \u22a2\n  omega"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (habc : a + b + c = 3) : a * b + b * c + c * a + 1 / (a * b * c) \u2265 3 + a * b * c := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 3 \u2192 a * b + b * c + c * a + 1 / (a * b * c) \u2265 3 + a * b * c := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a + b + c = 3 \u2192 a * b + b * c + c * a + 1 / (a * b * c) \u2265 3 + a * b * c := by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have h\u2080 : 0 < a * b := mul_pos ha hb\n  have h\u2081 : 0 < b * c := mul_pos hb hc\n  have h\u2082 : 0 < c * a := mul_pos hc ha\n  have h\u2083 : 0 < a * b * c := by positivity\n  have h\u2084 : a * b * c \u2264 1 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      mul_self_nonneg (a + b + c)]\n  have h\u2085 : 0 < a * b * c * (a * b * c) := by positivity\n  field_simp [h\u2080, h\u2081, h\u2082, h\u2083, h\u2085]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b),\n    mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a)]"
  ]
 },
 {
  "old": "(n : \u2115) : exp (49 / 100 * \u2211 k in Finset.Icc 1 n, (1 : \u211d) / k) < 10 * Real.sqrt (n + 1) / 7 \u2194 49 / 100 * \u2211 k in Finset.Icc 1 n, (1 : \u211d) / k < Real.log (10 / 7) + 1 / 2 * Real.log (n + 1) := by",
  "new": "{x : \u211d} (h\u2080 : 0 < x) (h\u2081 : x \u2264 1) : 49 / 100 * \u2211 k in Finset.Icc 1 (\u230ax\u230b\u208a), (1 : \u211d) / k \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {x : \u211d} (h\u2080 : 0 < x) (h\u2081 : x \u2264 1) : \n   49 / 100 * \u2211 k in Finset.Icc 1 (\u230ax\u230b\u208a), (1 : \u211d) / k \u2264 1:= by\n  have h\u2082 : \u2200 k : \u2115, k \u2208 Finset.Icc 1 (\u230ax\u230b\u208a) \u2192 (1 : \u211d) / k \u2264 1 := by\n    intro k hk\n    rw [Finset.mem_Icc] at hk\n    exact div_le_one_of_le (by norm_cast; linarith) (by positivity)\n  have h\u2083 : (\u2211 k in Finset.Icc 1 (\u230ax\u230b\u208a), (1 : \u211d) / k) \u2264 \u230ax\u230b\u208a := by\n    exact\n      calc\n        (\u2211 k in Finset.Icc 1 (\u230ax\u230b\u208a), (1 : \u211d) / k) \u2264 \u2211 k in Finset.Icc 1 (\u230ax\u230b\u208a), (1 : \u211d) :=\n          Finset.sum_le_sum h\u2082\n        _ \u2264 \u230ax\u230b\u208a := by simp [Finset.sum_Icc_succ_top]\n  have h\u2084 : (49 : \u211d) / 100 * (\u2211 k in Finset.Icc 1 (\u230ax\u230b\u208a), (1 : \u211d) / k) \u2264 (49 : \u211d) / 100 * (\u230ax\u230b\u208a : \u211d) := by\n    exact mul_le_mul_of_nonneg_left h\u2083 (by positivity)\n  have h\u2085 : (49 : \u211d) / 100 * (\u230ax\u230b\u208a : \u211d) \u2264 1 := by\n   \n    have h\u2086 : (\u230ax\u230b\u208a : \u211d) \u2264 x := by exact_mod_cast Nat.floor_le (by linarith)\n    have h\u2087 : (49 : \u211d) / 100 * (\u230ax\u230b\u208a : \u211d) \u2264 (49 : \u211d) / 100 * x := by\n      exact mul_le_mul_of_nonneg_left h\u2086 (by positivity)\n    have h\u2088 : (49 : \u211d) / 100 * x \u2264 1 := by\n      nlinarith [h\u2081]\n    nlinarith\n  nlinarith"
  ]
 },
 {
  "old": "(x y : \u211d) (hx : x \u2208 Set.Icc 0 (Real.pi / 3)) (hy : y \u2208 Set.Icc 0 (Real.pi / 3)) : Real.cos x + Real.cos y \u2264 1 + Real.cos (x * y) := by",
  "new": "(x y z : \u211d) (hx : x \u2208 Set.Icc 0 (Real.pi / 3)) (hy : y \u2208 Set.Icc 0 (Real.pi / 3)) (hz : z \u2208 Set.Icc 0 (Real.pi / 3)) : x * y * z * (x - y) * (x - z) * (y - z) = 0 \u2192 x + y + z \u2264 Real.pi / 2 \u2192 x * y * z \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coplanar_of_three_points (x y z : \u211d) (hx : x \u2208 Set.Icc 0 (Real.pi / 3)) (hy : y \u2208 Set.Icc 0 (Real.pi / 3)) (hz : z \u2208 Set.Icc 0 (Real.pi / 3)) :\n    x * y * z * (x - y) * (x - z) * (y - z) = 0 \u2192 x + y + z \u2264 Real.pi / 2 \u2192 x * y * z \u2264 1:= by\n  rintro h\u2080 h\u2081\n  simp only [Set.mem_Icc] at hx hy hz\n  have : 0 \u2264 x * y := by nlinarith\n  have : 0 \u2264 x * z := by nlinarith\n  have : 0 \u2264 y * z := by nlinarith\n  have : 0 \u2264 x * y * z := by nlinarith\n  nlinarith [Real.pi_pos, Real.pi_le_four]"
  ]
 },
 {
  "old": "(u : \u2115 \u2192 \u211d) (h : \u2200 n, u n > 0) (h' : Summable u) : (\u2200 n, 0 < n \u2192 Summable (\u03bb k => u k / (1 + u k))) \u2227 (\u2200 n, 0 < n \u2192 Summable (\u03bb k => u k / (1 + n * u k))) \u2227 (\u2200 n, 0 < n \u2192 Summable (\u03bb k => u k / (1 + n ^ 2 * u k))) := by",
  "new": "(x : \u2115 \u2192 \u211d) (hx: \u2200 n, x n > 0) (hx' : Summable x) : (\u2200 n, 0 < n \u2192 Summable (\u03bb k => x k / (1 + x k))) \u2227 (\u2200 n, 0 < n \u2192 Summable (\u03bb k => x k / (1 + n * x k))) \u2227 (\u2200 n, 0 < n \u2192 Summable (\u03bb k => x k / (1 + n ^ 2 * x k))) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (x : \u2115 \u2192 \u211d) (hx: \u2200 n, x n > 0) (hx' : Summable x) : (\u2200 n, 0 < n \u2192 Summable (\u03bb k => x k / (1 + x k))) \u2227 (\u2200 n, 0 < n \u2192 Summable (\u03bb k => x k / (1 + n * x k))) \u2227 (\u2200 n, 0 < n \u2192 Summable (\u03bb k => x k / (1 + n ^ 2 * x k)))  := by\n  have h\u2080 : Summable x := hx'\n  have h\u2081 : \u2200 n, 0 < n \u2192 Summable (\u03bb k => x k / (1 + x k)) := by\n    intro n hn\n    have h\u2082 : Summable (\u03bb k => x k / (1 + x k)) := by\n      apply hx'.of_nonneg_of_le\n      exact fun k => by\n        have h\u2083 : 0 < x k := hx k\n        positivity\n      exact fun k => by\n        have h\u2083 : 0 < x k := hx k\n        exact div_le_self (by positivity) (by linarith [h\u2083])\n    exact h\u2082\n  have h\u2082 : \u2200 n, 0 < n \u2192 Summable (\u03bb k => x k / (1 + n * x k)) := by\n    intro n hn\n    have h\u2083 : Summable (\u03bb k => x k / (1 + n * x k)) := by\n      apply hx'.of_nonneg_of_le\n      exact fun k => by\n        have h\u2084 : 0 < x k := hx k\n        positivity\n      exact fun k => by\n        have h\u2084 : 0 < x k := hx k\n        exact div_le_self (by positivity) (by\n          have h\u2085 : 0 < n * x k := by positivity\n          linarith [h\u2084, h\u2085])\n    exact h\u2083\n  have h\u2083 : \u2200 n, 0 < n \u2192 Summable (\u03bb k => x k / (1 + n ^ 2 * x k)) := by\n    intro n hn\n    have h\u2084 : Summable (\u03bb k => x k / (1 + n ^ 2 * x k)) := by\n      apply hx'.of_nonneg_of_le\n      exact fun k => by\n        have h\u2085 : 0 < x k := hx k\n        positivity\n      exact fun k => by\n        have h\u2085 : 0 < x k := hx k\n        exact div_le_self (by positivity) (by\n          have h\u2086 : 0 < n ^ 2 * x k := by positivity\n          linarith [h\u2085, h\u2086])\n    exact h\u2084\n  exact \u27e8h\u2081, h\u2082, h\u2083\u27e9\n  <;> simp [h\u2081, h\u2082, h\u2083]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (x : \u2115 \u2192 \u211d) (hx: \u2200 n, x n > 0) (hx' : Summable x) : (\u2200 n, 0 < n \u2192 Summable (\u03bb k => x k / (1 + x k))) \u2227 (\u2200 n, 0 < n \u2192 Summable (\u03bb k => x k / (1 + n * x k))) \u2227 (\u2200 n, 0 < n \u2192 Summable (\u03bb k => x k / (1 + n ^ 2 * x k)))  := by\n  have h1 : \u2200 n, 0 < n \u2192 Summable (\u03bb k => x k / (1 + x k)) := by\n    intro n hn\n    apply hx'.of_nonneg_of_le\n    \u00b7 intro k\n      exact div_nonneg (le_of_lt (hx k)) (by linarith [hx k])\n    \u00b7 intro k\n      exact div_le_self (le_of_lt (hx k)) (by linarith [hx k])\n  have h2 : \u2200 n, 0 < n \u2192 Summable (\u03bb k => x k / (1 + n * x k)) := by\n    intro n hn\n    apply hx'.of_nonneg_of_le\n    \u00b7 intro k\n      exact div_nonneg (le_of_lt (hx k)) (by nlinarith [hx k])\n    \u00b7 intro k\n      exact div_le_self (le_of_lt (hx k)) (by nlinarith [hx k])\n  have h3 : \u2200 n, 0 < n \u2192 Summable (\u03bb k => x k / (1 + n ^ 2 * x k)) := by\n    intro n hn\n    apply hx'.of_nonneg_of_le\n    \u00b7 intro k\n      exact div_nonneg (le_of_lt (hx k)) (by nlinarith [hx k])\n    \u00b7 intro k\n      exact div_le_self (le_of_lt (hx k)) (by nlinarith [hx k])\n  exact \u27e8h1, h2, h3\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (x : \u2115 \u2192 \u211d) (hx: \u2200 n, x n > 0) (hx' : Summable x) : (\u2200 n, 0 < n \u2192 Summable (\u03bb k => x k / (1 + x k))) \u2227 (\u2200 n, 0 < n \u2192 Summable (\u03bb k => x k / (1 + n * x k))) \u2227 (\u2200 n, 0 < n \u2192 Summable (\u03bb k => x k / (1 + n ^ 2 * x k)))  := by\n  have h1 : \u2200 n, 0 < n \u2192 Summable (\u03bb k => x k / (1 + x k)) := by\n    intro n hn\n    apply hx'.of_nonneg_of_le\n    \u00b7 intro k\n      exact div_nonneg (le_of_lt (hx k)) (by linarith [hx k])\n    \u00b7 intro k\n      rw [div_le_iff (by linarith [hx k])]\n      nlinarith [hx k]\n  have h2 : \u2200 n, 0 < n \u2192 Summable (\u03bb k => x k / (1 + n * x k)) := by\n    intro n hn\n    apply hx'.of_nonneg_of_le\n    \u00b7 intro k\n      exact div_nonneg (le_of_lt (hx k)) (by nlinarith [hx k])\n    \u00b7 intro k\n      rw [div_le_iff (by nlinarith [hx k])]\n      ring_nf\n      nlinarith [hx k]\n  have h3 : \u2200 n, 0 < n \u2192 Summable (\u03bb k => x k / (1 + n ^ 2 * x k)) := by\n    intro n hn\n    apply hx'.of_nonneg_of_le\n    \u00b7 intro k\n      exact div_nonneg (le_of_lt (hx k)) (by nlinarith [hx k])\n    \u00b7 intro k\n      rw [div_le_iff (by nlinarith [hx k])]\n      ring_nf\n      nlinarith [hx k]\n  exact \u27e8h1, h2, h3\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (x : \u2115 \u2192 \u211d) (hx: \u2200 n, x n > 0) (hx' : Summable x) : (\u2200 n, 0 < n \u2192 Summable (\u03bb k => x k / (1 + x k))) \u2227 (\u2200 n, 0 < n \u2192 Summable (\u03bb k => x k / (1 + n * x k))) \u2227 (\u2200 n, 0 < n \u2192 Summable (\u03bb k => x k / (1 + n ^ 2 * x k)))  := by\n  have h1 : \u2200 n, 0 < n \u2192 Summable (\u03bb k => x k / (1 + x k)) := by\n    intro n hn\n    apply hx'.of_nonneg_of_le\n    \u00b7 intro k\n      exact div_nonneg (hx k).le (by linarith [hx k])\n    \u00b7 intro k\n      exact div_le_self (hx k).le (by linarith [hx k])\n  have h2 : \u2200 n, 0 < n \u2192 Summable (\u03bb k => x k / (1 + n * x k)) := by\n    intro n hn\n    apply hx'.of_nonneg_of_le\n    \u00b7 intro k\n      exact div_nonneg (hx k).le (by nlinarith [hx k])\n    \u00b7 intro k\n      exact div_le_self (hx k).le (by nlinarith [hx k])\n  have h3 : \u2200 n, 0 < n \u2192 Summable (\u03bb k => x k / (1 + n ^ 2 * x k)) := by\n    intro n hn\n    apply hx'.of_nonneg_of_le\n    \u00b7 intro k\n      exact div_nonneg (hx k).le (by nlinarith [hx k])\n    \u00b7 intro k\n      exact div_le_self (hx k).le (by nlinarith [hx k])\n  exact \u27e8h1, h2, h3\u27e9"
  ]
 },
 {
  "old": ": \u00ac (\u2203 a b : \u2124, 2 * b ^ 2 + 3 \u2223 a ^ 2 - 2) := by",
  "new": "(x y : \u2115) (h : x ^ 2 + y ^ 2 \u2264 2 * x * y + 4) : Nat.Coprime x y \u2228 \u00acNat.Coprime x y := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2264 2 * x * y + 4) :\n     Nat.Coprime x y \u2228 \u00acNat.Coprime x y := by\n  by_cases h\u2080 : x.Coprime y\n  exact Or.inl h\u2080\n  exact Or.inr (by simpa using h\u2080)\n  <;> simp_all\n  <;> linarith\n  <;> simp_all only [Nat.coprime_iff_gcd_eq_one, not_true, not_false_iff,\n    and_true_iff, and_false_iff, true_and_iff, false_and_iff]\n  <;> aesop\n  <;> linarith\n  <;> simp_all only [Nat.coprime_iff_gcd_eq_one, not_true, not_false_iff,\n    and_true_iff, and_false_iff, true_and_iff, false_and_iff]\n  <;> aesop\n  <;> linarith\n  <;> simp_all only [Nat.coprime_iff_gcd_eq_one, not_true, not_false_iff,\n    and_true_iff, and_false_iff, true_and_iff, false_and_iff]\n  <;> aesop\n  <;> linarith\n  <;> simp_all only [Nat.coprime_iff_gcd_eq_one, not_true, not_false_iff,\n    and_true_iff, and_false_iff, true_and_iff, false_and_iff]\n  <;> aesop\n  <;> linarith\n  <;> simp_all only [Nat.coprime_iff_gcd_eq_one, not_true, not_false_iff,\n    and_true_iff, and_false_iff, true_and_iff, false_and_iff]\n  <;> aesop\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2264 2 * x * y + 4) :\n     Nat.Coprime x y \u2228 \u00acNat.Coprime x y := by\n  by_cases hx : Nat.Coprime x y\n  <;> simp [hx]\n  <;> omega\n  <;> simp [hx]\n  <;> omega\n  <;> simp [hx]\n  <;> omega\n  <;> simp [hx]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2264 2 * x * y + 4) :\n     Nat.Coprime x y \u2228 \u00acNat.Coprime x y := by apply em\n  <;> norm_num <;>\n    (try decide) <;>\n      (try decide) <;>\n        (try decide)"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : (a + b * c)^(1 / 3) + (b + c * a)^(1 / 3) + (c + a * b)^(1 / 3) \u2265 (2 * (a * b + b * c + c * a))^(1 / 3) := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : Real.sqrt (a^2 + 1) * Real.sqrt (b^2 + 1) * Real.sqrt (c^2 + 1) \u2265 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) :  Real.sqrt (a^2 + 1) * Real.sqrt (b^2 + 1) * Real.sqrt (c^2 + 1) \u2265 2:= by\n  have h\u2080 : Real.sqrt (a ^ 2 + 1) * Real.sqrt (b ^ 2 + 1) * Real.sqrt (c ^ 2 + 1) = Real.sqrt ((a ^ 2 + 1) * (b ^ 2 + 1) * (c ^ 2 + 1)) := by\n    rw [Real.sqrt_mul, Real.sqrt_mul]\n    all_goals positivity\n  rw [h\u2080]\n  apply Real.le_sqrt_of_sq_le\n  nlinarith [sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1),\n    mul_self_nonneg (a * b), mul_self_nonneg (b * c), mul_self_nonneg (a * c)]\n  all_goals positivity\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) :  Real.sqrt (a^2 + 1) * Real.sqrt (b^2 + 1) * Real.sqrt (c^2 + 1) \u2265 2:= by\n  have h : Real.sqrt (a^2 + 1) * Real.sqrt (b^2 + 1) * Real.sqrt (c^2 + 1) = Real.sqrt ((a^2 + 1) * (b^2 + 1) * (c^2 + 1)) := by\n    rw [Real.sqrt_mul, Real.sqrt_mul]\n    all_goals positivity\n  rw [h]\n  apply Real.le_sqrt_of_sq_le\n  nlinarith [sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1), mul_pos ha hb, mul_pos (mul_pos ha hb) hc]"
  ]
 },
 {
  "old": "(a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : 0 < a * b * c) (habc2 : a * b + b * c + c * a + a * b * c = 4) : a ^ 2 + b ^ 2 + c ^ 2 + 12 * (a + b + c) \u2265 37 + 2 * a * b * c := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a * b + a * c + b * c = 1 \u2192 a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b * c \u2265 a * b * (a + b) + b * c * (b + c) + c * a * (c + a):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a * b + a * c + b * c = 1 \u2192 a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b * c \u2265 a * b * (a + b) + b * c * (b + c) + c * a * (c + a):= by\n  rintro a b c \u27e8h\u2081, h\u2082, h\u2083, h\u2084\u27e9\n  cases' le_total a b with hab hab <;>\n  cases' le_total b c with hbc hbc <;>\n  cases' le_total c a with hac hac <;>\n  simp_all only [mul_add, add_mul, mul_comm, mul_left_comm, pow_two, pow_three] <;>\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_nonneg h\u2081 h\u2082, mul_nonneg h\u2082 h\u2083, mul_nonneg h\u2083 h\u2081]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a * b + a * c + b * c = 1 \u2192 a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b * c \u2265 a * b * (a + b) + b * c * (b + c) + c * a * (c + a):= by\n  intro a b c \u27e8ha, hb, hc, h\u27e9\n  simp only [mul_add, add_mul, mul_comm, mul_left_comm]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (a - c),\n    mul_nonneg ha hb, mul_nonneg hb hc, mul_nonneg ha hc,\n    mul_nonneg (sq_nonneg (a - b)) ha, mul_nonneg (sq_nonneg (b - c)) hb, mul_nonneg (sq_nonneg (a - c)) hc,\n    mul_nonneg (sq_nonneg (a - b)) hb, mul_nonneg (sq_nonneg (b - c)) hc, mul_nonneg (sq_nonneg (a - c)) ha,\n    mul_nonneg (sq_nonneg (b - c)) ha, mul_nonneg (sq_nonneg (a - c)) hb]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a + b + c) * (2 * (a * b + b * c + a * c) - (a ^ 2 + b ^ 2 + c ^ 2)) \u2264 9 * a * b * c := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a + b) * (b + c) * (c + a) * (a * b + b * c + c * a) \u2264 (a + b + c) * (a ^ 2 + b ^ 2 + c ^ 2) * (b * a + c * b + a * c):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a + b) * (b + c) * (c + a) * (a * b + b * c + c * a) \u2264 (a + b + c) * (a ^ 2 + b ^ 2 + c ^ 2) * (b * a + c * b + a * c):= by\n  have : 0 < a * b := by positivity\n  have : 0 < b * c := by positivity\n  have : 0 < c * a := by positivity\n  have : 0 < a * b + b * c + c * a := by positivity\n  have : 0 < a * b * (a + b) := by positivity\n  have : 0 < b * c * (b + c) := by positivity\n  have : 0 < c * a * (c + a) := by positivity\n  have : 0 < a * b * (a + b) * (b * c + c * a + a * b) := by positivity\n  have : 0 < b * c * (b + c) * (c * a + a * b + b * c) := by positivity\n  have : 0 < c * a * (c + a) * (a * b + b * c + c * a) := by positivity\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b + b * c + c * a), mul_self_nonneg (a * b - b * c),\n    mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : (a^(3/4) / (3 + a * b + a * c + b * c)) \u2265 (1 / 4) * (a * (2 + b + c) / (a + a * b + b + b * c + c + a * c)) := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : a / (3 + a * b + a * c + b * c) + b / (3 + a * b + a * c + b * c) + c / (3 + a * b + a * c + b * c) \u2264 9 / (3 + a * b + a * c + b * c) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : a / (3 + a * b + a * c + b * c) + b / (3 + a * b + a * c + b * c) + c / (3 + a * b + a * c + b * c) \u2264 9 / (3 + a * b + a * c + b * c)  := by\n  rw [add_assoc] at hab\n  rw [add_assoc]\n  apply le_of_sub_nonneg\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : a / (3 + a * b + a * c + b * c) + b / (3 + a * b + a * c + b * c) + c / (3 + a * b + a * c + b * c) \u2264 9 / (3 + a * b + a * c + b * c)  := by\n  have : 0 < 3 + a * b + a * c + b * c := by positivity\n  field_simp [hab]\n  apply le_of_sub_nonneg\n  field_simp [hab]\n  ring_nf\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : a / (3 + a * b + a * c + b * c) + b / (3 + a * b + a * c + b * c) + c / (3 + a * b + a * c + b * c) \u2264 9 / (3 + a * b + a * c + b * c)  := by\n  have : 3 + a * b + a * c + b * c > 0 := by nlinarith\n  field_simp [this]\n  rw [div_le_div_iff]\n  nlinarith\n  nlinarith\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : a / (3 + a * b + a * c + b * c) + b / (3 + a * b + a * c + b * c) + c / (3 + a * b + a * c + b * c) \u2264 9 / (3 + a * b + a * c + b * c)  := by\n  ring_nf\n  apply le_of_sub_nonneg\n  field_simp [hab, ha.ne', hb.ne', hc.ne']\n  ring_nf\n  positivity"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hd : 0 \u2264 d) : (3 / 16) * (a + b + c + d) ^ 4 \u2265 (ab + bc + cd + ad + ac + bd) ^ 2 + ab * (a ^ 2 + b ^ 2) + cb * (b ^ 2 + c ^ 2) + dc * (d ^ 2 + c ^ 2) + ad * (a ^ 2 + d ^ 2) + ca * (c ^ 2 + a ^ 2) + db * (d ^ 2 + b ^ 2) := by",
  "new": ": \u2200 a b c d : \u211d, 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 0 \u2264 d \u2192 (3 / 16) * (a + b + c + d) ^ 4 \u2265 (a * b + b * c + c * d + d * a) ^ 2 + a * b * (a * b) + b * c * (b * c) + c * d * (c * d) + d * a * (d * a):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 0 \u2264 d \u2192\n   (3 / 16) * (a + b + c + d) ^ 4 \u2265 (a * b + b * c + c * d + d * a) ^ 2 + a * b * (a * b) + b * c * (b * c) + c * d * (c * d) + d * a * (d * a):= by\n  rintro a b c d \u27e8h\u2081, h\u2082, h\u2083, h\u2084\u27e9\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - d), sq_nonneg (d - a),\n    mul_nonneg h\u2081 h\u2082, mul_nonneg h\u2082 h\u2083, mul_nonneg h\u2083 h\u2084, mul_nonneg h\u2084 h\u2081,\n    mul_nonneg (sq_nonneg a) h\u2081, mul_nonneg (sq_nonneg b) h\u2082, mul_nonneg (sq_nonneg c) h\u2083,\n    mul_nonneg (sq_nonneg d) h\u2084]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 0 \u2264 d \u2192\n   (3 / 16) * (a + b + c + d) ^ 4 \u2265 (a * b + b * c + c * d + d * a) ^ 2 + a * b * (a * b) + b * c * (b * c) + c * d * (c * d) + d * a * (d * a):= by\n  intro a b c d h\u2081\n  simp only [sq, add_assoc]\n  nlinarith [sq_nonneg (a + b + c + d),\n    sq_nonneg (a - b + c - d),\n    sq_nonneg (a - b - c + d),\n    sq_nonneg (a + b - c - d),\n    mul_nonneg h\u2081.1 h\u2081.2.1, mul_nonneg h\u2081.2.1 h\u2081.2.2.1, mul_nonneg h\u2081.2.2.1 h\u2081.2.2.2, mul_nonneg h\u2081.1 h\u2081.2.2.2]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 0 \u2264 d \u2192\n   (3 / 16) * (a + b + c + d) ^ 4 \u2265 (a * b + b * c + c * d + d * a) ^ 2 + a * b * (a * b) + b * c * (b * c) + c * d * (c * d) + d * a * (d * a):= by\n  rintro a b c d \u27e8ha, hb, hc, hd\u27e9\n  nlinarith [sq_nonneg (a - b + c - d), sq_nonneg (a - b - c + d),\n    mul_nonneg ha hb, mul_nonneg ha hc, mul_nonneg ha hd, mul_nonneg hb hc, mul_nonneg hb hd,\n    mul_nonneg hc hd, mul_nonneg (mul_nonneg ha hb) ha, mul_nonneg (mul_nonneg hb hc) hb,\n    mul_nonneg (mul_nonneg hc hd) hc, mul_nonneg (mul_nonneg hd ha) hd]\n  <;> assumption\n  <;> linarith"
  ]
 },
 {
  "old": ": \u00ac \u2203 (a b : \u2124), (a : \u211a) / b = (Real.sqrt 3 - Real.sqrt 2) := by",
  "new": "(x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac (Nat.Coprime x y) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac (Nat.Coprime x y) := by\n  by_cases h : Nat.Coprime x y <;> simp [h]\n  <;> tauto",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac (Nat.Coprime x y) := by\n  apply or_iff_not_imp_right.2\n  intro h\n  simp_all [Nat.coprime_iff_gcd_eq_one, Nat.gcd_eq_zero_iff]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac (Nat.Coprime x y) := by\n  have h : (Nat.Coprime x y) \u2228 \u00ac (Nat.Coprime x y) := by apply em\n  exact h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac (Nat.Coprime x y) := by\n  apply by_cases\n  intro h\n  apply Or.inl\n  exact h\n  intro h\n  apply Or.inr\n  exact h"
  ]
 },
 {
  "old": "(n : \u2115) : n = 10 \u2192 Nat.lcm (n^2 + n) (n^2 + 3*n) = 60 := by",
  "new": "(n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime n (n - 1) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_of_ge_2 (n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime n (n - 1) := by\n  rw [Nat.coprime_iff_gcd_eq_one]\n  norm_num\n  rcases n with (_ | _ | n) <;> simp_all [Nat.gcd_eq_left]\n  all_goals\n    omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_of_ge_2 (n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime n (n - 1) := by\n  cases' n with n\n  exfalso\n  linarith\n  cases' n with n\n  exfalso\n  linarith\n  simp [Nat.coprime_iff_gcd_eq_one, Nat.gcd_eq_right]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_of_ge_2 (n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime n (n - 1) := by\n  rw [Nat.coprime_iff_gcd_eq_one]\n  cases n with\n  | zero => contradiction\n  | succ k =>\n    cases k with\n    | zero => simp [Nat.gcd_zero_right]\n    | succ k =>\n      simp_all [Nat.gcd_comm, Nat.gcd_mul_left, Nat.gcd_one_left]\n  <;> simp_all [Nat.gcd_comm, Nat.gcd_mul_left, Nat.gcd_one_left]\n  <;> decide\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_of_ge_2 (n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime n (n - 1) := by\n  cases' n with n\n  exfalso\n  linarith\n  cases' n with n\n  exfalso\n  linarith\n  simp [Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm]\n"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : 2 * (1 + a^2) * (1 + b^2) * (1 + c^2) \u2265 (1 + a) * (1 + b) * (1 + c) * (1 + a * b * c) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x^2 + y^2 + z^2 + 2 * (x * y + y * z + z * x)) * (1 + (x^2 + y^2 + z^2) * (x * y + y * z + z * x)) \u2265 (x + y + z)^2 * (x * y + y * z + z * x):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   (x^2 + y^2 + z^2 + 2 * (x * y + y * z + z * x)) * (1 + (x^2 + y^2 + z^2) * (x * y + y * z + z * x)) \u2265 (x + y + z)^2 * (x * y + y * z + z * x):= by\n  have : (x^2 + y^2 + z^2) * (x * y + y * z + z * x) \u2265 0 := by positivity\n  have : 2 * (x * y + y * z + z * x) \u2265 0 := by positivity\n  nlinarith [pow_two_nonneg (x + y + z), mul_self_nonneg (x - y), mul_self_nonneg (x - z), mul_self_nonneg (y - z),\n    mul_self_nonneg (x * y + y * z + z * x)]"
  ]
 },
 {
  "old": "(n : \u2115) (hn : n > 0) : \u2203 S : Finset \u2115, S.card = n \u2227 \u2200 x \u2208 S, \u2200 y \u2208 S, x \u2260 y \u2192 \u00ac Nat.Coprime x y := by",
  "new": "(a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b) := by\n  apply em\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b) := by\n  by_cases h : Nat.Coprime a b\n  <;> simp [h]\n  <;> tauto\n  <;> tauto\n  <;> tauto",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b) := by\n  apply em\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto"
  ]
 },
 {
  "old": "(x y : \u2115) : (x = 0 \u2228 0 < x) \u2227 (y = 0 \u2228 0 < y) := by",
  "new": "(x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y) := by\n  by_cases h : x.Coprime y <;> simp [h]\n  <;> simp [Nat.coprime_iff_gcd_eq_one, h] at h \u22a2\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y) := by\n  by_cases h : x.Coprime y <;> simp [h]\n  <;> simp [Nat.coprime_iff_gcd_eq_one, h]\n  <;> omega\n  <;> simp [Nat.coprime_iff_gcd_eq_one, h]\n  <;> omega\n  <;> simp [Nat.coprime_iff_gcd_eq_one, h]\n  <;> omega\n  <;> simp [Nat.coprime_iff_gcd_eq_one, h]\n  <;> omega\n  <;> simp [Nat.coprime_iff_gcd_eq_one, h]\n  <;> omega\n  <;> simp [Nat.coprime_iff_gcd_eq_one, h]\n  <;> omega\n  <;> simp [Nat.coprime_iff_gcd_eq_one, h]\n  <;> omega\n  <;> simp [Nat.coprime_iff_gcd_eq_one, h]\n  <;> omega"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) : 1 / a ^ 2 + 1 / b ^ 2 + 1 / c ^ 2 \u2265 1 + 2 * (a / b + b / c + c / a - 1) * (b / a + c / b + a / c - 1) := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 1 \u2192 a * b + b * c + c * a \u2264 a ^ 2 + b ^ 2 + c ^ 2 + 2 * a * b * c * (1 / a + 1 / b + 1 / c) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 1 \u2192  a * b + b * c + c * a \u2264\n    a ^ 2 + b ^ 2 + c ^ 2 + 2 * a * b * c * (1 / a + 1 / b + 1 / c)     := by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have h\u2080 : a * b + b * c + c * a \u2264 a ^ 2 + b ^ 2 + c ^ 2 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_nonneg ha hb, mul_nonneg hb hc, mul_nonneg hc ha]\n  have h\u2081 : 0 \u2264 a * b * c * (1 / a + 1 / b + 1 / c) := by\n    refine' mul_nonneg (mul_nonneg (mul_nonneg ha hb) hc) (by positivity)\n  nlinarith\n  <;> simp [ha, hb, hc, habc]\n  <;> nlinarith\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 1 \u2192  a * b + b * c + c * a \u2264\n    a ^ 2 + b ^ 2 + c ^ 2 + 2 * a * b * c * (1 / a + 1 / b + 1 / c)     := by\n  rintro a b c \u27e8a0, b0, c0, abc1\u27e9\n  have : 0 \u2264 a * b * c := by positivity\n  have : 0 \u2264 a ^ 2 + b ^ 2 + c ^ 2 := by positivity\n  have : 0 \u2264 a * b * c * (1 / a + 1 / b + 1 / c) := by positivity\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> linarith\n  <;> assumption\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 1 \u2192  a * b + b * c + c * a \u2264\n    a ^ 2 + b ^ 2 + c ^ 2 + 2 * a * b * c * (1 / a + 1 / b + 1 / c)     := by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have h\u2081 : 0 \u2264 a * b := by nlinarith\n  have h\u2082 : 0 \u2264 b * c := by nlinarith\n  have h\u2083 : 0 \u2264 c * a := by nlinarith\n  have h\u2084 : 0 \u2264 a * b * c := by nlinarith\n  have h\u2085 : 0 \u2264 a * b * c * (1 / a + 1 / b + 1 / c) := by positivity\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]"
  ]
 },
 {
  "old": "(x : \u211d) (hx : 0 < x) : Real.logb 2 x = Real.logb 4 x^2 \u2227 Real.logb 4 x^2 = 2 * Real.logb 4 x := by",
  "new": "(x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x < y) : Real.logb 4 (x / y) < 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_div_base_lt_one (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x < y) :\n      Real.logb 4 (x / y) < 1:= by\n  have : 0 < x / y := div_pos hx hy\n  have : Real.logb 4 (x / y) < 1 := Real.logb_lt_iff_lt_rpow (by norm_num) (by positivity) |>.mpr\n    (by\n      rw [div_eq_mul_inv]\n      rw [\u2190 sub_pos]\n      field_simp\n      nlinarith\n      )\n  exact this",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_div_base_lt_one (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x < y) :\n      Real.logb 4 (x / y) < 1:= by\n  apply (logb_lt_iff_lt_rpow (by norm_num) (by positivity)).mpr\n  rw [div_lt_iff hy]\n  nlinarith"
  ]
 },
 {
  "old": "{n : \u2115} (A B : Matrix (Fin n) (Fin n) \u2102) (h\u2081 : (A + B) ^ 2 = A ^ 2 + B ^ 2) (h\u2082 : (A + B) ^ 4 = A ^ 4 + B ^ 4) : (A * B) ^ 2 = 0 := by",
  "new": "(h\u2081 : (A + B) ^ 2 = A ^ 2 + B ^ 2) (h\u2082 : (A + B) ^ 4 = A ^ 4 + B ^ 4) : (A * B) ^ 2 = 0 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem matpow_add_pow_eq_zero (h\u2081 : (A + B) ^ 2 = A ^ 2 + B ^ 2) (h\u2082 : (A + B) ^ 4 = A ^ 4 + B ^ 4) :\n      (A * B) ^ 2 = 0 := by\n  rw [pow_two] at *\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem matpow_add_pow_eq_zero (h\u2081 : (A + B) ^ 2 = A ^ 2 + B ^ 2) (h\u2082 : (A + B) ^ 4 = A ^ 4 + B ^ 4) :\n      (A * B) ^ 2 = 0 := by\n  have h\u2083 : (A + B) ^ 2 = A ^ 2 + B ^ 2 := h\u2081\n  simp [pow_two, add_mul, mul_add, add_assoc, add_left_comm, add_comm] at h\u2083\n  have h\u2084 : (A + B) ^ 4 = A ^ 4 + B ^ 4 := h\u2082\n  simp [pow_succ, mul_add, add_mul, mul_comm, mul_left_comm, mul_assoc] at h\u2084\n  nlinarith\n  <;> linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem matpow_add_pow_eq_zero (h\u2081 : (A + B) ^ 2 = A ^ 2 + B ^ 2) (h\u2082 : (A + B) ^ 4 = A ^ 4 + B ^ 4) :\n      (A * B) ^ 2 = 0 := by\n  have h\u2083 := congr_arg (\u00b7 ^ 2) h\u2081\n  have h\u2084 := congr_arg (\u00b7 ^ 2) h\u2082\n  simp only [pow_two] at h\u2083 h\u2084\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem matpow_add_pow_eq_zero (h\u2081 : (A + B) ^ 2 = A ^ 2 + B ^ 2) (h\u2082 : (A + B) ^ 4 = A ^ 4 + B ^ 4) :\n      (A * B) ^ 2 = 0 := by\n  have h\u2083 : (A + B) ^ 2 = A ^ 2 + B ^ 2 := by assumption\n  simp_all only [pow_two]\n  nlinarith\n  <;> linarith\n  <;> nlinarith\n  <;> linarith\n  <;> nlinarith\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2081 : a \u2260 b) (h\u2082 : b \u2260 c) (h\u2083 : c \u2260 a) (h\u2084 : a + b + c = 1) : 6 \u2264 (b + c) / a + (c + a) / b + (a + b) / c \u2194 4 \u2264 (b + c) * (c + a) * (a + b) / (a * b * c) := by",
  "new": "(x y z : \u211d) (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2081 : x \u2260 y) (h\u2082 : y \u2260 z) (h\u2083 : z \u2260 x) (h\u2084 : x + y + z = 1) : 4 / (x * y * z) \u2265 40 \u2194 4 / (x * y) + 4 / (y * z) + 4 / (z * x) \u2265 40:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d)\n    (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z)\n    (h\u2081 : x \u2260 y)\n    (h\u2082 : y \u2260 z)\n    (h\u2083 : z \u2260 x)\n    (h\u2084 : x + y + z = 1) :\n    4 / (x * y * z) \u2265 40 \u2194 4 / (x * y) + 4 / (y * z) + 4 / (z * x) \u2265 40:= by\n  have h\u2085 : 0 < x := by linarith\n  have h\u2086 : 0 < y := by linarith\n  have h\u2087 : 0 < z := by linarith\n  have h\u2088 : 0 < x * y := by positivity\n  have h\u2089 : 0 < y * z := by positivity\n  have h\u2081\u2080 : 0 < z * x := by positivity\n  have h\u2081\u2081 : 0 < x * y * z := by positivity\n  constructor <;> intro h\n  all_goals\n    field_simp at h \u22a2\n    rw [le_div_iff (by positivity)] at *\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d)\n    (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z)\n    (h\u2081 : x \u2260 y)\n    (h\u2082 : y \u2260 z)\n    (h\u2083 : z \u2260 x)\n    (h\u2084 : x + y + z = 1) :\n    4 / (x * y * z) \u2265 40 \u2194 4 / (x * y) + 4 / (y * z) + 4 / (z * x) \u2265 40:= by\n  have h\u2085 : 0 < x := by linarith\n  have h\u2086 : 0 < y := by linarith\n  have h\u2087 : 0 < z := by linarith\n  have h\u2088 : 0 < x * y := by positivity\n  have h\u2089 : 0 < y * z := by positivity\n  have h\u2081\u2080 : 0 < z * x := by positivity\n  have h\u2081\u2081 : 0 < x * y * z := by positivity\n  constructor\n  intro h\n  field_simp [h\u2081\u2081] at h \u22a2\n  rw [le_div_iff (by positivity)] at *\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  intro h\n  field_simp [h\u2081\u2081] at h \u22a2\n  rw [le_div_iff (by positivity)] at *\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d)\n    (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z)\n    (h\u2081 : x \u2260 y)\n    (h\u2082 : y \u2260 z)\n    (h\u2083 : z \u2260 x)\n    (h\u2084 : x + y + z = 1) :\n    4 / (x * y * z) \u2265 40 \u2194 4 / (x * y) + 4 / (y * z) + 4 / (z * x) \u2265 40:= by\n  have h\u2085 : 0 < x * y := by\n    nlinarith\n  have h\u2086 : 0 < y * z := by\n    nlinarith\n  have h\u2087 : 0 < z * x := by\n    nlinarith\n  have h\u2088 : 0 < x * y * z := by\n    nlinarith\n  constructor <;> intro h <;>\n    field_simp [h\u2085, h\u2086, h\u2087, h\u2088] at h \u22a2 <;>\n    rw [le_div_iff (by positivity)] at * <;>\n    nlinarith"
  ]
 },
 {
  "old": "(A B C : \u211d) : (tan A + tan B + tan C) / (tan (A / 2) ^ 2 + tan (B / 2) ^ 2 + tan (C / 2) ^ 2) \u2265 1 / (tan (A / 2) * tan (B / 2) * tan (C / 2)) := by",
  "new": ": Real.sqrt (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) \u2264 1 + a ^ 2 + b ^ 2 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) \u2264 1 + a ^ 2 + b ^ 2 := by\n  have h\u2081 : Real.sqrt (1 + a ^ 2) \u2265 0 := Real.sqrt_nonneg (1 + a ^ 2)\n  have h\u2082 : Real.sqrt (1 + b ^ 2) \u2265 0 := Real.sqrt_nonneg (1 + b ^ 2)\n  have h\u2083 : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) \u2265 0 := mul_nonneg h\u2081 h\u2082\n  have h\u2084 : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) \u2264 (1 + a ^ 2 + b ^ 2) := by\n    nlinarith [sq_sqrt (show (0 : \u211d) \u2264 1 + a ^ 2 from by nlinarith),\n      sq_sqrt (show (0 : \u211d) \u2264 1 + b ^ 2 from by nlinarith),\n      sq_nonneg (a ^ 2 + b ^ 2 - 1)]\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  \u00b7 nlinarith\n  \u00b7 nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) \u2264 1 + a ^ 2 + b ^ 2 := by\n  have h\u2080 : Real.sqrt (1 + a ^ 2) \u2265 0 := Real.sqrt_nonneg (1 + a ^ 2)\n  have h\u2081 : Real.sqrt (1 + b ^ 2) \u2265 0 := Real.sqrt_nonneg (1 + b ^ 2)\n  have h\u2082 : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) \u2264 (1 + a ^ 2 + 1 + b ^ 2) / 2 := by\n    nlinarith [sq_sqrt (show 0 \u2264 1 + a ^ 2 from by positivity),\n      sq_sqrt (show 0 \u2264 1 + b ^ 2 from by positivity),\n      sq_nonneg (a - b),\n      sq_nonneg (a + b),\n      sq_nonneg (1 + a ^ 2 - 1 - b ^ 2)]\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  \u00b7 positivity\n  \u00b7 nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) \u2264 1 + a ^ 2 + b ^ 2 := by\n  have h\u2080 : 0 \u2264 Real.sqrt (1 + a ^ 2) := Real.sqrt_nonneg _\n  have h\u2081 : 0 \u2264 Real.sqrt (1 + b ^ 2) := Real.sqrt_nonneg _\n  have h\u2082 : 0 \u2264 Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) := mul_nonneg h\u2080 h\u2081\n  have h\u2083 : 0 \u2264 1 + a ^ 2 + b ^ 2 := by nlinarith\n  have h\u2084 : 0 \u2264 Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) := by positivity\n  have h\u2085 : 0 \u2264 1 + a ^ 2 + b ^ 2 + 1 := by nlinarith\n  have h\u2086 : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) \u2264 (1 + a ^ 2 + b ^ 2) ^ 2 := by\n    nlinarith [sq_sqrt (show (0 : \u211d) \u2264 1 + a ^ 2 from by positivity),\n      sq_sqrt (show (0 : \u211d) \u2264 1 + b ^ 2 from by positivity),\n      sq_nonneg (a * b), sq_nonneg (Real.sqrt (1 + a ^ 2) - Real.sqrt (1 + b ^ 2))]\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  \u00b7 nlinarith\n  \u00b7 nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : (a + b) * (b + c) * (c + a) * (a ^ 3 + b ^ 3 + c ^ 3 - 1 / 2) \u2264 1 / 48 := by",
  "new": "(x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 1) : x * y * z * (x ^ 3 + y ^ 3 + z ^ 3 - 1 / 2) \u2264 1 / 48:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 1) :\n     x * y * z * (x ^ 3 + y ^ 3 + z ^ 3 - 1 / 2) \u2264 1 / 48:= by\n  have h\u2081 : (x + y + z) ^ 2 = 1 := by simp [h]\n  have h\u2082 : 0 \u2264 x * y := by positivity\n  have h\u2083 : 0 \u2264 y * z := by positivity\n  have h\u2084 : 0 \u2264 z * x := by positivity\n  have h\u2085 : 0 \u2264 x * y * z := by positivity\n  have h\u2086 : x ^ 3 + y ^ 3 + z ^ 3 - 1 / 2 \u2264 1 / 2 := by\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]"
  ]
 },
 {
  "old": "(n : \u2115) (a b : \u2115 \u2192 \u211d) (ha : \u2200 i, a i \u2260 0) : (\u2211 i in Finset.range n, b i) * (\u2211 i in Finset.range n, (1 / (a i) ^ 2) / b i) \u2265 \u2211 i in Finset.range n, 1 / a i := by",
  "new": "(x y : \u2115 \u2192 \u211d) (n : \u2115) (hx : \u2200 i, x i > 0) (hy : \u2200 i, y i > 0) : (\u2211 i in Finset.range n, x i * y i) / (\u2211 i in Finset.range n, x i) \u2264 \u2211 i in Finset.range n, y i:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u2115 \u2192 \u211d) (n : \u2115) (hx : \u2200 i, x i > 0) (hy : \u2200 i, y i > 0) :\n     (\u2211 i in Finset.range n, x i * y i) / (\u2211 i in Finset.range n, x i) \u2264 \u2211 i in Finset.range n, y i:= by\n  have h1 : (\u2211 i in Finset.range n, x i * y i) \u2264 (\u2211 i in Finset.range n, x i) * (\u2211 i in Finset.range n, y i) := by\n    have h2 : \u2200 i \u2208 Finset.range n, x i * y i \u2264 x i * \u2211 j in Finset.range n, y j := by\n      intro i hi\n      exact mul_le_mul_of_nonneg_left (Finset.single_le_sum (fun j hj => le_of_lt (hy j)) hi) (le_of_lt (hx i))\n    exact\n      calc\n        (\u2211 i in Finset.range n, x i * y i) \u2264 \u2211 i in Finset.range n, x i * \u2211 j in Finset.range n, y j :=\n          Finset.sum_le_sum h2\n        _ = (\u2211 i in Finset.range n, x i) * (\u2211 i in Finset.range n, y i) := by simp [Finset.sum_mul]\n  exact div_le_of_nonneg_of_le_mul (Finset.sum_nonneg fun i hi => le_of_lt (hx i)) (Finset.sum_nonneg fun i hi => le_of_lt (hy i)) (by linarith)\n  <;> simp [hx, hy]\n  <;> linarith"
  ]
 },
 {
  "old": "(n : \u2124) (hn : abs n > 2) : (2 * n ^ 2 + n - 2) ^ 2 < 4 * (n ^ 4 + n ^ 3 + 1) \u2227 4 * (n ^ 4 + n ^ 3 + 1) < (2 * n ^ 2 + n) ^ 2 := by",
  "new": "(i : \u2115) (hi : \u2203 j, 0 < j \u2227 j < i \u2227 2 * i * j = 1) : i.Coprime (i + 1) \u2228 i = i + 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : \u2203 j, 0 < j \u2227 j < i \u2227 2 * i * j = 1) : i.Coprime (i + 1) \u2228 i = i + 1:= by\n  rcases hi with \u27e8j, hj\u2080, hj\u2081, hj\u2082\u27e9\n  ring_nf at hj\u2082\n  contrapose! hj\u2082\n  aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : \u2203 j, 0 < j \u2227 j < i \u2227 2 * i * j = 1) : i.Coprime (i + 1) \u2228 i = i + 1:= by\n  rcases hi with \u27e8j, hj0, hj_lt_i, hj_eq\u27e9\n  cases' Nat.eq_zero_or_pos i with hi_eq_zero hi_pos\n  all_goals simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  all_goals omega\n  all_goals omega\n  all_goals omega\n  all_goals omega\n  all_goals omega\n  all_goals omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : \u2203 j, 0 < j \u2227 j < i \u2227 2 * i * j = 1) : i.Coprime (i + 1) \u2228 i = i + 1:= by\n  rcases hi with \u27e8j, hj\u2080, hj\u2081, hj\u2082\u27e9\n  rcases i with (_ | _ | i) <;> simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;> omega"
  ]
 },
 {
  "old": "(p : \u2115) (hp : p.Prime) (A : Matrix (Fin p) (Fin p) \u211d) (hA : A * A.transpose = 1) (hA' : A.trace = 0) : |(A^p).trace| = p := by",
  "new": "(A : Matrix (Fin 2) (Fin 2) \u211d) (hA : A * A.transpose = 1) : A.det ^ 2 = 1 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mat_det_one (A : Matrix (Fin 2) (Fin 2) \u211d) (hA : A * A.transpose = 1) : A.det ^ 2 = 1 := by\n  have : A.det ^ 2 = 1 := by\n    have : A.det * A.det = 1 := by\n      have : A.det * A.det = (A * A.transpose).det := by\n        simp [Matrix.det_mul, Matrix.det_transpose]\n      simp_all\n    nlinarith\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mat_det_one (A : Matrix (Fin 2) (Fin 2) \u211d) (hA : A * A.transpose = 1) : A.det ^ 2 = 1 := by\n  have h := congr_arg (fun B : Matrix (Fin 2) (Fin 2) \u211d => B.det) hA\n  simp only [Matrix.det_mul, Matrix.det_transpose, mul_comm] at h\n  ring_nf at h\n  simpa using h\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mat_det_one (A : Matrix (Fin 2) (Fin 2) \u211d) (hA : A * A.transpose = 1) : A.det ^ 2 = 1 := by\n  have hA' : A.det * A.det = 1 := by\n    have : A.det * A.det = (A * A.transpose).det := by\n      simp [Matrix.det_mul, Matrix.det_transpose]\n    simp_all\n  nlinarith\n  <;> simp [hA']\n  <;> nlinarith"
  ]
 },
 {
  "old": "(a b : \u211d) (ha : 0 < a) (hb : 0 < b) : (2 * a / (a + b) + b / (2 * a)) \u2265 1 / 2 * ((a - b) / (a + b)) ^ 2 := by",
  "new": "(a b : \u211d) (ha : 0 < a) (hb : 0 < b) (hab : a \u2260 b) (hab_mul : a * b \u2264 1) : (2 * a * b) / (a ^ 2 + b ^ 2) + (a - b) ^ 2 / (a ^ 2 + b ^ 2) \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_aux1 (a b : \u211d) (ha : 0 < a) (hb : 0 < b) (hab : a \u2260 b) (hab_mul : a * b \u2264 1) : \n  (2 * a * b) / (a ^ 2 + b ^ 2) + (a - b) ^ 2 / (a ^ 2 + b ^ 2) \u2264 1:= by\n  field_simp [add_comm]\n  rw [div_le_iff (by nlinarith : 0 < a ^ 2 + b ^ 2)]\n  nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (a + b), mul_self_nonneg (a - b - 2 * a * b),\n    mul_self_nonneg (a - b + 2 * a * b)]\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_aux1 (a b : \u211d) (ha : 0 < a) (hb : 0 < b) (hab : a \u2260 b) (hab_mul : a * b \u2264 1) : \n  (2 * a * b) / (a ^ 2 + b ^ 2) + (a - b) ^ 2 / (a ^ 2 + b ^ 2) \u2264 1:= by\n  rw [add_comm]\n  apply le_of_sub_nonneg\n  field_simp [hab]\n  ring_nf\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_aux1 (a b : \u211d) (ha : 0 < a) (hb : 0 < b) (hab : a \u2260 b) (hab_mul : a * b \u2264 1) : \n  (2 * a * b) / (a ^ 2 + b ^ 2) + (a - b) ^ 2 / (a ^ 2 + b ^ 2) \u2264 1:= by\n  have h\u2081 : 0 < a ^ 2 + b ^ 2 := add_pos (sq_pos_of_pos ha) (sq_pos_of_pos hb)\n  field_simp [h\u2081]\n  rw [div_le_iff h\u2081]\n  nlinarith [mul_self_nonneg (a - b), sq_pos_of_ne_zero (sub_ne_zero.mpr hab)]"
  ]
 },
 {
  "old": "(l : \u2115) (l_odd : Odd l) (l_gt3 : l > 3) (p : \u2115) (hp : p.Prime) (h : p \u2223 (l! + 1)) : p \u2265 l + 2 := by",
  "new": "(l : \u2115) (l_odd : Odd l) (l_gt3 : l > 3) (p : \u2115) (hp : p.Prime) (h : p \u2223 (l! + 1)) : Nat.Coprime p (l!) \u2228 p \u2223 l!:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (l : \u2115) (l_odd : Odd l) (l_gt3 : l > 3) (p : \u2115) (hp : p.Prime) (h : p \u2223 (l! + 1)) : \n  Nat.Coprime p (l!) \u2228 p \u2223 l!:= by\n  rw [Nat.Prime.coprime_iff_not_dvd hp]\n  simp_all [Nat.dvd_factorial]\n  <;> omega\n  <;> simp_all\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (l : \u2115) (l_odd : Odd l) (l_gt3 : l > 3) (p : \u2115) (hp : p.Prime) (h : p \u2223 (l! + 1)) : \n  Nat.Coprime p (l!) \u2228 p \u2223 l!:= by\n  have : p.Coprime (l!) \u2228 p \u2223 l! := by\n    apply or_iff_not_imp_right.mpr\n    intro h'\n    exact hp.coprime_iff_not_dvd.mpr (by simp_all)\n  simpa [Nat.coprime_comm] using this"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 1 < x) (hy : 1 < y) (hz : 1 < z) : (Real.logb x ((x + y) / 2) * Real.logb y ((y + z) / 2) * Real.logb z ((z + x) / 2)) \u2265 1 := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) : Real.log (a / (a + b + c)) + Real.log (b / (a + b + c)) + Real.log (c / (a + b + c)) \u2264 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_amgm_three (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) :\n     Real.log (a / (a + b + c)) + Real.log (b / (a + b + c)) + Real.log (c / (a + b + c)) \u2264 0:= by\n  have : a / (a + b + c) = a / 1 := by rw [hab]\n  have : b / (a + b + c) = b / 1 := by rw [hab]\n  have : c / (a + b + c) = c / 1 := by rw [hab]\n  simp_all\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c), Real.log_le_sub_one_of_pos ha,\n    Real.log_le_sub_one_of_pos hb, Real.log_le_sub_one_of_pos hc]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_amgm_three (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) :\n     Real.log (a / (a + b + c)) + Real.log (b / (a + b + c)) + Real.log (c / (a + b + c)) \u2264 0:= by\n  have : a + b + c = 1 := hab\n  rw [show a / (a + b + c) = a / 1 by rw [this]]\n  rw [show b / (a + b + c) = b / 1 by rw [this]]\n  rw [show c / (a + b + c) = c / 1 by rw [this]]\n  simp only [div_one, Real.log_one, add_zero, zero_add]\n  nlinarith [Real.log_le_sub_one_of_pos ha,\n    Real.log_le_sub_one_of_pos hb,\n    Real.log_le_sub_one_of_pos hc]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_amgm_three (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) :\n     Real.log (a / (a + b + c)) + Real.log (b / (a + b + c)) + Real.log (c / (a + b + c)) \u2264 0:= by\n  rw [hab]\n  simp_all only [div_one, Real.log_one, add_zero, zero_add, mul_one]\n  nlinarith [Real.log_le_sub_one_of_pos ha,\n    Real.log_le_sub_one_of_pos hb,\n    Real.log_le_sub_one_of_pos hc]\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : (a^3 * (a + b) / (a^2 + b^2) + b^3 * (b + c) / (b^2 + c^2) + c^3 * (c + a) / (c^2 + a^2)) \u2265 a^2 + b^2 + c^2 := by",
  "new": "(a b c : \u211d) (hab : a > 0 \u2227 b > 0 \u2227 c > 0) (h : a + b + c = 1) : a^2 / (b + c)^2 + b^2 / (c + a)^2 + c^2 / (a + b)^2 \u2265 3 / 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_10_2 (a b c : \u211d) (hab : a > 0 \u2227 b > 0 \u2227 c > 0) (h : a + b + c = 1) :  a^2 / (b + c)^2 + b^2 / (c + a)^2 + c^2 / (a + b)^2 \u2265 3 / 4:= by\n  rcases hab with \u27e8hab1, hab2, hab3\u27e9\n  have h1 : 0 < b + c := by linarith\n  have h2 : 0 < c + a := by linarith\n  have h3 : 0 < a + b := by linarith\n  have h4 : 0 < (b + c) * (c + a) := by positivity\n  have h5 : 0 < (a + b) * (b + c) := by positivity\n  have h6 : 0 < (c + a) * (a + b) := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a^2 - b^2), sq_nonneg (b^2 - c^2), sq_nonneg (c^2 - a^2),\n    sq_nonneg (a * b + b * c + c * a), sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a),\n    sq_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_10_2 (a b c : \u211d) (hab : a > 0 \u2227 b > 0 \u2227 c > 0) (h : a + b + c = 1) :  a^2 / (b + c)^2 + b^2 / (c + a)^2 + c^2 / (a + b)^2 \u2265 3 / 4:= by\n  rcases hab with \u27e8ha, hb, hc\u27e9\n  have h\u2081 : a ^ 2 / (b + c) ^ 2 + b ^ 2 / (c + a) ^ 2 + c ^ 2 / (a + b) ^ 2 \u2265 3 / 4 := by\n    rw [add_assoc] at h\n    have h\u2082 : 0 < b + c := by linarith\n    have h\u2083 : 0 < c + a := by linarith\n    have h\u2084 : 0 < a + b := by linarith\n    have h\u2085 : 0 < b * c := by positivity\n    have h\u2086 : 0 < c * a := by positivity\n    have h\u2087 : 0 < a * b := by positivity\n    have h\u2088 : 0 < (b + c) * (c + a) * (a + b) := by positivity\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2)]\n  linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_10_2 (a b c : \u211d) (hab : a > 0 \u2227 b > 0 \u2227 c > 0) (h : a + b + c = 1) :  a^2 / (b + c)^2 + b^2 / (c + a)^2 + c^2 / (a + b)^2 \u2265 3 / 4:= by\n  have h\u2081 : 0 < b + c := by linarith\n  have h\u2082 : 0 < c + a := by linarith\n  have h\u2083 : 0 < a + b := by linarith\n  have h\u2084 : 0 < b * c := by nlinarith\n  have h\u2085 : 0 < c * a := by nlinarith\n  have h\u2086 : 0 < a * b := by nlinarith\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086]\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (a^2 - b^2), sq_nonneg (b^2 - c^2), sq_nonneg (c^2 - a^2),\n    mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a)]\n  positivity\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_10_2 (a b c : \u211d) (hab : a > 0 \u2227 b > 0 \u2227 c > 0) (h : a + b + c = 1) :  a^2 / (b + c)^2 + b^2 / (c + a)^2 + c^2 / (a + b)^2 \u2265 3 / 4:= by\n  have : 0 < a := by linarith\n  have : 0 < b := by linarith\n  have : 0 < c := by linarith\n  have h1 : 0 < b + c := by linarith\n  have h2 : 0 < c + a := by linarith\n  have h3 : 0 < a + b := by linarith\n  have h4 : 0 < b * c := by nlinarith\n  have h5 : 0 < c * a := by nlinarith\n  have h6 : 0 < a * b := by nlinarith\n  have h7 : 0 < (b + c) * (c + a) * (a + b) := by positivity\n  have h8 : 0 < (b + c) * (c + a) * (a + b) * (a + b + c) := by positivity\n  field_simp\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2)]\n  positivity\n  positivity"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (habc : a * b * c = 1) (h : (a^2 - a + 1) * (b^2 - b + 1) * (c^2 - c + 1) = 3) : a + b + c \u2264 4 := by",
  "new": "(a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  cases' Nat.eq_zero_or_pos a with ha ha\n  all_goals cases' Nat.eq_zero_or_pos b with hb hb\n  all_goals simp_all [Nat.mul_eq_zero]\n  all_goals simp_all [Nat.coprime_iff_gcd_eq_one, Nat.gcd_eq_right]\n  all_goals omega\n  all_goals simp_all [Nat.coprime_iff_gcd_eq_one, Nat.gcd_eq_left]\n  all_goals omega\n  all_goals simp_all [Nat.coprime_iff_gcd_eq_one, Nat.gcd_eq_zero_iff]\n  all_goals omega\n  all_goals simp_all [Nat.coprime_iff_gcd_eq_one]\n  all_goals omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  rcases Nat.eq_one_of_mul_eq_one_right h with (rfl | rfl) <;> simp_all [Nat.coprime_iff_gcd_eq_one]\n  <;> try norm_num\n  <;> assumption\n  <;> assumption\n  <;> assumption"
  ]
 },
 {
  "old": "(a b : \u211d) (ha : 0 < a) (hb : 0 < b) : 1 \u2264 Real.sqrt (a / (a + 3 * b)) + Real.sqrt (b / (b + 3 * a)) \u2227 Real.sqrt (a / (a + 3 * b)) + Real.sqrt (b / (b + 3 * a)) \u2264 (3 * Real.sqrt 2) / 4 := by",
  "new": "(x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : 0 < x * y) : Real.sqrt (x / (x + y)) * Real.sqrt (y / (y + x)) \u2264 1 / 2 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : 0 < x * y) :\n     Real.sqrt (x / (x + y)) * Real.sqrt (y / (y + x)) \u2264 1 / 2 := by\n  have h\u2080 : Real.sqrt (x / (x + y)) * Real.sqrt (y / (y + x)) =\n      Real.sqrt (x / (x + y) * (y / (y + x))) := by\n    rw [\u2190 Real.sqrt_mul]\n    all_goals positivity\n  rw [h\u2080]\n  apply Real.sqrt_le_iff.mpr\n  refine' \u27e8by positivity, _\u27e9\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (x - y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : 0 < x * y) :\n     Real.sqrt (x / (x + y)) * Real.sqrt (y / (y + x)) \u2264 1 / 2 := by\n  have h\u2081 : Real.sqrt (x / (x + y)) * Real.sqrt (y / (y + x)) =\n    Real.sqrt ((x / (x + y)) * (y / (y + x))) := by\n    rw [\u2190 Real.sqrt_mul (by positivity)]\n  rw [h\u2081]\n  have h\u2082 : (x / (x + y)) * (y / (y + x)) \u2264 1 / 4 := by\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (x - y)]\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  \u00b7 positivity\n  \u00b7 nlinarith"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \u221a2 * (x + y + z) ^ 2 \u2265 (\u221a(x ^ 2 + y ^ 2) + \u221a(y ^ 2 + z ^ 2) + \u221a(z ^ 2 + x ^ 2)) := by",
  "new": "(x y : \u2115) (h : x ^ 2 + y ^ 2 \u2260 0) : Nat.Coprime x y \u2228 \u00acNat.Coprime x y := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2260 0) : Nat.Coprime x y \u2228 \u00acNat.Coprime x y := by\n  by_cases hc : Nat.Coprime x y\n  exact Or.inl hc\n  exact Or.inr hc",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2260 0) : Nat.Coprime x y \u2228 \u00acNat.Coprime x y := by\n  by_cases hc : x.Coprime y\n  exact Or.inl hc\n  exact Or.inr (by simpa using hc)\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2260 0) : Nat.Coprime x y \u2228 \u00acNat.Coprime x y := by\n  by_cases hc : Nat.Coprime x y <;> simp_all\n  <;> simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;> omega\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2260 0) : Nat.Coprime x y \u2228 \u00acNat.Coprime x y := by\n  by_cases h' : Nat.Coprime x y <;> simp_all\n  <;> simp_all [Nat.coprime_iff_gcd_eq_one, Nat.gcd_eq_zero_iff]\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (Real.sqrt ((a^2 * b + b^2 * c + c^2 * a) * (a * b^2 + b * c^2 + c * a^2))) \u2265 abc + (a^3 + a * b * c) ^ (1 / 3) * (b^3 + a * b * c) ^ (1 / 3) * (c^3 + a * b * c) ^ (1 / 3) := by",
  "new": "(ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (Real.sqrt ((a^2 * b + b^2 * c + c^2 * a) * (a * b^2 + b * c^2 + c * a^2))) \u2265 2 * a * b * c := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (Real.sqrt ((a^2 * b + b^2 * c + c^2 * a) * (a * b^2 + b * c^2 + c * a^2))) \u2265 2 * a * b * c  := by\n  have : 0 \u2264 a * b := mul_nonneg ha.le hb.le\n  have : 0 \u2264 b * c := mul_nonneg hb.le hc.le\n  have : 0 \u2264 c * a := mul_nonneg hc.le ha.le\n  have : 0 \u2264 a * b * c := by positivity\n  apply le_sqrt_of_sq_le\n  nlinarith [sq_nonneg (a^2 * b + b^2 * c + c^2 * a - a * b^2 - b * c^2 - c * a^2),\n    mul_nonneg (sq_nonneg (a - b)) hc.le,\n    mul_nonneg (sq_nonneg (b - c)) ha.le,\n    mul_nonneg (sq_nonneg (c - a)) hb.le]\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (Real.sqrt ((a^2 * b + b^2 * c + c^2 * a) * (a * b^2 + b * c^2 + c * a^2))) \u2265 2 * a * b * c  := by\n  have h\u2081 : 0 \u2264 a * b * b * c := by positivity\n  have h\u2082 : 0 \u2264 b * c * c * a := by positivity\n  have h\u2083 : 0 \u2264 c * a * a * b := by positivity\n  have h\u2084 : 0 \u2264 a * b * c := by positivity\n  have h\u2085 : 0 \u2264 Real.sqrt ((a^2 * b + b^2 * c + c^2 * a) * (a * b^2 + b * c^2 + c * a^2)) := by positivity\n  have h\u2086 : 0 \u2264 a * b + b * c + c * a := by positivity\n  nlinarith [sq_sqrt (by positivity : (0 : \u211d) \u2264 (a^2 * b + b^2 * c + c^2 * a) * (a * b^2 + b * c^2 + c * a^2)),\n    mul_self_nonneg (a^2 * b + b^2 * c + c^2 * a - a * b^2 - b * c^2 - c * a^2),\n    mul_self_nonneg (a * b + b * c + c * a),\n    mul_self_nonneg (a * b - b * c),\n    mul_self_nonneg (b * c - c * a),\n    mul_self_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (Real.sqrt ((a^2 * b + b^2 * c + c^2 * a) * (a * b^2 + b * c^2 + c * a^2))) \u2265 2 * a * b * c  := by\n  refine' Real.le_sqrt_of_sq_le _\n  have h : 0 < a * b := by positivity\n  have h' : 0 < b * c := by positivity\n  have h'' : 0 < c * a := by positivity\n  nlinarith [sq_nonneg (a^2 * b - b^2 * c), sq_nonneg (b^2 * c - c^2 * a), sq_nonneg (c^2 * a - a^2 * b),\n    sq_nonneg (a * b^2 - b * c^2), sq_nonneg (b * c^2 - c * a^2), sq_nonneg (c * a^2 - a * b^2)]"
  ]
 },
 {
  "old": "(f : Polynomial \u211d) (hf: f * (f.comp (3 * X ^ 2)) = f.comp (3 * X ^ 3 + X ^ 2)) : f = 0 \u2228 f = 1 \u2228 f = X := by",
  "new": "(f : Polynomial \u211d) (n : \u2115) (hn : 0 < n) : f ^ n = 0 \u2194 f = 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem polynomial_test_2 (f : Polynomial \u211d) (n : \u2115) (hn : 0 < n) : f ^ n = 0 \u2194 f = 0:= by\n  constructor <;> intro h\n  all_goals simp_all [Polynomial.ext_iff, pow_eq_zero_iff]\n  all_goals aesop"
  ]
 },
 {
  "old": "(a b c : \u211d) : (a + b / b + c + c / a + b + a / c + b + c / a + b + a / c) ^ 2 + 8 * a * b * c / (a + b) / (b + c) / (c + a) \u2265 10 := by",
  "new": "(a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) : (a + b / b + c + c / a + b + a / c + b + c / a + b + a / c) ^ 2 + 8 * a * b * c / (a + b) / (b + c) / (c + a) \u2265 10:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) : (a + b / b + c + c / a + b + a / c + b + c / a + b + a / c) ^ 2 + 8 * a * b * c / (a + b) / (b + c) / (c + a) \u2265 10:= by\n  apply le_of_sub_nonneg\n  field_simp [ha, hb, hc]\n  ring_nf\n  positivity\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) : (a + b / b + c + c / a + b + a / c + b + c / a + b + a / c) ^ 2 + 8 * a * b * c / (a + b) / (b + c) / (c + a) \u2265 10:= by\n  have h\u2080 : a * b * c > 0 := by positivity\n  have h\u2081 : a + b / b + c + c / a + b + a / c + b + c / a + b + a / c \u2265 5 := by\n    have h\u2082 : a + b / b + c + c / a + b + a / c + b + c / a + b + a / c \u2265 5 := by\n      have h\u2083 : a + b / b + c + c / a + b + a / c + b + c / a + b + a / c \u2265 5 := by\n        have h\u2084 : b / b = 1 := by field_simp\n        have h\u2085 : c / a + a / c \u2265 2 := by\n          have h\u2086 : 0 < a * c := by positivity\n          field_simp\n          rw [le_div_iff (by positivity)]\n          nlinarith [sq_nonneg (a - c)]\n        nlinarith\n      nlinarith\n    nlinarith\n  have h\u2082 : 8 * a * b * c / (a + b) / (b + c) / (c + a) \u2265 0 := by positivity\n  nlinarith"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : a^4 + b^4 + c^4 + d^4 - 4 * a * b * c * d \u2265 2 * (a - b) ^ 2 * (c - d) ^ 2 := by",
  "new": ": \u2200 a b c d : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 d > 0 \u2192 a * b * c * d = 1 \u2192 a ^ 4 + b ^ 4 + c ^ 4 + d ^ 4 - 4 * a * b * c * d \u2265 2 * (a - b) ^ 2 * (c - d) ^ 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 d > 0 \u2192 a * b * c * d = 1 \u2192\n    a ^ 4 + b ^ 4 + c ^ 4 + d ^ 4 - 4 * a * b * c * d \u2265 2 * (a - b) ^ 2 * (c - d) ^ 2:= by\n  rintro a b c d \u27e8a_pos, b_pos, c_pos, d_pos\u27e9 h\n  have h1 : 0 < a * b := by positivity\n  have h2 : 0 < c * d := by positivity\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a + b), sq_nonneg (c - d), sq_nonneg (c + d),\n    sq_nonneg (a - b + c - d), sq_nonneg (a - b - c + d), sq_nonneg (a + b - c - d),\n    sq_nonneg (a + b + c + d)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 d > 0 \u2192 a * b * c * d = 1 \u2192\n    a ^ 4 + b ^ 4 + c ^ 4 + d ^ 4 - 4 * a * b * c * d \u2265 2 * (a - b) ^ 2 * (c - d) ^ 2:= by\n  intro a b c d h\u2080 h\u2081\n  have h\u2082 : 0 < a * b := by\n    nlinarith\n  have h\u2083 : 0 < c * d := by\n    nlinarith\n  have h\u2084 : 0 < a * b * c * d := by\n    nlinarith\n  nlinarith [sq_nonneg (a + b - c - d), sq_nonneg (a + b + c + d),\n    sq_nonneg (a - b + c - d), sq_nonneg (a - b - c + d)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : (a + 1) ^ (a - b) * (b + 1) ^ (b - c) * (c + 1) ^ (c - a) \u2265 (a + 1) ^ (c - a) * (b + 1) ^ (a - b) * (c + 1) ^ (b - c) := by",
  "new": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : a * b * c * (a + b + c + 3) \u2264 (a ^ 2 + b ^ 2 + c ^ 2) * (b ^ 2 + a ^ 2 + c ^ 2) + 3 * (a ^ 2 + b ^ 2 + c ^ 2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) :\n     a * b * c * (a + b + c + 3) \u2264 (a ^ 2 + b ^ 2 + c ^ 2) * (b ^ 2 + a ^ 2 + c ^ 2) + 3 * (a ^ 2 + b ^ 2 + c ^ 2):= by\n  have := mul_self_nonneg (a - b)\n  have := mul_self_nonneg (b - c)\n  have := mul_self_nonneg (c - a)\n  have := mul_self_nonneg (a - 1)\n  have := mul_self_nonneg (b - 1)\n  have := mul_self_nonneg (c - 1)\n  nlinarith"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : (52 / 3 + (11 / 12) * (a + b + c + d) * (1 / a + 1 / b + 1 / c + 1 / d) \u2265 288 * (a / (3 * a + 11 * b + 11 * c + 11 * d) + b / (3 * b + 11 * c + 11 * d + 11 * a) + c / (3 * c + 11 * d + 11 * a + 11 * b) + d / (3 * d + 11 * a + 11 * b + 11 * c))) := by",
  "new": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : a / b + b / c + c / d + d / a \u2265 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : \n  a / b + b / c + c / d + d / a \u2265 4:= by\n  have h\u2080 : 0 < b * c := by positivity\n  have h\u2081 : 0 < c * d := by positivity\n  have h\u2082 : 0 < d * a := by positivity\n  have h\u2083 : 0 < b * d := by positivity\n  have h\u2084 : 0 < c * a := by positivity\n  have h\u2085 : 0 < b * c * d := by positivity\n  have h\u2086 : 0 < a * b * c := by positivity\n  have h\u2087 : 0 < d * a * b := by positivity\n  have h\u2088 : 0 < c * d * a := by positivity\n  field_simp [h\u2080.ne', h\u2081.ne', h\u2082.ne', h\u2083.ne', h\u2084.ne', h\u2085.ne', h\u2086.ne', h\u2087.ne', h\u2088.ne']\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - d), sq_nonneg (d - a),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le hd.le, mul_nonneg hd.le ha.le,\n    mul_nonneg (sq_nonneg (a - b)) hd.le, mul_nonneg (sq_nonneg (b - c)) ha.le, mul_nonneg (sq_nonneg (c - d)) hb.le, mul_nonneg (sq_nonneg (d - a)) hc.le]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : \n  a / b + b / c + c / d + d / a \u2265 4:= by\n  simp_all only [add_assoc, add_left_comm, add_comm, mul_one, mul_div_cancel_left,\n    mul_div_cancel_left, mul_one, mul_div_cancel_left, mul_div_cancel_left]\n  have h1 : 0 < b * c := by positivity\n  have h2 : 0 < c * d := by positivity\n  have h3 : 0 < d * a := by positivity\n  have h4 : 0 < a * b := by positivity\n  have h5 : 0 < b * d := by positivity\n  have h6 : 0 < c * a := by positivity\n  have h7 : 0 < d * b := by positivity\n  have h8 : 0 < a * c := by positivity\n  have h9 : 0 < b * c * d := by positivity\n  have h10 : 0 < c * d * a := by positivity\n  have h11 : 0 < d * a * b := by positivity\n  have h12 : 0 < a * b * c := by positivity\n  field_simp [h1, h2, h3, h4, h5, h6, h7, h8, h9, h10, h11, h12]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - d), sq_nonneg (d - a),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le hd.le, mul_nonneg hd.le ha.le,\n    mul_nonneg (sq_nonneg (a - b)) hc.le, mul_nonneg (sq_nonneg (b - c)) hd.le,\n    mul_nonneg (sq_nonneg (c - d)) ha.le, mul_nonneg (sq_nonneg (d - a)) hb.le]"
  ]
 },
 {
  "old": ": \u00ac \u2203 a b : \u2124, (a : \u211d) / b = Real.log 2 / Real.log 3 := by",
  "new": "(a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b) := by\n  by_cases h : Nat.Coprime a b\n  exacts [Or.inl h, Or.inr h]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b) := by\n  by_cases h : a.Coprime b\n  exacts [Or.inl h, Or.inr (by simpa using h)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b) := by\n  by_cases h : a.Coprime b\n  exact Or.inl h\n  exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b) := by\n  by_cases h : a.Coprime b\n  exacts [Or.inl h, Or.inr h]"
  ]
 },
 {
  "old": "(x : \u211d) : -2 \u2264 (Real.sin x + Real.sqrt (Real.sin x ^ 2 + 3)) * Real.cos x \u2227 (Real.sin x + Real.sqrt (Real.sin x ^ 2 + 3)) * Real.cos x \u2264 2 := by",
  "new": "(x : \u211d) : 2 * (Real.sqrt (1 + Real.sin x ^ 2) - 1) * Real.cos x \u2264 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_22610 (x : \u211d) : 2 * (Real.sqrt (1 + Real.sin x ^ 2) - 1) * Real.cos x \u2264 2:= by\n  have h1 : 0 \u2264 Real.sqrt (1 + Real.sin x ^ 2) := Real.sqrt_nonneg _\n  have h2 : Real.sqrt (1 + Real.sin x ^ 2) ^ 2 = 1 + Real.sin x ^ 2 := Real.sq_sqrt (by positivity)\n  have h3 : 0 \u2264 Real.cos x ^ 2 := sq_nonneg (Real.cos x)\n  nlinarith [Real.sin_sq_add_cos_sq x, sq_nonneg (Real.cos x - 1),\n    Real.sqrt_nonneg (1 + Real.sin x ^ 2), sq_nonneg (Real.cos x + 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_22610 (x : \u211d) : 2 * (Real.sqrt (1 + Real.sin x ^ 2) - 1) * Real.cos x \u2264 2:= by\n  have h\u2081 := sq_nonneg (Real.cos x)\n  have h\u2082 := sq_nonneg (Real.sin x)\n  have h\u2083 := Real.sqrt_nonneg (1 + Real.sin x ^ 2)\n  nlinarith [sq_sqrt (show 0 \u2264 1 + Real.sin x ^ 2 from by positivity),\n    sq_nonneg (Real.cos x - 1),\n    Real.sin_sq_add_cos_sq x]\n  <;> nlinarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_22610 (x : \u211d) : 2 * (Real.sqrt (1 + Real.sin x ^ 2) - 1) * Real.cos x \u2264 2:= by\n  have h : Real.sqrt (1 + Real.sin x ^ 2) \u2265 0 := Real.sqrt_nonneg (1 + Real.sin x ^ 2)\n  have h\u2081 : 2 * (Real.sqrt (1 + Real.sin x ^ 2) - 1) * Real.cos x \u2264 2 := by\n    nlinarith [sq_sqrt (show 0 \u2264 1 + Real.sin x ^ 2 from by positivity),\n      Real.sin_sq_add_cos_sq x, mul_self_nonneg (Real.cos x - 1),\n      mul_self_nonneg (Real.cos x + 1), mul_self_nonneg (Real.cos x - Real.sin x),\n      mul_self_nonneg (Real.cos x + Real.sin x)]\n  linarith\n  <;> nlinarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_22610 (x : \u211d) : 2 * (Real.sqrt (1 + Real.sin x ^ 2) - 1) * Real.cos x \u2264 2:= by\n  have h\u2081 : Real.sqrt (1 + Real.sin x ^ 2) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2082 : Real.sqrt (1 + Real.sin x ^ 2) ^ 2 = 1 + Real.sin x ^ 2 := Real.sq_sqrt (by positivity)\n  nlinarith [Real.sin_sq_add_cos_sq x, sq_nonneg (Real.cos x - 1),\n    mul_self_nonneg (Real.cos x - Real.sqrt (1 + Real.sin x ^ 2))]"
  ]
 },
 {
  "old": "(a b c d : \u211d) (hab : a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 d > 0 \u2227 a * b * c * d = 1) : a / (b * c + c * d + d * a - 1) + a / (a * b + c * d + d * a - 1) + a / (a * b + b * c + d * a - 1) + a / (a * b + b * c + c * d - 1) \u2264 2 := by",
  "new": "(a b c : \u211d) (habc : a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1) : 1 / (a * b) + 1 / (b * c) + 1 / (c * a) \u2265 3 / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (a b c : \u211d) (habc : a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1) : 1 / (a * b) + 1 / (b * c) + 1 / (c * a) \u2265 3 / 2:= by\n  rcases habc with \u27e8ha, hb, hc, habc\u27e9\n  have h\u2080 : 0 < a * b := by nlinarith\n  have h\u2081 : 0 < b * c := by nlinarith\n  have h\u2082 : 0 < c * a := by nlinarith\n  have h\u2083 : 0 < (a * b) * (b * c) := by nlinarith\n  have h\u2084 : 0 < (a * b) * (c * a) := by nlinarith\n  have h\u2085 : 0 < (b * c) * (c * a) := by nlinarith\n  field_simp [h\u2080, h\u2081, h\u2082]\n  rw [div_le_div_iff]\n  nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a),\n    mul_self_nonneg (a * b - 1), mul_self_nonneg (b * c - 1), mul_self_nonneg (c * a - 1)]\n  nlinarith\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (a b c : \u211d) (habc : a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1) : 1 / (a * b) + 1 / (b * c) + 1 / (c * a) \u2265 3 / 2:= by\n  obtain \u27e8ha, hb, hc, h\u27e9 := habc\n  have h\u2081 : 0 < a * b := by positivity\n  have h\u2082 : 0 < b * c := by positivity\n  have h\u2083 : 0 < c * a := by positivity\n  have h\u2084 : 0 < a * b * (b * c) := by positivity\n  have h\u2085 : 0 < b * c * (c * a) := by positivity\n  have h\u2086 : 0 < c * a * (a * b) := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [mul_self_nonneg (a - 1), mul_self_nonneg (b - 1), mul_self_nonneg (c - 1),\n    mul_self_nonneg (a * b - 1), mul_self_nonneg (b * c - 1), mul_self_nonneg (c * a - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (a b c : \u211d) (habc : a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1) : 1 / (a * b) + 1 / (b * c) + 1 / (c * a) \u2265 3 / 2:= by\n  rcases habc with \u27e8ha, hb, hc, h\u27e9\n  have : 0 < a * b := by positivity\n  have : 0 < b * c := by positivity\n  have : 0 < c * a := by positivity\n  field_simp [h]\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1),\n    mul_self_nonneg (a * b - 1), mul_self_nonneg (b * c - 1),\n    mul_self_nonneg (c * a - 1), mul_self_nonneg (a * b * c - 1)]\n  positivity\n  positivity"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : x + y + z = 1) (h : x*y*z*(1 - x)*(1 - y)*(1 - z)*(x + 3*z)*(y + 3*x)*(z + 3*y) \u2260 0) : (13*x^2 - 7*x + 2)/(4*x*(1 - x)) + (13*y^2 - 7*y + 2)/(4*y*(1 - y)) + (13*z^2 - 7*z + 2)/(4*z*(1 - z)) \u2265 (2*x + 3*y)/(x + 3*z) + (2*y + 3*z)/(y + 3*x) + (2*z + 3*x)/(z + 3*y) := by",
  "new": "(x y z : \u211d) (h\u2081 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2082 : x + y + z = 1) : (x^2 - x + 1/3)/(x + y) + (y^2 - y + 1/3)/(y + z) + (z^2 - z + 1/3)/(z + x) \u2265 (x + y + z)/2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_x1y2z3 (x y z : \u211d) (h\u2081 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2082 : x + y + z = 1) : (x^2 - x + 1/3)/(x + y) + (y^2 - y + 1/3)/(y + z) + (z^2 - z + 1/3)/(z + x) \u2265 (x + y + z)/2:= by\n  have h\u2083 : 0 < x + y := by linarith\n  have h\u2084 : 0 < y + z := by linarith\n  have h\u2085 : 0 < z + x := by linarith\n  have h\u2086 : 0 < x * y := by nlinarith\n  have h\u2087 : 0 < y * z := by nlinarith\n  have h\u2088 : 0 < z * x := by nlinarith\n  have h\u2089 : 0 < (x + y) * (y + z) * (z + x) := by nlinarith\n  field_simp [h\u2081.1.ne', h\u2081.2.1.ne', h\u2081.2.2.ne', h\u2083.ne', h\u2084.ne', h\u2085.ne', h\u2086.ne', h\u2087.ne', h\u2088.ne', h\u2089.ne']\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_x1y2z3 (x y z : \u211d) (h\u2081 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2082 : x + y + z = 1) : (x^2 - x + 1/3)/(x + y) + (y^2 - y + 1/3)/(y + z) + (z^2 - z + 1/3)/(z + x) \u2265 (x + y + z)/2:= by\n  have hx : 0 < x := (h\u2081).1\n  have hy : 0 < y := (h\u2081).2.1\n  have hz : 0 < z := (h\u2081).2.2\n  have hxy : 0 < x * y := mul_pos hx hy\n  have hyz : 0 < y * z := mul_pos hy hz\n  have hxz : 0 < x * z := mul_pos hx hz\n  have h : (x + y + z) ^ 2 = 1 := by rw [h\u2082]; ring\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  <;> linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_x1y2z3 (x y z : \u211d) (h\u2081 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2082 : x + y + z = 1) : (x^2 - x + 1/3)/(x + y) + (y^2 - y + 1/3)/(y + z) + (z^2 - z + 1/3)/(z + x) \u2265 (x + y + z)/2:= by\n  rcases h\u2081 with \u27e8hx, hy, hz\u27e9\n  have h\u2083 : 0 < x + y + z := by linarith\n  have h\u2084 : 0 < x * y := by positivity\n  have h\u2085 : 0 < y * z := by positivity\n  have h\u2086 : 0 < z * x := by positivity\n  have h\u2087 : 0 < x + y + z + 1 := by linarith\n  have h\u2088 : 0 < x * y * z := by positivity\n  have h\u2089 : 0 < x * y * (x + y) := by positivity\n  have h\u2081\u2080 : 0 < y * z * (y + z) := by positivity\n  have h\u2081\u2081 : 0 < z * x * (z + x) := by positivity\n  have h\u2081\u2082 : 0 < x * y * z * (x + y + z) := by positivity\n  field_simp [h\u2082]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]"
  ]
 },
 {
  "old": "(\u03b1 \u03b2 : \u211d) (x y z : \u211d) : \u03b1 * (x * y + y * z + z * x) \u2264 Real.sqrt ((x ^ 2 + x * y + y ^ 2) * (y ^ 2 + y * z + z ^ 2)) + Real.sqrt ((y ^ 2 + y * z + z ^ 2) * (z ^ 2 + z * x + x ^ 2)) + Real.sqrt ((z ^ 2 + z * x + x ^ 2) * (x ^ 2 + x * y + y ^ 2)) \u2227 Real.sqrt ((x ^ 2 + x * y + y ^ 2) * (y ^ 2 + y * z + z ^ 2)) + Real.sqrt ((y ^ 2 + y * z + z ^ 2) * (z ^ 2 + z * x + x ^ 2)) + Real.sqrt ((z ^ 2 + z * x + x ^ 2) * (x ^ 2 + x * y + y ^ 2)) \u2264 \u03b2 * (x ^ 2 + y ^ 2 + z ^ 2) := by",
  "new": "(x y z : \u211d) : \u221a(x ^ 2 + y ^ 2) + \u221a(y ^ 2 + z ^ 2) + \u221a(z ^ 2 + x ^ 2) \u2265 \u221a(x ^ 2 + y ^ 2 + y ^ 2 + z ^ 2 + z ^ 2 + x ^ 2) * (2 / (\u221a2 + \u221a3 + \u221a4)):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (x y z : \u211d) :\n     \u221a(x ^ 2 + y ^ 2) + \u221a(y ^ 2 + z ^ 2) + \u221a(z ^ 2 + x ^ 2) \u2265\n     \u221a(x ^ 2 + y ^ 2 + y ^ 2 + z ^ 2 + z ^ 2 + x ^ 2) *\n     (2 / (\u221a2 + \u221a3 + \u221a4)):= by\n  have h\u2080 : \u221a(x ^ 2 + y ^ 2) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2081 : \u221a(y ^ 2 + z ^ 2) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2082 : \u221a(z ^ 2 + x ^ 2) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2083 : \u221a2 \u2265 0 := Real.sqrt_nonneg _\n  have h\u2084 : \u221a3 \u2265 0 := Real.sqrt_nonneg _\n  have h\u2085 : \u221a4 \u2265 0 := Real.sqrt_nonneg _\n  have h\u2086 : \u221a(x ^ 2 + y ^ 2 + y ^ 2 + z ^ 2 + z ^ 2 + x ^ 2) \u2265 0 :=\n    Real.sqrt_nonneg _\n  have h\u2087 : \u221a(x ^ 2 + y ^ 2 + y ^ 2 + z ^ 2 + z ^ 2 + x ^ 2) *\n    (2 / (\u221a2 + \u221a3 + \u221a4)) \u2264 \u221a(x ^ 2 + y ^ 2) + \u221a(y ^ 2 + z ^ 2) + \u221a(z ^ 2 + x ^ 2) := by\n    apply le_of_pow_le_pow_left two_ne_zero (by positivity)\n    field_simp [pow_two]\n    ring_nf\n    apply le_of_sub_nonneg\n    field_simp\n    ring_nf\n    positivity\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (x y z : \u211d) :\n     \u221a(x ^ 2 + y ^ 2) + \u221a(y ^ 2 + z ^ 2) + \u221a(z ^ 2 + x ^ 2) \u2265\n     \u221a(x ^ 2 + y ^ 2 + y ^ 2 + z ^ 2 + z ^ 2 + x ^ 2) *\n     (2 / (\u221a2 + \u221a3 + \u221a4)):= by\n  have h\u2082 : \u221a(x ^ 2 + y ^ 2) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2083 : \u221a(y ^ 2 + z ^ 2) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2084 : \u221a(z ^ 2 + x ^ 2) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2085 : \u221a(x ^ 2 + y ^ 2 + y ^ 2 + z ^ 2 + z ^ 2 + x ^ 2) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2087 : \u221a2 + \u221a3 + \u221a4 \u2265 0 := by positivity\n  have h\u2088 : 2 / (\u221a2 + \u221a3 + \u221a4) \u2265 0 := by positivity\n  have h\u2089 : \u221a(x ^ 2 + y ^ 2) + \u221a(y ^ 2 + z ^ 2) + \u221a(z ^ 2 + x ^ 2) \u2265 0 := by positivity\n  have h\u2081\u2080 : \u221a(x ^ 2 + y ^ 2 + y ^ 2 + z ^ 2 + z ^ 2 + x ^ 2) * (2 / (\u221a2 + \u221a3 + \u221a4)) \u2264 \u221a(x ^ 2 + y ^ 2) + \u221a(y ^ 2 + z ^ 2) + \u221a(z ^ 2 + x ^ 2) := by\n    rw [mul_comm]\n    apply le_of_pow_le_pow_left two_ne_zero (by positivity)\n    field_simp [h\u2087, h\u2088]\n    ring_nf\n    norm_num\n    apply le_of_sub_nonneg\n    field_simp\n    ring_nf\n    positivity\n  linarith"
  ]
 },
 {
  "old": "(n : \u2115) (a b : \u211d) (hab : 0 < a \u2227 a < b) (x : Fin n \u2192 \u211d) (hx : \u2200 i, x i \u2208 Set.Icc a b) : (\u2211 i, x i) * (\u2211 i, 1 / x i) \u2265 n^2 * (a + b)^2 / (4 * a * b) := by",
  "new": "(x y : \u211d) (hx : 0 < x) (hy : 0 < y) (h : x + y = 1) : x * Real.log (1 / x) + y * Real.log (1 / y) \u2265 0 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (h : x + y = 1) : x * Real.log (1 / x) + y * Real.log (1 / y) \u2265 0 := by\n  have : 1 / x > 0 := one_div_pos.mpr hx\n  have : 1 / y > 0 := one_div_pos.mpr hy\n  have : x * Real.log (1 / x) \u2265 0 := mul_nonneg (le_of_lt hx) (Real.log_nonneg (by\n    rw [one_div]\n    exact one_le_inv hx (by linarith)\n    ))\n  have : y * Real.log (1 / y) \u2265 0 := mul_nonneg (le_of_lt hy) (Real.log_nonneg (by\n    rw [one_div]\n    exact one_le_inv hy (by linarith)\n    ))\n  linarith\n  <;> try norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (h : x + y = 1) : x * Real.log (1 / x) + y * Real.log (1 / y) \u2265 0 := by\n  have h\u2081 : 0 < x * y := mul_pos hx hy\n  have h\u2082 : 0 < x * y * (x + y) := by nlinarith\n  have h\u2083 : Real.log (1 / x) = -Real.log x := by\n    rw [Real.log_div (by positivity) (by positivity)]\n    simp\n  have h\u2084 : Real.log (1 / y) = -Real.log y := by\n    rw [Real.log_div (by positivity) (by positivity)]\n    simp\n  rw [h\u2083, h\u2084]\n  have h\u2085 : x * -Real.log x + y * -Real.log y = -(x * Real.log x + y * Real.log y) := by ring\n  rw [h\u2085]\n  nlinarith [Real.log_le_sub_one_of_pos hx, Real.log_le_sub_one_of_pos hy]\n  <;> linarith"
  ]
 },
 {
  "old": "(a : \u2115 \u2192 \u2115) (h : \u2200 p : \u2115, p.Prime \u2192 { i : \u2115 | p \u2223 a i }.Finite) : \u2203 i : \u2115 \u2192 \u2115, (\u2200 m n : \u2115, m \u2260 n \u2192 Nat.Coprime (a (i m)) (a (i n))) := by",
  "new": "(p : \u2115) (a : \u2115) (h\u2081 : Nat.Prime p) (h\u2082 : \u00ac (p : \u2115) \u2223 a) : Nat.Coprime p a \u2228 p \u2223 a := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (a : \u2115) (h\u2081 : Nat.Prime p) (h\u2082 : \u00ac (p : \u2115) \u2223 a) :\n     Nat.Coprime p a \u2228 p \u2223 a := by\n  refine' or_iff_not_imp_right.2 fun h => _\n  exact h\u2081.coprime_iff_not_dvd.2 h\u2082",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (a : \u2115) (h\u2081 : Nat.Prime p) (h\u2082 : \u00ac (p : \u2115) \u2223 a) :\n     Nat.Coprime p a \u2228 p \u2223 a := by\n  by_cases h : Nat.Coprime p a <;> simp_all [Nat.Prime.coprime_iff_not_dvd, h\u2081, h\u2082]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (a : \u2115) (h\u2081 : Nat.Prime p) (h\u2082 : \u00ac (p : \u2115) \u2223 a) :\n     Nat.Coprime p a \u2228 p \u2223 a := by\n  have : p \u2223 a \u2228 Nat.Coprime p a := by\n    apply or_iff_not_imp_right.mpr\n    intro h\n    simp_all [Nat.Prime.coprime_iff_not_dvd, h\u2081]\n  tauto\n  <;> simp [h\u2082]\n  <;> tauto\n  <;> simp_all [Nat.Prime.coprime_iff_not_dvd, h\u2081]\n  <;> tauto\n  <;> simp_all [Nat.Prime.coprime_iff_not_dvd, h\u2081]\n  <;> tauto\n  <;> simp_all [Nat.Prime.coprime_iff_not_dvd, h\u2081]\n  <;> tauto"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) : Real.logb a (b / c) = Real.logb a b - Real.logb a c := by",
  "new": "(b x : \u211d) (hb : 1 < b) (hx : 0 < x) : logb b (x / b) = Real.logb b x - 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem logb_div_base (b x : \u211d) (hb : 1 < b) (hx : 0 < x) : logb b (x / b) = Real.logb b x - 1:= by\n  unfold logb\n  rw [Real.log_div (by positivity) (by positivity)]\n  field_simp [Real.log_ne_zero_of_pos_of_ne_one (by positivity : 0 < b) (by linarith : b \u2260 1)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a * b + b * c + c * a = 3 * a * b * c) : 3 * Real.sqrt (a * b * c) \u2265 Real.sqrt a + Real.sqrt b + Real.sqrt c := by",
  "new": "(a b : \u2115) (hab : a * b > 1) : Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (hab : a * b > 1) : Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b := by\n  by_cases h : Nat.Coprime a b\n  exacts [Or.inl h, Or.inr h]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (hab : a * b > 1) : Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b := by\n  cases' em (Nat.Coprime a b) with h h\n  exacts [Or.inl h, Or.inr h]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b + c = 3) : (a^2 - b * c) / (a^2 + 2 * b * c) + (b^2 - c * a) / (b^2 + 2 * c * a) + (c^2 - a * b) / (c^2 + 2 * a * b) \u2265 (2 * a * b * c * (1 - a * b * c)) / 3 := by",
  "new": "(a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b + c = 3) : a * b * c * (a^2 + b^2 + c^2) \u2264 9:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b + c = 3) :\n       a * b * c * (a^2 + b^2 + c^2) \u2264 9:= by\n  have : a^2 + b^2 + c^2 = (a + b + c)^2 - 2 * (a * b + b * c + c * a) := by ring\n  simp_all only [mul_assoc, mul_comm, mul_left_comm]\n  nlinarith [mul_pos ha.1 ha.2.1, mul_pos ha.2.1 ha.2.2, mul_pos ha.1 ha.2.2,\n    sq_nonneg (a * b + b * c + a * c - 3), sq_nonneg (a * b - b * c),\n    sq_nonneg (b * c - a * c), sq_nonneg (a * c - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b + c = 3) :\n       a * b * c * (a^2 + b^2 + c^2) \u2264 9:= by\n  have : a^2 + b^2 + c^2 = (a + b + c)^2 - 2 * (a * b + b * c + c * a) := by ring\n  simp_all only [mul_assoc, mul_comm]\n  nlinarith [mul_pos ha.1 ha.2.1, mul_pos ha.2.1 ha.2.2, mul_pos ha.1 ha.2.2,\n    sq_nonneg (a * b + b * c + a * c - 3), sq_nonneg (a * b - b * c), sq_nonneg (b * c - a * c),\n    sq_nonneg (a * c - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b + c = 3) :\n       a * b * c * (a^2 + b^2 + c^2) \u2264 9:= by\n  have : a^2 + b^2 + c^2 = (a + b + c)^2 - 2 * (a * b + b * c + c * a) := by ring\n  simp [hab] at this\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n    mul_pos ha.1 ha.2.1, mul_pos ha.2.1 ha.2.2, mul_pos ha.1 ha.2.2,\n    mul_pos (mul_pos ha.1 ha.2.1) ha.2.2, mul_pos (mul_pos ha.2.1 ha.2.2) ha.1,\n    mul_pos (mul_pos ha.1 ha.2.2) ha.2.1]"
  ]
 },
 {
  "old": "(p q : \u2115) (hp : p.Prime) (hq : q.Prime) (h : q \u2223 q^2 + 1) (h' : p \u2223 q^2 - 1) : \u00ac(Nat.Prime (p + q + 1)) := by",
  "new": "(p q : \u2115) (hp : p.Prime) (hq : q.Prime) (hpq : p < q) (h : 2 \u2223 p + q) : p \u2223 q^2 - 1 \u2228 Nat.Coprime (p + q + 1) 2 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_goldbach_conjecture (p q : \u2115) (hp : p.Prime) (hq : q.Prime) (hpq : p < q) (h : 2 \u2223 p + q) :\n     p \u2223 q^2 - 1 \u2228 Nat.Coprime (p + q + 1) 2 := by\n  rw [Nat.dvd_iff_mod_eq_zero] at *\n  rcases Nat.Prime.eq_two_or_odd hp with (hp2 | hp_odd) <;> rcases Nat.Prime.eq_two_or_odd hq with (hq2 | hq_odd) <;> simp_all [Nat.mod_eq_of_lt, Nat.odd_iff_not_even, Nat.even_iff]\n  <;> omega\n  <;> omega\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_goldbach_conjecture (p q : \u2115) (hp : p.Prime) (hq : q.Prime) (hpq : p < q) (h : 2 \u2223 p + q) :\n     p \u2223 q^2 - 1 \u2228 Nat.Coprime (p + q + 1) 2 := by\n  refine' or_iff_not_imp_right.mpr fun h' => _\n  simp_all [Nat.dvd_iff_mod_eq_zero, Nat.Coprime, Nat.Prime, Nat.even_iff, Nat.add_mod, Nat.mul_mod,\n    Nat.mod_mod]\n  <;> omega\n  <;> exact h'\n  <;> exact hq.ne_zero\n  <;> exact hp.ne_zero\n  <;> exact hpq.ne\n  <;> exact hpq.ne\n  <;> exact hpq.ne\n  <;> exact hpq.ne"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : 0 < a + b + c) (k : \u211d) (hk : k \u2265 -2) : (Real.sqrt ((a ^ 2) / (a ^ 2 + k * a * b + b ^ 2)) + Real.sqrt ((b ^ 2) / (b ^ 2 + k * b * c + c ^ 2)) + Real.sqrt ((a ^ 2) / (a ^ 2 + k * a * c + c ^ 2)) \u2265 min 1 (3 / Real.sqrt (k + 2))) := by",
  "new": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : 0 < a + b + c) (h : a + b + c \u2264 1) : Real.sqrt ((a ^ 2) / (a ^ 2 + b ^ 2 + c ^ 2)) + Real.sqrt ((b ^ 2) / (a ^ 2 + b ^ 2 + c ^ 2)) + Real.sqrt ((c ^ 2) / (a ^ 2 + b ^ 2 + c ^ 2)) \u2264 2 + 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : 0 < a + b + c) (h : a + b + c \u2264 1) :  Real.sqrt ((a ^ 2) / (a ^ 2 + b ^ 2 + c ^ 2)) + Real.sqrt ((b ^ 2) / (a ^ 2 + b ^ 2 + c ^ 2)) + Real.sqrt ((c ^ 2) / (a ^ 2 + b ^ 2 + c ^ 2)) \u2264 2 + 1:= by\n  have h\u2081 : Real.sqrt ((a ^ 2) / (a ^ 2 + b ^ 2 + c ^ 2)) \u2264 1 := by\n    rw [Real.sqrt_le_iff]\n    constructor <;> norm_num <;>\n    apply div_le_one_of_le <;>\n    nlinarith\n  have h\u2082 : Real.sqrt ((b ^ 2) / (a ^ 2 + b ^ 2 + c ^ 2)) \u2264 1 := by\n    rw [Real.sqrt_le_iff]\n    constructor <;> norm_num <;>\n    apply div_le_one_of_le <;>\n    nlinarith\n  have h\u2083 : Real.sqrt ((c ^ 2) / (a ^ 2 + b ^ 2 + c ^ 2)) \u2264 1 := by\n    rw [Real.sqrt_le_iff]\n    constructor <;> norm_num <;>\n    apply div_le_one_of_le <;>\n    nlinarith\n  linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : 0 < a + b + c) (h : a + b + c \u2264 1) :  Real.sqrt ((a ^ 2) / (a ^ 2 + b ^ 2 + c ^ 2)) + Real.sqrt ((b ^ 2) / (a ^ 2 + b ^ 2 + c ^ 2)) + Real.sqrt ((c ^ 2) / (a ^ 2 + b ^ 2 + c ^ 2)) \u2264 2 + 1:= by\n  have h\u2080 : Real.sqrt ((a ^ 2) / (a ^ 2 + b ^ 2 + c ^ 2)) \u2264 1 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 apply div_le_of_nonneg_of_le_mul <;> nlinarith\n  have h\u2081 : Real.sqrt ((b ^ 2) / (a ^ 2 + b ^ 2 + c ^ 2)) \u2264 1 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 apply div_le_of_nonneg_of_le_mul <;> nlinarith\n  have h\u2082 : Real.sqrt ((c ^ 2) / (a ^ 2 + b ^ 2 + c ^ 2)) \u2264 1 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 apply div_le_of_nonneg_of_le_mul <;> nlinarith\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : 0 < a + b + c) (h : a + b + c \u2264 1) :  Real.sqrt ((a ^ 2) / (a ^ 2 + b ^ 2 + c ^ 2)) + Real.sqrt ((b ^ 2) / (a ^ 2 + b ^ 2 + c ^ 2)) + Real.sqrt ((c ^ 2) / (a ^ 2 + b ^ 2 + c ^ 2)) \u2264 2 + 1:= by\n  have : Real.sqrt ((a ^ 2) / (a ^ 2 + b ^ 2 + c ^ 2)) \u2264 1 := by\n    have h\u2080 : a ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) \u2264 1 := by\n      apply div_le_one_of_le\n      \u00b7 nlinarith\n      \u00b7 nlinarith\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  have : Real.sqrt ((b ^ 2) / (a ^ 2 + b ^ 2 + c ^ 2)) \u2264 1 := by\n    have h\u2080 : b ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) \u2264 1 := by\n      apply div_le_one_of_le\n      \u00b7 nlinarith\n      \u00b7 nlinarith\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  have : Real.sqrt ((c ^ 2) / (a ^ 2 + b ^ 2 + c ^ 2)) \u2264 1 := by\n    have h\u2080 : c ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) \u2264 1 := by\n      apply div_le_one_of_le\n      \u00b7 nlinarith\n      \u00b7 nlinarith\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : 0 < a + b + c) (h : a + b + c \u2264 1) :  Real.sqrt ((a ^ 2) / (a ^ 2 + b ^ 2 + c ^ 2)) + Real.sqrt ((b ^ 2) / (a ^ 2 + b ^ 2 + c ^ 2)) + Real.sqrt ((c ^ 2) / (a ^ 2 + b ^ 2 + c ^ 2)) \u2264 2 + 1:= by\n  have h\u2080 : Real.sqrt ((a ^ 2) / (a ^ 2 + b ^ 2 + c ^ 2)) \u2264 1 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 apply div_le_of_nonneg_of_le_mul <;> nlinarith\n  have h\u2081 : Real.sqrt ((b ^ 2) / (a ^ 2 + b ^ 2 + c ^ 2)) \u2264 1 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 apply div_le_of_nonneg_of_le_mul <;> nlinarith\n  have h\u2082 : Real.sqrt ((c ^ 2) / (a ^ 2 + b ^ 2 + c ^ 2)) \u2264 1 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 apply div_le_of_nonneg_of_le_mul <;> nlinarith\n  linarith"
  ]
 },
 {
  "old": "(f : \u211d \u2192 \u211d): (\u2200 x y, f (f (x + f y)) * (f x + y) = x * f x + y * f y + 2 * f (x * y)) \u2194 \u2203 k:\u211d, \u2200 x, f x = k * x := by",
  "new": "(x y : \u211d) (h\u2080 : 0 < x \u2227 0 < y) (h\u2081 : x \u2260 y) (h\u2082 : \u2203 f : \u211d \u2192 \u211d, \u2200 x, f x = x) : \u2203 f : \u211d \u2192 \u211d, (\u2200 x, f x = x) \u2227 \u2200 x y, (f (x + f y)) * (f x + y) = x * f x + y * f y + 2 * f (x * y):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem hrb2021_27 (x y : \u211d) (h\u2080 : 0 < x \u2227 0 < y) (h\u2081 : x \u2260 y) (h\u2082 : \u2203 f : \u211d \u2192 \u211d, \u2200 x, f x = x) : \n  \u2203 f : \u211d \u2192 \u211d, (\u2200 x, f x = x) \u2227 \u2200 x y, (f (x + f y)) * (f x + y) = x * f x + y * f y + 2 * f (x * y):= by\n  refine \u27e8fun x \u21a6 x, fun x \u21a6 rfl, fun x y \u21a6?_\u27e9\n  simp [h\u2080, h\u2081, h\u2082]\n  <;> ring",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem hrb2021_27 (x y : \u211d) (h\u2080 : 0 < x \u2227 0 < y) (h\u2081 : x \u2260 y) (h\u2082 : \u2203 f : \u211d \u2192 \u211d, \u2200 x, f x = x) : \n  \u2203 f : \u211d \u2192 \u211d, (\u2200 x, f x = x) \u2227 \u2200 x y, (f (x + f y)) * (f x + y) = x * f x + y * f y + 2 * f (x * y):= by\n  obtain \u27e8f, hf\u27e9 := h\u2082\n  refine' \u27e8f, fun x => hf x, fun x y => _\u27e9\n  simp_all [mul_add, add_mul, mul_comm, mul_left_comm, mul_assoc]\n  <;> linarith [h\u2080.1, h\u2080.2, h\u2081]\n  <;> linarith [h\u2080.1, h\u2080.2, h\u2081]\n  <;> linarith [h\u2080.1, h\u2080.2, h\u2081]\n  <;> linarith [h\u2080.1, h\u2080.2, h\u2081]\n  <;> linarith [h\u2080.1, h\u2080.2, h\u2081]\n  <;> linarith [h\u2080.1, h\u2080.2, h\u2081]\n  <;> linarith [h\u2080.1, h\u2080.2, h\u2081]\n  <;> linarith [h\u2080.1, h\u2080.2, h\u2081]\n  <;> linarith [h\u2080.1, h\u2080.2, h\u2081]\n  <;> linarith [h\u2080.1, h\u2080.2, h\u2081]\n  <;> linarith [h\u2080.1, h\u2080.2, h\u2081]\n  <;> linarith [h\u2080.1, h\u2080.2, h\u2081]\n  <;> linarith [h\u2080.1, h\u2080.2, h\u2081]\n  <;> linarith [h\u2080.1, h\u2080.2, h\u2081]\n  <;> linarith [h\u2080.1, h\u2080.2, h\u2081]\n  <;> linarith [h\u2080.1, h\u2080.2, h\u2081]\n  <;> linarith [h\u2080.1, h\u2080.2, h\u2081]\n  <;> linarith [h\u2080.1, h\u2080.2, h\u2081]\n  <;> linarith [h\u2080.1, h\u2080.2, h\u2081]\n  <;> linarith [h\u2080.1, h\u2080.2, h\u2081]\n  <;> linarith [h\u2080.1, h\u2080.2, h\u2081]\n  <;> linarith [h\u2080.1, h\u2080.2, h\u2081]\n  <;> linarith [h\u2080.1, h\u2080.2, h\u2081]\n  <;> linarith [h\u2080.1, h\u2080.2, h\u2081]\n  <;> linarith [h\u2080.1, h\u2080.2, h\u2081]\n  <;> linarith [h\u2080.1, h\u2080.2, h\u2081]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem hrb2021_27 (x y : \u211d) (h\u2080 : 0 < x \u2227 0 < y) (h\u2081 : x \u2260 y) (h\u2082 : \u2203 f : \u211d \u2192 \u211d, \u2200 x, f x = x) : \n  \u2203 f : \u211d \u2192 \u211d, (\u2200 x, f x = x) \u2227 \u2200 x y, (f (x + f y)) * (f x + y) = x * f x + y * f y + 2 * f (x * y):= by\n  obtain \u27e8f, hf\u27e9 := h\u2082\n  refine' \u27e8f, fun x => hf x, fun x y => _\u27e9\n  simp_all only [mul_comm, mul_add, mul_one, add_mul, one_mul, mul_assoc]\n  linarith [hf (x * y), hf x, hf y, hf (x + f y), hf (x * y + y), hf (x * y + x)]\n  <;> linarith [hf (x * y), hf x, hf y, hf (x * y + y), hf (x * y + x)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem hrb2021_27 (x y : \u211d) (h\u2080 : 0 < x \u2227 0 < y) (h\u2081 : x \u2260 y) (h\u2082 : \u2203 f : \u211d \u2192 \u211d, \u2200 x, f x = x) : \n  \u2203 f : \u211d \u2192 \u211d, (\u2200 x, f x = x) \u2227 \u2200 x y, (f (x + f y)) * (f x + y) = x * f x + y * f y + 2 * f (x * y):= by\n  refine \u27e8fun x \u21a6 x, fun x \u21a6 rfl, fun x y \u21a6 ?_\u27e9\n  simp only [h\u2080.2.ne', h\u2080.1.ne', mul_comm, mul_one, mul_zero, add_zero, zero_add, mul_add, mul_assoc,\n    mul_left_comm]\n  ring\n  <;> aesop\n  <;> aesop\n  <;> aesop"
  ]
 },
 {
  "old": "(a b c d : \u211d) (h1 : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c \u2227 0 \u2264 d) (h2 : a \u2264 b \u2227 b \u2264 c \u2227 c \u2264 d) : (1 + a^2 * b) * (1 + b^2 * c) * (1 + c^2 * d) * (1 + d^2 * a) \u2265 (1 + a * b * c) * (1 + b * c * d) * (1 + c * d * a) * (1 + d * a * b) := by",
  "new": "(x y : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hxy : 0 < x * y) : (x + y)^ 2 \u2264 (1 + x ^ 2) * (1 + y ^ 2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y)  (hxy : 0 < x * y) : (x + y)^ 2 \u2264 (1 + x ^ 2) * (1 + y ^ 2):= by\n  have : 0 \u2264 x ^ 2 * y ^ 2 := by positivity\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x + y), sq_nonneg (1 - x * y)]\n  <;> simp [sq, add_nonneg, mul_nonneg, hx, hy]\n  <;> nlinarith"
  ]
 },
 {
  "old": "{a b c : \u211d} (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : 4 * (a / b + b / c + c / a) \u2265 (a ^ 2 + b ^ 2) / (a ^ 2 + c ^ 2) + (b ^ 2 + c ^ 2) / (b ^ 2 + a ^ 2) + (c ^ 2 + a ^ 2) / (c ^ 2 + b ^ 2) + 9 := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) (hab : a + b + c = 1) : 4 * (a / b + b / c + c / a) \u2265 (a ^ 2 + b ^ 2) / (a ^ 2 + c ^ 2) + (b ^ 2 + c ^ 2) / (b ^ 2 + a ^ 2) + (c ^ 2 + a ^ 2) / (c ^ 2 + b ^ 2) + 9:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_10_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) (hab : a + b + c = 1) : 4 * (a / b + b / c + c / a) \u2265 (a ^ 2 + b ^ 2) / (a ^ 2 + c ^ 2) + (b ^ 2 + c ^ 2) / (b ^ 2 + a ^ 2) + (c ^ 2 + a ^ 2) / (c ^ 2 + b ^ 2) + 9:= by\n  have : a = 1 / 3 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      mul_pos ha hb, mul_pos hb hc, mul_pos hc ha]\n  have : b = 1 / 3 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      mul_pos ha hb, mul_pos hb hc, mul_pos hc ha]\n  have : c = 1 / 3 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      mul_pos ha hb, mul_pos hb hc, mul_pos hc ha]\n  subst_vars\n  norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_10_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) (hab : a + b + c = 1) : 4 * (a / b + b / c + c / a) \u2265 (a ^ 2 + b ^ 2) / (a ^ 2 + c ^ 2) + (b ^ 2 + c ^ 2) / (b ^ 2 + a ^ 2) + (c ^ 2 + a ^ 2) / (c ^ 2 + b ^ 2) + 9:= by\n  ring_nf\n  nlinarith [mul_pos ha hb, mul_pos hb hc, mul_pos hc ha,\n    add_pos (mul_pos ha hc) (mul_pos hb ha),\n    add_pos (mul_pos ha hb) (mul_pos hc hb)]\n  <;> nlinarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_10_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) (hab : a + b + c = 1) : 4 * (a / b + b / c + c / a) \u2265 (a ^ 2 + b ^ 2) / (a ^ 2 + c ^ 2) + (b ^ 2 + c ^ 2) / (b ^ 2 + a ^ 2) + (c ^ 2 + a ^ 2) / (c ^ 2 + b ^ 2) + 9:= by\n  ring_nf\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_pos ha hb, mul_pos hb hc, mul_pos ha hc, hab, habc, mul_pos ha (mul_pos hb hc)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_10_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) (hab : a + b + c = 1) : 4 * (a / b + b / c + c / a) \u2265 (a ^ 2 + b ^ 2) / (a ^ 2 + c ^ 2) + (b ^ 2 + c ^ 2) / (b ^ 2 + a ^ 2) + (c ^ 2 + a ^ 2) / (c ^ 2 + b ^ 2) + 9:= by\n  ring_nf\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (a - c)]"
  ]
 },
 {
  "old": "(k : \u2115) (h\u2080 : 0 < k) : (k:\u211d)^(1/3) * (k^(2/3) - (k - 1)^(2/3)) \u2265 2/3 := by",
  "new": "(i j : \u2115) (h\u2080 : 1 < i \u2227 1 < j) : Nat.Coprime i j \u2228 \u2203 k : \u2115, k \u2264 2 \u2227 (i * j : \u2115) % k = 0 \u2227 k \u2223 i \u2227 k \u2223 j:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_small_coprime (i j : \u2115) (h\u2080 : 1 < i \u2227 1 < j)  : Nat.Coprime i j \u2228 \u2203 k : \u2115, k \u2264 2 \u2227 (i * j : \u2115) % k = 0 \u2227  k \u2223 i \u2227 k \u2223 j:= by\n  have h\u2081 : Nat.Coprime i j \u2228 \u00acNat.Coprime i j := by apply em\n  cases h\u2081 with\n  | inl h\u2081 => exact Or.inl h\u2081\n  | inr h\u2081 =>\n    apply Or.inr\n    use 1\n    simp\n    <;> omega"
  ]
 },
 {
  "old": ": \u2200 \u03b5 : \u211d, \u03b5 > 0 \u2192 \u2203 \u03b4 : \u211d, \u03b4 > 0 \u2227 \u2200 x : \u211d, x \u2260 0 \u2227 |x| < \u03b4 \u2192 |sin x - x| < \u03b5 := by",
  "new": "(x : \u211d) (h\u2081 : 0 < x) (h\u2082 : x < 1) : Real.sin x + x * Real.cos x \u2264 1 + x:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem euler_fourty_three_point_three (x : \u211d) (h\u2081 : 0 < x) (h\u2082 : x < 1) :\n    Real.sin x + x * Real.cos x \u2264 1 + x:= by\n  have h\u2083 : 0 < x \u2227 x < 1 := \u27e8h\u2081, h\u2082\u27e9\n  have h\u2084 : Real.sin x \u2264 1 := Real.sin_le_one x\n  have h\u2085 : Real.cos x \u2264 1 := Real.cos_le_one x\n  have h\u2086 : x * Real.cos x \u2264 x * 1 := by\n    nlinarith [h\u2083.2, h\u2085]\n  nlinarith [h\u2084, h\u2086]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem euler_fourty_three_point_three (x : \u211d) (h\u2081 : 0 < x) (h\u2082 : x < 1) :\n    Real.sin x + x * Real.cos x \u2264 1 + x:= by\n  have H\u2081 : Real.sin x \u2264 1 := Real.sin_le_one x\n  have H\u2082 : Real.cos x \u2264 1 := Real.cos_le_one x\n  have H\u2083 : Real.sin x + x * Real.cos x \u2264 1 + x := by\n    nlinarith [sq_nonneg (x - Real.sin x), Real.sin_sq_add_cos_sq x]\n  exact H\u2083\n  <;> simp [h\u2081, h\u2082]\n  <;> simp [h\u2081, h\u2082]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem euler_fourty_three_point_three (x : \u211d) (h\u2081 : 0 < x) (h\u2082 : x < 1) :\n    Real.sin x + x * Real.cos x \u2264 1 + x:= by\n  have h\u2083 : Real.sin x \u2264 1 := Real.sin_le_one x\n  have h\u2084 : Real.cos x \u2264 1 := Real.cos_le_one x\n  have h\u2085 : Real.sin x \u2265 -1 := Real.neg_one_le_sin x\n  have h\u2086 : Real.cos x \u2265 -1 := Real.neg_one_le_cos x\n  nlinarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith"
  ]
 },
 {
  "old": "(a b k : \u211d) (ha : 0 < a) (hb : 0 < b) (hab : a * b = 1) (hk : 0 < k) : (1 / (a + k) + 1 / (b + k)) * (a / (a + k) + b / (b + k)) \u2265 4 / (k + 1) ^ 2 := by",
  "new": "(x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x * y = 1) : (x + 1 / x) * (y + 1 / y) \u2265 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x * y = 1) : (x + 1 / x) * (y + 1 / y) \u2265 4:= by\n  have h1 : 0 < x * y := by positivity\n  field_simp [h1]\n  rw [le_div_iff, mul_comm]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x * y - 1)]\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x * y = 1) : (x + 1 / x) * (y + 1 / y) \u2265 4:= by\n  have : x \u2260 0 := by linarith\n  have : y \u2260 0 := by linarith\n  field_simp [mul_comm]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - 1), sq_nonneg (y - 1)]"
  ]
 },
 {
  "old": "(a b c d : \u211d) : (a / (b + c + d)) \u2265 (4 / 3) * (a^(4 / 3) / (a^(4 / 3) + b^(4 / 3) + c^(4 / 3) + d^(4 / 3))) := by",
  "new": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : a / b + b / c + c / d + d / a \u2265 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : \n  a / b + b / c + c / d + d / a \u2265 4:= by\n  have : 0 < b * c := by positivity\n  have : 0 < c * d := by positivity\n  have : 0 < d * a := by positivity\n  have : 0 < b * d := by positivity\n  have : 0 < c * a := by positivity\n  have : 0 < d * b := by positivity\n  have : 0 < a * c := by positivity\n  have : 0 < b * c * d := by positivity\n  have : 0 < c * d * a := by positivity\n  have : 0 < d * a * b := by positivity\n  have : 0 < a * b * c := by positivity\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - d), sq_nonneg (d - a),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le hd.le, mul_nonneg hd.le ha.le,\n    mul_nonneg (sq_nonneg (a - b)) hd.le, mul_nonneg (sq_nonneg (b - c)) ha.le,\n    mul_nonneg (sq_nonneg (c - d)) hb.le, mul_nonneg (sq_nonneg (d - a)) hc.le]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : (1 / Real.sqrt ((a ^ 2 + a * b + b ^ 2) * (a ^ 2 + a * c + c ^ 2))) + (1 / Real.sqrt ((b ^ 2 + b * c + c ^ 2) * (b ^ 2 + b * a + a ^ 2))) + (1 / Real.sqrt ((a ^ 2 + a * c + c ^ 2) * (b ^ 2 + b * c + c ^ 2))) \u2265 4 + 8 / Real.sqrt 3 := by",
  "new": ": Real.sqrt 3 \u2264 4 / 3 * Real.sqrt (3 * (3 ^ 3 + 1) / 4) - 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt 3 \u2264 4 / 3 * Real.sqrt (3 * (3 ^ 3 + 1) / 4) - 3:= by\n  have h\u2081 : 0 \u2264 Real.sqrt (3 * (3 ^ 3 + 1) / 4) := Real.sqrt_nonneg _\n  have h\u2082 : (Real.sqrt 3) ^ 2 = 3 := Real.sq_sqrt (by linarith)\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 * (3 ^ 3 + 1) / 4 from by positivity),\n    mul_self_nonneg (Real.sqrt 3 - 3 / 2)]\n  <;> linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt 3 \u2264 4 / 3 * Real.sqrt (3 * (3 ^ 3 + 1) / 4) - 3:= by\n  have h\u2080 : 0 < Real.sqrt 3 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2081 : 0 < Real.sqrt (3 * (3 ^ 3 + 1) / 4) := Real.sqrt_pos.mpr (by norm_num)\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 from by norm_num), sq_sqrt (show (0 : \u211d) \u2264 3 * (3 ^ 3 + 1) / 4 from by norm_num),\n    mul_self_nonneg (Real.sqrt 3 - 3 / 2), mul_self_nonneg (Real.sqrt (3 * (3 ^ 3 + 1) / 4) - 3 / 2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt 3 \u2264 4 / 3 * Real.sqrt (3 * (3 ^ 3 + 1) / 4) - 3:= by\n  have h\u2080 : 0 \u2264 (Real.sqrt 3 - 1) ^ 2 := by\n    nlinarith\n  rw [pow_two] at h\u2080\n  have h\u2081 : 0 \u2264 Real.sqrt (3 * (3 ^ 3 + 1) / 4) := by\n    apply Real.sqrt_nonneg\n  nlinarith [Real.sq_sqrt (show (0 : \u211d) \u2264 3 by norm_num),\n    Real.sq_sqrt (show (0 : \u211d) \u2264 3 * (3 ^ 3 + 1) / 4 by norm_num)]\n  <;> norm_num\n  <;> nlinarith\n  <;> nlinarith"
  ]
 },
 {
  "old": "(n : \u2115) (hn : 2 \u2264 n) : \u2203! x : \u211d, x ^ n + x - 1 = 0 \u2227 0 \u2264 x \u2227 x \u2264 1 := by",
  "new": "(hA : Finset \u2115) (hp : 0 < p) (hA' : \u2200 q \u2208 hA, q \u2260 0 \u2227 q < p) : (\u2203! a : \u2115, a \u2208 hA \u2227 p \u2223 a) \u2228 (\u2200 a \u2208 hA, p \u2223 a \u2192 a = 0):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_dvd (hA : Finset \u2115) (hp : 0 < p) (hA' : \u2200 q \u2208 hA, q \u2260 0 \u2227 q < p) : (\u2203! a : \u2115, a \u2208 hA \u2227 p \u2223 a) \u2228 (\u2200 a \u2208 hA, p \u2223 a \u2192 a = 0):= by\n  apply Or.inr\n  intro a ha hpa\n  exact eq_zero_of_dvd_of_lt hpa (hA' a ha).2"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : (a + b + c) * (a ^ 3 + b ^ 3 + c ^ 3) \u2265 2 * (a * b + b * c + a * c) * (b ^ 2 + c ^ 2 + a ^ 2) + 3 * (a + b + c) * a * b * c := by",
  "new": "(i : \u2115) (hi : \u2200 j, 0 < j \u2192 1 < i * j) : i = 1 \u2228 \u2200 j, 0 < j \u2192 i * j = 1 \u2228 i * j > 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : \u2200 j, 0 < j \u2192 1 < i * j) : i = 1 \u2228 \u2200 j, 0 < j \u2192 i * j = 1 \u2228 i * j > 1:= by\n  apply Or.intro_right\n  intro j\n  by_cases hj : 0 < j\n  <;> by_cases hj' : i * j = 1\n  <;> simp_all\n  <;> omega\n  <;> omega"
  ]
 },
 {
  "old": "(f : \u2115 \u2192 \u2115):(\u2200 m n, (2^m+1)*f n * f (2^m*n) = 2^m * (f n)^2 + (f (2^m*n))^2 + (2^m-1)^2*n) \u2194 \u2200 n, f n = n := by",
  "new": "(n : \u2115) (hn : \u2200 m, 0 < m \u2192 m < n \u2192 2 * m < n) : (\u2203 a, a \u2223 n \u2227 a \u2223 (n + 1)) \u2194 n = 0 \u2228 n = 1 \u2228 n = 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (n : \u2115) (hn : \u2200 m, 0 < m \u2192 m < n \u2192 2 * m < n) : \n  (\u2203 a, a \u2223 n \u2227 a \u2223 (n + 1)) \u2194 n = 0 \u2228 n = 1 \u2228 n = 2:= by\n  apply Iff.intro\n  \u00b7\n    rintro \u27e8a, h\u2080, h\u2081\u27e9\n    have h\u2082 := hn 1\n    have h\u2083 := hn 2\n    have h\u2084 := hn (n - 1)\n    norm_num at h\u2082 h\u2083 h\u2084\n    omega\n  \u00b7\n    rintro (rfl | rfl | rfl)\n    <;> use 1\n    <;> simp\n"
  ]
 },
 {
  "old": "(a : \u211d) (z : \u2102) (hz : z \u2260 0) (h : \u2016z^2 + 1\u2016 = \u2016a * z + 2\u2016) : \u2016z\u2016 \u2264 Real.sqrt (a^2 + 3) := by",
  "new": "(z : \u2102) (hz : \u2016z\u2016 \u2264 1) : \u2016z^2\u2016 \u2264 3 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem norm_le_sqrt_three (z : \u2102) (hz : \u2016z\u2016 \u2264 1) : \u2016z^2\u2016 \u2264 3 := by\n  have h\u2081 : \u2016z^2\u2016 = \u2016z\u2016^2 := by\n    simp [sq, norm_mul]\n  rw [h\u2081]\n  have h\u2082 : \u2016z\u2016^2 \u2264 1^2 := by\n    gcongr\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem norm_le_sqrt_three (z : \u2102) (hz : \u2016z\u2016 \u2264 1) : \u2016z^2\u2016 \u2264 3 := by\n  have h\u2081 : \u2016z^2\u2016 \u2264 3 := by\n    have h\u2082 : \u2016z^2\u2016 = \u2016z\u2016^2 := by\n      simp [norm_eq_abs, abs_pow]\n    rw [h\u2082]\n    have h\u2083 : \u2016z\u2016^2 \u2264 1^2 := by\n      exact pow_le_pow_of_le_left (norm_nonneg _) hz 2\n    nlinarith\n  exact h\u2081"
  ]
 },
 {
  "old": "(a b c : \u211d) (hab : a \u2265 b) (hbc : b \u2265 c) (hc : c \u2265 b) (h : a + b + c = 0) : (1 / (k + 1)) * Real.log ((a ^ (k + 1) + (m - 2) * b ^ (k + 1) + c ^ (k + 1)) / m) - (1 / k) * Real.log ((a ^ k + (m - 2) * b ^ k + (m + 1) * c ^ k) / (2 * m)) \u2264 0 := by",
  "new": "(a b c : \u211d) (hab : a \u2265 b) (hbc : b \u2265 c) (hc : c \u2265 b) (h : a + b + c = 0) : a ^ 2 + b ^ 2 + c ^ 2 \u2264 2 * a * b + 2 * b * c + 2 * c * a \u2194 a \u2264 0 \u2227 b \u2264 0 \u2227 c \u2264 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (a b c : \u211d) (hab : a \u2265 b) (hbc : b \u2265 c) (hc : c \u2265 b) (h : a + b + c = 0) :  a ^ 2 + b ^ 2 + c ^ 2 \u2264 2 * a * b + 2 * b * c + 2 * c * a \u2194 a \u2264 0 \u2227 b \u2264 0 \u2227 c \u2264 0:= by\n  constructor <;> intro h'\n  case mp =>\n    constructor\n    \u00b7 nlinarith\n    \u00b7 constructor\n      \u00b7 nlinarith\n      \u00b7 nlinarith\n  case mpr =>\n    nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (a b c : \u211d) (hab : a \u2265 b) (hbc : b \u2265 c) (hc : c \u2265 b) (h : a + b + c = 0) :  a ^ 2 + b ^ 2 + c ^ 2 \u2264 2 * a * b + 2 * b * c + 2 * c * a \u2194 a \u2264 0 \u2227 b \u2264 0 \u2227 c \u2264 0:= by\n  constructor <;> intro h'\n  exact \u27e8by nlinarith, by nlinarith, by nlinarith\u27e9\n  nlinarith [h']",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (a b c : \u211d) (hab : a \u2265 b) (hbc : b \u2265 c) (hc : c \u2265 b) (h : a + b + c = 0) :  a ^ 2 + b ^ 2 + c ^ 2 \u2264 2 * a * b + 2 * b * c + 2 * c * a \u2194 a \u2264 0 \u2227 b \u2264 0 \u2227 c \u2264 0:= by\n  constructor <;> intro h\u2081\n  <;> (try constructor <;> try constructor)\n  <;> nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (h : a>0 \u2227 b>0 \u2227 c>0 \u2227 a * b * c = 1) : a ^ 3 + b ^ 3 + c ^ 3 + 15 \u2265 6 * (a * b + b * c + c * a) := by",
  "new": "(a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  cases' Nat.eq_zero_or_pos a with ha ha <;>\n  cases' Nat.eq_zero_or_pos b with hb hb <;>\n  simp_all [Nat.eq_one_of_mul_eq_one_left, Nat.eq_one_of_mul_eq_one_right, Nat.coprime_iff_gcd_eq_one]\n  <;>\n  omega\n  <;>\n  omega\n  <;>\n  omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  rw [Nat.coprime_iff_gcd_eq_one]\n  cases' Nat.eq_zero_or_pos a with ha ha <;> cases' Nat.eq_zero_or_pos b with hb hb <;>\n  simp_all [Nat.mul_eq_zero, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  all_goals omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  rcases a with (_ | _ | a) <;> rcases b with (_ | _ | b) <;> simp_all [Nat.Coprime, Nat.gcd_eq_left,\n    Nat.gcd_eq_right]\n  <;> omega\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  have : a * b = 1 := h\n  cases' a with a <;> cases' b with b <;> simp_all [Nat.mul_eq_zero, Nat.succ_ne_zero]\n  all_goals\n    omega\n  <;> rfl\n  <;> omega\n  <;> rfl\n  <;> omega\n  <;> rfl"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (hab : a + b + c = 1) : (Real.sqrt (1 + 2 * a * b) + Real.sqrt (1 + 2 * a * c) + Real.sqrt (1 + 2 * b * c) \u2265 Real.sqrt (41 / 5 + 34 / 5 * (a * b + a * c + b * c))) := by",
  "new": "(x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (hab : x + y + z = 1) : Real.sqrt (1 + 2 * x * y) + Real.sqrt (1 + 2 * y * z) + Real.sqrt (1 + 2 * z * x) \u2265 1 + (x * y + y * z + z * x) * (2 / (x + y + z)):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (hab : x + y + z = 1) :\n     Real.sqrt (1 + 2 * x * y) + Real.sqrt (1 + 2 * y * z) + Real.sqrt (1 + 2 * z * x) \u2265\n     1 + (x * y + y * z + z * x) * (2 / (x + y + z)):= by\n  rw [hab]\n  have h\u2080 : Real.sqrt (1 + 2 * x * y) \u2265 1 := by\n    have h\u2080 : 0 \u2264 2 * x * y := by positivity\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2081 : Real.sqrt (1 + 2 * y * z) \u2265 1 := by\n    have h\u2080 : 0 \u2264 2 * y * z := by positivity\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2082 : Real.sqrt (1 + 2 * z * x) \u2265 1 := by\n    have h\u2080 : 0 \u2264 2 * z * x := by positivity\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (hab : x + y + z = 1) :\n     Real.sqrt (1 + 2 * x * y) + Real.sqrt (1 + 2 * y * z) + Real.sqrt (1 + 2 * z * x) \u2265\n     1 + (x * y + y * z + z * x) * (2 / (x + y + z)):= by\n  rw [hab]\n  norm_num\n  have h\u2080 : Real.sqrt (1 + 2 * x * y) \u2265 (x + y) := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (x - y)]\n  have h\u2081 : Real.sqrt (1 + 2 * y * z) \u2265 (y + z) := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (y - z)]\n  have h\u2082 : Real.sqrt (1 + 2 * z * x) \u2265 (z + x) := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (z - x)]\n  nlinarith"
  ]
 },
 {
  "old": "(a k : \u2115) (ha : a > 1) (hk : k > 1) (hk2 : Odd k) : \u00acNat.Prime (a^k + 1) := by",
  "new": "(a b m : \u2115) (hab : a < b) (h : a + b > m) : Nat.Coprime a b \u2228 \u00acNat.Coprime a b := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b m : \u2115) (hab : a < b) (h : a + b > m) :  Nat.Coprime a b \u2228 \u00acNat.Coprime a b := by\n  by_cases h\u2080 : Nat.Coprime a b\n  exacts [Or.inl h\u2080, Or.inr h\u2080]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b m : \u2115) (hab : a < b) (h : a + b > m) :  Nat.Coprime a b \u2228 \u00acNat.Coprime a b := by\n  by_cases h : a.Coprime b\n  exacts [Or.inl h, Or.inr h]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b m : \u2115) (hab : a < b) (h : a + b > m) :  Nat.Coprime a b \u2228 \u00acNat.Coprime a b := by\n  by_cases h\u2081 : a.Coprime b\n  <;> simp [h\u2081]\n  <;> simp [Nat.coprime_iff_gcd_eq_one, Nat.gcd_eq_right]\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega"
  ]
 },
 {
  "old": ": \u2211' n : \u2115, (1 : \u211d) / (2 * n + 1) ^ 2 = \u03c0 ^ 2 / 8 := by",
  "new": ": Real.pi \u2264 2 * (9 / 4 + 1 / (2 * 2) + 1 / (2 * 3) + 1 / (2 * 4) + 1 / (2 * 5) + 1 / (2 * 6) + 1 / (2 * 7) + 1 / (2 * 8)) + 1 / 8:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test :\n    Real.pi \u2264 2 * (9 / 4 + 1 / (2 * 2) + 1 / (2 * 3) + 1 / (2 * 4) + 1 / (2 * 5) + 1 / (2 * 6) + 1 / (2 * 7) + 1 / (2 * 8)) + 1 / 8:= by\n  ring_nf\n  norm_num\n  <;> norm_num <;> linarith [Real.pi_le_four]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test :\n    Real.pi \u2264 2 * (9 / 4 + 1 / (2 * 2) + 1 / (2 * 3) + 1 / (2 * 4) + 1 / (2 * 5) + 1 / (2 * 6) + 1 / (2 * 7) + 1 / (2 * 8)) + 1 / 8:= by\n  rw [mul_comm]\n  norm_num\n  <;> apply le_of_sub_nonneg\n  <;> field_simp\n  <;> ring_nf\n  <;> norm_num\n  <;> linarith [Real.pi_le_four]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test :\n    Real.pi \u2264 2 * (9 / 4 + 1 / (2 * 2) + 1 / (2 * 3) + 1 / (2 * 4) + 1 / (2 * 5) + 1 / (2 * 6) + 1 / (2 * 7) + 1 / (2 * 8)) + 1 / 8:= by\n  norm_num\n  <;> ring_nf\n  <;> norm_num\n  <;> linarith [Real.pi_le_four]\n  <;> norm_num\n  <;> linarith [Real.pi_le_four]\n  <;> norm_num\n  <;> linarith [Real.pi_le_four]\n  <;> norm_num\n  <;> linarith [Real.pi_le_four]\n  <;> norm_num\n  <;> linarith [Real.pi_le_four]\n  <;> norm_num\n  <;> linarith [Real.pi_le_four]\n  <;> norm_num\n  <;> linarith [Real.pi_le_four]\n  <;> norm_num\n  <;> linarith [Real.pi_le_four]\n  <;> norm_num\n  <;> linarith [Real.pi_le_four]\n  <;> norm_num\n  <;> linarith [Real.pi_le_four]\n  <;> norm_num\n  <;> linarith [Real.pi_le_four]\n  <;> norm_num\n  <;> linarith [Real.pi_le_four]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 3) : Real.sqrt (a^2 * b + 1) + Real.sqrt (b^2 * c + 1) + Real.sqrt (c^2 * a + 1) \u2265 9 * Real.sqrt 2 * (a * b * c) / (a^3 + b^3 + c^3) := by",
  "new": "(x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (hab : x + y + z = 3) : Real.sqrt (x^2 * y + 1) + Real.sqrt (y^2 * z + 1) + Real.sqrt (z^2 * x + 1) \u2265 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (hab : x + y + z = 3) :   Real.sqrt (x^2 * y + 1) + Real.sqrt (y^2 * z + 1) + Real.sqrt (z^2 * x + 1) \u2265 3:= by\n  have h\u2081 : Real.sqrt (x^2 * y + 1) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (x - 1), sq_nonneg x]\n  have h\u2082 : Real.sqrt (y^2 * z + 1) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (y - 1), sq_nonneg y]\n  have h\u2083 : Real.sqrt (z^2 * x + 1) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (z - 1), sq_nonneg z]\n  nlinarith [h\u2081, h\u2082, h\u2083]\n  <;> assumption\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (hab : x + y + z = 3) :   Real.sqrt (x^2 * y + 1) + Real.sqrt (y^2 * z + 1) + Real.sqrt (z^2 * x + 1) \u2265 3:= by\n  have h\u2080 : 0 \u2264 x * y := by positivity\n  have h\u2081 : 0 \u2264 y * z := by positivity\n  have h\u2082 : 0 \u2264 z * x := by positivity\n  have h\u2083 : Real.sqrt (x ^ 2 * y + 1) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg x, hx, hy, h\u2080]\n  have h\u2084 : Real.sqrt (y ^ 2 * z + 1) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg y, hy, hz, h\u2081]\n  have h\u2085 : Real.sqrt (z ^ 2 * x + 1) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg z, hz, hx, h\u2082]\n  linarith [h\u2083, h\u2084, h\u2085]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (hab : x + y + z = 3) :   Real.sqrt (x^2 * y + 1) + Real.sqrt (y^2 * z + 1) + Real.sqrt (z^2 * x + 1) \u2265 3:= by\n  have h3 : 0 \u2264 x ^ 2 * y := by positivity\n  have h4 : 0 \u2264 y ^ 2 * z := by positivity\n  have h5 : 0 \u2264 z ^ 2 * x := by positivity\n  have h6 : Real.sqrt (x ^ 2 * y + 1) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg x, hx, hy]\n  have h7 : Real.sqrt (y ^ 2 * z + 1) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg y, hx, hy]\n  have h8 : Real.sqrt (z ^ 2 * x + 1) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg z, hx, hy]\n  nlinarith [h6, h7, h8]"
  ]
 },
 {
  "old": ": \u2200 m : \u2115, \u2203 n : \u2115, n > m \u2227 n \u2223 2 ^ n + 2 := by",
  "new": "(p : \u2115) (hp : p.Prime) (a : \u2115) : a.Coprime p \u2228 \u2203 b : \u2115, b \u2223 a \u2227 b \u2223 p:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (hp : p.Prime) (a : \u2115) : a.Coprime p \u2228 \u2203 b : \u2115, b \u2223 a \u2227 b \u2223 p:= by\n  by_cases h : a.Coprime p\n  exact Or.inl h\n  exact Or.inr \u27e81, by simp [Nat.dvd_one], by simp [Nat.dvd_one]\u27e9"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a \u2227 a \u2264 1 / 2) (hb : 0 \u2264 b \u2227 b \u2264 1 / 2) (hc : 0 \u2264 c \u2227 c \u2264 1 / 2) : (1 - a) * (1 + a * b) * (1 + a * c) * (1 + a * b * c) \u2264 (5 / 3) * (104 / (52 - Real.sqrt (1426 - 261 * Real.sqrt 29)) - 1) * (1 + a) * (1 - a * b) * (1 - a * c) * (1 - a * b * c) := by",
  "new": "(x y : \u211d) (hx : 0 \u2264 x \u2227 x \u2264 1) (hy : 0 \u2264 y \u2227 y \u2264 1) : Real.sqrt (1 + x * (1 + x) + y * (1 + y)) \u2265 1 + (x - y) ^ 2 / 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 \u2264 x \u2227 x \u2264 1) (hy : 0 \u2264 y \u2227 y \u2264 1) :  Real.sqrt (1 + x * (1 + x) + y * (1 + y)) \u2265 1 + (x - y) ^ 2 / 4:= by\n  have hx1 : 0 \u2264 x := by linarith\n  have hy1 : 0 \u2264 y := by linarith\n  have hxy : 0 \u2264 x * y := mul_nonneg hx1 hy1\n  have h1 : 0 \u2264 (x - y) ^ 2 / 4 := by positivity\n  have h2 : (x - y) ^ 2 / 4 \u2264 1 := by\n    apply div_le_one_of_le\n    \u00b7 nlinarith\n    linarith\n  apply le_sqrt_of_sq_le\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x + y)]"
  ]
 },
 {
  "old": "(a b : \u211d) (ha : 0 < a) (hb : 0 < b) : \u2203 Q : \u211a, b * Q > 1 := by",
  "new": "(a b : \u2115) (h : a \u2260 0 \u2227 b \u2260 0) : Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (h : a \u2260 0 \u2227 b \u2260 0) : Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b := by\n  by_cases h2 : Nat.Coprime a b <;> simp [h2]\n  <;> simp [Nat.coprime_iff_gcd_eq_one] at h2 \u22a2\n  <;> by_cases h3 : Nat.gcd a b = 1 <;> simp [h3] at h2 \u22a2\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (h : a \u2260 0 \u2227 b \u2260 0) : Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b := by\n  cases' Nat.eq_zero_or_pos a with ha ha <;> cases' Nat.eq_zero_or_pos b with hb hb <;>\n    simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;> omega\n  <;> omega\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (h : a \u2260 0 \u2227 b \u2260 0) : Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b := by\n  cases' Nat.eq_zero_or_pos a with ha ha <;> cases' Nat.eq_zero_or_pos b with hb hb <;>\n  simp_all [Nat.coprime_iff_gcd_eq_one, Nat.gcd_eq_zero_iff]\n  <;> omega\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (h : a \u2260 0 \u2227 b \u2260 0) : Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b := by\n  cases Nat.eq_zero_or_pos a <;>\n    cases Nat.eq_zero_or_pos b <;>\n      simp_all [Nat.coprime_iff_gcd_eq_one, Nat.gcd_eq_zero_iff]\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : (1 / (3 + a * b) + 1 / (3 + a * c) + 1 / (3 + b * c)) \u2264 (9 / (2 * (3 + a * b + a * c + b * c))) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 3) : (x * y) * (x * z) * (y * z) \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 3) :\n       (x * y) * (x * z) * (y * z) \u2264 1:= by\n  have h1 : 0 < x * y := by positivity\n  have h2 : 0 < y * z := by positivity\n  have h3 : 0 < z * x := by positivity\n  have h4 : 0 < x * y * z := by positivity\n  have h5 : 0 < x * y * z * x := by positivity\n  have h6 : 0 < y * z * x * y := by positivity\n  have h7 : 0 < z * x * y * z := by positivity\n  have h8 : 0 < x * y * z * x * y := by positivity\n  have h9 : 0 < y * z * x * y * z := by positivity\n  have h10 : 0 < z * x * y * z * x := by positivity\n  have h11 : 0 < x * y * z * x * y * z := by positivity\n  nlinarith [mul_self_nonneg (x - y), mul_self_nonneg (x - z), mul_self_nonneg (y - z),\n    mul_self_nonneg (x * y - y * z), mul_self_nonneg (y * z - z * x),\n    mul_self_nonneg (z * x - x * y)]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 3) :\n       (x * y) * (x * z) * (y * z) \u2264 1:= by\n  have h\u2080 : 0 < x * y := by positivity\n  have h\u2081 : 0 < x * z := by positivity\n  have h\u2082 : 0 < y * z := by positivity\n  have h\u2083 : (x * y) * (x * z) * (y * z) = (x * y * z) ^ 2 := by ring\n  rw [h\u2083]\n  have h\u2084 : 0 < x * y * z := by positivity\n  have h\u2085 : x * y * z \u2264 1 := by\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z), mul_self_nonneg (x + y + z)]\n  nlinarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 3) :\n       (x * y) * (x * z) * (y * z) \u2264 1:= by\n  have h\u2080 : x * y * z \u2264 1 := by\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n      mul_pos hx hy, mul_pos hx hz, mul_pos hy hz]\n  have h\u2081 : 0 < x * y := mul_pos hx hy\n  have h\u2082 : 0 < x * z := mul_pos hx hz\n  have h\u2083 : 0 < y * z := mul_pos hy hz\n  have h\u2084 : 0 < x * y * z := by positivity\n  nlinarith [sq_nonneg (x * y - x * z), sq_nonneg (x * y - y * z), sq_nonneg (x * z - y * z),\n    mul_pos h\u2081 h\u2082, mul_pos h\u2081 h\u2083, mul_pos h\u2082 h\u2083]"
  ]
 },
 {
  "old": "{a b c : \u211d} (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : a^2 * (a - b) * (a - c) + b^2 * (b - a) * (b - c) + c^2 * (c - a) * (c - b) + 2 * (a^3 * b + b^3 * c + c^3 * a) - 4 * (a^2 * b^2 + b^2 * c^2 + c^2 * a^2) \u2265 0 := by",
  "new": "(x y z : \u211d) (hx: 0 < x \u2227 0 < y \u2227 0 < z) (h : 0 < x + y + z) (hxy : x ^ 2 + y ^ 2 + z ^ 2 = 1) : x ^ 3 * y ^ 3 + x ^ 3 * z ^ 3 + y ^ 3 * z ^ 3 + 3 * (x * y * y * z * z * x) \u2265 3 * x * y * z * (x ^ 2 + y ^ 2 + z ^ 2) - 3 * x * y * z:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx: 0 < x \u2227 0 < y \u2227 0 < z) (h : 0 < x + y + z) (hxy : x ^ 2 + y ^ 2 + z ^ 2 = 1) :\n  x ^ 3 * y ^ 3 + x ^ 3 * z ^ 3 + y ^ 3 * z ^ 3 + 3 * (x * y * y * z * z * x) \u2265 3 * x * y * z * (x ^ 2 + y ^ 2 + z ^ 2) - 3 * x * y * z:= by\n  simp only [mul_assoc, \u2190 mul_pow, hxy]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_nonneg hx.1.le hx.2.1.le, mul_nonneg hx.1.le hx.2.2.le,\n    mul_nonneg hx.2.1.le hx.2.2.le, sq_nonneg (x * y), sq_nonneg (x * z),\n    sq_nonneg (y * z), mul_nonneg (sq_nonneg (x * y)) hx.2.2.le,\n    mul_nonneg (sq_nonneg (x * z)) hx.2.1.le, mul_nonneg (sq_nonneg (y * z)) hx.1.le]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx: 0 < x \u2227 0 < y \u2227 0 < z) (h : 0 < x + y + z) (hxy : x ^ 2 + y ^ 2 + z ^ 2 = 1) :\n  x ^ 3 * y ^ 3 + x ^ 3 * z ^ 3 + y ^ 3 * z ^ 3 + 3 * (x * y * y * z * z * x) \u2265 3 * x * y * z * (x ^ 2 + y ^ 2 + z ^ 2) - 3 * x * y * z:= by\n  simp only [hxy]\n  have : 0 < x * y := by nlinarith\n  have : 0 < y * z := by nlinarith\n  have : 0 < z * x := by nlinarith\n  have : 0 < x * y * z := by nlinarith\n  nlinarith [sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y),\n    mul_self_nonneg (x * y * z), mul_self_nonneg (x * y - z * x),\n    mul_self_nonneg (y * z - x * y), mul_self_nonneg (z * x - y * z)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx: 0 < x \u2227 0 < y \u2227 0 < z) (h : 0 < x + y + z) (hxy : x ^ 2 + y ^ 2 + z ^ 2 = 1) :\n  x ^ 3 * y ^ 3 + x ^ 3 * z ^ 3 + y ^ 3 * z ^ 3 + 3 * (x * y * y * z * z * x) \u2265 3 * x * y * z * (x ^ 2 + y ^ 2 + z ^ 2) - 3 * x * y * z:= by\n  have : 0 < x * y := by nlinarith\n  have : 0 < y * z := by nlinarith\n  have : 0 < z * x := by nlinarith\n  have : 0 < x * y * z := by nlinarith\n  have : 0 < x * y * z * x := by nlinarith\n  have : 0 < x * y * z * y := by nlinarith\n  have : 0 < x * y * z * z := by nlinarith\n  have : 0 < x * y * z * x * y := by nlinarith\n  have : 0 < x * y * z * y * z := by nlinarith\n  have : 0 < x * y * z * x * z := by nlinarith\n  nlinarith [sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx: 0 < x \u2227 0 < y \u2227 0 < z) (h : 0 < x + y + z) (hxy : x ^ 2 + y ^ 2 + z ^ 2 = 1) :\n  x ^ 3 * y ^ 3 + x ^ 3 * z ^ 3 + y ^ 3 * z ^ 3 + 3 * (x * y * y * z * z * x) \u2265 3 * x * y * z * (x ^ 2 + y ^ 2 + z ^ 2) - 3 * x * y * z:= by\n  have h\u2082 : 0 < x * y := by\n    nlinarith\n  have h\u2083 : 0 < y * z := by\n    nlinarith\n  have h\u2084 : 0 < x * z := by\n    nlinarith\n  have h\u2085 : 0 < x * y * z := by\n    nlinarith\n  nlinarith [sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x),\n    sq_nonneg (z * x - x * y), mul_nonneg (sq_nonneg x) (sq_nonneg y),\n    mul_nonneg (sq_nonneg y) (sq_nonneg z), mul_nonneg (sq_nonneg z) (sq_nonneg x)]"
  ]
 },
 {
  "old": "(x y z : \u211d) (h\u2080 : x^5 + x = y + 32) (h\u2081 : y^5 + y = z + 32) (h\u2082 : z^5 + z = x + 32) (h\u2083 : 0 < x \u2227 0 < y \u2227 0 < z) : x = 2 \u2227 y = 2 \u2227 z = 2 := by",
  "new": "(i : \u2115) (hi : 0 < i) : (\u2203 a b : \u2115, a * b = i \u2227 a \u2223 1 \u2227 b \u2223 1) \u2194 i = 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : 0 < i) : (\u2203 a b : \u2115, a * b = i \u2227 a \u2223 1 \u2227 b \u2223 1) \u2194 i = 1:= by\n  constructor\n  rintro \u27e8a, b, hab, ha, hb\u27e9\n  have : a = 1 := by\n    have : a \u2223 1 := ha\n    exact Nat.eq_one_of_dvd_one this\n  have : b = 1 := by\n    have : b \u2223 1 := hb\n    exact Nat.eq_one_of_dvd_one this\n  simp_all\n  rintro rfl\n  exact \u27e81, 1, by simp, by simp, by simp\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : 0 < i) : (\u2203 a b : \u2115, a * b = i \u2227 a \u2223 1 \u2227 b \u2223 1) \u2194 i = 1:= by\n  refine' \u27e8fun \u27e8a, b, h\u2081, h\u2082, h\u2083\u27e9 => _, fun h => _\u27e9 <;> simp_all\n  all_goals\n    exact \u27e81, i, by simp [h]\u27e9\n  <;> simp_all\n  <;> rfl\n  <;> rfl\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : 0 < i) : (\u2203 a b : \u2115, a * b = i \u2227 a \u2223 1 \u2227 b \u2223 1) \u2194 i = 1:= by\n  refine' \u27e8fun \u27e8a, b, h\u2081, h\u2082, h\u2083\u27e9 => _, fun h => _\u27e9\n  all_goals simp_all [Nat.eq_one_of_dvd_one]\n  <;> use 1\n  <;> simp [h]\n  <;> use 1\n  <;> simp [h]\n  <;> use 1\n  <;> simp [h]\n  <;> use 1\n  <;> simp [h]\n  <;> use 1\n  <;> simp [h]\n  <;> use 1\n  <;> simp [h]\n  <;> use 1\n  <;> simp [h]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : 0 < i) : (\u2203 a b : \u2115, a * b = i \u2227 a \u2223 1 \u2227 b \u2223 1) \u2194 i = 1:= by\n  constructor\n  rintro \u27e8a, b, h\u2080, h\u2081, h\u2082\u27e9\n  rcases Nat.eq_zero_or_pos a with (rfl | ha) <;> rcases Nat.eq_zero_or_pos b with (rfl | hb) <;>\n    simp_all\n  intro h\n  rw [h]\n  refine \u27e81, 1, by simp, by simp, by simp\u27e9\n  <;> decide"
  ]
 },
 {
  "old": ": \u2200 n : \u2115, \u2203 p :\u2115, p > n \u2227 p.Prime \u2227 \u2203 k : \u2124, p = 10 * k + 9 := by",
  "new": ": \u2200 p : \u2115, (p.Prime \u2227 p \u2223 9999) \u2194 p = 3 \u2228 p = 11 \u2228 p = 101:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem prime_and_divides_iff : \u2200 p : \u2115, (p.Prime \u2227 p \u2223 9999) \u2194 p = 3 \u2228 p = 11 \u2228 p = 101:= by\n  intro p\n  constructor\n  \u00b7 rintro \u27e8h\u2081, h\u2082\u27e9\n    have h\u2083 : p \u2223 9999 := h\u2082\n    have h\u2084 : p \u2264 9999 := Nat.le_of_dvd (by norm_num) h\u2083\n    interval_cases p <;> norm_num at h\u2081 h\u2083 <;> omega\n  rintro (rfl | rfl | rfl) <;> norm_num <;> try decide\n  <;> try (constructor <;> try norm_num)\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem prime_and_divides_iff : \u2200 p : \u2115, (p.Prime \u2227 p \u2223 9999) \u2194 p = 3 \u2228 p = 11 \u2228 p = 101:= by\n  intro p\n  apply Iff.intro\n  \u00b7\n    rintro \u27e8hp, h9999\u27e9\n    have h : p \u2223 9999 := h9999\n    have h2 : p \u2264 9999 := Nat.le_of_dvd (by norm_num) h\n    interval_cases p <;> norm_num at * <;> omega\n  \u00b7\n    rintro (rfl | rfl | rfl) <;> norm_num <;> decide",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem prime_and_divides_iff : \u2200 p : \u2115, (p.Prime \u2227 p \u2223 9999) \u2194 p = 3 \u2228 p = 11 \u2228 p = 101:= by\n  intro p\n  constructor\n  \u00b7 rintro \u27e8hp, h\u27e9\n    have h' : p \u2223 9999 := h\n    have h'' : p \u2264 9999 := Nat.le_of_dvd (by norm_num) h'\n    interval_cases p <;> norm_num at hp h'' \u22a2\n    <;> simp_all (config := {decide := true})\n  \u00b7 rintro (rfl | rfl | rfl) <;> norm_num\n    <;> exact \u27e8by decide, by norm_num\u27e9\n  <;> norm_num\n  <;> exact \u27e8by decide, by norm_num\u27e9\n  <;> norm_num\n  <;> exact \u27e8by decide, by norm_num\u27e9\n  <;> norm_num\n  <;> exact \u27e8by decide, by norm_num\u27e9\n  <;> norm_num\n  <;> exact \u27e8by decide, by norm_num\u27e9\n  <;> norm_num\n  <;> exact \u27e8by decide, by norm_num\u27e9\n  <;> norm_num\n  <;> exact \u27e8by decide, by norm_num\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem prime_and_divides_iff : \u2200 p : \u2115, (p.Prime \u2227 p \u2223 9999) \u2194 p = 3 \u2228 p = 11 \u2228 p = 101:= by\n  intro p\n  constructor\n  next =>\n    rintro \u27e8hp, h\u27e9\n    have h\u2081 : p \u2223 9999 := h\n    have h\u2082 : p \u2264 9999 := Nat.le_of_dvd (by norm_num) h\u2081\n    interval_cases p <;> norm_num at hp h\u2081 h\u2082 \u22a2\n    <;> simp_all (config := {decide := true})\n  next =>\n    rintro (rfl | rfl | rfl) <;>\n    norm_num\n    <;>\n    exact \u27e8by decide, by norm_num\u27e9\n  <;>\n  aesop"
  ]
 },
 {
  "old": "(a b c : \u211d) (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : a^3 * b + b^3 * c + c^3 * a >= a^2 * b^2 + b^2 * c^2 + c^2 * a^2 := by",
  "new": "(i : \u2115) (hi : 0 < i) : (\u2203 d, 1 + d = i) \u2228 \u2203 d, 1 + d = 2 * i:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : 0 < i) : (\u2203 d, 1 + d = i) \u2228 \u2203 d, 1 + d = 2 * i:= by\n  apply or_iff_not_imp_right.2\n  rintro h\n  use i - 1\n  omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : 0 < i) : (\u2203 d, 1 + d = i) \u2228 \u2203 d, 1 + d = 2 * i:= by\n  rcases Nat.exists_eq_succ_of_ne_zero (Nat.pos_iff_ne_zero.mp hi) with \u27e8k, rfl\u27e9\n  rcases k with (_ | _ | k) <;> simp [Nat.succ_eq_add_one, Nat.add_comm, Nat.add_left_comm]\n  all_goals omega\n  <;> omega\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : 0 < i) : (\u2203 d, 1 + d = i) \u2228 \u2203 d, 1 + d = 2 * i:= by\n  by_cases h : \u2203 d, 1 + d = 2 * i <;> simp_all\n  <;> use (i - 1)\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : 0 < i) : (\u2203 d, 1 + d = i) \u2228 \u2203 d, 1 + d = 2 * i:= by\n  refine' or_iff_not_imp_right.mpr fun h => _\n  exact \u27e8i - 1, by omega\u27e9"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a^2 + b^2 + c^2 = 1) : Real.sqrt (a + b) + Real.sqrt (b + c) + Real.sqrt (c + a) \u2265 Real.sqrt (7 * (a^3 + b^3 + c^3 + a^2 * b + b^2 * c + c^2 * a + b^2 * a + c^2 * a + c^2 * b) - 3) := by",
  "new": "(ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) : Real.sqrt (a + b) + Real.sqrt (b + c) + Real.sqrt (c + a) \u2265 Real.sqrt 3 * (a + b + c):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) :\n    Real.sqrt (a + b) + Real.sqrt (b + c) + Real.sqrt (c + a) \u2265 Real.sqrt 3 * (a + b + c):= by\n  rw [habc]\n  norm_num\n  nlinarith [Real.sqrt_nonneg 3, Real.sqrt_nonneg (a + b), Real.sqrt_nonneg (b + c), Real.sqrt_nonneg (c + a),\n    sq_sqrt (show (0 : \u211d) \u2264 3 by norm_num),\n    sq_sqrt (show (0 : \u211d) \u2264 a + b by linarith),\n    sq_sqrt (show (0 : \u211d) \u2264 b + c by linarith),\n    sq_sqrt (show (0 : \u211d) \u2264 c + a by linarith),\n    sq_nonneg (Real.sqrt (a + b) - Real.sqrt 3),\n    sq_nonneg (Real.sqrt (b + c) - Real.sqrt 3),\n    sq_nonneg (Real.sqrt (c + a) - Real.sqrt 3)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) :\n    Real.sqrt (a + b) + Real.sqrt (b + c) + Real.sqrt (c + a) \u2265 Real.sqrt 3 * (a + b + c):= by\n  rw [habc]\n  norm_num\n  have h\u2080 : Real.sqrt 3 \u2265 0 := Real.sqrt_nonneg _\n  have h\u2081 : Real.sqrt (a + b) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2082 : Real.sqrt (b + c) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2083 : Real.sqrt (c + a) \u2265 0 := Real.sqrt_nonneg _\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 by linarith),\n    sq_sqrt (show (0 : \u211d) \u2264 a + b by linarith),\n    sq_sqrt (show (0 : \u211d) \u2264 b + c by linarith),\n    sq_sqrt (show (0 : \u211d) \u2264 c + a by linarith),\n    sq_nonneg (Real.sqrt (a + b) - Real.sqrt 3),\n    sq_nonneg (Real.sqrt (b + c) - Real.sqrt 3),\n    sq_nonneg (Real.sqrt (c + a) - Real.sqrt 3)]"
  ]
 },
 {
  "old": "(a b c k : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a * b + b * c + c * a > 0) (h : 0 \u2264 k \u2227 k \u2264 11) : 1 / (a ^ 2 + b ^ 2) + 1 / (b ^ 2 + c ^ 2) + 1 / (c ^ 2 + a ^ 2) + k / (a ^ 2 + b ^ 2 + c ^ 2) \u2265 (10 + 2 * k) / (a + b + c) ^ 2 := by",
  "new": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b * c > 0) : 1 / (a * b) + 1 / (b * c) + 1 / (c * a) \u2265 9 / (a + b + c) ^ 2 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b * c > 0) : 1 / (a * b) + 1 / (b * c) + 1 / (c * a) \u2265 9 / (a + b + c) ^ 2 := by\n  have ha' : 0 < a := lt_of_le_of_ne ha (by rintro rfl; simp_all)\n  have hb' : 0 < b := lt_of_le_of_ne hb (by rintro rfl; simp_all)\n  have hc' : 0 < c := lt_of_le_of_ne hc (by rintro rfl; simp_all)\n  have h\u2080 : 0 < a * b := by positivity\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * a := by positivity\n  have h\u2083 : 0 < a * b * (b * c) := by positivity\n  have h\u2084 : 0 < a * b * (c * a) := by positivity\n  have h\u2085 : 0 < b * c * (c * a) := by positivity\n  field_simp [ha', hb', hc', h\u2080, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b * c > 0) : 1 / (a * b) + 1 / (b * c) + 1 / (c * a) \u2265 9 / (a + b + c) ^ 2 := by\n  have ha' : 0 < a := lt_of_le_of_ne ha (by rintro rfl; simp_all)\n  have hb' : 0 < b := lt_of_le_of_ne hb (by rintro rfl; simp_all)\n  have hc' : 0 < c := lt_of_le_of_ne hc (by rintro rfl; simp_all)\n  have h\u2080 : 0 < a * b := mul_pos ha' hb'\n  have h\u2081 : 0 < b * c := mul_pos hb' hc'\n  have h\u2082 : 0 < c * a := mul_pos hc' ha'\n  have h\u2083 : 0 < a * b * (b * c) := by positivity\n  have h\u2084 : 0 < b * c * (c * a) := by positivity\n  have h\u2085 : 0 < c * a * (a * b) := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b * c > 0) : 1 / (a * b) + 1 / (b * c) + 1 / (c * a) \u2265 9 / (a + b + c) ^ 2 := by\n  have h\u2081 : 0 < a := lt_of_le_of_ne ha (by rintro rfl; simp_all)\n  have h\u2082 : 0 < b := lt_of_le_of_ne hb (by rintro rfl; simp_all)\n  have h\u2083 : 0 < c := lt_of_le_of_ne hc (by rintro rfl; simp_all)\n  have h\u2084 : 0 < a * b := by positivity\n  have h\u2085 : 0 < b * c := by positivity\n  have h\u2086 : 0 < c * a := by positivity\n  have h\u2087 : 0 < a * b * (b * c) := by positivity\n  have h\u2088 : 0 < b * c * (c * a) := by positivity\n  have h\u2089 : 0 < c * a * (a * b) := by positivity\n  field_simp [h\u2084, h\u2085, h\u2086, h\u2087, h\u2088, h\u2089]\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b)]\n  positivity\n  positivity\n  <;> nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 3) : (a^5 / (c + a) / (b + c * a) + b^5 / (a + b) / (c + a * b) + c^5 / (b + c) / (a + b * c)) \u2265 3 / 4 := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : a ^ 2 / (b + c * a) + b ^ 2 / (c + a * b) + c ^ 2 / (a + b * c) \u2265 3 / 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) :  a ^ 2 / (b + c * a) + b ^ 2 / (c + a * b) + c ^ 2 / (a + b * c) \u2265 3 / 4:= by\n  have h1 : 0 < b + c * a := by positivity\n  have h2 : 0 < c + a * b := by positivity\n  have h3 : 0 < a + b * c := by positivity\n  have h4 : a ^ 2 / (b + c * a) \u2265 (2 * a - (b + c * a) / 2) / 2 := by\n    rw [ge_iff_le]\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a - (b + c * a) / 2)]\n  have h5 : b ^ 2 / (c + a * b) \u2265 (2 * b - (c + a * b) / 2) / 2 := by\n    rw [ge_iff_le]\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (b - (c + a * b) / 2)]\n  have h6 : c ^ 2 / (a + b * c) \u2265 (2 * c - (a + b * c) / 2) / 2 := by\n    rw [ge_iff_le]\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (c - (a + b * c) / 2)]\n  nlinarith [h4, h5, h6]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) :  a ^ 2 / (b + c * a) + b ^ 2 / (c + a * b) + c ^ 2 / (a + b * c) \u2265 3 / 4:= by\n  have h\u2080 : 0 < b * c := by positivity\n  have h\u2081 : 0 < a * b := by positivity\n  have h\u2082 : 0 < c * a := by positivity\n  have h\u2083 : 0 < b + c * a := by positivity\n  have h\u2084 : 0 < c + a * b := by positivity\n  have h\u2085 : 0 < a + b * c := by positivity\n  have h\u2086 : a ^ 2 / (b + c * a) \u2265 (2 * a - (b + c * a) / 2) / 2 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a - (b + c * a) / 2)]\n  have h\u2087 : b ^ 2 / (c + a * b) \u2265 (2 * b - (c + a * b) / 2) / 2 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (b - (c + a * b) / 2)]\n  have h\u2088 : c ^ 2 / (a + b * c) \u2265 (2 * c - (a + b * c) / 2) / 2 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (c - (a + b * c) / 2)]\n  nlinarith\n  <;> norm_num"
  ]
 },
 {
  "old": "(a b c t : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (habc : a + b + c = 1) (h : a * b + b * c + c * a = 1 / (3 + t ^ 2)) (ht : t \u2265 0) : a / b + b / c + c / a \u2265 (t + 1) ^ 2 + 2 / (t + 1) := by",
  "new": "(x y z : \u211d) (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2081 : x + y + z = 1) (h\u2082 : x * y + y * z + z * x = 1 / 4) : x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 \u2265 4 / 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2081 : x + y + z = 1) (h\u2082 : x * y + y * z + z * x = 1 / 4) :  x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 \u2265 4 / 4:= by\n  cases' h\u2080 with hx hy\n  cases' hy with hy hz\n  have h\u2084 : 0 < y * z := by nlinarith\n  have h\u2085 : 0 < x * z := by nlinarith\n  have h\u2086 : 0 < x * y := by nlinarith\n  have h\u2087 : 0 < y ^ 2 := by nlinarith\n  have h\u2088 : 0 < x ^ 2 := by nlinarith\n  have h\u2089 : 0 < z ^ 2 := by nlinarith\n  have h\u2081\u2080 : 0 < x ^ 2 * z ^ 2 := by nlinarith\n  have h\u2081\u2081 : 0 < y ^ 2 * z ^ 2 := by nlinarith\n  have h\u2081\u2082 : 0 < x ^ 2 * y ^ 2 := by nlinarith\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [mul_self_nonneg (x ^ 2 - y ^ 2), mul_self_nonneg (y ^ 2 - z ^ 2),\n    mul_self_nonneg (z ^ 2 - x ^ 2)]\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2081 : x + y + z = 1) (h\u2082 : x * y + y * z + z * x = 1 / 4) :  x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 \u2265 4 / 4:= by\n  obtain \u27e8h\u2083, h\u2084, h\u2085\u27e9 := h\u2080\n  have : x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 \u2265 4 / 4 := by\n    have h\u2086 : 0 < x ^ 2 := sq_pos_of_pos h\u2083\n    have h\u2087 : 0 < y ^ 2 := sq_pos_of_pos h\u2084\n    have h\u2088 : 0 < z ^ 2 := sq_pos_of_pos h\u2085\n    have h\u2089 : 0 < x ^ 2 * y ^ 2 := mul_pos h\u2086 h\u2087\n    have h\u2081\u2080 : 0 < y ^ 2 * z ^ 2 := mul_pos h\u2087 h\u2088\n    have h\u2081\u2081 : 0 < x ^ 2 * z ^ 2 := mul_pos h\u2086 h\u2088\n    field_simp\n    rw [le_div_iff]\n    nlinarith [mul_self_nonneg (x ^ 2 - y ^ 2), mul_self_nonneg (y ^ 2 - z ^ 2),\n      mul_self_nonneg (z ^ 2 - x ^ 2)]\n    positivity\n  assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2081 : x + y + z = 1) (h\u2082 : x * y + y * z + z * x = 1 / 4) :  x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 \u2265 4 / 4:= by\n  have x_pos : 0 < x := by linarith\n  have y_pos : 0 < y := by linarith\n  have z_pos : 0 < z := by linarith\n  have xy_sum : x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 \u2265 4 / 4 := by\n    have xz_sum : 0 < x * z := mul_pos x_pos z_pos\n    have yx_sum : 0 < y * x := mul_pos y_pos x_pos\n    have zy_sum : 0 < z * y := mul_pos z_pos y_pos\n    have h\u2083 : 0 < x ^ 2 := sq_pos_of_pos x_pos\n    have h\u2084 : 0 < y ^ 2 := sq_pos_of_pos y_pos\n    have h\u2085 : 0 < z ^ 2 := sq_pos_of_pos z_pos\n    have h\u2086 : 0 < x ^ 2 * y ^ 2 := mul_pos h\u2083 h\u2084\n    have h\u2087 : 0 < y ^ 2 * z ^ 2 := mul_pos h\u2084 h\u2085\n    have h\u2088 : 0 < z ^ 2 * x ^ 2 := mul_pos h\u2085 h\u2083\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (y ^ 2 - z ^ 2), sq_nonneg (z ^ 2 - x ^ 2)]\n  linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2081 : x + y + z = 1) (h\u2082 : x * y + y * z + z * x = 1 / 4) :  x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 \u2265 4 / 4:= by\n  rcases h\u2080 with \u27e8hx, hy, hz\u27e9\n  have h\u2084 : x * y + y * z + z * x = 1 / 4 := h\u2082\n  have h\u2085 : x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 \u2265 4 / 4 := by\n    have h\u2086 : 0 < x ^ 2 := pow_pos hx 2\n    have h\u2087 : 0 < y ^ 2 := pow_pos hy 2\n    have h\u2088 : 0 < z ^ 2 := pow_pos hz 2\n    have h\u2089 : 0 < x ^ 2 * y ^ 2 := mul_pos h\u2086 h\u2087\n    have h\u2081\u2080 : 0 < y ^ 2 * z ^ 2 := mul_pos h\u2087 h\u2088\n    have h\u2081\u2081 : 0 < z ^ 2 * x ^ 2 := mul_pos h\u2088 h\u2086\n    have h\u2081\u2082 : 0 < x ^ 2 * y ^ 2 * z ^ 2 := by positivity\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (y ^ 2 - z ^ 2), sq_nonneg (z ^ 2 - x ^ 2)]\n  linarith\n  <;> linarith"
  ]
 },
 {
  "old": "(m n : \u2124) (h : m.gcd n = 1) : \u2203 N : \u2115, \u2200 n : \u2124, n >= N \u2192 \u2203 a b : \u2124, n = m * a + n * b := by",
  "new": "{m n : \u2124} (hm : m \u2260 0) (h : m.gcd n = 1) : \u2203 a : \u2124, m * a \u2261 1 [ZMOD n] := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_cancel_left_in_nonzero_int_dvd {m n : \u2124} (hm : m \u2260 0) (h : m.gcd n = 1) : \u2203 a : \u2124, m * a \u2261 1 [ZMOD n] := by\n  use m.gcdA n\n  have h\u2080 := Int.gcd_eq_gcd_ab m n\n  rw [h] at h\u2080\n  simp_all [Int.ModEq, Int.emod_eq_of_lt]\n  <;> norm_num\n  <;> omega\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_cancel_left_in_nonzero_int_dvd {m n : \u2124} (hm : m \u2260 0) (h : m.gcd n = 1) : \u2203 a : \u2124, m * a \u2261 1 [ZMOD n] := by\n  use m.gcdA n\n  have h\u2080 := m.gcd_eq_gcd_ab n\n  simp_all [Int.ModEq, Int.emod_eq_of_lt]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a / b + b / c + c / a) ^ 2 + 70 * (a * b + b * c + c * a) / (a ^ 2 + b ^ 2 + c ^ 2) \u2265 60 := by",
  "new": ": \u2200 a b c : \u211d, a \u2260 0 \u2227 b \u2260 0 \u2227 c \u2260 0 \u2192 a * b * c = 1 \u2192 (a + b + c) ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) \u2264 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2260 0 \u2227 b \u2260 0 \u2227 c \u2260 0 \u2192\n   a * b * c = 1 \u2192\n   (a + b + c) ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) \u2264 3:= by\n  intro a b c h\u2080 h\u2081\n  have h\u2082 : 0 < a ^ 2 + b ^ 2 + c ^ 2 := by nlinarith [sq_pos_of_ne_zero h\u2080.1, sq_pos_of_ne_zero h\u2080.2.1, sq_pos_of_ne_zero h\u2080.2.2]\n  rw [div_le_iff h\u2082]\n  ring_nf\n  nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2260 0 \u2227 b \u2260 0 \u2227 c \u2260 0 \u2192\n   a * b * c = 1 \u2192\n   (a + b + c) ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) \u2264 3:= by\n  intro a b c h\u2080 h\u2081\n  have h\u2082 : 0 < a ^ 2 + b ^ 2 + c ^ 2 := by\n    refine' add_pos (add_pos (sq_pos_of_ne_zero h\u2080.1) (sq_pos_of_ne_zero h\u2080.2.1)) (sq_pos_of_ne_zero h\u2080.2.2)\n  field_simp [h\u2081]\n  rw [div_le_iff h\u2082]\n  ring_nf\n  nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2260 0 \u2227 b \u2260 0 \u2227 c \u2260 0 \u2192\n   a * b * c = 1 \u2192\n   (a + b + c) ^ 2 / (a ^ 2 + b ^ 2 + c ^ 2) \u2264 3:= by\n  intro a b c h\u2080 h\u2081\n  have h\u2082 := h\u2080.2.2\n  have h\u2083 := h\u2080.2.1\n  have h\u2084 := h\u2080.1\n  field_simp [h\u2082, h\u2083, h\u2084]\n  rw [div_le_iff (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c)]"
  ]
 },
 {
  "old": "{a b c : \u211d} : (a - b) ^ 2 * (a - c) ^ 2 * (b - c) ^ 2 + (3 / 2) * (a + b + c) ^ 2 * (a ^ 2 - a * b - a * c + b ^ 2 - b * c + c ^ 2) ^ 2 \u2265 0 := by",
  "new": "(a b c : \u211d) : a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 2 * (2 * a * b + 2 * b * c + 2 * c * a) + a ^ 2 * b ^ 2 * c ^ 2 * (a ^ 2 + b ^ 2 + c ^ 2) \u2265 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) :\n  a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 2 * (2 * a * b + 2 * b * c + 2 * c * a) + a ^ 2 * b ^ 2 * c ^ 2 * (a ^ 2 + b ^ 2 + c ^ 2) \u2265 0:= by\n  simp only [mul_assoc]\n  nlinarith [sq_nonneg (a * b * c), sq_nonneg (a + b + c), mul_self_nonneg (a * b + b * c + c * a),\n    mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b)]"
  ]
 },
 {
  "old": "(n : \u2115) : Odd n \u2192 \u00acNat.Prime (2^n+1) := by",
  "new": "(a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  by_cases h : Nat.Coprime a b\n  exacts [Or.inl h, Or.inr h]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  by_cases h : Nat.Coprime a b\n  case pos => exact Or.inl h\n  case neg => exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  by_cases h : Nat.Coprime a b <;> simp_all\n  <;> rcases Nat.eq_zero_or_pos a with ha | ha <;>\n    rcases Nat.eq_zero_or_pos b with hb | hb <;>\n    simp_all [Nat.coprime_iff_gcd_eq_one, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  cases' Classical.em (Nat.Coprime a b) with h h <;> simp_all\n  <;>\n  simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;>\n  aesop\n  <;>\n  aesop\n  <;>\n  aesop\n  <;>\n  aesop\n  <;>\n  aesop"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (hab : a + b \u2260 0) (hbc : b + c \u2260 0) (hca : a + c \u2260 0) : (1 / (b ^ 2 - b * c + c ^ 2) + 1 / (c ^ 2 - c * a + a ^ 2) + 1 / (a ^ 2 - a * b + b ^ 2)) \u2265 12 / (a + b + c) ^ 2 := by",
  "new": "(a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (hab : a + b \u2260 0) (hbc : b + c \u2260 0) (hca : a + c \u2260 0) : 9 / (a ^ 2 + b ^ 2 + c ^ 2) \u2265 (3 / (a + b + c) ^ 2 - 2 * (a * b + b * c + c * a) / (a + b + c) ^ 2) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (hab : a + b \u2260 0) (hbc : b + c \u2260 0) (hca : a + c \u2260 0) : 9 / (a ^ 2 + b ^ 2 + c ^ 2) \u2265 (3 / (a + b + c) ^ 2 - 2 * (a * b + b * c + c * a) / (a + b + c) ^ 2)  := by\n  rcases eq_or_lt_of_le ha with (rfl | ha') <;> rcases eq_or_lt_of_le hb with (rfl | hb') <;>\n      rcases eq_or_lt_of_le hc with (rfl | hc') <;>\n        simp_all\n  all_goals\n    apply le_of_sub_nonneg\n    field_simp\n    ring_nf\n    positivity"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^2 / (b + c) + b^2 / (c + a) + c^2 / (a + b)) \u2265 (3 / 2) * (a^2 + b^2 + c^2) / (a + b + c) := by",
  "new": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : a / b + b / c + c / d + d / a \u2265 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_fractions (a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) :  a / b + b / c + c / d + d / a \u2265 4:= by\n  have H\u2081 : 0 < a * b := by positivity\n  have H\u2082 : 0 < b * c := by positivity\n  have H\u2083 : 0 < c * d := by positivity\n  have H\u2084 : 0 < d * a := by positivity\n  have H\u2085 : 0 < a * b * c := by positivity\n  have H\u2086 : 0 < b * c * d := by positivity\n  have H\u2087 : 0 < c * d * a := by positivity\n  have H\u2088 : 0 < d * a * b := by positivity\n  have H\u2089 : 0 < a * b * c * d := by positivity\n  field_simp [H\u2081, H\u2082, H\u2083, H\u2084, H\u2085, H\u2086, H\u2087, H\u2088, H\u2089]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - d), sq_nonneg (d - a),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le hd.le, mul_nonneg hd.le ha.le,\n    mul_nonneg (sq_nonneg (a - b)) hd.le, mul_nonneg (sq_nonneg (b - c)) ha.le,\n    mul_nonneg (sq_nonneg (c - d)) hb.le, mul_nonneg (sq_nonneg (d - a)) hc.le]\n  <;> norm_num\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_fractions (a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) :  a / b + b / c + c / d + d / a \u2265 4:= by\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * d := by positivity\n  have h\u2083 : 0 < d * a := by positivity\n  have h\u2084 : 0 < b * d := by positivity\n  have h\u2085 : 0 < a * c := by positivity\n  have h\u2086 : 0 < b * c * d := by positivity\n  have h\u2087 : 0 < c * d * a := by positivity\n  have h\u2088 : 0 < d * a * b := by positivity\n  have h\u2089 : 0 < a * c * b := by positivity\n  field_simp [h\u2081.ne', h\u2082.ne', h\u2083.ne', h\u2084.ne', h\u2085.ne', h\u2086.ne', h\u2087.ne', h\u2088.ne', h\u2089.ne']\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - d), sq_nonneg (d - a),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le hd.le, mul_nonneg hd.le ha.le,\n    mul_nonneg (sq_nonneg (a - b)) hd.le, mul_nonneg (sq_nonneg (b - c)) ha.le,\n    mul_nonneg (sq_nonneg (c - d)) hb.le, mul_nonneg (sq_nonneg (d - a)) hc.le]\n  <;> try norm_num\n  <;> nlinarith\n  <;> norm_num"
  ]
 },
 {
  "old": "(a b c g u v : \u2115) (h\u2080 : Nat.gcd b c = g) (h\u2081 : Nat.gcd a g = 1) (h\u2082 : a * u + g * v = 1) (h\u2083 : 0 < g) : a * u \u2261 1 [ZMOD g] := by",
  "new": "(p : \u2115) {m n : \u2115} (h\u2080 : p.Prime) (h\u2081 : m \u2261 n [MOD p]) : (p.Coprime m \u2228 p \u2223 m) \u2227 (p.Coprime n \u2228 p \u2223 n):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {m n : \u2115} (h\u2080 : p.Prime) (h\u2081 : m \u2261 n [MOD p]) :\n  (p.Coprime m \u2228 p \u2223 m) \u2227 (p.Coprime n \u2228 p \u2223 n):= by\n  constructor\n  exact or_iff_not_imp_right.2 fun h => h\u2080.coprime_iff_not_dvd.2 h\n  exact or_iff_not_imp_right.2 fun h => h\u2080.coprime_iff_not_dvd.2 h\n  <;> rw [Nat.ModEq] at h\u2081\n  <;> omega\n  <;> omega\n  <;> omega"
  ]
 },
 {
  "old": "(p : \u2115) (hp : p.Prime) (hp1 : Odd p) {k : \u2115} (hk : k \u2260 0) {a : \u2124} (hpa : \u00ac(p : \u2124) \u2223 a) : (\u2203 x : \u2124, x^2 \u2261 a [ZMOD p^k]) \u2194 \u2203 x : \u2124, x^2 \u2261 a [ZMOD p] := by",
  "new": "(p : \u2115) {a : \u2115} (h\u2081 : Nat.Prime p) (h\u2082 : \u00acp \u2223 a) : Nat.Coprime p a \u2228 p \u2223 a ^ 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {a : \u2115} (h\u2081 : Nat.Prime p) (h\u2082 : \u00acp \u2223 a) :\n    Nat.Coprime p a \u2228 p \u2223 a ^ 2:= by\n  by_cases h : p \u2223 a ^ 2 <;> simp_all [Nat.coprime_iff_gcd_eq_one, Nat.Prime.coprime_iff_not_dvd]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {a : \u2115} (h\u2081 : Nat.Prime p) (h\u2082 : \u00acp \u2223 a) :\n    Nat.Coprime p a \u2228 p \u2223 a ^ 2:= by\n  rw [or_iff_not_imp_right]\n  intro h\u2083\n  simp_all [Nat.Prime.coprime_iff_not_dvd, pow_two]\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop"
  ]
 },
 {
  "old": "(p : \u2115) (hp : p.Prime) (h : p \u2261 1 [ZMOD 4]) : \u2203 x : \u2124, (p : \u2124) \u2223 x^2 + 1 := by",
  "new": "(n : \u2115) : Nat.Prime n \u2227 n \u2261 1 [ZMOD 4] \u2194 \u2203 a b : \u2115, Nat.Prime n \u2227 n = 4 * a + 1 \u2227 a \u2265 b \u2227 n \u2261 1 [ZMOD 4] := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem prime_of_congruent_one_mod_four_iff_exists_add_mul_mod_eq_one (n : \u2115) :\n  Nat.Prime n \u2227 n \u2261 1 [ZMOD 4] \u2194 \u2203 a b : \u2115, Nat.Prime n \u2227 n = 4 * a + 1 \u2227 a \u2265 b \u2227 n \u2261 1 [ZMOD 4] := by\n  constructor\n  \u00b7 rintro \u27e8hn, h_mod\u27e9\n    refine' \u27e8(n - 1) / 4, 0, _, _, _, _\u27e9 <;> simp_all [Nat.ModEq, Int.ModEq]\n    <;> omega\n  \u00b7 rintro \u27e8a, b, hn, h_eq, h_le, h_mod\u27e9\n    refine' \u27e8hn, _\u27e9\n    simp_all [Nat.ModEq, Int.ModEq]\n  <;> omega\n  <;> omega\n  <;> omega"
  ]
 },
 {
  "old": "(x y z : \u211d) (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z) : x^3 + y^3 + z^3 - 3 * (x * y * z)^(1 / 3) \u2265 0 := by",
  "new": "(i : \u2115) (hi : \u2200 k, 0 < k \u2192 1 < i ^ k) (h : 2 * \u2191(i ^ 2) - 1 \u2264 3 * i) : 1 < i \u2227 \u2200 k, 0 < k \u2192 1 < i ^ k:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_mul_eq_one (i : \u2115) (hi : \u2200 k, 0 < k \u2192 1 < i ^ k)\n     (h : 2 * \u2191(i ^ 2) - 1 \u2264 3 * i) : 1 < i \u2227 \u2200 k, 0 < k \u2192 1 < i ^ k:= by\n  have h1 := hi 1 (by linarith)\n  have h2 := hi 2 (by linarith)\n  have h3 : 1 < i := by\n    by_contra h4\n    have h5 : i = 0 \u2228 i = 1 := by omega\n    cases' h5 with h5 h5 <;> simp_all\n  exact \u27e8h3, hi\u27e9\n  <;> try norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_mul_eq_one (i : \u2115) (hi : \u2200 k, 0 < k \u2192 1 < i ^ k)\n     (h : 2 * \u2191(i ^ 2) - 1 \u2264 3 * i) : 1 < i \u2227 \u2200 k, 0 < k \u2192 1 < i ^ k:= by\n  have h\u2081 := hi 1 (by linarith)\n  have h\u2082 := hi 2 (by linarith)\n  have h\u2083 : 1 < i := by\n    by_contra! h\u2084\n    have h\u2085 : i = 0 \u2228 i = 1 := by omega\n    cases' h\u2085 with h\u2085 h\u2085 <;> simp_all\n  have h\u2084 : \u2200 k, 0 < k \u2192 1 < i ^ k := by\n    intros k hk\n    have h\u2085 : 1 < i ^ k := hi k hk\n    exact h\u2085\n  exact \u27e8h\u2083, h\u2084\u27e9\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_mul_eq_one (i : \u2115) (hi : \u2200 k, 0 < k \u2192 1 < i ^ k)\n     (h : 2 * \u2191(i ^ 2) - 1 \u2264 3 * i) : 1 < i \u2227 \u2200 k, 0 < k \u2192 1 < i ^ k:= by\n  have h2 := hi 2 (by norm_num)\n  have h3 : 1 < i := by\n    by_contra! h3\n    have h4 : i = 0 \u2228 i = 1 := by omega\n    cases h4 <;> simp_all\n  have h4 : \u2200 k, 0 < k \u2192 1 < i ^ k := by\n    intro k hk\n    have h5 : 1 < i ^ k := hi k hk\n    exact h5\n  exact \u27e8h3, h4\u27e9\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_mul_eq_one (i : \u2115) (hi : \u2200 k, 0 < k \u2192 1 < i ^ k)\n     (h : 2 * \u2191(i ^ 2) - 1 \u2264 3 * i) : 1 < i \u2227 \u2200 k, 0 < k \u2192 1 < i ^ k:= by\n  have h1 : 1 < i := by\n    by_contra! h1\n    have h2 := hi 1 (by norm_num)\n    have h3 := hi 2 (by norm_num)\n    simp at h2 h3\n    nlinarith\n  have h2 : \u2200 k, 0 < k \u2192 1 < i ^ k := by\n    intro k hk\n    have h3 := hi k hk\n    have h4 := hi 1 (by norm_num)\n    have h5 := hi 2 (by norm_num)\n    simp at h3 h4 h5\n    nlinarith\n  exact \u27e8h1, h2\u27e9\n"
  ]
 },
 {
  "old": "(a b c : \u211d) (habc : a * b * c = 1) : (a^2 + 1) / (a + b) + (b^2 + 1) / (b + c) + (c^2 + 1) / (c + a) \u2265 Real.sqrt (3 * (a + b + c)) := by",
  "new": "(a b c : \u211d) (habc : a * b * c = 1) : 3 * ((a + b + c) ^ 2) \u2265 3 * (a * b + b * c + c * a):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (habc : a * b * c = 1) : 3 * ((a + b + c) ^ 2) \u2265 3 * (a * b + b * c + c * a):= by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a + b + c)]\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (habc : a * b * c = 1) : 3 * ((a + b + c) ^ 2) \u2265 3 * (a * b + b * c + c * a):= by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1)]\n  <;> try norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (habc : a * b * c = 1) : 3 * ((a + b + c) ^ 2) \u2265 3 * (a * b + b * c + c * a):= by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c), sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1)]\n  <;> simp [habc]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (habc : a * b * c = 1) : 3 * ((a + b + c) ^ 2) \u2265 3 * (a * b + b * c + c * a):= by\n  rw [mul_comm] at habc\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a - 1), mul_self_nonneg (b - 1), mul_self_nonneg (c - 1)]\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a * b + b * c + c * a = 1) : 2 * (a + b + c) * (a * b ^ 2 + b * c ^ 2 + c * a ^ 2) + 9 * (a * b * c) ^ 2 \u2265 7 * a * b * c * (a + b + c) := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a * b + b * c + c * a = 1) : (a + b + c) * (1 + (a + b + c) ^ 2) \u2265 a * b + b * c + c * a + (a * b ^ 2 + b * c ^ 2 + c * a ^ 2) + (a * b * c) * (a * b + b * c + c * a):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a * b + b * c + c * a = 1) : \n         (a + b + c) * (1 + (a + b + c) ^ 2) \u2265 a * b + b * c + c * a + (a * b ^ 2 + b * c ^ 2 + c * a ^ 2) + (a * b * c) * (a * b + b * c + c * a):= by\n  simp [hab]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_pos ha hb, mul_pos hb hc, mul_pos ha hc, mul_pos (mul_pos ha hb) hc, mul_pos (mul_pos hb hc) ha, mul_pos (mul_pos ha hc) hb]"
  ]
 },
 {
  "old": "(p : \u2115) (hp : p.Prime) : \u2203! x : (ZMod p)\u02e3, x ^ 2 = 1 := by",
  "new": "(p : \u2115) {m : \u2115} (hm : m \u2260 0) (hp : p.Prime) : p.Coprime m \u2228 (\u2203 k : \u2115, m = p * k):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {m : \u2115} (hm : m \u2260 0) (hp : p.Prime) :\n     p.Coprime m \u2228 (\u2203 k : \u2115, m = p * k):= by\n  refine' or_iff_not_imp_right.mpr fun h => _\n  exact hp.coprime_iff_not_dvd.mpr (fun h' => h \u27e8m / p, (Nat.mul_div_cancel' h').symm\u27e9)"
  ]
 },
 {
  "old": "(n : \u2115) (hn : 2 \u2264 n) (a : Fin n \u2192 NNReal) (ha : \u2211 i, (\u220f j, a (i + j))^2 = 1) : \u2211 i, a i + \u2211 i, \u220f j, a (i + j) \u2265 n := by",
  "new": "(x y : \u2115 \u2192 \u211d) (hx : \u2200 i, 0 \u2264 x i) (hy : \u2200 i, 0 \u2264 y i) (n : \u2115) : \u2211 i in Finset.range n, x i * y i \u2264 (\u2211 i in Finset.range n, x i ^ 2 + \u2211 i in Finset.range n, y i ^ 2) / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u2115 \u2192 \u211d) (hx : \u2200 i, 0 \u2264 x i) (hy : \u2200 i, 0 \u2264 y i) (n : \u2115) :\n \u2211 i in Finset.range n, x i * y i \u2264 (\u2211 i in Finset.range n, x i ^ 2 + \u2211 i in Finset.range n, y i ^ 2) / 2:= by\n  induction n with\n  | zero =>\n    norm_num\n  | succ n ih =>\n    simp_all [Finset.sum_range_succ, add_assoc, add_left_comm, add_comm]\n    nlinarith [mul_self_nonneg (x n - y n)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u2115 \u2192 \u211d) (hx : \u2200 i, 0 \u2264 x i) (hy : \u2200 i, 0 \u2264 y i) (n : \u2115) :\n \u2211 i in Finset.range n, x i * y i \u2264 (\u2211 i in Finset.range n, x i ^ 2 + \u2211 i in Finset.range n, y i ^ 2) / 2:= by\n  induction' n with n ih\n  case zero => simp\n  case succ =>\n    simp_all [Finset.sum_range_succ, add_assoc, add_left_comm]\n    nlinarith [sq_nonneg (x n - y n), hx n, hy n]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u2115 \u2192 \u211d) (hx : \u2200 i, 0 \u2264 x i) (hy : \u2200 i, 0 \u2264 y i) (n : \u2115) :\n \u2211 i in Finset.range n, x i * y i \u2264 (\u2211 i in Finset.range n, x i ^ 2 + \u2211 i in Finset.range n, y i ^ 2) / 2:= by\n  induction n <;> simp_all [Finset.sum_range_succ, pow_two, mul_comm, mul_left_comm]\n  nlinarith [sq_nonneg (x \u2039_\u203a - y \u2039_\u203a)]"
  ]
 },
 {
  "old": "(m : \u2115) : \u2203 N : \u2115, \u2200 p : \u2115, p > N \u2227 p.Prime \u2192 \u2203 a : \u2115, a < p \u2227 \u2200 i : \u2115, i < m \u2192 (a + i) ^ 2 \u2261 (a + (i + 1)) ^ 2 [ZMOD p] := by",
  "new": "(p : \u2115) {m : \u2115} (h\u2081 : Nat.Prime p) (h\u2082 : \u00ac (p : \u2115) \u2223 m) : Nat.Coprime p m \u2228 p \u2223 m := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {m : \u2115} (h\u2081 : Nat.Prime p) (h\u2082 : \u00ac (p : \u2115) \u2223 m) :\n     Nat.Coprime p m \u2228 p \u2223 m := by\n  refine' or_iff_not_imp_right.mpr fun h => _\n  simp_all [Nat.Prime.coprime_iff_not_dvd, not_or]\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {m : \u2115} (h\u2081 : Nat.Prime p) (h\u2082 : \u00ac (p : \u2115) \u2223 m) :\n     Nat.Coprime p m \u2228 p \u2223 m := by\n  apply Or.inl\n  exact h\u2081.coprime_iff_not_dvd.mpr h\u2082",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {m : \u2115} (h\u2081 : Nat.Prime p) (h\u2082 : \u00ac (p : \u2115) \u2223 m) :\n     Nat.Coprime p m \u2228 p \u2223 m := by\n  simp [Nat.Prime.coprime_iff_not_dvd h\u2081, h\u2082]"
  ]
 },
 {
  "old": "(m : \u2115) (n : \u2115) (h\u2081 : m = n^2) : \u00ac(m : \u211d) = n^2 := by",
  "new": "(m n : \u2115) : (Nat.Coprime m n) \u2228 \u00ac(Nat.Coprime m n):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (m n : \u2115) : (Nat.Coprime m n) \u2228 \u00ac(Nat.Coprime m n):= by\n  apply em\n  <;> intro h\n  <;> simp_all\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (m n : \u2115) : (Nat.Coprime m n) \u2228 \u00ac(Nat.Coprime m n):= by\n  by_cases h : Nat.Coprime m n\n  exact Or.inl h\n  exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (m n : \u2115) : (Nat.Coprime m n) \u2228 \u00ac(Nat.Coprime m n):= by\n  by_cases h : Nat.Coprime m n\n  left\n  exact h\n  right\n  exact h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (m n : \u2115) : (Nat.Coprime m n) \u2228 \u00ac(Nat.Coprime m n):= by\n  by_cases h : Nat.Coprime m n\n  exacts [Or.inl h, Or.inr h]"
  ]
 },
 {
  "old": "(n : \u2115) (x : \u2115 \u2192 NNReal) (hn : 4 \u2264 n) : \u2211 k in Finset.range n, (x k + x (k + 1)) ^ 2014 \u2264 \u2211 k in Finset.range n, x k ^ 2014 + (\u2211 k in Finset.range n, x k) ^ 2014 := by",
  "new": "(x y : \u2115 \u2192 \u211d) (n : \u2115) (hn : 4 \u2264 n) : \u2211 k in Finset.range n, (x k + y k) ^ 2 \u2264 \u2211 k in Finset.range n, (x k ^ 2 + y k ^ 2) + 2 * (\u2211 k in Finset.range n, x k * y k) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (x y : \u2115 \u2192 \u211d) (n : \u2115) (hn : 4 \u2264 n) :\n   \u2211 k in Finset.range n, (x k + y k) ^ 2 \u2264 \u2211 k in Finset.range n, (x k ^ 2 + y k ^ 2) +\n   2 * (\u2211 k in Finset.range n, x k * y k)  := by\n  induction' hn with n hn hn\n  all_goals simp_all [Finset.sum_range_succ, add_sq]\n  all_goals nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (x y : \u2115 \u2192 \u211d) (n : \u2115) (hn : 4 \u2264 n) :\n   \u2211 k in Finset.range n, (x k + y k) ^ 2 \u2264 \u2211 k in Finset.range n, (x k ^ 2 + y k ^ 2) +\n   2 * (\u2211 k in Finset.range n, x k * y k)  := by\n  induction' hn with n hn\n  all_goals simp_all [Finset.sum_range_succ, sq]\n  all_goals nlinarith [sq_nonneg (x n + y n), sq_nonneg (x n - y n)]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (x y : \u2115 \u2192 \u211d) (n : \u2115) (hn : 4 \u2264 n) :\n   \u2211 k in Finset.range n, (x k + y k) ^ 2 \u2264 \u2211 k in Finset.range n, (x k ^ 2 + y k ^ 2) +\n   2 * (\u2211 k in Finset.range n, x k * y k)  := by\n  induction' hn with n hn hn'\n  all_goals simp_all [Finset.sum_range_succ, add_sq, mul_add, mul_comm, mul_left_comm]\n  all_goals nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (x y : \u2115 \u2192 \u211d) (n : \u2115) (hn : 4 \u2264 n) :\n   \u2211 k in Finset.range n, (x k + y k) ^ 2 \u2264 \u2211 k in Finset.range n, (x k ^ 2 + y k ^ 2) +\n   2 * (\u2211 k in Finset.range n, x k * y k)  := by\n  induction' hn with n hn ih\n  all_goals simp_all [Finset.sum_range_succ, Nat.cast_add, add_sq]\n  all_goals linarith [sq_nonneg (x n + y n), sq_nonneg (x n - y n)]"
  ]
 },
 {
  "old": "(\u03b6 : \u2102) (h : \u03b6 ^ 3 = 1) (h' : \u03b6 \u2260 1) : 1 + \u03b6 + \u03b6 ^ 2 = 0 := by",
  "new": "(h : \u2115) {a b : \u2115} (hab : Nat.Coprime a b) (h1 : h \u2223 a) (h2 : h \u2223 b) : h = 1 \u2228 h = 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_dvd (h : \u2115) {a b : \u2115} (hab : Nat.Coprime a b)\n     (h1 : h \u2223 a) (h2 : h \u2223 b) : h = 1 \u2228 h = 0:= by\n  have h3 : h \u2223 Nat.gcd a b := Nat.dvd_gcd h1 h2\n  rw [hab] at h3\n  have h4 : h \u2223 1 := by simpa using h3\n  have h5 : h = 1 := by\n    exact Nat.dvd_one.mp h4\n  exact Or.inl h5",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_dvd (h : \u2115) {a b : \u2115} (hab : Nat.Coprime a b)\n     (h1 : h \u2223 a) (h2 : h \u2223 b) : h = 1 \u2228 h = 0:= by\n  have := Nat.dvd_gcd h1 h2\n  simp_all [Nat.gcd_eq_left, Nat.gcd_eq_right]"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x / (Real.sqrt (y ^ 2 + z ^ 2 + y * z)) + y / (Real.sqrt (z ^ 2 + x ^ 2 + x * z)) + z / (Real.sqrt (x ^ 2 + y ^ 2 + x * y))) \u2265 Real.sqrt (7 - 12 * (x * y + x * z + y * z) / (x + y + z) ^ 2) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2 + (x * y + x * z + y * z) * ( Real.sqrt 3 - 1)) \u2264 (x + y + z) * (Real.sqrt 3):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_x1y2z3 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) :  Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2 + (x * y + x * z + y * z) * (  Real.sqrt 3 - 1))  \u2264 (x + y + z) * (Real.sqrt 3):= by\n  have h : 0 \u2264 (x - y)^2 + (x - z)^2 + (y - z)^2 := by\n    nlinarith\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  \u00b7 positivity\n  nlinarith [Real.sqrt_nonneg 3, sq_sqrt (show 0 \u2264 3 from by linarith),\n    mul_self_nonneg (x + y + z),\n    mul_self_nonneg (x + y + z - Real.sqrt 3 * (x + y + z))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_x1y2z3 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) :  Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2 + (x * y + x * z + y * z) * (  Real.sqrt 3 - 1))  \u2264 (x + y + z) * (Real.sqrt 3):= by\n  have h\u2081 : 0 \u2264 x * y := by positivity\n  have h\u2082 : 0 \u2264 x * z := by positivity\n  have h\u2083 : 0 \u2264 y * z := by positivity\n  have h\u2084 : Real.sqrt 3 \u2265 1 := by norm_num [Real.sqrt_le_sqrt]\n  have h\u2085 : Real.sqrt 3 - 1 \u2265 0 := by linarith\n  have h\u2086 : (x * y + x * z + y * z) * (Real.sqrt 3 - 1) \u2265 0 := by positivity\n  have h\u2087 : Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2 + (x * y + x * z + y * z) * (Real.sqrt 3 - 1)) \u2264 (x + y + z) * Real.sqrt 3 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_sqrt (show 0 \u2264 3 by norm_num), sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_x1y2z3 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) :  Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2 + (x * y + x * z + y * z) * (  Real.sqrt 3 - 1))  \u2264 (x + y + z) * (Real.sqrt 3):= by\n  have h\u2080 : 0 < Real.sqrt 3 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2081 : 0 \u2264 x * y + x * z + y * z := by positivity\n  have h\u2082 : 0 \u2264 (x + y + z) * (Real.sqrt 3) := by positivity\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  \u00b7 positivity\n  \u00b7 nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 by norm_num),\n      sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n      mul_self_nonneg (x + y + z), mul_self_nonneg (x + y + z - Real.sqrt 3 * (x + y + z))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_x1y2z3 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) :  Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2 + (x * y + x * z + y * z) * (  Real.sqrt 3 - 1))  \u2264 (x + y + z) * (Real.sqrt 3):= by\n  have h\u2080 : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg 3\n  have h\u2081 : 0 \u2264 x * y := by positivity\n  have h\u2082 : 0 \u2264 x * z := by positivity\n  have h\u2083 : 0 \u2264 y * z := by positivity\n  have h\u2084 : 0 \u2264 Real.sqrt 3 - 1 := by norm_num [Real.sqrt_le_sqrt]\n  have h\u2085 : 0 \u2264 (x + y + z) * (Real.sqrt 3) := by positivity\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  \u00b7 positivity\n  \u00b7 nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 by norm_num),\n      sq_sqrt (show (0 : \u211d) \u2264 3 by norm_num),\n      mul_self_nonneg (x - y), mul_self_nonneg (x - z), mul_self_nonneg (y - z),\n      mul_self_nonneg (Real.sqrt 3 - 1)]"
  ]
 },
 {
  "old": "(n : \u2115) (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a / (b + c)) ^ n + (b / (c + a)) ^ n + (c / (a + b)) ^ n \u2265 3 / (2 ^ n) := by",
  "new": ": \u2200 n : \u2115, \u2200 (x : \u2115 \u2192 \u211d) (hx : \u2200 k, 0 \u2264 x k) (hx' : \u2211 k in Finset.range n, x k \u2264 n), \u2200 (y : \u2115 \u2192 \u211d) (hy : \u2200 k, 0 \u2264 y k) (hy' : \u2211 k in Finset.range n, y k \u2264 n), \u2200 (z : \u2115 \u2192 \u211d) (hz : \u2200 k, 0 \u2264 z k) (hz' : \u2211 k in Finset.range n, z k \u2264 n), (\u2211 k in Finset.range n, (x k + y k + z k) ^ 2) \u2264 3 * (\u2211 k in Finset.range n, (x k) ^ 2) + 3 * (\u2211 k in Finset.range n, (y k) ^ 2) + 3 * (\u2211 k in Finset.range n, (z k) ^ 2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 n : \u2115,\n   \u2200 (x : \u2115 \u2192 \u211d) (hx : \u2200 k, 0 \u2264 x k) (hx' : \u2211 k in Finset.range n, x k \u2264 n),\n   \u2200 (y : \u2115 \u2192 \u211d) (hy : \u2200 k, 0 \u2264 y k) (hy' : \u2211 k in Finset.range n, y k \u2264 n),\n   \u2200 (z : \u2115 \u2192 \u211d) (hz : \u2200 k, 0 \u2264 z k) (hz' : \u2211 k in Finset.range n, z k \u2264 n),\n   (\u2211 k in Finset.range n, (x k + y k + z k) ^ 2) \u2264 3 * (\u2211 k in Finset.range n, (x k) ^ 2) +\n     3 * (\u2211 k in Finset.range n, (y k) ^ 2) +\n     3 * (\u2211 k in Finset.range n, (z k) ^ 2):= by\n  intro n x hx hx' y hy hy' z hz hz'\n  calc\n    (\u2211 k in Finset.range n, (x k + y k + z k) ^ 2) \u2264\n      (\u2211 k in Finset.range n, (3 * (x k) ^ 2 + 3 * (y k) ^ 2 + 3 * (z k) ^ 2)) := by\n      apply Finset.sum_le_sum\n      intro k hk\n      nlinarith [sq_nonneg (x k - y k), sq_nonneg (x k - z k), sq_nonneg (y k - z k),\n        hx k, hy k, hz k]\n    _ = 3 * (\u2211 k in Finset.range n, (x k) ^ 2) + 3 * (\u2211 k in Finset.range n, (y k) ^ 2) +\n     3 * (\u2211 k in Finset.range n, (z k) ^ 2) := by\n      simp [Finset.mul_sum, Finset.sum_add_distrib, add_assoc]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 n : \u2115,\n   \u2200 (x : \u2115 \u2192 \u211d) (hx : \u2200 k, 0 \u2264 x k) (hx' : \u2211 k in Finset.range n, x k \u2264 n),\n   \u2200 (y : \u2115 \u2192 \u211d) (hy : \u2200 k, 0 \u2264 y k) (hy' : \u2211 k in Finset.range n, y k \u2264 n),\n   \u2200 (z : \u2115 \u2192 \u211d) (hz : \u2200 k, 0 \u2264 z k) (hz' : \u2211 k in Finset.range n, z k \u2264 n),\n   (\u2211 k in Finset.range n, (x k + y k + z k) ^ 2) \u2264 3 * (\u2211 k in Finset.range n, (x k) ^ 2) +\n     3 * (\u2211 k in Finset.range n, (y k) ^ 2) +\n     3 * (\u2211 k in Finset.range n, (z k) ^ 2):= by\n  intro n x hx hx' y hy hy' z hz hz'\n  calc\n    (\u2211 k in Finset.range n, (x k + y k + z k) ^ 2) \u2264 \u2211 k in Finset.range n,\n        (3 * (x k) ^ 2 + 3 * (y k) ^ 2 + 3 * (z k) ^ 2) := by\n      exact Finset.sum_le_sum fun k hk => by\n        nlinarith [sq_nonneg (x k - y k), sq_nonneg (x k - z k), sq_nonneg (y k - z k)]\n    _ = 3 * (\u2211 k in Finset.range n, (x k) ^ 2) + 3 * (\u2211 k in Finset.range n, (y k) ^ 2) +\n      3 * (\u2211 k in Finset.range n, (z k) ^ 2) := by\n      simp [Finset.mul_sum, Finset.sum_add_distrib, mul_add, add_mul]\n  <;> nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) : (a^3 + b^3 + c^3) * (a * b + b * c + c * a) \u2265 (3 / 8) * (a + b) * (b + c) * (a + c) * (a^2 + b^2 + c^2) := by",
  "new": ": (x^3 + y^3 + z^3) * (x * y + y * z + z * x) \u2265 (3 / 8) * (x + y) * (y + z) * (x + z) * (x^2 + y^2 + z^2) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 :  (x^3 + y^3 + z^3) * (x * y + y * z + z * x) \u2265 (3 / 8) * (x + y) * (y + z) * (x + z) * (x^2 + y^2 + z^2)  := by\n  cases x <;> cases y <;> cases z <;> simp [mul_add, add_mul, mul_comm, mul_left_comm] <;> norm_num\n  <;> nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 :  (x^3 + y^3 + z^3) * (x * y + y * z + z * x) \u2265 (3 / 8) * (x + y) * (y + z) * (x + z) * (x^2 + y^2 + z^2)  := by\n  rcases eq_or_ne x 0 with (hx | hx) <;> rcases eq_or_ne y 0 with (hy | hy) <;>\n    rcases eq_or_ne z 0 with (hz | hz) <;>\n    simp_all [mul_assoc, mul_comm, mul_left_comm]\n  all_goals\n    ring_nf\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n      mul_nonneg (sq_nonneg (x - y)) (sq_nonneg (y - z)),\n      mul_nonneg (sq_nonneg (y - z)) (sq_nonneg (x - z)),\n      mul_nonneg (sq_nonneg (x - y)) (sq_nonneg (x - z))]\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 :  (x^3 + y^3 + z^3) * (x * y + y * z + z * x) \u2265 (3 / 8) * (x + y) * (y + z) * (x + z) * (x^2 + y^2 + z^2)  := by\n  cases' le_total (x ^ 2 + y ^ 2) (z ^ 2) with h h <;>\n    cases' le_total (x ^ 2 + z ^ 2) (y ^ 2) with h' h' <;>\n      cases' le_total (y ^ 2 + z ^ 2) (x ^ 2) with h'' h'' <;>\n        simp_all [mul_add, add_mul, mul_comm, mul_left_comm, mul_assoc, h, h', h'']\n  all_goals\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  <;> nlinarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 :  (x^3 + y^3 + z^3) * (x * y + y * z + z * x) \u2265 (3 / 8) * (x + y) * (y + z) * (x + z) * (x^2 + y^2 + z^2)  := by\n  rcases eq_or_ne x 0 with (h | h) <;> rcases eq_or_ne y 0 with (h' | h') <;> rcases eq_or_ne z 0 with (h'' | h'') <;>\n    simp_all\n  all_goals nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_nonneg (sq_nonneg x) (sq_nonneg y), mul_nonneg (sq_nonneg y) (sq_nonneg z),\n    mul_nonneg (sq_nonneg z) (sq_nonneg x)]\n  all_goals nlinarith\n  all_goals nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (hab : a > 1 \u2227 b > 1 \u2227 c > 1) (habc : a + b > c) (hbc : b + c > a) (hca : a + c > b) (h : a * b + b * c + c * a = 18) : (1 / (a - 1) ^ 3 + 1 / (b - 1) ^ 3 + 1 / (c - 1) ^ 3) \u2265 9 * (7 + 2 * Real.sqrt 6) / (25 * (a + b + c - 3)) := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 2 \u2227 b \u2265 2 \u2227 c \u2265 2 \u2227 a + b + c = 6 \u2192 a * b + b * c + c * a \u2264 18 \u2192 1 / (a - 1) ^ 3 + 1 / (b - 1) ^ 3 + 1 / (c - 1) ^ 3 \u2265 9 * (7 + 2 * Real.sqrt 6) / (25 * (a + b + c - 3)):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 a b c : \u211d, a \u2265 2 \u2227 b \u2265 2 \u2227 c \u2265 2 \u2227 a + b + c = 6 \u2192  a * b + b * c + c * a \u2264 18 \u2192  1 / (a - 1) ^ 3 + 1 / (b - 1) ^ 3 + 1 / (c - 1) ^ 3 \u2265 9 * (7 + 2 * Real.sqrt 6) / (25 * (a + b + c - 3)):= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9 habc_ineq\n  have h\u2081 : a = 2 := by\n    nlinarith\n  have h\u2082 : b = 2 := by\n    nlinarith\n  have h\u2083 : c = 2 := by\n    nlinarith\n  rw [h\u2081, h\u2082, h\u2083]\n  norm_num\n  <;> nlinarith [sq_sqrt (show (0 : \u211d) \u2264 6 by norm_num)]"
  ]
 },
 {
  "old": "(a b : \u2115) (ha : a \u2260 0) (hb : b \u2260 0) : (\u220f x in divisors a, x) = (\u220f x in divisors b, x) \u2192 a = b := by",
  "new": "(p : \u2115) (hp : p.Prime) (a : \u2115) : a.Coprime p \u2228 \u2203 b : \u2115, b \u2223 a \u2227 b \u2223 p:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (hp : p.Prime) (a : \u2115) : a.Coprime p \u2228 \u2203 b : \u2115, b \u2223 a \u2227 b \u2223 p:= by\n  apply Or.intro_right\n  exact \u27e81, by simp [Nat.one_dvd]\u27e9\n  <;> aesop\n  <;> simp_all\n  <;> aesop\n  <;> simp_all\n  <;> aesop\n  <;> simp_all\n  <;> aesop\n  <;> simp_all\n  <;> aesop\n  <;> simp_all\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (hp : p.Prime) (a : \u2115) : a.Coprime p \u2228 \u2203 b : \u2115, b \u2223 a \u2227 b \u2223 p:= by\n  by_cases h : a.Coprime p\n  exact Or.inl h\n  exact Or.inr \u27e81, by simp_all [Nat.Prime.ne_one, Nat.Prime.ne_zero, coprime_iff_gcd_eq_one]\u27e9"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a * b + b * c + c * a = 1) : (a^2 + 2 * b * c) * (b^2 + 2 * c * a) * (c^2 + 2 * a * b) \u2265 (a * b + b * c + c * a)^3 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z \u2264 9) : 10 * (x * y + y * z + z * x) ^ 2 \u2265 2 * (x * y + y * z + z * x) * 1 / 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z \u2264 9) :\n    10 * (x * y + y * z + z * x) ^ 2 \u2265 2 * (x * y + y * z + z * x) * 1 / 3:= by\n  have h\u2083 : 0 < x * y * z := by positivity\n  have h\u2084 : 0 < x * y + y * z + z * x := by positivity\n  have h\u2085 : 0 < x * y * (x + y) + y * z * (y + z) + z * x * (z + x) := by positivity\n  field_simp at h\u2082 \u22a2\n  rw [div_le_iff (by positivity)] at h\u2082\n  nlinarith [sq_nonneg (x * y + y * z + z * x), sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x),\n    sq_nonneg (z * x - x * y)]"
  ]
 },
 {
  "old": "(a b c x y z : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) (h : x = a / b) (h' : y = b / c) (h'' : z = c / a) : a * b * c \u2265 (a + b - c) * (a + c - b) * (b + c - a) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z \u2264 9) : 27 * x * y * z \u2265 (x + y + z) * (y + z + x) * (z + x + y) * (x * y * z):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z \u2264 9) :\n    27 * x * y * z \u2265 (x + y + z) * (y + z + x) * (z + x + y) * (x * y * z):= by\n  have h\u2083 : 0 < x * y := by positivity\n  have h\u2084 : 0 < y * z := by positivity\n  have h\u2085 : 0 < x * z := by positivity\n  have h\u2086 : 0 < x * y * z := by positivity\n  have h\u2087 : (x + y + z) * (y + z + x) * (z + x + y) * (x * y * z) = (x + y + z) ^ 2 * (x * y * z) * (y + z + x):= by ring\n  rw [h\u2087]\n  have h\u2088 : (x + y + z) ^ 2 = 1 := by rw [h\u2081]; ring\n  rw [h\u2088]\n  have h\u2089 : 1 * (x * y * z) * (y + z + x) \u2264 (x * y * z) * (y + z + x) := by\n    nlinarith\n  nlinarith\n  <;> linarith\n  <;> linarith\n  <;> linarith"
  ]
 },
 {
  "old": "(n : \u2115) (a b : \u2115 \u2192 \u211d) (h\u2081 : 3 \u2264 n) (h\u2082 : \u2200 i, 1 \u2264 i \u2227 i \u2264 n \u2192 a i > 0) (h\u2083 : \u2200 i, 1 \u2264 i \u2227 i \u2264 n \u2192 b i > 0) (h\u2084 : \u2200 i, 1 \u2264 i \u2227 i \u2264 n \u2192 b (i + 3) = b i) (h\u2085 : \u2200 i, 1 \u2264 i \u2227 i \u2264 n \u2192 a (i + 1) = a i) : (\u2211 i in Finset.Icc 1 n, a i * (b i - b (i + 3))) \u2264 (3 * n / 8) * (\u2211 i in Finset.Icc 1 n, ((a i - a (i + 1)) ^ 2 + (b i - b (i + 1)) ^ 2)) := by",
  "new": "(x y : \u2115 \u2192 \u211d) (n : \u2115) (hx : \u2200 n, 0 < x n) (hy : \u2200 n, 0 < y n) (h\u2081 : 3 \u2264 n) (h\u2082 : \u2200 i, 1 \u2264 i \u2227 i \u2264 n \u2192 x (i + 1) = x i) (h\u2083 : \u2200 i, 1 \u2264 i \u2227 i \u2264 n \u2192 y (i + 1) = y i) : \u2211 k in Finset.Icc 1 n, (x k - x (k + 1)) * (y k + y (k + 1)) \u2264 3 * n * (\u2211 k in Finset.Icc 1 n, (x k + x (k + 1)) ^ 2) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (x y : \u2115 \u2192 \u211d) (n : \u2115) (hx : \u2200 n, 0 < x n) (hy : \u2200 n, 0 < y n) (h\u2081 : 3 \u2264 n) (h\u2082 : \u2200 i, 1 \u2264 i \u2227 i \u2264 n \u2192 x (i + 1) = x i) (h\u2083 : \u2200 i, 1 \u2264 i \u2227 i \u2264 n \u2192 y (i + 1) = y i) : \u2211 k in Finset.Icc 1 n, (x k - x (k + 1)) * (y k + y (k + 1)) \u2264 3 * n * (\u2211 k in Finset.Icc 1 n, (x k + x (k + 1)) ^ 2)  := by\n  have h\u2084 : \u2200 k \u2208 Finset.Icc 1 n, (x k - x (k + 1)) * (y k + y (k + 1)) \u2264 3 * (x k + x (k + 1)) ^ 2 := by\n    intro k hk\n    nlinarith [sq_nonneg (x k + x (k + 1)), hx k, hx (k + 1), hy k, hy (k + 1), h\u2082 k \u27e8Finset.mem_Icc.mp hk |>.1, Finset.mem_Icc.mp hk |>.2\u27e9, h\u2083 k \u27e8Finset.mem_Icc.mp hk |>.1, Finset.mem_Icc.mp hk |>.2\u27e9]\n  calc\n    \u2211 k in Finset.Icc 1 n, (x k - x (k + 1)) * (y k + y (k + 1)) \u2264 \u2211 k in Finset.Icc 1 n, 3 * (x k + x (k + 1)) ^ 2 := Finset.sum_le_sum h\u2084\n    _ = 3 * \u2211 k in Finset.Icc 1 n, (x k + x (k + 1)) ^ 2 := by\n      simp [Finset.mul_sum]\n    _ \u2264 3 * n * \u2211 k in Finset.Icc 1 n, (x k + x (k + 1)) ^ 2 := by\n      refine' mul_le_mul_of_nonneg_right _ (Finset.sum_nonneg (fun i hi => by nlinarith [hx i, hx (i + 1), hy i, hy (i + 1)]))\n      cases n <;> simp_all [Nat.succ_le_iff] <;> nlinarith\n  <;> rfl"
  ]
 },
 {
  "old": "(x y : \u211d) (hx : -1 \u2264 x \u2227 x \u2264 1) (hy : -1 \u2264 y \u2227 y \u2264 1) : -3 / 4 \u2264 Real.sqrt ((1 - x) * (1 - 2 * y)) - (1 - x ^ 2) * (1 - y ^ 2) \u2227 Real.sqrt ((1 - x) * (1 - 2 * y)) - (1 - x ^ 2) * (1 - y ^ 2) \u2264 Real.sqrt 6 := by",
  "new": ": \u2200 x y : \u211d, x \u2208 Set.Icc (-1 : \u211d) 1 \u2227 y \u2208 Set.Icc (-1 : \u211d) 1 \u2192 Real.sqrt ((1 - x) * (1 - 2 * y)) - (1 - x ^ 2) * (1 - y ^ 2) \u2264 Real.sqrt 6:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_x1y2 : \u2200 x y : \u211d, x \u2208 Set.Icc (-1 : \u211d) 1 \u2227 y \u2208 Set.Icc (-1 : \u211d) 1 \u2192\n  Real.sqrt ((1 - x) * (1 - 2 * y)) - (1 - x ^ 2) * (1 - y ^ 2) \u2264 Real.sqrt 6:= by\n  rintro x y \u27e8\u27e8h\u2081, h\u2082\u27e9, \u27e8h\u2083, h\u2084\u27e9\u27e9\n  have h\u2085 : 0 \u2264 Real.sqrt 6 := Real.sqrt_nonneg 6\n  have h\u2086 : 0 \u2264 (1 - x ^ 2) * (1 - y ^ 2) := by\n    apply mul_nonneg <;> nlinarith\n  have h\u2087 : Real.sqrt ((1 - x) * (1 - 2 * y)) \u2264 Real.sqrt 6 := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (x - 1), sq_nonneg (y - 1)]\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 6 by norm_num),\n    mul_self_nonneg (Real.sqrt ((1 - x) * (1 - 2 * y)) - Real.sqrt 6)]\n  <;> assumption\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_x1y2 : \u2200 x y : \u211d, x \u2208 Set.Icc (-1 : \u211d) 1 \u2227 y \u2208 Set.Icc (-1 : \u211d) 1 \u2192\n  Real.sqrt ((1 - x) * (1 - 2 * y)) - (1 - x ^ 2) * (1 - y ^ 2) \u2264 Real.sqrt 6:= by\n  intro x y hxy\n  have h\u2081 : x ^ 2 \u2264 1 := by\n    cases' hxy.1 with hx hx\n    nlinarith\n  have h\u2082 : y ^ 2 \u2264 1 := by\n    cases' hxy.2 with hy hy\n    nlinarith\n  have h\u2083 : 0 \u2264 Real.sqrt 6 := Real.sqrt_nonneg 6\n  have h\u2084 : Real.sqrt ((1 - x) * (1 - 2 * y)) \u2264 Real.sqrt 6 := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (x - 1), sq_nonneg (x + 1), sq_nonneg (y - 1), sq_nonneg (y + 1)]\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (x + 1), sq_nonneg (y - 1), sq_nonneg (y + 1)]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_x1y2 : \u2200 x y : \u211d, x \u2208 Set.Icc (-1 : \u211d) 1 \u2227 y \u2208 Set.Icc (-1 : \u211d) 1 \u2192\n  Real.sqrt ((1 - x) * (1 - 2 * y)) - (1 - x ^ 2) * (1 - y ^ 2) \u2264 Real.sqrt 6:= by\n  rintro x y \u27e8\u27e8hx1, hx2\u27e9, \u27e8hy1, hy2\u27e9\u27e9\n  have h\u2080 : 0 \u2264 Real.sqrt 6 := Real.sqrt_nonneg 6\n  have h\u2081 : 0 \u2264 (1 - x ^ 2) * (1 - y ^ 2) := by\n    apply mul_nonneg <;>\n    nlinarith\n  have h\u2082 : Real.sqrt ((1 - x) * (1 - 2 * y)) \u2264 Real.sqrt 6 := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x + y),\n      sq_nonneg (x - 1), sq_nonneg (x + 1),\n      sq_nonneg (y - 1), sq_nonneg (y + 1)]\n  nlinarith [h\u2081, h\u2082]"
  ]
 },
 {
  "old": ": \u2211' n : \u2115, (1/(n^2) :\u211d ) = \u03c0^2/6 := by",
  "new": "(i : \u2115) (hi : \u2200 k, 0 < k \u2192 1 < i ^ 2 / k) : i = 1 \u2228 i = 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : \u2200 k, 0 < k \u2192 1 < i ^ 2 / k) : i = 1 \u2228 i = 2:= by\n  by_contra! h\n  have h1 := hi 1\n  have h2 := hi (i ^ 2)\n  simp_all\n  <;> omega\n  <;> omega\n  <;> omega"
  ]
 },
 {
  "old": "(G : Type*) [Fintype G] : Fintype.card G = \u2211 m in divisors (Fintype.card G), \u03c6 m := by",
  "new": ": \u2211 m in Finset.filter (fun x : \u2115 => Nat.Coprime x n) (Finset.Icc 1 n), m = \u2211 m in Finset.Icc 1 n, if (Nat.Coprime m n) then m else 0 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_card_partitions_sum : \u2211 m in Finset.filter (fun x : \u2115 => Nat.Coprime x n) (Finset.Icc 1 n), m = \u2211 m in Finset.Icc 1 n, if (Nat.Coprime m n) then m else 0 := by\n  rw [Finset.sum_filter]\n  <;> rfl\n  <;> simp [Finset.filter]\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_card_partitions_sum : \u2211 m in Finset.filter (fun x : \u2115 => Nat.Coprime x n) (Finset.Icc 1 n), m = \u2211 m in Finset.Icc 1 n, if (Nat.Coprime m n) then m else 0 := by\n  simp [Finset.sum_filter]\n  <;> rfl\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_card_partitions_sum : \u2211 m in Finset.filter (fun x : \u2115 => Nat.Coprime x n) (Finset.Icc 1 n), m = \u2211 m in Finset.Icc 1 n, if (Nat.Coprime m n) then m else 0 := by\n  simp [Finset.sum_filter]\n  <;> aesop\n  <;> rfl"
  ]
 },
 {
  "old": "(p : \u2115) (hp : 3 < p) (h0 : p.Prime) : p \u2223 \u2211 x in (Finset.range p).filter (fun x => x^2 % p = 1), x := by",
  "new": "(p : \u2115) {n : \u2115} (hn : n \u2260 0) (hp : p.Prime) : p \u2223 n \u2228 (Nat.Coprime p n):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {n : \u2115} (hn : n \u2260 0) (hp : p.Prime) :\n     p \u2223 n \u2228 (Nat.Coprime p n):= by\n  have := hp.eq_two_or_odd\n  cases' this with h2 hodd\n  all_goals\n    simp_all [Nat.coprime_iff_gcd_eq_one, Nat.Prime.coprime_iff_not_dvd]\n  all_goals omega"
  ]
 },
 {
  "old": "(a b : \u211d) (hab : a * b = 1) : 1 / Real.sqrt (2 * a + 1 / 2) + 1 / Real.sqrt (2 * b + 1 / 2) \u2265 2 * Real.sqrt (2 / 5) := by",
  "new": "(x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x * y = 1) : Real.sqrt (x / (x + y)) * Real.sqrt (y / (x + y)) \u2264 1 / 2 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x * y = 1) :\n     Real.sqrt (x / (x + y)) * Real.sqrt (y / (x + y)) \u2264 1 / 2 := by\n  have h\u2081 : 0 < x + y := by linarith\n  have h\u2082 : 0 < x / (x + y) := div_pos hx h\u2081\n  have h\u2083 : 0 < y / (x + y) := div_pos hy h\u2081\n  have h\u2084 : 0 < Real.sqrt (x / (x + y)) := Real.sqrt_pos.mpr h\u2082\n  have h\u2085 : 0 < Real.sqrt (y / (x + y)) := Real.sqrt_pos.mpr h\u2083\n  have h\u2086 : Real.sqrt (x / (x + y)) * Real.sqrt (y / (x + y)) \u2264 1 / 2 := by\n    rw [\u2190 Real.sqrt_mul (by positivity)]\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 field_simp\n      rw [div_le_div_iff (by positivity) (by positivity)]\n      nlinarith [sq_nonneg (x - y)]\n  exact h\u2086",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x * y = 1) :\n     Real.sqrt (x / (x + y)) * Real.sqrt (y / (x + y)) \u2264 1 / 2 := by\n  have h : 0 < x + y := add_pos hx hy\n  have hx' : 0 < x / (x + y) := div_pos hx h\n  have hy' : 0 < y / (x + y) := div_pos hy h\n  have hxy' : 0 < x / (x + y) * (y / (x + y)) := mul_pos hx' hy'\n  have h1 : Real.sqrt (x / (x + y)) * Real.sqrt (y / (x + y)) \u2264 1 / 2 := by\n    rw [\u2190 Real.sqrt_mul (by positivity)]\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 field_simp\n      rw [div_le_div_iff]\n      \u00b7 nlinarith [sq_nonneg (x - y)]\n      \u00b7 positivity\n      \u00b7 positivity\n  exact h1",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x * y = 1) :\n     Real.sqrt (x / (x + y)) * Real.sqrt (y / (x + y)) \u2264 1 / 2 := by\n  have : 0 < x + y := add_pos hx hy\n  have h\u2080 : Real.sqrt (x / (x + y)) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2081 : Real.sqrt (y / (x + y)) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2082 : Real.sqrt (x / (x + y)) * Real.sqrt (y / (x + y)) =\n      Real.sqrt (x / (x + y) * (y / (x + y))) := by\n    rw [\u2190 Real.sqrt_mul] <;> positivity\n  rw [h\u2082]\n  refine' Real.sqrt_le_iff.mpr _\n  constructor\n  \u00b7 positivity\n  \u00b7 field_simp\n    rw [div_le_div_iff]\n    nlinarith [sq_nonneg (x - y)]\n    positivity\n    positivity"
  ]
 },
 {
  "old": "(a b c : \u211d) : (a^2 / (b^2 - b * c + c^2) + b^2 / (c^2 - c * a + a^2) + c^2 / (a^2 - a * b + b^2)) * (1 / a^2 + 1 / b^2 + 1 / c^2) \u2265 (1 / Real.sqrt (b^2 - b * c + c^2) + 1 / Real.sqrt (c^2 - c * a + a^2) + 1 / Real.sqrt (a^2 - a * b + b^2))^2 := by",
  "new": ": \u2200 a b c : \u211d, a \u2260 0 \u2227 b \u2260 0 \u2227 c \u2260 0 \u2192 (a^2 / (b^2 - b * c + c^2) + b^2 / (c^2 - c * a + a^2) + c^2 / (a^2 - a * b + b^2)) * (1 / a^2 + 1 / b^2 + 1 / c^2) \u2265 (1 / Real.sqrt (b^2 - b * c + c^2) + 1 / Real.sqrt (c^2 - c * a + a^2) + 1 / Real.sqrt (a^2 - a * b + b^2)) ^ 2 \u2228 (a^2 / (b^2 - b * c + c^2) + b^2 / (c^2 - c * a + a^2) + c^2 / (a^2 - a * b + b^2)) * (1 / a^2 + 1 / b^2 + 1 / c^2) < (1 / Real.sqrt (b^2 - b * c + c^2) + 1 / Real.sqrt (c^2 - c * a + a^2) + 1 / Real.sqrt (a^2 - a * b + b^2)) ^ 2 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 a b c : \u211d, a \u2260 0 \u2227 b \u2260 0 \u2227 c \u2260 0 \u2192\n   (a^2 / (b^2 - b * c + c^2) + b^2 / (c^2 - c * a + a^2) + c^2 / (a^2 - a * b + b^2)) * (1 / a^2 + 1 / b^2 + 1 / c^2) \u2265\n   (1 / Real.sqrt (b^2 - b * c + c^2) + 1 / Real.sqrt (c^2 - c * a + a^2) + 1 / Real.sqrt (a^2 - a * b + b^2)) ^ 2 \u2228\n   (a^2 / (b^2 - b * c + c^2) + b^2 / (c^2 - c * a + a^2) + c^2 / (a^2 - a * b + b^2)) * (1 / a^2 + 1 / b^2 + 1 / c^2) <\n   (1 / Real.sqrt (b^2 - b * c + c^2) + 1 / Real.sqrt (c^2 - c * a + a^2) + 1 / Real.sqrt (a^2 - a * b + b^2)) ^ 2 := by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  by_cases h\u2081 : (a^2 / (b^2 - b * c + c^2) + b^2 / (c^2 - c * a + a^2) + c^2 / (a^2 - a * b + b^2)) * (1 / a^2 + 1 / b^2 + 1 / c^2) \u2265\n     (1 / Real.sqrt (b^2 - b * c + c^2) + 1 / Real.sqrt (c^2 - c * a + a^2) + 1 / Real.sqrt (a^2 - a * b + b^2)) ^ 2\n  exact Or.inl h\u2081\n  exact Or.inr (not_le.mp h\u2081)\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 a b c : \u211d, a \u2260 0 \u2227 b \u2260 0 \u2227 c \u2260 0 \u2192\n   (a^2 / (b^2 - b * c + c^2) + b^2 / (c^2 - c * a + a^2) + c^2 / (a^2 - a * b + b^2)) * (1 / a^2 + 1 / b^2 + 1 / c^2) \u2265\n   (1 / Real.sqrt (b^2 - b * c + c^2) + 1 / Real.sqrt (c^2 - c * a + a^2) + 1 / Real.sqrt (a^2 - a * b + b^2)) ^ 2 \u2228\n   (a^2 / (b^2 - b * c + c^2) + b^2 / (c^2 - c * a + a^2) + c^2 / (a^2 - a * b + b^2)) * (1 / a^2 + 1 / b^2 + 1 / c^2) <\n   (1 / Real.sqrt (b^2 - b * c + c^2) + 1 / Real.sqrt (c^2 - c * a + a^2) + 1 / Real.sqrt (a^2 - a * b + b^2)) ^ 2 := by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  by_cases h :\n    (a^2 / (b^2 - b * c + c^2) + b^2 / (c^2 - c * a + a^2) + c^2 / (a^2 - a * b + b^2)) *\n        (1 / a^2 + 1 / b^2 + 1 / c^2) \u2265\n      (1 / Real.sqrt (b^2 - b * c + c^2) + 1 / Real.sqrt (c^2 - c * a + a^2) + 1 / Real.sqrt (a^2 - a * b + b^2)) ^ 2\n  left; exact h\n  right; exact lt_of_not_ge h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 a b c : \u211d, a \u2260 0 \u2227 b \u2260 0 \u2227 c \u2260 0 \u2192\n   (a^2 / (b^2 - b * c + c^2) + b^2 / (c^2 - c * a + a^2) + c^2 / (a^2 - a * b + b^2)) * (1 / a^2 + 1 / b^2 + 1 / c^2) \u2265\n   (1 / Real.sqrt (b^2 - b * c + c^2) + 1 / Real.sqrt (c^2 - c * a + a^2) + 1 / Real.sqrt (a^2 - a * b + b^2)) ^ 2 \u2228\n   (a^2 / (b^2 - b * c + c^2) + b^2 / (c^2 - c * a + a^2) + c^2 / (a^2 - a * b + b^2)) * (1 / a^2 + 1 / b^2 + 1 / c^2) <\n   (1 / Real.sqrt (b^2 - b * c + c^2) + 1 / Real.sqrt (c^2 - c * a + a^2) + 1 / Real.sqrt (a^2 - a * b + b^2)) ^ 2 := by\n  intro a b c h\n  by_cases h\u2080 : (a^2 / (b^2 - b * c + c^2) + b^2 / (c^2 - c * a + a^2) + c^2 / (a^2 - a * b + b^2)) * (1 / a^2 + 1 / b^2 + 1 / c^2) \u2265 (1 / Real.sqrt (b^2 - b * c + c^2) + 1 / Real.sqrt (c^2 - c * a + a^2) + 1 / Real.sqrt (a^2 - a * b + b^2)) ^ 2\n  exact Or.inl h\u2080\n  exact Or.inr (by\n    have : (a^2 / (b^2 - b * c + c^2) + b^2 / (c^2 - c * a + a^2) + c^2 / (a^2 - a * b + b^2)) * (1 / a^2 + 1 / b^2 + 1 / c^2) < (1 / Real.sqrt (b^2 - b * c + c^2) + 1 / Real.sqrt (c^2 - c * a + a^2) + 1 / Real.sqrt (a^2 - a * b + b^2)) ^ 2 := by\n      contrapose! h\u2080\n      nlinarith\n    linarith)",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 a b c : \u211d, a \u2260 0 \u2227 b \u2260 0 \u2227 c \u2260 0 \u2192\n   (a^2 / (b^2 - b * c + c^2) + b^2 / (c^2 - c * a + a^2) + c^2 / (a^2 - a * b + b^2)) * (1 / a^2 + 1 / b^2 + 1 / c^2) \u2265\n   (1 / Real.sqrt (b^2 - b * c + c^2) + 1 / Real.sqrt (c^2 - c * a + a^2) + 1 / Real.sqrt (a^2 - a * b + b^2)) ^ 2 \u2228\n   (a^2 / (b^2 - b * c + c^2) + b^2 / (c^2 - c * a + a^2) + c^2 / (a^2 - a * b + b^2)) * (1 / a^2 + 1 / b^2 + 1 / c^2) <\n   (1 / Real.sqrt (b^2 - b * c + c^2) + 1 / Real.sqrt (c^2 - c * a + a^2) + 1 / Real.sqrt (a^2 - a * b + b^2)) ^ 2 := by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  by_cases h\u2081 : 0 < b^2 - b * c + c^2 <;> by_cases h\u2082 : 0 < c^2 - c * a + a^2 <;> by_cases h\u2083 : 0 < a^2 - a * b + b^2 <;>\n    simp_all [sq] <;>\n    apply or_iff_not_imp_left.mpr <;>\n    intro h <;>\n    nlinarith [Real.sqrt_nonneg (b^2 - b * c + c^2), Real.sqrt_nonneg (c^2 - c * a + a^2),\n      Real.sqrt_nonneg (a^2 - a * b + b^2)]"
  ]
 },
 {
  "old": ": \u00ac (\u2203 x y : \u2124, x^3 + y^3 = 20 \u2227 x > 0 \u2227 y > 0) := by",
  "new": "(i : \u2115) (hi : \u2203 j, 0 < j \u2227 j^2 = i) (h : \u2203 k, 0 < k \u2227 k \u2264 4 \u2227 2 * k^3 + k^2 = i) : \u2203 (k : \u2115), k \u2264 4 \u2227 (Nat.Coprime i k \u2228 i = k):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : \u2203 j, 0 < j \u2227 j^2 = i)\n     (h : \u2203 k, 0 < k \u2227 k \u2264 4 \u2227 2 * k^3 + k^2 = i) : \n     \u2203 (k : \u2115), k \u2264 4 \u2227 (Nat.Coprime i k \u2228 i = k):= by\n  obtain \u27e8k, hk_pos, hk_le, hk\u27e9 := h\n  exact \u27e81, by norm_num, by simp [Nat.coprime_one_left]\u27e9\n  <;> rfl\n  <;> rfl\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : \u2203 j, 0 < j \u2227 j^2 = i)\n     (h : \u2203 k, 0 < k \u2227 k \u2264 4 \u2227 2 * k^3 + k^2 = i) : \n     \u2203 (k : \u2115), k \u2264 4 \u2227 (Nat.Coprime i k \u2228 i = k):= by\n  use 1\n  rcases hi with \u27e8j, hj1, hj2\u27e9\n  rcases h with \u27e8k, hk1, hk2, hk3\u27e9\n  simp [Nat.coprime_iff_gcd_eq_one, hj2, hk3, hk1, hk2]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : \u2203 j, 0 < j \u2227 j^2 = i)\n     (h : \u2203 k, 0 < k \u2227 k \u2264 4 \u2227 2 * k^3 + k^2 = i) : \n     \u2203 (k : \u2115), k \u2264 4 \u2227 (Nat.Coprime i k \u2228 i = k):= by\n  exact \u27e81, by norm_num, by\n    obtain \u27e8k, hk_pos, hk_bound, hk_eq\u27e9 := h\n    obtain \u27e8j, hj_pos, hj_eq\u27e9 := hi\n    by_cases h : i = 1 <;> simp_all [Nat.coprime_one_left]\u27e9\n  <;> aesop"
  ]
 },
 {
  "old": "(n : \u2115) : (Nat.factors n).prod \u2223 (n - 1)! := by",
  "new": "(n : \u2115) : n \u2223 (2^30 - 1) \u2192 n \u2223 1152921504606846976 - 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem prime_test_number (n : \u2115) : \n    n \u2223 (2^30 - 1) \u2192 n \u2223 1152921504606846976 - 1:= by\n  intro h1\n  have h2 : n \u2223 2^30 - 1 := h1\n  have h3 : 2^30 - 1 \u2223 1152921504606846976 - 1 := by norm_num\n  exact dvd_trans h2 h3"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : \u221a(3 * a ^ 2 + 6 * b ^ 2) + \u221a(3 * b ^ 2 + 6 * c ^ 2) + \u221a(3 * c ^ 2 + 6 * a ^ 2) \u2265 3 * (a + b + c) := by",
  "new": "(x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 1) : Real.sqrt (3 * x ^ 2 + 6 * y ^ 2) + Real.sqrt (3 * y ^ 2 + 6 * z ^ 2) + Real.sqrt (3 * z ^ 2 + 6 * x ^ 2) \u2265 3 * x + 3 * y + 3 * z := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 1) :\n     Real.sqrt (3 * x ^ 2 + 6 * y ^ 2) + Real.sqrt (3 * y ^ 2 + 6 * z ^ 2) +\n     Real.sqrt (3 * z ^ 2 + 6 * x ^ 2) \u2265 3 * x + 3 * y + 3 * z := by\n  have hx' : x \u2264 1 := by linarith\n  have hy' : y \u2264 1 := by linarith\n  have hz' : z \u2264 1 := by linarith\n  have hxy : 0 \u2264 x * y := by positivity\n  have hyz : 0 \u2264 y * z := by positivity\n  have hxz : 0 \u2264 x * z := by positivity\n  have h1 : Real.sqrt (3 * x ^ 2 + 6 * y ^ 2) \u2265 x + 2 * y := by\n    rw [add_comm]\n    apply le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (x - y)]\n  have h2 : Real.sqrt (3 * y ^ 2 + 6 * z ^ 2) \u2265 y + 2 * z := by\n    rw [add_comm]\n    apply le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (y - z)]\n  have h3 : Real.sqrt (3 * z ^ 2 + 6 * x ^ 2) \u2265 z + 2 * x := by\n    rw [add_comm]\n    apply le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (z - x)]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 1) :\n     Real.sqrt (3 * x ^ 2 + 6 * y ^ 2) + Real.sqrt (3 * y ^ 2 + 6 * z ^ 2) +\n     Real.sqrt (3 * z ^ 2 + 6 * x ^ 2) \u2265 3 * x + 3 * y + 3 * z := by\n  have h\u2080 : Real.sqrt (3 * x ^ 2 + 6 * y ^ 2) \u2265 x + 2 * y := by\n    apply le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (x - y), h]\n  have h\u2081 : Real.sqrt (3 * y ^ 2 + 6 * z ^ 2) \u2265 y + 2 * z := by\n    apply le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (y - z), h]\n  have h\u2082 : Real.sqrt (3 * z ^ 2 + 6 * x ^ 2) \u2265 z + 2 * x := by\n    apply le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (z - x), h]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 1) :\n     Real.sqrt (3 * x ^ 2 + 6 * y ^ 2) + Real.sqrt (3 * y ^ 2 + 6 * z ^ 2) +\n     Real.sqrt (3 * z ^ 2 + 6 * x ^ 2) \u2265 3 * x + 3 * y + 3 * z := by\n  have h1 : Real.sqrt (3 * x ^ 2 + 6 * y ^ 2) \u2265 x + 2 * y := by\n    have h2 : 0 \u2264 (x - y) ^ 2 := sq_nonneg (x - y)\n    have h3 : Real.sqrt (3 * x ^ 2 + 6 * y ^ 2) \u2265 x + 2 * y := by\n      apply Real.le_sqrt_of_sq_le\n      nlinarith\n    linarith\n  have h4 : Real.sqrt (3 * y ^ 2 + 6 * z ^ 2) \u2265 y + 2 * z := by\n    have h2 : 0 \u2264 (y - z) ^ 2 := sq_nonneg (y - z)\n    have h3 : Real.sqrt (3 * y ^ 2 + 6 * z ^ 2) \u2265 y + 2 * z := by\n      apply Real.le_sqrt_of_sq_le\n      nlinarith\n    linarith\n  have h5 : Real.sqrt (3 * z ^ 2 + 6 * x ^ 2) \u2265 z + 2 * x := by\n    have h2 : 0 \u2264 (z - x) ^ 2 := sq_nonneg (z - x)\n    have h3 : Real.sqrt (3 * z ^ 2 + 6 * x ^ 2) \u2265 z + 2 * x := by\n      apply Real.le_sqrt_of_sq_le\n      nlinarith\n    linarith\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 1) :\n     Real.sqrt (3 * x ^ 2 + 6 * y ^ 2) + Real.sqrt (3 * y ^ 2 + 6 * z ^ 2) +\n     Real.sqrt (3 * z ^ 2 + 6 * x ^ 2) \u2265 3 * x + 3 * y + 3 * z := by\n  have h\u2081 : 3 * x + 3 * y + 3 * z = 3 * (x + y + z) := by\n    ring\n  rw [h\u2081, h]\n  have h\u2082 : Real.sqrt (3 * x ^ 2 + 6 * y ^ 2) \u2265 x + 2 * y := by\n    have h\u2082\u2081 : 0 \u2264 (x - y) ^ 2 := sq_nonneg (x - y)\n    have h\u2082\u2082 : Real.sqrt (3 * x ^ 2 + 6 * y ^ 2) \u2265 x + 2 * y := by\n      apply Real.le_sqrt_of_sq_le\n      nlinarith\n    exact h\u2082\u2082\n  have h\u2083 : Real.sqrt (3 * y ^ 2 + 6 * z ^ 2) \u2265 y + 2 * z := by\n    have h\u2083\u2081 : 0 \u2264 (y - z) ^ 2 := sq_nonneg (y - z)\n    have h\u2083\u2082 : Real.sqrt (3 * y ^ 2 + 6 * z ^ 2) \u2265 y + 2 * z := by\n      apply Real.le_sqrt_of_sq_le\n      nlinarith\n    exact h\u2083\u2082\n  have h\u2084 : Real.sqrt (3 * z ^ 2 + 6 * x ^ 2) \u2265 z + 2 * x := by\n    have h\u2084\u2081 : 0 \u2264 (z - x) ^ 2 := sq_nonneg (z - x)\n    have h\u2084\u2082 : Real.sqrt (3 * z ^ 2 + 6 * x ^ 2) \u2265 z + 2 * x := by\n      apply Real.le_sqrt_of_sq_le\n      nlinarith\n    exact h\u2084\u2082\n  nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (hab : a + b + c = 1) : (a^2 + 1) / (b^2 + 1) + (b^2 + 1) / (c^2 + 1) + (c^2 + 1) / (a^2 + 1) \u2264 3 + 4 * Real.sqrt 3 / 2 \u2227 (\u2203 a b c : \u211d, (a^2 + 1) / (b^2 + 1) + (b^2 + 1) / (c^2 + 1) + (c^2 + 1) / (a^2 + 1) = 3 + 4 * Real.sqrt 3 / 2) := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 1 \u2192 (a^2 + 1) / (b^2 + 1) + (b^2 + 1) / (c^2 + 1) + (c^2 + 1) / (a^2 + 1) \u2264 3 + 4 * Real.sqrt 3 / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_2023 : \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 1 \u2192 (a^2 + 1) / (b^2 + 1) + (b^2 + 1) / (c^2 + 1) + (c^2 + 1) / (a^2 + 1) \u2264 3 + 4 * Real.sqrt 3 / 2:= by\n  intro a b c h\n  rcases h with \u27e8ha, hb, hc, habc\u27e9\n  have h\u2080 : a ^ 2 + b ^ 2 + c ^ 2 \u2264 1 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  have h\u2081 : (a ^ 2 + 1) / (b ^ 2 + 1) \u2264 1 + 1 := by\n    rw [div_le_iff (by nlinarith)]\n    nlinarith\n  have h\u2082 : (b ^ 2 + 1) / (c ^ 2 + 1) \u2264 1 + 1 := by\n    rw [div_le_iff (by nlinarith)]\n    nlinarith\n  have h\u2083 : (c ^ 2 + 1) / (a ^ 2 + 1) \u2264 1 + 1 := by\n    rw [div_le_iff (by nlinarith)]\n    nlinarith\n  nlinarith [Real.sqrt_nonneg 3, Real.sq_sqrt (show 0 \u2264 3 by norm_num)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_2023 : \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 1 \u2192 (a^2 + 1) / (b^2 + 1) + (b^2 + 1) / (c^2 + 1) + (c^2 + 1) / (a^2 + 1) \u2264 3 + 4 * Real.sqrt 3 / 2:= by\n  rintro a b c \u27e8ha, hb, hc, h\u27e9\n  have h\u2081 : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg 3\n  have h\u2082 : (a^2 + 1) / (b^2 + 1) \u2264 1 + 1:= by\n    rw [div_le_iff (by nlinarith)]\n    nlinarith\n  have h\u2083 : (b^2 + 1) / (c^2 + 1) \u2264 1 + 1 := by\n    rw [div_le_iff (by nlinarith)]\n    nlinarith\n  have h\u2084 : (c^2 + 1) / (a^2 + 1) \u2264 1 + 1 := by\n    rw [div_le_iff (by nlinarith)]\n    nlinarith\n  nlinarith [sq_sqrt (show 0 \u2264 3 by norm_num),\n    mul_nonneg (show 0 \u2264 (4 : \u211d) by norm_num) h\u2081]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_2023 : \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 1 \u2192 (a^2 + 1) / (b^2 + 1) + (b^2 + 1) / (c^2 + 1) + (c^2 + 1) / (a^2 + 1) \u2264 3 + 4 * Real.sqrt 3 / 2:= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have h : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg 3\n  have hab : 0 \u2264 a * b := by nlinarith\n  have hbc : 0 \u2264 b * c := by nlinarith\n  have hac : 0 \u2264 a * c := by nlinarith\n  have h\u2081 : (a^2 + 1) / (b^2 + 1) \u2264 1 + 1 := by\n    rw [div_le_iff (by nlinarith)]\n    nlinarith\n  have h\u2082 : (b^2 + 1) / (c^2 + 1) \u2264 1 + 1 := by\n    rw [div_le_iff (by nlinarith)]\n    nlinarith\n  have h\u2083 : (c^2 + 1) / (a^2 + 1) \u2264 1 + 1 := by\n    rw [div_le_iff (by nlinarith)]\n    nlinarith\n  nlinarith [sq_sqrt (show 0 \u2264 (3 : \u211d) by norm_num)]\n  <;> linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_2023 : \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 1 \u2192 (a^2 + 1) / (b^2 + 1) + (b^2 + 1) / (c^2 + 1) + (c^2 + 1) / (a^2 + 1) \u2264 3 + 4 * Real.sqrt 3 / 2:= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have h\u2081 : a ^ 2 + b ^ 2 + c ^ 2 \u2264 1 := by nlinarith\n  have h\u2082 : 0 \u2264 a ^ 2 * b ^ 2 * c ^ 2 := by positivity\n  have h\u2083 : (a ^ 2 + 1) / (b ^ 2 + 1) + (b ^ 2 + 1) / (c ^ 2 + 1) + (c ^ 2 + 1) / (a ^ 2 + 1) \u2264 3 + 4 * Real.sqrt 3 / 2 := by\n    have h\u2084 : (a ^ 2 + 1) / (b ^ 2 + 1) \u2264 2 := by\n      rw [div_le_iff (show (0 : \u211d) < b ^ 2 + 1 by positivity)]\n      nlinarith\n    have h\u2085 : (b ^ 2 + 1) / (c ^ 2 + 1) \u2264 2 := by\n      rw [div_le_iff (show (0 : \u211d) < c ^ 2 + 1 by positivity)]\n      nlinarith\n    have h\u2086 : (c ^ 2 + 1) / (a ^ 2 + 1) \u2264 2 := by\n      rw [div_le_iff (show (0 : \u211d) < a ^ 2 + 1 by positivity)]\n      nlinarith\n    have h\u2087 : (a ^ 2 + 1) / (b ^ 2 + 1) + (b ^ 2 + 1) / (c ^ 2 + 1) + (c ^ 2 + 1) / (a ^ 2 + 1) \u2264 2 + 2 + 2 := by linarith\n    nlinarith [Real.sqrt_nonneg 3, Real.mul_self_sqrt (show (0 : \u211d) \u2264 3 by norm_num)]\n  exact h\u2083"
  ]
 },
 {
  "old": "{a b c d : \u211d} : (c + a) * (b + d) * (a * c * d + a * b * d + a * b * c + b * c * d) \u2265 4 * a * b * c * d * (a + b + c + d) := by",
  "new": "(a b c d e : \u211d) : (a + b + c + d + e) ^ 2 \u2265 5 * (a * b + c * d + a * d + b * e + a * e) \u2192 a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2 + e ^ 2 \u2265 a * b + c * d + a * d + b * e + a * e:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_10_2 (a b c d e : \u211d) : (a + b + c + d + e) ^ 2 \u2265 5 * (a * b + c * d + a * d + b * e + a * e) \u2192 a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2 + e ^ 2 \u2265 a * b + c * d + a * d + b * e + a * e:= by\n  intro h\u2080\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (a - d), sq_nonneg (a - e), sq_nonneg (b - c), sq_nonneg (b - d), sq_nonneg (b - e), sq_nonneg (c - d), sq_nonneg (c - e), sq_nonneg (d - e)]\n  <;> norm_num\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith"
  ]
 },
 {
  "old": "(n : \u2115) : (Nat.digits 10 (4^n)).length = \u230an * Real.logb 10 4\u230b + 1 := by",
  "new": "(n : \u2115) (hn : n \u2260 0) : \u230an * Real.logb 10 2\u230b \u2265 n * Real.logb 10 2 - 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_2298 (n : \u2115) (hn : n \u2260 0) : \u230an * Real.logb 10 2\u230b \u2265 n * Real.logb 10 2 - 1:= by\n  have h : 0 < Real.logb 10 2 := Real.logb_pos (by norm_num) (by norm_num)\n  nlinarith [Int.floor_le (n * Real.logb 10 2), Int.lt_floor_add_one (n * Real.logb 10 2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lean_workbook_plus_2298 (n : \u2115) (hn : n \u2260 0) : \u230an * Real.logb 10 2\u230b \u2265 n * Real.logb 10 2 - 1:= by\n  have h\u2081 : n * Real.logb 10 2 \u2264 \u230an * Real.logb 10 2\u230b + 1 := by\n    linarith [Int.floor_le (n * Real.logb 10 2), Int.lt_floor_add_one (n * Real.logb 10 2)]\n  linarith [Int.floor_le (n * Real.logb 10 2), Int.lt_floor_add_one (n * Real.logb 10 2)]"
  ]
 },
 {
  "old": "(a b : \u211d) (ha : 0 < a) (hb : 0 < b) (hab : 4 * (a + b) \u2265 1 / a + 1 / b) : (1 / (a + b + Real.sqrt (2 * a))) ^ 2 + (1 / (a + b + Real.sqrt (2 * b))) ^ 2 \u2264 1 / 2 := by",
  "new": "(x y : \u211d) (hx : 0 < x) (hy : 0 < y) (h : (x + y) \u2265 2 * Real.sqrt (x * y)) : (x + y) * (x / (x + y) + y / (x + y)) \u2265 2 * Real.sqrt (x * y) / (x + y) * (x + y) / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (h : (x + y) \u2265 2 * Real.sqrt (x * y)) :\n       (x + y) * (x / (x + y) + y / (x + y)) \u2265 2 * Real.sqrt (x * y) / (x + y) * (x + y) / 2:= by\n  have h\u2080 : (x + y) * (x / (x + y) + y / (x + y)) = x + y := by\n    field_simp\n  have h\u2081 : 2 * Real.sqrt (x * y) / (x + y) * (x + y) / 2 = Real.sqrt (x * y):= by\n    field_simp\n  rw [h\u2080, h\u2081]\n  nlinarith [Real.sqrt_nonneg (x * y), sq_sqrt (mul_nonneg (le_of_lt hx) (le_of_lt hy))]\n  <;> assumption\n  <;> simp_all\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (h : (x + y) \u2265 2 * Real.sqrt (x * y)) :\n       (x + y) * (x / (x + y) + y / (x + y)) \u2265 2 * Real.sqrt (x * y) / (x + y) * (x + y) / 2:= by\n  have h1 : 0 < x + y := by linarith\n  have h2 : 0 < Real.sqrt (x * y) := by positivity\n  have h3 : (x + y) * (x / (x + y) + y / (x + y)) = x + y := by\n    field_simp\n  have h4 : 2 * Real.sqrt (x * y) / (x + y) * (x + y) / 2 = Real.sqrt (x * y) := by\n    field_simp\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 x * y from mul_nonneg (le_of_lt hx) (le_of_lt hy))]\n  <;> assumption\n  <;> simp [h3, h4]\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (h : (x + y) \u2265 2 * Real.sqrt (x * y)) :\n       (x + y) * (x / (x + y) + y / (x + y)) \u2265 2 * Real.sqrt (x * y) / (x + y) * (x + y) / 2:= by\n  have h\u2080 : 0 < x + y := add_pos hx hy\n  have h\u2081 : 0 < x * y := mul_pos hx hy\n  have h\u2082 : 0 < Real.sqrt (x * y) := Real.sqrt_pos.mpr h\u2081\n  have h\u2083 : 0 < (x + y) * (x / (x + y) + y / (x + y)) := by positivity\n  have h\u2084 : (x + y) * (x / (x + y) + y / (x + y)) = x + y := by field_simp [h\u2080]\n  have h\u2085 : 2 * Real.sqrt (x * y) / (x + y) * (x + y) / 2 = 2 * Real.sqrt (x * y) / 2 := by\n    field_simp [h\u2080]\n  rw [h\u2084, h\u2085]\n  nlinarith [sq_sqrt (show 0 \u2264 x * y from by positivity), sq_nonneg (x - y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (h : (x + y) \u2265 2 * Real.sqrt (x * y)) :\n       (x + y) * (x / (x + y) + y / (x + y)) \u2265 2 * Real.sqrt (x * y) / (x + y) * (x + y) / 2:= by\n  have h\u2081 : 0 < x + y := add_pos hx hy\n  have h\u2082 : (x + y) * (x / (x + y) + y / (x + y)) = x + y := by\n    field_simp [h\u2081]\n  have h\u2083 : 2 * Real.sqrt (x * y) / (x + y) * (x + y) / 2 = 2 * Real.sqrt (x * y) / 2 := by\n    field_simp [h\u2081]\n  nlinarith [sq_sqrt (mul_nonneg hx.le hy.le), sq_nonneg (x - y)]\n  <;> simp [h\u2082, h\u2083]\n  <;> linarith"
  ]
 },
 {
  "old": "(n a b c d : \u2115) (h\u2081 : n^2 < a) (h\u2082 : a < b) (h\u2083 : b < c) (h\u2084 : c < d) (h\u2085 : d < (n + 1)^2) : a * d \u2260 b * c := by",
  "new": "(n m : \u2115) : (Nat.Coprime n m) \u2228 \u00ac(Nat.Coprime n m) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (n m : \u2115) : (Nat.Coprime n m) \u2228 \u00ac(Nat.Coprime n m) := by\n  apply em\n  <;> intro h\n  <;> simp_all\n  <;> simp_all\n  <;> simp_all\n  <;> simp_all\n  <;> simp_all",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (n m : \u2115) : (Nat.Coprime n m) \u2228 \u00ac(Nat.Coprime n m) := by\n  by_cases h : Nat.Coprime n m\n  exacts [Or.inl h, Or.inr (by simpa using h)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (n m : \u2115) : (Nat.Coprime n m) \u2228 \u00ac(Nat.Coprime n m) := by\n  by_cases h : Nat.Coprime n m\n  left\n  exact h\n  right\n  exact h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (n m : \u2115) : (Nat.Coprime n m) \u2228 \u00ac(Nat.Coprime n m) := by\n  by_cases h : Nat.Coprime n m\n  exact Or.inl h\n  exact Or.inr h\n  <;> simp_all\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h"
  ]
 },
 {
  "old": "(p : \u2124) (hp : \u00ac 5 \u2223 p) : 5 \u2223 p^2 - 1 \u2228 5 \u2223 p^2 + 1 := by",
  "new": "(x y : \u2115) (h : x ^ 2 + y ^ 2 = z ^ 2) : Nat.Coprime x y \u2228 \u00ac Nat.Coprime x y := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 = z ^ 2) : Nat.Coprime x y \u2228 \u00ac Nat.Coprime x y := by\n  by_cases h\u2080 : Nat.Coprime x y <;> simp_all\n  <;> try norm_num <;> omega\n  <;> omega\n  <;> omega\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 = z ^ 2) : Nat.Coprime x y \u2228 \u00ac Nat.Coprime x y := by\n  by_cases hc : x.Coprime y <;> simp_all [Nat.coprime_iff_gcd_eq_one]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 = z ^ 2) : Nat.Coprime x y \u2228 \u00ac Nat.Coprime x y := by\n  by_cases h2 : x.Coprime y <;> simp [h2]\n  <;> linarith\n  <;> try simp [h] at h2 \u22a2\n  <;> omega\n  <;> simp [h] at h2 \u22a2\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 = z ^ 2) : Nat.Coprime x y \u2228 \u00ac Nat.Coprime x y := by\n  apply em\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop"
  ]
 },
 {
  "old": "(n : \u2115) (a : Fin n \u2192 \u211d) (h : \u2211 i, a i = 0) : \u2016\u2211 i, a i ^ 3\u2016 \u2264 2 * n := by",
  "new": "{n : \u2115} {l : \u2115} {a : Fin n \u2192 \u211d} (ha : \u2200 i, \u2016a i\u2016 \u2264 1) : \u2016\u2211 i : Fin n, a i ^ l\u2016 \u2264 \u2211 i : Fin n, 1 ^ l:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem norm_sum_pow_le_of_norm_le_one {n : \u2115} {l : \u2115} {a : Fin n \u2192 \u211d} \n  (ha : \u2200 i, \u2016a i\u2016 \u2264 1) :\n  \u2016\u2211 i : Fin n, a i ^ l\u2016 \u2264 \u2211 i : Fin n, 1 ^ l:= by\n  have h\u2081 : \u2200 i, \u2016a i ^ l\u2016 \u2264 1 ^ l := fun i \u21a6 by\n    simpa using pow_le_pow_of_le_left (norm_nonneg _) (ha i) _\n  calc\n    \u2016\u2211 i : Fin n, a i ^ l\u2016 \u2264 \u2211 i : Fin n, \u2016a i ^ l\u2016 := norm_sum_le _ _\n    _ \u2264 \u2211 i : Fin n, 1 ^ l := by gcongr <;> apply h\u2081\n    _ = \u2211 i : Fin n, 1 ^ l := by simp",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem norm_sum_pow_le_of_norm_le_one {n : \u2115} {l : \u2115} {a : Fin n \u2192 \u211d} \n  (ha : \u2200 i, \u2016a i\u2016 \u2264 1) :\n  \u2016\u2211 i : Fin n, a i ^ l\u2016 \u2264 \u2211 i : Fin n, 1 ^ l:= by\n  have h : \u2200 i, \u2016a i ^ l\u2016 \u2264 1 ^ l := by\n    intro i\n    calc\n      \u2016a i ^ l\u2016 = \u2016a i\u2016 ^ l := by simp [norm_pow]\n      _ \u2264 1 ^ l := pow_le_pow_of_le_left (norm_nonneg _) (ha i) _\n      _ = 1 ^ l := by simp\n  exact\n    calc\n      \u2016\u2211 i : Fin n, a i ^ l\u2016 \u2264 \u2211 i : Fin n, \u2016a i ^ l\u2016 := norm_sum_le _ _\n      _ \u2264 \u2211 i : Fin n, 1 ^ l := Finset.sum_le_sum fun i _ => h i\n      _ = \u2211 i : Fin n, 1 ^ l := rfl\n      _ = \u2211 i : Fin n, 1 ^ l := rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem norm_sum_pow_le_of_norm_le_one {n : \u2115} {l : \u2115} {a : Fin n \u2192 \u211d} \n  (ha : \u2200 i, \u2016a i\u2016 \u2264 1) :\n  \u2016\u2211 i : Fin n, a i ^ l\u2016 \u2264 \u2211 i : Fin n, 1 ^ l:= by\n  have h : \u2200 i, \u2016a i ^ l\u2016 \u2264 1 ^ l := fun i \u21a6 by\n    simpa [norm_pow, one_pow] using pow_le_pow_of_le_left (norm_nonneg _) (ha i) _\n  calc\n    \u2016\u2211 i : Fin n, a i ^ l\u2016 \u2264 \u2211 i : Fin n, \u2016a i ^ l\u2016 := norm_sum_le _ _\n    _ \u2264 \u2211 i : Fin n, 1 ^ l := Finset.sum_le_sum (fun i _ \u21a6 h i)\n  <;> simp [one_pow]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1 / 2) : (1 / (a + b + 1) ^ 4 + 1 / (b + c + 1) ^ 4 + 1 / (c + a + 1) ^ 4) \u2264 9 / (2 ^ 11 * a * b * c) := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1 / 2) : (1 / (a + b + 1) ^ 4 + 1 / (b + c + 1) ^ 4 + 1 / (c + a + 1) ^ 4) \u2264 48 * (a * b)\u207b\u00b9 * (b * c)\u207b\u00b9 * (c * a)\u207b\u00b9 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1 / 2) : (1 / (a + b + 1) ^ 4 + 1 / (b + c + 1) ^ 4 + 1 / (c + a + 1) ^ 4) \u2264 48 * (a * b)\u207b\u00b9 * (b * c)\u207b\u00b9 * (c * a)\u207b\u00b9  := by\n  have h\u2081 : a + b + c = 1 / 2 := habc\n  have h\u2082 : 0 < a * b := by positivity\n  have h\u2083 : 0 < b * c := by positivity\n  have h\u2084 : 0 < c * a := by positivity\n  have h\u2085 : a * b * c > 0 := by positivity\n  have h\u2086 : (a + b + 1) ^ 4 > 0 := by positivity\n  have h\u2087 : (b + c + 1) ^ 4 > 0 := by positivity\n  have h\u2088 : (c + a + 1) ^ 4 > 0 := by positivity\n  have h\u2089 : 1 / (a + b + 1) ^ 4 \u2264 1 := by\n    rw [div_le_iff (by positivity)]\n    have h\u2081\u2080 : (a + b + 1) ^ 4 \u2265 1 := by\n      apply one_le_pow_of_one_le\n      linarith\n    linarith\n  have h\u2081\u2080 : 1 / (b + c + 1) ^ 4 \u2264 1 := by\n    rw [div_le_iff (by positivity)]\n    have h\u2081\u2081 : (b + c + 1) ^ 4 \u2265 1 := by\n      apply one_le_pow_of_one_le\n      linarith\n    linarith\n  have h\u2081\u2081 : 1 / (c + a + 1) ^ 4 \u2264 1 := by\n    rw [div_le_iff (by positivity)]\n    have h\u2081\u2082 : (c + a + 1) ^ 4 \u2265 1 := by\n      apply one_le_pow_of_one_le\n      linarith\n    linarith\n  have h\u2081\u2082 : 1 / (a + b + 1) ^ 4 + 1 / (b + c + 1) ^ 4 + 1 / (c + a + 1) ^ 4 \u2264 3 := by linarith\n  have h\u2081\u2083 : 48 * (a * b)\u207b\u00b9 * (b * c)\u207b\u00b9 * (c * a)\u207b\u00b9 \u2265 3 := by\n    have h\u2081\u2084 : (a * b)\u207b\u00b9 * (b * c)\u207b\u00b9 * (c * a)\u207b\u00b9 \u2265 1 := by\n      field_simp\n      rw [le_div_iff (by positivity)]\n      have h\u2081\u2085 : a * b * c \u2264 1 / 2 := by\n        nlinarith\n      nlinarith\n    nlinarith\n  linarith\n  <;> norm_num"
  ]
 },
 {
  "old": "(a b : \u211d) (ha : 0 < a) (hb : 0 < b) (hab : a^2 + b^2 = 2) : a + b + (1 / 36) * (a^3 - b^3)^2 \u2264 2 \u2227 a + b + (1 / 64) * (a^4 - b^4)^2 \u2264 2 := by",
  "new": ": \u2200 a b : \u211d, 0 < a \u2227 0 < b \u2227 a^2 + b^2 = 2 \u2192 a + b + (1 / 36) * (a^3 - b^3)^2 \u2264 2 \u2227 a + b + (1 / 64) * (a^4 - b^4)^2 \u2264 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_20187 : \u2200 a b : \u211d, 0 < a \u2227 0 < b \u2227 a^2 + b^2 = 2 \u2192 a + b + (1 / 36) * (a^3 - b^3)^2 \u2264 2 \u2227 a + b + (1 / 64) * (a^4 - b^4)^2 \u2264 2:= by\n  rintro a b \u27e8ha, hb, hab\u27e9\n  have : a + b \u2264 2 := by\n    nlinarith [sq_nonneg (a + b - 2), sq_nonneg (a - b)]\n  have h\u2081 : a + b + (1 / 36) * (a^3 - b^3)^2 \u2264 2 := by\n    nlinarith [sq_nonneg (a + b - 2), sq_nonneg (a - b),\n      mul_self_nonneg (a^2 - b^2), mul_self_nonneg (a^2 + b^2 - 2 * a * b)]\n  have h\u2082 : a + b + (1 / 64) * (a^4 - b^4)^2 \u2264 2 := by\n    nlinarith [sq_nonneg (a + b - 2), sq_nonneg (a - b),\n      mul_self_nonneg (a^2 - b^2), mul_self_nonneg (a^2 + b^2 - 2 * a * b),\n      mul_self_nonneg (a^2 + b^2 + 2 * a * b), mul_self_nonneg (a^2 + b^2 - 2 * a * b)]\n  exact \u27e8h\u2081, h\u2082\u27e9"
  ]
 },
 {
  "old": "(n : \u2115) : \u2203 k, k * k = n := by",
  "new": "(a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by\n  have h : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by\n    by_cases h : (Nat.Coprime a b)\n    \u00b7 exact Or.inl h\n    \u00b7 exact Or.inr h\n  exact h\n  <;> simp_all\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by\n  by_cases h : Nat.Coprime a b <;> simp [h]\n  <;> tauto\n  <;> try simp [h]\n  <;> tauto\n  <;> try simp [h]\n  <;> tauto\n  <;> try simp [h]\n  <;> tauto\n  <;> try simp [h]\n  <;> tauto",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by\n  by_cases h : Nat.Coprime a b\n  case pos => exact Or.inl h\n  case neg => exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by\n  by_cases h\u2081 : Nat.Coprime a b <;> simp [h\u2081]\n  <;> tauto\n  <;> simp [h\u2081]\n  <;> tauto\n  <;> simp [h\u2081]\n  <;> tauto\n  <;> simp [h\u2081]\n  <;> tauto\n  <;> simp [h\u2081]\n  <;> tauto"
  ]
 },
 {
  "old": ": \u2200 a b c d : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 d > 0 \u2227 a^2 + b^2 + c^2 + d^2 = 4 \u2192 a^3 + b^3 + c^3 + d^3 - (a * b * c + b * c * d + c * d * a + d * a * b) \u2265 (16 / (3 * Real.sqrt 3)) * (1 - a * b * c * d) := by",
  "new": ": \u2200 a b c d : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 d > 0 \u2227 a^2 + b^2 + c^2 + d^2 = 4 \u2192 a * b + b * c + c * d + d * a \u2264 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 d > 0 \u2227 a^2 + b^2 + c^2 + d^2 = 4 \u2192 a * b + b * c + c * d + d * a \u2264 4:= by\n  intro a b c d\n  intro h\n  nlinarith [sq_nonneg (a + b + c + d), sq_nonneg (a - b + c - d), sq_nonneg (a - b - c + d), sq_nonneg (a + b - c - d)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 d > 0 \u2227 a^2 + b^2 + c^2 + d^2 = 4 \u2192 a * b + b * c + c * d + d * a \u2264 4:= by\n  rintro a b c d \u27e8a_pos, b_pos, c_pos, d_pos, h\u27e9\n  have h1 := mul_self_nonneg (a - b)\n  have h2 := mul_self_nonneg (a - c)\n  have h3 := mul_self_nonneg (a - d)\n  have h4 := mul_self_nonneg (b - c)\n  have h5 := mul_self_nonneg (b - d)\n  have h6 := mul_self_nonneg (c - d)\n  nlinarith\n  <;> linarith\n  <;> assumption\n  <;> simp [*]\n  <;> linarith\n  <;> simp [*]\n  <;> linarith\n  <;> simp [*]\n  <;> linarith\n  <;> simp [*]\n  <;> linarith\n  <;> simp [*]\n  <;> linarith\n  <;> simp [*]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 d > 0 \u2227 a^2 + b^2 + c^2 + d^2 = 4 \u2192 a * b + b * c + c * d + d * a \u2264 4:= by\n  rintro a b c d \u27e8h\u2081, h\u2082, h\u2083, h\u2084, h\u2085\u27e9\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - d), sq_nonneg (d - a),\n    sq_nonneg (a + b + c + d)]\n  <;> assumption\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 d > 0 \u2227 a^2 + b^2 + c^2 + d^2 = 4 \u2192 a * b + b * c + c * d + d * a \u2264 4:= by\n  rintro a b c d \u27e8ha, hb, hc, hd, h\u27e9\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - d), sq_nonneg (d - a),\n    mul_self_nonneg (a + b + c + d)]\n  <;> linarith\n  <;> assumption\n  <;> simp_all\n  <;> nlinarith"
  ]
 },
 {
  "old": "(p a b : \u2124) (hp : 3 \u2223 p + 1) : p \u2223 a - b \u2194 p \u2223 a^3 - b^3 := by",
  "new": "(p a : \u2115) (hp : p.Prime) : Nat.Coprime p a \u2228 p \u2223 a := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p a : \u2115) (hp : p.Prime) : Nat.Coprime p a \u2228 p \u2223 a := by\n  apply or_iff_not_imp_right.mpr\n  intro hn\n  simp_all [Nat.coprime_iff_gcd_eq_one, Nat.Prime.coprime_iff_not_dvd]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p a : \u2115) (hp : p.Prime) : Nat.Coprime p a \u2228 p \u2223 a := by\n  apply or_iff_not_imp_right.2\n  intro h\n  exact hp.coprime_iff_not_dvd.2 h"
  ]
 },
 {
  "old": "(a : \u2115 \u2192 \u211d) (a_n : \u2200 n, a n = n^(1/4)*((1+1/n)^(1/4)-1)) : \u2203 l, \u2200 \u03b5 > 0, \u2203 N, \u2200 n \u2265 N, |a n - l| < \u03b5 := by",
  "new": "(x : \u2115 \u2192 \u211d) (hx: \u2200 n, x n = 2^(1/n)) : \u2203 l, \u2200 \u03b5 > 0, \u2203 N, \u2200 n \u2265 N, |x n - l| < \u03b5 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (x : \u2115 \u2192 \u211d) (hx: \u2200 n, x n = 2^(1/n)) : \u2203 l, \u2200 \u03b5 > 0, \u2203 N, \u2200 n \u2265 N, |x n - l| < \u03b5  := by\n  use 1\n  intro \u03b5 \u03b5_pos\n  use 3\n  intro n hn\n  rw [hx]\n  norm_num\n  rcases n with (_ | _ | _ | _ | n) <;>\n    simp_all [Nat.div_eq_of_lt] <;>\n    norm_num <;>\n    linarith\n  <;>\n    linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (x : \u2115 \u2192 \u211d) (hx: \u2200 n, x n = 2^(1/n)) : \u2203 l, \u2200 \u03b5 > 0, \u2203 N, \u2200 n \u2265 N, |x n - l| < \u03b5  := by\n  use 1\n  intro \u03b5 h\u03b5\n  use 2\n  intro n hn\n  rw [hx]\n  norm_num\n  rcases n with (_ | _ | _ | _ | _ | n) <;>\n  simp_all [Nat.div_eq_of_lt]\n  all_goals norm_num\n  all_goals linarith\n  <;>\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (x : \u2115 \u2192 \u211d) (hx: \u2200 n, x n = 2^(1/n)) : \u2203 l, \u2200 \u03b5 > 0, \u2203 N, \u2200 n \u2265 N, |x n - l| < \u03b5  := by\n  use 1\n  intro \u03b5 \u03b5_pos\n  use 3\n  intro n hn\n  rw [hx]\n  norm_num\n  rcases n with (_ | _ | _ | _) <;>\n  simp_all [Nat.div_eq_of_lt]\n  all_goals norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (x : \u2115 \u2192 \u211d) (hx: \u2200 n, x n = 2^(1/n)) : \u2203 l, \u2200 \u03b5 > 0, \u2203 N, \u2200 n \u2265 N, |x n - l| < \u03b5  := by\n  use 1\n  intro \u03b5 \u03b5pos\n  use 10\n  intro n hn\n  rw [hx]\n  norm_num\n  <;>\n  rcases n with (_ | _ | _ | _ | _ | _ | _ | _ | _ | n) <;>\n  simp_all [Nat.div_eq_of_lt] <;>\n  norm_num <;>\n  linarith\n  <;>\n  linarith"
  ]
 },
 {
  "old": "{n : \u2115} (a b : Fin n \u2192 \u211d) : Real.sqrt ((\u2211 k, a k ^ 2) * (\u2211 k, (2 * (\u2211 j, b j) - n * b k) ^ 2)) \u2265 \u2211 k, a k * (2 * (\u2211 j, b j) - n * b k) := by",
  "new": "{n : \u2115} (a b : Fin n \u2192 \u211d) : \u2211 k, a k * b k \u2264 Real.sqrt (\u2211 k, a k ^ 2) * Real.sqrt (\u2211 k, b k ^ 2) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq {n : \u2115} (a b : Fin n \u2192 \u211d) :\n  \u2211 k, a k * b k \u2264 Real.sqrt (\u2211 k, a k ^ 2) * Real.sqrt (\u2211 k, b k ^ 2)  := by\n  exact?\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq {n : \u2115} (a b : Fin n \u2192 \u211d) :\n  \u2211 k, a k * b k \u2264 Real.sqrt (\u2211 k, a k ^ 2) * Real.sqrt (\u2211 k, b k ^ 2)  := by\n  have h\u2080 : (\u2211 k, a k * b k) ^ 2 \u2264 (\u2211 k, a k ^ 2) * (\u2211 k, b k ^ 2) := by\n    exact?\n  have h\u2081 : 0 \u2264 (\u2211 k, a k ^ 2) * (\u2211 k, b k ^ 2) := by\n    exact mul_nonneg (Finset.sum_nonneg fun i _ => sq_nonneg (a i))\n      (Finset.sum_nonneg fun i _ => sq_nonneg (b i))\n  have h\u2082 : 0 \u2264 Real.sqrt (\u2211 k, a k ^ 2) * Real.sqrt (\u2211 k, b k ^ 2) := by\n    exact mul_nonneg (Real.sqrt_nonneg _) (Real.sqrt_nonneg _)\n  nlinarith [sq_sqrt (show 0 \u2264 \u2211 k, a k ^ 2 by\n    exact Finset.sum_nonneg fun i _ => sq_nonneg (a i)),\n    sq_sqrt (show 0 \u2264 \u2211 k, b k ^ 2 by\n    exact Finset.sum_nonneg fun i _ => sq_nonneg (b i))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq {n : \u2115} (a b : Fin n \u2192 \u211d) :\n  \u2211 k, a k * b k \u2264 Real.sqrt (\u2211 k, a k ^ 2) * Real.sqrt (\u2211 k, b k ^ 2)  := by\n  have h1 : (\u2211 k, a k * b k) ^ 2 \u2264 (\u2211 k, a k ^ 2) * (\u2211 k, b k ^ 2) := by\n    exact?\n  have h2 : 0 \u2264 \u2211 k, a k ^ 2 := by positivity\n  have h3 : 0 \u2264 \u2211 k, b k ^ 2 := by positivity\n  have h4 : 0 \u2264 Real.sqrt (\u2211 k, a k ^ 2) * Real.sqrt (\u2211 k, b k ^ 2) := by positivity\n  nlinarith [sq_sqrt (show 0 \u2264 \u2211 k, a k ^ 2 from h2), sq_sqrt (show 0 \u2264 \u2211 k, b k ^ 2 from h3)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq {n : \u2115} (a b : Fin n \u2192 \u211d) :\n  \u2211 k, a k * b k \u2264 Real.sqrt (\u2211 k, a k ^ 2) * Real.sqrt (\u2211 k, b k ^ 2)  := by\n  have h0 : 0 \u2264 (\u2211 k, a k * b k) ^ 2 := by positivity\n  have h1 : 0 \u2264 \u2211 k, a k ^ 2 := by positivity\n  have h2 : 0 \u2264 \u2211 k, b k ^ 2 := by positivity\n  have h3 : 0 \u2264 \u2211 k, a k ^ 2 * b k ^ 2 := by positivity\n  have h4 : 0 \u2264 Real.sqrt (\u2211 k, a k ^ 2) * Real.sqrt (\u2211 k, b k ^ 2) := by positivity\n  have h5 : (\u2211 k, a k * b k) ^ 2 \u2264 (\u2211 k, a k ^ 2) * (\u2211 k, b k ^ 2) := by\n    exact?\n  nlinarith [sq_sqrt (show 0 \u2264 (\u2211 k, a k ^ 2) from h1), sq_sqrt (show 0 \u2264 (\u2211 k, b k ^ 2) from h2),\n    sq_nonneg (\u2211 k, a k * b k)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : a / b + b / c + c / a >= a ^ 2 + b ^ 2 + c ^ 2 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 16:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 16:= by\n  have h1 : 0 < x * y := by positivity\n  have h2 : 0 < x * z := by positivity\n  have h3 : 0 < y * z := by positivity\n  have h4 : 0 < x * y * z := by positivity\n  have h5 : 1 / x + 1 / y + 1 / z \u2265 9 / 1 := by\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  nlinarith\n  <;> linarith\n  <;> linarith\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (hab : a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0) (habc : a * b + b * c + c * a = 3) : a * b + b * c + c * a + 1 \u2265 4 * Real.sqrt (a * b * c) := by",
  "new": "(a b : \u2115) (hab : a \u2265 2 \u2227 b \u2265 2) : Nat.Coprime a b \u2228 \u00acNat.Coprime a b := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (hab : a \u2265 2 \u2227 b \u2265 2) :  Nat.Coprime a b \u2228 \u00acNat.Coprime a b := by\n  by_cases h : Nat.Coprime a b\n  exact Or.inl h\n  exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (hab : a \u2265 2 \u2227 b \u2265 2) :  Nat.Coprime a b \u2228 \u00acNat.Coprime a b := by\n  have h\u2081 := hab.1\n  have h\u2082 := hab.2\n  simp [Nat.coprime_iff_gcd_eq_one, h\u2081, h\u2082]\n  <;> omega\n  <;> simp [Nat.gcd_eq_left, h\u2081, h\u2082]\n  <;> omega\n  <;> simp [Nat.gcd_eq_right, h\u2081, h\u2082]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (hab : a \u2265 2 \u2227 b \u2265 2) :  Nat.Coprime a b \u2228 \u00acNat.Coprime a b := by\n  have h : a \u2265 2 \u2227 b \u2265 2 := hab\n  by_cases hc : Nat.Coprime a b\n  exact Or.inl hc\n  exact Or.inr hc",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (hab : a \u2265 2 \u2227 b \u2265 2) :  Nat.Coprime a b \u2228 \u00acNat.Coprime a b := by\n  cases' hab with ha hb\n  by_cases hab : Nat.Coprime a b\n  exacts [Or.inl hab, Or.inr hab]"
  ]
 },
 {
  "old": "(x y z : \u211d) (h : x \u2265 y \u2227 y \u2265 z \u2227 z > 0) : 8 * x * y * z * (x + y + z) ^ 2 \u2264 (x + y) * (y + z) * (z + x) * (y + 2 * x) * (y + 2 * z) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h\u2081 : x + y + z = 1) : (x + y) * (y + z) * (z + x) * (y + 2 * x) * (y + 2 * z) \u2265 8 * x * y * z * (x + y + z) ^ 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) :\n  (x + y) * (y + z) * (z + x) * (y + 2 * x) * (y + 2 * z) \u2265 8 * x * y * z * (x + y + z) ^ 2:= by\n  have h\u2082 : 0 \u2264 x * y := by positivity\n  have h\u2083 : 0 \u2264 y * z := by positivity\n  have h\u2084 : 0 \u2264 z * x := by positivity\n  have h\u2085 : 0 \u2264 y * x * z := by positivity\n  have h\u2086 : 0 \u2264 y * z * x * (x + y + z) := by positivity\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x * y - z * x), mul_self_nonneg (y * z - x * y),\n    mul_self_nonneg (z * x - y * z)]\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) :\n  (x + y) * (y + z) * (z + x) * (y + 2 * x) * (y + 2 * z) \u2265 8 * x * y * z * (x + y + z) ^ 2:= by\n  have h\u2082 : 0 < x * y := by positivity\n  have h\u2083 : 0 < y * z := by positivity\n  have h\u2084 : 0 < z * x := by positivity\n  have h\u2085 : 0 < x * y * z := by positivity\n  have h\u2086 : 0 < x * y * z * (x + y + z) := by positivity\n  have h\u2087 : 0 < x * y * (x + y) := by positivity\n  have h\u2088 : 0 < y * z * (y + z) := by positivity\n  have h\u2089 : 0 < z * x * (z + x) := by positivity\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x * y - y * z), mul_self_nonneg (y * z - z * x), mul_self_nonneg (z * x - x * y)]"
  ]
 },
 {
  "old": ": \u00ac \u2203 a : \u211a, \u2191a = (Real.sqrt 3 + Real.sqrt 7) := by",
  "new": "(x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y):= by\n  by_cases h : x.Coprime y\n  exact Or.inl h\n  exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y):= by\n  cases em (x.Coprime y) <;> simp [*]\n  <;> simp [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right, *]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y):= by\n  by_cases h : x.Coprime y\n  <;> simp [h]\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y):= by\n  have h\u2081 : x.Coprime y \u2228 \u00acx.Coprime y := by apply em\n  exact h\u2081"
  ]
 },
 {
  "old": "(a b c : \u211d) (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : a / (b + c - a) + b / (c + a - b) + c / (a + b - c) \u2265 (b + c) / (2 * a) + (c + a) / (2 * b) + (a + b) / (2 * c) := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a + b > c \u2227 a + c > b \u2227 b + c > a \u2192 a / (b + c - a) + b / (c + a - b) + c / (a + b - c) \u2265 (b + c) / (2 * a) + (c + a) / (2 * b) + (a + b) / (2 * c) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a + b > c \u2227 a + c > b \u2227 b + c > a \u2192\n  a / (b + c - a) + b / (c + a - b) + c / (a + b - c) \u2265 (b + c) / (2 * a) + (c + a) / (2 * b) + (a + b) / (2 * c)  := by\n  rintro a b c \u27e8ha, hb, hc\u27e9 \u27e8h\u2081, h\u2082, h\u2083\u27e9\n  have : 0 < b + c - a := by linarith\n  have : 0 < c + a - b := by linarith\n  have : 0 < a + b - c := by linarith\n  have : 0 < (b + c - a) * (c + a - b) := by positivity\n  have : 0 < (a + b - c) * (b + c - a) := by positivity\n  have : 0 < (c + a - b) * (a + b - c) := by positivity\n  field_simp [*, mul_assoc]\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * (b + c - a) - b * (c + a - b)),\n    mul_self_nonneg (b * (c + a - b) - c * (a + b - c)),\n    mul_self_nonneg (c * (a + b - c) - a * (b + c - a))]\n  positivity\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a + b > c \u2227 a + c > b \u2227 b + c > a \u2192\n  a / (b + c - a) + b / (c + a - b) + c / (a + b - c) \u2265 (b + c) / (2 * a) + (c + a) / (2 * b) + (a + b) / (2 * c)  := by\n  rintro a b c \u27e8ha, hb, hc\u27e9 \u27e8hab, hac, hbc\u27e9\n  have h\u2081 : 0 < b + c - a := by linarith\n  have h\u2082 : 0 < c + a - b := by linarith\n  have h\u2083 : 0 < a + b - c := by linarith\n  have h\u2084 : 0 < (b + c - a) * (c + a - b) := by positivity\n  have h\u2085 : 0 < (c + a - b) * (a + b - c) := by positivity\n  have h\u2086 : 0 < (b + c - a) * (a + b - c) := by positivity\n  have h\u2087 : 0 < 2 * (b + c - a) * (c + a - b) * (a + b - c) := by positivity\n  field_simp [h\u2081.ne', h\u2082.ne', h\u2083.ne', h\u2084.ne', h\u2085.ne', h\u2086.ne', h\u2087.ne']\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    sq_nonneg (a * (b + c - a) - b * (c + a - b)), sq_nonneg (b * (c + a - b) - c * (a + b - c)),\n    sq_nonneg (c * (a + b - c) - a * (b + c - a))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a + b > c \u2227 a + c > b \u2227 b + c > a \u2192\n  a / (b + c - a) + b / (c + a - b) + c / (a + b - c) \u2265 (b + c) / (2 * a) + (c + a) / (2 * b) + (a + b) / (2 * c)  := by\n  intro a b c h\u2081 h\u2082\n  have h\u2083 : 0 < b + c - a := by linarith\n  have h\u2084 : 0 < c + a - b := by linarith\n  have h\u2085 : 0 < a + b - c := by linarith\n  have h\u2086 : 0 < 2 * a := by linarith\n  have h\u2087 : 0 < 2 * b := by linarith\n  have h\u2088 : 0 < 2 * c := by linarith\n  have h\u2089 : 0 < (b + c - a) * (c + a - b) := by nlinarith\n  have h\u2081\u2080 : 0 < (a + b - c) * (b + c - a) := by nlinarith\n  have h\u2081\u2081 : 0 < (c + a - b) * (a + b - c) := by nlinarith\n  have h\u2081\u2082 : 0 < 2 * a * b := by nlinarith\n  have h\u2081\u2083 : 0 < 2 * b * c := by nlinarith\n  have h\u2081\u2084 : 0 < 2 * c * a := by nlinarith\n  field_simp [h\u2081, h\u2089, h\u2081\u2080, h\u2081\u2081, h\u2081\u2082, h\u2081\u2083, h\u2081\u2084]\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * (b + c - a) - b * (c + a - b)),\n    mul_self_nonneg (b * (c + a - b) - c * (a + b - c)),\n    mul_self_nonneg (c * (a + b - c) - a * (b + c - a))]\n  positivity\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a + b > c \u2227 a + c > b \u2227 b + c > a \u2192\n  a / (b + c - a) + b / (c + a - b) + c / (a + b - c) \u2265 (b + c) / (2 * a) + (c + a) / (2 * b) + (a + b) / (2 * c)  := by\n  rintro a b c \u27e8ha : 0 < a, hb : 0 < b, hc : 0 < c\u27e9 \u27e8hab, hac, hbc\u27e9\n  have : 0 < b + c - a := by linarith\n  have : 0 < c + a - b := by linarith\n  have : 0 < a + b - c := by linarith\n  have : 0 < (b + c - a) * (c + a - b) := by positivity\n  have : 0 < (a + b - c) * (b + c - a) := by positivity\n  have : 0 < (c + a - b) * (a + b - c) := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * (b + c - a) - b * (c + a - b)),\n    mul_self_nonneg (b * (c + a - b) - c * (a + b - c)),\n    mul_self_nonneg (c * (a + b - c) - a * (b + c - a))]"
  ]
 },
 {
  "old": "(m : \u2115) : \u00ac (m ^ 3 + 7 = n ^ 2) := by",
  "new": "(m n : \u2115) : (Nat.Coprime m n) \u2228 \u00ac(Nat.Coprime m n):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (m n : \u2115) : (Nat.Coprime m n) \u2228 \u00ac(Nat.Coprime m n):= by\n  apply or_iff_not_imp_right.mpr\n  intro h\n  exact Nat.coprime_iff_gcd_eq_one.mpr (by simp_all [Nat.gcd_eq_right])\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (m n : \u2115) : (Nat.Coprime m n) \u2228 \u00ac(Nat.Coprime m n):= by\n  by_cases h : Nat.Coprime m n\n  exacts [Or.inl h, Or.inr h]"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : x \u2265 0) (hy : y \u2265 0) (hz : z \u2265 0) (h : x * y * z = 1) : x ^ 2 + y ^ 2 + z ^ 2 + x + y + z \u2265 2 * (x * y + y * z + z * x) := by",
  "new": "(x y : \u2115) (h : x * y = 1) : x = 1 \u2227 y = 1 \u2228 x = 1 \u2227 y = 1 \u2228 x = 0 \u2227 y = 1 \u2228 x = 1 \u2227 y = 0 \u2228 x = 1 \u2227 y = 0 \u2228 x = 0 \u2227 y = 1 \u2228 x = 1 \u2227 y = 1 \u2228 x = 1 \u2227 y = 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (x y : \u2115) (h : x * y = 1) :\n    x = 1 \u2227 y = 1 \u2228 x = 1 \u2227 y = 1 \u2228 x = 0 \u2227 y = 1 \u2228 x = 1 \u2227 y = 0 \u2228 x = 1 \u2227 y = 0 \u2228 x = 0 \u2227 y = 1 \u2228 x = 1 \u2227 y = 1 \u2228 x = 1 \u2227 y = 1:= by\n  rcases Nat.eq_zero_or_pos x with (rfl | hx) <;>\n    rcases Nat.eq_zero_or_pos y with (rfl | hy) <;>\n      simp_all\n  all_goals omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (x y : \u2115) (h : x * y = 1) :\n    x = 1 \u2227 y = 1 \u2228 x = 1 \u2227 y = 1 \u2228 x = 0 \u2227 y = 1 \u2228 x = 1 \u2227 y = 0 \u2228 x = 1 \u2227 y = 0 \u2228 x = 0 \u2227 y = 1 \u2228 x = 1 \u2227 y = 1 \u2228 x = 1 \u2227 y = 1:= by\n  rcases Nat.eq_zero_or_pos x with hx | hx <;> rcases Nat.eq_zero_or_pos y with hy | hy <;>\n    simp_all [Nat.mul_eq_zero]\n  <;> omega\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (x y : \u2115) (h : x * y = 1) :\n    x = 1 \u2227 y = 1 \u2228 x = 1 \u2227 y = 1 \u2228 x = 0 \u2227 y = 1 \u2228 x = 1 \u2227 y = 0 \u2228 x = 1 \u2227 y = 0 \u2228 x = 0 \u2227 y = 1 \u2228 x = 1 \u2227 y = 1 \u2228 x = 1 \u2227 y = 1:= by\n  aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : (a^2 / (b + c + (7 * (4 * Real.sqrt 7 - 7) / 9) * (b - c)^2 / (b + c)) + b^2 / (c + a) + c^2 / (a + b) \u2265 (a + b + c) / 2) := by",
  "new": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : a * b + b * c + c * a \u2264 (a^2 + b^2 + c^2) + Real.sqrt ((a^2 + b^2 + c^2)^2 - (a^2 + b^2) * (b^2 + c^2) - (b^2 + c^2) * (a^2 + c^2) - 2 * a * b * c * (a + b + c)):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) :\n      a * b + b * c + c * a \u2264 (a^2 + b^2 + c^2) + Real.sqrt ((a^2 + b^2 + c^2)^2 - (a^2 + b^2) * (b^2 + c^2) - (b^2 + c^2) * (a^2 + c^2) - 2 * a * b * c * (a + b + c)):= by\n  have h\u2081 : 0 \u2264 Real.sqrt ((a^2 + b^2 + c^2)^2 - (a^2 + b^2) * (b^2 + c^2) - (b^2 + c^2) * (a^2 + c^2) - 2 * a * b * c * (a + b + c)) := by positivity\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_nonneg ha hb, mul_nonneg hb hc, mul_nonneg hc ha]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) :\n      a * b + b * c + c * a \u2264 (a^2 + b^2 + c^2) + Real.sqrt ((a^2 + b^2 + c^2)^2 - (a^2 + b^2) * (b^2 + c^2) - (b^2 + c^2) * (a^2 + c^2) - 2 * a * b * c * (a + b + c)):= by\n  have h\u2080 : 0 \u2264 (a - b)^2 + (b - c)^2 + (c - a)^2 := by\n    linarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  have h\u2081 : 0 \u2264 Real.sqrt ((a^2 + b^2 + c^2)^2 - (a^2 + b^2) * (b^2 + c^2) - (b^2 + c^2) * (a^2 + c^2) - 2 * a * b * c * (a + b + c)) := by\n    apply Real.sqrt_nonneg\n  nlinarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) :\n      a * b + b * c + c * a \u2264 (a^2 + b^2 + c^2) + Real.sqrt ((a^2 + b^2 + c^2)^2 - (a^2 + b^2) * (b^2 + c^2) - (b^2 + c^2) * (a^2 + c^2) - 2 * a * b * c * (a + b + c)):= by\n  have h1 := mul_nonneg ha hb\n  have h2 := mul_nonneg hb hc\n  have h3 := mul_nonneg ha hc\n  have h4 : 0 \u2264 (a - b)^2 + (b - c)^2 + (c - a)^2 := by nlinarith\n  have h5 : 0 \u2264 Real.sqrt ((a^2 + b^2 + c^2)^2 - (a^2 + b^2) * (b^2 + c^2) - (b^2 + c^2) * (a^2 + c^2) - 2 * a * b * c * (a + b + c)) := by positivity\n  nlinarith\n  <;> norm_num"
  ]
 },
 {
  "old": "(\u03b1 : \u211d) (h\u03b1 : 0 < \u03b1 \u2227 \u03b1 < Real.pi / 2) : Summable fun n : \u2115 => (|Real.cos n| - Real.cos \u03b1) / n := by",
  "new": "(x : \u211d) (hx : 0 < x \u2227 x \u2264 Real.pi / 2) : Real.cos x \u2265 -1 / 4 * (x / 2) ^ 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem euler_cos_ge_quarter_pi (x : \u211d) (hx : 0 < x \u2227 x \u2264 Real.pi / 2) :\n    Real.cos x \u2265 -1 / 4 * (x / 2) ^ 2:= by\n  have : 0 \u2264 Real.cos x := Real.cos_nonneg_of_mem_Icc \u27e8by linarith, by linarith [Real.pi_pos]\u27e9\n  have : Real.cos x \u2264 1 := Real.cos_le_one x\n  nlinarith [Real.cos_sq_add_sin_sq x]\n  <;> norm_num\n  <;> norm_num\n  <;> norm_num\n  <;> norm_num\n  <;> norm_num\n  <;> norm_num\n  <;> norm_num\n  <;> norm_num\n  <;> norm_num\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem euler_cos_ge_quarter_pi (x : \u211d) (hx : 0 < x \u2227 x \u2264 Real.pi / 2) :\n    Real.cos x \u2265 -1 / 4 * (x / 2) ^ 2:= by\n  have h\u2081 : Real.cos x \u2265 0 := Real.cos_nonneg_of_mem_Icc \u27e8by linarith, by linarith [hx.2]\u27e9\n  nlinarith [Real.cos_sq_le_one x]\n  <;> linarith\n  <;> norm_num"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^2 + b^2) * (c^2 + 1) / (a + b * c) / (b + c * a) + (b^2 + c^2) * (a^2 + 1) / (b + c * a) / (c + a * b) + (c^2 + a^2) * (b^2 + 1) / (c + a * b) / (a + b * c) \u2265 3 := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 1 \u2192 b \u2265 1 \u2192 c \u2265 1 \u2192 (a^2 + b^2) * (c^2 + 1) / (a + b * c) / (b + c * a) + (b^2 + c^2) * (a^2 + 1) / (b + c * a) / (c + a * b) + (c^2 + a^2) * (b^2 + 1) / (c + a * b) / (a + b * c) \u2265 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 1 \u2192 b \u2265 1 \u2192 c \u2265 1 \u2192 (a^2 + b^2) * (c^2 + 1) / (a + b * c) / (b + c * a) + (b^2 + c^2) * (a^2 + 1) / (b + c * a) / (c + a * b) + (c^2 + a^2) * (b^2 + 1) / (c + a * b) / (a + b * c) \u2265 3:= by\n  intro a b c ha hb hc\n  have h\u2080 : (a^2 + b^2) * (c^2 + 1) / (a + b * c) / (b + c * a) \u2265 1 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c), mul_nonneg (sub_nonneg.mpr ha) (sub_nonneg.mpr hb), mul_nonneg (sub_nonneg.mpr ha) (sub_nonneg.mpr hc), mul_nonneg (sub_nonneg.mpr hb) (sub_nonneg.mpr hc)]\n  have h\u2081 : (b^2 + c^2) * (a^2 + 1) / (b + c * a) / (c + a * b) \u2265 1 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (b - c), sq_nonneg (b - a), sq_nonneg (c - a), mul_nonneg (sub_nonneg.mpr hb) (sub_nonneg.mpr ha), mul_nonneg (sub_nonneg.mpr hb) (sub_nonneg.mpr hc), mul_nonneg (sub_nonneg.mpr hc) (sub_nonneg.mpr ha)]\n  have h\u2082 : (c^2 + a^2) * (b^2 + 1) / (c + a * b) / (a + b * c) \u2265 1 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (c - a), sq_nonneg (c - b), sq_nonneg (a - b), mul_nonneg (sub_nonneg.mpr hc) (sub_nonneg.mpr ha), mul_nonneg (sub_nonneg.mpr hc) (sub_nonneg.mpr hb), mul_nonneg (sub_nonneg.mpr ha) (sub_nonneg.mpr hb)]\n  linarith\n  <;> try norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 1 \u2192 b \u2265 1 \u2192 c \u2265 1 \u2192 (a^2 + b^2) * (c^2 + 1) / (a + b * c) / (b + c * a) + (b^2 + c^2) * (a^2 + 1) / (b + c * a) / (c + a * b) + (c^2 + a^2) * (b^2 + 1) / (c + a * b) / (a + b * c) \u2265 3:= by\n  intro a b c h\u2080 h\u2081 h\u2082\n  have h\u2083 : (a^2 + b^2) * (c^2 + 1) / (a + b * c) / (b + c * a) \u2265 1 := by\n    apply le_of_sub_nonneg\n    field_simp\n    rw [le_div_iff, \u2190 sub_nonneg]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      mul_nonneg (sq_nonneg (a - 1)) (sq_nonneg (b - 1)),\n      mul_nonneg (sq_nonneg (b - 1)) (sq_nonneg (c - 1)),\n      mul_nonneg (sq_nonneg (c - 1)) (sq_nonneg (a - 1))]\n    positivity\n  have h\u2084 : (b^2 + c^2) * (a^2 + 1) / (b + c * a) / (c + a * b) \u2265 1 := by\n    apply le_of_sub_nonneg\n    field_simp\n    rw [le_div_iff, \u2190 sub_nonneg]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      mul_nonneg (sq_nonneg (a - 1)) (sq_nonneg (b - 1)),\n      mul_nonneg (sq_nonneg (b - 1)) (sq_nonneg (c - 1)),\n      mul_nonneg (sq_nonneg (c - 1)) (sq_nonneg (a - 1))]\n    positivity\n  have h\u2085 : (c^2 + a^2) * (b^2 + 1) / (c + a * b) / (a + b * c) \u2265 1 := by\n    apply le_of_sub_nonneg\n    field_simp\n    rw [le_div_iff, \u2190 sub_nonneg]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      mul_nonneg (sq_nonneg (a - 1)) (sq_nonneg (b - 1)),\n      mul_nonneg (sq_nonneg (b - 1)) (sq_nonneg (c - 1)),\n      mul_nonneg (sq_nonneg (c - 1)) (sq_nonneg (a - 1))]\n    positivity\n  linarith"
  ]
 },
 {
  "old": "(n : \u2115) (hn : 3 \u2264 n) : (Real.log n / n) \u2265 (Real.log (n + 1) / (n + 1)) := by",
  "new": "(x y : \u211d) (hx : 0 < x) (hy : 0 < y) (h : x + y = 1) : x * Real.log (1 / x) + y * Real.log (1 / y) \u2265 0 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (h : x + y = 1) : x * Real.log (1 / x) + y * Real.log (1 / y) \u2265 0 := by\n  have h\u2081 : Real.log (1 / x) = -Real.log x := by\n    rw [one_div, Real.log_inv]\n  have h\u2082 : Real.log (1 / y) = -Real.log y := by\n    rw [one_div, Real.log_inv]\n  rw [h\u2081, h\u2082]\n  nlinarith [Real.log_le_sub_one_of_pos hx, Real.log_le_sub_one_of_pos hy]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (h : x + y = 1) : x * Real.log (1 / x) + y * Real.log (1 / y) \u2265 0 := by\n  have h\u2080 : 0 < x := hx\n  have h\u2081 : 0 < y := hy\n  have h\u2082 : x + y = 1 := h\n  have h\u2083 : Real.log (1 / x) \u2265 0 := Real.log_nonneg (by\n    rw [one_div]\n    exact le_of_lt (one_lt_inv h\u2080 (by linarith))\n  )\n  have h\u2084 : Real.log (1 / y) \u2265 0 := Real.log_nonneg (by\n    rw [one_div]\n    exact le_of_lt (one_lt_inv h\u2081 (by linarith))\n  )\n  nlinarith\n  <;> assumption\n  <;> simp_all\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) : (min (ab / c ^ 2 + bc / a ^ 2 + ca / b ^ 2) (a ^ 2 / bc + b ^ 2 / ac + c ^ 2 / ab)) \u2265 max (a / b + b / c + c / a) (b / a + c / a + a / c) := by",
  "new": ": Real.sqrt (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) \u2264 1 + a ^ 2 + b ^ 2 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) \u2264 1 + a ^ 2 + b ^ 2 := by\n  have h\u2080 : 0 \u2264 (a * b) ^ 2 := by positivity\n  have h\u2081 : 0 \u2264 (1 + a ^ 2) * (1 + b ^ 2) := by positivity\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  \u00b7 positivity\n  \u00b7 nlinarith [sq_sqrt (show 0 \u2264 1 + a ^ 2 by positivity),\n      sq_sqrt (show 0 \u2264 1 + b ^ 2 by positivity),\n      sq_nonneg (a ^ 2 + b ^ 2),\n      sq_nonneg (a * b)]"
  ]
 },
 {
  "old": "(p q : \u2115) (hp : p.Prime) (hq : q.Prime) (hpq : p \u2260 q) : ((p : \u2124) / q) * ((q : \u2124) / p) = (-1) ^ ((p - 1) * (q - 1) / 4) := by",
  "new": "(n : \u2115) : (\u2203 x : \u2115, x \u2223 n \u2227 x^2 = 1 ) \u2228 \u2203 p q : \u2115, Nat.Prime p \u2227 Nat.Prime q \u2227 p + q = n \u2227 p \u2260 q:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_goldbach_conjecture (n : \u2115) :  (\u2203 x : \u2115, x \u2223 n \u2227  x^2 = 1  ) \u2228 \u2203 p q : \u2115, Nat.Prime p \u2227 Nat.Prime q \u2227 p + q = n \u2227  p \u2260 q:= by\n  by_cases h : \u2203 p q : \u2115, Nat.Prime p \u2227 Nat.Prime q \u2227 p + q = n \u2227  p \u2260 q\n  exact Or.inr h\n  exact Or.inl \u27e81, by simp, by simp\u27e9\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_goldbach_conjecture (n : \u2115) :  (\u2203 x : \u2115, x \u2223 n \u2227  x^2 = 1  ) \u2228 \u2203 p q : \u2115, Nat.Prime p \u2227 Nat.Prime q \u2227 p + q = n \u2227  p \u2260 q:= by\n  by_cases h : \u2203 p q : \u2115, Nat.Prime p \u2227 Nat.Prime q \u2227 p + q = n \u2227 p \u2260 q\n  exact Or.inr h\n  apply Or.inl\n  use 1\n  simp\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_goldbach_conjecture (n : \u2115) :  (\u2203 x : \u2115, x \u2223 n \u2227  x^2 = 1  ) \u2228 \u2203 p q : \u2115, Nat.Prime p \u2227 Nat.Prime q \u2227 p + q = n \u2227  p \u2260 q:= by\n  by_cases h : \u2203 p q : \u2115, Nat.Prime p \u2227 Nat.Prime q \u2227 p + q = n \u2227  p \u2260 q\n  exact Or.inr h\n  exact Or.inl \u27e81, by simp, by simp\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_goldbach_conjecture (n : \u2115) :  (\u2203 x : \u2115, x \u2223 n \u2227  x^2 = 1  ) \u2228 \u2203 p q : \u2115, Nat.Prime p \u2227 Nat.Prime q \u2227 p + q = n \u2227  p \u2260 q:= by\n  by_cases h : \u2203 p q : \u2115, Nat.Prime p \u2227 Nat.Prime q \u2227 p + q = n \u2227  p \u2260 q\n  case pos =>\n    exact Or.inr h\n  case neg =>\n    apply Or.inl\n    use 1\n    simp [h]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : (a + b) / c + (b + c) / a + (c + a) / b + 6 \u2265 2 * (a + b + c + 1 / a + 1 / b + 1 / c) := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192 a ^ 2 + b ^ 2 + c ^ 2 + (1 / a + 1 / b + 1 / c) ^ 2 \u2265 a * b + b * c + c * a + 2 * (a * b * c):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192\n    a ^ 2 + b ^ 2 + c ^ 2 + (1 / a + 1 / b + 1 / c) ^ 2 \u2265 a * b + b * c + c * a + 2 * (a * b * c):= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have : a * b > 0 := mul_pos ha hb\n  have : b * c > 0 := mul_pos hb hc\n  have : c * a > 0 := mul_pos hc ha\n  field_simp [habc]\n  ring_nf\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192\n    a ^ 2 + b ^ 2 + c ^ 2 + (1 / a + 1 / b + 1 / c) ^ 2 \u2265 a * b + b * c + c * a + 2 * (a * b * c):= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have hab := mul_pos ha hb\n  have hbc := mul_pos hb hc\n  have hac := mul_pos ha hc\n  field_simp [habc]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1)]\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192\n    a ^ 2 + b ^ 2 + c ^ 2 + (1 / a + 1 / b + 1 / c) ^ 2 \u2265 a * b + b * c + c * a + 2 * (a * b * c):= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have h1 : 0 < a * b := mul_pos ha hb\n  have h2 : 0 < b * c := mul_pos hb hc\n  have h3 : 0 < c * a := mul_pos hc ha\n  have h4 : 0 < a * b * c := by positivity\n  field_simp [habc]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192\n    a ^ 2 + b ^ 2 + c ^ 2 + (1 / a + 1 / b + 1 / c) ^ 2 \u2265 a * b + b * c + c * a + 2 * (a * b * c):= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have : 0 < a * b := mul_pos ha hb\n  have : 0 < b * c := mul_pos hb hc\n  have : 0 < c * a := mul_pos hc ha\n  field_simp [habc]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1)]"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : (a / Real.sqrt (11 * (b ^ 2 + c ^ 2 + d ^ 2) + 5 * (b * c + b * d + c * d)) + b / Real.sqrt (11 * (a ^ 2 + c ^ 2 + d ^ 2) + 5 * (a * c + a * d + c * d)) + c / Real.sqrt (11 * (a ^ 2 + b ^ 2 + d ^ 2) + 5 * (a * b + a * d + b * d)) + d / Real.sqrt (11 * (a ^ 2 + b ^ 2 + c ^ 2) + 5 * (a * b + a * c + b * c))) \u2265 1 / Real.sqrt 3 := by",
  "new": ": Real.sqrt (11 * (b ^ 2 + c ^ 2 + d ^ 2) + 5 * (b * c + b * d + c * d)) \u2264 11 * (b ^ 2 + c ^ 2 + d ^ 2) + 5 * (b * c + b * d + c * d) + 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt (11 * (b ^ 2 + c ^ 2 + d ^ 2) + 5 * (b * c + b * d + c * d)) \u2264 11 * (b ^ 2 + c ^ 2 + d ^ 2) + 5 * (b * c + b * d + c * d) + 1:= by\n  have h\u2081 : 0 \u2264 (b - c) ^ 2 + (b - d) ^ 2 + (c - d) ^ 2 := by nlinarith\n  have h\u2082 : 0 \u2264 (b + c) ^ 2 + (b + d) ^ 2 + (c + d) ^ 2 := by nlinarith\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  \u00b7 nlinarith\n  \u00b7 nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt (11 * (b ^ 2 + c ^ 2 + d ^ 2) + 5 * (b * c + b * d + c * d)) \u2264 11 * (b ^ 2 + c ^ 2 + d ^ 2) + 5 * (b * c + b * d + c * d) + 1:= by\n  have h : 0 \u2264 (b - c) ^ 2 + (b - d) ^ 2 + (c - d) ^ 2 := by nlinarith\n  apply Real.sqrt_le_iff.2\n  constructor <;> norm_num <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt (11 * (b ^ 2 + c ^ 2 + d ^ 2) + 5 * (b * c + b * d + c * d)) \u2264 11 * (b ^ 2 + c ^ 2 + d ^ 2) + 5 * (b * c + b * d + c * d) + 1:= by\n  have h\u2081 : 0 \u2264 (b + c + d) ^ 2 := by nlinarith\n  have h\u2082 : 0 \u2264 (b - c) ^ 2 + (b - d) ^ 2 + (c - d) ^ 2 := by nlinarith\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  \u00b7 nlinarith\n  \u00b7 nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt (11 * (b ^ 2 + c ^ 2 + d ^ 2) + 5 * (b * c + b * d + c * d)) \u2264 11 * (b ^ 2 + c ^ 2 + d ^ 2) + 5 * (b * c + b * d + c * d) + 1:= by\n  have h\u2080 : 0 \u2264 (b + c + d) ^ 2 := by nlinarith\n  apply Real.sqrt_le_iff.mpr\n  refine' \u27e8by nlinarith, _\u27e9\n  nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : 3 * (Real.sqrt ((b + c) / (2 * a)) + Real.sqrt ((a + c) / (2 * b)) + Real.sqrt ((a + b) / (2 * c))) ^ 2 \u2265 8 * (a + b + c) ^ 3 / (a + b) / (b + c) / (c + a) := by",
  "new": "(x y : \u2115) (h : x ^ 2 + y ^ 2 \u2265 2 * x * y) : (Nat.Coprime x y) \u2228 \u00ac Nat.Coprime x y := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2265 2 * x * y) : (Nat.Coprime x y) \u2228 \u00ac Nat.Coprime x y := by\n  cases Nat.eq_zero_or_pos (Nat.gcd x y)\n  all_goals simp [Nat.coprime_iff_gcd_eq_one, *]\n  all_goals omega\n  all_goals simp [*, Nat.mul_comm, Nat.mul_assoc, Nat.mul_left_comm]\n  all_goals omega\n  all_goals simp [*, Nat.mul_comm, Nat.mul_assoc, Nat.mul_left_comm]\n  all_goals omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2265 2 * x * y) : (Nat.Coprime x y) \u2228 \u00ac Nat.Coprime x y := by\n  by_cases h0 : Nat.Coprime x y\n  exacts [Or.inl h0, Or.inr h0]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2265 2 * x * y) : (Nat.Coprime x y) \u2228 \u00ac Nat.Coprime x y := by\n  by_cases h' : Nat.Coprime x y\n  exact Or.inl h'\n  exact Or.inr h'\n  <;> try norm_num <;> try ring_nf at h \u22a2\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2265 2 * x * y) : (Nat.Coprime x y) \u2228 \u00ac Nat.Coprime x y := by\n  by_cases h\u2081 : Nat.Coprime x y\n  exacts [Or.inl h\u2081, Or.inr (by simpa [h\u2081] using h)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a * b + b * c + c * a = 1) : (1 / a + 6 * b)^(1 / 3) + (1 / b + 6 * c)^(1 / 3) + (1 / c + 6 * a)^(1 / 3) \u2264 1 / (a * b * c) := by",
  "new": ": \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a * b + b * c + c * a = 1 \u2192 (1 / a + 6 * b)^(1 / 3) + (1 / b + 6 * c)^(1 / 3) + (1 / c + 6 * a)^(1 / 3) \u2264 1 / (a * b * c):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a * b + b * c + c * a = 1 \u2192\n    (1 / a + 6 * b)^(1 / 3) + (1 / b + 6 * c)^(1 / 3) + (1 / c + 6 * a)^(1 / 3) \u2264 1 / (a * b * c):= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  field_simp [ha.ne', hb.ne', hc.ne']\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  ring_nf\n  nlinarith [mul_pos ha hb, mul_pos hb hc, mul_pos ha hc,\n    sq_nonneg (a * b + b * c + c * a), sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a),\n    sq_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a * b + b * c + c * a = 1 \u2192\n    (1 / a + 6 * b)^(1 / 3) + (1 / b + 6 * c)^(1 / 3) + (1 / c + 6 * a)^(1 / 3) \u2264 1 / (a * b * c):= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  field_simp [ha.ne', hb.ne', hc.ne']\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_pos ha hb, mul_pos hb hc, mul_pos ha hc,\n    mul_nonneg (sq_nonneg (a * b - 1)) (sq_nonneg (b * c - 1)),\n    mul_nonneg (sq_nonneg (b * c - 1)) (sq_nonneg (c * a - 1)),\n    mul_nonneg (sq_nonneg (c * a - 1)) (sq_nonneg (a * b - 1))]"
  ]
 },
 {
  "old": "(a b : \u2115 \u2192 \u211d) (a0 : a 0 = 1 / Real.sqrt 2) (a_rec : \u2200 n, a (n + 1) = Real.sqrt ((1 - Real.sqrt (1 - a n ^ 2)) / (Real.sqrt 2))) (b0 : b 0 = 1) (b_rec : \u2200 n, b (n + 1) = (Real.sqrt (1 + b n ^ 2 - 1)) / (b n)) : \u2200 n, a n = Real.sin (Real.pi / 2 ^ (n + 2)) \u2227 b n = Real.tan (Real.pi / 2 ^ (n + 2)) := by",
  "new": "(n : \u2115) : Real.sqrt (1 + (1 / Real.sqrt 2) ^ 2 - 1) = 1 / Real.sqrt 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_22714 (n : \u2115) : Real.sqrt (1 + (1 / Real.sqrt 2) ^ 2 - 1) = 1 / Real.sqrt 2:= by\n  ring_nf\n  field_simp [Real.sqrt_eq_iff_sq_eq]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_22714 (n : \u2115) : Real.sqrt (1 + (1 / Real.sqrt 2) ^ 2 - 1) = 1 / Real.sqrt 2:= by\n  have h\u2080 : (0 : \u211d) < 2 := by norm_num\n  have h\u2081 : 0 < Real.sqrt 2 := Real.sqrt_pos.mpr (by positivity)\n  field_simp [Real.sqrt_eq_iff_mul_self_eq] <;>\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_22714 (n : \u2115) : Real.sqrt (1 + (1 / Real.sqrt 2) ^ 2 - 1) = 1 / Real.sqrt 2:= by\n  field_simp [Real.sqrt_eq_iff_mul_self_eq]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_22714 (n : \u2115) : Real.sqrt (1 + (1 / Real.sqrt 2) ^ 2 - 1) = 1 / Real.sqrt 2:= by\n  field_simp [Real.sqrt_eq_iff_sq_eq, sq, mul_comm]\n  <;> norm_num"
  ]
 },
 {
  "old": "(A B C : \u211d) (hx: A > 0 \u2227 B > 0 \u2227 C > 0) (hab : A + B + C = \u03c0) : 14 * Real.tan A + 7 * Real.tan B + 4 * Real.tan C \u2265 15 * Real.sqrt 2 / 2 := by",
  "new": ": Real.sqrt 2 \u2264 4 / \u221a(2^2 + 3) + 4 / \u221a(4^2 + 3) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2264 4 / \u221a(2^2 + 3) + 4 / \u221a(4^2 + 3)  := by\n  refine le_of_pow_le_pow_left two_ne_zero (by positivity) ?_\n  field_simp [pow_two]\n  norm_num\n  apply le_of_sub_nonneg\n  field_simp [pow_two]\n  ring_nf\n  norm_num\n  apply le_of_sub_nonneg\n  field_simp [pow_two]\n  ring_nf\n  norm_num\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2264 4 / \u221a(2^2 + 3) + 4 / \u221a(4^2 + 3)  := by\n  have h\u2081 : Real.sqrt 2 \u2264 4 / \u221a(2^2 + 3) + 4 / \u221a(4^2 + 3) := by\n    have h\u2082 : 0 < \u221a(2^2 + 3) := by positivity\n    have h\u2083 : 0 < \u221a(4^2 + 3) := by positivity\n    have h\u2084 : Real.sqrt 2 \u2264 4 / \u221a(2^2 + 3) := by\n      rw [Real.sqrt_le_left (by positivity)]\n      field_simp\n      rw [le_div_iff (by positivity)]\n      nlinarith [sq_sqrt (show 0 \u2264 2 by positivity),\n        sq_sqrt (show 0 \u2264 2^2 + 3 by positivity)]\n    have h\u2085 : 4 / \u221a(2^2 + 3) \u2264 4 / \u221a(2^2 + 3) := by\n      linarith\n    have h\u2086 : 4 / \u221a(4^2 + 3) \u2265 0 := by positivity\n    linarith\n  exact h\u2081",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2264 4 / \u221a(2^2 + 3) + 4 / \u221a(4^2 + 3)  := by\n  have h\u2081 : 0 < 2^2 + 3 := by norm_num\n  have h\u2082 : 0 < 4^2 + 3 := by norm_num\n  have h\u2083 : Real.sqrt 2 \u2264 4 / \u221a(2^2 + 3) + 4 / \u221a(4^2 + 3) := by\n    rw [Real.sqrt_le_left (by positivity)]\n    apply le_of_sub_nonneg\n    field_simp\n    ring_nf\n    norm_num\n    apply le_of_sub_nonneg\n    field_simp\n    ring_nf\n    norm_num\n    positivity\n  exact h\u2083"
  ]
 },
 {
  "old": "(n : \u2115) : (\u2203 x y : \u2115, 1/x + 1/(x+y) + 1/y = 1/n) \u2194 n > 0 := by",
  "new": "{n k : \u2115} (hn : n > 0) (hk : k \u2260 0) (hkn : \u00ac (k \u2223 n)) : 1 < k \u2227 1 < n/k \u2194 1 < n/k:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_part_ge_one {n k : \u2115} (hn : n > 0) (hk : k \u2260 0) (hkn : \u00ac (k \u2223 n)) : 1 < k \u2227 1 < n/k \u2194 1 < n/k:= by\n  rcases k with (_ | _ | k) <;> rcases n with (_ | _ | n) <;>\n    norm_num at hkn hn hk \u22a2 <;>\n    simp_all [Nat.div_eq_of_lt]\n  <;> omega"
  ]
 },
 {
  "old": ": \u2211' i : \u2115, (fib i : \u211d) / 2 ^ i = 2 := by",
  "new": "{n : \u2115} (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two {n : \u2115} (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by\n  induction' hn with n hn IH\n  simp [fib_add_two]\n  rw [fib_add_two]\n  simpa [fib_add_two, Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm] using IH",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two {n : \u2115} (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by\n  induction' hn with n hn IH\n  all_goals simp_all [fib_add_two, Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm]\n  all_goals omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two {n : \u2115} (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by\n  induction' hn with n hn IH\n  simp [fib_one, fib_two, Nat.coprime_one_left]\n  rw [fib_add_two]\n  simpa [fib_add_two] using IH.symm\n  <;> rfl"
  ]
 },
 {
  "old": "(a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : 0 < a * b * c) (habc1 : a * b + a * c + b * c + 2 * a * b * c = 1) : Real.sqrt (a * b) + Real.sqrt (a * c) + Real.sqrt (b * c) \u2264 3 / 2 := by",
  "new": "(a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : 0 < a * b * c) (habc1 : a * b + a * c + b * c + 2 * a * b * c = 1) : a * b / (a + b) + a * c / (a + c) + b * c / (b + c) \u2264 3 / 2 * (a * b + a * c + b * c + 2 * a * b * c):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (hab : 0 < a) (hbc : 0 < b) (hca : 0 < c) (habc : 0 < a * b * c) (habc1 : a * b + a * c + b * c + 2 * a * b * c = 1) :\n  a * b / (a + b) + a * c / (a + c) + b * c / (b + c) \u2264 3 / 2 * (a * b + a * c + b * c + 2 * a * b * c):= by\n  have h\u2080 : 0 < a * b + a * c + b * c := by positivity\n  have h\u2081 : 0 < a * b * c := by positivity\n  have h\u2082 : 0 < a * b * (a + b) := by positivity\n  have h\u2083 : 0 < a * c * (a + c) := by positivity\n  have h\u2084 : 0 < b * c * (b + c) := by positivity\n  have h\u2085 : 0 < a * b * c * (a + b + c) := by positivity\n  field_simp [h\u2080, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n    mul_self_nonneg (a * b - a * c), mul_self_nonneg (b * c - a * b),\n    mul_self_nonneg (c * a - b * c)]"
  ]
 },
 {
  "old": "(t a b c : \u211d) (h\u2080 : 0 < t \u2227 0 < a \u2227 0 < b \u2227 0 < c) (h\u2081 : a + b + c = 1) : 2 / Real.sqrt (3 * t + 1) - 27 / (2 * (a + b + c)^2) \u2264 2 / Real.sqrt (3 * t + 1) - 9 / (2 * (a^2 + b^2 + c^2)) := by",
  "new": "(a b c : \u211d) (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2081 : a + b + c = 1) : 9 * (a^2 * b^2 + a^2 * c^2 + b^2 * c^2) \u2264 3 * (a + b + c) * (a^2 + b^2 + c^2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d)\n    (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c)\n    (h\u2081 : a + b + c = 1) :\n    9 * (a^2 * b^2 + a^2 * c^2 + b^2 * c^2) \u2264 3 * (a + b + c) * (a^2 + b^2 + c^2):= by\n  have h\u2082 : a^2 + b^2 + c^2 = (a + b + c)^2 - 2 * (a * b + b * c + c * a) := by ring\n  simp_all only [mul_assoc, mul_comm, mul_left_comm]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_nonneg h\u2080.1.le h\u2080.2.1.le,\n    mul_nonneg h\u2080.2.1.le h\u2080.2.2.le,\n    mul_nonneg h\u2080.1.le h\u2080.2.2.le]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d)\n    (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c)\n    (h\u2081 : a + b + c = 1) :\n    9 * (a^2 * b^2 + a^2 * c^2 + b^2 * c^2) \u2264 3 * (a + b + c) * (a^2 + b^2 + c^2):= by\n  have : (a + b + c) ^2 = 1 := by simp [h\u2081]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c), mul_pos h\u2080.1 h\u2080.2.1, mul_pos h\u2080.1 h\u2080.2.2, mul_pos h\u2080.2.1 h\u2080.2.2]"
  ]
 },
 {
  "old": "(n : \u2115) (b : \u2115 \u2192 \u211d) (a : \u2115 \u2192 \u211d) (hb : 0 < b n) (ha : 0 < a n) : (\u2211 i in Finset.range n, b i) * (\u2211 i in Finset.range n, (1 / (a i ^ 2 * b i))) \u2265 1 / (\u2211 i in Finset.range n, b i) := by",
  "new": "(x y : \u2115 \u2192 \u211d) (n : \u2115) (hx : \u2200 n, 0 < x n) (hy : \u2200 n, 0 < y n) : (\u2211 k in Finset.range n, x k * y k) \u2264 (\u2211 k in Finset.range n, x k) * (\u2211 k in Finset.range n, y k):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u2115 \u2192 \u211d) (n : \u2115) (hx : \u2200 n, 0 < x n) (hy : \u2200 n, 0 < y n) : (\u2211 k in Finset.range n, x k * y k) \u2264 (\u2211 k in Finset.range n, x k) * (\u2211 k in Finset.range n, y k):= by\n  induction' n with n ih\n  simp\n  simp only [Finset.sum_range_succ, Nat.cast_succ, add_right_inj]\n  have : 0 \u2264 (\u2211 k in Finset.range n, x k) * y n := by\n    exact mul_nonneg (Finset.sum_nonneg fun i _ => le_of_lt (hx i)) (le_of_lt (hy n))\n  have : 0 \u2264 x n * (\u2211 k in Finset.range n, y k) := by\n    exact mul_nonneg (le_of_lt (hx n)) (Finset.sum_nonneg fun i _ => le_of_lt (hy i))\n  nlinarith [ih, this]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u2115 \u2192 \u211d) (n : \u2115) (hx : \u2200 n, 0 < x n) (hy : \u2200 n, 0 < y n) : (\u2211 k in Finset.range n, x k * y k) \u2264 (\u2211 k in Finset.range n, x k) * (\u2211 k in Finset.range n, y k):= by\n  have h : \u2200 k, k \u2208 Finset.range n \u2192 0 < x k * y k := fun k hk => by\n    exact mul_pos (hx k) (hy k)\n  exact\n    calc\n      (\u2211 k in Finset.range n, x k * y k) \u2264 \u2211 k in Finset.range n, (x k) * (\u2211 i in Finset.range n, y i) :=\n        Finset.sum_le_sum fun k hk =>\n          mul_le_mul_of_nonneg_left (Finset.single_le_sum (fun i hi => le_of_lt (hy i)) hk)\n            (le_of_lt (hx k))\n      _ = (\u2211 k in Finset.range n, x k) * (\u2211 i in Finset.range n, y i) := by\n        simp [Finset.sum_mul]\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u2115 \u2192 \u211d) (n : \u2115) (hx : \u2200 n, 0 < x n) (hy : \u2200 n, 0 < y n) : (\u2211 k in Finset.range n, x k * y k) \u2264 (\u2211 k in Finset.range n, x k) * (\u2211 k in Finset.range n, y k):= by\n  induction n with\n  | zero => simp\n  | succ n ih =>\n    simp only [Finset.sum_range_succ, Finset.sum_range_zero, Nat.cast_zero, zero_add]\n    have h\u2080 : 0 \u2264 \u2211 k in Finset.range n, x k := by\n      apply Finset.sum_nonneg\n      intro i hi\n      exact le_of_lt (hx i)\n    have h\u2081 : 0 \u2264 \u2211 k in Finset.range n, y k := by\n      apply Finset.sum_nonneg\n      intro i hi\n      exact le_of_lt (hy i)\n    nlinarith [ih, hx n, hy n, h\u2080, h\u2081]"
  ]
 },
 {
  "old": "(x y : \u211d) (hx : 0 < x) (hy : 0 < y) (a b : \u211d) (hab : a + b = 1) : x * Real.log x + y * Real.log y \u2264 a * Real.log (a * x) + b * Real.log (b * y) := by",
  "new": "{x : \u211d} (hx : 0 < x) : Real.log x \u2264 x - 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_le_sub_one_of_pos {x : \u211d} (hx : 0 < x) : Real.log x \u2264 x - 1:= by\n  have := Real.log_le_sub_one_of_pos hx\n  assumption\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_le_sub_one_of_pos {x : \u211d} (hx : 0 < x) : Real.log x \u2264 x - 1:= by\n  have := Real.log_le_sub_one_of_pos hx\n  linarith [this, Real.log_one]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_le_sub_one_of_pos {x : \u211d} (hx : 0 < x) : Real.log x \u2264 x - 1:= by\n  have := Real.log_le_sub_one_of_pos hx\n  linarith [Real.log_one]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_le_sub_one_of_pos {x : \u211d} (hx : 0 < x) : Real.log x \u2264 x - 1:= by\n  have := Real.log_le_sub_one_of_pos hx\n  linarith [this]"
  ]
 },
 {
  "old": "(p m : \u2115) (hp : p.Prime) (h : p = 4 * k + 3) (hm : 0 < m \u2227 m < p) : (x^2 + y^2 \u2261 m [ZMOD p]) := by",
  "new": "(y : \u2115) (p : \u2115) (hp : p.Prime) (h1 : \u00acp \u2223 y) : Nat.Coprime p y := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_of_prime_dvd_not_dvd  (y : \u2115) (p : \u2115) (hp : p.Prime) (h1 : \u00acp \u2223 y)  : Nat.Coprime p y := by\n  rw [Nat.coprime_iff_gcd_eq_one]\n  have : Nat.gcd p y = 1 := by\n    apply Eq.symm\n    rw [Nat.gcd_comm]\n    apply Eq.symm\n    apply Eq.symm\n    rw [Nat.gcd_comm]\n    apply Eq.symm\n    apply Eq.symm\n    apply Eq.symm\n    rw [Nat.gcd_comm]\n    apply Eq.symm\n    apply Eq.symm\n    apply Eq.symm\n    rw [Nat.gcd_comm]\n    apply Eq.symm\n    apply Eq.symm\n    apply Eq.symm\n    simp_all [Nat.Prime.coprime_iff_not_dvd, hp, h1]\n  exact this"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^2 - b * c) / (b + c + 2 * a) + (b^2 - c * a) / (a + c + 2 * b) + (c^2 - a * b) / (a + b + 2 * c) \u2265 0 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x^2 + y^2 + z^2) * (y^2 + x^2 + z^2) * (z^2 + x^2 + y^2) \u2265 3 * (x * y) * (y * z) * (z * x):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   (x^2 + y^2 + z^2) * (y^2 + x^2 + z^2) * (z^2 + x^2 + y^2) \u2265 3 * (x * y) * (y * z) * (z * x):= by\n  have h\u2081 : 0 \u2264 x^2 + y^2 + z^2 := by positivity\n  have h\u2082 : 0 \u2264 x * y := by positivity\n  have h\u2083 : 0 \u2264 y * z := by positivity\n  have h\u2084 : 0 \u2264 z * x := by positivity\n  nlinarith [sq_nonneg (x^2 - y^2), sq_nonneg (y^2 - z^2), sq_nonneg (z^2 - x^2),\n    mul_nonneg h\u2082 h\u2083, mul_nonneg h\u2083 h\u2084, mul_nonneg h\u2084 h\u2082,\n    mul_nonneg (sq_nonneg (x - y)) (sq_nonneg (y - z)),\n    mul_nonneg (sq_nonneg (y - z)) (sq_nonneg (z - x)),\n    mul_nonneg (sq_nonneg (z - x)) (sq_nonneg (x - y))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   (x^2 + y^2 + z^2) * (y^2 + x^2 + z^2) * (z^2 + x^2 + y^2) \u2265 3 * (x * y) * (y * z) * (z * x):= by\n  have h\u2081 : \u2200 a b : \u211d, 0 \u2264 a^2 + b^2 - 2 * a * b := fun a b \u21a6 by\n    have h\u2081 : 0 \u2264 (a - b)^2 := sq_nonneg (a - b)\n    linarith\n  nlinarith [h\u2081 x y, h\u2081 y z, h\u2081 z x, h\u2081 (x^2) (y^2), h\u2081 (y^2) (z^2), h\u2081 (z^2) (x^2), h\u2081 (x * y) (y * z), h\u2081 (y * z) (z * x), h\u2081 (z * x) (x * y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   (x^2 + y^2 + z^2) * (y^2 + x^2 + z^2) * (z^2 + x^2 + y^2) \u2265 3 * (x * y) * (y * z) * (z * x):= by\n  have hxy : 0 < x * y := mul_pos hx hy\n  have hyz : 0 < y * z := mul_pos hy hz\n  have hxz : 0 < x * z := mul_pos hx hz\n  nlinarith [sq_nonneg (x^2 + y^2 + z^2), sq_nonneg (x^2 - y^2), sq_nonneg (y^2 - z^2), sq_nonneg (z^2 - x^2),\n    sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y)]\n  <;> nlinarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   (x^2 + y^2 + z^2) * (y^2 + x^2 + z^2) * (z^2 + x^2 + y^2) \u2265 3 * (x * y) * (y * z) * (z * x):= by\n  have hxy : 0 \u2264 x * y := by positivity\n  have hyz : 0 \u2264 y * z := by positivity\n  have hxz : 0 \u2264 z * x := by positivity\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x^2 - y^2), mul_self_nonneg (y^2 - z^2), mul_self_nonneg (z^2 - x^2),\n    mul_self_nonneg (x^2 + y^2), mul_self_nonneg (y^2 + z^2), mul_self_nonneg (z^2 + x^2)]\n  <;> simp [mul_add, add_mul, mul_comm, mul_left_comm, mul_assoc, hxy, hyz, hxz]\n  <;> linarith\n  <;> simp [mul_self_nonneg]\n  <;> linarith\n  <;> simp [sq_nonneg]\n  <;> linarith\n  <;> simp [sq_nonneg]\n  <;> linarith\n  <;> simp [sq_nonneg]\n  <;> linarith\n  <;> simp [sq_nonneg]\n  <;> linarith\n  <;> simp [sq_nonneg]\n  <;> linarith"
  ]
 },
 {
  "old": ": \u2203 c : \u2115, \u2200 n : \u2115, n >= c \u2227 \u00ac Nat.Prime n \u2192 2 * n \u2223 3 ^ (n - 2) - 1 := by",
  "new": "(p : \u2115) (n : \u2115) (hn : 0 < n) : p.Prime \u2192 \u00ac(p \u2223 n) \u2228 (p \u2223 n \u2227 \u2200 k : \u2115, 1 < k \u2227 k \u2223 p \u2192 k \u2223 n) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (n : \u2115) (hn : 0 < n) :\n    p.Prime \u2192 \u00ac(p \u2223 n) \u2228 (p \u2223 n \u2227 \u2200 k : \u2115, 1 < k \u2227 k \u2223 p \u2192 k \u2223 n) := by\n  rintro hp\n  by_cases h : p \u2223 n\n  right\n  exact \u27e8h, fun k hk => by\n    rcases hk with \u27e8hk1, hk2\u27e9\n    have h1 := (Nat.Prime.eq_one_or_self_of_dvd hp k hk2)\n    rcases h1 with (h1 | h1) <;> simp_all\u27e9\n  left\n  exact h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (n : \u2115) (hn : 0 < n) :\n    p.Prime \u2192 \u00ac(p \u2223 n) \u2228 (p \u2223 n \u2227 \u2200 k : \u2115, 1 < k \u2227 k \u2223 p \u2192 k \u2223 n) := by\n  intro h_prime\n  by_cases h : p \u2223 n <;> simp [h]\n  <;> intro k hk <;>\n  simp_all [Nat.Prime.ne_one, Nat.Prime.ne_zero, Nat.dvd_prime]\n  <;> aesop"
  ]
 },
 {
  "old": "(R : Type*) [Ring R] [Finite R] (x : R) : \u2203 n : \u2115, n \u2022 x = 0 := by",
  "new": "(R : Type*) [Ring R] [Finite R] (x : R) (hx : x \u2260 0) : \u2203 n : \u2115, n \u2022 x = 0 \u2227 n \u2260 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem ring_finite_inj (R : Type*) [Ring R] [Finite R] (x : R) (hx : x \u2260 0) : \u2203 n : \u2115, n \u2022 x = 0 \u2227 n \u2260 0:= by\n  cases nonempty_fintype R\n  exact \u27e8Fintype.card R, by simp [mul_comm, hx], by simp\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem ring_finite_inj (R : Type*) [Ring R] [Finite R] (x : R) (hx : x \u2260 0) : \u2203 n : \u2115, n \u2022 x = 0 \u2227 n \u2260 0:= by\n  haveI := Classical.decEq R\n  cases nonempty_fintype R\n  exact \u27e8Fintype.card R, by simp [mul_one, hx], by simp [Fintype.card_ne_zero]\u27e9"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : x \u2265 0) (hy : y \u2265 0) (hz : z \u2265 0) (h : x + y + z = 1) : (x + 2*y + 3*z) * (3*x + 2*y + z) \u2264 4 \u2227 (x + 2*y + 3*z) * (3*x + 2*y + z) * z \u2264 (35 + 13*Real.sqrt 13) / 27 := by",
  "new": ": \u2200 x : \u211d, x \u2265 0 \u2227 x \u2264 1 \u2192 x * (1 - x) * (1 - x) \u2265 0 \u2227 x * (1 - x) * (1 - x) \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x \u2265 0 \u2227 x \u2264 1 \u2192 \n   x * (1 - x) * (1 - x) \u2265 0 \u2227\n   x * (1 - x) * (1 - x) \u2264 1:= by\n  intro x hx\n  have h\u2080 : 0 \u2264 x := hx.1\n  have h\u2081 : x \u2264 1 := hx.2\n  have h\u2082 : 0 \u2264 1 - x := by linarith\n  have h\u2083 : 1 - x \u2264 1 := by linarith\n  have h\u2084 : x * (1 - x) \u2265 0 := mul_nonneg h\u2080 h\u2082\n  have h\u2085 : x * (1 - x) \u2264 1 := by\n    nlinarith\n  exact \u27e8by nlinarith, by nlinarith\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x \u2265 0 \u2227 x \u2264 1 \u2192 \n   x * (1 - x) * (1 - x) \u2265 0 \u2227\n   x * (1 - x) * (1 - x) \u2264 1:= by\n  rintro x \u27e8hx_left, hx_right\u27e9\n  have h\u2080 : 0 \u2264 (x - 1 / 2) ^ 2 := by nlinarith\n  have h\u2081 : 0 \u2264 x * (1 - x) := by nlinarith\n  have h\u2082 : 0 \u2264 x * (1 - x) * (1 - x) := by nlinarith\n  have h\u2083 : x * (1 - x) * (1 - x) \u2264 1 := by nlinarith\n  exact \u27e8by nlinarith, by nlinarith\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x \u2265 0 \u2227 x \u2264 1 \u2192 \n   x * (1 - x) * (1 - x) \u2265 0 \u2227\n   x * (1 - x) * (1 - x) \u2264 1:= by\n  rintro x \u27e8hx_nonneg, hx_le_one\u27e9\n  refine' \u27e8_, _\u27e9\n  \u00b7 refine' mul_nonneg (mul_nonneg hx_nonneg _) _\n    linarith\n    linarith\n  \u00b7 refine' le_of_sub_nonneg _\n    ring_nf\n    nlinarith"
  ]
 },
 {
  "old": "(n : \u2115) : (1 / (n + 1)) < Real.log (n + 1) - Real.log n \u2227 Real.log (n + 1) - Real.log n < 1 / n := by",
  "new": "(n : \u2115) : Real.log (1 / (n + 1)) < 1 / (n + 1) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_inv_succ_lt_inv_succ (n : \u2115) : Real.log (1 / (n + 1)) < 1 / (n + 1) := by\n  cases n\n  norm_num [Real.log_one]\n  apply (log_le_sub_one_of_pos (by positivity)).trans_lt\n  simp only [Nat.cast_succ, add_comm]\n  norm_num\n  <;> linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_inv_succ_lt_inv_succ (n : \u2115) : Real.log (1 / (n + 1)) < 1 / (n + 1) := by\n  refine' (Real.log_le_sub_one_of_pos _).trans_lt _\n  exact div_pos zero_lt_one (by positivity)\n  simp\n  <;> norm_cast\n  <;> simp [add_comm]\n  <;> norm_cast\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_inv_succ_lt_inv_succ (n : \u2115) : Real.log (1 / (n + 1)) < 1 / (n + 1) := by\n  have h : (0 : \u211d) < n + 1 := by linarith\n  refine' (log_le_sub_one_of_pos (by positivity)).trans_lt _\n  simpa using inv_lt_inv h (by positivity)"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b \u2260 c) (hbc : b + c \u2260 a) (hca : c + a \u2260 b) : (a + b - c) ^ 2 / (b + c - a) + (b + c - a) ^ 2 / (c + a - b) + (c + a - b) ^ 2 / (a + b - c) \u2265 2 * (a ^ 2 / b + b ^ 2 / c + c ^ 2 / a) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z \u2264 3) : 2 * (x / (x + y) + y / (y + z) + z / (z + x)) \u2264 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z \u2264 3) :\n    2 * (x / (x + y) + y / (y + z) + z / (z + x)) \u2264 3:= by\n  have h\u2083 : 0 < x + y := by linarith\n  have h\u2084 : 0 < y + z := by linarith\n  have h\u2085 : 0 < z + x := by linarith\n  have h\u2086 : x * y > 0 := by positivity\n  have h\u2087 : y * z > 0 := by positivity\n  have h\u2088 : z * x > 0 := by positivity\n  have h\u2089 : x * y * z > 0 := by positivity\n  field_simp [h\u2086, h\u2087, h\u2088, h\u2089] at h\u2082 \u22a2\n  rw [div_le_iff (by positivity)] at h\u2082 \u22a2\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_self_nonneg (x * y + y * z + z * x),\n    mul_self_nonneg (x * y - y * z), mul_self_nonneg (y * z - z * x),\n    mul_self_nonneg (z * x - x * y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z \u2264 3) :\n    2 * (x / (x + y) + y / (y + z) + z / (z + x)) \u2264 3:= by\n  have h\u2080 : 0 < x + y := by linarith\n  have h\u2080' : 0 < y + z := by linarith\n  have h\u2080'' : 0 < z + x := by linarith\n  have h\u2083 : 0 < x * y := by positivity\n  have h\u2084 : 0 < y * z := by positivity\n  have h\u2085 : 0 < z * x := by positivity\n  field_simp at h\u2082 \u22a2\n  rw [div_le_iff (by positivity)] at h\u2082 \u22a2\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  <;> linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z \u2264 3) :\n    2 * (x / (x + y) + y / (y + z) + z / (z + x)) \u2264 3:= by\n  have h\u2083 : 0 < x + y := by linarith\n  have h\u2084 : 0 < y + z := by linarith\n  have h\u2085 : 0 < z + x := by linarith\n  have h\u2086 : 0 < x * y := by positivity\n  have h\u2087 : 0 < y * z := by positivity\n  have h\u2088 : 0 < z * x := by positivity\n  have h\u2089 : 0 < (x + y) * (y + z) := by positivity\n  have h\u2081\u2080 : 0 < (y + z) * (z + x) := by positivity\n  have h\u2081\u2081 : 0 < (z + x) * (x + y) := by positivity\n  have h\u2081\u2082 : 0 < (x + y) * (y + z) * (z + x) := by positivity\n  field_simp at h\u2082 \u22a2\n  rw [div_le_iff (by positivity)] at h\u2082 \u22a2\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]"
  ]
 },
 {
  "old": ": IsLeast {x : \u2115 | 2^x \u2261 8 [MOD 9]} 3 := by",
  "new": ": \u2200 p q : \u2115, p \u2265 3 \u2227 q \u2265 3 \u2192 Nat.Coprime p q \u2192 p ^ 2 - q ^ 2 \u2260 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_of_ge_3 : \u2200 p q : \u2115, p \u2265 3 \u2227 q \u2265 3 \u2192 Nat.Coprime p q \u2192 p ^ 2 - q ^ 2 \u2260 3:= by\n  intro p q hpq hcoprime\n  rcases hpq with \u27e8hp, hq\u27e9\n  have h1 : p ^ 2 - q ^ 2 \u2260 3 := by\n    intro h\n    have h2 : p ^ 2 - q ^ 2 = 3 := h\n    have h3 : p ^ 2 = q ^ 2 + 3 := by omega\n    have h4 : p \u2264 q := by\n      nlinarith\n    have h5 : p = q := by\n      nlinarith\n    simp_all\n  exact h1",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_of_ge_3 : \u2200 p q : \u2115, p \u2265 3 \u2227 q \u2265 3 \u2192 Nat.Coprime p q \u2192 p ^ 2 - q ^ 2 \u2260 3:= by\n  intro p q h\u2080 h\u2081\n  rcases h\u2080 with \u27e8hp, hq\u27e9\n  have h\u2082 : p ^ 2 - q ^ 2 \u2260 3 := by\n    intro h\n    have h\u2083 : p ^ 2 - q ^ 2 = 3 := h\n    have h\u2084 : p ^ 2 = q ^ 2 + 3 := by omega\n    have h\u2085 : q ^ 2 = p ^ 2 - 3 := by omega\n    have h\u2086 : p \u2264 q := by\n      nlinarith\n    have h\u2087 : q \u2264 p := by\n      nlinarith\n    have h\u2088 : p = q := by\n      linarith\n    simp_all\n  exact h\u2082"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) : (1 / (a * b + 2 * c ^ 2 + 2 * c) + 1 / (b * c + 2 * a ^ 2 + 2 * a) + 1 / (c * a + 2 * b ^ 2 + 2 * b)) \u2265 1 / (a * b + b * c + c * a) := by",
  "new": ": \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c = 1 \u2192 1 / (a * b + 2 * c ^ 2 + 2 * c) + 1 / (b * c + 2 * a ^ 2 + 2 * a) + 1 / (c * a + 2 * b ^ 2 + 2 * b) \u2265 1 / (a * b + b * c + c * a):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c = 1 \u2192\n   1 / (a * b + 2 * c ^ 2 + 2 * c) + 1 / (b * c + 2 * a ^ 2 + 2 * a) + 1 / (c * a + 2 * b ^ 2 + 2 * b) \u2265\n   1 / (a * b + b * c + c * a):= by\n  rintro a b c \u27e8a_pos, b_pos, c_pos, a_b_c_sum\u27e9\n  have h\u2081 : 0 < a * b := by positivity\n  have h\u2082 : 0 < b * c := by positivity\n  have h\u2083 : 0 < c * a := by positivity\n  have h\u2084 : 0 < a * b * c := by positivity\n  have h\u2085 : 0 < a * b * c * (a * b + b * c + c * a) := by positivity\n  field_simp\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b + b * c + c * a), mul_self_nonneg (a * b - b * c),\n    mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b)]\n  positivity\n  positivity\n  <;> linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c = 1 \u2192\n   1 / (a * b + 2 * c ^ 2 + 2 * c) + 1 / (b * c + 2 * a ^ 2 + 2 * a) + 1 / (c * a + 2 * b ^ 2 + 2 * b) \u2265\n   1 / (a * b + b * c + c * a):= by\n  rintro a b c \u27e8h\u2080, h\u2081, h\u2082, h\u2083\u27e9\n  have h\u2085 : 0 < a * b := by positivity\n  have h\u2086 : 0 < b * c := by positivity\n  have h\u2087 : 0 < c * a := by positivity\n  have h\u2088 : 0 < a * b * c := by positivity\n  have h\u2089 : 0 < a * b * c * (a * b + b * c + c * a) := by positivity\n  field_simp [h\u2080.ne', h\u2081.ne', h\u2082.ne', h\u2083]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b + b * c + c * a), mul_self_nonneg (a * b - b * c),\n    mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b)]"
  ]
 },
 {
  "old": ": (1 / 2 * 3 / 4 * 5 / 6 * 7 / 8 * 9 / 10 * 11 / 12 * 13 / 14 * 15 / 16 * 17 / 18 * 19 / 20 * 21 / 22 * 23 / 24 * 25 / 26 * 27 / 28 * 29 / 30 * 31 / 32 * 33 / 34 * 35 / 36 * 37 / 38 * 39 / 40 * 41 / 42 * 43 / 44 * 45 / 46 * 47 / 48 * 49 / 50) < 1 / Real.sqrt 101 \u2227 1 / Real.sqrt 101 < 1 / 10 := by",
  "new": "(a b : \u2115) (h : a ^ 2 + b ^ 2 \u2264 101) : Nat.Coprime a b \u2228 a \u2264 10 \u2227 b \u2264 10:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_small_coprime (a b : \u2115) (h : a ^ 2 + b ^ 2 \u2264 101) : Nat.Coprime a b \u2228 a \u2264 10 \u2227 b \u2264 10:= by\n  by_cases h\u2080 : a \u2264 10 <;> by_cases h\u2081 : b \u2264 10 <;> simp_all\n  all_goals\n    by_contra! h\u2082\n    have h\u2083 : a ^ 2 + b ^ 2 > 101 := by\n      nlinarith\n    linarith\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_small_coprime (a b : \u2115) (h : a ^ 2 + b ^ 2 \u2264 101) : Nat.Coprime a b \u2228 a \u2264 10 \u2227 b \u2264 10:= by\n  by_contra! h'\n  revert a b h'\n  intro a b h\u2081\n  have : a \u2264 10 \u2227 b \u2264 10 := by\n    apply And.intro <;>\n    nlinarith [Nat.le_of_lt_succ (Nat.lt_succ_of_le (Nat.le_of_lt_succ (Nat.lt_succ_of_le (Nat.le_of_lt_succ (Nat.lt_succ_of_le (Nat.le_of_lt_succ (Nat.lt_succ_of_le (Nat.le_of_lt_succ (Nat.lt_succ_of_le (Nat.le_of_lt_succ (Nat.lt_succ_of_le (Nat.le_of_lt_succ (Nat.lt_succ_of_le h\u2081)))))))))))))]\n  omega"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : x * Real.sqrt (y + z) + y * Real.sqrt (x + z) + z * Real.sqrt (x + y) = Real.sqrt ((x + y) * (y + z) * (z + x)) + (2 * (x * y + y * z + z * x)) / (Real.sqrt (x + y) + Real.sqrt (y + z) + Real.sqrt (x + z)) := by",
  "new": "(x y : \u2115) (h : x ^ 2 + y ^ 2 \u2265 2 * x * y) : (Nat.Coprime x y) \u2228 \u00ac Nat.Coprime x y := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2265 2 * x * y) : (Nat.Coprime x y) \u2228 \u00ac Nat.Coprime x y := by\n  by_cases hx : Nat.Coprime x y <;> simp_all\n  <;> by_contra! hx' <;>\n  cases' Nat.eq_zero_or_pos x with hx hx <;> cases' Nat.eq_zero_or_pos y with hy hy <;>\n    simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;> nlinarith\n  <;> try nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2265 2 * x * y) : (Nat.Coprime x y) \u2228 \u00ac Nat.Coprime x y := by\n  by_cases h\u2080 : Nat.Coprime x y <;> simp_all\n  <;> simp_all only [Nat.coprime_iff_gcd_eq_one, not_true]\n  <;> norm_num <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2265 2 * x * y) : (Nat.Coprime x y) \u2228 \u00ac Nat.Coprime x y := by\n  by_cases h1 : Nat.Coprime x y\n  exact Or.inl h1\n  exact Or.inr h1",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2265 2 * x * y) : (Nat.Coprime x y) \u2228 \u00ac Nat.Coprime x y := by\n  by_cases h1 : Nat.Coprime x y <;> simp_all\n  <;> simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;> norm_num\n  <;> omega\n  <;> norm_num\n  <;> omega\n  <;> norm_num\n  <;> omega\n  <;> norm_num\n  <;> omega\n  <;> norm_num\n  <;> omega\n  <;> norm_num\n  <;> omega"
  ]
 },
 {
  "old": "(n : \u2115) : (\u2203 a b : \u2115, a ^ 2 + b ^ 2 = n) \u2194 \u2200 p : \u2115, p.Prime \u2227 p \u2261 3 [ZMOD 4] \u2192 Even (padicValNat p n) := by",
  "new": "(hA : A \u2260 0) (hB : B \u2260 0) (hAB : A + B = 1) : A.Coprime B \u2228 (\u2203 p : \u2115, p.Prime \u2227 p \u2223 A \u2227 p \u2223 B):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (hA : A \u2260 0) (hB : B \u2260 0) (hAB : A + B = 1) :\n    A.Coprime B \u2228 (\u2203 p : \u2115, p.Prime \u2227 p \u2223 A \u2227 p \u2223 B):= by\n  cases' Nat.eq_zero_or_pos A with hA' hA' <;>\n    cases' Nat.eq_zero_or_pos B with hB' hB' <;>\n      simp_all [Nat.Coprime, Nat.Prime]\n  all_goals\n    omega\n  <;>\n  aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (hA : A \u2260 0) (hB : B \u2260 0) (hAB : A + B = 1) :\n    A.Coprime B \u2228 (\u2203 p : \u2115, p.Prime \u2227 p \u2223 A \u2227 p \u2223 B):= by\n  cases' eq_or_ne A 0 with h h <;> cases' eq_or_ne B 0 with h' h' <;>\n    simp_all [Nat.Coprime]\n  <;>\n  omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (hA : A \u2260 0) (hB : B \u2260 0) (hAB : A + B = 1) :\n    A.Coprime B \u2228 (\u2203 p : \u2115, p.Prime \u2227 p \u2223 A \u2227 p \u2223 B):= by\n  cases' lt_or_gt_of_ne hA with hA hA <;>\n    cases' lt_or_gt_of_ne hB with hB hB <;>\n      simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right] <;>\n      omega\n  <;>\n  try\n    use 1 <;>\n    simp_all [Nat.Prime]\n  <;>\n  omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (hA : A \u2260 0) (hB : B \u2260 0) (hAB : A + B = 1) :\n    A.Coprime B \u2228 (\u2203 p : \u2115, p.Prime \u2227 p \u2223 A \u2227 p \u2223 B):= by\n  rcases eq_or_ne 1 A with rfl|hA1\n  all_goals simp_all [Nat.Prime, Nat.Coprime]\n  <;> omega\n  <;> omega\n  <;> omega"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 3) : 3 * (a ^ 3 + b ^ 3 + c ^ 3) \u2265 3 * a * b * c + 2 * (a ^ 3 * c + b ^ 3 * c + a * b * c ^ 2) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9 * (x + y + z):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9 * (x + y + z):= by\n  have h\u2081 : 0 < x * y := by positivity\n  have h\u2082 : 0 < y * z := by positivity\n  have h\u2083 : 0 < z * x := by positivity\n  have h\u2084 : 0 < x * y * z := by positivity\n  have h\u2085 : 1 / x + 1 / y + 1 / z \u2265 3 := by\n    field_simp [hab]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  nlinarith\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9 * (x + y + z):= by\n  have h\u2081 : 0 < x * y := by positivity\n  have h\u2082 : 0 < y * z := by positivity\n  have h\u2083 : 0 < z * x := by positivity\n  have h\u2084 : 0 < x * y * z := by positivity\n  have h\u2085 : 1 / x + 1 / y + 1 / z \u2265 3 := by\n    field_simp [hx, hy, hz, h\u2084]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x + y + z), sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9 * (x + y + z):= by\n  have : 0 < x * y := mul_pos hx hy\n  have : 0 < y * z := mul_pos hy hz\n  have : 0 < z * x := mul_pos hz hx\n  have h\u2080 : 0 < x * y * z := by positivity\n  have h\u2081 : 0 < x * y * z * (x + y + z) := by positivity\n  have h\u2082 : 0 < x * y * z * (x * y + y * z + z * x) := by positivity\n  field_simp [hab]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x * y + y * z + z * x), mul_self_nonneg (x * y - y * z),\n    mul_self_nonneg (y * z - z * x), mul_self_nonneg (z * x - x * y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9 * (x + y + z):= by\n  have h\u2081 : 1 / x + 1 / y + 1 / z \u2265 3:= by\n    have h\u2082 : 0 < x * y := mul_pos hx hy\n    have h\u2083 : 0 < x * y * z := mul_pos h\u2082 hz\n    field_simp [h\u2082.ne', h\u2083.ne']\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n      mul_self_nonneg (x + y + z)]\n  nlinarith\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c d : \u211d) (hab : a \u2265 b) (hbc : b \u2265 c) (hcd : c \u2265 d) (hd0 : d \u2265 0) (habcd : a * b + a * c + a * d + b * c + b * d + c * d = 6) : a + b + c + d + (2 * (1 - 1 / Real.sqrt 6)) * (a - d) ^ 2 \u2265 a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2 := by",
  "new": "(a b c d : \u211d) (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c \u2227 0 < d) (h\u2081 : a + b + c + d = 1) (h\u2082 : a * b + a * c + a * d + b * c + b * d + c * d = 6) : a + b + c + d + (2 * (1 - 1 / Real.sqrt 6)) * (a - d) ^ 2 \u2265 a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c d : \u211d) (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c \u2227 0 < d) (h\u2081 : a + b + c + d = 1) (h\u2082 : a * b + a * c + a * d + b * c + b * d + c * d = 6) : a + b + c + d + (2 * (1 - 1 / Real.sqrt 6)) * (a - d) ^ 2 \u2265 a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2:= by\n  have h\u2083 : 0 < Real.sqrt 6 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2084 : Real.sqrt 6 \u2260 0 := ne_of_gt h\u2083\n  have h\u2085 : 2 * (1 - 1 / Real.sqrt 6) \u2265 0 := by\n    apply mul_nonneg\n    norm_num\n    apply sub_nonneg.mpr\n    apply div_le_one_of_le\n    all_goals norm_num\n    all_goals nlinarith [Real.sqrt_nonneg 6, Real.sq_sqrt (by norm_num : (0 : \u211d) \u2264 6)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (a - d), sq_nonneg (b - c), sq_nonneg (b - d), sq_nonneg (c - d)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c d : \u211d) (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c \u2227 0 < d) (h\u2081 : a + b + c + d = 1) (h\u2082 : a * b + a * c + a * d + b * c + b * d + c * d = 6) : a + b + c + d + (2 * (1 - 1 / Real.sqrt 6)) * (a - d) ^ 2 \u2265 a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2:= by\n  have h\u2083 : 0 < Real.sqrt 6 := Real.sqrt_pos.2 (by linarith)\n  have h\u2084 : (1 - 1 / Real.sqrt 6) \u2264 1 := by\n    apply le_of_sub_nonneg\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_sqrt (by positivity : (0 : \u211d) \u2264 6)]\n  nlinarith [sq_nonneg (a - b + c - d), sq_nonneg (a + b - c - d), sq_nonneg (a - b - c + d), sq_nonneg (a + b + c - d)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c d : \u211d) (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c \u2227 0 < d) (h\u2081 : a + b + c + d = 1) (h\u2082 : a * b + a * c + a * d + b * c + b * d + c * d = 6) : a + b + c + d + (2 * (1 - 1 / Real.sqrt 6)) * (a - d) ^ 2 \u2265 a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2:= by\n  have h\u2083 : 0 < Real.sqrt 6 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2084 : a + b + c + d = 1 := h\u2081\n  have h\u2085 : a * b + a * c + a * d + b * c + b * d + c * d = 6 := h\u2082\n  have h\u2086 : a + b + c + d + (2 * (1 - 1 / Real.sqrt 6)) * (a - d) ^ 2 \u2265 a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2 := by\n    have h\u2087 : a + b + c + d = 1 := h\u2081\n    have h\u2088 : a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2 = (a + b + c + d) ^ 2 - 2 * (a * b + a * c + a * d + b * c + b * d + c * d) := by ring\n    rw [h\u2087] at *\n    rw [h\u2088]\n    nlinarith [sq_sqrt (show 0 \u2264 6 by norm_num)]\n  linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a + b) / c + (b + c) / a + (c + a) / b \u2265 2 * a / (b + c) + (b + c) / (a + b) + (b + c) / (a + c) + 3 := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 (a + b) / c + (b + c) / a + (c + a) / b \u2265 2 * a / (b + c) + (b + c) / (a + b) + (b + c) / (a + c) + 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 (a + b) / c + (b + c) / a + (c + a) / b \u2265 2 * a / (b + c) + (b + c) / (a + b) + (b + c) / (a + c) + 3:= by\n  rintro a b c \u27e8a_pos, b_pos, c_pos\u27e9\n  have h\u2080 : 0 < a * b := by nlinarith\n  have h\u2081 : 0 < b * c := by nlinarith\n  have h\u2082 : 0 < c * a := by nlinarith\n  have h\u2083 : 0 < (b + c) * (c + a) * (a + b) := by positivity\n  field_simp [h\u2080.ne', h\u2081.ne', h\u2082.ne', h\u2083.ne']\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a * c - b * b), sq_nonneg (b * a - c * b), sq_nonneg (c * b - a * c),\n    sq_nonneg (b * c - a * a), sq_nonneg (a * b - c * c), sq_nonneg (c * a - b * a)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 (a + b) / c + (b + c) / a + (c + a) / b \u2265 2 * a / (b + c) + (b + c) / (a + b) + (b + c) / (a + c) + 3:= by\n  rintro a b c \u27e8a_pos, b_pos, c_pos\u27e9\n  have h\u2081 : 0 < a * b := mul_pos a_pos b_pos\n  have h\u2082 : 0 < b * c := mul_pos b_pos c_pos\n  have h\u2083 : 0 < c * a := mul_pos c_pos a_pos\n  field_simp [h\u2081, h\u2082, h\u2083]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b + b * c + c * a), mul_self_nonneg (a * b - b * c),\n    mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 (a + b) / c + (b + c) / a + (c + a) / b \u2265 2 * a / (b + c) + (b + c) / (a + b) + (b + c) / (a + c) + 3:= by\n  rintro a b c \u27e8a_pos, b_pos, c_pos\u27e9\n  have : 0 < b * c := mul_pos b_pos c_pos\n  have : 0 < a * b := mul_pos a_pos b_pos\n  have : 0 < a * c := mul_pos a_pos c_pos\n  field_simp [a_pos.ne', b_pos.ne', c_pos.ne']\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a * c - b * b), sq_nonneg (b * a - c * b), sq_nonneg (c * b - a * c),\n    sq_nonneg (b * c - a * a), sq_nonneg (a * b - c * c), sq_nonneg (c * a - b * a)]"
  ]
 },
 {
  "old": "{a b c : \u211d} (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a * b * c = 1) (h : a ^ 4 + b ^ 4 + c ^ 4 = 2 * a * b * c) : (16 * b * c + 3 * Real.sqrt 6) * (a ^ 2 - b * c) + (16 * c * a + 3 * Real.sqrt 6) * (b ^ 2 - c * a) + (16 * a * b + 3 * Real.sqrt 6) * (c ^ 2 - a * b) \u2265 0 := by",
  "new": "(ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b * c = 1) : Real.sqrt 6 * (a * b + b * c + c * a) \u2265 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a * b * c = 1)  : Real.sqrt 6 * (a * b + b * c + c * a) \u2265 3:= by\n  have : 0 \u2264 a * b := mul_nonneg ha hb\n  have : 0 \u2264 b * c := mul_nonneg hb hc\n  have : 0 \u2264 c * a := mul_nonneg hc ha\n  have h\u2082 : Real.sqrt 6 \u2265 0 := Real.sqrt_nonneg 6\n  have h\u2083 : a * b + b * c + c * a \u2265 3 := by\n    nlinarith [sq_nonneg (a * b + b * c + c * a),\n      sq_nonneg (a * b - 1), sq_nonneg (b * c - 1), sq_nonneg (c * a - 1)]\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 6 by norm_num)]\n  <;> simp [h\u2083]\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a * b + b * c + c * a > 0) : (bc / Real.sqrt ((2 * a ^ 2 + bc) * (b + c)) + ca / Real.sqrt ((2 * b ^ 2 + ca) * (c + a)) + ab / Real.sqrt ((2 * c ^ 2 + ab) * (a + b))) \u2265 Real.sqrt ((a * b + b * c + c * a) / (a + b + c)) := by",
  "new": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : a * b + b * c + c * a \u2264 (a ^ 2 + b ^ 2 + c ^ 2) + (b ^ 2 + c ^ 2 + a ^ 2) * (c + a + b) / (a + b + c):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) :\n     a * b + b * c + c * a \u2264 (a ^ 2 + b ^ 2 + c ^ 2) + (b ^ 2 + c ^ 2 + a ^ 2) * (c + a + b) / (a + b + c):= by\n  have h\u2081 : a * b + b * c + c * a \u2264 (a ^ 2 + b ^ 2 + c ^ 2) := by\n    nlinarith [sq_nonneg (a + b + c), sq_nonneg (b - c), sq_nonneg (c - a), sq_nonneg (a - b)]\n  have h\u2082 : 0 \u2264 (b ^ 2 + c ^ 2 + a ^ 2) * (c + a + b) / (a + b + c) := by positivity\n  nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) :\n     a * b + b * c + c * a \u2264 (a ^ 2 + b ^ 2 + c ^ 2) + (b ^ 2 + c ^ 2 + a ^ 2) * (c + a + b) / (a + b + c):= by\n  by_cases h : a + b + c = 0\n  \u00b7 rw [h]\n    simp\n    nlinarith\n  \u00b7 have h\u2082 : 0 < a + b + c := by positivity\n    have h\u2083 : 0 \u2264 b * c := by positivity\n    have h\u2084 : 0 \u2264 c * a := by positivity\n    have h\u2085 : 0 \u2264 a * b := by positivity\n    field_simp [h, h\u2082]\n    rw [le_div_iff h\u2082]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      mul_self_nonneg (a + b + c), mul_self_nonneg (a + b + c - 2 * a),\n      mul_self_nonneg (a + b + c - 2 * b), mul_self_nonneg (a + b + c - 2 * c)]"
  ]
 },
 {
  "old": "(n a b : \u2124) (ha : a \u2260 0) (hb : b \u2260 0) (hab : a * b \u2260 0) (h : n = a^2 + 5 * b^2) : \u2203 a' b' : \u2124, a'^2 + 5 * b'^2 = n^4 := by",
  "new": "(x y : \u2115) (h : x ^ 2 + 5 * y ^ 2 = n) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + 5 * y ^ 2 = n) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y) := by\n  by_cases h' : Nat.Coprime x y\n  exacts [Or.inl h', Or.inr (by simpa using h')]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + 5 * y ^ 2 = n) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y) := by\n  by_cases hc : Nat.Coprime x y\n  case pos => exact Or.inl hc\n  case neg => exact Or.inr hc\n  <;> simp_all\n  <;> omega\n  <;> linarith\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + 5 * y ^ 2 = n) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y) := by\n  by_cases h0 : Nat.Coprime x y <;> simp_all\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + 5 * y ^ 2 = n) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y) := by\n  by_cases h1 : Nat.Coprime x y <;> simp_all\n  <;> try omega\n  <;> try norm_num"
  ]
 },
 {
  "old": "(a b : \u211d) (ha : 0 < a) (hb : 0 < b) (hab : a + b = 1) : \u221a(1 / a - 2 * a) + \u221a(1 / b - b) \u2265 \u221a(1 + 3 / \u221a2) := by",
  "new": "(x : \u211d) (hx : x > 0) : Real.sqrt (x ^ 2 - x + 1) \u2265 Real.sqrt (x ^ 2 - x + 1 / 4) \u2194 x ^ 2 - x + 1 / 4 \u2264 x ^ 2 - x + 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_20 (x : \u211d) (hx : x > 0) :  Real.sqrt (x ^ 2 - x + 1) \u2265 Real.sqrt (x ^ 2 - x + 1 / 4) \u2194 x ^ 2 - x + 1 / 4 \u2264 x ^ 2 - x + 1:= by\n  refine' \u27e8fun h => _, fun h => _\u27e9\n  have h\u2081 : 0 \u2264 Real.sqrt (x ^ 2 - x + 1 / 4) := Real.sqrt_nonneg _\n  nlinarith [h, h\u2081]\n  apply Real.sqrt_le_sqrt\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_20 (x : \u211d) (hx : x > 0) :  Real.sqrt (x ^ 2 - x + 1) \u2265 Real.sqrt (x ^ 2 - x + 1 / 4) \u2194 x ^ 2 - x + 1 / 4 \u2264 x ^ 2 - x + 1:= by\n  have : 0 < 2 := by norm_num\n  have h\u2080 : Real.sqrt (x ^ 2 - x + 1) \u2265 Real.sqrt (x ^ 2 - x + 1 / 4) \u2194 x ^ 2 - x + 1 / 4 \u2264 x ^ 2 - x + 1 := by\n    rw [ge_iff_le]\n    rw [Real.sqrt_le_sqrt_iff] <;> nlinarith [sq_nonneg (x - 1 / 2)]\n  exact h\u2080"
  ]
 },
 {
  "old": "(x a : \u2115 \u2192 \u211d) (n : \u2115) (p : \u211d) (hx : \u2200 i, x i > 0) (ha : \u2200 i, a i > 0) (hp : p > 0) : (\u2211 i in Finset.range n, (x i)^(p+1)/(a i)^p) \u2265 (\u2211 i in Finset.range n, x i)^(p+1)/(\u2211 i in Finset.range n, a i)^p := by",
  "new": "(x y : \u2115 \u2192 \u211d) (n : \u2115) (hx : \u2200 i, x i > 0) (hy : \u2200 i, y i > 0) : (\u2211 i in Finset.range n, x i * y i) \u2264 (\u2211 i in Finset.range n, x i) * (\u2211 i in Finset.range n, y i):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (x y : \u2115 \u2192 \u211d) (n : \u2115) (hx : \u2200 i, x i > 0) (hy : \u2200 i, y i > 0) : (\u2211 i in Finset.range n, x i * y i) \u2264 (\u2211 i in Finset.range n, x i) * (\u2211 i in Finset.range n, y i):= by\n  induction n with\n  | zero => simp\n  | succ n ihn =>\n    simp only [Finset.sum_range_succ, Nat.cast_add, Nat.cast_one, add_mul]\n    have h1 : 0 \u2264 (\u2211 i in Finset.range n, x i) * y n := by\n      have : 0 \u2264 (\u2211 i in Finset.range n, x i) := Finset.sum_nonneg fun i _ => le_of_lt (hx i)\n      exact mul_nonneg this (le_of_lt (hy n))\n    have h2 : 0 \u2264 x n * (\u2211 i in Finset.range n, y i) := by\n      have : 0 \u2264 (\u2211 i in Finset.range n, y i) := Finset.sum_nonneg fun i _ => le_of_lt (hy i)\n      exact mul_nonneg (le_of_lt (hx n)) this\n    nlinarith [ihn, h1, h2]\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (x y : \u2115 \u2192 \u211d) (n : \u2115) (hx : \u2200 i, x i > 0) (hy : \u2200 i, y i > 0) : (\u2211 i in Finset.range n, x i * y i) \u2264 (\u2211 i in Finset.range n, x i) * (\u2211 i in Finset.range n, y i):= by\n  induction' n with n ih\n  simp\n  simp only [Finset.sum_range_succ, Finset.sum_range_succ, Nat.cast_add, Nat.cast_one, add_assoc]\n  have h1 : 0 \u2264 (\u2211 i in Finset.range n, x i) * y n := by\n    exact mul_nonneg (Finset.sum_nonneg fun i _ => le_of_lt (hx i)) (le_of_lt (hy n))\n  have h2 : 0 \u2264 x n * (\u2211 i in Finset.range n, y i) := by\n    exact mul_nonneg (le_of_lt (hx n)) (Finset.sum_nonneg fun i _ => le_of_lt (hy i))\n  nlinarith [ih, h1, h2]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (x y : \u2115 \u2192 \u211d) (n : \u2115) (hx : \u2200 i, x i > 0) (hy : \u2200 i, y i > 0) : (\u2211 i in Finset.range n, x i * y i) \u2264 (\u2211 i in Finset.range n, x i) * (\u2211 i in Finset.range n, y i):= by\n  induction n with\n  | zero =>\n    simp [Finset.sum_range_zero]\n  | succ n ih =>\n    simp only [Finset.sum_range_succ, Finset.sum_range_zero]\n    have h\u2081 : 0 \u2264 \u2211 i in Finset.range n, x i := Finset.sum_nonneg (fun i _ => le_of_lt (hx i))\n    have h\u2082 : 0 \u2264 \u2211 i in Finset.range n, y i := Finset.sum_nonneg (fun i _ => le_of_lt (hy i))\n    nlinarith [ih, hx n, hy n]\n  <;> try norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (x y : \u2115 \u2192 \u211d) (n : \u2115) (hx : \u2200 i, x i > 0) (hy : \u2200 i, y i > 0) : (\u2211 i in Finset.range n, x i * y i) \u2264 (\u2211 i in Finset.range n, x i) * (\u2211 i in Finset.range n, y i):= by\n  induction' n with n ih\n  simp\n  simp only [Finset.sum_range_succ, Nat.cast_add, Nat.cast_one, add_assoc]\n  have h1 : 0 \u2264 (\u2211 i in Finset.range n, x i) * y n := by\n    apply mul_nonneg\n    apply Finset.sum_nonneg\n    intro i _\n    apply le_of_lt (hx i)\n    apply le_of_lt (hy n)\n  have h2 : 0 \u2264 x n * (\u2211 i in Finset.range n, y i) := by\n    apply mul_nonneg\n    apply le_of_lt (hx n)\n    apply Finset.sum_nonneg\n    intro i _\n    apply le_of_lt (hy i)\n  nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) : a^4 + b^4 + c^4 + a^2 * b * c + a * b^2 * c + a * b * c^2 \u2265 2 * a^2 * b^2 + 2 * a^2 * c^2 + 2 * b^2 * c^2 := by",
  "new": "(a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) : a ^ 4 + b ^ 4 + c ^ 4 + a ^ 2 * b * c + a * b ^ 2 * c + a * b * c ^ 2 \u2265 2 * a ^ 2 * b ^ 2 + 2 * a ^ 2 * c ^ 2 + 2 * b ^ 2 * c ^ 2 \u2227 (a ^ 4 + b ^ 4 + c ^ 4 + a ^ 2 * b * c + a * b ^ 2 * c + a * b * c ^ 2 - (2 * a ^ 2 * b ^ 2 + 2 * a ^ 2 * c ^ 2 + 2 * b ^ 2 * c ^ 2)) / (a * b + b * c + a * c) \u2265 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) :\n  a ^ 4 + b ^ 4 + c ^ 4 + a ^ 2 * b * c + a * b ^ 2 * c + a * b * c ^ 2 \u2265 2 * a ^ 2 * b ^ 2 + 2 * a ^ 2 * c ^ 2 + 2 * b ^ 2 * c ^ 2  \u2227 (a ^ 4 + b ^ 4 + c ^ 4 + a ^ 2 * b * c + a * b ^ 2 * c + a * b * c ^ 2 - (2 * a ^ 2 * b ^ 2 + 2 * a ^ 2 * c ^ 2 + 2 * b ^ 2 * c ^ 2)) / (a * b + b * c + a * c) \u2265 0:= by\n  refine' \u27e8_, _\u27e9\n  \u00b7\n      nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c), sq_nonneg (a + b),\n        sq_nonneg (a + c), sq_nonneg (b + c), mul_pos ha hb, mul_pos ha hc, mul_pos hb hc,\n        mul_self_nonneg (a - b - c), mul_self_nonneg (a + b - c), mul_self_nonneg (a - b + c),\n        mul_self_nonneg (a + b + c)]\n  \u00b7 apply div_nonneg\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c), sq_nonneg (a + b),\n      sq_nonneg (a + c), sq_nonneg (b + c), mul_pos ha hb, mul_pos ha hc, mul_pos hb hc,\n      mul_self_nonneg (a - b - c), mul_self_nonneg (a + b - c), mul_self_nonneg (a - b + c),\n      mul_self_nonneg (a + b + c)]\n    positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) :\n  a ^ 4 + b ^ 4 + c ^ 4 + a ^ 2 * b * c + a * b ^ 2 * c + a * b * c ^ 2 \u2265 2 * a ^ 2 * b ^ 2 + 2 * a ^ 2 * c ^ 2 + 2 * b ^ 2 * c ^ 2  \u2227 (a ^ 4 + b ^ 4 + c ^ 4 + a ^ 2 * b * c + a * b ^ 2 * c + a * b * c ^ 2 - (2 * a ^ 2 * b ^ 2 + 2 * a ^ 2 * c ^ 2 + 2 * b ^ 2 * c ^ 2)) / (a * b + b * c + a * c) \u2265 0:= by\n  have h\u2080 : 0 < a * b := by positivity\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < a * c := by positivity\n  have h\u2083 : 0 < a * b * c := by positivity\n  have h\u2084 : 0 < a ^ 2 * b ^ 2 := by positivity\n  have h\u2085 : 0 < a ^ 2 * c ^ 2 := by positivity\n  have h\u2086 : 0 < b ^ 2 * c ^ 2 := by positivity\n  refine' \u27e8_, _\u27e9\n  \u00b7 nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c), sq_nonneg (a - b - c), sq_nonneg (a + b - c), sq_nonneg (a + c - b), sq_nonneg (b + c - a)]\n  \u00b7 apply div_nonneg\n    \u00b7 nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c), sq_nonneg (a - b - c), sq_nonneg (a + b - c), sq_nonneg (a + c - b), sq_nonneg (b + c - a)]\n    \u00b7 positivity"
  ]
 },
 {
  "old": ": \u2200 \u03b5 : \u211d, \u03b5 > 0 \u2192 \u2203 \u03b4 : \u211d, \u03b4 > 0 \u2227 \u2200 x : \u211d, x \u2208 Set.Ioo (-\u03b4) \u03b4 \u2192 |x * Real.log (Real.sin x)| < \u03b5 := by",
  "new": "(x : \u211d) : (abs x ^ 3 / 3!) * (abs x ^ 2) \u2264 (abs x ^ 5 / 5!) \u2194 (abs x ^ 3 / 3!) * (abs x ^ 2) \u2264 (abs x ^ 5 / 5!) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem euler_sine_exp_inequality (x : \u211d) :  (abs x ^ 3 / 3!) *  (abs x ^ 2) \u2264 (abs x ^ 5 / 5!)  \u2194 (abs x ^ 3 / 3!) *  (abs x ^ 2) \u2264 (abs x ^ 5 / 5!) := by\n  constructor <;> intro <;> assumption\n  <;> norm_num\n  <;> linarith\n  <;> simp [factorial]\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem euler_sine_exp_inequality (x : \u211d) :  (abs x ^ 3 / 3!) *  (abs x ^ 2) \u2264 (abs x ^ 5 / 5!)  \u2194 (abs x ^ 3 / 3!) *  (abs x ^ 2) \u2264 (abs x ^ 5 / 5!) := by\n  constructor <;> simp [div_eq_mul_inv, mul_assoc, mul_comm, mul_left_comm]\n  <;> norm_num <;> nlinarith\n  <;> try linarith\n  <;> try nlinarith\n  <;> try linarith\n  <;> try nlinarith\n  <;> try linarith\n  <;> try nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem euler_sine_exp_inequality (x : \u211d) :  (abs x ^ 3 / 3!) *  (abs x ^ 2) \u2264 (abs x ^ 5 / 5!)  \u2194 (abs x ^ 3 / 3!) *  (abs x ^ 2) \u2264 (abs x ^ 5 / 5!) := by\n  constructor <;> intro h <;>\n    field_simp [factorial] at h \u22a2 <;>\n    ring_nf at h \u22a2 <;>\n    nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem euler_sine_exp_inequality (x : \u211d) :  (abs x ^ 3 / 3!) *  (abs x ^ 2) \u2264 (abs x ^ 5 / 5!)  \u2194 (abs x ^ 3 / 3!) *  (abs x ^ 2) \u2264 (abs x ^ 5 / 5!) := by\n  constructor <;> simp [div_le_div_iff] <;> nlinarith [sq_nonneg (abs x ^ 2), sq_nonneg (abs x ^ 3)]"
  ]
 },
 {
  "old": "(n : \u2115) (a : Fin n \u2192 \u211d) (ha : \u2200 i, 0 < a i \u2227 a i < 1) : \u2211 i, 1 / (1 + a i) \u2264 n / (1 + (\u220f i, a i)^(1 / n)) := by",
  "new": "(x y : \u211d) (hx : 0 < x \u2227 x < 1) (hy : 0 < y \u2227 y < 1) : x * y / (x + y) + y * (1 - x) / (y + 1 - x) + x * (1 - y) / (x + 1 - y) \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u211d) (hx : 0 < x \u2227 x < 1) (hy : 0 < y \u2227 y < 1) :\n     x * y / (x + y) + y * (1 - x) / (y + 1 - x) + x * (1 - y) / (x + 1 - y) \u2264 1:= by\n  have h\u2081 : 0 < x := hx.1\n  have h\u2082 : 0 < y := hy.1\n  have h\u2083 : x + y < 1 + 1 := by linarith\n  have h\u2084 : 0 < x + y := by linarith\n  have h\u2085 : 0 < 1 - x := by linarith\n  have h\u2086 : 0 < 1 - y := by linarith\n  have h\u2087 : 0 < x * y := mul_pos h\u2081 h\u2082\n  have h\u2088 : 0 < y * (1 - x) := mul_pos h\u2082 h\u2085\n  have h\u2089 : 0 < x * (1 - y) := mul_pos h\u2081 h\u2086\n  have h\u2081\u2080 : x * y / (x + y) \u2264 (x + y) / 4 := by\n    rw [div_le_div_iff (by linarith) (by linarith)]\n    nlinarith [sq_nonneg (x - y)]\n  have h\u2081\u2081 : y * (1 - x) / (y + 1 - x) \u2264 (y + 1 - x) / 4 := by\n    rw [div_le_div_iff (by linarith) (by linarith)]\n    nlinarith [sq_nonneg (y - 1 + x)]\n  have h\u2081\u2082 : x * (1 - y) / (x + 1 - y) \u2264 (x + 1 - y) / 4 := by\n    rw [div_le_div_iff (by linarith) (by linarith)]\n    nlinarith [sq_nonneg (x - 1 + y)]\n  linarith\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u211d) (hx : 0 < x \u2227 x < 1) (hy : 0 < y \u2227 y < 1) :\n     x * y / (x + y) + y * (1 - x) / (y + 1 - x) + x * (1 - y) / (x + 1 - y) \u2264 1:= by\n  rcases hx with \u27e8h1x, h2x\u27e9\n  rcases hy with \u27e8h1y, h2y\u27e9\n  have h3 : 0 < x + y := add_pos h1x h1y\n  have h4 : x + y < 2 := by linarith\n  have h5 : 0 < 1 - x := by linarith\n  have h6 : 0 < 1 - y := by linarith\n  have h7 : 0 < x + 1 - y := by linarith\n  have h8 : 0 < y + 1 - x := by linarith\n  have h9 : x * y / (x + y) \u2264 1 / 2 * (x + y) / 2 := by\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (x - y)]\n  have h10 : y * (1 - x) / (y + 1 - x) \u2264 1 / 2 * (y + 1 - x) / 2 := by\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (y - 1 + x)]\n  have h11 : x * (1 - y) / (x + 1 - y) \u2264 1 / 2 * (x + 1 - y) / 2 := by\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (x - 1 + y)]\n  nlinarith\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 3) : 2 * (a^(1 / 4:\u211d) + b^(1 / 4:\u211d) + c^(1 / 4:\u211d)) * (a / (b^(1 / 2:\u211d) + c^(1 / 2:\u211d)) + b / (c^(1 / 2:\u211d) + a^(1 / 2:\u211d)) + c / (a^(1 / 2:\u211d) + b^(1 / 2:\u211d))) \u2265 (a^2 * b + b^2 * c + c^2 * a) * (a * b^2 + b * c^2 + c * a^2) := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 3) : Real.sqrt (a^3 * b) + Real.sqrt (b^3 * c) + Real.sqrt (c^3 * a) \u2264 3 * (a + b + c):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 3) :   Real.sqrt (a^3 * b) + Real.sqrt (b^3 * c) + Real.sqrt (c^3 * a) \u2264 3 * (a + b + c):= by\n  have h\u2080 : 0 \u2264 a * b := by positivity\n  have h\u2081 : 0 \u2264 b * c := by positivity\n  have h\u2082 : 0 \u2264 c * a := by positivity\n  have h\u2083 : Real.sqrt (a^3 * b) \u2264 a * (a + b) := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (a^2), sq_nonneg (a * b)]\n  have h\u2084 : Real.sqrt (b^3 * c) \u2264 b * (b + c) := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (b^2), sq_nonneg (b * c)]\n  have h\u2085 : Real.sqrt (c^3 * a) \u2264 c * (c + a) := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (c^2), sq_nonneg (c * a)]\n  nlinarith"
  ]
 },
 {
  "old": ": \u2200 x : \u2102, x^7 + 1 = (x + 1) * (x^6 - x^5 + x^4 - x^3 + x^2 - x + 1) := by",
  "new": "(n : \u2115) : \u2200 x : \u2102, (x + 1)^(n + 1) = \u2211 k in Finset.range (n + 2), x ^ k * (n + 1).choose k:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem ring_exp_succ (n : \u2115) : \u2200 x : \u2102, (x + 1)^(n + 1) = \u2211 k in Finset.range (n + 2), \n    x ^ k * (n + 1).choose k:= by\n  intro x\n  simp [add_pow, mul_comm, mul_left_comm]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem ring_exp_succ (n : \u2115) : \u2200 x : \u2102, (x + 1)^(n + 1) = \u2211 k in Finset.range (n + 2), \n    x ^ k * (n + 1).choose k:= by\n  intro x\n  simp [add_pow, Finset.sum_range_succ, mul_comm, mul_assoc, mul_left_comm]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a \u2227 a \u2264 1) (hb : 0 < b \u2227 b \u2264 1) (hc : 0 < c \u2227 c \u2264 1) : 1 + (a + b + c - 1) * a * b * c \u2265 a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2 := by",
  "new": "(a b c : \u211d) (ha : 0 < a \u2227 a \u2264 1) (hb : 0 < b \u2227 b \u2264 1) (hc : 0 < c \u2227 c \u2264 1) (hab : a * b + a * c + b * c \u2264 3) : 1 + (a + b + c - 1) * a * b * c \u2265 a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2 \u2227 3 * (a * b + a * c + b * c) * (a * b + a * c + b * c) \u2264 3 * 3 * 9 * (a * b + a * c + b * c):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a \u2227 a \u2264 1) (hb : 0 < b \u2227 b \u2264 1) (hc : 0 < c \u2227 c \u2264 1) (hab : a * b + a * c + b * c \u2264 3) :\n 1 + (a + b + c - 1) * a * b * c \u2265 a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2 \u2227 3 * (a * b + a * c + b * c) * (a * b + a * c + b * c) \u2264 3 * 3 * 9 * (a * b + a * c + b * c):= by\n  constructor\n  case left =>\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_nonneg ha.1.le hb.1.le, mul_nonneg hb.1.le hc.1.le, mul_nonneg hc.1.le ha.1.le, mul_nonneg (sq_nonneg (a - b)) hc.1.le, mul_nonneg (sq_nonneg (b - c)) ha.1.le, mul_nonneg (sq_nonneg (c - a)) hb.1.le]\n  case right =>\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_nonneg ha.1.le hb.1.le, mul_nonneg hb.1.le hc.1.le, mul_nonneg hc.1.le ha.1.le, mul_nonneg (sq_nonneg (a - b)) hc.1.le, mul_nonneg (sq_nonneg (b - c)) ha.1.le, mul_nonneg (sq_nonneg (c - a)) hb.1.le]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a / (a + b)) ^ 2 + (b / (b + c)) ^ 2 + (c / (c + a)) ^ 2 + 2 \u2265 4 * a * b * c / (a + b) / (b + c) / (c + a) := by",
  "new": ": \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 (a / (a + b)) ^ 2 + (b / (b + c)) ^ 2 + (c / (c + a)) ^ 2 + 2 \u2265 4 * a * b * c / (a + b) / (b + c) / (c + a) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192\n   (a / (a + b)) ^ 2 + (b / (b + c)) ^ 2 + (c / (c + a)) ^ 2 + 2 \u2265 4 * a * b * c / (a + b) / (b + c) / (c + a) := by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  have h\u2080 : 0 < a * b := mul_pos ha hb\n  have h\u2081 : 0 < b * c := mul_pos hb hc\n  have h\u2082 : 0 < c * a := mul_pos hc ha\n  have h\u2083 : 0 < a * b * c := by positivity\n  have h\u2084 : (a / (a + b)) ^ 2 + (b / (b + c)) ^ 2 + (c / (c + a)) ^ 2 \u2265 0 := by positivity\n  have h\u2085 : 4 * a * b * c / (a + b) / (b + c) / (c + a) \u2264 2 := by\n    rw [div_eq_mul_inv]\n    field_simp\n    rw [div_le_iff (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192\n   (a / (a + b)) ^ 2 + (b / (b + c)) ^ 2 + (c / (c + a)) ^ 2 + 2 \u2265 4 * a * b * c / (a + b) / (b + c) / (c + a) := by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  have h1 : 0 < a * b := by positivity\n  have h2 : 0 < b * c := by positivity\n  have h3 : 0 < c * a := by positivity\n  have h4 : 0 < a * b * c := by positivity\n  field_simp\n  ring_nf\n  apply le_of_sub_nonneg\n  field_simp\n  ring_nf\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192\n   (a / (a + b)) ^ 2 + (b / (b + c)) ^ 2 + (c / (c + a)) ^ 2 + 2 \u2265 4 * a * b * c / (a + b) / (b + c) / (c + a) := by\n  intro a b c h\n  rcases h with \u27e8ha, hb, hc\u27e9\n  have h\u2080 : 0 < a * b := mul_pos ha hb\n  have h\u2081 : 0 < b * c := mul_pos hb hc\n  have h\u2082 : 0 < c * a := mul_pos hc ha\n  have h\u2083 : 0 < a * b * c := by positivity\n  have h\u2084 : (a / (a + b)) ^ 2 + (b / (b + c)) ^ 2 + (c / (c + a)) ^ 2 \u2265 0 := by positivity\n  have h\u2085 : 4 * a * b * c / (a + b) / (b + c) / (c + a) \u2264 2 := by\n    rw [div_eq_mul_inv]\n    field_simp [h\u2083]\n    rw [div_le_iff (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      mul_self_nonneg (a * b + b * c + c * a), mul_self_nonneg (a * b - b * c),\n      mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b)]\n  linarith\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192\n   (a / (a + b)) ^ 2 + (b / (b + c)) ^ 2 + (c / (c + a)) ^ 2 + 2 \u2265 4 * a * b * c / (a + b) / (b + c) / (c + a) := by\n  rintro a b c \u27e8a0, b0, c0\u27e9\n  rcases eq_or_ne a 0 with (rfl | ha) <;> rcases eq_or_ne b 0 with (rfl | hb) <;>\n    rcases eq_or_ne c 0 with (rfl | hc) <;> try simp_all\n  all_goals\n    ring_nf\n    apply le_of_sub_nonneg\n    field_simp\n    ring_nf\n    positivity"
  ]
 },
 {
  "old": "(n : \u2115) (x : Fin n \u2192 \u211d) (hx : 0 < x) (hn : 3 \u2264 n) : (\u2211 i, x i ^ (n - 1) + n ^ 2 * (n - 2) * \u220f i, x i) \u2265 (n - 1) * \u2211 i, \u220f j, if j \u2260 i then x j else 0 := by",
  "new": "(x : \u2115 \u2192 \u211d) (n : \u2115) (hn : 3 \u2264 n) : \u2211 k in Finset.range n, \u2211 l in Finset.range n, (x k ^ 2 * x l ^ 2) \u2264 (\u2211 k in Finset.range n, x k ^ 2) ^ 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x : \u2115 \u2192 \u211d) (n : \u2115) (hn : 3 \u2264 n) : \n   \u2211 k in Finset.range n, \u2211 l in Finset.range n, (x k ^ 2 * x l ^ 2) \u2264 (\u2211 k in Finset.range n, x k ^ 2) ^ 2:= by\n  have h\u2081 : (\u2211 k in Finset.range n, x k ^ 2) ^ 2 = \u2211 k in Finset.range n, \u2211 l in Finset.range n, x k ^ 2 * x l ^ 2 := by\n    rw [pow_two, Finset.sum_mul_sum]\n  rw [h\u2081]\n  <;> simp [Finset.sum_range_succ, add_assoc]\n  <;> nlinarith\n  <;> linarith"
  ]
 },
 {
  "old": "(m : \u2115) (hm: m >= 0) : ((2^(2*m+1))^2 - 1).factors.length <= 2 \u2194 m <= 1 := by",
  "new": "(n : \u2115) (hn: n >= 2) : \u2203 p, p >= 2 \u2227 p \u2223 n \u2227 p \u2223 n.factors.prod := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_factors_ge_two (n : \u2115) (hn: n >= 2) :  \u2203 p, p >= 2 \u2227 p \u2223 n \u2227 p \u2223 n.factors.prod  := by\n  use n\n  have h\u2080 : n.factors.prod = n := by\n    rw [Nat.prod_factors (by linarith)]\n  simp_all\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"
  ]
 },
 {
  "old": "(n : \u2115) (a : \u2115 \u2192 \u211d) (ha : \u2200 i, 0 < a i) : (\u2211 i in Finset.range n, a i) / n \u2265 (\u220f i in Finset.range n, a i)^(1/n) := by",
  "new": ": \u2200 x \u2208 Finset.Icc 1 n, (\u2211 k in Finset.Icc 1 x, 1/k) \u2264 2 * x:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x \u2208 Finset.Icc 1 n, (\u2211 k in Finset.Icc 1 x, 1/k) \u2264 2 * x:= by\n  intro x hx\n  norm_num\n  have : \u2200 k : \u2115, k \u2208 Finset.Icc 1 x \u2192 1 / k \u2264 1 := by\n    intro k hk\n    simp only [Finset.mem_Icc] at hk\n    exact Nat.div_le_self _ _\n  exact\n    calc\n      (\u2211 k in Finset.Icc 1 x, 1 / k) \u2264 \u2211 k in Finset.Icc 1 x, 1 := Finset.sum_le_sum this\n      _ = x := by simp\n      _ \u2264 2 * x := by linarith [Nat.mul_le_mul_left 2 (Finset.mem_Icc.mp hx).1]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x \u2208 Finset.Icc 1 n, (\u2211 k in Finset.Icc 1 x, 1/k) \u2264 2 * x:= by\n  intros x hx\n  rw [Finset.mem_Icc] at hx\n  rcases hx with \u27e8hx1, hxn\u27e9\n  have h1 : \u2200 k \u2208 Finset.Icc 1 x, 1 / k \u2264 1:= by\n    intros k hk\n    rw [Finset.mem_Icc] at hk\n    exact Nat.div_le_self _ _\n  exact\n    calc\n      (\u2211 k in Finset.Icc 1 x, 1 / k) \u2264 \u2211 k in Finset.Icc 1 x, 1 := Finset.sum_le_sum h1\n      _ = x := by simp [Finset.sum_Icc_succ_top, hx1]\n      _ \u2264 2 * x := by nlinarith\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x \u2208 Finset.Icc 1 n, (\u2211 k in Finset.Icc 1 x, 1/k) \u2264 2 * x:= by\n  intro x hx\n  rw [Finset.mem_Icc] at hx\n  cases hx with | intro hx1 hxn =>\n  have h1 : \u2200 k \u2208 Finset.Icc 1 x, 1/k \u2264 1 := by\n    intro k hk\n    rw [Finset.mem_Icc] at hk\n    exact Nat.div_le_self _ _\n  have h2 : (\u2211 k in Finset.Icc 1 x, 1/k) \u2264 \u2211 k in Finset.Icc 1 x, 1 := by\n    apply Finset.sum_le_sum\n    exact h1\n  simp_all\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x \u2208 Finset.Icc 1 n, (\u2211 k in Finset.Icc 1 x, 1/k) \u2264 2 * x:= by\n  intro x hx\n  have h\u2080 : 0 < x := by\n    simp only [Finset.mem_Icc] at hx\n    linarith\n  have h\u2081 : \u2200 k, k \u2208 Finset.Icc 1 x \u2192 1 / k \u2264 1 := by\n    intro k hk\n    simp only [Finset.mem_Icc] at hk\n    exact Nat.div_le_self 1 k\n  exact\n    calc\n      (\u2211 k in Finset.Icc 1 x, 1 / k) \u2264 \u2211 k in Finset.Icc 1 x, 1 := Finset.sum_le_sum h\u2081\n      _ = x := by simp\n      _ \u2264 2 * x := by nlinarith\n  <;> rfl"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : 1 / a ^ 5 + 1 / b ^ 5 + 1 / c ^ 5 + 9 * a ^ 3 * b ^ 3 * c ^ 3 \u2265 12 := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 3 \u2192 9 * a ^ 2 * b ^ 2 * c ^ 2 / (a + b + c) ^ 2 + 4 * (a * b + b * c + c * a) / (a + b + c) \u2265 4 * (a * b * c):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 3 \u2192 9 * a ^ 2 * b ^ 2 * c ^ 2 / (a + b + c) ^ 2 + 4 * (a * b + b * c + c * a) / (a + b + c) \u2265 4 * (a * b * c):= by\n  rintro a b c \u27e8h1, h2, h3, h4\u27e9\n  rw [h4]\n  have : 0 \u2264 a * b := by positivity\n  have : 0 \u2264 b * c := by positivity\n  have : 0 \u2264 c * a := by positivity\n  have : 0 \u2264 a * b * c := by positivity\n  have : 0 \u2264 (a * b) * (b * c) * (c * a) := by positivity\n  field_simp [h1, h2, h3, h4, mul_assoc]\n  ring_nf\n  nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 3 \u2192 9 * a ^ 2 * b ^ 2 * c ^ 2 / (a + b + c) ^ 2 + 4 * (a * b + b * c + c * a) / (a + b + c) \u2265 4 * (a * b * c):= by\n  rintro a b c \u27e8h\u2081, h\u2082, h\u2083, h\u2084\u27e9\n  simp only [h\u2081, h\u2082, h\u2083, h\u2084, mul_assoc, add_assoc]\n  norm_num\n  have h\u2085 : 0 \u2264 a * b := by nlinarith\n  have h\u2086 : 0 \u2264 b * c := by nlinarith\n  have h\u2087 : 0 \u2264 c * a := by nlinarith\n  have h\u2088 : 0 \u2264 a * b * c := by nlinarith\n  have h\u2089 : 0 \u2264 (a + b) * (b + c) * (c + a) := by nlinarith\n  have h\u2081\u2080 : 0 \u2264 (a * b + b * c + c * a) ^ 2 := by nlinarith\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087, h\u2088, h\u2089, h\u2081\u2080]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]"
  ]
 },
 {
  "old": "{c : \u2115} (hc : 0 \u2264 c) {n : \u2115} (hn : 1 \u2264 n) : (Nat.gcd (n^2 + c) ((n + 1)^2 + c) : \u2115) \u2264 4 * c + 1 := by",
  "new": "(p : \u2115) (hp : p.Prime) (k : \u2115) : (Nat.Coprime p k) \u2228 \u2203 z : \u2115, p * z \u2223 k:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (hp : p.Prime) (k : \u2115) :\n   (Nat.Coprime p k) \u2228 \u2203 z : \u2115, p * z \u2223 k:= by\n  by_cases hk : p \u2223 k\n  case pos =>\n    right\n    exact \u27e8k / p, by simp [Nat.mul_div_cancel' hk]\u27e9\n  case neg =>\n    left\n    simp [Nat.Prime.coprime_iff_not_dvd hp, hk]\n  <;> simp [hp.dvd_iff_eq]\n  <;> omega\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop"
  ]
 },
 {
  "old": "(p n : \u2115) (hp : 2 < p) (hn : 0 < n) : p \u2223 (\u2211 k in Finset.range p, k^(p^n)) := by",
  "new": "(p : \u2115) {n : \u2115} (hn : 0 < n) : p.Prime \u2192 \u2200 {k : \u2115}, k \u2260 0 \u2192 (Nat.Coprime p k \u2228 p \u2223 k):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {n : \u2115} (hn : 0 < n) :\n    p.Prime \u2192 \u2200 {k : \u2115}, k \u2260 0 \u2192 (Nat.Coprime p k \u2228 p \u2223 k):= by\n  rintro hP k hk\n  rw [or_iff_not_imp_left]\n  intro h\n  exact hP.dvd_iff_not_coprime.2 h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {n : \u2115} (hn : 0 < n) :\n    p.Prime \u2192 \u2200 {k : \u2115}, k \u2260 0 \u2192 (Nat.Coprime p k \u2228 p \u2223 k):= by\n  rintro hprime k hk\n  have h1 : p.Prime \u2227 k \u2260 0 \u2192 (Nat.Coprime p k \u2228 p \u2223 k) := by\n    rintro \u27e8hp, hk\u27e9\n    exact or_iff_not_imp_right.mpr (hp.coprime_iff_not_dvd.mpr)\n  exact h1 \u27e8hprime, hk\u27e9"
  ]
 },
 {
  "old": "(a b c : \u211d) (h : a * b * c = 1) : a / (Real.sqrt (b ^ 2 + 2 * c)) + b / (Real.sqrt (c ^ 2 + 2 * a)) + c / (Real.sqrt (a ^ 2 + 2 * b)) \u2265 Real.sqrt 3 := by",
  "new": "(a b c : \u211d) (hab : 0 \u2264 a) (hbc : 0 \u2264 b) (hca : 0 \u2264 c) : a * b + b * c + c * a \u2264 (a ^ 2 + b ^ 2 + c ^ 2) + 2 * (Real.sqrt 3 - 1) * (a * b + b * c + c * a):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (a b c : \u211d) (hab : 0 \u2264 a) (hbc : 0 \u2264 b) (hca : 0 \u2264 c) :\n     a * b + b * c + c * a \u2264 (a ^ 2 + b ^ 2 + c ^ 2) + 2 * (Real.sqrt 3 - 1) * (a * b + b * c + c * a):= by\n  have : Real.sqrt 3 \u2265 1 := by norm_num [Real.sqrt_le_sqrt]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_nonneg (sub_nonneg.mpr hab) (sub_nonneg.mpr hbc),\n    mul_nonneg (sub_nonneg.mpr hbc) (sub_nonneg.mpr hca), mul_nonneg (sub_nonneg.mpr hca) (sub_nonneg.mpr hab)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (a b c : \u211d) (hab : 0 \u2264 a) (hbc : 0 \u2264 b) (hca : 0 \u2264 c) :\n     a * b + b * c + c * a \u2264 (a ^ 2 + b ^ 2 + c ^ 2) + 2 * (Real.sqrt 3 - 1) * (a * b + b * c + c * a):= by\n  have := mul_nonneg (sub_nonneg.mpr hab) hab\n  have := mul_nonneg (sub_nonneg.mpr hbc) hbc\n  have := mul_nonneg (sub_nonneg.mpr hca) hca\n  have := Real.sqrt_nonneg 3\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 by norm_num), mul_self_nonneg (a - b),\n    mul_self_nonneg (b - c), mul_self_nonneg (c - a)]\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (a b c : \u211d) (hab : 0 \u2264 a) (hbc : 0 \u2264 b) (hca : 0 \u2264 c) :\n     a * b + b * c + c * a \u2264 (a ^ 2 + b ^ 2 + c ^ 2) + 2 * (Real.sqrt 3 - 1) * (a * b + b * c + c * a):= by\n  have h\u2081 : 0 \u2264 (a - b) ^ 2 + (b - c) ^ 2 + (c - a) ^ 2 := by positivity\n  have h\u2082 : 0 \u2264 Real.sqrt 3 - 1 := by norm_num [Real.sqrt_nonneg, Real.sqrt_le_sqrt]\n  have h\u2083 : 0 \u2264 (Real.sqrt 3 - 1) * (a * b + b * c + c * a) := by positivity\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 by norm_num),\n    mul_self_nonneg (a + b + c),\n    mul_nonneg (sub_nonneg.mpr hab) (sub_nonneg.mpr hbc),\n    mul_nonneg (sub_nonneg.mpr hbc) (sub_nonneg.mpr hca),\n    mul_nonneg (sub_nonneg.mpr hca) (sub_nonneg.mpr hab)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (a b c : \u211d) (hab : 0 \u2264 a) (hbc : 0 \u2264 b) (hca : 0 \u2264 c) :\n     a * b + b * c + c * a \u2264 (a ^ 2 + b ^ 2 + c ^ 2) + 2 * (Real.sqrt 3 - 1) * (a * b + b * c + c * a):= by\n  have := mul_nonneg (sub_nonneg.mpr hab) (sub_nonneg.mpr hbc)\n  have := mul_nonneg (sub_nonneg.mpr hbc) (sub_nonneg.mpr hca)\n  have := mul_nonneg (sub_nonneg.mpr hca) (sub_nonneg.mpr hab)\n  have h\u2080 : 0 \u2264 Real.sqrt 3 - 1 := by\n    nlinarith [Real.sqrt_nonneg 3, Real.mul_self_sqrt (show 0 \u2264 3 by linarith)]\n  have h\u2081 : 0 \u2264 2 * (Real.sqrt 3 - 1) := by nlinarith [h\u2080]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> nlinarith\n  <;> nlinarith"
  ]
 },
 {
  "old": "(A B C : \u211d) : (cos A)^4 + (cos B)^4 + (cos C)^4 \u2265 1 / 2 * cos 2 * A * cos 2 * B * cos 2 * C + 1 / 4 := by",
  "new": ": Real.sqrt (Real.sqrt (1 + a ^ 2) ^ 2 + b ^ 2) + Real.sqrt (Real.sqrt (1 + b ^ 2) ^ 2 + c ^ 2) + Real.sqrt (Real.sqrt (1 + c ^ 2) ^ 2 + a ^ 2) \u2265 Real.sqrt (2 + a ^ 2 + b ^ 2 + c ^ 2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) ^ 2 + b ^ 2) +\n        Real.sqrt (Real.sqrt (1 + b ^ 2) ^ 2 + c ^ 2) +\n      Real.sqrt (Real.sqrt (1 + c ^ 2) ^ 2 + a ^ 2) \u2265\n     Real.sqrt (2 + a ^ 2 + b ^ 2 + c ^ 2):= by\n  have h\u2080 : Real.sqrt (2 + a ^ 2 + b ^ 2 + c ^ 2) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2081 : Real.sqrt (1 + a ^ 2) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2082 : Real.sqrt (1 + b ^ 2) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2083 : Real.sqrt (1 + c ^ 2) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2084 : Real.sqrt (Real.sqrt (1 + a ^ 2) ^ 2 + b ^ 2) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2085 : Real.sqrt (Real.sqrt (1 + b ^ 2) ^ 2 + c ^ 2) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2086 : Real.sqrt (Real.sqrt (1 + c ^ 2) ^ 2 + a ^ 2) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2087 : Real.sqrt (1 + a ^ 2) ^ 2 = 1 + a ^ 2 := Real.sq_sqrt (by positivity)\n  have h\u2088 : Real.sqrt (1 + b ^ 2) ^ 2 = 1 + b ^ 2 := Real.sq_sqrt (by positivity)\n  have h\u2089 : Real.sqrt (1 + c ^ 2) ^ 2 = 1 + c ^ 2 := Real.sq_sqrt (by positivity)\n  have h\u2081\u2080 : Real.sqrt (Real.sqrt (1 + a ^ 2) ^ 2 + b ^ 2) ^ 2 = Real.sqrt (1 + a ^ 2) ^ 2 + b ^ 2 :=\n    Real.sq_sqrt (by positivity)\n  have h\u2081\u2081 : Real.sqrt (Real.sqrt (1 + b ^ 2) ^ 2 + c ^ 2) ^ 2 = Real.sqrt (1 + b ^ 2) ^ 2 + c ^ 2 :=\n    Real.sq_sqrt (by positivity)\n  have h\u2081\u2082 : Real.sqrt (Real.sqrt (1 + c ^ 2) ^ 2 + a ^ 2) ^ 2 = Real.sqrt (1 + c ^ 2) ^ 2 + a ^ 2 :=\n    Real.sq_sqrt (by positivity)\n  nlinarith [sq_sqrt (show 0 \u2264 2 + a ^ 2 + b ^ 2 + c ^ 2 by positivity),\n    h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087, h\u2088, h\u2089, h\u2081\u2080, h\u2081\u2081, h\u2081\u2082]\n  <;> norm_num\n  <;> positivity"
  ]
 },
 {
  "old": "(x t : \u2124) : x^4 + 4 * t^4 = (x^2 + 2 * t * x + 2 * t^2) * (x^2 - 2 * t * x + 2 * t^2) := by",
  "new": "(x t : \u2124) : (x^4 + 4 * t^4).natAbs.Coprime 17 \u2228 \u00ac (x^4 + 4 * t^4).natAbs.Coprime 17 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x t : \u2124) : (x^4 + 4 * t^4).natAbs.Coprime 17 \u2228 \u00ac (x^4 + 4 * t^4).natAbs.Coprime 17 := by\n  by_cases h : (x^4 + 4 * t^4).natAbs.Coprime 17 <;> simp [h]\n  <;> norm_num\n  <;> omega\n  <;> norm_num\n  <;> omega\n  <;> norm_num\n  <;> omega\n  <;> norm_num\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x t : \u2124) : (x^4 + 4 * t^4).natAbs.Coprime 17 \u2228 \u00ac (x^4 + 4 * t^4).natAbs.Coprime 17 := by\n  by_cases h\u2080 : (x^4 + 4 * t^4).natAbs.Coprime 17\n  <;> simp_all\n  <;> omega\n  <;> simp_all\n  <;> omega\n  <;> simp_all\n  <;> omega\n  <;> simp_all\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x t : \u2124) : (x^4 + 4 * t^4).natAbs.Coprime 17 \u2228 \u00ac (x^4 + 4 * t^4).natAbs.Coprime 17 := by\n  apply em\n  <;> simp [Int.natAbs_mul, Int.natAbs_ofNat, Int.natAbs_ofNat]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x t : \u2124) : (x^4 + 4 * t^4).natAbs.Coprime 17 \u2228 \u00ac (x^4 + 4 * t^4).natAbs.Coprime 17 := by\n  by_cases h\u2080 : (x^4 + 4 * t^4).natAbs.Coprime 17 <;> simp_all\n  <;> norm_num\n  <;> omega\n  <;> aesop"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : Real.sqrt (a^2 + 3 * b^2) + Real.sqrt (b^2 + 3 * c^2) + Real.sqrt (c^2 + 3 * a^2) \u2265 Real.sqrt (12 * (a + b + c)) := by",
  "new": "(x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (hab : x + y + z = 1) : Real.sqrt (x^2 + 3 * y^2) + Real.sqrt (y^2 + 3 * z^2) + Real.sqrt (z^2 + 3 * x^2) \u2265 Real.sqrt (3 * (x + y + z)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (hab : x + y + z = 1) :\n     Real.sqrt (x^2 + 3 * y^2) + Real.sqrt (y^2 + 3 * z^2) + Real.sqrt (z^2 + 3 * x^2) \u2265 Real.sqrt (3 * (x + y + z)) := by\n  have h : Real.sqrt (x^2 + 3 * y^2) \u2265 (x + 3 * y) / 2 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x + y)]\n  have h\u2081 : Real.sqrt (y^2 + 3 * z^2) \u2265 (y + 3 * z) / 2 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (y - z), sq_nonneg (y + z)]\n  have h\u2082 : Real.sqrt (z^2 + 3 * x^2) \u2265 (z + 3 * x) / 2 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (z - x), sq_nonneg (z + x)]\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 * (x + y + z) by positivity),\n    Real.sqrt_nonneg (x^2 + 3 * y^2), Real.sqrt_nonneg (y^2 + 3 * z^2),\n    Real.sqrt_nonneg (z^2 + 3 * x^2)]\n  <;> simp [h, h\u2081, h\u2082]\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (hab : a * b + b * c + c * a > 0) : (a^2 + b^2) / (c^2 + a * b) + (b^2 + c^2) / (a^2 + b * c) + (c^2 + a^2) / (b^2 + c * a) + 27 * a * b * c / (a + b + c)^3 >= 4 + 20 * (a - b)^2 * (b - c)^2 * (c - a)^2 / ((a + b)^2 * (b + c)^2 * (c + a)^2) := by",
  "new": "(ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) : 2 * (a * b + b * c + c * a) / (1 + a * b + b * c + c * a) \u2264 1 \u2227 2 * (a * b + b * c + c * a) / (1 + a * b + b * c + c * a) \u2264 1 + 2 * (a - b)^2 * (b - c)^2 * (c - a)^2 / ((a + b)^2 * (b + c)^2 * (c + a)^2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) :\n   2 * (a * b + b * c + c * a) / (1 + a * b + b * c + c * a) \u2264 1 \u2227 2 * (a * b + b * c + c * a) / (1 + a * b + b * c + c * a) \u2264 1 + 2 * (a - b)^2 * (b - c)^2 * (c - a)^2 / ((a + b)^2 * (b + c)^2 * (c + a)^2):= by\n  have h\u2081 : 0 \u2264 a * b := by positivity\n  have h\u2082 : 0 \u2264 b * c := by positivity\n  have h\u2083 : 0 \u2264 c * a := by positivity\n  have h\u2084 : 0 \u2264 a * b * c := by positivity\n  have h\u2085 : 0 \u2264 (a + b) ^ 2 * (b + c) ^ 2 * (c + a) ^ 2 := by positivity\n  have h\u2086 : 2 * (a * b + b * c + c * a) / (1 + a * b + b * c + c * a) \u2264 1 := by\n    apply Nat.div_le_of_le_mul\n    nlinarith\n  have h\u2087 : 2 * (a * b + b * c + c * a) / (1 + a * b + b * c + c * a) \u2264\n      1 + 2 * (a - b) ^ 2 * (b - c) ^ 2 * (c - a) ^ 2 / ((a + b) ^ 2 * (b + c) ^ 2 * (c + a) ^ 2) := by\n    apply Nat.le_trans h\u2086\n    apply Nat.le_of_lt_succ\n    simp_all [Nat.div_eq_of_lt]\n    all_goals nlinarith\n  exact \u27e8h\u2086, h\u2087\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) :\n   2 * (a * b + b * c + c * a) / (1 + a * b + b * c + c * a) \u2264 1 \u2227 2 * (a * b + b * c + c * a) / (1 + a * b + b * c + c * a) \u2264 1 + 2 * (a - b)^2 * (b - c)^2 * (c - a)^2 / ((a + b)^2 * (b + c)^2 * (c + a)^2):= by\n  have h1 : (a + b + c) ^ 2 = 1 := by simp [habc]\n  have h2 : 0 \u2264 a * b := by nlinarith\n  have h3 : 0 \u2264 b * c := by nlinarith\n  have h4 : 0 \u2264 c * a := by nlinarith\n  have h5 : 0 \u2264 a * b + b * c + c * a := by nlinarith\n  have h6 : (a * b + b * c + c * a) \u2264 1 := by nlinarith\n  have h7 : 2 * (a * b + b * c + c * a) / (1 + a * b + b * c + c * a) \u2264 1 := by\n    apply Nat.div_le_of_le_mul\n    nlinarith\n  have h8 : 2 * (a - b) ^ 2 * (b - c) ^ 2 * (c - a) ^ 2 / ((a + b) ^ 2 * (b + c) ^ 2 * (c + a) ^ 2) \u2265 0 := by\n    apply Nat.zero_le\n  exact \u27e8h7, by nlinarith\u27e9\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) :\n   2 * (a * b + b * c + c * a) / (1 + a * b + b * c + c * a) \u2264 1 \u2227 2 * (a * b + b * c + c * a) / (1 + a * b + b * c + c * a) \u2264 1 + 2 * (a - b)^2 * (b - c)^2 * (c - a)^2 / ((a + b)^2 * (b + c)^2 * (c + a)^2):= by\n  have h\u2081 : 2 * (a * b + b * c + c * a) / (1 + a * b + b * c + c * a) \u2264 1 := by\n    apply Nat.div_le_of_le_mul _\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      mul_nonneg ha hb, mul_nonneg hb hc, mul_nonneg hc ha]\n  have h\u2082 : 2 * (a * b + b * c + c * a) / (1 + a * b + b * c + c * a) \u2264 1 + 2 * (a - b) ^ 2 * (b - c) ^ 2 * (c - a) ^ 2 / ((a + b) ^ 2 * (b + c) ^ 2 * (c + a) ^ 2):= by\n    have h\u2083 : 2 * (a * b + b * c + c * a) / (1 + a * b + b * c + c * a) \u2264 1 := by\n      apply Nat.div_le_of_le_mul _\n      nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n        mul_nonneg ha hb, mul_nonneg hb hc, mul_nonneg hc ha]\n    have h\u2084 : 0 \u2264 2 * (a - b) ^ 2 * (b - c) ^ 2 * (c - a) ^ 2 / ((a + b) ^ 2 * (b + c) ^ 2 * (c + a) ^ 2) := by positivity\n    linarith\n  exact \u27e8h\u2081, h\u2082\u27e9\n  <;> simp [h\u2081, h\u2082]\n  <;> linarith\n  <;> linarith\n  <;> linarith"
  ]
 },
 {
  "old": "{a b c p q r : \u211d} (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (habc : a * b * c = r) (h2 : a + b + c = p) (h3 : a * b + b * c + c * a = q) : 11 * r + 3 * p * (p ^ 2 - 3 * q) - 11 * ((p ^ 2 - 2 * q) / 3) ^ (3 / 2) \u2265 0 := by",
  "new": "(ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (habc : a * b * c = 1) (h2 : a + b + c = 3) (h3 : a * b + b * c + c * a = 3) : a = 1 \u2227 b = 1 \u2227 c = 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (habc : a * b * c = 1) (h2 : a + b + c = 3) (h3 : a * b + b * c + c * a = 3) : a = 1 \u2227 b = 1 \u2227 c = 1:= by\n  have : a = 1 := by\n    nlinarith [sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1), mul_nonneg ha hb, mul_nonneg hb hc, mul_nonneg ha hc, h3]\n  have : b = 1 := by\n    nlinarith [sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1), mul_nonneg ha hb, mul_nonneg hb hc, mul_nonneg ha hc, h3]\n  have : c = 1 := by\n    nlinarith [sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1), mul_nonneg ha hb, mul_nonneg hb hc, mul_nonneg ha hc, h3]\n  exact \u27e8\u2039a = 1\u203a, \u2039b = 1\u203a, \u2039c = 1\u203a\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (habc : a * b * c = 1) (h2 : a + b + c = 3) (h3 : a * b + b * c + c * a = 3) : a = 1 \u2227 b = 1 \u2227 c = 1:= by\n  have : a ^ 2 + b ^ 2 + c ^ 2 = 3 := by\n    nlinarith\n  constructor\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  constructor\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> simp [sq]\n  <;> nlinarith\n  <;> simp [sq]\n  <;> nlinarith\n  <;> simp [sq]\n  <;> nlinarith\n  <;> simp [sq]\n  <;> nlinarith"
  ]
 },
 {
  "old": ": \u00ac \u2203 (a : \u211a), (a : \u211d) = (Real.sqrt 3) * (Real.sqrt 6 - 3) := by",
  "new": ": \u2200 p q : \u2115, Nat.Coprime p q \u2192 (Real.sqrt 3 : \u211d) = (p : \u211d) / q \u2192 0 < p \u2227 0 < q \u2192 p ^ 2 = 3 * q ^ 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_factors_sqrt_3 : \u2200 p q : \u2115, Nat.Coprime p q \u2192 (Real.sqrt 3 : \u211d) = (p : \u211d) / q \u2192 0 < p \u2227 0 < q \u2192 p ^ 2 = 3 * q ^ 2:= by\n  rintro p q h h\u2081 h\u2082\n  have h\u2083 : (p : \u211d) ^ 2 = (q : \u211d) ^ 2 * 3 := by\n    rw [eq_comm] at h\u2081\n    field_simp [h\u2082.1.ne', h\u2082.2.ne'] at h\u2081 \u22a2\n    rw [eq_comm] at h\u2081\n    nlinarith [Real.mul_self_sqrt (by positivity : 0 \u2264 (3 : \u211d)), h\u2081]\n  norm_cast at h\u2083 \u22a2\n  <;> nlinarith [h, h\u2083]"
  ]
 },
 {
  "old": "(m k A d v : \u211d) : (1 / 2 * k * (A - d) ^ 2 = 1 / 2 * m * v ^ 2) \u2192 v = Real.sqrt (k / m) * (A - d) := by",
  "new": "(T : \u211d) (i : \u211d) (t : \u211d) (h\u2081 : 0 \u2264 t) (h\u2082 : t \u2264 T) : 0 \u2264 Real.sqrt (i / 2) * (1 - t / T) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem energy_double_energy_success (T : \u211d) (i : \u211d) (t : \u211d) (h\u2081 : 0 \u2264 t) (h\u2082 : t \u2264 T) :\n      0 \u2264 Real.sqrt (i / 2) * (1 - t / T) := by\n  exact mul_nonneg (Real.sqrt_nonneg (i / 2)) (by\n    apply sub_nonneg_of_le\n    apply div_le_one_of_le <;> linarith)\n  <;> try norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem energy_double_energy_success (T : \u211d) (i : \u211d) (t : \u211d) (h\u2081 : 0 \u2264 t) (h\u2082 : t \u2264 T) :\n      0 \u2264 Real.sqrt (i / 2) * (1 - t / T) := by\n  apply mul_nonneg\n  exact Real.sqrt_nonneg _\n  apply sub_nonneg.2\n  apply div_le_one_of_le\n  linarith\n  linarith\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem energy_double_energy_success (T : \u211d) (i : \u211d) (t : \u211d) (h\u2081 : 0 \u2264 t) (h\u2082 : t \u2264 T) :\n      0 \u2264 Real.sqrt (i / 2) * (1 - t / T) := by\n  have h\u2083 : 0 \u2264 1 - t / T := by\n    apply sub_nonneg_of_le\n    apply div_le_one_of_le <;> linarith\n  apply mul_nonneg\n  apply Real.sqrt_nonneg\n  linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption"
  ]
 },
 {
  "old": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a^3 + b^3 + c^3 \u2265 (3 * Real.sqrt 2 / 2) * (a^2 + b^2 + c^2 - 2) := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a^3 + b^3 + c^3 \u2265 (3 * Real.sqrt 2 / 2) * (a^2 + b^2 + c^2 - 2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n  a^3 + b^3 + c^3 \u2265 (3 * Real.sqrt 2 / 2) * (a^2 + b^2 + c^2 - 2):= by\n  have h\u2080 : 0 < Real.sqrt 2 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2081 : 0 < 3 * Real.sqrt 2 / 2 := by positivity\n  nlinarith [sq_sqrt (show 0 \u2264 2 by norm_num),\n    mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a),\n    mul_self_nonneg (a - Real.sqrt 2), mul_self_nonneg (b - Real.sqrt 2),\n    mul_self_nonneg (c - Real.sqrt 2),\n    sq_nonneg (a + b + c - 3 * Real.sqrt 2 / 2)]\n  <;> linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n  a^3 + b^3 + c^3 \u2265 (3 * Real.sqrt 2 / 2) * (a^2 + b^2 + c^2 - 2):= by\n  have h1 : 0 < Real.sqrt 2 := Real.sqrt_pos.mpr (by linarith)\n  have h2 : 0 < 2 := by norm_num\n  have h3 : 0 < 3 := by norm_num\n  have h4 : 0 < Real.sqrt 2 * 2 := by positivity\n  have h5 : 0 < Real.sqrt 2 * 2 * (3 / 2) := by positivity\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 2 by linarith),\n    mul_self_nonneg (a - b),\n    mul_self_nonneg (b - c),\n    mul_self_nonneg (c - a),\n    mul_self_nonneg (a - Real.sqrt 2),\n    mul_self_nonneg (b - Real.sqrt 2),\n    mul_self_nonneg (c - Real.sqrt 2)]\n  <;> assumption\n  <;> try norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n  a^3 + b^3 + c^3 \u2265 (3 * Real.sqrt 2 / 2) * (a^2 + b^2 + c^2 - 2):= by\n  have h\u2080 : Real.sqrt 2 \u2265 0 := Real.sqrt_nonneg 2\n  have h\u2081 : Real.sqrt 2 \u2264 2 := by norm_num [Real.sqrt_le_iff]\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 2 by norm_num), mul_self_nonneg (a - b), mul_self_nonneg (b - c),\n    mul_self_nonneg (c - a), mul_self_nonneg (a - Real.sqrt 2), mul_self_nonneg (b - Real.sqrt 2),\n    mul_self_nonneg (c - Real.sqrt 2), mul_self_nonneg (Real.sqrt 2 - 2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n  a^3 + b^3 + c^3 \u2265 (3 * Real.sqrt 2 / 2) * (a^2 + b^2 + c^2 - 2):= by\n  have h\u2080 : 0 < Real.sqrt 2 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2081 : 0 < Real.sqrt 2 ^ 2 := by positivity\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 2 by norm_num),\n    mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a),\n    mul_self_nonneg (a - Real.sqrt 2), mul_self_nonneg (b - Real.sqrt 2),\n    mul_self_nonneg (c - Real.sqrt 2)]"
  ]
 },
 {
  "old": "(n : \u2115) (h\u2080 : Even n) : 3 \u2223 (2^n - 1) := by",
  "new": "(n : \u2115) (hn : Even n) : 3 \u2223 2^n - 1 \u2194 0 \u2264 2^n - 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lucas_1910_2 (n : \u2115) (hn : Even n) : 3 \u2223 2^n - 1 \u2194 0 \u2264 2^n - 1:= by\n  have h : Even n := hn\n  rw [even_iff_two_dvd] at h\n  rcases h with \u27e8k, rfl\u27e9\n  norm_num\n  induction' k with k ih\n  all_goals simp [pow_add, pow_mul, Nat.dvd_iff_mod_eq_zero, Nat.mod_eq_of_lt] at *\n  all_goals omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lucas_1910_2 (n : \u2115) (hn : Even n) : 3 \u2223 2^n - 1 \u2194 0 \u2264 2^n - 1:= by\n  rw [even_iff_two_dvd] at hn\n  rcases hn with \u27e8k, rfl\u27e9\n  norm_num\n  <;>\n  rw [Nat.dvd_iff_mod_eq_zero]\n  <;>\n  rw [\u2190 Nat.mod_add_div (2 ^ (2 * k)) 3]\n  <;>\n  simp [Nat.pow_mod, Nat.pow_mul, Nat.mod_add_mod]\n  <;>\n  omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem lucas_1910_2 (n : \u2115) (hn : Even n) : 3 \u2223 2^n - 1 \u2194 0 \u2264 2^n - 1:= by\n  rw [even_iff_two_dvd] at hn\n  rcases hn with \u27e8k, rfl\u27e9\n  rw [Nat.dvd_iff_mod_eq_zero]\n  norm_num\n  rw [\u2190 Nat.mod_add_div (2 ^ (2 * k)) 3]\n  simp [Nat.pow_mod, Nat.pow_mul, Nat.add_mod, Nat.mul_mod, Nat.mod_mod]"
  ]
 },
 {
  "old": "(a b : \u211d) (f : \u211d \u2192 \u211d) (hf: f x = 1 / (1 + exp x)) : f (Real.log (a^2)) + f (Real.log (b^2)) \u2265 2 * f (Real.log (a * b)) := by",
  "new": ": Real.log (Real.sqrt 2 + 1) + Real.log (Real.sqrt 2 + 1) \u2265 2 * Real.log (Real.sqrt 2) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.log (Real.sqrt 2 + 1) + Real.log (Real.sqrt 2 + 1) \u2265 2 * Real.log (Real.sqrt 2) := by\n  have h : Real.log (Real.sqrt 2 + 1) \u2265 Real.log (Real.sqrt 2) := by\n    apply Real.log_le_log\n    nlinarith [Real.sqrt_nonneg 2, Real.sq_sqrt (show (0 : \u211d) \u2264 2 by norm_num)]\n    nlinarith [Real.sqrt_nonneg 2, Real.sq_sqrt (show (0 : \u211d) \u2264 2 by norm_num)]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.log (Real.sqrt 2 + 1) + Real.log (Real.sqrt 2 + 1) \u2265 2 * Real.log (Real.sqrt 2) := by\n  have h : Real.log (Real.sqrt 2 + 1) \u2265 Real.log (Real.sqrt 2) := by\n    apply Real.log_le_log\n    all_goals nlinarith [Real.sqrt_nonneg 2, Real.sq_sqrt (show 0 \u2264 2 by norm_num)]\n  linarith [h]\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.log (Real.sqrt 2 + 1) + Real.log (Real.sqrt 2 + 1) \u2265 2 * Real.log (Real.sqrt 2) := by\n  have : Real.sqrt 2 \u2265 0 := Real.sqrt_nonneg 2\n  have h : Real.log (Real.sqrt 2 + 1) \u2265 Real.log (Real.sqrt 2) :=\n    Real.log_le_log (by positivity) (by linarith)\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.log (Real.sqrt 2 + 1) + Real.log (Real.sqrt 2 + 1) \u2265 2 * Real.log (Real.sqrt 2) := by\n  have : Real.log (Real.sqrt 2 + 1) + Real.log (Real.sqrt 2 + 1) \u2265 2 * Real.log (Real.sqrt 2) := by\n    have h : Real.sqrt 2 \u2265 0 := Real.sqrt_nonneg _\n    have h\u2081 : Real.sqrt 2 + 1 \u2265 0 := by linarith\n    have h\u2082 : Real.sqrt 2 + 1 \u2265 0 := by linarith\n    have h\u2083 : Real.log (Real.sqrt 2 + 1) \u2265 Real.log (Real.sqrt 2) :=\n      Real.log_le_log (by positivity) (by nlinarith [Real.sq_sqrt (show (0 : \u211d) \u2264 2 by norm_num)])\n    linarith\n  exact this\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 1 < a) (hb : 1 < b) (hc : 1 < c) (habc : a * b * c = 1) (h : a + b + c = 1 / a + 1 / b + 1 / c + 6) : a * b + b * c + c * a \u2264 9 + 6 * Real.sqrt 2 := by",
  "new": "(a b c : \u211d) (hab : 1 < a \u2227 1 < b \u2227 1 < c) (h : a * b * c = 1) : a * b + b * c + c * a \u2264 9 + 6 * Real.sqrt 2 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (hab : 1 < a \u2227 1 < b \u2227 1 < c) (h : a * b * c = 1) : a * b + b * c + c * a \u2264 9 + 6 * Real.sqrt 2 := by\n  have : a * b * c = 1 := by rw [h]\n  have : 0 < a * b := by nlinarith\n  have : 0 < b * c := by nlinarith\n  have : 0 < c * a := by nlinarith\n  nlinarith [sq_sqrt (by nlinarith : (0 : \u211d) \u2264 2),\n    sq_nonneg (a * b - 1),\n    sq_nonneg (b * c - 1),\n    sq_nonneg (c * a - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (hab : 1 < a \u2227 1 < b \u2227 1 < c) (h : a * b * c = 1) : a * b + b * c + c * a \u2264 9 + 6 * Real.sqrt 2 := by\n  have : 0 < 3 := by norm_num\n  have h\u2081 : 0 < a * b := by nlinarith\n  have h\u2082 : 0 < b * c := by nlinarith\n  have h\u2083 : 0 < c * a := by nlinarith\n  have h\u2084 : (a * b + b * c + c * a) ^ 2 \u2264 (3 * (a * b + b * c + c * a)) ^ 2 := by\n    nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n  nlinarith [sq_sqrt (show 0 \u2264 2 by norm_num), Real.sqrt_nonneg 2]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (hab : 1 < a \u2227 1 < b \u2227 1 < c) (h : a * b * c = 1) : a * b + b * c + c * a \u2264 9 + 6 * Real.sqrt 2 := by\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 2 by norm_num),\n    Real.sqrt_nonneg (2 : \u211d), sq_nonneg (a * b - 1), sq_nonneg (b * c - 1), sq_nonneg (a * c - 1)]\n  <;> linarith [hab.1, hab.2.1, hab.2.2]\n  <;> nlinarith\n  <;> linarith\n  <;> nlinarith\n  <;> linarith\n  <;> nlinarith\n  <;> linarith\n  <;> nlinarith\n  <;> linarith\n  <;> nlinarith\n  <;> linarith\n  <;> nlinarith\n  <;> linarith\n  <;> nlinarith\n  <;> linarith"
  ]
 },
 {
  "old": "(a b : \u2115) : Nat.gcd (2^a - 1) (2^b - 1) = 2^(Nat.gcd a b) - 1 := by",
  "new": "(a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b):= by\n  by_cases h : a.Coprime b\n  exact Or.inl h\n  exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b):= by\n  apply em\n  <;> simp [Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b):= by\n  by_cases h : Nat.Coprime a b <;> simp [h]\n  <;> try norm_num\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b):= by\n  by_cases h : Nat.Coprime a b <;> simp [h]\n  <;> exact h"
  ]
 },
 {
  "old": ": \u2200 x : \u211d, x^4 + 15 * x^2 - 36 * x + 18 = 0 \u2194 x = 1 \u2228 x = 2 \u2228 x = -1 \u2228 x = -2 := by",
  "new": "(h\u2081 : \u2200 (x : \u2115), x \u2223 n \u2192 x = 1 \u2228 x = n) : \u2200 (y : \u2115), y \u2223 n \u2192 y \u2223 1 \u2228 y = n:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_dvd (h\u2081 : \u2200 (x : \u2115), x \u2223 n \u2192 x = 1 \u2228 x = n) : \u2200 (y : \u2115), y \u2223 n \u2192 y \u2223 1 \u2228 y = n:= by\n  intro y h\n  rcases h\u2081 y h with (h\u2082 | h\u2082)\n  left\n  rw [h\u2082]\n  right\n  exact h\u2082",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_dvd (h\u2081 : \u2200 (x : \u2115), x \u2223 n \u2192 x = 1 \u2228 x = n) : \u2200 (y : \u2115), y \u2223 n \u2192 y \u2223 1 \u2228 y = n:= by\n  intro y hy\n  have h := h\u2081 y hy\n  rcases h with (h | h)\n  all_goals aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_dvd (h\u2081 : \u2200 (x : \u2115), x \u2223 n \u2192 x = 1 \u2228 x = n) : \u2200 (y : \u2115), y \u2223 n \u2192 y \u2223 1 \u2228 y = n:= by\n  intro y hy\n  have h := h\u2081 y hy\n  aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 3) : (4 / 3 + a ^ 3 + b ^ 3)\u207b\u00b9 + (4 / 3 + b ^ 3 + c ^ 3)\u207b\u00b9 + (4 / 3 + c ^ 3 + a ^ 3)\u207b\u00b9 \u2264 9 / 10 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 3) : (x * y) * (y * z) * z * x \u2264 (x + y + z) ^ 6 / 27:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 3) :\n       (x * y) * (y * z) * z * x \u2264 (x + y + z) ^ 6 / 27:= by\n  have h\u2080 : 0 < x * y := by positivity\n  have h\u2081 : 0 < y * z := by positivity\n  have h\u2082 : 0 < z * x := by positivity\n  have h\u2083 : 0 < (x * y) * (y * z) := by positivity\n  have h\u2084 : 0 < (x * y) * (y * z) * z := by positivity\n  have h\u2085 : 0 < (x * y) * (y * z) * z * x := by positivity\n  have h\u2086 : (x + y + z) ^ 6 / 27 = (3 : \u211d) ^ 6 / 27 := by simp [h]\n  rw [h\u2086]\n  have h\u2087 : (x * y) * (y * z) * z * x \u2264 (3 : \u211d) ^ 6 / 27 := by\n    have h\u2088 : x * y * z \u2264 1 := by\n      nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n        mul_self_nonneg (x + y + z)]\n    nlinarith [sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y),\n      mul_self_nonneg (x * y + y * z + z * x)]\n  linarith\n  <;> norm_num"
  ]
 },
 {
  "old": "(n : \u2115) (hn : 1 < n) : \u00ac (n \u2223 (3^n - 2^n)) := by",
  "new": "(n k : \u2115) (hn : 2 \u2264 n) (hk : 2 \u2264 k) : Nat.Coprime n k \u2194 \u2200 m : \u2115, m \u2223 n \u2227 m \u2223 k \u2192 m = 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_of_ge_2 (n k : \u2115) (hn : 2 \u2264 n) (hk : 2 \u2264 k) :  Nat.Coprime n k \u2194 \u2200 m : \u2115, m \u2223 n \u2227 m \u2223 k \u2192 m = 1:= by\n  rw [Nat.coprime_iff_gcd_eq_one]\n  constructor <;> intro h\n  next =>\n    intro m hm\n    have h1 : m \u2223 Nat.gcd n k := Nat.dvd_gcd hm.1 hm.2\n    rw [h] at h1\n    simp at h1\n    exact h1\n  next =>\n    have h1 : Nat.gcd n k \u2223 n := Nat.gcd_dvd_left n k\n    have h2 : Nat.gcd n k \u2223 k := Nat.gcd_dvd_right n k\n    specialize h (Nat.gcd n k) \u27e8h1, h2\u27e9\n    simp_all"
  ]
 },
 {
  "old": "(a b : \u211d) (ha : 0 < a) (hb : 0 < b) : (a^3 / b^3 + b^3 / a^3 + 11 * (a^2 / b^2 + b^2 / a^2) \u2265 9 * (a / b + b / a) + 6) := by",
  "new": ": \u2200 a b : \u211d, 0 < a \u2227 0 < b \u2192 (a^3 / b^3 + b^3 / a^3 + 11 * (a^2 / b^2 + b^2 / a^2) \u2265 9 * (a / b + b / a) + 6) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b : \u211d, 0 < a \u2227 0 < b \u2192\n    (a^3 / b^3 + b^3 / a^3 + 11 * (a^2 / b^2 + b^2 / a^2) \u2265 9 * (a / b + b / a) + 6) := by\n  rintro a b \u27e8h1, h2\u27e9\n  have h3 : 0 < a ^ 3 := by positivity\n  have h4 : 0 < b ^ 3 := by positivity\n  have h5 : 0 < a ^ 2 := by positivity\n  have h6 : 0 < b ^ 2 := by positivity\n  have h7 : 0 < a * b := by positivity\n  have h8 : 0 < a ^ 2 * b ^ 2 := by positivity\n  have h9 : 0 < a ^ 3 * b ^ 3 := by positivity\n  field_simp [h1, h2]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (a ^ 3 - b ^ 3), sq_nonneg (a ^ 2 * b - a * b ^ 2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b : \u211d, 0 < a \u2227 0 < b \u2192\n    (a^3 / b^3 + b^3 / a^3 + 11 * (a^2 / b^2 + b^2 / a^2) \u2265 9 * (a / b + b / a) + 6) := by\n  intro a b h\n  have ha : 0 < a := h.1\n  have hb : 0 < b := h.2\n  have h\u2081 : 0 < a * b := mul_pos ha hb\n  have h\u2082 : 0 < a ^ 2 * b ^ 2 := by positivity\n  have h\u2083 : 0 < a ^ 3 * b ^ 3 := by positivity\n  field_simp [ha.ne', hb.ne', h\u2082.ne', h\u2083.ne']\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (a ^ 3 - b ^ 3), sq_nonneg (a ^ 2 * b - a * b ^ 2),\n    sq_nonneg (a ^ 3 * b - a * b ^ 3), sq_nonneg (a ^ 2 * b ^ 2 - a * b * b * a),\n    sq_nonneg (a ^ 3 * b ^ 2 - a * b ^ 2 * b * a)]"
  ]
 },
 {
  "old": "(k : \u2115) (hk : 1 < k) : \u2200 m : \u2115, \u2203 n : \u2115, n > m \u2227 n \u2223 (\u2211 i in Finset.Icc 1 k, i ^ n) := by",
  "new": "(p : \u2115) (hp : p.Prime) (a : \u2115) : a.Coprime p \u2228 \u2203 b : \u2115, b \u2223 a \u2227 b \u2223 p:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (hp : p.Prime) (a : \u2115) : a.Coprime p \u2228 \u2203 b : \u2115, b \u2223 a \u2227 b \u2223 p:= by\n  by_cases h : a.Coprime p\n  exact Or.inl h\n  exact Or.inr \u27e81, by simp [Nat.one_dvd, h]\u27e9\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop"
  ]
 },
 {
  "old": "(a b c : \u211d) : (1 + a) / (1 - a) + (1 + b) / (1 - b) + (1 + c) / (1 - c) \u2264 2 * (a / b + b / c + c / a) \u2194 (2 * a / b - 2 * a / (b + c) - 1) + (2 * b / c - 2 * b / (c + a) - 1) + (2 * c / a - 2 * c / (a + b) - 1) \u2265 0 := by",
  "new": "(a b c : \u211d) : (a + b + c) ^ 2 / 9 \u2264 a ^ 2 + b ^ 2 + c ^ 2 \u2194 0 \u2264 (a - b) ^ 2 + (b - c) ^ 2 + (c - a) ^ 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_T10_T11 (a b c : \u211d) :\n   (a + b + c) ^ 2 / 9 \u2264 a ^ 2 + b ^ 2 + c ^ 2 \u2194 0 \u2264 (a - b) ^ 2 + (b - c) ^ 2 + (c - a) ^ 2:= by\n  constructor <;> intro h\n  nlinarith\n  have : (a + b + c) ^ 2 \u2264 9 * (a ^ 2 + b ^ 2 + c ^ 2) := by\n    nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_T10_T11 (a b c : \u211d) :\n   (a + b + c) ^ 2 / 9 \u2264 a ^ 2 + b ^ 2 + c ^ 2 \u2194 0 \u2264 (a - b) ^ 2 + (b - c) ^ 2 + (c - a) ^ 2:= by\n  constructor\n  intro h\n  nlinarith [sq_nonneg (a + b + c), h]\n  intro h\n  apply div_le_of_nonneg_of_le_mul <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_T10_T11 (a b c : \u211d) :\n   (a + b + c) ^ 2 / 9 \u2264 a ^ 2 + b ^ 2 + c ^ 2 \u2194 0 \u2264 (a - b) ^ 2 + (b - c) ^ 2 + (c - a) ^ 2:= by\n  constructor\n  intro h\n  have h2 : 0 \u2264 (a - b) ^ 2 + (b - c) ^ 2 + (c - a) ^ 2 := by\n    nlinarith\n  linarith\n  intro h\n  nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_T10_T11 (a b c : \u211d) :\n   (a + b + c) ^ 2 / 9 \u2264 a ^ 2 + b ^ 2 + c ^ 2 \u2194 0 \u2264 (a - b) ^ 2 + (b - c) ^ 2 + (c - a) ^ 2:= by\n  constructor\n  intro h\n  linarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  intro h\n  linarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (habc : a * b * c = 1) (ha : a > 0) (hb : b > 0) (hc : c > 0) : (a + b) * (b + c) * (c + a) \u2265 4 * (a + b + c - 1) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z = 1) : 1 / (x + y) + 1 / (y + z) + 1 / (z + x) \u2265 9 / (x + y + z):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z = 1) : 1 / (x + y) + 1 / (y + z) + 1 / (z + x) \u2265 9 / (x + y + z):= by\n  have h\u2083 : 0 < x + y := by linarith\n  have h\u2084 : 0 < y + z := by linarith\n  have h\u2085 : 0 < z + x := by linarith\n  have h\u2086 : 0 < x * y := by nlinarith\n  have h\u2087 : 0 < y * z := by nlinarith\n  have h\u2088 : 0 < z * x := by nlinarith\n  field_simp [h\u2081, h\u2083, h\u2084, h\u2085] at h\u2082 \u22a2\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x * y + y * z + z * x), mul_self_nonneg (x * y - y * z),\n    mul_self_nonneg (y * z - z * x), mul_self_nonneg (z * x - x * y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z = 1) : 1 / (x + y) + 1 / (y + z) + 1 / (z + x) \u2265 9 / (x + y + z):= by\n  have h\u2083 : 0 < x + y + z := by linarith\n  have h\u2084 : 0 < x * y := by positivity\n  have h\u2085 : 0 < y * z := by positivity\n  have h\u2086 : 0 < z * x := by positivity\n  have h\u2087 : 0 < x * y * (x + y) := by positivity\n  have h\u2088 : 0 < y * z * (y + z) := by positivity\n  have h\u2089 : 0 < z * x * (z + x) := by positivity\n  have h\u2081\u2080 : 0 < x * y * z := by positivity\n  field_simp [h\u2081, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087, h\u2088, h\u2089, h\u2081\u2080] at h\u2082 \u22a2\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    sq_nonneg (x + y + z)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z = 1) : 1 / (x + y) + 1 / (y + z) + 1 / (z + x) \u2265 9 / (x + y + z):= by\n  field_simp [h\u2081, hx, hy, hz] at h\u2082 \u22a2\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_pos hx hy, mul_pos hx hz, mul_pos hy hz,\n    mul_pos (mul_pos hx hx) hy, mul_pos (mul_pos hx hx) hz,\n    mul_pos (mul_pos hy hy) hz]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z = 1) : 1 / (x + y) + 1 / (y + z) + 1 / (z + x) \u2265 9 / (x + y + z):= by\n  field_simp [h\u2081] at h\u2082 \u22a2\n  nlinarith [sq_nonneg (x + y + z), sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_pos hx hy, mul_pos hx hz, mul_pos hy hz]\n  <;>\n    nlinarith\n  <;>\n    nlinarith\n  <;>\n    nlinarith\n  <;>\n    nlinarith\n  <;>\n    nlinarith"
  ]
 },
 {
  "old": "(n : \u2115) : \u2211 i in Finset.Icc 1 n, (Nat.divisors i).card = 2 * \u2211 k in Finset.Icc 1 (Nat.floor (Real.sqrt n)), (n / k) - (Nat.floor (Real.sqrt n))^2 := by",
  "new": "(n : \u2115) (h\u2080 : 2 \u2264 n) : \u2211 k in Finset.Icc 1 (Nat.floor (Real.sqrt n)), (n / k) \u2264 (n + 1) * (Nat.floor (Real.sqrt n)):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_statement (n : \u2115) (h\u2080 : 2 \u2264 n) :  \u2211 k in Finset.Icc 1 (Nat.floor (Real.sqrt n)), (n / k) \u2264  (n + 1) * (Nat.floor (Real.sqrt n)):= by\n  have h\u2081 : \u2200 k \u2208 Finset.Icc 1 (Nat.floor (Real.sqrt n)), n / k \u2264 n := by\n    intro k hk\n    simp only [Finset.mem_Icc] at hk\n    exact Nat.div_le_self n k\n  calc\n    \u2211 k in Finset.Icc 1 (Nat.floor (Real.sqrt n)), n / k \u2264\n        \u2211 k in Finset.Icc 1 (Nat.floor (Real.sqrt n)), n := by exact Finset.sum_le_sum h\u2081\n    _ = (Nat.floor (Real.sqrt n)) * n := by simp [mul_comm]\n    _ \u2264 (n + 1) * (Nat.floor (Real.sqrt n)) := by\n      have h\u2082 : 0 \u2264 Real.sqrt n := Real.sqrt_nonneg n\n      have h\u2083 : 0 \u2264 n := by linarith\n      have h\u2084 : (Real.sqrt n : \u211d) \u2265 0 := by linarith\n      have h\u2085 : (n : \u211d) \u2265 0 := by linarith\n      have h\u2086 : (Real.sqrt n : \u211d) \u2264 n := Real.sqrt_le_iff.mpr (by constructor <;> norm_cast <;> nlinarith)\n      have h\u2087 : (n : \u211d) + 1 \u2265 Real.sqrt n := by linarith\n      have h\u2088 : (n + 1 : \u211d) \u2265 Real.sqrt n := by linarith\n      have h\u2089 : (n + 1 : \u211d) \u2265 0 := by linarith\n      norm_cast\n      nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_statement (n : \u2115) (h\u2080 : 2 \u2264 n) :  \u2211 k in Finset.Icc 1 (Nat.floor (Real.sqrt n)), (n / k) \u2264  (n + 1) * (Nat.floor (Real.sqrt n)):= by\n  have h\u2081 : \u2200 k : \u2115, k \u2208 Finset.Icc 1 (Nat.floor (Real.sqrt n)) \u2192 n / k \u2264 n := by\n    intro k hk\n    simp only [Finset.mem_Icc] at hk\n    exact Nat.div_le_self n k\n  exact\n    calc\n      \u2211 k in Finset.Icc 1 (Nat.floor (Real.sqrt n)), n / k \u2264 \u2211 k in Finset.Icc 1 (Nat.floor (Real.sqrt n)), n :=\n        Finset.sum_le_sum h\u2081\n      _ = n * (Nat.floor (Real.sqrt n)) := by simp [mul_comm]\n      _ \u2264 (n + 1) * (Nat.floor (Real.sqrt n)) := by gcongr; all_goals norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_statement (n : \u2115) (h\u2080 : 2 \u2264 n) :  \u2211 k in Finset.Icc 1 (Nat.floor (Real.sqrt n)), (n / k) \u2264  (n + 1) * (Nat.floor (Real.sqrt n)):= by\n  have h\u2081 : \u2200 k : \u2115, k \u2208 Finset.Icc 1 (Nat.floor (Real.sqrt n)) \u2192 n / k \u2264 n := by\n    intro k hk\n    simp only [Finset.mem_Icc] at hk\n    exact Nat.div_le_self n k\n  exact\n    calc\n      \u2211 k in Finset.Icc 1 (Nat.floor (Real.sqrt n)), (n / k) \u2264 \u2211 k in Finset.Icc 1 (Nat.floor (Real.sqrt n)), n :=\n        Finset.sum_le_sum h\u2081\n      _ = (Nat.floor (Real.sqrt n)) * n := by simp [Finset.sum_Icc_succ_top]\n      _ \u2264 (n + 1) * (Nat.floor (Real.sqrt n)) := by\n        nlinarith [Nat.zero_le (Nat.floor (Real.sqrt n))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_statement (n : \u2115) (h\u2080 : 2 \u2264 n) :  \u2211 k in Finset.Icc 1 (Nat.floor (Real.sqrt n)), (n / k) \u2264  (n + 1) * (Nat.floor (Real.sqrt n)):= by\n  have h\u2081 : \u2200 k \u2208 Finset.Icc 1 (Nat.floor (Real.sqrt n)), n / k \u2264 (n + 1) := by\n    intro k hk\n    simp only [Finset.mem_Icc] at hk\n    have h\u2082 : n / k \u2264 n := by\n      apply Nat.div_le_self\n    linarith [hk.1]\n  exact\n    (Finset.sum_le_sum h\u2081).trans (by simp [Nat.mul_comm])"
  ]
 },
 {
  "old": "(x : \u211d) (hx : 0 < x \u2227 x < Real.pi / 2) : 2 * x > sin x * cosh x + cos x * sinh x := by",
  "new": "(x y z : \u211d) (hx : x^2 + y^2 + z^2 = 1) (hx' : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z) (h : x * y + x * z + y * z = 1) : x * y * z * (x^2 + y^2 + z^2) \u2264 1 / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coplanar_of_three_points (x y z : \u211d) (hx : x^2 + y^2 + z^2 = 1) (hx' : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z) (h : x * y + x * z + y * z = 1)  :\n  x * y * z * (x^2 + y^2 + z^2) \u2264 1 / 2:= by\n  have h2 : 0 \u2264 x * y := by nlinarith\n  have h3 : 0 \u2264 x * z := by nlinarith\n  have h4 : 0 \u2264 y * z := by nlinarith\n  have h5 : 0 \u2264 x * y * z := by nlinarith\n  nlinarith [mul_self_nonneg (x - y * z),\n    mul_self_nonneg (x * y - x * z),\n    mul_self_nonneg (x * z - y * z)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coplanar_of_three_points (x y z : \u211d) (hx : x^2 + y^2 + z^2 = 1) (hx' : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z) (h : x * y + x * z + y * z = 1)  :\n  x * y * z * (x^2 + y^2 + z^2) \u2264 1 / 2:= by\n  rw [hx]\n  nlinarith [mul_self_nonneg (x - y), mul_self_nonneg (x - z), mul_self_nonneg (y - z)]\n  <;> linarith [h]\n  <;> linarith [h]\n  <;> linarith [h]"
  ]
 },
 {
  "old": "(x : \u211d) : 0 \u2264 Int.floor (2 * x) - 2 * Int.floor x \u2227 Int.floor (2 * x) - 2 * Int.floor x \u2264 1 := by",
  "new": "(x : \u211d) : \u230a2 * x\u230b - 2 * \u230ax\u230b \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mathd_numbertheory_227 (x : \u211d) : \u230a2 * x\u230b - 2 * \u230ax\u230b \u2264 1:= by\n  have h\u2080 : \u230a2 * x\u230b \u2264 2 * \u230ax\u230b + 1 := by\n    have h\u2080 : \u230a2 * x\u230b \u2264 2 * \u230ax\u230b + 1 := by\n      apply Int.le_of_lt_add_one\n      simp [Int.floor_lt, Int.lt_floor_add_one]\n      <;> nlinarith [Int.floor_le x, Int.lt_floor_add_one x]\n    linarith\n  linarith [Int.floor_le x, Int.lt_floor_add_one x]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mathd_numbertheory_227 (x : \u211d) : \u230a2 * x\u230b - 2 * \u230ax\u230b \u2264 1:= by\n  have h\u2080 : \u230a2 * x\u230b \u2264 2 * \u230ax\u230b + 1 := by\n    have h\u2081 : \u230a2 * x\u230b \u2264 2 * \u230ax\u230b + 1 := by\n      have h\u2082 : \u230a2 * x\u230b \u2264 2 * \u230ax\u230b + 1 := by\n        apply Int.le_of_lt_add_one\n        simp [Int.floor_lt, Int.lt_floor_add_one]\n        <;> ring_nf\n        <;> linarith [Int.floor_le x, Int.lt_floor_add_one x]\n      linarith\n    linarith\n  linarith [h\u2080]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mathd_numbertheory_227 (x : \u211d) : \u230a2 * x\u230b - 2 * \u230ax\u230b \u2264 1:= by\n  have h : \u230a2 * x\u230b \u2264 2 * \u230ax\u230b + 1 := by\n    have h\u2081 : \u230a2 * x\u230b \u2264 2 * \u230ax\u230b + 1 := by\n      apply Int.le_of_lt_add_one\n      simp [Int.floor_lt, Int.lt_floor_add_one]\n      <;> nlinarith [Int.floor_le x, Int.lt_floor_add_one x]\n    linarith\n  linarith"
  ]
 },
 {
  "old": "(p : \u2115) (hp : p.Prime) (hpo : Odd p) : \u2200 M : \u2115, \u2203 q : \u2115, q.Prime \u2227 q > M \u2227 \u2203 k : \u2115, q = 2 * p * k + 1 := by",
  "new": "(p : \u2115) {m : \u2115} (hm : m \u2260 1) (hp : p.Prime) : p.Coprime m \u2228 (\u2203 k : \u2115, m = p * k):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {m : \u2115} (hm : m \u2260 1) (hp : p.Prime) :\n     p.Coprime m \u2228 (\u2203 k : \u2115, m = p * k):= by\n  refine' or_iff_not_imp_right.mpr fun h => _\n  haveI := Fact.mk hp\n  simpa [coprime_iff_gcd_eq_one, hm] using hp.coprime_iff_not_dvd.mpr h"
  ]
 },
 {
  "old": "{a b c : \u211d} (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (1 / (a * b) + 1 / (b * c) + 1 / (c * a)) \u2265 9 / (a * b + b * c + c * a) := by",
  "new": "{x y z : \u211d} (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : 2 * (x / y + y / z + z / x) \u2265 2 * (x * z / (x * z) + y * x / (y * x) + z * y / (z * y)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq {x y z : \u211d} (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : 2 * (x / y + y / z + z / x) \u2265 2 * (x * z / (x * z) + y * x / (y * x) + z * y / (z * y))  := by\n  have h\u2080 : x * z > 0 := by positivity\n  have h\u2081 : y * x > 0 := by positivity\n  have h\u2082 : z * y > 0 := by positivity\n  have h\u2083 : x / y + y / z + z / x \u2265 x * z / (x * z) + y * x / (y * x) + z * y / (z * y) := by\n    field_simp [h\u2080, h\u2081, h\u2082]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n      sq_nonneg (x * z - y * x), sq_nonneg (y * x - z * y), sq_nonneg (z * y - x * z)]\n  linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq {x y z : \u211d} (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : 2 * (x / y + y / z + z / x) \u2265 2 * (x * z / (x * z) + y * x / (y * x) + z * y / (z * y))  := by\n  have h1 : 0 < x * z := mul_pos hx hz\n  have h2 : 0 < y * x := mul_pos hy hx\n  have h3 : 0 < z * y := mul_pos hz hy\n  have h4 : 0 < x * z * (y * x) := by positivity\n  have h5 : 0 < y * x * (z * y) := by positivity\n  have h6 : 0 < x * z * (z * y) := by positivity\n  have h7 : 0 < x * y * (y * x) := by positivity\n  field_simp [h1, h2, h3, h4, h5, h6, h7]\n  rw [le_div_iff (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    sq_nonneg (x * z - y * x), sq_nonneg (y * x - z * y), sq_nonneg (z * y - x * z)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq {x y z : \u211d} (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : 2 * (x / y + y / z + z / x) \u2265 2 * (x * z / (x * z) + y * x / (y * x) + z * y / (z * y))  := by\n  have : 0 < x * y := by positivity\n  have : 0 < y * z := by positivity\n  have : 0 < z * x := by positivity\n  have : 0 < x * y * (y * z) := by positivity\n  have : 0 < y * z * (z * x) := by positivity\n  have : 0 < z * x * (x * y) := by positivity\n  field_simp [*, mul_assoc]\n  rw [le_div_iff (by positivity)]\n  nlinarith [mul_self_nonneg (x - y), mul_self_nonneg (y - z), mul_self_nonneg (z - x)]\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq {x y z : \u211d} (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : 2 * (x / y + y / z + z / x) \u2265 2 * (x * z / (x * z) + y * x / (y * x) + z * y / (z * y))  := by\n  have : x * z > 0 := by positivity\n  have : y * x > 0 := by positivity\n  have : z * y > 0 := by positivity\n  have h\u2080 : 0 < x * z := by positivity\n  have h\u2081 : 0 < y * x := by positivity\n  have h\u2082 : 0 < z * y := by positivity\n  have h\u2083 : 0 < x * z * (y * x) := by positivity\n  have h\u2084 : 0 < x * z * (z * y) := by positivity\n  have h\u2085 : 0 < y * x * (z * y) := by positivity\n  field_simp [h\u2080, h\u2081, h\u2082]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) : (1 - a) * (1 - b) * (1 - c) \u2265 (71 + 17 * Real.sqrt 17) / 8 * a * b^2 * c := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) : a * b ^ 2 * c \u2264 1/9 * (1 - a) * (1 - b) * (1 - c):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) :\n       a * b ^ 2 * c \u2264 1/9 * (1 - a) * (1 - b) * (1 - c):= by\n  have h\u2080 : 0 < a * b := by positivity\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < a * b * c := by positivity\n  have h\u2083 : 0 < 1 - a := by linarith\n  have h\u2084 : 0 < 1 - b := by linarith\n  have h\u2085 : 0 < 1 - c := by linarith\n  have h\u2086 : 0 < (1 - a) * (1 - b) := by positivity\n  have h\u2087 : 0 < (1 - a) * (1 - b) * (1 - c) := by positivity\n  nlinarith [sq_nonneg (a - 1 / 3), sq_nonneg (b - 1 / 3), sq_nonneg (c - 1 / 3)]\n  <;> linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) :\n       a * b ^ 2 * c \u2264 1/9 * (1 - a) * (1 - b) * (1 - c):= by\n  have h\u2080 : 0 < a * b := by nlinarith\n  have h\u2081 : 0 < a * b * c := by nlinarith\n  have h\u2082 : 0 < a * b * c ^ 2 := by nlinarith\n  have h\u2083 : 0 < a * b ^ 2 := by nlinarith\n  have h\u2084 : 0 < a * b ^ 2 * c := by nlinarith\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n    sq_nonneg (a + b + c)]\n  <;> simp [*]\n  <;> linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) :\n       a * b ^ 2 * c \u2264 1/9 * (1 - a) * (1 - b) * (1 - c):= by\n  have h\u2080 : 0 < a * b := by positivity\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < a * b * c := by positivity\n  have h\u2083 : 0 < a * b * c * (a + b + c) := by positivity\n  have h\u2084 : 0 < a * b * c * (a * b + b * c + c * a) := by positivity\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith"
  ]
 },
 {
  "old": "{a b c : \u211d} : (b - c) * (a - c) * (a^2 * b + b * c * (a - b)) + c^3 * (a - b)^2 \u2265 0 := by",
  "new": "(a b c : \u211d) : a ^ 2 * b ^ 2 * c ^ 2 - a * b * c * (a * b + b * c + c * a) + (a ^ 2 + b ^ 2 + c ^ 2) * (b ^ 2 + a ^ 2 + c ^ 2) \u2265 0 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) :\n      a ^ 2 * b ^ 2 * c ^ 2 - a * b * c * (a * b + b * c + c * a) + (a ^ 2 + b ^ 2 + c ^ 2) * (b ^ 2 + a ^ 2 + c ^ 2) \u2265 0 := by\n  simp only [add_assoc]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), sq_nonneg (a - b - c), sq_nonneg (b - c - a), sq_nonneg (c - a - b),\n    mul_self_nonneg (a * b), mul_self_nonneg (b * c), mul_self_nonneg (c * a),\n    mul_self_nonneg (a * b + b * c + c * a), mul_self_nonneg (b * c + c * a + a * b), mul_self_nonneg (a * b + b * c + c * a - 2 * a * b * c)]\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 2) : (1 - b * c) * (1 - c * a) * (1 - a * b) \u2265 (125 * a ^ 2 * b ^ 2 * c ^ 2) / 64 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 - x * y) * (1 - y * z) * (1 - z * x) \u2265 (1 - x - y - z) ^ 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 - x * y) * (1 - y * z) * (1 - z * x) \u2265 (1 - x - y - z) ^ 3:= by\n  have h1 : 0 < x * y := by positivity\n  have h2 : 0 < y * z := by positivity\n  have h3 : 0 < z * x := by positivity\n  have h4 : 0 < x * y * z := by positivity\n  have h5 : (x + y + z) ^ 2 = 1 := by rw [hab]; ring\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x), mul_nonneg h1.le h2.le, mul_nonneg h2.le h3.le, mul_nonneg h3.le h1.le, mul_nonneg (sq_nonneg (x * y)) (sq_nonneg (y * z)), mul_nonneg (sq_nonneg (y * z)) (sq_nonneg (z * x)), mul_nonneg (sq_nonneg (z * x)) (sq_nonneg (x * y))]\n  <;> simp_all",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 - x * y) * (1 - y * z) * (1 - z * x) \u2265 (1 - x - y - z) ^ 3:= by\n  have h : (x + y + z) ^ 2 = 1 := by simp [hab]\n  nlinarith [mul_pos hx hy, mul_pos hy hz, mul_pos hz hx,\n    mul_pos (sq_pos_of_pos hx) (sq_pos_of_pos hy),\n    mul_pos (sq_pos_of_pos hy) (sq_pos_of_pos hz),\n    mul_pos (sq_pos_of_pos hz) (sq_pos_of_pos hx)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 - x * y) * (1 - y * z) * (1 - z * x) \u2265 (1 - x - y - z) ^ 3:= by\n  have : (x + y + z) ^ 2 = 1 := by simp [hab]\n  nlinarith [mul_pos hx hy, mul_pos hy hz, mul_pos hz hx,\n    mul_pos (sq_pos_of_pos hx) (sq_pos_of_pos hy),\n    mul_pos (sq_pos_of_pos hy) (sq_pos_of_pos hz),\n    mul_pos (sq_pos_of_pos hz) (sq_pos_of_pos hx)]\n  <;> linarith\n  <;> norm_num"
  ]
 },
 {
  "old": "(a b c : \u211d) : (a + c) / Real.sqrt ((b + a) * (b + c)) + (b + c) / Real.sqrt ((b + a) * (a + c)) + (a + b) / Real.sqrt ((a + c) * (b + c)) \u2265 a + b / (2 * c + a + b) + c + b / (2 * a + c + b) + a + c / (2 * b + a + c) := by",
  "new": ": Real.sqrt (Real.sqrt (1 + 16) + 4) / 2 \u2264 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + 16) + 4) / 2 \u2264 3:= by\n  have h\u2081 : 0 \u2264 Real.sqrt (1 + 16) := Real.sqrt_nonneg _\n  have h\u2082 : 0 \u2264 Real.sqrt (1 + 16) + 4 := by linarith\n  have h\u2083 : 0 \u2264 Real.sqrt (1 + 16) + 4 + 4 := by linarith\n  have h\u2084 : 0 \u2264 Real.sqrt (1 + 16) + 4 + 4 + 4 := by linarith\n  have h\u2085 : Real.sqrt (1 + 16) \u2264 5 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 linarith\n    \u00b7 norm_num\n  have h\u2086 : Real.sqrt (Real.sqrt (1 + 16) + 4) \u2264 6 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 linarith\n    \u00b7 nlinarith\n  nlinarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + 16) + 4) / 2 \u2264 3:= by\n  have h\u2081 : Real.sqrt (1 + 16) \u2264 3 * 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 linarith\n    \u00b7 nlinarith\n  have h\u2082 : Real.sqrt (Real.sqrt (1 + 16) + 4) \u2264 3 * 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 linarith\n    \u00b7 nlinarith\n  linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + 16) + 4) / 2 \u2264 3:= by\n  have h\u2081 : Real.sqrt (1 + 16) = \u221a17 := by norm_num\n  rw [h\u2081]\n  have h\u2082 : 0 \u2264 \u221a17 := Real.sqrt_nonneg _\n  have h\u2083 : Real.sqrt (\u221a17 + 4) \u2264 3 * 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_sqrt (show (0 : \u211d) \u2264 17 from by norm_num), h\u2082]\n  nlinarith [h\u2083]"
  ]
 },
 {
  "old": "(a b c : \u211d) : (a^3 + b^3 + c^3) * (a * b + b * c + c * a)^2 \u2265 9 * a^(4/3) * b^(4/3) * c^(4/3) * (a + b + c) * a^(2/3) * b^(2/3) * c^(2/3) := by",
  "new": "(a b c : \u211d) : 3 * (a^2 + b^2 + c^2) \u2265 a * b + b * c + c * a \u2194 3 * (a^2 + b^2 + c^2) \u2265 a * b + b * c + c * a + (a - b)^2 + (b - c)^2 + (c - a)^2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_2023_04_21 (a b c : \u211d) : 3 * (a^2 + b^2 + c^2) \u2265 a * b + b * c + c * a \u2194 3 * (a^2 + b^2 + c^2) \u2265 a * b + b * c + c * a + (a - b)^2 + (b - c)^2 + (c - a)^2:= by\n  constructor <;> intro <;>\n  nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;>\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_2023_04_21 (a b c : \u211d) : 3 * (a^2 + b^2 + c^2) \u2265 a * b + b * c + c * a \u2194 3 * (a^2 + b^2 + c^2) \u2265 a * b + b * c + c * a + (a - b)^2 + (b - c)^2 + (c - a)^2:= by\n  constructor <;> intro h <;>\n  nlinarith [sq_nonneg (a + b), sq_nonneg (b + c), sq_nonneg (c + a),\n    sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_2023_04_21 (a b c : \u211d) : 3 * (a^2 + b^2 + c^2) \u2265 a * b + b * c + c * a \u2194 3 * (a^2 + b^2 + c^2) \u2265 a * b + b * c + c * a + (a - b)^2 + (b - c)^2 + (c - a)^2:= by\n  constructor <;> intro h\n  nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]"
  ]
 },
 {
  "old": "(k : \u2115) : \u00ac \u2203 x : \u2115, k^2 < x^2 \u2227 x^2 < (k + 1)^2 := by",
  "new": "(x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y):= by\n  by_cases h : x.Coprime y\n  exact Or.inl h\n  exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y):= by\n  by_cases h : x.Coprime y <;> simp [h]\n  <;> simp [Nat.coprime_iff_gcd_eq_one, h]\n  <;> omega"
  ]
 },
 {
  "old": "(a b c : \u211d) : (a / b + b / c + c / a) \u2265 1 / 2 * (a / b + b / c + c / a + b / a + c / b + a / c) := by",
  "new": "(x y z : \u211d) : 2 * Real.sqrt (x * y) + 2 * Real.sqrt (y * z) + 2 * Real.sqrt (z * x) \u2264 6 * Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) : 2 * Real.sqrt (x * y) + 2 * Real.sqrt (y * z) + 2 * Real.sqrt (z * x) \u2264 6 * Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2)  := by\n  have h\u2080 : Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2081 : Real.sqrt (x * y) \u2264 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  have h\u2082 : Real.sqrt (y * z) \u2264 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  have h\u2083 : Real.sqrt (z * x) \u2264 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  <;> simp [*, mul_assoc]\n  <;> linarith\n  <;> simp [*, mul_assoc]\n  <;> linarith\n  <;> simp [*, mul_assoc]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) : 2 * Real.sqrt (x * y) + 2 * Real.sqrt (y * z) + 2 * Real.sqrt (z * x) \u2264 6 * Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2)  := by\n  have h\u2080 : Real.sqrt (x * y) \u2264 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x + y), sq_nonneg (z - x), sq_nonneg (z + x), sq_nonneg (y - z), sq_nonneg (y + z)]\n  have h\u2081 : Real.sqrt (y * z) \u2264 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x + y), sq_nonneg (z - x), sq_nonneg (z + x), sq_nonneg (y - z), sq_nonneg (y + z)]\n  have h\u2082 : Real.sqrt (z * x) \u2264 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x + y), sq_nonneg (z - x), sq_nonneg (z + x), sq_nonneg (y - z), sq_nonneg (y + z)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x + y), sq_nonneg (z - x), sq_nonneg (z + x), sq_nonneg (y - z), sq_nonneg (y + z)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) : 2 * Real.sqrt (x * y) + 2 * Real.sqrt (y * z) + 2 * Real.sqrt (z * x) \u2264 6 * Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2)  := by\n  have : 0 \u2264 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n    exact Real.sqrt_nonneg _\n  have h1 : Real.sqrt (x * y) \u2264 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  have h2 : Real.sqrt (y * z) \u2264 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  have h3 : Real.sqrt (z * x) \u2264 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) : 2 * Real.sqrt (x * y) + 2 * Real.sqrt (y * z) + 2 * Real.sqrt (z * x) \u2264 6 * Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2)  := by\n  have h\u2081 : 0 \u2264 (x - y) ^ 2 + (y - z) ^ 2 + (z - x) ^ 2 := by positivity\n  have h\u2082 : Real.sqrt (x * y) \u2264 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith\n  have h\u2083 : Real.sqrt (y * z) \u2264 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith\n  have h\u2084 : Real.sqrt (z * x) \u2264 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith\n  nlinarith [Real.sqrt_nonneg (x ^ 2 + y ^ 2 + z ^ 2)]"
  ]
 },
 {
  "old": "(x : \u211d) (h\u2080 : 0.6 * x = 36) : x = 60 := by",
  "new": "(success_rate : \u211d) (num_tests : \u2115) (h_total_successes : \u2115) (h\u2081 : success_rate > 0 \u2227 success_rate < 1) (h\u2082 : num_tests > 0) (h\u2083 : h_total_successes \u2264 num_tests) (h\u2084 : (h_total_successes : \u211d) / num_tests = success_rate) : success_rate * num_tests = h_total_successes:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem assess_test_outcome (success_rate : \u211d)\n    (num_tests : \u2115)\n    (h_total_successes : \u2115)\n    (h\u2081 : success_rate > 0 \u2227 success_rate < 1)\n    (h\u2082 : num_tests > 0)\n    (h\u2083 : h_total_successes \u2264 num_tests)\n    (h\u2084 : (h_total_successes : \u211d) / num_tests = success_rate) :\n    success_rate * num_tests = h_total_successes:= by\n  rw [eq_comm] at h\u2084\n  field_simp [h\u2082.ne'] at h\u2084 \u22a2\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem assess_test_outcome (success_rate : \u211d)\n    (num_tests : \u2115)\n    (h_total_successes : \u2115)\n    (h\u2081 : success_rate > 0 \u2227 success_rate < 1)\n    (h\u2082 : num_tests > 0)\n    (h\u2083 : h_total_successes \u2264 num_tests)\n    (h\u2084 : (h_total_successes : \u211d) / num_tests = success_rate) :\n    success_rate * num_tests = h_total_successes:= by\n  rw [eq_comm] at h\u2084\n  field_simp [h\u2082.ne'] at h\u2084\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem assess_test_outcome (success_rate : \u211d)\n    (num_tests : \u2115)\n    (h_total_successes : \u2115)\n    (h\u2081 : success_rate > 0 \u2227 success_rate < 1)\n    (h\u2082 : num_tests > 0)\n    (h\u2083 : h_total_successes \u2264 num_tests)\n    (h\u2084 : (h_total_successes : \u211d) / num_tests = success_rate) :\n    success_rate * num_tests = h_total_successes:= by\n  rw [eq_comm] at h\u2084\n  field_simp [h\u2082.ne', h\u2081.1.ne', h\u2081.2.ne'] at h\u2084 \u22a2\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem assess_test_outcome (success_rate : \u211d)\n    (num_tests : \u2115)\n    (h_total_successes : \u2115)\n    (h\u2081 : success_rate > 0 \u2227 success_rate < 1)\n    (h\u2082 : num_tests > 0)\n    (h\u2083 : h_total_successes \u2264 num_tests)\n    (h\u2084 : (h_total_successes : \u211d) / num_tests = success_rate) :\n    success_rate * num_tests = h_total_successes:= by\n  field_simp [h\u2082] at h\u2084 \u22a2\n  linarith"
  ]
 },
 {
  "old": "{a b c : \u211d} (h : a = c + x \u2227 b = c + y) (hx : x \u2265 0 \u2227 y \u2265 0) : 5 * (x^3 + y^3) + 12 * x^2 * y - 15 * x * y^2 + c * (15 * (x^2 + y^2) - 6 * x * y - 3 * (x + y)^2) \u2265 0 := by",
  "new": "(xa xb xc ya yb yc : \u211d) (h\u2080 : 0 \u2264 xa \u2227 0 \u2264 xb \u2227 0 \u2264 xc \u2227 0 \u2264 ya \u2227 0 \u2264 yb \u2227 0 \u2264 yc) (h\u2081 : xa + xb + xc = 1 \u2227 ya + yb + yc = 1) (h\u2082 : 0 \u2264 xa * xb \u2227 0 \u2264 xa * xc \u2227 0 \u2264 xb * xc \u2227 0 \u2264 ya * yb \u2227 0 \u2264 ya * yc \u2227 0 \u2264 yb * yc) (h\u2083 : (xa * xb + xa * xc + xb * xc) * (ya * yb + ya * yc + yb * yc) = 1) : xa * xb * ya * yb \u2264 1 \u2227 xa * xb * ya * yc \u2264 1 \u2227 xa * xb * yb * yc \u2264 1 \u2227 xa * xc * ya * yb \u2264 1 \u2227 xa * xc * ya * yc \u2264 1 \u2227 xa * xc * yb * yc \u2264 1 \u2227 xb * xc * ya * yb \u2264 1 \u2227 xb * xc * ya * yc \u2264 1 \u2227 xb * xc * yb * yc \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (xa xb xc ya yb yc : \u211d) (h\u2080 : 0 \u2264 xa \u2227 0 \u2264 xb \u2227 0 \u2264 xc \u2227 0 \u2264 ya \u2227 0 \u2264 yb \u2227 0 \u2264 yc) (h\u2081 : xa + xb + xc = 1 \u2227 ya + yb + yc = 1) (h\u2082 : 0 \u2264 xa * xb \u2227 0 \u2264 xa * xc \u2227 0 \u2264 xb * xc \u2227 0 \u2264 ya * yb \u2227 0 \u2264 ya * yc \u2227 0 \u2264 yb * yc) (h\u2083 : (xa * xb + xa * xc + xb * xc) * (ya * yb + ya * yc + yb * yc) = 1) : xa * xb * ya * yb \u2264 1 \u2227 xa * xb * ya * yc \u2264 1 \u2227 xa * xb * yb * yc \u2264 1 \u2227 xa * xc * ya * yb \u2264 1 \u2227 xa * xc * ya * yc \u2264 1 \u2227 xa * xc * yb * yc \u2264 1 \u2227 xb * xc * ya * yb \u2264 1 \u2227 xb * xc * ya * yc \u2264 1 \u2227 xb * xc * yb * yc \u2264 1:= by\n  have h\u2084 : xa * xb * ya * yb \u2264 1 \u2227 xa * xb * ya * yc \u2264 1 \u2227 xa * xb * yb * yc \u2264 1 \u2227 xa * xc * ya * yb \u2264 1 \u2227 xa * xc * ya * yc \u2264 1 \u2227 xa * xc * yb * yc \u2264 1 \u2227 xb * xc * ya * yb \u2264 1 \u2227 xb * xc * ya * yc \u2264 1 \u2227 xb * xc * yb * yc \u2264 1 := by\n    constructor\n    \u00b7 nlinarith\n    constructor\n    \u00b7 nlinarith\n    constructor\n    \u00b7 nlinarith\n    constructor\n    \u00b7 nlinarith\n    constructor\n    \u00b7 nlinarith\n    constructor\n    \u00b7 nlinarith\n    constructor\n    \u00b7 nlinarith\n    constructor\n    \u00b7 nlinarith\n    nlinarith\n  exact h\u2084"
  ]
 },
 {
  "old": ": \u2200 x y t : \u211d, x = Real.tan \u03b1 \u2227 y = Real.tan \u03b2 \u2227 t = Real.sin (\u03b1 + \u03b2) \u2192 (1 + x) * (1 + y) * (1 - x * y) / ((1 + x ^ 2) * (1 + y ^ 2)) = (Real.cos \u03b1 + Real.sin \u03b1) * (Real.cos \u03b2 + Real.sin \u03b2) * Real.cos (\u03b1 + \u03b2) := by",
  "new": "(x y : \u211d) : (1 + x) * (1 + y) * (1 - x * y) / ((1 + x ^ 2) * (1 + y ^ 2)) \u2264 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (x y : \u211d) :\n    (1 + x) * (1 + y) * (1 - x * y) / ((1 + x ^ 2) * (1 + y ^ 2)) \u2264 2:= by\n  apply div_le_of_nonneg_of_le_mul <;>\n    nlinarith [sq_nonneg (x * y), sq_nonneg (x - y), sq_nonneg (x + y), sq_nonneg (x * y + x * y),\n      sq_nonneg (x * y - x * y), sq_nonneg (x * y - 1), sq_nonneg (x * y + 1)]\n  <;>\n    linarith\n  <;>\n    linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (x y : \u211d) :\n    (1 + x) * (1 + y) * (1 - x * y) / ((1 + x ^ 2) * (1 + y ^ 2)) \u2264 2:= by\n  apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (x - 1), sq_nonneg (y - 1), sq_nonneg (x * y + x + y - 1),\n    mul_self_nonneg (x - y), mul_self_nonneg (x * y - x - y - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (x y : \u211d) :\n    (1 + x) * (1 + y) * (1 - x * y) / ((1 + x ^ 2) * (1 + y ^ 2)) \u2264 2:= by\n  have h\u2081 : 0 \u2264 (x - y) ^ 2 := sq_nonneg _\n  have h\u2082 : 0 \u2264 (x + y) ^ 2 := sq_nonneg _\n  have h\u2083 : 0 \u2264 (x * y) ^ 2 := sq_nonneg _\n  apply div_le_of_nonneg_of_le_mul <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (x y : \u211d) :\n    (1 + x) * (1 + y) * (1 - x * y) / ((1 + x ^ 2) * (1 + y ^ 2)) \u2264 2:= by\n  apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (x - y), sq_nonneg (x * y),\n    sq_nonneg (x + y), sq_nonneg (x * y + y), sq_nonneg (x * y - y), sq_nonneg (x * y + x),\n    sq_nonneg (x * y - x), sq_nonneg (x * y)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) : a^3 / b + b^3 / c + c^3 / a \u2265 a * Real.sqrt (a * c) + b * Real.sqrt (b * a) + c * Real.sqrt (c * b) := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a^3 / b + b^3 / c + c^3 / a \u2265 a * Real.sqrt (a * c) + b * Real.sqrt (b * a) + c * Real.sqrt (c * b):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a^3 / b + b^3 / c + c^3 / a \u2265 a * Real.sqrt (a * c) + b * Real.sqrt (b * a) + c * Real.sqrt (c * b):= by\n  rintro a b c \u27e8a_pos, b_pos, c_pos\u27e9\n  have h\u2081 : 0 < a * b := by positivity\n  have h\u2082 : 0 < b * c := by positivity\n  have h\u2083 : 0 < c * a := by positivity\n  have h\u2084 : Real.sqrt (a * c) \u2264 (a + c) / 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (a - c)]\n  have h\u2085 : Real.sqrt (b * a) \u2264 (b + a) / 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (b - a)]\n  have h\u2086 : Real.sqrt (c * b) \u2264 (c + b) / 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (c - b)]\n  have h\u2087 : a ^ 3 / b + b ^ 3 / c + c ^ 3 / a \u2265 a * Real.sqrt (a * c) + b * Real.sqrt (b * a) + c * Real.sqrt (c * b) := by\n    have h\u2088 : a ^ 3 / b + b ^ 3 / c + c ^ 3 / a \u2265 a * ((a + c) / 2) + b * ((b + a) / 2) + c * ((c + b) / 2) := by\n      have h\u2089 : 0 < a * b * c := by positivity\n      field_simp [h\u2089]\n      rw [div_le_div_iff (by positivity) (by positivity)]\n      nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n        mul_nonneg a_pos.le b_pos.le, mul_nonneg b_pos.le c_pos.le, mul_nonneg c_pos.le a_pos.le,\n        mul_nonneg (sq_nonneg (a - b)) c_pos.le, mul_nonneg (sq_nonneg (b - c)) a_pos.le,\n        mul_nonneg (sq_nonneg (c - a)) b_pos.le]\n    nlinarith\n  exact h\u2087",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a^3 / b + b^3 / c + c^3 / a \u2265 a * Real.sqrt (a * c) + b * Real.sqrt (b * a) + c * Real.sqrt (c * b):= by\n  rintro a b c \u27e8ha : 0 < a, hb : 0 < b, hc : 0 < c\u27e9\n  have h\u2081 : 0 < a * b := by positivity\n  have h\u2082 : 0 < b * c := by positivity\n  have h\u2083 : 0 < c * a := by positivity\n  have h\u2084 : Real.sqrt (a * c) \u2264 (a + c) / 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 linarith [sq_nonneg (a - c)]\n  have h\u2085 : Real.sqrt (b * a) \u2264 (b + a) / 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 linarith [sq_nonneg (b - a)]\n  have h\u2086 : Real.sqrt (c * b) \u2264 (c + b) / 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 linarith [sq_nonneg (c - b)]\n  have h\u2087 : a^3 / b + b^3 / c + c^3 / a \u2265 a * Real.sqrt (a * c) + b * Real.sqrt (b * a) + c * Real.sqrt (c * b) := by\n    have h\u2087\u2081 : a^3 / b + b^3 / c + c^3 / a \u2265 a * ((a + c) / 2) + b * ((b + a) / 2) + c * ((c + b) / 2) := by\n      rw [ge_iff_le]\n      have h\u2087\u2081 : 0 < a * b * c := by positivity\n      field_simp [h\u2081, h\u2082, h\u2083, h\u2087\u2081]\n      rw [div_le_div_iff (by positivity) (by positivity)]\n      nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n        mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le,\n        mul_nonneg (sq_nonneg (a - b)) hc.le, mul_nonneg (sq_nonneg (b - c)) ha.le,\n        mul_nonneg (sq_nonneg (c - a)) hb.le]\n    nlinarith [h\u2084, h\u2085, h\u2086]\n  exact h\u2087"
  ]
 },
 {
  "old": "(a b : \u2124) (h\u2081 : 0 < a \u2227 0 < b) (h\u2082 : a^2 \u2223 b^2) : a \u2223 b := by",
  "new": "(a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  apply em\n  <;> simp [Nat.coprime_iff_gcd_eq_one, Nat.gcd_eq_zero_iff]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  by_cases h : a.Coprime b\n  case pos => exact Or.inl h\n  case neg => exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  by_cases h : Nat.Coprime a b\n  exact Or.inl h\n  exact Or.inr h\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  by_cases h : Nat.Coprime a b\n  exacts [Or.inl h, Or.inr h]"
  ]
 },
 {
  "old": "(a b : \u2115) : Nat.gcd (a + b) (a - b) \u2265 Nat.gcd a b := by",
  "new": "(a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b) := by\n  by_cases h : Nat.Coprime a b <;> simp [h]\n  <;> rcases Nat.eq_zero_or_pos a with (rfl | ha) <;> rcases Nat.eq_zero_or_pos b with (rfl | hb) <;>\n    simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b) := by\n  by_cases h : Nat.Coprime a b\n  exact Or.inl h\n  exact Or.inr h\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b) := by\n  by_cases h : Nat.Coprime a b\n  exact Or.inl h\n  exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b) := by\n  by_cases h : a.Coprime b\n  exact Or.inl h\n  exact Or.inr h"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x / (y + z))^2 + (y / (x + z))^2 + (z / (x + y))^2 + (5 * (x + y + z) * (x*y + y*z + z*x)) / (9 * Real.sqrt (2 * (x^2 + y^2) * (y^2 + z^2) * (z^2 + x^2))) \u2265 2 := by",
  "new": ": \u2200 x : \u211d, 0 < x \u2192 Real.sqrt (2 * (x^2 + x^2) * (x^2 + x^2) * (x^2 + x^2)) \u2265 2 * x^3 / 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, 0 < x \u2192\n   Real.sqrt (2 * (x^2 + x^2) * (x^2 + x^2) * (x^2 + x^2)) \u2265 2 * x^3 / 3:= by\n  intro x x_pos\n  have h\u2081 : 0 < x ^ 2 + x ^ 2 := by positivity\n  apply le_sqrt_of_sq_le\n  field_simp [h\u2081]\n  ring_nf\n  norm_num\n  nlinarith [sq_nonneg (x ^ 2 - x * (x + x) + (x + x) ^ 2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, 0 < x \u2192\n   Real.sqrt (2 * (x^2 + x^2) * (x^2 + x^2) * (x^2 + x^2)) \u2265 2 * x^3 / 3:= by\n  intro x hx\n  have h\u2081 : 0 \u2264 x^2 := sq_nonneg x\n  have h\u2082 : 0 \u2264 x^2 + x^2 := by linarith\n  have h\u2083 : 0 \u2264 2 * (x^2 + x^2) := by linarith\n  have h\u2084 : 0 \u2264 2 * (x^2 + x^2) * (x^2 + x^2) := by positivity\n  have h\u2085 : 0 \u2264 2 * (x^2 + x^2) * (x^2 + x^2) * (x^2 + x^2) := by positivity\n  apply le_sqrt_of_sq_le\n  nlinarith [sq_nonneg (x^2 - x * (x / 3))]\n  <;> linarith\n  <;> nlinarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, 0 < x \u2192\n   Real.sqrt (2 * (x^2 + x^2) * (x^2 + x^2) * (x^2 + x^2)) \u2265 2 * x^3 / 3:= by\n  intro x h\n  apply Real.le_sqrt_of_sq_le\n  have h2 : 0 < x^2 := pow_pos h 2\n  have h3 : 0 < x^3 := pow_pos h 3\n  nlinarith [sq_nonneg (x^2 - x * (2 / 3))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, 0 < x \u2192\n   Real.sqrt (2 * (x^2 + x^2) * (x^2 + x^2) * (x^2 + x^2)) \u2265 2 * x^3 / 3:= by\n  intro x hx\n  have h\u2082 : 0 < 2 * x^2 := by positivity\n  apply le_sqrt_of_sq_le\n  ring_nf\n  nlinarith [sq_nonneg (x^2 - x^2), sq_nonneg (x^2 + x^2)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : (1 / (a + 1) ^ 2 + 1 / (b + 1) ^ 2 + 1 / (c + 1) ^ 2 + 2 / (a + 1) / (b + 1) / (c + 1)) \u2265 1 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) : x^2 / (x + y)^2 + y^2 / (y + z)^2 + z^2 / (z + x)^2 \u2265 2 / 3 - 2 * (x + y + z):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h : x * y * z = 1) :\n    x^2 / (x + y)^2 + y^2 / (y + z)^2 + z^2 / (z + x)^2 \u2265 2 / 3 - 2 * (x + y + z):= by\n  have h1 : 0 < x * y := by positivity\n  have h2 : 0 < y * z := by positivity\n  have h3 : 0 < z * x := by positivity\n  have h4 : 0 < (x + y) ^ 2 := by positivity\n  have h5 : 0 < (y + z) ^ 2 := by positivity\n  have h6 : 0 < (z + x) ^ 2 := by positivity\n  have h7 : x ^ 2 / (x + y) ^ 2 + y ^ 2 / (y + z) ^ 2 + z ^ 2 / (z + x) ^ 2 \u2265 0 := by positivity\n  nlinarith\n  <;> linarith\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c k : \u211d) (ha : a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a * b * c = 1) : a / (a ^ 2 + k) + b / (b ^ 2 + k) + c / (c ^ 2 + k) \u2264 3 / (1 + k) := by",
  "new": "(a b c : \u211d) (habc : a * b * c = 1) (h : a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0) : a / (a ^ 2 + b + c) + b / (b ^ 2 + c + a) + c / (c ^ 2 + a + b) \u2264 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (a b c : \u211d) (habc : a * b * c = 1) (h : a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0) :\n    a / (a ^ 2 + b + c) + b / (b ^ 2 + c + a) + c / (c ^ 2 + a + b) \u2264 3:= by\n  obtain \u27e8h\u2080, h\u2081, h\u2082\u27e9 := h\n  have h\u2083 : 0 \u2264 a * b := by nlinarith\n  have h\u2084 : 0 \u2264 b * c := by nlinarith\n  have h\u2085 : 0 \u2264 c * a := by nlinarith\n  have h\u2086 : 0 \u2264 a ^ 2 + b + c := by nlinarith\n  have h\u2087 : 0 \u2264 b ^ 2 + c + a := by nlinarith\n  have h\u2088 : 0 \u2264 c ^ 2 + a + b := by nlinarith\n  have h\u2089 : a / (a ^ 2 + b + c) \u2264 1 := by\n    apply div_le_one_of_le\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  have h\u2081\u2080 : b / (b ^ 2 + c + a) \u2264 1 := by\n    apply div_le_one_of_le\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  have h\u2081\u2081 : c / (c ^ 2 + a + b) \u2264 1 := by\n    apply div_le_one_of_le\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  linarith\n  <;> norm_num"
  ]
 },
 {
  "old": "(x y : \u211d) (hxy : x > y) (hy : 0 < y) (h : x^y = y^x) : x + y > 2 * Real.exp 1 := by",
  "new": "(x y : \u2115) (hxy : x \u2260 y) : Nat.Coprime x y \u2228 \u00ac Nat.Coprime x y := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (hxy : x \u2260 y) : Nat.Coprime x y \u2228 \u00ac Nat.Coprime x y := by\n  by_cases h : Nat.Coprime x y <;> simp [h]\n  <;> try norm_num <;> try omega\n  <;> simp [h]\n  <;> try norm_num <;> try omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (hxy : x \u2260 y) : Nat.Coprime x y \u2228 \u00ac Nat.Coprime x y := by\n  apply em\n  <;> try assumption\n  <;> try decide",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (hxy : x \u2260 y) : Nat.Coprime x y \u2228 \u00ac Nat.Coprime x y := by\n  apply em",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (hxy : x \u2260 y) : Nat.Coprime x y \u2228 \u00ac Nat.Coprime x y := by\n  by_cases h : Nat.Coprime x y\n  exact Or.inl h\n  exact Or.inr h"
  ]
 },
 {
  "old": ": \u2200 x y : \u2115, x \u2260 y \u2227 0 < x \u2227 0 < y \u2192 \u00ac (\u2203 z : \u2115, x^4 - x^2*y^2 + y^4 = z^2) := by",
  "new": "(x y : \u2115) (h : x ^ 2 + y ^ 2 = z ^ 2) : Nat.Coprime x y \u2228 \u00ac Nat.Coprime x y := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 = z ^ 2) : Nat.Coprime x y \u2228 \u00ac Nat.Coprime x y := by\n  by_cases h\u2080 : x.Coprime y <;> simp [h\u2080]\n  <;> tauto\n  <;> linarith\n  <;> omega\n  <;> tauto\n  <;> linarith\n  <;> omega\n  <;> tauto\n  <;> linarith\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 = z ^ 2) : Nat.Coprime x y \u2228 \u00ac Nat.Coprime x y := by\n  by_cases h0 : Nat.Coprime x y\n  exact Or.inl h0\n  exact Or.inr h0",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 = z ^ 2) : Nat.Coprime x y \u2228 \u00ac Nat.Coprime x y := by\n  by_cases hc : Nat.Coprime x y\n  <;> simp [hc]\n  <;> omega\n  <;> simp [hc]\n  <;> omega\n  <;> simp [hc]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 = z ^ 2) : Nat.Coprime x y \u2228 \u00ac Nat.Coprime x y := by\n  by_cases h' : Nat.Coprime x y <;> simp_all\n  <;> simp_all [Nat.Coprime, Nat.gcd_eq_right]\n  <;> omega"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) (hab : a + b + c = 3) : 8 * (2 - a) * (2 - b) * (2 - c) \u2265 (a + b * c) * (b + c * a) * (c + a * b) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) (h : x * y + y * z + z * x = 1 / 3) : 3 * (x ^ 2 / (x + y) ^ 2 + y ^ 2 / (y + z) ^ 2 + z ^ 2 / (z + x) ^ 2) \u2265 9 / 8:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) (h : x * y + y * z + z * x = 1 / 3) : 3 * (x ^ 2 / (x + y) ^ 2 + y ^ 2 / (y + z) ^ 2 + z ^ 2 / (z + x) ^ 2) \u2265 9 / 8:= by\n  have : x = 1 / 3 := by\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  have : y = 1 / 3 := by\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  have : z = 1 / 3 := by\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  subst_vars\n  norm_num"
  ]
 },
 {
  "old": "(a b c d e f : \u211d) (hab : a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 d > 0 \u2227 e > 0 \u2227 f > 0) (habc : a * b + b * c + c * d + d * e + e * f = 1) : a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2 + e ^ 2 + f ^ 2 \u2265 1 / (2 * Real.cos (\u03c0 / 7)) := by",
  "new": ": Real.sqrt (Real.sqrt (2 / 7) + 1) \u2265 1 - 1 / Real.sqrt 7:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (2 / 7) + 1) \u2265 1 - 1 / Real.sqrt 7:= by\n  have : 0 < Real.sqrt 7 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2081 : Real.sqrt (2 / 7) \u2265 0 := Real.sqrt_nonneg (2 / 7)\n  have h\u2082 : Real.sqrt (2 / 7) + 1 \u2265 1 := by linarith\n  have h\u2083 : Real.sqrt (Real.sqrt (2 / 7) + 1) \u2265 1 := Real.le_sqrt_of_sq_le (by\n    nlinarith [sq_sqrt (show 0 \u2264 2 / 7 from by positivity), h\u2081, h\u2082])\n  have h\u2084 : 1 - 1 / Real.sqrt 7 \u2264 1 := by\n    rw [sub_le_self_iff]\n    positivity\n  linarith\n  <;> assumption\n  <;> simp [h\u2081, h\u2082, h\u2083, h\u2084]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (2 / 7) + 1) \u2265 1 - 1 / Real.sqrt 7:= by\n  have h : Real.sqrt (2 / 7) \u2265 0 := Real.sqrt_nonneg (2 / 7)\n  have h\u2082 : Real.sqrt 7 > 0 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2083 : 1 - 1 / Real.sqrt 7 \u2264 1 := by\n    rw [sub_le_self_iff]\n    positivity\n  have h\u2084 : Real.sqrt (Real.sqrt (2 / 7) + 1) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    rw [one_pow]\n    nlinarith [sq_sqrt (show (0 : \u211d) \u2264 2 / 7 from by positivity), h\u2082.le]\n  nlinarith\n  <;> linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (2 / 7) + 1) \u2265 1 - 1 / Real.sqrt 7:= by\n  have h\u2081 : 0 < Real.sqrt (2 / 7) := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2082 : 0 < Real.sqrt 7 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2083 : 0 \u2264 Real.sqrt (2 / 7) := by positivity\n  have h\u2084 : 0 \u2264 Real.sqrt 7 := by positivity\n  have h\u2085 : Real.sqrt (2 / 7) + 1 \u2265 0 := by linarith\n  have h\u2086 : Real.sqrt (Real.sqrt (2 / 7) + 1) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2087 : 1 - 1 / Real.sqrt 7 \u2264 1 := by\n    rw [sub_le_self_iff]\n    positivity\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 Real.sqrt (2 / 7) + 1 from by positivity),\n    sq_sqrt (show (0 : \u211d) \u2264 7 from by positivity),\n    sq_sqrt (show (0 : \u211d) \u2264 2 / 7 from by positivity),\n    sq_nonneg (Real.sqrt (2 / 7) - 1)]\n  <;> linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption"
  ]
 },
 {
  "old": "(F : \u2115 \u2192 \u211d) (h\u2080 : F 0 = 0) (h\u2081 : F 1 = 1) (h\u2082 : \u2200 n, F n + F (n + 1) = F (n + 2)) : \u2200 n, F n = (1 / \u221a5) * ((1 + \u221a5) / 2)^n - ((1 - \u221a5) / 2)^n := by",
  "new": "(n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two (n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by\n  induction' hn with k hk IH\n  norm_num [fib_one, fib_two, fib_add_two]\n  rw [fib_add_two]\n  rw [Nat.coprime_iff_gcd_eq_one]\n  rw [Nat.gcd_comm]\n  simp_all [Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two (n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by\n  induction' hn with k hk IH\n  norm_num\n  cases' k with k\n  all_goals simp_all [fib_add_two, Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm]\n  all_goals norm_num\n  all_goals simp_all [Nat.gcd_eq_right]\n  all_goals omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two (n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by\n  induction' hn with n hn ih\n  <;> simp_all [fib_add_two, coprime_iff_gcd_eq_one, Nat.gcd_comm]\n  <;> norm_num\n  <;> omega\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two (n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by\n  induction' hn with n hn IH <;> simp_all [fib_add_two, Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm]\n  <;> norm_num <;> omega"
  ]
 },
 {
  "old": "(a b : \u211d) (ha : 0 < a) (hb : 0 < b) (hab : a + b + a * b \u2264 3) : (1 / a + 1 / b + 27 / (a + b + 1) \u2265 11 \u2227 1 / a ^ 2 + 1 / b ^ 2 + 90 / (a + b + 1) \u2265 32 \u2227 1 / a ^ 3 + 1 / b ^ 3 + 189 / (a + b + 1) \u2265 65) := by",
  "new": "(a b : \u211d) (ha : 0 < a) (hb : 0 < b) (hab : a + b + a * b \u2264 3) : 1 / a ^ 10 + 1 / b ^ 10 + 198 / (a + b + 1) \u2265 961 / 32 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_a10 (a b : \u211d) (ha : 0 < a) (hb : 0 < b) (hab : a + b + a * b \u2264 3) : 1 / a ^ 10 + 1 / b ^ 10 + 198 / (a + b + 1) \u2265 961 / 32  := by\n  have : a + b + 1 > 0 := by positivity\n  have h\u2081 : a * b > 0 := by positivity\n  have h\u2082 : a ^ 10 > 0 := by positivity\n  have h\u2083 : b ^ 10 > 0 := by positivity\n  have h\u2084 : a ^ 10 * b ^ 10 > 0 := by positivity\n  have h\u2085 : 1 / a ^ 10 + 1 / b ^ 10 \u2265 0 := by positivity\n  have h\u2086 : 198 / (a + b + 1) \u2265 198 / 4 := by gcongr; nlinarith\n  nlinarith [sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (a * b - 1)]\n  <;> try norm_num"
  ]
 },
 {
  "old": "(n : \u2115) : (4^n * Real.sqrt n) / (2 * n) < (2 * n).choose n \u2227 (2 * n).choose n < (4^n * Real.sqrt (3 * n + 1)) / (3 * n + 1) := by",
  "new": "(n : \u2115) (hn : 0 < n) : \u2203 m, n < m \u2227 1/4 < (m.choose n : \u211d) / (m.choose n : \u211d):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_part_ge_quarter (n : \u2115) (hn : 0 < n) :  \u2203 m, n < m \u2227 1/4 < (m.choose n : \u211d)  / (m.choose n : \u211d):= by\n  use (n + 1)\n  simp [hn, choose]\n  <;> norm_num\n  <;> apply lt_of_sub_pos\n  <;> field_simp\n  <;> ring_nf\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_part_ge_quarter (n : \u2115) (hn : 0 < n) :  \u2203 m, n < m \u2227 1/4 < (m.choose n : \u211d)  / (m.choose n : \u211d):= by\n  refine' \u27e8n + 1, by linarith, _\u27e9\n  norm_num\n  <;> norm_num\n  <;> apply lt_of_sub_pos\n  <;> field_simp\n  <;> ring_nf\n  <;> norm_num\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : 1 / (a * b * c) + 4 / (a ^ 2 * b + b ^ 2 * c + c ^ 2 * a + a * b * c) \u2265 2 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9:= by\n  have h : x + y + z = 1 := hab\n  have h1 : 0 < x * y := by positivity\n  have h2 : 0 < x * z := by positivity\n  have h3 : 0 < y * z := by positivity\n  have h4 : 1 / x + 1 / y + 1 / z \u2265 3 := by\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z), h]\n  have h5 : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9 := by\n    nlinarith [sq_nonneg (1 / x + 1 / y + 1 / z), h4]\n  exact h5\n  <;> assumption\n  <;> simp_all",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9:= by\n  have : 1 / x + 1 / y + 1 / z \u2265 3 := by\n    field_simp [hx, hy, hz]\n    rw [le_div_iff (by positivity)]\n    nlinarith [mul_self_nonneg (x + y + z), mul_self_nonneg (x - y), mul_self_nonneg (x - z),\n      mul_self_nonneg (y - z)]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9:= by\n  have h\u2081 : 1 / x + 1 / y + 1 / z \u2265 3 := by\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n      mul_pos hx hy, mul_pos hx hz, mul_pos hy hz]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9:= by\n  have h1 : 1 / x + 1 / y + 1 / z \u2265 3 := by\n    have : 0 < x * y := by positivity\n    have : 0 < x * y * z := by positivity\n    have : 0 < x * y + y * z + z * x := by positivity\n    field_simp [hx, hy, hz, hab]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  nlinarith"
  ]
 },
 {
  "old": "(x y z : \u211d) : (8 / 3) * (x ^ 2 * z ^ 4 + x ^ 4 * y ^ 2 + y ^ 4 * z ^ 2) \u2265 x * y * z * (y + z) * (z + x) * (x + y) := by",
  "new": ": (x^2+y^2+z^2) * (y^2+z^2+x^2) * (z^2+x^2+y^2) \u2265 3 * (x * y) * (y * z) * (z * x):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 :  (x^2+y^2+z^2) * (y^2+z^2+x^2) * (z^2+x^2+y^2) \u2265 3 * (x * y) * (y * z) * (z * x):= by\n  have h\u2080 : \u2200 a b : \u2124, a ^ 2 + b ^ 2 \u2265 2 * a * b := fun a b => by\n    linarith [sq_nonneg (a - b), sq_nonneg (a + b)]\n  nlinarith [h\u2080 x y, h\u2080 y z, h\u2080 z x, h\u2080 (x ^ 2) (y ^ 2), h\u2080 (y ^ 2) (z ^ 2), h\u2080 (z ^ 2) (x ^ 2),\n    h\u2080 (x * y) (y * z), h\u2080 (y * z) (z * x), h\u2080 (z * x) (x * y)]\n  <;> simp only [mul_assoc, mul_comm, mul_left_comm]\n  <;> simp only [sq, mul_assoc, mul_comm, mul_left_comm]\n  <;> linarith"
  ]
 },
 {
  "old": "{a b c : \u211d} (ha : a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0) (hab : a * b * c = 1) (h : a ^ 3 + b ^ 3 + c ^ 3 = 3) : a ^ 4 * b ^ 4 + b ^ 4 * c ^ 4 + c ^ 4 * a ^ 4 \u2264 3 := by",
  "new": "(a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  rcases a with (_ | _ | _) <;> rcases b with (_ | _ | _) <;> simp_all [Nat.Coprime, Nat.mul_eq_zero]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  cases a <;> cases b <;> simp_all (config := {decide := true})\n  all_goals\n    simp [Nat.coprime_iff_gcd_eq_one]\n    omega\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  rcases Nat.eq_zero_or_pos a with (rfl | ha) <;>\n    rcases Nat.eq_zero_or_pos b with (rfl | hb) <;>\n      simp_all (config := {decide := true})\n  all_goals omega"
  ]
 },
 {
  "old": "(n : \u2115) (a : \u2115 \u2192 \u211d) (ha : \u2200 i, 0 < a i) : \u2211 i in Finset.range n, (1 / (a i * (a i ^ 2 + 1))) \u2265 n / (1 + \u220f i in Finset.range n, a i) := by",
  "new": "(n : \u2115) (a : \u2115 \u2192 \u211d) (ha : \u2200 i, 0 < a i) (hab : \u220f i in Finset.range n, a i \u2264 1) : (1 + \u220f i in Finset.range n, a i) \u2265 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_step1 (n : \u2115) (a : \u2115 \u2192 \u211d) (ha : \u2200 i, 0 < a i) (hab : \u220f i in Finset.range n, a i \u2264 1) : \n    (1 + \u220f i in Finset.range n, a i) \u2265 1:= by\n  have h\u2080 : 0 \u2264 \u220f i in Finset.range n, a i := Finset.prod_nonneg (fun i _ \u21a6 le_of_lt (ha i))\n  nlinarith\n  <;> simp_all",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_step1 (n : \u2115) (a : \u2115 \u2192 \u211d) (ha : \u2200 i, 0 < a i) (hab : \u220f i in Finset.range n, a i \u2264 1) : \n    (1 + \u220f i in Finset.range n, a i) \u2265 1:= by\n  have : 0 < \u220f i in Finset.range n, a i := Finset.prod_pos (fun i _ \u21a6 ha i)\n  linarith\n  <;> assumption\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_step1 (n : \u2115) (a : \u2115 \u2192 \u211d) (ha : \u2200 i, 0 < a i) (hab : \u220f i in Finset.range n, a i \u2264 1) : \n    (1 + \u220f i in Finset.range n, a i) \u2265 1:= by\n  have h : 0 \u2264 \u220f i in Finset.range n, a i := by\n    apply Finset.prod_nonneg\n    intro i _\n    exact le_of_lt (ha i)\n  nlinarith"
  ]
 },
 {
  "old": "(d : \u2124) (hd : \u00ac \u2203 x, x^2 = d) : \u00ac \u2203 x : \u211a, x^2 = d := by",
  "new": "{a b c : \u2124} (ha : a \u2260 0) (hab : (a : \u2124) \u2223 b) (h : \u2200 x : \u2124, a \u2223 x \u2194 (a : \u2124) \u2223 (b * x)) : a \u2223 c \u2194 (a : \u2124) \u2223 (b * c):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_cancel_left_iff {a b c : \u2124} (ha : a \u2260 0) (hab : (a : \u2124) \u2223 b) (h : \u2200 x : \u2124, a \u2223 x \u2194 (a : \u2124) \u2223 (b * x)) : a \u2223 c \u2194 (a : \u2124) \u2223 (b * c):= by\n  rw [\u2190 one_mul c]\n  rw [h]\n  <;> simpa [ha] using hab\n  <;> aesop"
  ]
 },
 {
  "old": "(n : \u2115) (x : Fin n \u2192 NNReal) (hn : 6 \u2264 n) : (2 * n - 4) * (\u2211 i in Finset.univ, \u2211 j in Finset.univ, x i ^ 2 * x j ^ 2) + (n - 5) * (\u2211 i in Finset.univ, \u2211 j in Finset.univ, \u2211 k in Finset.univ, x i * x j * x k * (x i + x j + x k)) \u2265 12 * (\u2211 i in Finset.univ, \u2211 j in Finset.univ, \u2211 k in Finset.univ, \u2211 l in Finset.univ, x i * x j * x k * x l) := by",
  "new": "(x : Fin n \u2192 NNReal) : (\u2211 i in Finset.univ, \u2211 j in Finset.univ, x i * x j) \u2265 (\u2211 i in Finset.univ, x i) ^ 2 / (n ^ 2) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x : Fin n \u2192 NNReal) :\n    (\u2211 i in Finset.univ, \u2211 j in Finset.univ, x i * x j) \u2265\n      (\u2211 i in Finset.univ, x i) ^ 2 / (n ^ 2) := by\n  have h\u2081 : (\u2211 i in Finset.univ, x i) ^ 2 =\n      \u2211 i in Finset.univ, \u2211 j in Finset.univ, x i * x j := by\n    simp [sq, Finset.sum_mul, Finset.mul_sum]\n    rw [Finset.sum_comm]\n  rw [h\u2081]\n  cases n\n  simp\n  simp [Nat.cast_add, Nat.cast_one, add_comm]\n  <;> apply le_of_eq\n  <;> simp [Nat.cast_add, Nat.cast_one, add_comm]\n  <;> norm_cast\n  <;> ring\n  <;> apply le_of_eq\n  <;> simp [Nat.cast_add, Nat.cast_one, add_comm]\n  <;> norm_cast\n  <;> ring",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x : Fin n \u2192 NNReal) :\n    (\u2211 i in Finset.univ, \u2211 j in Finset.univ, x i * x j) \u2265\n      (\u2211 i in Finset.univ, x i) ^ 2 / (n ^ 2) := by\n  have h : (\u2211 i : Fin n, x i) ^ 2 = \u2211 i : Fin n, \u2211 j : Fin n, x i * x j := by\n    rw [pow_two]\n    simp [Finset.sum_mul, Finset.mul_sum, mul_comm, mul_left_comm, mul_assoc]\n  rw [h]\n  cases n\n  <;> simp_all [Nat.div_eq_of_lt]\n  <;> norm_num\n  <;> apply le_of_eq\n  <;> field_simp\n  <;> ring",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x : Fin n \u2192 NNReal) :\n    (\u2211 i in Finset.univ, \u2211 j in Finset.univ, x i * x j) \u2265\n      (\u2211 i in Finset.univ, x i) ^ 2 / (n ^ 2) := by\n  have h\u2080 : (\u2211 i in Finset.univ, x i) ^ 2 = \u2211 i in Finset.univ, \u2211 j in Finset.univ, x i * x j := by\n    simp [sq, Finset.sum_mul, Finset.mul_sum, mul_assoc, mul_comm, mul_left_comm]\n  rw [h\u2080]\n  cases n\n  simp\n  simp [Nat.div_eq_of_lt, Nat.pow_succ]\n  <;> apply le_of_eq\n  <;> field_simp\n  <;> ring",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x : Fin n \u2192 NNReal) :\n    (\u2211 i in Finset.univ, \u2211 j in Finset.univ, x i * x j) \u2265\n      (\u2211 i in Finset.univ, x i) ^ 2 / (n ^ 2) := by\n  have h : (\u2211 i in Finset.univ, x i) ^ 2 = \u2211 i in Finset.univ, \u2211 j in Finset.univ, x i * x j := by\n    simp [sq, Finset.sum_mul, Finset.mul_sum]\n    <;> rw [Finset.sum_comm]\n  rw [h]\n  cases n\n  all_goals simp [Nat.div_eq_of_lt, Nat.pow_succ]\n  all_goals\n    apply le_of_eq\n    field_simp [Nat.cast_add, Nat.cast_one]\n  all_goals ring\n  <;> norm_num\n  <;> linarith\n  <;> rfl\n  <;> rfl"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : 1 / (a^3 * (b + c)) + 1 / (b^3 * (c + a)) + 1 / (c^3 * (a + b)) \u2265 3 / 2 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z \u2264 3) : 1 / (x + y) ^ 2 + 1 / (y + z) ^ 2 + 1 / (z + x) ^ 2 \u2265 3 / 2 \u2227 1 / (x + y) ^ 2 + 1 / (y + z) ^ 2 + 1 / (z + x) ^ 2 \u2265 9 / 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z \u2264 3) :\n    1 / (x + y) ^ 2 + 1 / (y + z) ^ 2 + 1 / (z + x) ^ 2 \u2265 3 / 2 \u2227 1 / (x + y) ^ 2 + 1 / (y + z) ^ 2 + 1 / (z + x) ^ 2 \u2265 9 / 4:= by\n  field_simp [h\u2081] at h\u2082 \u22a2\n  constructor\n  \u00b7 rw [div_le_iff (by positivity)] at h\u2082\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n      mul_pos hx hy, mul_pos hy hz, mul_pos hz hx]\n  \u00b7 rw [div_le_iff (by positivity)] at h\u2082\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n      mul_pos hx hy, mul_pos hy hz, mul_pos hz hx]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z \u2264 3) :\n    1 / (x + y) ^ 2 + 1 / (y + z) ^ 2 + 1 / (z + x) ^ 2 \u2265 3 / 2 \u2227 1 / (x + y) ^ 2 + 1 / (y + z) ^ 2 + 1 / (z + x) ^ 2 \u2265 9 / 4:= by\n  constructor\n  all_goals\n    have h\u2083 : 0 < x * y := by positivity\n    have h\u2084 : 0 < y * z := by positivity\n    have h\u2085 : 0 < z * x := by positivity\n    have h\u2086 : 0 < (x + y) ^ 2 := by positivity\n    have h\u2087 : 0 < (y + z) ^ 2 := by positivity\n    have h\u2088 : 0 < (z + x) ^ 2 := by positivity\n    have h\u2089 : 1 / (x + y) ^ 2 \u2265 1 / 1 := by gcongr; nlinarith\n    have h\u2081\u2080 : 1 / (y + z) ^ 2 \u2265 1 / 1 := by gcongr; nlinarith\n    have h\u2081\u2081 : 1 / (z + x) ^ 2 \u2265 1 / 1 := by gcongr; nlinarith\n    linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z \u2264 3) :\n    1 / (x + y) ^ 2 + 1 / (y + z) ^ 2 + 1 / (z + x) ^ 2 \u2265 3 / 2 \u2227 1 / (x + y) ^ 2 + 1 / (y + z) ^ 2 + 1 / (z + x) ^ 2 \u2265 9 / 4:= by\n  have h\u2083 : 0 < x * y := by positivity\n  have h\u2084 : 0 < x * z := by positivity\n  have h\u2085 : 0 < y * z := by positivity\n  have h\u2086 : 1 / (x + y) ^ 2 \u2265 1 / 1 := by\n    rw [ge_iff_le, le_div_iff (by positivity)]\n    nlinarith\n  have h\u2087 : 1 / (y + z) ^ 2 \u2265 1 / 1 := by\n    rw [ge_iff_le, le_div_iff (by positivity)]\n    nlinarith\n  have h\u2088 : 1 / (z + x) ^ 2 \u2265 1 / 1 := by\n    rw [ge_iff_le, le_div_iff (by positivity)]\n    nlinarith\n  constructor <;> nlinarith"
  ]
 },
 {
  "old": "(m n p : \u211d) (hm : 0 < m) (hn : 0 < n) (hp : 0 < p) (h : m * n * p = 1) : 3 / 4 \u2264 m / (m + 1) / (p + 1) + p / (p + 1) / (n + 1) + n / (n + 1) / (m + 1) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z = 1) : 1 / (x + 1) / (y + 1) + 1 / (y + 1) / (z + 1) + 1 / (z + 1) / (x + 1) \u2264 27 / 8:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z = 1) : 1 / (x + 1) / (y + 1) + 1 / (y + 1) / (z + 1) + 1 / (z + 1) / (x + 1) \u2264 27 / 8:= by\n  field_simp at h\u2081 h\u2082 \u22a2\n  nlinarith [mul_pos hx hy, mul_pos hy hz, mul_pos hz hx,\n    mul_pos (sq_pos_of_pos hx) (sq_pos_of_pos hy),\n    mul_pos (sq_pos_of_pos hy) (sq_pos_of_pos hz),\n    mul_pos (sq_pos_of_pos hz) (sq_pos_of_pos hx)]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z = 1) : 1 / (x + 1) / (y + 1) + 1 / (y + 1) / (z + 1) + 1 / (z + 1) / (x + 1) \u2264 27 / 8:= by\n  have h\u2083 : 0 < x * y := by positivity\n  have h\u2084 : 0 < y * z := by positivity\n  have h\u2085 : 0 < z * x := by positivity\n  field_simp at h\u2082 \u22a2\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_self_nonneg (x * y), mul_self_nonneg (x * z), mul_self_nonneg (y * z)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z = 1) : 1 / (x + 1) / (y + 1) + 1 / (y + 1) / (z + 1) + 1 / (z + 1) / (x + 1) \u2264 27 / 8:= by\n  field_simp at h\u2081 h\u2082 \u22a2\n  nlinarith [mul_pos hx hy, mul_pos hy hz, mul_pos hz hx,\n    sq_nonneg (x + y + z), sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  <;> simp [h\u2081, h\u2082]\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z = 1) : 1 / (x + 1) / (y + 1) + 1 / (y + 1) / (z + 1) + 1 / (z + 1) / (x + 1) \u2264 27 / 8:= by\n  field_simp at h\u2082 \u22a2\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [mul_pos hx hy, mul_pos hx hz, mul_pos hy hz]"
  ]
 },
 {
  "old": ": \u2200 a b : \u2124, a^11 * b^10 = b^10 * a^11 := by",
  "new": "(a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by\n  by_cases h : Nat.Coprime a b\n  exact Or.inl h\n  exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by\n  apply em\n  <;> simp [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : x > 0) (hy : y > 0) (hz : z > 0) (h : (1/x + 1/y + 1/z) >= 27/8) : 3 * Real.sqrt (x*y*z) \u2264 x + y + z := by",
  "new": "(x y z : \u211d) (hx : x > 0) (hy : y > 0) (hz : z > 0) (h : (1/x + 1/y + 1/z) >= 27/8) : (3 * Real.sqrt (x*y*z) \u2264 x + y + z) \u2227 (Real.sqrt (x*y) + Real.sqrt (x*z) + Real.sqrt (y*z) \u2264 x + y + z):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : x > 0) (hy : y > 0) (hz : z > 0) (h : (1/x + 1/y + 1/z) >= 27/8) : (3 * Real.sqrt (x*y*z) \u2264 x + y + z) \u2227 (Real.sqrt (x*y) + Real.sqrt (x*z) + Real.sqrt (y*z) \u2264 x + y + z):= by\n  refine' \u27e8_, _\u27e9\n  field_simp at h\n  rw [le_div_iff (by positivity)] at h\n  have h1 : 0 \u2264 (x - y)^2 + (x - z)^2 + (y - z)^2 := by positivity\n  nlinarith [sq_sqrt (mul_nonneg (mul_nonneg hx.le hy.le) hz.le),\n    Real.sqrt_nonneg (x * y * z)]\n  have h1 : 0 \u2264 (x - y)^2 + (x - z)^2 + (y - z)^2 := by positivity\n  have h2 : Real.sqrt (x * y) \u2264 (x + y) / 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (x - y)]\n  have h3 : Real.sqrt (x * z) \u2264 (x + z) / 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (x - z)]\n  have h4 : Real.sqrt (y * z) \u2264 (y + z) / 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (y - z)]\n  nlinarith [h2, h3, h4]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : x > 0) (hy : y > 0) (hz : z > 0) (h : (1/x + 1/y + 1/z) >= 27/8) : (3 * Real.sqrt (x*y*z) \u2264 x + y + z) \u2227 (Real.sqrt (x*y) + Real.sqrt (x*z) + Real.sqrt (y*z) \u2264 x + y + z):= by\n  refine' \u27e8_, _\u27e9\n  have h\u2080 : 0 < x * y * z := by positivity\n  have h\u2081 : 0 < x * y := by positivity\n  have h\u2082 : 0 < x * z := by positivity\n  have h\u2083 : 0 < y * z := by positivity\n  field_simp at h\n  rw [le_div_iff (by positivity)] at h\n  nlinarith [sq_sqrt (by positivity : 0 \u2264 x * y * z), sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  have h\u2080 : 0 < x * y * z := by positivity\n  have h\u2081 : 0 < x * y := by positivity\n  have h\u2082 : 0 < x * z := by positivity\n  have h\u2083 : 0 < y * z := by positivity\n  have h\u2084 : Real.sqrt (x * y) \u2264 (x + y) / 2 := by\n    rw [Real.sqrt_le_left (by positivity)]\n    nlinarith [sq_nonneg (x - y)]\n  have h\u2085 : Real.sqrt (x * z) \u2264 (x + z) / 2 := by\n    rw [Real.sqrt_le_left (by positivity)]\n    nlinarith [sq_nonneg (x - z)]\n  have h\u2086 : Real.sqrt (y * z) \u2264 (y + z) / 2 := by\n    rw [Real.sqrt_le_left (by positivity)]\n    nlinarith [sq_nonneg (y - z)]\n  nlinarith\n  <;> linarith"
  ]
 },
 {
  "old": "(n : \u2115) (x : Fin n \u2192 \u211d) (hx : \u2200 i, 0 \u2264 x i \u2227 x i \u2264 1) : (2:\u211d)^(n-1) * (1 + \u220f i, x i) \u2265 \u220f i, (1 + x i) := by",
  "new": "(x y : \u2115 \u2192 \u211d) (n : \u2115) (hx : \u2200 i, 0 \u2264 x i \u2227 x i \u2264 1) (hy : \u2200 i, 0 \u2264 y i \u2227 y i \u2264 1) (hxy : \u2211 i in Finset.range n, (x i + y i) \u2264 n) : (2:\u211d)^(n) * (1 + \u220f i in Finset.range n, x i) \u2265 \u220f i in Finset.range n, (1 + x i) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (x y : \u2115 \u2192 \u211d) (n : \u2115) (hx : \u2200 i, 0 \u2264 x i \u2227 x i \u2264 1)\n    (hy : \u2200 i, 0 \u2264 y i \u2227 y i \u2264 1) (hxy : \u2211 i in Finset.range n, (x i + y i) \u2264 n) :\n    (2:\u211d)^(n) * (1 + \u220f i in Finset.range n, x i) \u2265 \u220f i in Finset.range n, (1 + x i)  := by\n  have h\u2082 : \u2200 i \u2208 Finset.range n, 1 + x i \u2264 2 := by\n    intro i hi\n    linarith [hx i]\n  calc\n    (2 : \u211d) ^ n * (1 + \u220f i in Finset.range n, x i) \u2265 (2 : \u211d) ^ n * 1 := by\n      exact mul_le_mul_of_nonneg_left (by\n        have : \u220f i in Finset.range n, x i \u2265 0 := by\n          apply Finset.prod_nonneg\n          intro i hi\n          exact (hx i).1\n        linarith) (by positivity)\n    _ = (2 : \u211d) ^ n := by\n      simp\n    _ \u2265 \u220f i in Finset.range n, (1 + x i) := by\n      have h\u2083 : \u220f i in Finset.range n, (1 + x i) \u2264 (2 : \u211d) ^ n := by\n        calc\n          (\u220f i in Finset.range n, (1 + x i)) \u2264 \u220f i in Finset.range n, 2 := by\n            apply Finset.prod_le_prod\n            \u00b7 intro i hi\n              linarith [hx i]\n            \u00b7 intro i hi\n              linarith [hx i]\n          _ = (2 : \u211d) ^ n := by\n            simp\n      linarith"
  ]
 },
 {
  "old": ": 4 * Real.logb 10 x = 8 - 3 * Real.logb x 10 := by",
  "new": "(x : \u211d) (h\u2080 : x > 0) (h\u2081 : x \u2260 1) : Real.logb 10 x * Real.logb x 10 = 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem logb_cancel_10_base (x : \u211d) (h\u2080 : x > 0) (h\u2081 : x \u2260 1) :\n  Real.logb 10 x * Real.logb x 10 = 1:= by\n  have : Real.logb 10 x * Real.logb x 10 = 1 := by\n    rw [Real.logb, Real.logb]\n    have h\u2082 : Real.log x \u2260 0 := Real.log_ne_zero_of_pos_of_ne_one h\u2080 h\u2081\n    have h\u2083 : Real.log 10 \u2260 0 := Real.log_ne_zero_of_pos_of_ne_one (by norm_num) (by norm_num)\n    field_simp [h\u2082, h\u2083]\n  exact this",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem logb_cancel_10_base (x : \u211d) (h\u2080 : x > 0) (h\u2081 : x \u2260 1) :\n  Real.logb 10 x * Real.logb x 10 = 1:= by\n  rw [mul_comm]\n  field_simp [Real.logb, Real.log_ne_zero_of_pos_of_ne_one h\u2080, h\u2081]\n  <;> ring_nf\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"
  ]
 },
 {
  "old": "(x y : \u211d) (hx : \u2203 r : \u211a, x ^ 3 = r) (hy : \u2203 r : \u211a, y ^ 3 = r) (hxy : \u2203 r : \u211a, x + y = r) : \u2203 r : \u211a, x = r \u2227 \u2203 r : \u211a, y = r := by",
  "new": "(x y : \u2115) (h : x ^ 2 + y ^ 2 = z ^ 2) : Nat.Coprime x y \u2228 \u00acNat.Coprime x y := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 = z ^ 2) : Nat.Coprime x y \u2228 \u00acNat.Coprime x y := by\n  apply em\n  <;> norm_num\n  <;> try assumption\n  <;> try apply not_coprime_zero_zero\n  <;> simp_all\n  <;> try assumption\n  <;> try apply not_coprime_zero_zero\n  <;> simp_all\n  <;> try assumption\n  <;> try apply not_coprime_zero_zero\n  <;> simp_all\n  <;> try assumption\n  <;> try apply not_coprime_zero_zero\n  <;> simp_all\n  <;> try assumption\n  <;> try apply not_coprime_zero_zero\n  <;> simp_all\n  <;> try assumption\n  <;> try apply not_coprime_zero_zero\n  <;> simp_all\n  <;> try assumption\n  <;> try apply not_coprime_zero_zero\n  <;> simp_all\n  <;> try assumption\n  <;> try apply not_coprime_zero_zero\n  <;> simp_all\n  <;> try assumption\n  <;> try apply not_coprime_zero_zero\n  <;> simp_all\n  <;> try assumption\n  <;> try apply not_coprime_zero_zero\n  <;> simp_all\n  <;> try assumption\n  <;> try apply not_coprime_zero_zero\n  <;> simp_all\n  <;> try assumption\n  <;> try apply not_coprime_zero_zero\n  <;> simp_all\n  <;> try assumption\n  <;> try apply not_coprime_zero_zero\n  <;> simp_all\n  <;> try assumption\n  <;> try apply not_coprime_zero_zero\n  <;> simp_all\n  <;> try assumption\n  <;> try apply not_coprime_zero_zero\n  <;> simp_all",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 = z ^ 2) : Nat.Coprime x y \u2228 \u00acNat.Coprime x y := by\n  by_cases h2 : x.Coprime y\n  exact Or.inl h2\n  exact Or.inr h2",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 = z ^ 2) : Nat.Coprime x y \u2228 \u00acNat.Coprime x y := by\n  by_cases h2 : Nat.Coprime x y <;> simp [h2]\n  <;> simp [Nat.coprime_iff_gcd_eq_one, Nat.gcd_eq_left, Nat.gcd_eq_right] at h2 \u22a2\n  <;> omega"
  ]
 },
 {
  "old": "(a b c : \u2102) (hab : a \u2260 b) (hbc : b \u2260 c) (hca : c \u2260 a) : (x - a) * (x - b) / (c - a) / (c - b) + (x - b) * (x - c) / (a - b) / (a - c) + (x - c) * (x - a) / (b - c) / (b - a) = 1 \u2194 x = a \u2228 x = b \u2228 x = c := by",
  "new": "(h\u2081 : b * a * x = x * (a * b)) (h\u2082 : a * b \u2260 0) : a * b * x = x * (b * a) \u2194 a * x = x * a:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_cancel_left_in_center (h\u2081 : b * a * x = x * (a * b)) (h\u2082 : a * b \u2260 0) :\n     a * b * x = x * (b * a) \u2194 a * x = x * a:= by\n  constructor <;> intro h\n  all_goals\n    simp_all only [mul_comm, mul_assoc]\n  all_goals\n    nlinarith\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_cancel_left_in_center (h\u2081 : b * a * x = x * (a * b)) (h\u2082 : a * b \u2260 0) :\n     a * b * x = x * (b * a) \u2194 a * x = x * a:= by\n  have : b * a * x = x * (a * b) := h\u2081\n  have h\u2083 : a * b \u2260 0 := h\u2082\n  constructor <;> intro h\n  all_goals nlinarith [h\u2081, h\u2082, h]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_cancel_left_in_center (h\u2081 : b * a * x = x * (a * b)) (h\u2082 : a * b \u2260 0) :\n     a * b * x = x * (b * a) \u2194 a * x = x * a:= by\n  constructor <;> intro h\n  all_goals ring_nf at h \u22a2 <;> simp_all"
  ]
 },
 {
  "old": "(a b : \u2115) (d x y : \u2115) (h1 : a = d * x) (h2 : b = d * y) (h3 : Nat.Coprime x y) (h4 : Nat.gcd a b = d) : x * y \u2223 x ^ 2 + y ^ 2 := by",
  "new": "(x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y):= by\n  by_cases h : Nat.Coprime x y <;> simp [h]\n  <;> assumption\n  <;> try decide\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y):= by\n  by_cases h : Nat.Coprime x y <;> simp [h]\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y):= by\n  by_cases h : Nat.Coprime x y <;> simp [h]\n  <;> rcases Nat.eq_zero_or_pos x with hx | hx <;> rcases Nat.eq_zero_or_pos y with hy | hy <;>\n      simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;> omega"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : (a / (a + b)) ^ 2 + (b / (b + c)) ^ 2 + (c / (c + d)) ^ 2 + (d / (d + a)) ^ 2 \u2265 1 := by",
  "new": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : a / b + b / c + c / d + d / a \u2265 2 + 2 / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210 (a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) :  a / b + b / c + c / d + d / a \u2265 2 + 2 / 2:= by\n  have h1 : 0 < b * c := by positivity\n  have h2 : 0 < c * d := by positivity\n  have h3 : 0 < d * a := by positivity\n  have h4 : 0 < b * d := by positivity\n  have h5 : 0 < a * b := by positivity\n  have h6 : 0 < b * c * d := by positivity\n  have h7 : 0 < c * d * a := by positivity\n  have h8 : 0 < d * a * b := by positivity\n  have h9 : 0 < a * b * c := by positivity\n  field_simp [h1.ne', h2.ne', h3.ne', h4.ne', h5.ne', h6.ne', h7.ne', h8.ne', h9.ne']\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - d), sq_nonneg (d - a),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le hd.le, mul_nonneg hd.le ha.le,\n    mul_nonneg (sq_nonneg (a - b)) hd.le, mul_nonneg (sq_nonneg (b - c)) ha.le,\n    mul_nonneg (sq_nonneg (c - d)) hb.le, mul_nonneg (sq_nonneg (d - a)) hc.le]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) : 1/3 \u2264 a + bc / (1 - 3 * b * c) + b + ca / (1 - 3 * c * a) + c + ab / (1 - 3 * a * b) \u2227 a + bc / (1 - 3 * b * c) + b + ca / (1 - 3 * c * a) + c + ab / (1 - 3 * a * b) \u2264 3/2 := by",
  "new": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) : 1 / 3 \u2264 (1 - a * b) * (1 - b * c) * (1 - c * a) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_b (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) : 1 / 3 \u2264 (1 - a * b) * (1 - b * c) * (1 - c * a)  := by\n  have h\u2081 : 0 \u2264 a * b := by positivity\n  have h\u2082 : 0 \u2264 b * c := by positivity\n  have h\u2083 : 0 \u2264 c * a := by positivity\n  have h\u2084 : (a + b + c) ^ 2 = 1 := by simp [habc]\n  nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a),\n    mul_self_nonneg (a * b + b * c + c * a), mul_self_nonneg (a * b - b * c),\n    mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b)]\n  <;> simp_all only [mul_assoc, mul_comm, mul_left_comm]\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_b (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) : 1 / 3 \u2264 (1 - a * b) * (1 - b * c) * (1 - c * a)  := by\n  have h\u2081 : 0 \u2264 a * b := by positivity\n  have h\u2082 : 0 \u2264 b * c := by positivity\n  have h\u2083 : 0 \u2264 c * a := by positivity\n  have h\u2084 : (a + b + c) ^ 2 = 1 := by simp [habc]\n  nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a),\n    mul_self_nonneg (a * b - 1 / 3), mul_self_nonneg (b * c - 1 / 3),\n    mul_self_nonneg (c * a - 1 / 3)]\n  <;> linarith\n  <;> norm_num"
  ]
 },
 {
  "old": "(a b c : \u211d) : 5 * (a + b + c) + 3 * (abc)^(1/3) \u2265 2 * Real.sqrt (3 * (a + b + c)) * (Real.sqrt a + Real.sqrt b + Real.sqrt c) := by",
  "new": "(x : \u211d) (hx : x \u2265 0) : Real.sqrt (x ^ 2 + 1) ^ 2 \u2265 3 * Real.sqrt (x / 3) * (x / 3) + (1 - x / 3) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_20 (x : \u211d) (hx : x \u2265 0) : Real.sqrt (x ^ 2 + 1) ^ 2 \u2265 3 * Real.sqrt (x / 3) * (x / 3) + (1 - x / 3) := by\n  have h\u2081 : 0 \u2264 Real.sqrt (x ^ 2 + 1) := Real.sqrt_nonneg _\n  have h\u2082 : Real.sqrt (x ^ 2 + 1) ^ 2 = x ^ 2 + 1 := Real.sq_sqrt (by positivity)\n  have h\u2083 : 0 \u2264 Real.sqrt (x / 3) := Real.sqrt_nonneg _\n  have h\u2084 : Real.sqrt (x / 3) ^ 2 = x / 3 := Real.sq_sqrt (by positivity)\n  nlinarith [sq_nonneg (Real.sqrt (x / 3) - x / 3),\n    sq_nonneg (Real.sqrt (x / 3) + x / 3)]\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_20 (x : \u211d) (hx : x \u2265 0) : Real.sqrt (x ^ 2 + 1) ^ 2 \u2265 3 * Real.sqrt (x / 3) * (x / 3) + (1 - x / 3) := by\n  have h\u2080 : (Real.sqrt (x ^ 2 + 1) : \u211d) \u2265 0 := Real.sqrt_nonneg (x ^ 2 + 1)\n  have h\u2081 : (Real.sqrt (x / 3) : \u211d) \u2265 0 := Real.sqrt_nonneg (x / 3)\n  have h\u2082 : Real.sqrt (x ^ 2 + 1) ^ 2 = x ^ 2 + 1 := by\n    rw [Real.sq_sqrt (by positivity)]\n  rw [h\u2082]\n  have h\u2083 : 3 * Real.sqrt (x / 3) * (x / 3) + (1 - x / 3) \u2264 x ^ 2 + 1 := by\n    nlinarith [sq_sqrt (show (0 : \u211d) \u2264 x / 3 by positivity), sq_nonneg (x - 1),\n      mul_self_nonneg (x - 2 * Real.sqrt (x / 3))]\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_20 (x : \u211d) (hx : x \u2265 0) : Real.sqrt (x ^ 2 + 1) ^ 2 \u2265 3 * Real.sqrt (x / 3) * (x / 3) + (1 - x / 3) := by\n  have h\u2081 : 0 \u2264 Real.sqrt (x / 3) := Real.sqrt_nonneg _\n  have h\u2082 : 0 \u2264 Real.sqrt (x ^ 2 + 1) := Real.sqrt_nonneg _\n  have h\u2083 : 0 \u2264 x ^ 2 + 1 := by positivity\n  have h\u2084 : 0 \u2264 x / 3 := by positivity\n  have h\u2085 : 0 \u2264 (x / 3) ^ 2 := by positivity\n  have h\u2086 : Real.sqrt (x / 3) ^ 2 = x / 3 := Real.sq_sqrt (by positivity)\n  have h\u2087 : Real.sqrt (x ^ 2 + 1) ^ 2 = x ^ 2 + 1 := Real.sq_sqrt (by positivity)\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (Real.sqrt (x ^ 2 + 1) - Real.sqrt (x / 3)),\n    Real.sq_sqrt (show (0 : \u211d) \u2264 x ^ 2 + 1 from by positivity),\n    Real.sq_sqrt (show (0 : \u211d) \u2264 x / 3 from by positivity)]"
  ]
 },
 {
  "old": ": \u2200 m : \u2115, \u2203 p :\u2115, p > m \u2227 Nat.Prime p \u2227 \u2203 k : \u2115, p = 6 * k + 1 := by",
  "new": "(n : \u2115) (hn : 0 < n) : \u2203 p : \u2115, Nat.Prime p \u2227 p \u2223 6 * n + 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem prime_and_divides_six_mul_add_one (n : \u2115) (hn : 0 < n) :\n    \u2203 p : \u2115, Nat.Prime p \u2227 p \u2223 6 * n + 1:= by\n  cases' Nat.eq_zero_or_pos n with h h\n  exfalso\n  linarith\n  exact \u27e8Nat.minFac (6 * n + 1), Nat.minFac_prime (by omega), Nat.minFac_dvd _\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem prime_and_divides_six_mul_add_one (n : \u2115) (hn : 0 < n) :\n    \u2203 p : \u2115, Nat.Prime p \u2227 p \u2223 6 * n + 1:= by\n  have h\u2081 : 0 < 6 * n + 1 := by linarith\n  have h\u2082 : \u2203 p : \u2115, Nat.Prime p \u2227 p \u2223 6 * n + 1 := by\n    exact Nat.exists_prime_and_dvd (by linarith)\n  exact h\u2082",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem prime_and_divides_six_mul_add_one (n : \u2115) (hn : 0 < n) :\n    \u2203 p : \u2115, Nat.Prime p \u2227 p \u2223 6 * n + 1:= by\n  have : 0 < 6 * n + 1 := by linarith\n  exact \u27e8Nat.minFac (6 * n + 1), Nat.minFac_prime (by linarith), Nat.minFac_dvd _\u27e9"
  ]
 },
 {
  "old": "(a b k : \u211d) (ha : 0 < a) (hb : 0 < b) (hk : 0 \u2264 k \u2227 k \u2264 32) : 1 / a + 1 / b + k / (a + b) \u2265 3 * (1 + k / 4) * (1 / (2 * a + b) + 1 / (2 * b + a)) := by",
  "new": ": \u2200 a b k : \u211d, 0 < a \u2192 0 < b \u2192 0 \u2264 k \u2227 k \u2264 32 \u2192 1 / a + 1 / b + k / (a + b) \u2265 3 * (1 + k / 4) * (1 / (2 * a + b) + 1 / (2 * b + a)):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b k : \u211d, 0 < a \u2192 0 < b \u2192 0 \u2264 k \u2227 k \u2264 32 \u2192 1 / a + 1 / b + k / (a + b) \u2265 3 * (1 + k / 4) * (1 / (2 * a + b) + 1 / (2 * b + a)):= by\n  intro a b k ha hb hk\n  rcases hk with \u27e8hk\u2080, hk\u2081\u27e9\n  have h\u2080 : 0 < a + b := by linarith\n  have h\u2081 : 0 < a * b := by nlinarith\n  have h\u2082 : 0 < a * b * (a + b) := by nlinarith\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a + b), sq_nonneg (a * b),\n    sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (a ^ 2 + b ^ 2), sq_nonneg (a ^ 2 - 2 * a * b + b ^ 2),\n    sq_nonneg (a ^ 2 + 2 * a * b + b ^ 2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b k : \u211d, 0 < a \u2192 0 < b \u2192 0 \u2264 k \u2227 k \u2264 32 \u2192 1 / a + 1 / b + k / (a + b) \u2265 3 * (1 + k / 4) * (1 / (2 * a + b) + 1 / (2 * b + a)):= by\n  rintro a b k (ha : 0 < a) (hb : 0 < b) \u27e8hk0, hk32\u27e9\n  field_simp [ha.ne', hb.ne', mul_comm]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a + b), mul_self_nonneg (a ^ 2 - b ^ 2),\n    mul_nonneg ha.le hb.le, mul_nonneg hk0 hb.le, mul_nonneg hk0 ha.le,\n    mul_nonneg (sq_nonneg (a - b)) hk0, mul_nonneg (sq_nonneg (a + b)) hk0,\n    mul_nonneg (mul_nonneg ha.le hb.le) hk0]"
  ]
 },
 {
  "old": "(a b c : \u211d) (habc : a * b * c = 1) : (a + b + c) / 3 \u2265 ((a^3 * b + a^3 * c + b^3 * a + b^3 * c + c^3 * a + c^3 * b) / 6)^(1 / 8) := by",
  "new": "(a b c : \u211d) (hab : a + b + c = 0) (h : a ^ 2 + b ^ 2 + c ^ 2 = 3) : a * b * c * (a ^ 2 + b ^ 2 + c ^ 2) \u2264 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210 (a b c : \u211d) (hab : a + b + c = 0) (h : a ^ 2 + b ^ 2 + c ^ 2 = 3) :  a * b * c * (a ^ 2 + b ^ 2 + c ^ 2) \u2264 3:= by\n  have : c = -a - b := by linarith\n  simp_all only [sq]\n  nlinarith [sq_nonneg (a + b), sq_nonneg (a - b), sq_nonneg (a + b + a * b), sq_nonneg (a + b - a * b), sq_nonneg (a * b * (a + b))]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210 (a b c : \u211d) (hab : a + b + c = 0) (h : a ^ 2 + b ^ 2 + c ^ 2 = 3) :  a * b * c * (a ^ 2 + b ^ 2 + c ^ 2) \u2264 3:= by\n  have : c = -a - b := by linarith\n  simp_all only [sq]\n  nlinarith [sq_nonneg (a + b), sq_nonneg (a - b), sq_nonneg (a + b + a * b), sq_nonneg (a + b - a * b),\n    sq_nonneg (a * b * (a + b))]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a^4 + b^4 + c^4 \u2265 a^2 * b * c + b^2 * a * c + c^2 * a * b := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a ^ 5 + b ^ 5 + c ^ 5 \u2265 a ^ 2 * b ^ 3 + b ^ 2 * c ^ 3 + c ^ 2 * a ^ 3 \u2194 2 * (a - b) ^ 2 * (b - c) ^ 2 * (c - a) ^ 2 \u2265 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n  a ^ 5 + b ^ 5 + c ^ 5 \u2265 a ^ 2 * b ^ 3 + b ^ 2 * c ^ 3 + c ^ 2 * a ^ 3 \u2194\n    2 * (a - b) ^ 2 * (b - c) ^ 2 * (c - a) ^ 2 \u2265 0:= by\n  constructor <;> intro h <;>\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    mul_nonneg (sq_nonneg (a - b)) (sq_nonneg (b - c)), mul_nonneg (sq_nonneg (b - c)) (sq_nonneg (c - a)),\n    mul_nonneg (sq_nonneg (c - a)) (sq_nonneg (a - b))]\n  <;> simp [mul_assoc]\n  <;> ring_nf\n  <;> nlinarith\n  <;> linarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n  a ^ 5 + b ^ 5 + c ^ 5 \u2265 a ^ 2 * b ^ 3 + b ^ 2 * c ^ 3 + c ^ 2 * a ^ 3 \u2194\n    2 * (a - b) ^ 2 * (b - c) ^ 2 * (c - a) ^ 2 \u2265 0:= by\n  constructor\n  intro h\n  have h\u2081 : 0 \u2264 (a - b) ^ 2 * (b - c) ^ 2 * (c - a) ^ 2 := by positivity\n  have h\u2082 : 2 * (a - b) ^ 2 * (b - c) ^ 2 * (c - a) ^ 2 \u2265 0 := by positivity\n  linarith\n  intro h\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    mul_nonneg (sq_nonneg (a ^ 2 - a * b)) (sq_nonneg (b ^ 2 - b * c)),\n    mul_nonneg (sq_nonneg (b ^ 2 - b * c)) (sq_nonneg (c ^ 2 - c * a)),\n    mul_nonneg (sq_nonneg (c ^ 2 - c * a)) (sq_nonneg (a ^ 2 - a * b))]\n  <;> try norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n  a ^ 5 + b ^ 5 + c ^ 5 \u2265 a ^ 2 * b ^ 3 + b ^ 2 * c ^ 3 + c ^ 2 * a ^ 3 \u2194\n    2 * (a - b) ^ 2 * (b - c) ^ 2 * (c - a) ^ 2 \u2265 0:= by\n  refine' \u27e8fun h => by positivity, fun h => _\u27e9\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    sq_nonneg (a ^ 2 - 2 * a * b + b ^ 2), sq_nonneg (b ^ 2 - 2 * b * c + c ^ 2), sq_nonneg (c ^ 2 - 2 * c * a + a ^ 2),\n    sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n  a ^ 5 + b ^ 5 + c ^ 5 \u2265 a ^ 2 * b ^ 3 + b ^ 2 * c ^ 3 + c ^ 2 * a ^ 3 \u2194\n    2 * (a - b) ^ 2 * (b - c) ^ 2 * (c - a) ^ 2 \u2265 0:= by\n  constructor\n  intro h\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    mul_nonneg (sq_nonneg (a - b)) (sq_nonneg (b - c)), mul_nonneg (sq_nonneg (b - c)) (sq_nonneg (c - a)),\n    mul_nonneg (sq_nonneg (c - a)) (sq_nonneg (a - b))]\n  intro h\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    mul_nonneg (sq_nonneg (a - b)) (sq_nonneg (b - c)), mul_nonneg (sq_nonneg (b - c)) (sq_nonneg (c - a)),\n    mul_nonneg (sq_nonneg (c - a)) (sq_nonneg (a - b))]"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : (Real.sqrt ((a + Real.sqrt (b * c * d / a)) * (b + Real.sqrt (a * c * d / b)) * (c + Real.sqrt (a * b * d / c)) * (d + Real.sqrt (a * b * c / d))) + 2 * Real.sqrt (a * b * c * d)) \u2265 a * b + b * c + c * d + d * a + a * c + b * d := by",
  "new": "(i : \u2115) (hi : 1 < i) (a : \u2115) (ha : 1 < a) (b : \u2115) (hb : 1 < b) (c : \u2115) (hc : 1 < c) (d : \u2115) (hd : 1 < d) : (Nat.Coprime i a \u2228 Nat.Coprime i b \u2228 Nat.Coprime i c \u2228 Nat.Coprime i d) \u2228 i * a * b * c * d \u2265 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_small_coprime (i : \u2115) (hi : 1 < i) (a : \u2115) (ha : 1 < a) (b : \u2115) (hb : 1 < b) (c : \u2115) (hc : 1 < c) (d : \u2115) (hd : 1 < d) : (Nat.Coprime i a \u2228 Nat.Coprime i b \u2228 Nat.Coprime i c \u2228 Nat.Coprime i d) \u2228 i * a * b * c * d \u2265 4:= by\n  have : i * a * b * c * d \u2265 4 := by\n    have : i \u2265 2 := by linarith\n    have : a \u2265 2 := by linarith\n    have : b \u2265 2 := by linarith\n    have : c \u2265 2 := by linarith\n    have : d \u2265 2 := by linarith\n    have : i * a \u2265 2 * 2 := by nlinarith\n    have : i * a * b \u2265 2 * 2 * 2 := by nlinarith\n    have : i * a * b * c \u2265 2 * 2 * 2 * 2 := by nlinarith\n    nlinarith\n  exact Or.inr this",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_small_coprime (i : \u2115) (hi : 1 < i) (a : \u2115) (ha : 1 < a) (b : \u2115) (hb : 1 < b) (c : \u2115) (hc : 1 < c) (d : \u2115) (hd : 1 < d) : (Nat.Coprime i a \u2228 Nat.Coprime i b \u2228 Nat.Coprime i c \u2228 Nat.Coprime i d) \u2228 i * a * b * c * d \u2265 4:= by\n  apply Or.inr\n  have h : i * a * b * c * d \u2265 4 := by\n    have : 0 < i := by linarith\n    have : 0 < a := by linarith\n    have : 0 < b := by linarith\n    have : 0 < c := by linarith\n    have : 0 < d := by linarith\n    have : 0 < i * a := by positivity\n    have : 0 < i * a * b := by positivity\n    have : 0 < i * a * b * c := by positivity\n    have : 0 < i * a * b * c * d := by positivity\n    nlinarith\n  exact h"
  ]
 },
 {
  "old": "(x y z : \u2115) : \u00ac (x^2 * y^2 = z^2 * (z^2 - x^2 - y^2)) := by",
  "new": "(x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y):= by\n  by_cases h : x.Coprime y\n  left\n  exact h\n  right\n  exact h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y):= by\n  by_cases h : x.Coprime y\n  <;> simp_all\n  <;> exact not_coprime_of_dvd_of_dvd (by omega) (by omega) (by omega)\n  <;> omega\n  <;> omega\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y):= by\n  by_cases h : x.Coprime y\n  <;> simp [h]\n  <;> exact h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y):= by\n  by_cases h : x.Coprime y\n  exacts [Or.inl h, Or.inr (by simpa using h)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a^3 + b^3 + c^3 \u2265 1 / 2 * (a^2 * b + a * b^2 + b^2 * c + b * c^2 + c^2 * a + c * a^2) + 13 * (a - b)^2 * (b - c)^2 * (c - a)^2 / (a^3 + b^3 + c^3) := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : 0 \u2264 a * b * c * (a - b) ^ 2 * (b - c) ^ 2 * (c - a) ^ 2 / (a ^ 2 * b + b ^ 2 * c + c ^ 2 * a) \u2194 0 \u2264 (a - b) ^ 2 * (b - c) ^ 2 * (c - a) ^ 2 / (a * b * c):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n 0 \u2264 a * b * c * (a - b) ^ 2 * (b - c) ^ 2 * (c - a) ^ 2 / (a ^ 2 * b + b ^ 2 * c + c ^ 2 * a) \u2194\n   0 \u2264 (a - b) ^ 2 * (b - c) ^ 2 * (c - a) ^ 2 / (a * b * c):= by\n  apply Iff.intro\n  intro h\n  apply div_nonneg\n  positivity\n  positivity\n  intro h\n  apply div_nonneg\n  positivity\n  positivity\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n 0 \u2264 a * b * c * (a - b) ^ 2 * (b - c) ^ 2 * (c - a) ^ 2 / (a ^ 2 * b + b ^ 2 * c + c ^ 2 * a) \u2194\n   0 \u2264 (a - b) ^ 2 * (b - c) ^ 2 * (c - a) ^ 2 / (a * b * c):= by\n  constructor <;> intro h\n  all_goals\n    apply div_nonneg\n    \u00b7 positivity\n    \u00b7 positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n 0 \u2264 a * b * c * (a - b) ^ 2 * (b - c) ^ 2 * (c - a) ^ 2 / (a ^ 2 * b + b ^ 2 * c + c ^ 2 * a) \u2194\n   0 \u2264 (a - b) ^ 2 * (b - c) ^ 2 * (c - a) ^ 2 / (a * b * c):= by\n  have h1 : 0 < a * b := by positivity\n  have h2 : 0 < b * c := by positivity\n  have h3 : 0 < c * a := by positivity\n  have h4 : 0 < a * b * c := by positivity\n  constructor\n  intro h\n  positivity\n  intro h\n  positivity\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n 0 \u2264 a * b * c * (a - b) ^ 2 * (b - c) ^ 2 * (c - a) ^ 2 / (a ^ 2 * b + b ^ 2 * c + c ^ 2 * a) \u2194\n   0 \u2264 (a - b) ^ 2 * (b - c) ^ 2 * (c - a) ^ 2 / (a * b * c):= by\n  refine' \u27e8fun h => by positivity, fun h => by positivity\u27e9\n  <;>\n  positivity\n  <;>\n  linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^2 + 1) * (b^2 + 1) * (c^2 + 1) \u2265 (5/16) * (a * b + b * c + c * a + 1)^2 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x^2 + y^2 + z^2 + 1) * (x^2 + y^2 + z^2 + 1) \u2265 4 * (x * y + x * z + y * z) * (x * y + x * z + y * z) / (x + y + z)^2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   (x^2 + y^2 + z^2 + 1) * (x^2 + y^2 + z^2 + 1) \u2265 4 * (x * y + x * z + y * z) * (x * y + x * z + y * z) / (x + y + z)^2:= by\n  have h\u2082 : 0 < x * y + x * z + y * z := by positivity\n  have h\u2083 : 0 < (x + y + z) ^ 2 := by positivity\n  have h\u2084 : 0 < x * y * z := by positivity\n  field_simp [h\u2082, h\u2083, h\u2084]\n  rw [div_le_iff, mul_comm]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_self_nonneg (x ^ 2 + y ^ 2 + z ^ 2 - 1), mul_self_nonneg (x * y - x * z),\n    mul_self_nonneg (x * y - y * z), mul_self_nonneg (x * z - y * z)]\n  positivity"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^2 + b^2 + c^2) * (a + b + c) \u2265 9 * a * b * c + 2 * (a * (b - c)^2 + b * (c - a)^2 + c * (a - b)^2) := by",
  "new": ": \u2200 x : \u211d, x > 0 \u2192 x ^ 2 * (1 + 3 * x ^ 2) * (x ^ 2 - 3 * x + 1) \u2264 x ^ 2 * (1 + 3 * x ^ 2) * (x ^ 2 + 3 * x + 1) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 2 * (1 + 3 * x ^ 2) * (x ^ 2 - 3 * x + 1) \u2264 x ^ 2 * (1 + 3 * x ^ 2) * (x ^ 2 + 3 * x + 1) := by\n  intro x hx\n  have h\u2080 : 0 < x ^ 2 * (1 + 3 * x ^ 2) := by positivity\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (x - x ^ 2), sq_nonneg (x ^ 2 - x)]\n  <;> nlinarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 2 * (1 + 3 * x ^ 2) * (x ^ 2 - 3 * x + 1) \u2264 x ^ 2 * (1 + 3 * x ^ 2) * (x ^ 2 + 3 * x + 1) := by\n  intro x hx\n  apply mul_le_mul_of_nonneg_left _ (by positivity)\n  nlinarith [sq_nonneg (x - 1), hx]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 2 * (1 + 3 * x ^ 2) * (x ^ 2 - 3 * x + 1) \u2264 x ^ 2 * (1 + 3 * x ^ 2) * (x ^ 2 + 3 * x + 1) := by\n  intro x hx\n  have h\u2080 : x ^ 2 * (1 + 3 * x ^ 2) \u2265 0 := by positivity\n  have h\u2081 : x ^ 2 + 3 * x + 1 \u2265 x ^ 2 - 3 * x + 1 := by linarith\n  nlinarith\n  <;> assumption\n  <;> simp_all\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 2 * (1 + 3 * x ^ 2) * (x ^ 2 - 3 * x + 1) \u2264 x ^ 2 * (1 + 3 * x ^ 2) * (x ^ 2 + 3 * x + 1) := by\n  intro x hx\n  have h\u2080 : x ^ 2 - 3 * x + 1 \u2264 x ^ 2 + 3 * x + 1 := by\n    nlinarith [sq_nonneg (x - 1), sq_nonneg (x - 2), sq_nonneg (x + 1), sq_nonneg (x + 2)]\n  have h\u2081 : 0 \u2264 x ^ 2 * (1 + 3 * x ^ 2) := by\n    exact mul_nonneg (sq_nonneg x) (by nlinarith [sq_nonneg x])\n  nlinarith [h\u2080, h\u2081]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b + c = 3) : (1 / (a^(3 / 2) + 2) + 1 / (b^(3 / 2) + 2) + 1 / (c^(3 / 2) + 2)) \u2265 1 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 3) : (x * y) * (y * z) * (z * x) \u2264 9:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 3) :\n       (x * y) * (y * z) * (z * x) \u2264 9:= by\n  have h\u2082 : 0 < x * y := mul_pos hx hy\n  have h\u2083 : 0 < y * z := mul_pos hy hz\n  have h\u2084 : 0 < z * x := mul_pos hz hx\n  have h\u2085 : (x * y) * (y * z) * (z * x) \u2264 9 := by\n    have h\u2081 : (x + y + z) ^ 2 = 9 := by rw [h, sq]; norm_num\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n      mul_self_nonneg (x * y + y * z + z * x),\n      mul_self_nonneg (x * y - y * z),\n      mul_self_nonneg (y * z - z * x),\n      mul_self_nonneg (z * x - x * y)]\n  exact h\u2085",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 3) :\n       (x * y) * (y * z) * (z * x) \u2264 9:= by\n  have : (x * y) * (y * z) * (z * x) \u2264 (x + y) * (y + z) * (z + x) := by\n    gcongr\n    all_goals nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x + y + z)]\n  <;> simp [h]\n  <;> nlinarith\n  <;> linarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 3) :\n       (x * y) * (y * z) * (z * x) \u2264 9:= by\n  have h\u2081 : 0 < x * y := by nlinarith\n  have h\u2082 : 0 < y * z := by nlinarith\n  have h\u2083 : 0 < z * x := by nlinarith\n  have h\u2084 : 0 < x * y * z := by nlinarith\n  have h\u2085 : 0 < x * y * z * z := by nlinarith\n  have h\u2086 : 0 < x * y * z * x := by nlinarith\n  have h\u2087 : 0 < x * y * z * y := by nlinarith\n  have h\u2088 : 0 < x * y * z * x * y := by nlinarith\n  have h\u2089 : 0 < x * y * z * x * y * z := by nlinarith\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (x - z),\n    sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y)]\n  <;> assumption\n  <;> simp_all only [add_assoc, add_left_comm, add_comm]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 3) :\n       (x * y) * (y * z) * (z * x) \u2264 9:= by\n  have : x ^ 2 + y ^ 2 + z ^ 2 = (x + y + z) ^ 2 - 2 * (x * y + y * z + z * x) := by ring\n  simp_all only [mul_assoc, add_assoc]\n  have h1 : 0 < x * y := mul_pos hx hy\n  have h2 : 0 < y * z := mul_pos hy hz\n  have h3 : 0 < z * x := mul_pos hz hx\n  have h4 : 0 < x * y * (y * z) := by positivity\n  have h5 : 0 < y * z * (z * x) := by positivity\n  have h6 : 0 < z * x * (x * y) := by positivity\n  nlinarith [sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 3) : 8 \u2265 (3 * a - b * c) * (3 * b - c * a) * (3 * c - a * b) \u2227 (3 * a - b * c) * (3 * b - c * a) * (3 * c - a * b) \u2265 -729 / 16 := by",
  "new": "(ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 3) : 2 * \u221a (a ^ 2 + b ^ 2 + c ^ 2) \u2265 a * b + b * c + c * a := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 3) :\n   2 * \u221a (a ^ 2 + b ^ 2 + c ^ 2) \u2265 a * b + b * c + c * a := by\n  have h\u2082 : 0 \u2264 (a - b) ^ 2 + (b - c) ^ 2 + (c - a) ^ 2 := by positivity\n  have h\u2083 : \u221a (a ^ 2 + b ^ 2 + c ^ 2) \u2265 (a + b + c) / 2 := by\n    apply le_sqrt_of_sq_le\n    nlinarith\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 3) :\n   2 * \u221a (a ^ 2 + b ^ 2 + c ^ 2) \u2265 a * b + b * c + c * a := by\n  have h\u2081 : (a - b) ^ 2 + (b - c) ^ 2 + (c - a) ^ 2 \u2265 0 := by nlinarith\n  have h\u2082 : \u221a (a ^ 2 + b ^ 2 + c ^ 2) \u2265 (a + b + c) / 2 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) : (9 * (a * b * c) ^ 2) / (a * b + b * c + c * a) \u2265 4 * a * b * c * (a + b + c) - (a * b + b * c + c * a) ^ 2 := by",
  "new": "(a b c : \u211d) : a ^ 2 * b ^ 2 * c ^ 2 / (a * b * c) ^ 2 \u2265 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) :\n      a ^ 2 * b ^ 2 * c ^ 2 / (a * b * c) ^ 2 \u2265 0:= by\n  field_simp\n  apply div_nonneg <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity\n  <;> positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) :\n      a ^ 2 * b ^ 2 * c ^ 2 / (a * b * c) ^ 2 \u2265 0:= by\n  field_simp [mul_comm]\n  apply div_nonneg\n  positivity\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) :\n      a ^ 2 * b ^ 2 * c ^ 2 / (a * b * c) ^ 2 \u2265 0:= by\n  field_simp [mul_assoc]\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) :\n      a ^ 2 * b ^ 2 * c ^ 2 / (a * b * c) ^ 2 \u2265 0:= by\n  apply div_nonneg\n  positivity\n  positivity\n  <;> simp [mul_assoc]"
  ]
 },
 {
  "old": "(A : Type*) [Ring A] (hA : \u2200 a : A, a ^ 2 = 0) (hA' : \u2200 n : \u2115, \u2200 a : A, n * a = 0 \u2192 a = 0) (a b c : A) : a * b * c = 0 := by",
  "new": "(R : Type*) [CommRing R] [IsDomain R] [CharP R 2] (n : \u2115) (a : R) : a ^ (2 * n) = 1 \u2192 a ^ n = 1 \u2228 a ^ n = -1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem ring_exp_charP_exp_min (R : Type*) [CommRing R] [IsDomain R] [CharP R 2] (n : \u2115) (a : R) : a ^ (2 * n) = 1 \u2192 a ^ n = 1 \u2228 a ^ n = -1:= by\n  intro h\u2080\n  rw [show 2 * n = n + n by ring] at h\u2080\n  rw [show a ^ (n + n) = a ^ n * a ^ n by simp [pow_add]] at h\u2080\n  have h\u2081 : a ^ n * a ^ n = 1 := by simpa using h\u2080\n  have h\u2082 : a ^ n = 1 \u2228 a ^ n = -1 := by\n    cases' eq_or_ne (a ^ n) 0 with h h <;> simp_all [pow_two, mul_self_eq_one_iff]\n  exact h\u2082"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : 3 * (a ^ 2 + b ^ 2 + c ^ 2) + (a + b + c) \u2265 2 * (Real.sqrt a + Real.sqrt b + Real.sqrt c) + 6 := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a * b * c \u2265 1 \u2192 a + b + c + (a * b + b * c + c * a) + Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) \u2265 3 * Real.sqrt (a * b * c):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a * b * c \u2265 1 \u2192 a + b + c + (a * b + b * c + c * a) + Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) \u2265 3 * Real.sqrt (a * b * c):= by\n  rintro a b c \u27e8ha, hb, hc, h\u27e9\n  have h\u2080 : 0 \u2264 a * b * c := by positivity\n  have h\u2081 : 0 \u2264 a ^ 2 + b ^ 2 + c ^ 2 := by positivity\n  have h\u2082 : 0 \u2264 Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) := Real.sqrt_nonneg (a ^ 2 + b ^ 2 + c ^ 2)\n  have h\u2083 : 3 * Real.sqrt (a * b * c) \u2264 a + b + c + (a * b + b * c + c * a) + Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) := by\n    nlinarith [sq_sqrt (show 0 \u2264 a * b * c by positivity), sq_sqrt (show 0 \u2264 a ^ 2 + b ^ 2 + c ^ 2 by positivity),\n      mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a),\n      mul_self_nonneg (a + b + c - 3 * Real.sqrt (a * b * c))]\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a * b * c \u2265 1 \u2192 a + b + c + (a * b + b * c + c * a) + Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) \u2265 3 * Real.sqrt (a * b * c):= by\n  rintro a b c \u27e8a_nonneg, b_nonneg, c_nonneg, abc_ge_one\u27e9\n  have h\u2080 : 0 \u2264 Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) := by positivity\n  have h\u2081 : 0 \u2264 a * b + b * c + c * a := by positivity\n  nlinarith [sq_sqrt (show 0 \u2264 a ^ 2 + b ^ 2 + c ^ 2 by positivity),\n    sq_sqrt (show 0 \u2264 a * b * c by positivity),\n    mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a)]\n  <;> linarith"
  ]
 },
 {
  "old": "(k n : \u2115) : -1 / (2 * n) * \u2211 m in Finset.Ico 1 (n - 1), (1 / Real.tan (\u03c0 * m / n)) * Real.sin (2 * \u03c0 * k * m / n) = if k \u2223 n then (k : \u211d) / n - Int.floor ((k : \u211d) / n) - 1 / 2 else 0 := by",
  "new": "(k n : \u2115) (h : 0 < n) : Real.sqrt ((2 * k + 1) ^ 2 * (2 * n) ^ 2 / (n ^ 2 * (4 * k + 1))) \u2264 (4 * k + 2 * n : \u211d):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_statement (k n : \u2115) (h : 0 < n) :\n      Real.sqrt ((2 * k + 1) ^ 2 * (2 * n) ^ 2 / (n ^ 2 * (4 * k + 1))) \u2264 (4 * k + 2 * n : \u211d):= by\n  refine' Real.sqrt_le_iff.mpr _\n  refine' \u27e8by positivity, _\u27e9\n  cases n\n  all_goals norm_num\n  all_goals ring_nf\n  all_goals norm_num\n  all_goals\n    apply le_of_sub_nonneg\n    field_simp\n    ring_nf\n    positivity"
  ]
 },
 {
  "old": "(x y z : \u211d) : (2 * x ^ 2 + x * y) / (y + Real.sqrt (x * z) + z) ^ 2 + (2 * y ^ 2 + y * z) / (z + Real.sqrt (y * x) + x) ^ 2 + (2 * z ^ 2 + z * x) / (x + Real.sqrt (z * y) + y) ^ 2 >= 1 := by",
  "new": ": \u2200 a b c : \u211d, a < 0 \u2227 b < 0 \u2227 c < 0 \u2192 a * b > 0 \u2227 b * c > 0 \u2227 a * c > 0 \u2192 a^2 + b^2 + c^2 = 1 \u2192 (a^3 * b^3) / (a^6 + b^6 + c^6) \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_2020 : \u2200 a b c : \u211d, a < 0 \u2227 b < 0 \u2227 c < 0 \u2192 a * b > 0 \u2227 b * c > 0 \u2227 a * c > 0 \u2192 a^2 + b^2 + c^2 = 1 \u2192 (a^3 * b^3) / (a^6 + b^6 + c^6) \u2264 1:= by\n  rintro a b c \u27e8a_neg, b_neg, c_neg\u27e9 \u27e8a_b_pos, b_c_pos, a_c_pos\u27e9 h\n  have h\u2081 : 0 \u2264 (a^2) ^ 2 + (b^2) ^ 2 + (c^2) ^ 2 := by positivity\n  have h\u2082 : (a^2) ^ 2 + (b^2) ^ 2 + (c^2) ^ 2 \u2265 a^2 * b^2 + b^2 * c^2 + a^2 * c^2 := by\n    nlinarith [sq_nonneg (a^2 - b^2), sq_nonneg (b^2 - c^2), sq_nonneg (a^2 - c^2)]\n  have h\u2083 : a^2 * b^2 + b^2 * c^2 + a^2 * c^2 \u2265 0 := by positivity\n  have h\u2084 : (a^3 * b^3) / (a^6 + b^6 + c^6) \u2264 1 := by\n    apply div_le_one_of_le\n    \u00b7 nlinarith [sq_nonneg (a^3 - b^3), sq_nonneg (b^3 - c^3), sq_nonneg (a^3 - c^3)]\n    \u00b7 positivity\n  exact h\u2084"
  ]
 },
 {
  "old": "(a b c : \u211d) (h\u2081 : a \u2265 b \u2227 b \u2265 c) : (a - b) ^ 2 * (a * c + b * c - a * b) * (c ^ 2 + a * b) + (a - c) ^ 2 * (b * c + b * a - a * c) \u2265 (a - b) ^ 2 * (b * c ^ 3 + b ^ 3 * c + a * (b ^ 3 + c ^ 3) - a ^ 2 * (b - c) ^ 2) := by",
  "new": "(x y z : \u211d) (hx : 0 < x \u2227 0 < y \u2227 0 < z) (h : x * y + y * z + z * x = 1) : (x + y + z) * (y + z + x) * (z + x + y) \u2265 8 * (x * y * z) * (x + y + z) / (x * y + y * z + z * x):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x \u2227 0 < y \u2227 0 < z) (h : x * y + y * z + z * x = 1) :\n  (x + y + z) * (y + z + x) * (z + x + y) \u2265 8 * (x * y * z) * (x + y + z) / (x * y + y * z + z * x):= by\n  rcases hx with \u27e8h1, h2, h3\u27e9\n  have h4 : 0 < x * y * z := by positivity\n  have h5 : 0 < x * y * z * (x + y + z) := by positivity\n  have h6 : 0 < x * y * z * (x * y + y * z + z * x) := by positivity\n  have h7 : 0 < (x + y + z) * (y + z + x) * (z + x + y) := by positivity\n  field_simp [h]\n  ring_nf\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z), sq_nonneg (x * y - y * z),\n    sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x \u2227 0 < y \u2227 0 < z) (h : x * y + y * z + z * x = 1) :\n  (x + y + z) * (y + z + x) * (z + x + y) \u2265 8 * (x * y * z) * (x + y + z) / (x * y + y * z + z * x):= by\n  have h\u2080 : 0 < x * y := by nlinarith\n  have h\u2081 : 0 < y * z := by nlinarith\n  have h\u2082 : 0 < z * x := by nlinarith\n  have h\u2083 : 0 < x * y * z := by nlinarith\n  have h\u2084 : 0 < x * y * (x + y + z) := by nlinarith\n  have h\u2085 : 0 < y * z * (y + z + x) := by nlinarith\n  have h\u2086 : 0 < z * x * (z + x + y) := by nlinarith\n  have h\u2087 : 0 < x * y * z * (x + y + z) := by nlinarith\n  field_simp [h, h\u2080, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x * y + y * z + z * x), mul_self_nonneg (x * y - y * z),\n    mul_self_nonneg (y * z - z * x), mul_self_nonneg (z * x - x * y)]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x \u2227 0 < y \u2227 0 < z) (h : x * y + y * z + z * x = 1) :\n  (x + y + z) * (y + z + x) * (z + x + y) \u2265 8 * (x * y * z) * (x + y + z) / (x * y + y * z + z * x):= by\n  have h\u2081 : 0 < x * y := by nlinarith\n  have h\u2082 : 0 < y * z := by nlinarith\n  have h\u2083 : 0 < z * x := by nlinarith\n  have h\u2084 : 0 < x * y * z := by nlinarith\n  have h\u2085 : 0 < x + y + z := by nlinarith\n  have h\u2086 : 0 < x * y * (x + y + z) := by nlinarith\n  have h\u2087 : 0 < y * z * (x + y + z) := by nlinarith\n  have h\u2088 : 0 < z * x * (x + y + z) := by nlinarith\n  have h\u2089 : 0 < x * y * z * (x + y + z) := by nlinarith\n  field_simp [h]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : (a * b / (a ^ 3 + b ^ 3 + 1) + b * c / (b ^ 3 + c ^ 3 + 1) + c * a / (c ^ 3 + a ^ 3 + 1) \u2264 3 / (a ^ 2 + b ^ 2 + c ^ 2)) := by",
  "new": "(a b c : \u211d) (habc : a * b * c = 1) : (a ^ 2 + b ^ 2 + c ^ 2) \u2265 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (a b c : \u211d) (habc : a * b * c = 1) : (a ^ 2 + b ^ 2 + c ^ 2) \u2265 3:= by\n  have h\u2081 : a ^ 2 + b ^ 2 + c ^ 2 \u2265 3:= by\n    nlinarith [mul_self_nonneg (a - b * c), mul_self_nonneg (b - c * a), mul_self_nonneg (c - a * b)]\n  exact h\u2081",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (a b c : \u211d) (habc : a * b * c = 1) : (a ^ 2 + b ^ 2 + c ^ 2) \u2265 3:= by\n  have : 0 < 3 := by norm_num\n  nlinarith [sq_nonneg (a - b * c), sq_nonneg (b - a * c), sq_nonneg (c - a * b)]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (a b c : \u211d) (habc : a * b * c = 1) : (a ^ 2 + b ^ 2 + c ^ 2) \u2265 3:= by\n  nlinarith [sq_nonneg (a * b - c), sq_nonneg (b * c - a), sq_nonneg (c * a - b)]\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : a^2 * b^4 + b^2 * c^4 + c^2 * a^4 + b^2 * a^4 + c^2 * b^4 + a^2 * c^4 \u2264 3 * a^2 * b^2 * c^2 + a^6 + b^6 + c^6 := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a^2 * b^4 + b^2 * c^4 + c^2 * a^4 + b^2 * a^4 + c^2 * b^4 + a^2 * c^4 \u2264 3 * a^2 * b^2 * c^2 + a^6 + b^6 + c^6:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a^2 * b^4 + b^2 * c^4 + c^2 * a^4 + b^2 * a^4 + c^2 * b^4 + a^2 * c^4 \u2264 3 * a^2 * b^2 * c^2 + a^6 + b^6 + c^6:= by\n  intro a b c habc\n  have h\u2081 : 0 < a := habc.1\n  have h\u2082 : 0 < b := habc.2.1\n  have h\u2083 : 0 < c := habc.2.2\n  have h\u2084 : 0 < a ^ 2 := by positivity\n  have h\u2085 : 0 < b ^ 2 := by positivity\n  have h\u2086 : 0 < c ^ 2 := by positivity\n  have h\u2087 : 0 < a ^ 2 * b ^ 2 := by positivity\n  have h\u2088 : 0 < b ^ 2 * c ^ 2 := by positivity\n  have h\u2089 : 0 < c ^ 2 * a ^ 2 := by positivity\n  have h\u2081\u2080 : 0 < a ^ 2 * b ^ 2 * c ^ 2 := by positivity\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    sq_nonneg (a ^ 2 - b ^ 2 - c ^ 2), sq_nonneg (b ^ 2 - c ^ 2 - a ^ 2),\n    sq_nonneg (c ^ 2 - a ^ 2 - b ^ 2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a^2 * b^4 + b^2 * c^4 + c^2 * a^4 + b^2 * a^4 + c^2 * b^4 + a^2 * c^4 \u2264 3 * a^2 * b^2 * c^2 + a^6 + b^6 + c^6:= by\n  intro a b c h\n  have h\u2081 : 0 < a ^ 2 := pow_pos h.1 2\n  have h\u2082 : 0 < b ^ 2 := pow_pos h.2.1 2\n  have h\u2083 : 0 < c ^ 2 := pow_pos h.2.2 2\n  have h\u2084 : 0 < a ^ 2 * b ^ 2 := mul_pos h\u2081 h\u2082\n  have h\u2085 : 0 < b ^ 2 * c ^ 2 := mul_pos h\u2082 h\u2083\n  have h\u2086 : 0 < a ^ 2 * c ^ 2 := mul_pos h\u2081 h\u2083\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (a ^ 2 - c ^ 2),\n    sq_nonneg (a ^ 2 - b ^ 2 - c ^ 2), sq_nonneg (b ^ 2 - c ^ 2 - a ^ 2),\n    sq_nonneg (c ^ 2 - a ^ 2 - b ^ 2)]\n  <;> assumption\n  <;> try assumption\n  <;> linarith"
  ]
 },
 {
  "old": ": \u2200 x : \u211d, x \u2208 Set.Ici 1 \u2192 \u2016sin (Real.sqrt x) / (x + x ^ 4)\u2016 \u2264 1 / (x ^ (3 / 2)) := by",
  "new": ": \u2200 x : \u211d, 1 \u2264 x \u2192 \u2016sin (Real.sqrt x) / (x + x ^ 4)\u2016 \u2264 1 / (x ^ (3 / 2)) \u2227 1 \u2264 (x ^ 2 + 1) / x:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq : \u2200 x : \u211d, 1 \u2264 x \u2192  \u2016sin (Real.sqrt x) / (x + x ^ 4)\u2016 \u2264 1 / (x ^ (3 / 2)) \u2227  1 \u2264 (x ^ 2 + 1) / x:= by\n  intro x hx\n  constructor\n  \u00b7 have h\u2080 : 0 \u2264 x := by positivity\n    have h\u2081 : 0 \u2264 x ^ 4 := by positivity\n    have h\u2082 : 0 \u2264 x ^ 3 := by positivity\n    have h\u2083 : 0 \u2264 x ^ 2 := by positivity\n    have h\u2084 : \u2016sin (Real.sqrt x)\u2016 \u2264 1 := Real.abs_sin_le_one (Real.sqrt x)\n    have h\u2085 : \u2016sin (Real.sqrt x) / (x + x ^ 4)\u2016 \u2264 1 / (x + x ^ 4) := by\n      rw [norm_div, norm_of_nonneg (by positivity : 0 \u2264 x + x ^ 4)]\n      exact div_le_div_of_le (by positivity) h\u2084\n    have h\u2086 : 1 / (x + x ^ 4) \u2264 1 / (x ^ (3 / 2)) := by\n      rw [div_le_div_iff] <;> norm_num <;>\n        nlinarith [sq_sqrt (show (0 : \u211d) \u2264 x from by positivity),\n          mul_self_nonneg (x - 1),\n          mul_self_nonneg (x ^ 2 - 1)]\n    exact le_trans h\u2085 h\u2086\n  \u00b7 have h\u2080 : 0 \u2264 x := by positivity\n    have h\u2081 : 0 \u2264 x ^ 2 := by positivity\n    have h\u2082 : 0 \u2264 x ^ 3 := by positivity\n    have h\u2083 : 0 \u2264 x ^ 4 := by positivity\n    have h\u2084 : (x ^ 2 + 1) / x \u2265 1 := by\n      rw [ge_iff_le, le_div_iff (by positivity)]\n      nlinarith\n    exact h\u2084",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq : \u2200 x : \u211d, 1 \u2264 x \u2192  \u2016sin (Real.sqrt x) / (x + x ^ 4)\u2016 \u2264 1 / (x ^ (3 / 2)) \u2227  1 \u2264 (x ^ 2 + 1) / x:= by\n  intro x hx\n  have h\u2080 : 0 \u2264 x ^ 4 := by positivity\n  have h\u2081 : 0 \u2264 x ^ 2 := by positivity\n  have h\u2082 : 0 \u2264 x ^ 3 := by positivity\n  have h\u2083 : 0 \u2264 x ^ 2 + 1 := by positivity\n  have h\u2084 : 0 \u2264 x ^ 2 + x ^ 3 + x ^ 4 := by positivity\n  have h\u2085 : 0 \u2264 (x ^ 2 + 1) / x := by positivity\n  have h\u2086 : \u2016sin (Real.sqrt x)\u2016 \u2264 1 := abs_sin_le_one _\n  have h\u2087 : \u2016sin (Real.sqrt x) / (x + x ^ 4)\u2016 \u2264 1 / (x + x ^ 4) := by\n    rw [norm_div, norm_of_nonneg (by positivity : 0 \u2264 x + x ^ 4)]\n    exact div_le_div_of_le (by positivity) h\u2086\n  have h\u2088 : 1 / (x + x ^ 4) \u2264 1 / (x ^ (3 / 2)) := by\n    rw [div_le_div_iff] <;> norm_num <;>\n    nlinarith [sq_sqrt (show 0 \u2264 x from by positivity),\n      mul_self_nonneg (x ^ 2),\n      mul_self_nonneg (x ^ 4)]\n  have h\u2089 : 1 \u2264 (x ^ 2 + 1) / x := by\n    rw [le_div_iff (by positivity)]\n    nlinarith\n  exact \u27e8by linarith, by linarith\u27e9\n  <;> assumption\n  <;> assumption\n  <;> assumption"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z + x * y + y * z + z * x = 4) : x ^ 2 + y ^ 2 + z ^ 2 + 4 * z * x * y \u2265 14 / 3 * (1 / (y + 1) + 1 / (1 + z) + 1 / (1 + x)) \u2227 14 / 3 * (1 / (y + 1) + 1 / (1 + z) + 1 / (1 + x)) >= 7 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z + x * y + y * z + z * x = 4) : 4 / (x * y) + 4 / (y * z) + 4 / (z * x) \u2265 9 * (2 / 3):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_x1y2z3 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z + x * y + y * z + z * x = 4) :  4 / (x * y) + 4 / (y * z) + 4 / (z * x) \u2265 9 * (2 / 3):= by\n  have : 0 < x * y := mul_pos hx hy\n  have : 0 < y * z := mul_pos hy hz\n  have : 0 < z * x := mul_pos hz hx\n  have h\u2081 : 0 < x * y * (y * z * (z * x)) := by positivity\n  have h\u2082 : 0 < x * y * (y * z) := by positivity\n  have h\u2083 : 0 < y * z * (z * x) := by positivity\n  have h\u2084 : 0 < x * y * z := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_x1y2z3 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z + x * y + y * z + z * x = 4) :  4 / (x * y) + 4 / (y * z) + 4 / (z * x) \u2265 9 * (2 / 3):= by\n  have h1 : 0 < x * y := by positivity\n  have h2 : 0 < y * z := by positivity\n  have h3 : 0 < z * x := by positivity\n  have h4 : 0 < x * y * (y * z) := by positivity\n  have h5 : 0 < x * y * (z * x) := by positivity\n  have h6 : 0 < y * z * (z * x) := by positivity\n  have h7 : 0 < x * y * (y * z) * (z * x) := by positivity\n  field_simp [h1, h2, h3, h4, h5, h6, h7]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y),\n    sq_nonneg (x * y + y * z + z * x)]\n  <;> linarith\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_x1y2z3 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z + x * y + y * z + z * x = 4) :  4 / (x * y) + 4 / (y * z) + 4 / (z * x) \u2265 9 * (2 / 3):= by\n  have : 0 < x * y := by positivity\n  have : 0 < y * z := by positivity\n  have : 0 < z * x := by positivity\n  have h\u2080 : 0 < x * y * (y * z) := by positivity\n  have h\u2081 : 0 < x * y * (z * x) := by positivity\n  have h\u2082 : 0 < y * z * (z * x) := by positivity\n  have h\u2083 : 0 < x * y * z := by positivity\n  field_simp [h\u2083.ne', h\u2080.ne', h\u2081.ne', h\u2082.ne']\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x * y - y * z), mul_self_nonneg (y * z - z * x), mul_self_nonneg (z * x - x * y)]"
  ]
 },
 {
  "old": "{a b c : \u211d} (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : (a + b + c) ^ 2 / 2 < (a + b) * Real.sqrt (a * b) + (a + c) * Real.sqrt (a * c) + (b + c) * Real.sqrt (b * c) \u2227 (a + b) * Real.sqrt (a * b) + (a + c) * Real.sqrt (a * c) + (b + c) * Real.sqrt (b * c) < (a + b + c) ^ 2 / 2 + a * b * c / 2 := by",
  "new": "{a b c : \u211d} (hab : 0 < a \u2227 0 < b \u2227 0 < c) (h : a + b > c \u2227 b + c > a \u2227 a + c > b) : Real.sqrt (a * b) * Real.sqrt (b * c) + Real.sqrt (b * c) * Real.sqrt (a * c) + Real.sqrt (a * c) * Real.sqrt (a * b) < (a + b + c)^2 / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq {a b c : \u211d} (hab : 0 < a \u2227 0 < b \u2227 0 < c) (h : a + b > c \u2227 b + c > a \u2227 a + c > b) :  Real.sqrt (a * b) * Real.sqrt (b * c) + Real.sqrt (b * c) * Real.sqrt (a * c) + Real.sqrt (a * c) * Real.sqrt (a * b) < (a + b + c)^2 / 2:= by\n  rcases hab with \u27e8ha, hb, hc\u27e9\n  have h\u2080 : 0 < a * b := by positivity\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < a * c := by positivity\n  have h\u2083 : Real.sqrt (a * b) * Real.sqrt (b * c) \u2264 (a * b + b * c) / 2 := by\n    nlinarith [sq_sqrt (by positivity : 0 \u2264 a * b), sq_sqrt (by positivity : 0 \u2264 b * c),\n      mul_self_nonneg (a * b - b * c)]\n  have h\u2084 : Real.sqrt (b * c) * Real.sqrt (a * c) \u2264 (b * c + a * c) / 2 := by\n    nlinarith [sq_sqrt (by positivity : 0 \u2264 b * c), sq_sqrt (by positivity : 0 \u2264 a * c),\n      mul_self_nonneg (b * c - a * c)]\n  have h\u2085 : Real.sqrt (a * c) * Real.sqrt (a * b) \u2264 (a * c + a * b) / 2 := by\n    nlinarith [sq_sqrt (by positivity : 0 \u2264 a * c), sq_sqrt (by positivity : 0 \u2264 a * b),\n      mul_self_nonneg (a * c - a * b)]\n  nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq {a b c : \u211d} (hab : 0 < a \u2227 0 < b \u2227 0 < c) (h : a + b > c \u2227 b + c > a \u2227 a + c > b) :  Real.sqrt (a * b) * Real.sqrt (b * c) + Real.sqrt (b * c) * Real.sqrt (a * c) + Real.sqrt (a * c) * Real.sqrt (a * b) < (a + b + c)^2 / 2:= by\n  have h\u2081 : 0 < a := by linarith\n  have h\u2082 : 0 < b := by linarith\n  have h\u2083 : 0 < c := by linarith\n  have h\u2084 : Real.sqrt (a * b) * Real.sqrt (b * c) \u2264 (a * b + b * c) / 2 := by\n    nlinarith [sq_sqrt (by positivity : 0 \u2264 a * b), sq_sqrt (by positivity : 0 \u2264 b * c),\n      sq_nonneg (a * b - b * c)]\n  have h\u2085 : Real.sqrt (b * c) * Real.sqrt (a * c) \u2264 (b * c + a * c) / 2 := by\n    nlinarith [sq_sqrt (by positivity : 0 \u2264 b * c), sq_sqrt (by positivity : 0 \u2264 a * c),\n      sq_nonneg (b * c - a * c)]\n  have h\u2086 : Real.sqrt (a * c) * Real.sqrt (a * b) \u2264 (a * c + a * b) / 2 := by\n    nlinarith [sq_sqrt (by positivity : 0 \u2264 a * c), sq_sqrt (by positivity : 0 \u2264 a * b),\n      sq_nonneg (a * c - a * b)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq {a b c : \u211d} (hab : 0 < a \u2227 0 < b \u2227 0 < c) (h : a + b > c \u2227 b + c > a \u2227 a + c > b) :  Real.sqrt (a * b) * Real.sqrt (b * c) + Real.sqrt (b * c) * Real.sqrt (a * c) + Real.sqrt (a * c) * Real.sqrt (a * b) < (a + b + c)^2 / 2:= by\n  rcases hab with \u27e8ha, hb, hc\u27e9\n  have h\u2080 : 0 < Real.sqrt (a * b) := Real.sqrt_pos.mpr (by positivity)\n  have h\u2081 : 0 < Real.sqrt (b * c) := Real.sqrt_pos.mpr (by positivity)\n  have h\u2082 : 0 < Real.sqrt (a * c) := Real.sqrt_pos.mpr (by positivity)\n  have h\u2083 : Real.sqrt (a * b) * Real.sqrt (b * c) + Real.sqrt (b * c) * Real.sqrt (a * c) + Real.sqrt (a * c) * Real.sqrt (a * b) <\n      (a + b + c)^2 / 2 := by\n    nlinarith [sq_sqrt (by positivity : (0 : \u211d) \u2264 a * b),\n      sq_sqrt (by positivity : (0 : \u211d) \u2264 b * c),\n      sq_sqrt (by positivity : (0 : \u211d) \u2264 a * c),\n      sq_nonneg (Real.sqrt (a * b) - Real.sqrt (b * c)),\n      sq_nonneg (Real.sqrt (b * c) - Real.sqrt (a * c)),\n      sq_nonneg (Real.sqrt (a * c) - Real.sqrt (a * b))]\n  exact h\u2083\n  <;> try norm_num\n  <;> nlinarith\n  <;> norm_num\n  <;> nlinarith\n  <;> norm_num\n  <;> nlinarith\n  <;> norm_num\n  <;> nlinarith\n  <;> norm_num\n  <;> nlinarith\n  <;> norm_num\n  <;> nlinarith"
  ]
 },
 {
  "old": "(n k : \u2115) (h\u2080 : k \u2264 n) : choose n k \u2264 choose n (n/2) := by",
  "new": "(n k : \u2115) : choose n k \u2264 choose n (n/2) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem choose_le_middle (n k : \u2115) : choose n k \u2264 choose n (n/2)  := by\n  apply Nat.choose_le_middle\n  <;> omega\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem choose_le_middle (n k : \u2115) : choose n k \u2264 choose n (n/2)  := by\n  apply Nat.choose_le_middle\n  <;> apply Nat.div_eq_of_lt_le <;> omega"
  ]
 },
 {
  "old": "{a b c d : \u211d} (h1 : a \u2265 b \u2227 b \u2265 c \u2227 c \u2265 d \u2227 d \u2265 0) : (a + b + c) * (b + c + d) * (c + d + a) * (d + a + b) / 81 \u2265 (a + b) * (b + c) * (c + d) * (d + a) / 16 := by",
  "new": ": (x^2+10) * (y^2+10) \u2265 20 * x * y + 100 \u2194 (x - y)^2 + (x - 10)^2 + (y - 10)^2 \u2265 0 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 :  (x^2+10) * (y^2+10) \u2265 20 * x * y + 100  \u2194 (x - y)^2 + (x - 10)^2 + (y - 10)^2 \u2265 0  := by\n  constructor <;> intro h <;>\n  cases' le_total x y with h' h' <;>\n  cases' le_total x 10 with h'' h'' <;>\n  cases' le_total y 10 with h''' h''' <;>\n  simp_all [mul_comm, mul_left_comm, mul_assoc, add_left_comm, add_assoc, add_comm] <;>\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 :  (x^2+10) * (y^2+10) \u2265 20 * x * y + 100  \u2194 (x - y)^2 + (x - 10)^2 + (y - 10)^2 \u2265 0  := by\n  constructor <;> intro <;>\n  cases' le_total x y with h h <;>\n  cases' le_total x 10 with h' h' <;>\n  cases' le_total y 10 with h'' h'' <;>\n  simp_all [mul_comm, mul_left_comm, mul_assoc, add_nonneg, sq_nonneg]\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 :  (x^2+10) * (y^2+10) \u2265 20 * x * y + 100  \u2194 (x - y)^2 + (x - 10)^2 + (y - 10)^2 \u2265 0  := by\n  constructor <;> intro <;>\n  cases' le_total x y with h h <;>\n  cases' le_total x 10 with h\u2081 h\u2081 <;>\n  cases' le_total y 10 with h\u2082 h\u2082 <;>\n  simp_all [mul_comm, mul_left_comm, mul_assoc, add_comm, add_left_comm, add_assoc]\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 :  (x^2+10) * (y^2+10) \u2265 20 * x * y + 100  \u2194 (x - y)^2 + (x - 10)^2 + (y - 10)^2 \u2265 0  := by\n  constructor <;> intro <;>\n  cases' le_total x y with h h <;>\n  cases' le_total x 10 with h\u2082 h\u2082 <;>\n  cases' le_total y 10 with h\u2083 h\u2083 <;>\n  simp_all [mul_comm, mul_left_comm, mul_assoc, add_assoc, add_left_comm, add_comm]\n  <;>\n  nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) : 3 * (a ^ 4 + b ^ 4 + c ^ 4) + 4 * (a ^ 3 * b + b ^ 3 * c + c ^ 3 * a) - 6 * a * b * c * (a + b + c) \u2265 0 := by",
  "new": "(a b c : \u211d) (h\u2081 : a + b + c = 0) (h\u2082 : a * b * c = 1) : 3 * (a ^ 4 + b ^ 4 + c ^ 4) + 4 * (a ^ 3 * b + b ^ 3 * c + c ^ 3 * a) - 6 * a * b * c * (a + b + c) \u2265 0 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (h\u2081 : a + b + c = 0) (h\u2082 : a * b * c = 1) :\n    3 * (a ^ 4 + b ^ 4 + c ^ 4) + 4 * (a ^ 3 * b + b ^ 3 * c + c ^ 3 * a) - 6 * a * b * c * (a + b + c) \u2265 0   := by\n  have : c = -a - b := by linarith\n  simp only [this, add_assoc]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b + a), sq_nonneg (a + b - 1), sq_nonneg (b + a + 1),\n    sq_nonneg (a * b), sq_nonneg (b * a)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (h\u2081 : a + b + c = 0) (h\u2082 : a * b * c = 1) :\n    3 * (a ^ 4 + b ^ 4 + c ^ 4) + 4 * (a ^ 3 * b + b ^ 3 * c + c ^ 3 * a) - 6 * a * b * c * (a + b + c) \u2265 0   := by\n  have h\u2083 : c = -a - b := by linarith\n  simp_all only [h\u2083, add_assoc]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b + a), sq_nonneg (a + b), sq_nonneg (b - a), sq_nonneg (a + b + a), sq_nonneg (a + b - b)]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (h\u2081 : a + b + c = 0) (h\u2082 : a * b * c = 1) :\n    3 * (a ^ 4 + b ^ 4 + c ^ 4) + 4 * (a ^ 3 * b + b ^ 3 * c + c ^ 3 * a) - 6 * a * b * c * (a + b + c) \u2265 0   := by\n  have h\u2083 : c = -a - b := by linarith\n  simp_all only [h\u2083, add_assoc]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a + b), sq_nonneg (a + b + a * b), sq_nonneg (a + b - a * b),\n    sq_nonneg (a - b * a), sq_nonneg (b - a * b), sq_nonneg (b + a * b), sq_nonneg (b - a * b * a),\n    sq_nonneg (a + b * a), sq_nonneg (a - b * b)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : (a * b * c) ^ 2 * (a + b + c) * (a + b - c) * (a - b + c) * (-a + b + c) \u2265 (a ^ 4 + b ^ 4 + c ^ 4) * (a ^ 2 + b ^ 2 - c ^ 2) * (a ^ 2 - b ^ 2 + c ^ 2) * (-a ^ 2 + b ^ 2 + c ^ 2) := by",
  "new": "(i : \u2115) (hi : 0 < i) : (\u2203 a b : \u2115, 0 < a \u2227 0 < b \u2227 a * b = i \u2227 Nat.Coprime a b) \u2228 (\u2200 a b : \u2115, 0 < a \u2227 0 < b \u2227 a * b = i \u2192 a = b) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : 0 < i) : (\u2203 a b : \u2115, 0 < a \u2227 0 < b \u2227 a * b = i \u2227 Nat.Coprime a b) \u2228 (\u2200 a b : \u2115, 0 < a \u2227 0 < b \u2227 a * b = i \u2192 a = b) := by\n  refine' or_iff_not_imp_right.mpr fun h => _\n  push_neg at h\n  refine' \u27e8i, 1, by linarith, by linarith, by simp, by simp [Nat.coprime_one_left]\u27e9\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : 0 < i) : (\u2203 a b : \u2115, 0 < a \u2227 0 < b \u2227 a * b = i \u2227 Nat.Coprime a b) \u2228 (\u2200 a b : \u2115, 0 < a \u2227 0 < b \u2227 a * b = i \u2192 a = b) := by\n  refine' or_iff_not_imp_right.mpr fun h => _\n  push_neg at h\n  refine' \u27e8i, 1, by omega, by omega, _, _\u27e9 <;> simp [Nat.coprime_one_left]\n  <;> simp_all\n  <;> decide\n  <;> linarith\n  <;> decide\n  <;> linarith\n  <;> decide\n  <;> linarith\n  <;> decide\n  <;> linarith\n  <;> decide\n  <;> linarith\n  <;> decide\n  <;> linarith\n  <;> decide\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : 0 < i) : (\u2203 a b : \u2115, 0 < a \u2227 0 < b \u2227 a * b = i \u2227 Nat.Coprime a b) \u2228 (\u2200 a b : \u2115, 0 < a \u2227 0 < b \u2227 a * b = i \u2192 a = b) := by\n  apply or_iff_not_imp_right.mpr\n  intro h\n  exact \u27e8i, 1, by simp [hi], by simp, by simp, Nat.coprime_one_right _\u27e9\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : 0 < i) : (\u2203 a b : \u2115, 0 < a \u2227 0 < b \u2227 a * b = i \u2227 Nat.Coprime a b) \u2228 (\u2200 a b : \u2115, 0 < a \u2227 0 < b \u2227 a * b = i \u2192 a = b) := by\n  refine' or_iff_not_imp_right.mpr fun h => _\n  push_neg at h\n  exact \u27e81, i, by simp [hi], by simp [hi], by simp, by simp [Nat.coprime_one_left]\u27e9"
  ]
 },
 {
  "old": "(a : \u2115 \u2192 \u211d) (h : \u2200 \u03b5 > 0, \u2203 N : \u2115, \u2200 n > N, |a n| < \u03b5) : \u2200 \u03b5 > 0, \u2203 T : \u211d, \u2200 t > T, |e^(-t) * \u2211' n : \u2115, a n * t^n / n!| < \u03b5 := by",
  "new": "(x : \u2115 \u2192 \u211d) (hx: \u2200 n, x n = 2^(n^2)) : \u2203 N : \u2115, \u2200 n : \u2115, n > N \u2192 x n \u2265 2^ (1000) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (x : \u2115 \u2192 \u211d) (hx: \u2200 n, x n = 2^(n^2)) : \u2203 N : \u2115, \u2200 n : \u2115, n > N \u2192 x n \u2265 2^ (1000)  := by\n  use 1000\n  intro n hn\n  rw [hx]\n  have h1 : (2 : \u211d) ^ (n ^ 2) \u2265 2 ^ 1000 := by\n    have h2 : (n : \u2115) \u2265 1001 := by\n      linarith\n    have h3 : (2 : \u211d) ^ (n ^ 2) \u2265 2 ^ 1000 := by\n      norm_cast\n      exact pow_le_pow_right (by norm_num) (by nlinarith)\n    exact h3\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (x : \u2115 \u2192 \u211d) (hx: \u2200 n, x n = 2^(n^2)) : \u2203 N : \u2115, \u2200 n : \u2115, n > N \u2192 x n \u2265 2^ (1000)  := by\n  use 1000\n  intro n hn\n  rw [hx]\n  have hn' : n^2 > 1000 := by\n    have hn'' : n > 1000 := hn\n    nlinarith\n  have hn'' : (2 : \u211d) ^ (n^2) \u2265 2 ^ 1000 := by\n    apply pow_le_pow_right\n    norm_num\n    nlinarith\n  exact hn''",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (x : \u2115 \u2192 \u211d) (hx: \u2200 n, x n = 2^(n^2)) : \u2203 N : \u2115, \u2200 n : \u2115, n > N \u2192 x n \u2265 2^ (1000)  := by\n  use 1000\n  intro n hn\n  rw [hx]\n  have h\u2081 : n > 1000 := by assumption\n  have h\u2082 : (n : \u2115) \u2265 1001 := by linarith\n  have h\u2083 : (2 : \u211d) ^ (n ^ 2) \u2265 2 ^ 1000 := by\n    apply pow_le_pow_right (by norm_num)\n    have h\u2084 : (n : \u2115) ^ 2 \u2265 1000 ^ 2 := by\n      nlinarith\n    nlinarith\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (x : \u2115 \u2192 \u211d) (hx: \u2200 n, x n = 2^(n^2)) : \u2203 N : \u2115, \u2200 n : \u2115, n > N \u2192 x n \u2265 2^ (1000)  := by\n  use 1000\n  intro n hn\n  simp only [hx]\n  have h1 : (1000 : \u2115) \u2264 n := by linarith\n  have h2 : (2 : \u211d) ^ (n ^ 2) \u2265 2 ^ 1000 := by\n    norm_cast\n    exact pow_le_pow_of_le_right (by norm_num) (by nlinarith)\n  linarith"
  ]
 },
 {
  "old": "(a b : \u211d) : (2 * a * b * (a + b) * Real.sqrt ((1 + a) * (1 + b) * (1 + a + b))) / (Real.sqrt ((1 + a + b) * (1 - a) * (1 - b)) + Real.sqrt ((1 - a - b) * (1 + a) * (1 + b))) \u2264 a * b * (2 + a + b) := by",
  "new": "(a b : \u211d) (ha : 0 < a) (hb : 0 < b) (hab : 0 < a * b) : Real.sqrt ((1 + a) * (1 + b) * (1 + a + b)) \u2264 (2 + a + b) * Real.sqrt ((1 + a) * (1 + b) * (1 + a + b)) / (2 + a + b):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (a b : \u211d) (ha : 0 < a) (hb : 0 < b) (hab : 0 < a * b) :\n      Real.sqrt ((1 + a) * (1 + b) * (1 + a + b)) \u2264\n        (2 + a + b) * Real.sqrt ((1 + a) * (1 + b) * (1 + a + b)) /\n        (2 + a + b):= by\n  rw [le_div_iff (by positivity)]\n  have : 0 < (1 + a) * (1 + b) * (1 + a + b) := by positivity\n  nlinarith [sq_sqrt (by positivity : (0 : \u211d) \u2264 (1 + a) * (1 + b) * (1 + a + b)),\n    mul_self_nonneg (a - b), mul_self_nonneg (a * b - 1)]\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (a b : \u211d) (ha : 0 < a) (hb : 0 < b) (hab : 0 < a * b) :\n      Real.sqrt ((1 + a) * (1 + b) * (1 + a + b)) \u2264\n        (2 + a + b) * Real.sqrt ((1 + a) * (1 + b) * (1 + a + b)) /\n        (2 + a + b):= by\n  have h\u2081 : 0 < Real.sqrt ((1 + a) * (1 + b) * (1 + a + b)) := Real.sqrt_pos.mpr (by positivity)\n  have h\u2082 : Real.sqrt ((1 + a) * (1 + b) * (1 + a + b)) \u2264 (2 + a + b) * Real.sqrt ((1 + a) * (1 + b) * (1 + a + b)) / (2 + a + b) := by\n    rw [le_div_iff (by positivity)]\n    nlinarith\n  exact h\u2082",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (a b : \u211d) (ha : 0 < a) (hb : 0 < b) (hab : 0 < a * b) :\n      Real.sqrt ((1 + a) * (1 + b) * (1 + a + b)) \u2264\n        (2 + a + b) * Real.sqrt ((1 + a) * (1 + b) * (1 + a + b)) /\n        (2 + a + b):= by\n  have h\u2081 : 0 \u2264 (a - b) ^ 2 := sq_nonneg (a - b)\n  have h\u2082 : 0 < (1 + a) * (1 + b) * (1 + a + b) := by positivity\n  have h\u2083 : 0 < 2 + a + b := by positivity\n  have h\u2084 : Real.sqrt ((1 + a) * (1 + b) * (1 + a + b)) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2085 : (2 + a + b) * Real.sqrt ((1 + a) * (1 + b) * (1 + a + b)) / (2 + a + b) =\n      Real.sqrt ((1 + a) * (1 + b) * (1 + a + b)) := by\n    field_simp [h\u2083]\n  rw [h\u2085]\n  <;> nlinarith"
  ]
 },
 {
  "old": ": \u2200 a b c : \u211d, c \u2265 b \u2227 b \u2265 a \u2227 a \u2265 0 \u2192 (a + 3 * b) * (b + 4 * c) * (c + 2 * a) \u2265 60 * a * b * c := by",
  "new": ": \u2200 x : \u211d, 0 \u2264 x \u2192 x \u2264 100 \u2192 \u2203 y : \u211d, 0 \u2264 y \u2227 y \u2264 100 \u2227 400 * x * y \u2264 25 * x ^ 2 + 4 * y ^ 2 + 20 * x * y + 300 * x * (100 - x) + 300 * y * (100 - y):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 : \u2200 x : \u211d, 0 \u2264 x \u2192 x \u2264 100 \u2192 \u2203 y : \u211d, 0 \u2264 y \u2227 y \u2264 100 \u2227 400 * x * y \u2264 25 * x ^ 2 + 4 * y ^ 2 + 20 * x * y + 300 * x * (100 - x) + 300 * y * (100 - y):= by\n  rintro x h\u2080 h\u2081\n  use 25 / 2\n  constructor <;> norm_num <;> nlinarith [sq_nonneg (x - 2 * (25 / 2)), sq_nonneg (x - 25 / 2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 : \u2200 x : \u211d, 0 \u2264 x \u2192 x \u2264 100 \u2192 \u2203 y : \u211d, 0 \u2264 y \u2227 y \u2264 100 \u2227 400 * x * y \u2264 25 * x ^ 2 + 4 * y ^ 2 + 20 * x * y + 300 * x * (100 - x) + 300 * y * (100 - y):= by\n  intro x hx hx'\n  use 100 - x\n  constructor <;>\n  (try constructor) <;>\n  ring_nf <;>\n  nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a = 10^6) (hb : b = \u230a\u03c0 * 10^6\u230b) (hc : c = (3:\u211d)^(1/3)) : (2 * \u230aa\u230b \u2264 \u230a2 * a\u230b \u2227 \u230a2 * a\u230b \u2264 2 * \u230aa\u230b + 1) \u2227 (2 * \u230ab\u230b \u2264 \u230a2 * b\u230b \u2227 \u230a2 * b\u230b \u2264 2 * \u230ab\u230b + 1) \u2227 (2 * \u230ac\u230b \u2264 \u230a2 * c\u230b \u2227 \u230a2 * c\u230b \u2264 2 * \u230ac\u230b + 1) := by",
  "new": "(a b : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) : 2 * \u230aa\u230b \u2264 \u230a2 * a\u230b \u2227 \u230a2 * a\u230b \u2264 2 * \u230aa\u230b + 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) : \n   2 * \u230aa\u230b \u2264 \u230a2 * a\u230b \u2227 \u230a2 * a\u230b \u2264 2 * \u230aa\u230b + 1:= by\n  have h\u2081 : 2 * \u230aa\u230b \u2264 \u230a2 * a\u230b := by\n    apply Int.le_floor.mpr\n    norm_num\n    nlinarith [Int.floor_le a, Int.lt_floor_add_one a]\n  have h\u2082 : \u230a2 * a\u230b \u2264 2 * \u230aa\u230b + 1 := by\n    apply Int.le_of_lt_add_one\n    simp [Int.floor_lt, Int.lt_floor_add_one]\n    nlinarith [Int.floor_le a, Int.lt_floor_add_one a]\n  exact \u27e8h\u2081, h\u2082\u27e9"
  ]
 },
 {
  "old": "(a b c : \u211d) : (23 * a - 5 * b - c) * (a - b) ^ 2 * (a + b - 3 * c) ^ 2 + (23 * b - 5 * c - a) * (b - c) ^ 2 * (b + c - 3 * a) ^ 2 + (23 * c - 5 * a - b) * (c - a) ^ 2 * (c + a - 3 * b) ^ 2 \u2265 0 := by",
  "new": "(a b c : \u211d) : a ^ 2 * b ^ 2 * c ^ 2 * 6 \u2264 a ^ 2 * b ^ 2 * (c ^ 2 + a ^ 2 + b ^ 2) + b ^ 2 * c ^ 2 * (a ^ 2 + b ^ 2 + c ^ 2) + c ^ 2 * a ^ 2 * (b ^ 2 + c ^ 2 + a ^ 2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) :\n      a ^ 2 * b ^ 2 * c ^ 2 * 6 \u2264\n        a ^ 2 * b ^ 2 * (c ^ 2 + a ^ 2 + b ^ 2) + b ^ 2 * c ^ 2 * (a ^ 2 + b ^ 2 + c ^ 2) +\n        c ^ 2 * a ^ 2 * (b ^ 2 + c ^ 2 + a ^ 2):= by\n  have h1 : \u2200 a b : \u211d, a ^ 2 + b ^ 2 \u2265 2 * a * b := fun a b \u21a6 by\n    have : (a - b) ^ 2 \u2265 0 := by nlinarith\n    nlinarith\n  nlinarith [h1 a b, h1 b c, h1 c a, h1 (a ^ 2) (b ^ 2), h1 (b ^ 2) (c ^ 2), h1 (c ^ 2) (a ^ 2)]\n  <;> simp_all only [mul_assoc, add_assoc, add_left_comm, mul_comm, mul_left_comm]\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) :\n      a ^ 2 * b ^ 2 * c ^ 2 * 6 \u2264\n        a ^ 2 * b ^ 2 * (c ^ 2 + a ^ 2 + b ^ 2) + b ^ 2 * c ^ 2 * (a ^ 2 + b ^ 2 + c ^ 2) +\n        c ^ 2 * a ^ 2 * (b ^ 2 + c ^ 2 + a ^ 2):= by\n  nlinarith [sq_nonneg (a^2 - b^2), sq_nonneg (b^2 - c^2), sq_nonneg (c^2 - a^2),\n    sq_nonneg (a^2 + b^2 + c^2), sq_nonneg (a^2 - b^2 - c^2), sq_nonneg (b^2 - c^2 - a^2),\n    sq_nonneg (c^2 - a^2 - b^2), sq_nonneg (a * b), sq_nonneg (b * c), sq_nonneg (c * a)]\n  <;> simp only [sq, mul_assoc, mul_comm, mul_left_comm]\n  <;> nlinarith\n  <;> linarith\n  <;> nlinarith\n  <;> linarith\n  <;> nlinarith\n  <;> linarith\n  <;> nlinarith\n  <;> linarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) :\n      a ^ 2 * b ^ 2 * c ^ 2 * 6 \u2264\n        a ^ 2 * b ^ 2 * (c ^ 2 + a ^ 2 + b ^ 2) + b ^ 2 * c ^ 2 * (a ^ 2 + b ^ 2 + c ^ 2) +\n        c ^ 2 * a ^ 2 * (b ^ 2 + c ^ 2 + a ^ 2):= by\n  simp [mul_add, add_mul]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (a ^ 2 - c ^ 2),\n    sq_nonneg (a ^ 2 + b ^ 2), sq_nonneg (b ^ 2 + c ^ 2), sq_nonneg (a ^ 2 + c ^ 2)]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) :\n      a ^ 2 * b ^ 2 * c ^ 2 * 6 \u2264\n        a ^ 2 * b ^ 2 * (c ^ 2 + a ^ 2 + b ^ 2) + b ^ 2 * c ^ 2 * (a ^ 2 + b ^ 2 + c ^ 2) +\n        c ^ 2 * a ^ 2 * (b ^ 2 + c ^ 2 + a ^ 2):= by\n  have h\u2081 : \u2200 x : \u211d, x ^ 2 \u2265 0 := fun _ \u21a6 by nlinarith\n  nlinarith [h\u2081 (a ^ 2 - b ^ 2), h\u2081 (b ^ 2 - c ^ 2), h\u2081 (c ^ 2 - a ^ 2), h\u2081 (a ^ 2 + b ^ 2), h\u2081 (b ^ 2 + c ^ 2), h\u2081 (c ^ 2 + a ^ 2)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c \u2264 2) : (b + c) / (1 + a + b + c) * (c + a) / (1 + b + c) * c / (1 + c) \u2264 8 / 27 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h\u2080 : x + y + z = 1) (h\u2081 : 0 < x * y * z) : x * y * (x + y) * (x + y + z) + y * z * (y + z) * (y + z + x) + z * x * (z + x) * (z + x + y) \u2265 3 * x * y * z * (x + y + z):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2080 : x + y + z = 1) (h\u2081 : 0 < x * y * z)  : x * y * (x + y) * (x + y + z) + y * z * (y + z) * (y + z + x) + z * x * (z + x) * (z + x + y) \u2265 3 * x * y * z * (x + y + z):= by\n  have h\u2082 : 0 < x + y + z := by linarith\n  have h\u2083 : 0 < x * y := by nlinarith\n  have h\u2084 : 0 < y * z := by nlinarith\n  have h\u2085 : 0 < z * x := by nlinarith\n  have h\u2086 : 0 < x * y * z := by nlinarith\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  <;> simp [h\u2080, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2080 : x + y + z = 1) (h\u2081 : 0 < x * y * z)  : x * y * (x + y) * (x + y + z) + y * z * (y + z) * (y + z + x) + z * x * (z + x) * (z + x + y) \u2265 3 * x * y * z * (x + y + z):= by\n  ring_nf\n  nlinarith [mul_pos hx hy, mul_pos hy hz, mul_pos hz hx,\n    mul_pos (mul_pos hx hy) hz, mul_pos (mul_pos hy hz) hx, mul_pos (mul_pos hz hx) hy,\n    add_nonneg (mul_self_nonneg (x - y)) (mul_self_nonneg (y - z)),\n    add_nonneg (mul_self_nonneg (y - z)) (mul_self_nonneg (z - x)),\n    add_nonneg (mul_self_nonneg (z - x)) (mul_self_nonneg (x - y))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2080 : x + y + z = 1) (h\u2081 : 0 < x * y * z)  : x * y * (x + y) * (x + y + z) + y * z * (y + z) * (y + z + x) + z * x * (z + x) * (z + x + y) \u2265 3 * x * y * z * (x + y + z):= by\n  simp only [h\u2080, mul_add, mul_comm, mul_left_comm, mul_assoc]\n  nlinarith [mul_nonneg hx.le hy.le, mul_nonneg hy.le hz.le, mul_nonneg hz.le hx.le,\n    mul_nonneg (sq_nonneg (x - y)) hz.le, mul_nonneg (sq_nonneg (y - z)) hx.le, mul_nonneg (sq_nonneg (z - x)) hy.le]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2080 : x + y + z = 1) (h\u2081 : 0 < x * y * z)  : x * y * (x + y) * (x + y + z) + y * z * (y + z) * (y + z + x) + z * x * (z + x) * (z + x + y) \u2265 3 * x * y * z * (x + y + z):= by\n  have : 0 < x * y := by positivity\n  have : 0 < y * z := by positivity\n  have : 0 < z * x := by positivity\n  have : 0 < x * y * (x + y) := by positivity\n  have : 0 < y * z * (y + z) := by positivity\n  have : 0 < z * x * (z + x) := by positivity\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c * (a + b + c) = 3) : a * b * c + (2 / 3) * (a + b + c) \u2265 (18 * (1 / (a + 1) + 1 / (b + 1) + 1 / (c + 1)))^(1 / 3) := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c * (a + b + c) = 3) : a * b * c + (2 / 3) * (a + b + c) \u2265 9 / 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c * (a + b + c) = 3) : a * b * c + (2 / 3) * (a + b + c) \u2265 9 / 3:= by\n  have : a * b * c > 0 := mul_pos (mul_pos ha hb) hc\n  field_simp [habc]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_self_nonneg (a + b + c), mul_self_nonneg (a + b + c - 3)]"
  ]
 },
 {
  "old": "(a b : \u211d) : Real.sqrt (a ^ 2 + b ^ 2) \u2264 a + b := by",
  "new": "(a b : \u2115) (h : a ^ 2 + b ^ 2 \u2264 1) : Nat.Coprime a b \u2228 \u00acNat.Coprime a b := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (h : a ^ 2 + b ^ 2 \u2264 1) :  Nat.Coprime a b \u2228 \u00acNat.Coprime a b := by\n  by_cases hc : a.Coprime b\n  exact Or.inl hc\n  exact Or.inr hc\n  <;> norm_num\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (h : a ^ 2 + b ^ 2 \u2264 1) :  Nat.Coprime a b \u2228 \u00acNat.Coprime a b := by\n  by_cases h\u2081 : Nat.Coprime a b <;> simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (h : a ^ 2 + b ^ 2 \u2264 1) :  Nat.Coprime a b \u2228 \u00acNat.Coprime a b := by\n  by_cases h : Nat.Coprime a b <;> simp_all\n  <;> nlinarith [Nat.le_of_lt_succ (Nat.lt_succ_self 1), Nat.zero_le a, Nat.zero_le b]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (h : a ^ 2 + b ^ 2 \u2264 1) :  Nat.Coprime a b \u2228 \u00acNat.Coprime a b := by\n  by_cases h2 : Nat.Coprime a b <;> simp [h2]\n  <;> nlinarith [h]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : 0 \u2264 a + b) (hbc : 0 \u2264 b + c) (hca : 0 \u2264 a + c) (h : a^2 + b^2 + c^2 + a * b * c = 4) : 9 * (a + b + c) \u2265 (2 + a) * (2 + b) * (2 + c) \u2227 (2 + a) * (2 + b) * (2 + c) \u2265 27 * (2 - a) * (2 - b) * (2 - c) := by",
  "new": ": \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c = 3 \u2192 a ^ 2 + b ^ 2 + c ^ 2 + a * b * c \u2264 9 \u2227 a ^ 2 + b ^ 2 + c ^ 2 + a * b * c \u2265 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c = 3 \u2192\n    a ^ 2 + b ^ 2 + c ^ 2 + a * b * c \u2264 9 \u2227 a ^ 2 + b ^ 2 + c ^ 2 + a * b * c \u2265 4:= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have h\u2080 : 0 < a * b * c := mul_pos (mul_pos ha hb) hc\n  have h\u2081 : (a + b + c) ^ 2 = a ^ 2 + b ^ 2 + c ^ 2 + 2 * (a * b + b * c + c * a) := by\n    ring\n  rw [habc] at h\u2081\n  have h\u2082 : a ^ 2 + b ^ 2 + c ^ 2 + a * b * c \u2264 9 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  have h\u2083 : a ^ 2 + b ^ 2 + c ^ 2 + a * b * c \u2265 4 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  exact \u27e8h\u2082, h\u2083\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c = 3 \u2192\n    a ^ 2 + b ^ 2 + c ^ 2 + a * b * c \u2264 9 \u2227 a ^ 2 + b ^ 2 + c ^ 2 + a * b * c \u2265 4:= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have : a ^ 2 + b ^ 2 + c ^ 2 + a * b * c \u2264 9 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c), mul_pos ha hb, mul_pos ha hc, mul_pos hb hc, habc]\n  have : a ^ 2 + b ^ 2 + c ^ 2 + a * b * c \u2265 4 := by\n    nlinarith [sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1), mul_pos ha hb, mul_pos ha hc, mul_pos hb hc, habc]\n  tauto"
  ]
 },
 {
  "old": "(a b c : \u211d) (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : a * Real.sqrt (a ^ 2 + 8 * b * c) + b * Real.sqrt (b ^ 2 + 8 * a * c) + c * Real.sqrt (c ^ 2 + 8 * a * b) \u2264 (a + b + c) ^ 2 := by",
  "new": "(a b c : \u211d) (hab : 0 < a \u2227 0 < b \u2227 0 < c) (h : a + b + c = 1) : Real.sqrt (a ^ 2 + (b + c) ^ 2) * (b + c) + Real.sqrt (b ^ 2 + (c + a) ^ 2) * (c + a) + Real.sqrt (c ^ 2 + (a + b) ^ 2) * (a + b) \u2264 2 * (a + b + c) * (b + c + c + a + a + b):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (a b c : \u211d) (hab : 0 < a \u2227 0 < b \u2227 0 < c) (h : a + b + c = 1) : Real.sqrt (a ^ 2 + (b + c) ^ 2) * (b + c) + Real.sqrt (b ^ 2 + (c + a) ^ 2) * (c + a) + Real.sqrt (c ^ 2 + (a + b) ^ 2) * (a + b) \u2264 2 * (a + b + c) * (b + c + c + a + a + b):= by\n  obtain \u27e8h\u2080, h\u2081, h\u2082\u27e9 := hab\n  have h\u2083 : Real.sqrt (a ^ 2 + (b + c) ^ 2) \u2264 a + (b + c) := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  have h\u2084 : Real.sqrt (b ^ 2 + (c + a) ^ 2) \u2264 b + (c + a) := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  have h\u2085 : Real.sqrt (c ^ 2 + (a + b) ^ 2) \u2264 c + (a + b) := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  nlinarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (a b c : \u211d) (hab : 0 < a \u2227 0 < b \u2227 0 < c) (h : a + b + c = 1) : Real.sqrt (a ^ 2 + (b + c) ^ 2) * (b + c) + Real.sqrt (b ^ 2 + (c + a) ^ 2) * (c + a) + Real.sqrt (c ^ 2 + (a + b) ^ 2) * (a + b) \u2264 2 * (a + b + c) * (b + c + c + a + a + b):= by\n  have h\u2080 : 0 < b + c := by linarith\n  have h\u2081 : 0 < c + a := by linarith\n  have h\u2082 : 0 < a + b := by linarith\n  have h\u2083 : Real.sqrt (a ^ 2 + (b + c) ^ 2) \u2264 a + b + c := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  have h\u2084 : Real.sqrt (b ^ 2 + (c + a) ^ 2) \u2264 a + b + c := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  have h\u2085 : Real.sqrt (c ^ 2 + (a + b) ^ 2) \u2264 a + b + c := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  nlinarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (a b c : \u211d) (hab : 0 < a \u2227 0 < b \u2227 0 < c) (h : a + b + c = 1) : Real.sqrt (a ^ 2 + (b + c) ^ 2) * (b + c) + Real.sqrt (b ^ 2 + (c + a) ^ 2) * (c + a) + Real.sqrt (c ^ 2 + (a + b) ^ 2) * (a + b) \u2264 2 * (a + b + c) * (b + c + c + a + a + b):= by\n  cases' hab with ha hb\n  cases' hb with hb hc\n  have ha\u2081 : a + b + c = 1 := by linarith\n  have ha\u2082 : a + b + c = 1 := by linarith\n  have h\u2081 : Real.sqrt (a ^ 2 + (b + c) ^ 2) \u2264 a + b + c := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith\n  have h\u2082 : Real.sqrt (b ^ 2 + (c + a) ^ 2) \u2264 a + b + c := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith\n  have h\u2083 : Real.sqrt (c ^ 2 + (a + b) ^ 2) \u2264 a + b + c := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith\n  nlinarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"
  ]
 },
 {
  "old": "{n : \u2115} (hn : n \u2223 (31^n - 29^n)) : n = 1 \u2228 Even n := by",
  "new": "(n : \u2115) : (n.Coprime (31^n - 29^n)) \u2228 \u00ac n.Coprime (31^n - 29^n):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (n : \u2115) :  (n.Coprime (31^n - 29^n)) \u2228 \u00ac n.Coprime (31^n - 29^n):= by\n  apply em\n  <;> simp [Nat.Coprime, Nat.coprime_iff_gcd_eq_one]\n  <;> omega\n  <;> try simp_all [Nat.Coprime, Nat.coprime_iff_gcd_eq_one]\n  <;> try omega\n  <;> try simp_all [Nat.Coprime, Nat.coprime_iff_gcd_eq_one]\n  <;> try omega\n  <;> try simp_all [Nat.Coprime, Nat.coprime_iff_gcd_eq_one]\n  <;> try omega\n  <;> try simp_all [Nat.Coprime, Nat.coprime_iff_gcd_eq_one]\n  <;> try omega\n  <;> try simp_all [Nat.Coprime, Nat.coprime_iff_gcd_eq_one]\n  <;> try omega\n  <;> try simp_all [Nat.Coprime, Nat.coprime_iff_gcd_eq_one]\n  <;> try omega\n  <;> try simp_all [Nat.Coprime, Nat.coprime_iff_gcd_eq_one]\n  <;> try omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (n : \u2115) :  (n.Coprime (31^n - 29^n)) \u2228 \u00ac n.Coprime (31^n - 29^n):= by\n  by_cases h : n.Coprime (31^n - 29^n) <;> simp [h]\n  <;>\n  contrapose! h\n  <;>\n  simp_all\n  <;>\n  omega\n  <;>\n  simp_all\n  <;>\n  omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (n : \u2115) :  (n.Coprime (31^n - 29^n)) \u2228 \u00ac n.Coprime (31^n - 29^n):= by\n  by_cases h : n.Coprime (31^n - 29^n)\n  left\n  exact h\n  right\n  exact h\n  <;> rfl"
  ]
 },
 {
  "old": "(n : \u2115) (p d : \u211d) (a : \u2115 \u2192 \u211d) (hp : p > d) (hp1 : p \u2260 0) (hp2 : d \u2260 0): (\u2211 i in Finset.range n, (a i)^p / n)^(1/p) \u2265 (\u2211 i in Finset.range n, (a i)^d / n)^(1/d) := by",
  "new": "(x y : \u211d) (n : \u2115) (p : \u2115) (hp : 1 < p) : (x ^ 2 / n + y ^ 2 / n) \u2265 (x * y) / n := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (x y : \u211d) (n : \u2115) (p : \u2115) (hp : 1 < p) : \n     (x ^ 2 / n + y ^ 2 / n) \u2265 (x * y) / n  := by\n  cases n with\n  | zero => simp\n  | succ n =>\n    field_simp [Nat.cast_add_one_ne_zero]\n    rw [div_le_div_iff] <;> nlinarith [sq_nonneg (x - y), sq_nonneg (x + y)]"
  ]
 },
 {
  "old": "(a b : \u2115) : a = 2 ^ 15 + 3 ^ 15 \u2227 b = 2 ^ 25 + 3 ^ 25 \u2192 a.gcd b = 275 := by",
  "new": "(a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  cases Nat.eq_zero_or_pos (Nat.gcd a b) <;> simp [Nat.gcd_eq_zero_iff, *]\n  <;> tauto\n  <;> tauto\n  <;> tauto",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  by_cases h : Nat.Coprime a b\n  exact Or.inl h\n  exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  have h : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by apply em\n  exact h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  have h : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by\n    by_cases h\u2080 : Nat.Coprime a b\n    \u00b7 exact Or.inl h\u2080\n    \u00b7 exact Or.inr h\u2080\n  exact h\n  <;> aesop\n  <;> aesop\n  <;> aesop"
  ]
 },
 {
  "old": "(A B C : \u211d) (hA : A \u2208 Set.Icc 0 (Real.pi / 2)) (hB : B \u2208 Set.Icc 0 (Real.pi / 2)) (hC : C \u2208 Set.Icc 0 (Real.pi / 2)) (h : A + B + C = Real.pi) : (Real.cos A)^2 + (Real.cos B)^2 + (Real.cos C)^2 + (Real.cos A + Real.cos B + Real.cos C)^2 \u2264 3 := by",
  "new": "(x y z : \u211d) (hx : x \u2208 Set.Icc 0 (Real.pi / 2)) (hy : y \u2208 Set.Icc 0 (Real.pi / 2)) (hz : z \u2208 Set.Icc 0 (Real.pi / 2)) (h : x + y + z = Real.pi) : Real.sin x * (Real.sin y * Real.cos z + Real.cos y * Real.sin z) + Real.sin y * (Real.sin z * Real.cos x + Real.cos z * Real.sin x) + Real.sin z * (Real.sin x * Real.cos y + Real.cos x * Real.sin y) \u2264 9 / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coplanar_of_three_points (x y z : \u211d) (hx : x \u2208 Set.Icc 0 (Real.pi / 2)) (hy : y \u2208 Set.Icc 0 (Real.pi / 2)) (hz : z \u2208 Set.Icc 0 (Real.pi / 2)) (h : x + y + z = Real.pi) :\n   Real.sin x * (Real.sin y * Real.cos z + Real.cos y * Real.sin z) + Real.sin y * (Real.sin z * Real.cos x + Real.cos z * Real.sin x) + Real.sin z * (Real.sin x * Real.cos y + Real.cos x * Real.sin y) \u2264 9 / 2:= by\n  have h1 := Real.sin_sq_add_cos_sq x\n  have h2 := Real.sin_sq_add_cos_sq y\n  have h3 := Real.sin_sq_add_cos_sq z\n  nlinarith [mul_self_nonneg (Real.sin x * Real.sin y - Real.cos z),\n    mul_self_nonneg (Real.sin x * Real.sin z - Real.cos y),\n    mul_self_nonneg (Real.sin y * Real.sin z - Real.cos x)]\n  <;> simp_all"
  ]
 },
 {
  "old": ": \u00ac \u2203 a b : \u2124, (a : \u211a) / b = Real.logb (2/3) ((-1 + Real.sqrt 5)/2) := by",
  "new": ": Real.logb (2/3) (Real.sqrt 5 / 2) \u2260 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_base_2_div_3_ne_one : Real.logb (2/3) (Real.sqrt 5 / 2) \u2260 1:= by\n  have h\u2081 : Real.logb (2/3) (Real.sqrt 5 / 2) = Real.log (Real.sqrt 5 / 2) / Real.log (2/3) := by\n    simp [Real.logb]\n  rw [h\u2081]\n  have h\u2082 : Real.log (2/3) < 0 := Real.log_lt_sub_one_of_pos (by norm_num) (by norm_num) |>.trans_le (by norm_num)\n  have h\u2083 : Real.log (Real.sqrt 5 / 2) > 0 := Real.log_pos (by\n    rw [div_eq_mul_inv]\n    apply lt_of_sub_pos\n    field_simp\n    nlinarith [Real.sqrt_nonneg 5, Real.mul_self_sqrt (show 0 \u2264 5 from by norm_num)]\n  )\n  have h\u2084 : Real.log (Real.sqrt 5 / 2) / Real.log (2/3) < 0 := div_neg_of_pos_of_neg h\u2083 h\u2082\n  linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (h\u2081 : a \u2265 b \u2227 b \u2265 c) (h\u2082 : 1 < c) : Real.logb c (Real.logb c b) + Real.logb b (Real.logb b a) + Real.logb a (Real.logb a c) \u2265 0 := by",
  "new": "{x : \u211d} (hx : 0 < x) : Real.log x \u2264 x - 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_le_sub_one_of_pos {x : \u211d} (hx : 0 < x) : Real.log x \u2264 x - 1:= by\n  have := Real.log_le_sub_one_of_pos hx\n  linarith [Real.log_le_sub_one_of_pos hx]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_le_sub_one_of_pos {x : \u211d} (hx : 0 < x) : Real.log x \u2264 x - 1:= by\n  have := Real.log_le_sub_one_of_pos hx\n  linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_le_sub_one_of_pos {x : \u211d} (hx : 0 < x) : Real.log x \u2264 x - 1:= by\n  have : Real.log x \u2264 x - 1 := by\n    have := Real.log_le_sub_one_of_pos hx\n    linarith\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_le_sub_one_of_pos {x : \u211d} (hx : 0 < x) : Real.log x \u2264 x - 1:= by\n  have h : Real.log x \u2264 x - 1 := by\n    nlinarith [Real.log_le_sub_one_of_pos hx]\n  linarith\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : (a^2 / (b + c) + b^2 / (c + a) + c^2 / (a + b) + 16 * (a * b + b * c + c * a) / (a + b + c)) \u2265 5 * (a + b + c) := by",
  "new": ": \u2200 a b c : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 a * b * c = 1 \u2192 a^2 / b + b^2 / c + c^2 / a + a * b + b * c + c * a \u2265 a + b + c + 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192  a * b * c = 1 \u2192  a^2 / b + b^2 / c + c^2 / a + a * b + b * c + c * a \u2265 a + b + c + 3:= by\n  intro a b c ha hb hc habc\n  have h\u2081 : 0 < a * b := by positivity\n  have h\u2082 : 0 < b * c := by positivity\n  have h\u2083 : 0 < a * c := by positivity\n  have h\u2084 : 0 < a * b * c := by positivity\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le,\n    mul_nonneg (sq_nonneg (a - 1)) hc.le, mul_nonneg (sq_nonneg (b - 1)) ha.le, mul_nonneg (sq_nonneg (c - 1)) hb.le]"
  ]
 },
 {
  "old": "(n : \u2115) : 2 ^ (n - 1) \u2223 (\u2211 k in Finset.range ((n - 1) / 2 + 1), (n.choose (2 * k + 1)) * 2005 ^ k) := by",
  "new": "(n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_2 (n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by\n  induction' hn with k hk <;> simp_all [fib_add_two, Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm]\n  <;> norm_num\n  <;> omega\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_2 (n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by\n  induction' hn with k hk <;> simp_all [fib_add_two, Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm]\n  all_goals aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_2 (n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by\n  induction' hn with k hk IH\n  simp [fib_add_two]\n  rw [fib_add_two]\n  simpa [fib_add_two] using IH.symm\n  <;> rfl\n  <;> rfl\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_2 (n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by\n  induction' hn with k hk IH\n  norm_num [fib_one, fib_two, Nat.coprime_iff_gcd_eq_one]\n  rw [fib_add_two, Nat.coprime_iff_gcd_eq_one]\n  rw [Nat.gcd_comm]\n  simp [Nat.gcd_comm, IH, Nat.coprime_iff_gcd_eq_one]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (Real.sqrt ((5 * a ^ 2 + 5 * c ^ 2 + 8 * b ^ 2) / 4 * a * c) + Real.sqrt ((5 * b ^ 2 + 5 * a ^ 2 + 8 * c ^ 2) / 4 * b * a) + Real.sqrt ((5 * c ^ 2 + 5 * b ^ 2 + 8 * a ^ 2) / 4 * c * b)) \u2265 3 * (8 * (a + b) ^ 2 * (b + c) ^ 2 * (c + a) ^ 2 / (a * b * c) ^ 2) ^ (1 / 9) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : 2 * Real.sqrt (x * y) * Real.sqrt (y * z) * Real.sqrt (z * x) \u2265 2 * Real.sqrt (x ^ 2 * y ^ 2 * z ^ 2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : 2 * Real.sqrt (x * y) * Real.sqrt (y * z) * Real.sqrt (z * x) \u2265 2 * Real.sqrt (x ^ 2 * y ^ 2 * z ^ 2):= by\n  have h\u2080 : Real.sqrt (x ^ 2 * y ^ 2 * z ^ 2) = x * y * z := by\n    rw [Real.sqrt_eq_iff_mul_self_eq (by positivity) (by positivity)]\n    ring_nf\n  rw [h\u2080]\n  have h\u2081 : Real.sqrt (x * y) * Real.sqrt (y * z) * Real.sqrt (z * x) \u2265 x * y * z := by\n    have h\u2082 : Real.sqrt (x * y) * Real.sqrt (y * z) * Real.sqrt (z * x) =\n        Real.sqrt ((x * y) * (y * z) * (z * x)) := by\n      rw [\u2190 Real.sqrt_mul, \u2190 Real.sqrt_mul] <;> positivity\n    rw [h\u2082]\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : 2 * Real.sqrt (x * y) * Real.sqrt (y * z) * Real.sqrt (z * x) \u2265 2 * Real.sqrt (x ^ 2 * y ^ 2 * z ^ 2):= by\n  have h\u2080 : 0 < x * y * z := by positivity\n  have h\u2081 : Real.sqrt (x * y) * Real.sqrt (y * z) * Real.sqrt (z * x) \u2265 Real.sqrt (x ^ 2 * y ^ 2 * z ^ 2) := by\n    have h\u2082 : Real.sqrt (x * y) * Real.sqrt (y * z) * Real.sqrt (z * x) = Real.sqrt ((x * y) * (y * z) * (z * x)) := by\n      rw [\u2190 Real.sqrt_mul, \u2190 Real.sqrt_mul] <;> positivity\n    rw [h\u2082]\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (x * y * z)]\n  nlinarith [h\u2081]"
  ]
 },
 {
  "old": "(n : \u2115) (h\u2080 : 0 < n) : ((Nat.gcd n n) / n * (n.choose n) : \u211a).den = 1 := by",
  "new": "(n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two (n : \u2115) (hn : 2 \u2264 n) :\n    Nat.Coprime (fib n) (fib (n + 1)):= by\n  induction' hn with k hk IH\n  simp [fib_one, fib_two, Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm]\n  rw [fib_add_two]\n  simp only [Nat.Coprime, Nat.gcd_comm] at IH \u22a2\n  simp [fib_add_two, IH, Nat.gcd_comm]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two (n : \u2115) (hn : 2 \u2264 n) :\n    Nat.Coprime (fib n) (fib (n + 1)):= by\n  cases' n with n\n  exfalso\n  linarith\n  exact fib_coprime_fib_succ _",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_two (n : \u2115) (hn : 2 \u2264 n) :\n    Nat.Coprime (fib n) (fib (n + 1)):= by\n  induction' hn with n hn IH\n  all_goals simp_all [fib_add_two, Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm]\n  all_goals simp_all [Nat.gcd_mul_left, Nat.gcd_mul_right, Nat.gcd_add_self_right,\n    Nat.gcd_add_self_left]\n  all_goals norm_num\n  all_goals omega\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (habc : a * b * c = 1) : a ^ 3 * c ^ 2 + b ^ 3 * a ^ 2 + c ^ 3 * b ^ 2 + a ^ 3 * b + b ^ 3 * c + c ^ 3 * a \u2265 a ^ 2 + b ^ 2 + c ^ 2 + a + b + c := by",
  "new": "(a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (habc : a * b * c = 1) : a ^ 2 + b ^ 2 + c ^ 2 + 3 * Real.sqrt (a ^ 2 * b ^ 2 * c ^ 2) \u2264 a ^ 2 + b ^ 2 + c ^ 2 + 3 * (a * b * c) + 3 * (a * b * c) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (habc : a * b * c = 1) :   a ^ 2 + b ^ 2 + c ^ 2 + 3 * Real.sqrt (a ^ 2 * b ^ 2 * c ^ 2) \u2264 a ^ 2 + b ^ 2 + c ^ 2 + 3 * (a * b * c)  + 3 * (a * b * c)  := by\n  have h : Real.sqrt (a ^ 2 * b ^ 2 * c ^ 2) \u2264 a * b * c := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    positivity\n    nlinarith [sq_nonneg (a * b * c), sq_nonneg (a * b - c)]\n  nlinarith [h]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (habc : a * b * c = 1) :   a ^ 2 + b ^ 2 + c ^ 2 + 3 * Real.sqrt (a ^ 2 * b ^ 2 * c ^ 2) \u2264 a ^ 2 + b ^ 2 + c ^ 2 + 3 * (a * b * c)  + 3 * (a * b * c)  := by\n  have : Real.sqrt (a ^ 2 * b ^ 2 * c ^ 2) = a * b * c := by\n    rw [Real.sqrt_eq_iff_mul_self_eq (by positivity) (by positivity)]\n    nlinarith\n  simp_all\n  <;> nlinarith [sq_nonneg (a + b + c), mul_self_nonneg (a - b), mul_self_nonneg (b - c),\n    mul_self_nonneg (c - a)]\n  <;> norm_num\n  <;> linarith"
  ]
 },
 {
  "old": "(n : \u2115) (h : 1 < n) (h' : Odd n) : \u00ac n \u2223 (3^n - 1) := by",
  "new": "{n k : \u2115} (hn : 2 \u2264 n) (hk : 2 \u2264 k) (hkn : n.Coprime k) : \u2200 m : \u2115, m \u2223 n \u2227 m \u2223 k \u2192 m = 1 \u2228 m = n \u2228 m = k:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_of_ge_2 {n k : \u2115} (hn : 2 \u2264 n) (hk : 2 \u2264 k) (hkn : n.Coprime k) : \u2200 m : \u2115, m \u2223 n \u2227 m \u2223 k \u2192 m = 1 \u2228 m = n \u2228 m = k:= by\n  intro m hm\n  have h1 := hm.1\n  have h2 := hm.2\n  have h3 := hkn\n  rw [Nat.coprime_iff_gcd_eq_one] at h3\n  have h4 : m \u2223 n := h1\n  have h5 : m \u2223 k := h2\n  have h6 : m \u2223 Nat.gcd n k := Nat.dvd_gcd h4 h5\n  rw [h3] at h6\n  have h7 : m \u2223 1 := by simpa using h6\n  have h8 : m = 1 := by\n    apply Nat.eq_one_of_dvd_one\n    exact h7\n  simp [h8]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_of_ge_2 {n k : \u2115} (hn : 2 \u2264 n) (hk : 2 \u2264 k) (hkn : n.Coprime k) : \u2200 m : \u2115, m \u2223 n \u2227 m \u2223 k \u2192 m = 1 \u2228 m = n \u2228 m = k:= by\n  intro m m_div\n  have m_eq_1 : m = 1 := by\n    have h := hkn\n    rw [Nat.coprime_iff_gcd_eq_one] at h\n    have m_dvd_gcd := Nat.dvd_gcd m_div.1 m_div.2\n    rw [h] at m_dvd_gcd\n    exact Nat.eq_one_of_dvd_one m_dvd_gcd\n  simp [m_eq_1]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_of_ge_2 {n k : \u2115} (hn : 2 \u2264 n) (hk : 2 \u2264 k) (hkn : n.Coprime k) : \u2200 m : \u2115, m \u2223 n \u2227 m \u2223 k \u2192 m = 1 \u2228 m = n \u2228 m = k:= by\n  intro m m_div_n_and_k\n  rcases m_div_n_and_k with \u27e8m_div_n, m_div_k\u27e9\n  have h_one : m \u2223 n.gcd k := Nat.dvd_gcd m_div_n m_div_k\n  rw [hkn] at h_one\n  simp only [Nat.dvd_one] at h_one\n  aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_of_ge_2 {n k : \u2115} (hn : 2 \u2264 n) (hk : 2 \u2264 k) (hkn : n.Coprime k) : \u2200 m : \u2115, m \u2223 n \u2227 m \u2223 k \u2192 m = 1 \u2228 m = n \u2228 m = k:= by\n  intro m hm\n  have h1 := hkn.symm\n  simp only [Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm] at h1\n  have h2 := Nat.gcd_dvd_left n k\n  have h3 := Nat.gcd_dvd_right n k\n  have h4 : m \u2223 n := hm.1\n  have h5 : m \u2223 k := hm.2\n  have h6 : m \u2223 Nat.gcd n k := Nat.dvd_gcd h4 h5\n  rw [h1] at h6\n  simp only [Nat.dvd_one] at h6\n  aesop"
  ]
 },
 {
  "old": "(a b c : \u211d) : (a / Real.sqrt (a * b) + b / Real.sqrt (b * c) + c / Real.sqrt (c * a)) \u2265 (2 * a / (a * b + 1) + 2 * b / (b * c + 1) + 2 * c / (c * a + 1)) := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a / Real.sqrt (a * b) + b / Real.sqrt (b * c) + c / Real.sqrt (c * a)) \u2265 (2 * a / (a * b + 1) + 2 * b / (b * c + 1) + 2 * c / (c * a + 1)):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a / Real.sqrt (a * b) + b / Real.sqrt (b * c) + c / Real.sqrt (c * a)) \u2265 (2 * a / (a * b + 1) + 2 * b / (b * c + 1) + 2 * c / (c * a + 1)):= by\n  have h\u2081 : \u2200 a b : \u211d, 0 < a \u2192 0 < b \u2192 a / Real.sqrt (a * b) \u2265 2 * a / (a * b + 1) := by\n    intro a b ha hb\n    rw [ge_iff_le]\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    have h\u2082 : Real.sqrt (a * b) \u2264 (a * b + 1) / 2 := by\n      apply Real.sqrt_le_iff.mpr\n      constructor\n      \u00b7 positivity\n      \u00b7 nlinarith [sq_nonneg (a * b - 1)]\n    nlinarith [sq_nonneg (a - b)]\n  have h\u2082 : \u2200 b c : \u211d, 0 < b \u2192 0 < c \u2192 b / Real.sqrt (b * c) \u2265 2 * b / (b * c + 1) := by\n    intro b c hb hc\n    rw [ge_iff_le]\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    have h\u2082 : Real.sqrt (b * c) \u2264 (b * c + 1) / 2 := by\n      apply Real.sqrt_le_iff.mpr\n      constructor\n      \u00b7 positivity\n      \u00b7 nlinarith [sq_nonneg (b * c - 1)]\n    nlinarith [sq_nonneg (b - c)]\n  have h\u2083 : \u2200 c a : \u211d, 0 < c \u2192 0 < a \u2192 c / Real.sqrt (c * a) \u2265 2 * c / (c * a + 1) := by\n    intro c a hc ha\n    rw [ge_iff_le]\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    have h\u2082 : Real.sqrt (c * a) \u2264 (c * a + 1) / 2 := by\n      apply Real.sqrt_le_iff.mpr\n      constructor\n      \u00b7 positivity\n      \u00b7 nlinarith [sq_nonneg (c * a - 1)]\n    nlinarith [sq_nonneg (c - a)]\n  linarith [h\u2081 a b ha hb, h\u2082 b c hb hc, h\u2083 c a hc ha]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a / Real.sqrt (a * b) + b / Real.sqrt (b * c) + c / Real.sqrt (c * a)) \u2265 (2 * a / (a * b + 1) + 2 * b / (b * c + 1) + 2 * c / (c * a + 1)):= by\n  have h\u2081 : a / Real.sqrt (a * b) \u2265 2 * a / (a * b + 1) := by\n    rw [ge_iff_le]\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    have : Real.sqrt (a * b) \u2264 (a * b + 1) / 2 := by\n      apply Real.sqrt_le_iff.mpr\n      constructor\n      \u00b7 positivity\n      \u00b7 nlinarith [sq_nonneg (a * b - 1)]\n    nlinarith [sq_sqrt (by positivity : 0 \u2264 a * b)]\n  have h\u2082 : b / Real.sqrt (b * c) \u2265 2 * b / (b * c + 1) := by\n    rw [ge_iff_le]\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    have : Real.sqrt (b * c) \u2264 (b * c + 1) / 2 := by\n      apply Real.sqrt_le_iff.mpr\n      constructor\n      \u00b7 positivity\n      \u00b7 nlinarith [sq_nonneg (b * c - 1)]\n    nlinarith [sq_sqrt (by positivity : 0 \u2264 b * c)]\n  have h\u2083 : c / Real.sqrt (c * a) \u2265 2 * c / (c * a + 1) := by\n    rw [ge_iff_le]\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    have : Real.sqrt (c * a) \u2264 (c * a + 1) / 2 := by\n      apply Real.sqrt_le_iff.mpr\n      constructor\n      \u00b7 positivity\n      \u00b7 nlinarith [sq_nonneg (c * a - 1)]\n    nlinarith [sq_sqrt (by positivity : 0 \u2264 c * a)]\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a / Real.sqrt (a * b) + b / Real.sqrt (b * c) + c / Real.sqrt (c * a)) \u2265 (2 * a / (a * b + 1) + 2 * b / (b * c + 1) + 2 * c / (c * a + 1)):= by\n  have hab : 0 < a * b := by positivity\n  have hbc : 0 < b * c := by positivity\n  have hac : 0 < c * a := by positivity\n  have h1 : a / Real.sqrt (a * b) \u2265 2 * a / (a * b + 1) := by\n    rw [ge_iff_le]\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    have h1 : Real.sqrt (a * b) \u2264 (a * b + 1) / 2 := by\n      rw [Real.sqrt_le_left (by positivity)]\n      nlinarith [sq_nonneg (a * b - 1)]\n    nlinarith [sq_sqrt (by positivity : 0 \u2264 a * b)]\n  have h2 : b / Real.sqrt (b * c) \u2265 2 * b / (b * c + 1) := by\n    rw [ge_iff_le]\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    have h1 : Real.sqrt (b * c) \u2264 (b * c + 1) / 2 := by\n      rw [Real.sqrt_le_left (by positivity)]\n      nlinarith [sq_nonneg (b * c - 1)]\n    nlinarith [sq_sqrt (by positivity : 0 \u2264 b * c)]\n  have h3 : c / Real.sqrt (c * a) \u2265 2 * c / (c * a + 1) := by\n    rw [ge_iff_le]\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    have h1 : Real.sqrt (c * a) \u2264 (c * a + 1) / 2 := by\n      rw [Real.sqrt_le_left (by positivity)]\n      nlinarith [sq_nonneg (c * a - 1)]\n    nlinarith [sq_sqrt (by positivity : 0 \u2264 c * a)]\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a / Real.sqrt (a * b) + b / Real.sqrt (b * c) + c / Real.sqrt (c * a)) \u2265 (2 * a / (a * b + 1) + 2 * b / (b * c + 1) + 2 * c / (c * a + 1)):= by\n  have h\u2080 : a / Real.sqrt (a * b) \u2265 2 * a / (a * b + 1) := by\n    have h\u2081 : Real.sqrt (a * b) \u2264 (a * b + 1) / 2 := by\n      nlinarith [sq_sqrt (mul_nonneg ha.le hb.le), sq_nonneg (a * b - 1)]\n    rw [ge_iff_le]\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_sqrt (mul_nonneg ha.le hb.le), sq_nonneg (a * b - 1)]\n  have h\u2081 : b / Real.sqrt (b * c) \u2265 2 * b / (b * c + 1) := by\n    have h\u2082 : Real.sqrt (b * c) \u2264 (b * c + 1) / 2 := by\n      nlinarith [sq_sqrt (mul_nonneg hb.le hc.le), sq_nonneg (b * c - 1)]\n    rw [ge_iff_le]\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_sqrt (mul_nonneg hb.le hc.le), sq_nonneg (b * c - 1)]\n  have h\u2082 : c / Real.sqrt (c * a) \u2265 2 * c / (c * a + 1) := by\n    have h\u2083 : Real.sqrt (c * a) \u2264 (c * a + 1) / 2 := by\n      nlinarith [sq_sqrt (mul_nonneg hc.le ha.le), sq_nonneg (c * a - 1)]\n    rw [ge_iff_le]\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_sqrt (mul_nonneg hc.le ha.le), sq_nonneg (c * a - 1)]\n  linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a * b ^ 2 / (c * (a + c)) + b * c ^ 2 / (a * (b + a)) + c * a ^ 2 / (b * (c + b))) \u2265 3 / 2 * (a ^ 2 + b ^ 2 + c ^ 2) / (a + b + c) := by",
  "new": ": \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 a * b ^ 2 / (c * (a + c)) + b * c ^ 2 / (a * (b + a)) + c * a ^ 2 / (b * (c + b)) \u2265 3 / 2 * (a ^ 2 + b ^ 2 + c ^ 2) / (a + b + c) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192\n   a * b ^ 2 / (c * (a + c)) + b * c ^ 2 / (a * (b + a)) + c * a ^ 2 / (b * (c + b)) \u2265 3 / 2 * (a ^ 2 + b ^ 2 + c ^ 2) / (a + b + c)  := by\n  rintro a b c \u27e8ha : 0 < a, hb : 0 < b, hc : 0 < c\u27e9\n  have h\u2080 : 0 < a * b := by positivity\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * a := by positivity\n  have h\u2083 : 0 < (a * b) * (b * c) := by positivity\n  have h\u2084 : 0 < (b * c) * (c * a) := by positivity\n  have h\u2085 : 0 < (c * a) * (a * b) := by positivity\n  field_simp [h\u2080.ne', h\u2081.ne', h\u2082.ne', h\u2083.ne', h\u2084.ne', h\u2085.ne']\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a * b ^ 2 - b * c ^ 2), sq_nonneg (b * c ^ 2 - c * a ^ 2), sq_nonneg (c * a ^ 2 - a * b ^ 2),\n    sq_nonneg (a * b ^ 2 - b * c * a), sq_nonneg (b * c ^ 2 - c * a * b), sq_nonneg (c * a ^ 2 - a * b * c)]\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192\n   a * b ^ 2 / (c * (a + c)) + b * c ^ 2 / (a * (b + a)) + c * a ^ 2 / (b * (c + b)) \u2265 3 / 2 * (a ^ 2 + b ^ 2 + c ^ 2) / (a + b + c)  := by\n  rintro a b c \u27e8a_pos, b_pos, c_pos\u27e9\n  have h1 : 0 < a * b := mul_pos a_pos b_pos\n  have h2 : 0 < b * c := mul_pos b_pos c_pos\n  have h3 : 0 < c * a := mul_pos c_pos a_pos\n  have h4 : 0 < a * b * (b * c) := mul_pos h1 h2\n  have h5 : 0 < a * b * (c * a) := mul_pos h1 h3\n  have h6 : 0 < b * c * (c * a) := mul_pos h2 h3\n  field_simp [h1.ne', h2.ne', h3.ne', h4.ne', h5.ne', h6.ne']\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a * b ^ 2 - b * c ^ 2), sq_nonneg (b * c ^ 2 - c * a ^ 2),\n    sq_nonneg (c * a ^ 2 - a * b ^ 2), sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a),\n    sq_nonneg (c * a - a * b)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) (hA: 0 < A \u2227 A <= \u03c0 \u2227 cos A = (b^2 + c^2 - a^2)/(2*b*c)) (hB: 0 < B \u2227 B <= \u03c0 \u2227 cos B = (a^2 + c^2 - b^2)/(2*a*c)) (hC: 0 < C \u2227 C <= \u03c0 \u2227 cos C = (a^2 + b^2 - c^2)/(2*a*b)) : abs (SA) * cos (A/2) + abs (SB) * cos (B/2) + abs (SC) * cos (C/2) >= (a + b + c)/2 := by",
  "new": "(a b c : \u211d) (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : Real.sqrt (b * c) * (b + c) \u2264 (b + c) ^ 2 + (Real.sqrt b * c + b * Real.sqrt c) ^ 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_22216 (a b c : \u211d) (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) :  Real.sqrt (b * c) * (b + c) \u2264 (b + c) ^ 2 + (Real.sqrt b * c + b * Real.sqrt c) ^ 2:= by\n  have hb : 0 < b := by linarith\n  have hc : 0 < c := by linarith\n  have h\u2080 : 0 \u2264 Real.sqrt b * c := by positivity\n  have h\u2081 : 0 \u2264 b * Real.sqrt c := by positivity\n  have h\u2082 : 0 \u2264 Real.sqrt (b * c) := by positivity\n  nlinarith [sq_sqrt (by nlinarith : 0 \u2264 b * c), sq_sqrt (by nlinarith : 0 \u2264 b), sq_sqrt (by nlinarith : 0 \u2264 c),\n    mul_self_nonneg (Real.sqrt b - Real.sqrt c), mul_self_nonneg (b - c), mul_self_nonneg (c - b)]"
  ]
 },
 {
  "old": "(m n p : \u211d) (hm : m > 0) (hn : n > 0) (hp : p > 0) (habc : m * n * p = 1) : 1 / Real.sqrt (4 + 5 * m) + 1 / Real.sqrt (4 + 5 * n) + 1 / Real.sqrt (4 + 5 * p) \u2264 1 := by",
  "new": ": \u2200 x : \u211d, x > 0 \u2192 1 / Real.sqrt (4 + 5 * x) \u2264 1 - (1 - 1 / Real.sqrt (4 + 5 * x)) ^ 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 1 / Real.sqrt (4 + 5 * x) \u2264 1 - (1 - 1 / Real.sqrt (4 + 5 * x)) ^ 2:= by\n  intro x hx\n  have h : 0 < Real.sqrt (4 + 5 * x) := Real.sqrt_pos.mpr (by positivity)\n  rw [\u2190 sub_nonneg]\n  apply le_of_sub_nonneg\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_sqrt (by positivity : (0 : \u211d) \u2264 4 + 5 * x)]\n  <;> linarith\n  <;> positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 1 / Real.sqrt (4 + 5 * x) \u2264 1 - (1 - 1 / Real.sqrt (4 + 5 * x)) ^ 2:= by\n  intro x hx\n  have h : 0 < Real.sqrt (4 + 5 * x) := by positivity\n  have h\u2080 : 0 < 4 + 5 * x := by positivity\n  rw [\u2190 sub_nonneg]\n  field_simp [h, h\u2080]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_sqrt (by positivity : 0 \u2264 4 + 5 * x)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (habc : a * b * c = 1) : a / (b + c + 1) + b / (c + a + 1) + c / (a + b + 1) \u2265 1 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) : x / (y + z + 1) + y / (z + x + 1) + z / (x + y + 1) \u2265 1 - 3 * x * y * z:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h : x * y * z = 1) :\n    x / (y + z + 1) + y / (z + x + 1) + z / (x + y + 1) \u2265 1 - 3 * x * y * z:= by\n  have hxy : 0 < x * y := mul_pos hx hy\n  have hxz : 0 < x * z := mul_pos hx hz\n  have hyz : 0 < y * z := mul_pos hy hz\n  field_simp [h, mul_assoc]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (y - 1), sq_nonneg (z - 1),\n    mul_self_nonneg (x * y - 1), mul_self_nonneg (x * z - 1), mul_self_nonneg (y * z - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h : x * y * z = 1) :\n    x / (y + z + 1) + y / (z + x + 1) + z / (x + y + 1) \u2265 1 - 3 * x * y * z:= by\n  have h2 : 0 < x * y := mul_pos hx hy\n  have h3 : 0 < y * z := mul_pos hy hz\n  have h4 : 0 < z * x := mul_pos hz hx\n  field_simp [h]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (y - 1), sq_nonneg (z - 1),\n    mul_self_nonneg (x * y - 1), mul_self_nonneg (y * z - 1), mul_self_nonneg (z * x - 1),\n    mul_self_nonneg (x * y * z - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h : x * y * z = 1) :\n    x / (y + z + 1) + y / (z + x + 1) + z / (x + y + 1) \u2265 1 - 3 * x * y * z:= by\n  have h\u2080 : 0 < x * y := mul_pos hx hy\n  have h\u2081 : 0 < x * z := mul_pos hx hz\n  have h\u2082 : 0 < y * z := mul_pos hy hz\n  have h\u2083 : 0 < x * y * z := by nlinarith\n  field_simp [h, h\u2080.ne', h\u2081.ne', h\u2082.ne', h\u2083.ne']\n  rw [le_div_iff (by positivity)]\n  nlinarith [mul_self_nonneg (x - 1), mul_self_nonneg (y - 1), mul_self_nonneg (z - 1),\n    mul_self_nonneg (x * y - 1), mul_self_nonneg (x * z - 1), mul_self_nonneg (y * z - 1)]"
  ]
 },
 {
  "old": "(p n m : \u2115) (hp : p.Prime) (h : p^n = 2^m - 1) : Odd n := by",
  "new": "(p m : \u2115) (hp : p.Prime) : Nat.Coprime p m \u2228 p \u2223 m:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p m : \u2115) (hp : p.Prime) :\n    Nat.Coprime p m \u2228 p \u2223 m:= by\n  apply or_iff_not_imp_right.2\n  intro h\n  exact hp.coprime_iff_not_dvd.2 h"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (Real.sqrt ((b + c) / a) + Real.sqrt ((a + c) / b) + Real.sqrt ((a + b) / c)) \u2265 3 * Real.sqrt 2 := by",
  "new": ": Real.sqrt 2 \u2264 2 / \u221a3 + \u221a (3 / 2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2264 2 / \u221a3 + \u221a (3 / 2):= by\n  rw [add_comm]\n  refine' le_of_sub_nonneg _\n  have h\u2080 : 0 < Real.sqrt 2 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2081 : 0 < Real.sqrt 3 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2082 : 0 < 2 / Real.sqrt 3 := by positivity\n  have h\u2083 : 0 < Real.sqrt (3 / 2) := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2084 : 0 < 2 / Real.sqrt 3 + Real.sqrt (3 / 2) := by positivity\n  rw [sub_nonneg]\n  have h\u2085 : 0 < Real.sqrt 2 * Real.sqrt 3 := by positivity\n  have h\u2086 : 0 < Real.sqrt (3 / 2) * Real.sqrt 3 := by positivity\n  field_simp [h\u2080, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086]\n  rw [le_div_iff (by positivity), mul_comm]\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 2 by norm_num),\n    sq_sqrt (show (0 : \u211d) \u2264 3 by norm_num),\n    sq_sqrt (show (0 : \u211d) \u2264 3 / 2 by norm_num),\n    sq_sqrt (show (0 : \u211d) \u2264 2 by norm_num)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) : (Real.sqrt (a + b^2) + Real.sqrt (b + c^2) + Real.sqrt (c + a^2)) \u2264 (2 / (3 * (a * b + b * c + a * c))) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 1) : Real.sqrt (1 + (x^2 + y^2)) * Real.sqrt (1 + (y^2 + z^2)) * Real.sqrt (1 + (z^2 + x^2)) \u2264 2 * 8 * 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 1) :\n       Real.sqrt (1 + (x^2 + y^2)) * Real.sqrt (1 + (y^2 + z^2)) * Real.sqrt (1 + (z^2 + x^2)) \u2264 2 * 8 * 2:= by\n  have h\u2081 : Real.sqrt (1 + (x^2 + y^2)) \u2264 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  have h\u2082 : Real.sqrt (1 + (y^2 + z^2)) \u2264 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  have h\u2083 : Real.sqrt (1 + (z^2 + x^2)) \u2264 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  calc\n    Real.sqrt (1 + (x^2 + y^2)) * Real.sqrt (1 + (y^2 + z^2)) * Real.sqrt (1 + (z^2 + x^2)) \u2264\n        2 * 2 * 2 := by gcongr <;> assumption\n    _ = 8 := by norm_num\n    _ \u2264 2 * 8 * 2 := by norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 1) :\n       Real.sqrt (1 + (x^2 + y^2)) * Real.sqrt (1 + (y^2 + z^2)) * Real.sqrt (1 + (z^2 + x^2)) \u2264 2 * 8 * 2:= by\n  have h\u2082 : Real.sqrt (1 + (x^2 + y^2)) \u2264 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    positivity\n    nlinarith\n  have h\u2083 : Real.sqrt (1 + (y^2 + z^2)) \u2264 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    positivity\n    nlinarith\n  have h\u2084 : Real.sqrt (1 + (z^2 + x^2)) \u2264 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    positivity\n    nlinarith\n  calc\n    Real.sqrt (1 + (x^2 + y^2)) * Real.sqrt (1 + (y^2 + z^2)) * Real.sqrt (1 + (z^2 + x^2))\n      \u2264 2 * 2 * 2 := by\n        gcongr\n      _ = 8 := by norm_num\n      _ \u2264 2 * 8 * 2 := by norm_num\n  <;> assumption\n  <;> try assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) : (a - b) / (b + c) + (b - c) / (c + a) + (c - a) / (a + b) + 5 \u2265 2 * (Real.sqrt ((a + b * c) / (b + c)) + Real.sqrt ((b + c * a) / (c + a)) + Real.sqrt ((a + b * c) / (b + c))) := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) : a * b + b * c + c * a \u2264 (1 / 2) * Real.sqrt ((a ^ 2 + b ^ 2) + (b ^ 2 + c ^ 2) + (a ^ 2 + c ^ 2)):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) :\n       a * b + b * c + c * a \u2264 (1 / 2) * Real.sqrt ((a ^ 2 + b ^ 2) + (b ^ 2 + c ^ 2) + (a ^ 2 + c ^ 2)):= by\n  have h\u2080 : (a + b + c) ^ 2 = 1 := by simp [hab]\n  have h\u2081 : 0 < a * b + b * c + c * a := by positivity\n  have h\u2082 : Real.sqrt ((a ^ 2 + b ^ 2) + (b ^ 2 + c ^ 2) + (a ^ 2 + c ^ 2)) \u2265 2 * (a * b + b * c + c * a) := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  nlinarith\n  <;> assumption"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (habc : a * b * c = 1) : (a * (2 * a ^ 2 + b + 1) / (a + b) * (a ^ 2 + 1) + b * (2 * b ^ 2 + c + 1) / (b + c) * (b ^ 2 + 1) + c * (2 * c ^ 2 + a + 1) / (c + a) * (c ^ 2 + 1)) \u2265 9 / Real.sqrt (3 * (a * b + b * c + c * a)) := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a * b > 0) (hbc : b * c > 0) (hca : a * c > 0) : Real.sqrt (a ^ 2 + 1) * Real.sqrt (b ^ 2 + 1) * Real.sqrt (c ^ 2 + 1) \u2265 Real.sqrt ((a * b) + (b * c) + (c * a) + 1):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a * b > 0) (hbc : b * c > 0) (hca : a * c > 0) :   Real.sqrt (a ^ 2 + 1) * Real.sqrt (b ^ 2 + 1) * Real.sqrt (c ^ 2 + 1) \u2265 Real.sqrt ((a * b) + (b * c) + (c * a) + 1):= by\n  have : 0 \u2264 a * b * c := by positivity\n  have h\u2080 : Real.sqrt (a ^ 2 + 1) * Real.sqrt (b ^ 2 + 1) * Real.sqrt (c ^ 2 + 1) = Real.sqrt ((a ^ 2 + 1) * (b ^ 2 + 1) * (c ^ 2 + 1)) := by\n    rw [Real.sqrt_mul, Real.sqrt_mul]\n    all_goals positivity\n  rw [h\u2080]\n  apply Real.sqrt_le_sqrt\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    sq_nonneg (a * b - 1), sq_nonneg (b * c - 1), sq_nonneg (c * a - 1)]\n  all_goals positivity"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a + 2 * b) * (b + 2 * c) * (c + 2 * a) / (2 * a + b + c) / (2 * b + c + a) / (2 * c + a + b) \u2264 179 / 576 + (a * b + b * c + c * a) / (9 * (a ^ 2 + b ^ 2 + c ^ 2)) := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2192 b \u2265 0 \u2192 c \u2265 0 \u2192 a * b * c \u2265 0 \u2192 a * b + b * c + c * a \u2265 0 \u2192 3 * (a + b) * (b + c) * (c + a) \u2265 0 \u2192 3 * (a * b * c) * (a + b + c) \u2265 0 \u2192 (a * b + b * c + c * a) / (3 * (a ^ 2 + b ^ 2 + c ^ 2)) \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2192 b \u2265 0 \u2192 c \u2265 0 \u2192 a * b * c \u2265 0 \u2192 a * b + b * c + c * a \u2265 0 \u2192 3 * (a + b) * (b + c) * (c + a) \u2265 0 \u2192\n   3 * (a * b * c) * (a + b + c) \u2265 0 \u2192\n   (a * b + b * c + c * a) / (3 * (a ^ 2 + b ^ 2 + c ^ 2)) \u2264 1:= by\n  rintro a b c hab hbc hca habc habc hc hb\n  apply div_le_one_of_le\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2192 b \u2265 0 \u2192 c \u2265 0 \u2192 a * b * c \u2265 0 \u2192 a * b + b * c + c * a \u2265 0 \u2192 3 * (a + b) * (b + c) * (c + a) \u2265 0 \u2192\n   3 * (a * b * c) * (a + b + c) \u2265 0 \u2192\n   (a * b + b * c + c * a) / (3 * (a ^ 2 + b ^ 2 + c ^ 2)) \u2264 1:= by\n  intro a b c h\u2080 h\u2081 h\u2082 h\u2083 h\u2084 h\u2085 h\u2086\n  apply div_le_one_of_le\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2192 b \u2265 0 \u2192 c \u2265 0 \u2192 a * b * c \u2265 0 \u2192 a * b + b * c + c * a \u2265 0 \u2192 3 * (a + b) * (b + c) * (c + a) \u2265 0 \u2192\n   3 * (a * b * c) * (a + b + c) \u2265 0 \u2192\n   (a * b + b * c + c * a) / (3 * (a ^ 2 + b ^ 2 + c ^ 2)) \u2264 1:= by\n  intro a b c h\u2081 h\u2082 h\u2083 h\u2084 h\u2085 h\u2086 h\u2087\n  apply div_le_one_of_le\n  all_goals\n    nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c)]\n  <;> nlinarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2192 b \u2265 0 \u2192 c \u2265 0 \u2192 a * b * c \u2265 0 \u2192 a * b + b * c + c * a \u2265 0 \u2192 3 * (a + b) * (b + c) * (c + a) \u2265 0 \u2192\n   3 * (a * b * c) * (a + b + c) \u2265 0 \u2192\n   (a * b + b * c + c * a) / (3 * (a ^ 2 + b ^ 2 + c ^ 2)) \u2264 1:= by\n  rintro a b c h\u2080 h\u2081 h\u2082 h\u2083 h\u2084 h\u2085 h\u2086\n  exact div_le_one_of_le (by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      sq_nonneg (a + b), sq_nonneg (b + c), sq_nonneg (c + a)]\n    ) (by positivity)"
  ]
 },
 {
  "old": ": \u2200 x \u2208 Set.Icc 0 (Real.pi / 2), (Real.sin x + Real.cos x) * (Real.sin x ^ 3 + Real.cos x ^ 3) \u2265 1 := by",
  "new": "(x : \u211d) : (sin x + cos x) * (sin x + cos x) = 2 * sin x * cos x + 1 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_cos_sum_mul_self (x : \u211d) :  (sin x + cos x) * (sin x + cos x) = 2 * sin x * cos x + 1  := by\n  rw [mul_add]\n  ring_nf\n  rw [sin_sq, cos_sq]\n  ring_nf",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_cos_sum_mul_self (x : \u211d) :  (sin x + cos x) * (sin x + cos x) = 2 * sin x * cos x + 1  := by\n  linarith [sin_sq_add_cos_sq x, mul_self_nonneg (sin x - cos x)]"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : x > 0) (hy : y > 0) (hz : z > 0) (h : (1/x + 1/y - 1/z)*(x + y - z) = 4) : (1/(x^4) + 1/(y^4) + 1/(z^4)) * (x^4 + y^4 + z^4) \u2265 16 := by",
  "new": "(x y z : \u211d) (hx : x > 0) (hy : y > 0) (hz : z > 0) (h : (1/x + 1/y - 1/z)*(x + y - z) = 4) : (x^10 + y^10 + z^10) \u2265 3 * z^10 / 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_x10 (x y z : \u211d) (hx : x > 0) (hy : y > 0) (hz : z > 0) (h : (1/x + 1/y - 1/z)*(x + y - z) = 4) : (x^10 + y^10 + z^10) \u2265 3 * z^10 / 3:= by\n  refine' le_of_sub_nonneg _\n  ring_nf\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_x10 (x y z : \u211d) (hx : x > 0) (hy : y > 0) (hz : z > 0) (h : (1/x + 1/y - 1/z)*(x + y - z) = 4) : (x^10 + y^10 + z^10) \u2265 3 * z^10 / 3:= by\n  apply le_of_sub_nonneg\n  ring_nf\n  positivity\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_x10 (x y z : \u211d) (hx : x > 0) (hy : y > 0) (hz : z > 0) (h : (1/x + 1/y - 1/z)*(x + y - z) = 4) : (x^10 + y^10 + z^10) \u2265 3 * z^10 / 3:= by\n  have h\u2081 : 0 < z := by positivity\n  have h\u2082 : 0 < x := by positivity\n  have h\u2083 : 0 < y := by positivity\n  have h\u2084 : 0 < x + y := by positivity\n  have h\u2085 : 0 < x * y := by positivity\n  have h\u2086 : 0 < z ^ 10 := by positivity\n  have h\u2087 : 0 < x ^ 10 := by positivity\n  have h\u2088 : 0 < y ^ 10 := by positivity\n  have h\u2089 : 0 < x ^ 10 + y ^ 10 := by positivity\n  have h\u2081\u2080 : 0 < x ^ 10 + y ^ 10 + z ^ 10 := by positivity\n  nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (habc : a * b * c = 1) : 1 / (2 + a) + 1 / (2 + b) + 1 / (2 + c) \u2265 1 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) : x^2 / (x + y)^2 + y^2 / (y + z)^2 + z^2 / (z + x)^2 \u2265 1 - 2 * x * y * z:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h : x * y * z = 1) :\n    x^2 / (x + y)^2 + y^2 / (y + z)^2 + z^2 / (z + x)^2 \u2265 1 - 2 * x * y * z:= by\n  have h\u2081 : 0 < x * y := mul_pos hx hy\n  have h\u2082 : 0 < y * z := mul_pos hy hz\n  have h\u2083 : 0 < z * x := mul_pos hz hx\n  have h\u2084 : 0 < x * y * z := by positivity\n  have h\u2085 : 0 < (x + y)^2 := sq_pos_of_pos (add_pos hx hy)\n  have h\u2086 : 0 < (y + z)^2 := sq_pos_of_pos (add_pos hy hz)\n  have h\u2087 : 0 < (z + x)^2 := sq_pos_of_pos (add_pos hz hx)\n  have h\u2088 : x^2 / (x + y)^2 + y^2 / (y + z)^2 + z^2 / (z + x)^2 \u2265 0 := by positivity\n  nlinarith\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h : x * y * z = 1) :\n    x^2 / (x + y)^2 + y^2 / (y + z)^2 + z^2 / (z + x)^2 \u2265 1 - 2 * x * y * z:= by\n  have h\u2081 : 0 < x * y := by positivity\n  have h\u2082 : 0 < y * z := by positivity\n  have h\u2083 : 0 < z * x := by positivity\n  have h\u2084 : 0 < (x + y) ^ 2 := by positivity\n  have h\u2085 : 0 < (y + z) ^ 2 := by positivity\n  have h\u2086 : 0 < (z + x) ^ 2 := by positivity\n  have h\u2087 : x ^ 2 / (x + y) ^ 2 + y ^ 2 / (y + z) ^ 2 + z ^ 2 / (z + x) ^ 2 \u2265 0 := by positivity\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h : x * y * z = 1) :\n    x^2 / (x + y)^2 + y^2 / (y + z)^2 + z^2 / (z + x)^2 \u2265 1 - 2 * x * y * z:= by\n  have h\u2080 : 0 < x * y := by positivity\n  have h\u2081 : 0 < y * z := by positivity\n  have h\u2082 : 0 < z * x := by positivity\n  have h\u2083 : 0 < x * y * z := by positivity\n  have h\u2084 : x ^ 2 / (x + y) ^ 2 + y ^ 2 / (y + z) ^ 2 + z ^ 2 / (z + x) ^ 2 \u2265 1 - 2 * x * y * z := by\n    have h\u2085 : x ^ 2 / (x + y) ^ 2 + y ^ 2 / (y + z) ^ 2 + z ^ 2 / (z + x) ^ 2 \u2265 0 := by positivity\n    nlinarith [sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y)]\n  exact h\u2084"
  ]
 },
 {
  "old": "(n p : \u2115) (hp : 0 < p) : \u00ac(Nat.Coprime (n + 1) (n + 1 + p)) \u2192 p \u2223 n + 1 := by",
  "new": "(p : \u2115) {m n : \u2115} (hp : p.Prime) : p \u2223 m \u2228 p \u2223 n \u2228 Coprime m n \u2228 (m \u2264 p \u2227 n \u2264 p) \u2192 (m < p \u2228 p \u2223 m) \u2228 (n < p \u2228 p \u2223 n) \u2228 Coprime m n \u2228 (m \u2264 p \u2227 n \u2264 p):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {m n : \u2115} (hp : p.Prime) :\n    p \u2223 m \u2228 p \u2223 n \u2228 Coprime m n \u2228 (m \u2264 p \u2227 n \u2264 p) \u2192 (m < p \u2228 p \u2223 m) \u2228 (n < p \u2228 p \u2223 n) \u2228 Coprime m n \u2228 (m \u2264 p \u2227 n \u2264 p):= by\n  intro h\n  by_cases hm : m < p <;> by_cases hn : n < p <;> simp_all [hp.dvd_mul, hp.dvd_mul]\n  <;> omega\n  <;> omega\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {m n : \u2115} (hp : p.Prime) :\n    p \u2223 m \u2228 p \u2223 n \u2228 Coprime m n \u2228 (m \u2264 p \u2227 n \u2264 p) \u2192 (m < p \u2228 p \u2223 m) \u2228 (n < p \u2228 p \u2223 n) \u2228 Coprime m n \u2228 (m \u2264 p \u2227 n \u2264 p):= by\n  intro H\n  by_cases h : m < p <;> by_cases h' : n < p <;> simp_all [hp.dvd_mul, hp.not_dvd_one]\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {m n : \u2115} (hp : p.Prime) :\n    p \u2223 m \u2228 p \u2223 n \u2228 Coprime m n \u2228 (m \u2264 p \u2227 n \u2264 p) \u2192 (m < p \u2228 p \u2223 m) \u2228 (n < p \u2228 p \u2223 n) \u2228 Coprime m n \u2228 (m \u2264 p \u2227 n \u2264 p):= by\n  intro h\n  rcases h with (h | h | h | h) <;> by_cases h2 : p \u2223 m <;> by_cases h3 : p \u2223 n <;> simp_all [Nat.Prime.ne_one, Nat.Prime.ne_zero, Coprime]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {m n : \u2115} (hp : p.Prime) :\n    p \u2223 m \u2228 p \u2223 n \u2228 Coprime m n \u2228 (m \u2264 p \u2227 n \u2264 p) \u2192 (m < p \u2228 p \u2223 m) \u2228 (n < p \u2228 p \u2223 n) \u2228 Coprime m n \u2228 (m \u2264 p \u2227 n \u2264 p):= by\n  intro h\n  aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop"
  ]
 },
 {
  "old": "(a b c : \u211d) : (a / Real.sqrt (a + b) + b / Real.sqrt (b + c) + c / Real.sqrt (c + a)) \u2264 (17 * (a ^ 2 + b ^ 2 + c ^ 2) + 10 * (a * b + b * c + c * a)) ^ (1 / 4) := by",
  "new": "(a b c : \u211d) : Real.sqrt (a ^ 2 + b ^ 2) + Real.sqrt (b ^ 2 + c ^ 2) + Real.sqrt (c ^ 2 + a ^ 2) \u2265 2 * (a + b + c) / 2 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) : Real.sqrt (a ^ 2 + b ^ 2) + Real.sqrt (b ^ 2 + c ^ 2) + Real.sqrt (c ^ 2 + a ^ 2) \u2265 2 * (a + b + c) / 2 := by\n  have h\u2080 : 0 \u2264 Real.sqrt (a ^ 2 + b ^ 2) := Real.sqrt_nonneg _\n  have h\u2081 : 0 \u2264 Real.sqrt (b ^ 2 + c ^ 2) := Real.sqrt_nonneg _\n  have h\u2082 : 0 \u2264 Real.sqrt (c ^ 2 + a ^ 2) := Real.sqrt_nonneg _\n  have h\u2083 : Real.sqrt (a ^ 2 + b ^ 2) \u2265 a := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2084 : Real.sqrt (b ^ 2 + c ^ 2) \u2265 b := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2085 : Real.sqrt (c ^ 2 + a ^ 2) \u2265 c := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) : Real.sqrt (a ^ 2 + b ^ 2) + Real.sqrt (b ^ 2 + c ^ 2) + Real.sqrt (c ^ 2 + a ^ 2) \u2265 2 * (a + b + c) / 2 := by\n  have h\u2080 : Real.sqrt (a ^ 2 + b ^ 2) \u2265 (a + b) / 2 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (a + b), sq_nonneg (a - b)]\n  have h\u2081 : Real.sqrt (b ^ 2 + c ^ 2) \u2265 (b + c) / 2 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (b + c), sq_nonneg (b - c)]\n  have h\u2082 : Real.sqrt (c ^ 2 + a ^ 2) \u2265 (c + a) / 2 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (c + a), sq_nonneg (c - a)]\n  linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) : Real.sqrt (a ^ 2 + b ^ 2) + Real.sqrt (b ^ 2 + c ^ 2) + Real.sqrt (c ^ 2 + a ^ 2) \u2265 2 * (a + b + c) / 2 := by\n  have : Real.sqrt (a ^ 2 + b ^ 2) \u2265 (a + b) / 2 := by\n    have : 0 \u2264 (a - b) ^ 2 := sq_nonneg (a - b)\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have : Real.sqrt (b ^ 2 + c ^ 2) \u2265 (b + c) / 2 := by\n    have : 0 \u2264 (b - c) ^ 2 := sq_nonneg (b - c)\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have : Real.sqrt (c ^ 2 + a ^ 2) \u2265 (c + a) / 2 := by\n    have : 0 \u2264 (c - a) ^ 2 := sq_nonneg (c - a)\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) : Real.sqrt (a ^ 2 + b ^ 2) + Real.sqrt (b ^ 2 + c ^ 2) + Real.sqrt (c ^ 2 + a ^ 2) \u2265 2 * (a + b + c) / 2 := by\n  have h\u2081 : Real.sqrt (a ^ 2 + b ^ 2) \u2265 (a + b) / 2 := by\n    have h\u2082 : 0 \u2264 (a - b) ^ 2 := sq_nonneg _\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2082 : Real.sqrt (b ^ 2 + c ^ 2) \u2265 (b + c) / 2 := by\n    have h\u2083 : 0 \u2264 (b - c) ^ 2 := sq_nonneg _\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2083 : Real.sqrt (c ^ 2 + a ^ 2) \u2265 (c + a) / 2 := by\n    have h\u2084 : 0 \u2264 (c - a) ^ 2 := sq_nonneg _\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  nlinarith"
  ]
 },
 {
  "old": "(f : \u211d \u2192 \u211d):(\u2200 x y, f (x * f (x + y) + y) = x ^ 2 + f y * f (x + 1)) \u2194 \u2200 x, f x = x \u2228 \u2200 x, f x = -x := by",
  "new": "(f : \u211d \u2192 \u211d) (hf: f (12341234) = 12341234) (h\u2081 : \u2200 x, f x = x \u2228 \u2200 x, f x = -x): \u2203 x, f x = -x:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem h1234 (f : \u211d \u2192 \u211d) (hf: f (12341234) = 12341234) (h\u2081 : \u2200 x, f x = x \u2228 \u2200 x, f x = -x): \u2203 x, f x = -x:= by\n  apply Exists.intro 0\n  have h\u2082 := h\u2081 0\n  rcases h\u2082 with (h\u2082 | h\u2082) <;> simp_all",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem h1234 (f : \u211d \u2192 \u211d) (hf: f (12341234) = 12341234) (h\u2081 : \u2200 x, f x = x \u2228 \u2200 x, f x = -x): \u2203 x, f x = -x:= by\n  apply Exists.intro 0\n  cases' h\u2081 0 with h\u2082 h\u2082 <;> simp_all",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem h1234 (f : \u211d \u2192 \u211d) (hf: f (12341234) = 12341234) (h\u2081 : \u2200 x, f x = x \u2228 \u2200 x, f x = -x): \u2203 x, f x = -x:= by\n  apply Exists.intro 0\n  have h\u2082 := h\u2081 0\n  cases' h\u2082 with h\u2082 h\u2082 <;> simp_all",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem h1234 (f : \u211d \u2192 \u211d) (hf: f (12341234) = 12341234) (h\u2081 : \u2200 x, f x = x \u2228 \u2200 x, f x = -x): \u2203 x, f x = -x:= by\n  apply Exists.intro 0\n  apply Eq.symm\n  cases' h\u2081 0 with h\u2082 h\u2082 <;> simp_all"
  ]
 },
 {
  "old": "(A B : Matrix (Fin 2) (Fin 2) \u2102) (hA : A ^ 3 = B ^ 3) (hB : A ^ 2 * B = B ^ 2 * A) : A = B \u2228 A ^ 2 = 0 \u2227 B ^ 2 = 0 := by",
  "new": "(A : Matrix (Fin 2) (Fin 2) \u2102) (hA : A ^ 2 = 0) : A ^ 3 = 0 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mat_2x2_exp_3 (A : Matrix (Fin 2) (Fin 2) \u2102) (hA : A ^ 2 = 0) : A ^ 3 = 0 := by\n  rw [pow_succ]\n  simp_all [pow_succ]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mat_2x2_exp_3 (A : Matrix (Fin 2) (Fin 2) \u2102) (hA : A ^ 2 = 0) : A ^ 3 = 0 := by\n  rw [show 3 = 2 + 1 by norm_num]\n  rw [pow_add, hA]\n  simp",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mat_2x2_exp_3 (A : Matrix (Fin 2) (Fin 2) \u2102) (hA : A ^ 2 = 0) : A ^ 3 = 0 := by\n  rw [show 3 = 2 + 1 by norm_num, pow_add]\n  simp [hA, pow_two, mul_zero]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mat_2x2_exp_3 (A : Matrix (Fin 2) (Fin 2) \u2102) (hA : A ^ 2 = 0) : A ^ 3 = 0 := by\n  simp only [pow_two, pow_three] at *\n  simp [hA, Matrix.mul_zero, Matrix.zero_mul, Matrix.mul_assoc]"
  ]
 },
 {
  "old": ": \u2200 \u03b5 : \u211d, \u03b5 > 0 \u2192 \u2203 N : \u2115, \u2200 x : \u211d, x > N \u2192 |x^(3/2) * (Real.sqrt (x + 1) + Real.sqrt (x - 1) - 2 * Real.sqrt x)| < \u03b5 := by",
  "new": "(x : \u211d) (hx : 1 < x) : |x^(3/2) * (Real.sqrt (x + 1) + Real.sqrt (x - 1) - 2 * Real.sqrt x)| < 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem precisely_2021_22_dec_10_15  (x : \u211d) (hx : 1 < x) : \n     |x^(3/2) * (Real.sqrt (x + 1) + Real.sqrt (x - 1) - 2 * Real.sqrt x)| < 2:= by\n  have h2 : 0 < x := by positivity\n  have h3 : 0 < Real.sqrt (x + 1) := Real.sqrt_pos.mpr (by linarith)\n  have h4 : 0 < Real.sqrt (x - 1) := Real.sqrt_pos.mpr (by\n    nlinarith)\n  have h5 : 0 < Real.sqrt x := Real.sqrt_pos.mpr (by positivity)\n  have h6 : 0 < Real.sqrt (x + 1) * Real.sqrt x := by positivity\n  have h7 : 0 < Real.sqrt (x - 1) * Real.sqrt x := by positivity\n  have h8 : 0 < Real.sqrt (x + 1) * Real.sqrt (x - 1) := by positivity\n  rw [abs_lt]\n  constructor <;>\n  norm_num <;>\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 x + 1 from by positivity),\n    sq_sqrt (show (0 : \u211d) \u2264 x - 1 from by\n      nlinarith), sq_sqrt (show (0 : \u211d) \u2264 x from by positivity),\n    sq_nonneg (Real.sqrt (x + 1) - Real.sqrt x), sq_nonneg (Real.sqrt (x - 1) - Real.sqrt x)]"
  ]
 },
 {
  "old": "(a b : \u211d) : (a - b) ^ 2 / (2 * (a + b)) \u2264 Real.sqrt ((a ^ 2 + b ^ 2) / 2) - Real.sqrt (a * b) \u2227 Real.sqrt ((a ^ 2 + b ^ 2) / 2) - Real.sqrt (a * b) \u2264 (a - b) ^ 2 / (Real.sqrt 2 * (a + b)) := by",
  "new": ": Real.sqrt 2 \u2264 2 / Real.sqrt 2 ^ 2 + 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt 2 \u2264 2 / Real.sqrt 2 ^ 2 + 1:= by\n  rw [add_comm]\n  norm_num\n  nlinarith [Real.sqrt_nonneg 2, Real.sq_sqrt (show 0 \u2264 2 by norm_num)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt 2 \u2264 2 / Real.sqrt 2 ^ 2 + 1:= by\n  norm_num [Real.sqrt_le_left, sq_sqrt, zero_le_two]\n  <;> norm_num\n  <;> apply le_of_sub_nonneg\n  <;> field_simp\n  <;> ring_nf\n  <;> norm_num\n  <;> nlinarith [sq_sqrt (show 0 \u2264 2 by norm_num)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt 2 \u2264 2 / Real.sqrt 2 ^ 2 + 1:= by\n  have h\u2081 : 0 < Real.sqrt 2 ^ 2 := by positivity\n  have h\u2082 : Real.sqrt 2 ^ 2 = 2 := Real.sq_sqrt (by positivity)\n  rw [h\u2082] at *\n  norm_num\n  <;>\n    nlinarith [sq_sqrt (show 0 \u2264 2 by norm_num)]\n  <;>\n    norm_num\n  <;>\n    linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt 2 \u2264 2 / Real.sqrt 2 ^ 2 + 1:= by\n  field_simp [Real.sqrt_eq_iff_sq_eq]\n  norm_num\n  nlinarith [Real.sqrt_nonneg 2, Real.sq_sqrt (show 0 \u2264 2 by norm_num)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : a^3 * b^2 + b^3 * c^2 + c^3 * a^2 + 9 / (a * b + b * c + c * a) \u2265 2 * a * b * (a * b + 2 * c^2) := by",
  "new": ": \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c = 1 \u2192 a ^ 3 * b ^ 2 + b ^ 3 * c ^ 2 + c ^ 3 * a ^ 2 + 9 / (a * b + b * c + c * a) \u2265 2 * a * b * (a * b + 2 * c ^ 2) \u2227 a * b * (a * b + 2 * c ^ 2) + b * c * (b * c + 2 * a ^ 2) + c * a * (c * a + 2 * b ^ 2) \u2264 9 / (a * b + b * c + c * a) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c = 1 \u2192\n    a ^ 3 * b ^ 2 + b ^ 3 * c ^ 2 + c ^ 3 * a ^ 2 + 9 / (a * b + b * c + c * a) \u2265\n     2 * a * b * (a * b + 2 * c ^ 2) \u2227\n   a * b * (a * b + 2 * c ^ 2) + b * c * (b * c + 2 * a ^ 2) + c * a * (c * a + 2 * b ^ 2) \u2264\n    9 / (a * b + b * c + c * a) := by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have h\u2081 : 0 < a * b := mul_pos ha hb\n  have h\u2082 : 0 < b * c := mul_pos hb hc\n  have h\u2083 : 0 < c * a := mul_pos hc ha\n  have h\u2084 : a * b + b * c + c * a \u2264 1 := by\n    nlinarith\n  have h\u2085 : 9 / (a * b + b * c + c * a) \u2265 9 / 1 := by\n    apply div_le_div_of_le_left\n    nlinarith\n    nlinarith\n    nlinarith\n  have h\u2086 : a ^ 3 * b ^ 2 + b ^ 3 * c ^ 2 + c ^ 3 * a ^ 2 \u2265 0 := by\n    positivity\n  have h\u2087 : 2 * a * b * (a * b + 2 * c ^ 2) \u2264 9 / (a * b + b * c + c * a) := by\n    nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n  have h\u2088 : a * b * (a * b + 2 * c ^ 2) + b * c * (b * c + 2 * a ^ 2) + c * a * (c * a + 2 * b ^ 2) \u2264 9 / (a * b + b * c + c * a) := by\n    nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n  exact \u27e8by nlinarith, by nlinarith\u27e9\n  <;> linarith\n  <;> linarith"
  ]
 },
 {
  "old": "(x : \u2115) (h\u2080 : Even x) : (x : \u2124) - 2 * (x / 2) = 0 := by",
  "new": "(m n : \u2115) (hm : Even m) (hn : Even n) : Even (m - n) \u2194 Even m \u2227 Even n \u2228 \u00ac Even m \u2227 \u00ac Even n:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem even_sub_even_eq_even (m n : \u2115) (hm : Even m) (hn : Even n) :\n   Even (m - n) \u2194 Even m \u2227 Even n \u2228 \u00ac Even m \u2227 \u00ac Even n:= by\n  rcases hm with \u27e8a, rfl\u27e9\n  rcases hn with \u27e8b, rfl\u27e9\n  cases' le_total a b with hab hab <;> simp [hab, even_iff_two_dvd, dvd_sub_comm]\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem even_sub_even_eq_even (m n : \u2115) (hm : Even m) (hn : Even n) :\n   Even (m - n) \u2194 Even m \u2227 Even n \u2228 \u00ac Even m \u2227 \u00ac Even n:= by\n  cases' hm with a ha <;> cases' hn with b hb <;> simp_all [even_iff_two_dvd, dvd_sub_comm]\n  <;> by_cases h : Even m <;> by_cases h' : Even n <;> simp_all\n  <;> omega"
  ]
 },
 {
  "old": "(n : \u2115) (hn : 3 \u2264 n) (a : Fin n \u2192 \u211d) (ha : \u2200 i, 1 \u2264 a i) : (\u2211 i, 1 / (a i * (a i + n - 2))) \u2265 n / (n - 2 + \u220f i, a i) := by",
  "new": "(n : \u2115) (hn : 2 \u2264 n) (a : Fin n \u2192 \u211d) (ha : \u2200 i, 0 \u2264 a i) : (\u220f i, (1 + a i)) \u2264 (1 + \u2211 i, a i) ^ n:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (n : \u2115) (hn : 2 \u2264 n) (a : Fin n \u2192 \u211d) (ha : \u2200 i, 0 \u2264 a i) : \n  (\u220f i, (1 + a i)) \u2264 (1 + \u2211 i, a i) ^ n:= by\n  have h : \u2200 i, 0 \u2264 a i := ha\n  have h1 : \u220f i : Fin n, (1 + a i) \u2264 (1 + \u2211 i : Fin n, a i) ^ n := by\n    calc\n      (\u220f i : Fin n, (1 + a i)) \u2264 \u220f i : Fin n, (1 + \u2211 i : Fin n, a i) := by\n        apply Finset.prod_le_prod\n        \u00b7 intro i _\n          linarith [h i]\n        \u00b7 intro i _\n          have h2 : a i \u2264 \u2211 i : Fin n, a i := by\n            apply Finset.single_le_sum\n            \u00b7 intro j _\n              linarith [h j]\n            \u00b7 simp\n          linarith [h i, h2]\n      _ = (1 + \u2211 i : Fin n, a i) ^ n := by\n        simp [Finset.sum_const, Finset.card_fin, pow_succ, mul_comm]\n  exact h1",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (n : \u2115) (hn : 2 \u2264 n) (a : Fin n \u2192 \u211d) (ha : \u2200 i, 0 \u2264 a i) : \n  (\u220f i, (1 + a i)) \u2264 (1 + \u2211 i, a i) ^ n:= by\n  have h\u2080 : \u2200 i, 0 \u2264 a i := ha\n  have h\u2081 : \u220f i, (1 + a i) \u2264 (1 + \u2211 i, a i) ^ n := by\n    have h\u2082 : \u2200 i, 0 \u2264 a i := ha\n    have h\u2083 : \u220f i : Fin n, (1 + a i) \u2264 (1 + \u2211 i : Fin n, a i) ^ n := by\n      have h\u2084 : \u2200 i : Fin n, 0 \u2264 a i := by intro i; exact ha i\n      have h\u2085 : \u220f i : Fin n, (1 + a i) \u2264 (1 + \u2211 i : Fin n, a i) ^ n := by\n        calc\n          _ = \u220f i : Fin n, (1 + a i) := rfl\n          _ \u2264 \u220f i : Fin n, (1 + \u2211 i : Fin n, a i) := by\n            apply Finset.prod_le_prod\n            \u00b7 intro i hi\n              linarith [ha i]\n            \u00b7 intro i hi\n              linarith [Finset.single_le_sum (fun j hj => ha j) hi]\n          _ = (1 + \u2211 i : Fin n, a i) ^ n := by simp [Finset.prod_const, Finset.card_fin]\n      exact h\u2085\n    exact h\u2083\n  exact h\u2081",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (n : \u2115) (hn : 2 \u2264 n) (a : Fin n \u2192 \u211d) (ha : \u2200 i, 0 \u2264 a i) : \n  (\u220f i, (1 + a i)) \u2264 (1 + \u2211 i, a i) ^ n:= by\n  have h1 : \u2200 i, 0 \u2264 a i := ha\n  have h2 : (\u220f i, (1 + a i)) \u2264 (1 + \u2211 i, a i) ^ n := by\n    have h3 : \u2200 i, 0 \u2264 a i := ha\n    have h4 : \u220f i, (1 + a i) \u2264 (1 + \u2211 i, a i) ^ n := by\n      calc\n        _ = \u220f i, (1 + a i) := by rfl\n        _ \u2264 \u220f i : Fin n, (1 + \u2211 i, a i) := by\n          apply Finset.prod_le_prod\n          exact fun i _ => by linarith [h1 i]\n          exact fun i _ => by\n            exact\n              add_le_add_left (Finset.single_le_sum (fun i _ => h1 i) (by simp)) _\n        _ = (1 + \u2211 i, a i) ^ n := by simp [Finset.prod_const]\n    exact h4\n  exact h2"
  ]
 },
 {
  "old": "(p n : \u2115) (hp : p.Prime) (h : p \u2223 fib n) : Even n := by",
  "new": "(n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_2 (n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by\n  induction' hn with n hn hn <;> simp_all [fib_add_two, Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_fib_ge_2 (n : \u2115) (hn : 2 \u2264 n) : Nat.Coprime (fib n) (fib (n + 1)) := by\n  induction' hn with n hn IH\n  norm_num\n  rw [fib_add_two, Nat.coprime_iff_gcd_eq_one]\n  simp [Nat.gcd_comm]\n  <;> simp_all [fib_add_two, Nat.gcd_comm]\n  <;> apply Nat.coprime_iff_gcd_eq_one.2\n  <;> simp [fib_add_two, Nat.gcd_comm]\n  <;> simp_all\n  <;> apply Nat.coprime_iff_gcd_eq_one.2\n  <;> simp [fib_add_two, Nat.gcd_comm]\n  <;> simp_all"
  ]
 },
 {
  "old": "(n : \u2115) (hn : 2 \u2264 n) : \u2211 k in Finset.Icc 1 n, (k / (k ^ 2 + 1) - Real.log k) = 1 / 2 + \u2211 k in Finset.Icc 2 n, (k / (k ^ 2 + 1) - Real.log (k / (k - 1))) := by",
  "new": "(n : \u2115) (hn : 2 \u2264 n) : (\u2211 k in Finset.Icc 1 n, (1 / (k : \u211d) - Real.log k)) \u2264 n:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (n : \u2115) (hn : 2 \u2264 n) :\n   (\u2211 k in Finset.Icc 1 n, (1 / (k : \u211d) - Real.log k)) \u2264 n:= by\n  have h\u2081 : \u2200 k : \u2115, k \u2208 Finset.Icc 1 n \u2192 (1 / (k : \u211d) - Real.log k) \u2264 1:= by\n    intro k hk\n    simp only [Finset.mem_Icc] at hk\n    rcases hk with \u27e8hk\u2081, hk\u2082\u27e9\n    norm_num\n    have : Real.log k \u2265 0 := Real.log_nonneg (by norm_num; linarith)\n    apply le_of_sub_nonneg\n    field_simp\n    rw [le_div_iff]\n    all_goals nlinarith [Real.log_le_sub_one_of_pos (by positivity : 0 < (k : \u211d))]\n  exact (Finset.sum_le_sum h\u2081).trans (by simp)\n  <;> norm_num\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (n : \u2115) (hn : 2 \u2264 n) :\n   (\u2211 k in Finset.Icc 1 n, (1 / (k : \u211d) - Real.log k)) \u2264 n:= by\n  have hn' : 2 \u2264 (n : \u211d) := by norm_cast\n  have h1 : \u2200 k : \u2115, k \u2208 Finset.Icc 1 n \u2192 1 / (k : \u211d) \u2264 1 := by\n    intro k hk\n    rw [Finset.mem_Icc] at hk\n    rw [div_le_iff] <;> norm_cast <;> linarith\n  have h2 : \u2200 k : \u2115, k \u2208 Finset.Icc 1 n \u2192 Real.log k \u2265 0 := by\n    intro k hk\n    rw [Finset.mem_Icc] at hk\n    exact Real.log_nonneg (by norm_cast; linarith)\n  calc\n    (\u2211 k in Finset.Icc 1 n, (1 / (k : \u211d) - Real.log k)) \u2264\n      \u2211 k in Finset.Icc 1 n, 1 := by\n      apply Finset.sum_le_sum\n      intro x hx\n      linarith [h1 x hx, h2 x hx]\n    _ = n := by simp [hn]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a * b / (a + b + 2 * c) + b * c / (b + c + 2 * a) + c * a / (c + a + 2 * b)) \u2264 (a + b + c) / 4 := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a * b) / (a + b) + (b * c) / (b + c) + (c * a) / (c + a) \u2264 (a + b + c) / 2 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a * b) / (a + b) + (b * c) / (b + c) + (c * a) / (c + a) \u2264 (a + b + c) / 2 := by\n  intro a b c h\n  have h\u2080 : 0 \u2264 a + b := by linarith\n  have h\u2081 : 0 \u2264 b + c := by linarith\n  have h\u2082 : 0 \u2264 c + a := by linarith\n  have h\u2083 : 0 \u2264 a + b + c := by linarith\n  have h\u2084 : (a * b) / (a + b) \u2264 (a + b) / 4 := by\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (a - b)]\n  have h\u2085 : (b * c) / (b + c) \u2264 (b + c) / 4 := by\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (b - c)]\n  have h\u2086 : (c * a) / (c + a) \u2264 (c + a) / 4 := by\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (c - a)]\n  nlinarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a * b) / (a + b) + (b * c) / (b + c) + (c * a) / (c + a) \u2264 (a + b + c) / 2 := by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  have : 0 \u2264 a + b + c := add_nonneg (add_nonneg ha hb) hc\n  have h\u2081 : 0 \u2264 a + b := add_nonneg ha hb\n  have h\u2082 : 0 \u2264 b + c := add_nonneg hb hc\n  have h\u2083 : 0 \u2264 c + a := add_nonneg hc ha\n  have h\u2084 : (a * b) / (a + b) \u2264 (a + b) / 4 := by\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (a - b)]\n  have h\u2085 : (b * c) / (b + c) \u2264 (b + c) / 4 := by\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (b - c)]\n  have h\u2086 : (c * a) / (c + a) \u2264 (c + a) / 4 := by\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (c - a)]\n  nlinarith"
  ]
 },
 {
  "old": "(z\u2081 z\u2082 z\u2083 : \u2102) (hz\u2081 : z\u2081 \u2260 z\u2082) (hz\u2081' : z\u2081 \u2260 z\u2083) (hz\u2082 : z\u2082 \u2260 z\u2083) (hz\u2081'' : \u2016z\u2081\u2016 = 1) (hz\u2082'' : \u2016z\u2082\u2016 = 1) (hz\u2083'' : \u2016z\u2083\u2016 = 1) : \u2016z\u2081 - z\u2083\u2016 + \u2016z\u2082 - z\u2083\u2016 \u2264 3 + \u2016z\u2081 + z\u2082\u2016 := by",
  "new": "(z\u2081 z\u2082 z\u2083 w\u2081 w\u2082 w\u2083 : \u2102) (hz\u2081 : \u2016z\u2081\u2016 = 1) (hz\u2082 : \u2016z\u2082\u2016 = 1) (hz\u2083 : \u2016z\u2083\u2016 = 1) (hw\u2081 : \u2016w\u2081\u2016 = 1) (hw\u2082 : \u2016w\u2082\u2016 = 1) (hw\u2083 : \u2016w\u2083\u2016 = 1) (h\u2081 : z\u2081 \u2260 z\u2082) (h\u2081' : z\u2081 \u2260 z\u2083) (h\u2082 : z\u2082 \u2260 z\u2083) (h\u2083 : w\u2081 \u2260 w\u2082) (h\u2083' : w\u2081 \u2260 w\u2083) (h\u2084 : w\u2082 \u2260 w\u2083) : \u2016z\u2081 - w\u2083\u2016 + \u2016z\u2082 - w\u2083\u2016 + \u2016w\u2081 - w\u2082\u2016 \u2264 6:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem norm_sub_add_three_le (z\u2081 z\u2082 z\u2083 w\u2081 w\u2082 w\u2083 : \u2102) (hz\u2081 : \u2016z\u2081\u2016 = 1) (hz\u2082 : \u2016z\u2082\u2016 = 1) (hz\u2083 : \u2016z\u2083\u2016 = 1) (hw\u2081 : \u2016w\u2081\u2016 = 1) (hw\u2082 : \u2016w\u2082\u2016 = 1) (hw\u2083 : \u2016w\u2083\u2016 = 1) (h\u2081 : z\u2081 \u2260 z\u2082) (h\u2081' : z\u2081 \u2260 z\u2083) (h\u2082 : z\u2082 \u2260 z\u2083) (h\u2083 : w\u2081 \u2260 w\u2082) (h\u2083' : w\u2081 \u2260 w\u2083) (h\u2084 : w\u2082 \u2260 w\u2083) : \u2016z\u2081 - w\u2083\u2016 + \u2016z\u2082 - w\u2083\u2016 + \u2016w\u2081 - w\u2082\u2016 \u2264 6:= by\n  have h\u2085 : \u2016z\u2081 - w\u2083\u2016 \u2264 2 := by\n    apply (norm_sub_le z\u2081 w\u2083).trans\n    linarith [hz\u2081, hw\u2083]\n  have h\u2086 : \u2016z\u2082 - w\u2083\u2016 \u2264 2 := by\n    apply (norm_sub_le z\u2082 w\u2083).trans\n    linarith [hz\u2082, hw\u2083]\n  have h\u2087 : \u2016w\u2081 - w\u2082\u2016 \u2264 2 := by\n    apply (norm_sub_le w\u2081 w\u2082).trans\n    linarith [hw\u2081, hw\u2082]\n  linarith\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem norm_sub_add_three_le (z\u2081 z\u2082 z\u2083 w\u2081 w\u2082 w\u2083 : \u2102) (hz\u2081 : \u2016z\u2081\u2016 = 1) (hz\u2082 : \u2016z\u2082\u2016 = 1) (hz\u2083 : \u2016z\u2083\u2016 = 1) (hw\u2081 : \u2016w\u2081\u2016 = 1) (hw\u2082 : \u2016w\u2082\u2016 = 1) (hw\u2083 : \u2016w\u2083\u2016 = 1) (h\u2081 : z\u2081 \u2260 z\u2082) (h\u2081' : z\u2081 \u2260 z\u2083) (h\u2082 : z\u2082 \u2260 z\u2083) (h\u2083 : w\u2081 \u2260 w\u2082) (h\u2083' : w\u2081 \u2260 w\u2083) (h\u2084 : w\u2082 \u2260 w\u2083) : \u2016z\u2081 - w\u2083\u2016 + \u2016z\u2082 - w\u2083\u2016 + \u2016w\u2081 - w\u2082\u2016 \u2264 6:= by\n  have h\u2085 : \u2016z\u2081 - w\u2083\u2016 \u2264 \u2016z\u2081\u2016 + \u2016w\u2083\u2016 := by\n    apply norm_sub_le\n  have h\u2086 : \u2016z\u2082 - w\u2083\u2016 \u2264 \u2016z\u2082\u2016 + \u2016w\u2083\u2016 := by\n    apply norm_sub_le\n  have h\u2087 : \u2016w\u2081 - w\u2082\u2016 \u2264 \u2016w\u2081\u2016 + \u2016w\u2082\u2016 := by\n    apply norm_sub_le\n  nlinarith\n  <;> simp [hz\u2081, hz\u2082, hz\u2083, hw\u2081, hw\u2082, hw\u2083]\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem norm_sub_add_three_le (z\u2081 z\u2082 z\u2083 w\u2081 w\u2082 w\u2083 : \u2102) (hz\u2081 : \u2016z\u2081\u2016 = 1) (hz\u2082 : \u2016z\u2082\u2016 = 1) (hz\u2083 : \u2016z\u2083\u2016 = 1) (hw\u2081 : \u2016w\u2081\u2016 = 1) (hw\u2082 : \u2016w\u2082\u2016 = 1) (hw\u2083 : \u2016w\u2083\u2016 = 1) (h\u2081 : z\u2081 \u2260 z\u2082) (h\u2081' : z\u2081 \u2260 z\u2083) (h\u2082 : z\u2082 \u2260 z\u2083) (h\u2083 : w\u2081 \u2260 w\u2082) (h\u2083' : w\u2081 \u2260 w\u2083) (h\u2084 : w\u2082 \u2260 w\u2083) : \u2016z\u2081 - w\u2083\u2016 + \u2016z\u2082 - w\u2083\u2016 + \u2016w\u2081 - w\u2082\u2016 \u2264 6:= by\n  have h\u2085 := norm_pos_iff.mpr (sub_ne_zero.mpr h\u2083)\n  have h\u2086 := norm_pos_iff.mpr (sub_ne_zero.mpr h\u2083')\n  have h\u2087 := norm_pos_iff.mpr (sub_ne_zero.mpr h\u2084)\n  have h\u2088 := norm_pos_iff.mpr (sub_ne_zero.mpr h\u2081)\n  have h\u2089 := norm_pos_iff.mpr (sub_ne_zero.mpr h\u2081')\n  have h\u2081\u2080 := norm_pos_iff.mpr (sub_ne_zero.mpr h\u2082)\n  have h\u2081\u2081 : \u2016z\u2081 - w\u2083\u2016 \u2264 2 := by\n    linarith [norm_sub_le z\u2081 w\u2083, hz\u2081, hw\u2083]\n  have h\u2081\u2082 : \u2016z\u2082 - w\u2083\u2016 \u2264 2 := by\n    linarith [norm_sub_le z\u2082 w\u2083, hz\u2082, hw\u2083]\n  have h\u2081\u2083 : \u2016w\u2081 - w\u2082\u2016 \u2264 2 := by\n    linarith [norm_sub_le w\u2081 w\u2082, hw\u2081, hw\u2082]\n  linarith\n  <;> simp [h\u2085, h\u2086, h\u2087, h\u2088, h\u2089, h\u2081\u2080]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : a^2 * b^2 * (a - b)^2 + b^2 * c^2 * (b - c)^2 + c^2 * a^2 * (c - a)^2 \u2265 2 * a * b * c * (a - b) * (b - c) * (c - a) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : x ^ 2 + y ^ 2 + z ^ 2 + (x * y) / (x + y) + (y * z) / (y + z) + (z * x) / (z + x) \u2265 2 * (x * y * z) / (x * y + y * z + z * x) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   x ^ 2 + y ^ 2 + z ^ 2 + (x * y) / (x + y) + (y * z) / (y + z) + (z * x) / (z + x) \u2265 2 * (x * y * z) / (x * y + y * z + z * x)  := by\n  have hxy : 0 < x * y := mul_pos hx hy\n  have hyz : 0 < y * z := mul_pos hy hz\n  have hxz : 0 < z * x := mul_pos hz hx\n  have hxyz : 0 < x * y * z := by positivity\n  have hxy' : 0 < x + y := by positivity\n  have hyz' : 0 < y + z := by positivity\n  have hxz' : 0 < z + x := by positivity\n  have h1 : x * y / (x + y) \u2265 0 := div_nonneg (by positivity) (by positivity)\n  have h2 : y * z / (y + z) \u2265 0 := div_nonneg (by positivity) (by positivity)\n  have h3 : z * x / (z + x) \u2265 0 := div_nonneg (by positivity) (by positivity)\n  have h4 : 2 * (x * y * z) / (x * y + y * z + z * x) \u2264 x ^ 2 + y ^ 2 + z ^ 2 + (x * y) / (x + y) + (y * z) / (y + z) + (z * x) / (z + x) := by\n    rw [add_assoc]\n    apply le_of_sub_nonneg\n    field_simp\n    ring_nf\n    positivity\n  linarith\n  <;> try norm_num\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c \u2264 2) : (a^2 + b * c) * (b^2 + c * a) * (c^2 + a * b) \u2264 (1 / 2) * (a + b + c) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z \u2264 2) (h : x * y + x * z + y * z \u2264 1) : x ^ 2 * y ^ 2 * z ^ 2 * (x + y + z) \u2264 1 / 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z \u2264 2) (h : x * y + x * z + y * z \u2264 1) :\n  x ^ 2 * y ^ 2 * z ^ 2 * (x + y + z) \u2264 1 / 3:= by\n  have : 0 < x * y := by positivity\n  have : 0 < y * z := by positivity\n  have : 0 < x * z := by positivity\n  have : 0 < x * y * z := by positivity\n  have : 0 < x * y * z * (x + y + z) := by positivity\n  have : x * y * z * (x + y + z) \u2264 2 / 3 := by\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (x - z)]\n  nlinarith [sq_nonneg (x * y - 1 / 3), sq_nonneg (y * z - 1 / 3), sq_nonneg (x * z - 1 / 3)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z \u2264 2) (h : x * y + x * z + y * z \u2264 1) :\n  x ^ 2 * y ^ 2 * z ^ 2 * (x + y + z) \u2264 1 / 3:= by\n  have h\u2081 : 0 < x * y := by nlinarith\n  have h\u2082 : 0 < x * z := by nlinarith\n  have h\u2083 : 0 < y * z := by nlinarith\n  have h\u2084 : 0 < x * y * z := by nlinarith\n  have h\u2085 : 0 < x * y * z * (x + y + z) := by nlinarith\n  have h\u2086 : x * y + x * z + y * z \u2264 1 := by assumption\n  have h\u2087 : x * y * z \u2264 1 / 3 := by\n    nlinarith [sq_nonneg (x * y - 1 / 3), sq_nonneg (x * z - 1 / 3), sq_nonneg (y * z - 1 / 3)]\n  nlinarith [sq_nonneg (x * y * z - 1 / 3)]\n  <;> simp [h, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z \u2264 2) (h : x * y + x * z + y * z \u2264 1) :\n  x ^ 2 * y ^ 2 * z ^ 2 * (x + y + z) \u2264 1 / 3:= by\n  have h\u2081 : 0 < x * y := by positivity\n  have h\u2082 : 0 < x * z := by positivity\n  have h\u2083 : 0 < y * z := by positivity\n  have h\u2084 : 0 < x * y * z := by positivity\n  have h\u2085 : 0 < x * y * z * (x + y + z) := by positivity\n  have h\u2086 : x * y * z \u2264 1 / 3 := by\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  nlinarith"
  ]
 },
 {
  "old": "(n : \u2115) : (sin (2 ^ (n + 1)) / (2 ^ (n + 1) * sin 1) < \u221a 2 / 2 ^ (n + 1)) \u2194 sin (2 ^ (n + 1)) < \u221a 2 * sin 1 := by",
  "new": "(x : \u2115 \u2192 \u211d) (hx: \u2200 n, x n = 2 ^ n) : \u2203 a, 0 < a \u2227 \u2200 n, x n \u2264 a ^ (n + 1) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (x : \u2115 \u2192 \u211d) (hx: \u2200 n, x n = 2 ^ n) : \u2203 a, 0 < a \u2227 \u2200 n, x n \u2264 a ^ (n + 1)  := by\n  refine \u27e82, by norm_num, fun n => ?_\u27e9\n  rw [hx]\n  simpa [pow_succ] using (pow_le_pow_of_le_left (by norm_num) (by norm_num) (n+1))",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (x : \u2115 \u2192 \u211d) (hx: \u2200 n, x n = 2 ^ n) : \u2203 a, 0 < a \u2227 \u2200 n, x n \u2264 a ^ (n + 1)  := by\n  refine' \u27e82, by norm_num, fun n \u21a6 _\u27e9\n  rw [hx]\n  simpa [pow_add, pow_one] using\n    calc\n      (2 : \u211d) ^ n \u2264 2 ^ n * 2 ^ 1 := by linarith [pow_pos (by norm_num : (0 : \u211d) < 2) n]\n      _ = 2 ^ (n + 1) := by ring\n  <;> rfl\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (x : \u2115 \u2192 \u211d) (hx: \u2200 n, x n = 2 ^ n) : \u2203 a, 0 < a \u2227 \u2200 n, x n \u2264 a ^ (n + 1)  := by\n  use 4\n  constructor\n  norm_num\n  intro n\n  rw [hx]\n  norm_num\n  have h\u2081 : (2 : \u211d) ^ n \u2264 4 ^ n := by\n    exact pow_le_pow_of_le_left (by norm_num) (by norm_num) n\n  have h\u2082 : (4 : \u211d) ^ n \u2264 4 ^ (n + 1) := by\n    exact pow_le_pow_right (by norm_num) (by linarith)\n  linarith"
  ]
 },
 {
  "old": "(n : \u2115) (x : \u2115 \u2192 NNReal) (hx : \u2211 i in Finset.range n, x i = 1) : 1 \u2264 (\u2211 i in Finset.range n, (2 * i - 1) * x i) * (\u2211 i in Finset.range n, x i / (2 * i - 1)) \u2227 (\u2211 i in Finset.range n, (2 * i - 1) * x i) * (\u2211 i in Finset.range n, x i / (2 * i - 1)) \u2264 n^2 / (2 * n - 1) := by",
  "new": "(x : \u2115 \u2192 \u211d) (hx: \u2211 i in Finset.range n, x i = 1) : 1 \u2264 \u2211 i in Finset.range n, (x i ^ 2 / x i) \u2227 \u2211 i in Finset.range n, (x i ^ 2 / x i) \u2264 n^2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x : \u2115 \u2192 \u211d) (hx: \u2211 i in Finset.range n, x i = 1) : 1 \u2264 \u2211 i in Finset.range n, (x i ^ 2 / x i) \u2227 \u2211 i in Finset.range n, (x i ^ 2 / x i) \u2264 n^2:= by\n  have h1 : \u2200 i \u2208 Finset.range n, x i ^ 2 / x i = x i := by\n    intro i _\n    by_cases h : x i = 0 <;> field_simp [h] <;> ring\n  rw [Finset.sum_congr rfl h1]\n  constructor <;> clear! h1 <;>\n  induction' n with n ih <;> simp_all [Finset.sum_range_succ, pow_succ] <;>\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x : \u2115 \u2192 \u211d) (hx: \u2211 i in Finset.range n, x i = 1) : 1 \u2264 \u2211 i in Finset.range n, (x i ^ 2 / x i) \u2227 \u2211 i in Finset.range n, (x i ^ 2 / x i) \u2264 n^2:= by\n  have h\u2080 : \u2211 i in Finset.range n, (x i ^ 2 / x i) = \u2211 i in Finset.range n, x i := by\n    apply Finset.sum_congr rfl\n    intro i hi\n    by_cases h : x i = 0 <;> field_simp [h] <;> ring\n  rw [h\u2080]\n  have h\u2081 : \u2211 i in Finset.range n, x i = 1 := hx\n  have h\u2082 : (1 : \u211d) \u2264 n^2 := by\n    norm_cast\n    cases n\n    all_goals simp_all [sq]\n    all_goals nlinarith\n  exact \u27e8by linarith, by linarith\u27e9"
  ]
 },
 {
  "old": "(n : \u2115) (w z : Fin n \u2192 \u2102) (h : \u2200 i, \u2016w i\u2016 = \u2016z i\u2016) : \u2211 i, \u2016z i\u2016^2 \u2264 \u2211 i, \u2016w i\u2016^2 := by",
  "new": "(f : Fin n \u2192 \u211d) (h : \u2200 i, f i ^ 2 \u2264 1) : (\u2211 i, f i ^ 2) ^ 2 \u2264 n * \u2211 i, f i ^ 2 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem norm_sum_sq_le_of_le (f : Fin n \u2192 \u211d) (h : \u2200 i, f i ^ 2 \u2264 1) :\n     (\u2211 i, f i ^ 2) ^ 2 \u2264 n * \u2211 i, f i ^ 2 := by\n  have h' : (\u2211 i : Fin n, f i ^ 2) \u2264 n := by\n    have h' : \u2200 i : Fin n, f i ^ 2 \u2264 1 := by simpa using h\n    exact (Finset.sum_le_sum (fun i _ => h' i)).trans_eq (by simp)\n  have h'' : 0 \u2264 (\u2211 i : Fin n, f i ^ 2) := by positivity\n  nlinarith\n  <;> simp [h, h', h'']"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (2 * Real.sqrt (ab / (a + c) / (b + c)) + 1) * (2 * Real.sqrt (bc / (b + a) / (c + a)) + 1) * (2 * Real.sqrt (ca / (c + b) / (a + b)) + 1) \u2264 8 * a * b * c / (a + b) / (b + c) / (c + a) + 7 := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (2 * Real.sqrt (a * b / (a + b) / (a + b)) + 1) * (2 * Real.sqrt (b * c / (b + c) / (b + c)) + 1) * (2 * Real.sqrt (c * a / (c + a) / (c + a)) + 1) \u2264 16:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : \n   (2 * Real.sqrt (a * b / (a + b) / (a + b)) + 1) * (2 * Real.sqrt (b * c / (b + c) / (b + c)) + 1) * (2 * Real.sqrt (c * a / (c + a) / (c + a)) + 1) \u2264 16:= by\n  have h\u2081 : 0 < a + b := by linarith\n  have h\u2082 : 0 < b + c := by linarith\n  have h\u2083 : 0 < c + a := by linarith\n  have h\u2084 : Real.sqrt (a * b / (a + b) / (a + b)) \u2264 1 / 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 field_simp\n      rw [div_le_div_iff (by positivity) (by positivity)]\n      nlinarith [sq_nonneg (a - b)]\n  have h\u2085 : Real.sqrt (b * c / (b + c) / (b + c)) \u2264 1 / 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 field_simp\n      rw [div_le_div_iff (by positivity) (by positivity)]\n      nlinarith [sq_nonneg (b - c)]\n  have h\u2086 : Real.sqrt (c * a / (c + a) / (c + a)) \u2264 1 / 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 field_simp\n      rw [div_le_div_iff (by positivity) (by positivity)]\n      nlinarith [sq_nonneg (c - a)]\n  calc\n    (2 * Real.sqrt (a * b / (a + b) / (a + b)) + 1) * (2 * Real.sqrt (b * c / (b + c) / (b + c)) + 1) * (2 * Real.sqrt (c * a / (c + a) / (c + a)) + 1) \u2264\n        (2 * (1 / 2) + 1) * (2 * (1 / 2) + 1) * (2 * (1 / 2) + 1) := by gcongr <;> assumption\n    _ = (1 + 1) * (1 + 1) * (1 + 1) := by ring\n    _ = 8 := by ring\n    _ \u2264 16 := by linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : \n   (2 * Real.sqrt (a * b / (a + b) / (a + b)) + 1) * (2 * Real.sqrt (b * c / (b + c) / (b + c)) + 1) * (2 * Real.sqrt (c * a / (c + a) / (c + a)) + 1) \u2264 16:= by\n  have hab : 0 < a * b := by positivity\n  have hac : 0 < a * c := by positivity\n  have hbc : 0 < b * c := by positivity\n  have h\u2081 : Real.sqrt (a * b / (a + b) / (a + b)) \u2264 1 / 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 field_simp\n      rw [div_le_div_iff (by positivity) (by positivity)]\n      nlinarith [sq_nonneg (a - b)]\n  have h\u2082 : Real.sqrt (b * c / (b + c) / (b + c)) \u2264 1 / 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 field_simp\n      rw [div_le_div_iff (by positivity) (by positivity)]\n      nlinarith [sq_nonneg (b - c)]\n  have h\u2083 : Real.sqrt (c * a / (c + a) / (c + a)) \u2264 1 / 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 field_simp\n      rw [div_le_div_iff (by positivity) (by positivity)]\n      nlinarith [sq_nonneg (c - a)]\n  calc\n    (2 * Real.sqrt (a * b / (a + b) / (a + b)) + 1) * (2 * Real.sqrt (b * c / (b + c) / (b + c)) + 1) * (2 * Real.sqrt (c * a / (c + a) / (c + a)) + 1) \u2264\n        (2 * (1 / 2) + 1) * (2 * (1 / 2) + 1) * (2 * (1 / 2) + 1) := by gcongr <;> nlinarith\n    _ = (1 + 1) * (1 + 1) * (1 + 1) := by ring\n    _ = 8 := by ring\n    _ \u2264 16 := by linarith\n  <;> assumption\n  <;> try assumption\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : \n   (2 * Real.sqrt (a * b / (a + b) / (a + b)) + 1) * (2 * Real.sqrt (b * c / (b + c) / (b + c)) + 1) * (2 * Real.sqrt (c * a / (c + a) / (c + a)) + 1) \u2264 16:= by\n  have h\u2080 : 0 < a * b := mul_pos ha hb\n  have h\u2081 : 0 < b * c := mul_pos hb hc\n  have h\u2082 : 0 < c * a := mul_pos hc ha\n  have h\u2083 : Real.sqrt (a * b / (a + b) / (a + b)) \u2264 1 / 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 rw [div_eq_mul_inv]\n      apply le_of_sub_nonneg\n      field_simp\n      rw [le_div_iff (by positivity)]\n      nlinarith [sq_nonneg (a - b)]\n  have h\u2084 : Real.sqrt (b * c / (b + c) / (b + c)) \u2264 1 / 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 rw [div_eq_mul_inv]\n      apply le_of_sub_nonneg\n      field_simp\n      rw [le_div_iff (by positivity)]\n      nlinarith [sq_nonneg (b - c)]\n  have h\u2085 : Real.sqrt (c * a / (c + a) / (c + a)) \u2264 1 / 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 positivity\n    \u00b7 rw [div_eq_mul_inv]\n      apply le_of_sub_nonneg\n      field_simp\n      rw [le_div_iff (by positivity)]\n      nlinarith [sq_nonneg (c - a)]\n  calc\n    (2 * Real.sqrt (a * b / (a + b) / (a + b)) + 1) * (2 * Real.sqrt (b * c / (b + c) / (b + c)) + 1) * (2 * Real.sqrt (c * a / (c + a) / (c + a)) + 1) \u2264\n    (2 * (1 / 2) + 1) * (2 * (1 / 2) + 1) * (2 * (1 / 2) + 1) := by\n      gcongr <;> nlinarith\n    _ = (1 + 1) * (1 + 1) * (1 + 1) := by ring\n    _ = 8 := by ring\n    _ \u2264 16 := by linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption"
  ]
 },
 {
  "old": "(A : \u2115) (hA : A \u2261 -1 [ZMOD 8]) (hA' : A \u2261 -1 [ZMOD 3]) : \u2203 B : \u2115, B \u2261 A [ZMOD 8] \u2227 B \u2261 A [ZMOD 3] := by",
  "new": "(a b : \u2115) (hab : a \u2264 b) (h : Nat.Coprime a b) : Nat.Coprime (a ^ 3) (b ^ 3):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_of_ge_coprime (a b : \u2115) (hab : a \u2264 b) (h : Nat.Coprime a b)  : Nat.Coprime (a ^ 3) (b ^ 3):= by\n  simp [Nat.Coprime] at *\n  aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_of_ge_coprime (a b : \u2115) (hab : a \u2264 b) (h : Nat.Coprime a b)  : Nat.Coprime (a ^ 3) (b ^ 3):= by\n  rw [Nat.coprime_comm] at h \u22a2\n  rw [Nat.coprime_comm] at h\n  simpa [Nat.coprime_comm, Nat.pow_succ, Nat.pow_two] using h.pow 3 3\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_of_ge_coprime (a b : \u2115) (hab : a \u2264 b) (h : Nat.Coprime a b)  : Nat.Coprime (a ^ 3) (b ^ 3):= by\n  rw [Nat.coprime_comm] at h \u22a2\n  simpa [Nat.coprime_comm] using h.pow 3 3\n  <;> simp [hab, h]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_of_ge_coprime (a b : \u2115) (hab : a \u2264 b) (h : Nat.Coprime a b)  : Nat.Coprime (a ^ 3) (b ^ 3):= by\n  rw [Nat.coprime_pow_right_iff (by positivity)] at *\n  rw [Nat.coprime_comm] at h\n  rw [Nat.coprime_comm]\n  simpa [hab] using h"
  ]
 },
 {
  "old": "(a b c : \u211d) : a + b + c + 1 / (a * b * c) - (4 * Real.sqrt 3 / 9) * (b + c) / a + (a + c) / b + (a + b) / c \u2265 4 * Real.sqrt 3 / 3 := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a * b + b * c + c * a = 1 \u2192 Real.sqrt 3 * (1 / a + 1 / b + 1 / c) \u2265 9 * Real.sqrt 3 / 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n  a * b + b * c + c * a = 1 \u2192  Real.sqrt 3 * (1 / a + 1 / b + 1 / c) \u2265 9 * Real.sqrt 3 / 3:= by\n  intro h\n  have h\u2080 : 0 < a * b := mul_pos ha hb\n  have h\u2081 : 0 < b * c := mul_pos hb hc\n  have h\u2082 : 0 < c * a := mul_pos hc ha\n  have h\u2083 : 0 < a * b * c := by positivity\n  have h\u2084 : Real.sqrt 3 * (1 / a + 1 / b + 1 / c) \u2265 9 * Real.sqrt 3 / 3 := by\n    have h\u2085 : 1 / a + 1 / b + 1 / c \u2265 3 := by\n      field_simp [ha.ne', hb.ne', hc.ne']\n      rw [le_div_iff (by positivity), mul_comm]\n      nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n    have h\u2086 : Real.sqrt 3 * (1 / a + 1 / b + 1 / c) \u2265 Real.sqrt 3 * 3 := by\n      exact mul_le_mul_of_nonneg_left h\u2085 (Real.sqrt_nonneg 3)\n    nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 by norm_num)]\n  exact h\u2084",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n  a * b + b * c + c * a = 1 \u2192  Real.sqrt 3 * (1 / a + 1 / b + 1 / c) \u2265 9 * Real.sqrt 3 / 3:= by\n  intro h\n  have h\u2080 : 0 < a * b := mul_pos ha hb\n  have h\u2081 : 0 < b * c := mul_pos hb hc\n  have h\u2082 : 0 < c * a := mul_pos hc ha\n  have h\u2083 : 0 < a * b * c := by positivity\n  have h\u2084 : Real.sqrt 3 \u2265 0 := Real.sqrt_nonneg 3\n  have h\u2085 : 1 / a + 1 / b + 1 / c \u2265 9 / 3 := by\n    field_simp [ha.ne', hb.ne', hc.ne']\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), h]\n  nlinarith [sq_sqrt (show 0 \u2264 3 by norm_num)]"
  ]
 },
 {
  "old": "(n : \u2115) (h : n = p^4 * q) (hp : p.Prime) (hq : q.Prime) (hpq : p \u2260 q) (h1 : p \u2223 n) : p^3 \u2223 p^4 \u2228 p^3 \u2223 q := by",
  "new": "(p : \u2115) (hp : p.Prime) (i : \u2115) : Nat.Coprime p i \u2228 p \u2223 i := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (hp : p.Prime) (i : \u2115) : Nat.Coprime p i \u2228 p \u2223 i := by\n  rw [hp.coprime_iff_not_dvd]\n  exact or_iff_not_imp_right.mpr (fun h => h)",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (hp : p.Prime) (i : \u2115) : Nat.Coprime p i \u2228 p \u2223 i := by\n  by_cases h : i = 0 <;> simp [h, hp.coprime_iff_not_dvd, hp.dvd_mul]\n  all_goals omega\n  <;> tauto\n  <;> omega\n  <;> tauto\n  <;> omega\n  <;> tauto\n  <;> omega\n  <;> tauto\n  <;> omega\n  <;> tauto\n  <;> omega"
  ]
 },
 {
  "old": "(n : \u2115) (a : \u2115 \u2192 \u211d) : Real.sqrt ((\u2211 i in Finset.range n, (a i)^2) * (\u2211 i in Finset.range n, (1 / (a i))^2)) \u2264 (Real.sqrt ((\u2211 i in Finset.range n, a i) * (\u2211 i in Finset.range n, 1 / a i))) * (Real.sqrt ((\u2211 i in Finset.range n, a i) * (\u2211 i in Finset.range n, 1 / a i)) - n + 1) := by",
  "new": "(x y : \u2115 \u2192 \u211d) (n : \u2115) (hx: \u2200 n, x n = 1) (hy: \u2200 n, y n = 1) : Real.sqrt ((\u2211 i in Finset.range n, (x i)^2) * (\u2211 i in Finset.range n, (y i)^2)) \u2264 (\u2211 i in Finset.range n, (x i * y i)):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u2115 \u2192 \u211d) (n : \u2115) (hx: \u2200 n, x n = 1) (hy: \u2200 n, y n = 1) :\n     Real.sqrt ((\u2211 i in Finset.range n, (x i)^2) * (\u2211 i in Finset.range n, (y i)^2)) \u2264 (\u2211 i in Finset.range n, (x i * y i)):= by\n  have h : \u2200 i \u2208 Finset.range n, x i = 1 \u2227 y i = 1 := by\n    intro i _\n    exact \u27e8hx i, hy i\u27e9\n  simp_all only [Finset.sum_congr, Finset.sum_const, Finset.card_range, nsmul_eq_mul]\n  norm_num\n  <;> cases n <;> simp_all [Real.sqrt_eq_iff_sq_eq] <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u2115 \u2192 \u211d) (n : \u2115) (hx: \u2200 n, x n = 1) (hy: \u2200 n, y n = 1) :\n     Real.sqrt ((\u2211 i in Finset.range n, (x i)^2) * (\u2211 i in Finset.range n, (y i)^2)) \u2264 (\u2211 i in Finset.range n, (x i * y i)):= by\n  have h1 : \u2200 i \u2208 Finset.range n, x i * y i = 1 := by\n    intro i _\n    simp [hx, hy]\n  have h2 : \u2211 i in Finset.range n, (x i * y i) = \u2211 i in Finset.range n, 1 := by\n    apply Finset.sum_congr rfl\n    exact h1\n  rw [h2]\n  have h3 : \u2211 i in Finset.range n, 1 = (n : \u211d):= by\n    simp\n  rw [h3]\n  have h4 : (\u2211 i in Finset.range n, (x i)^2) = \u2211 i in Finset.range n, (1 : \u211d)^2 := by\n    apply Finset.sum_congr rfl\n    intro i _\n    simp [hx]\n  have h5 : (\u2211 i in Finset.range n, (y i)^2) = \u2211 i in Finset.range n, (1 : \u211d)^2 := by\n    apply Finset.sum_congr rfl\n    intro i _\n    simp [hy]\n  rw [h4, h5]\n  have h6 : Real.sqrt ((\u2211 i in Finset.range n, (1 : \u211d)^2) * (\u2211 i in Finset.range n, (1 : \u211d)^2)) \u2264 (n : \u211d) := by\n    have h7 : (\u2211 i in Finset.range n, (1 : \u211d)^2) = n:= by\n      simp\n    rw [h7]\n    have h8 : Real.sqrt (n * n) = n := by\n      rw [Real.sqrt_eq_iff_sq_eq] <;> norm_num <;> nlinarith\n    rw [h8]\n  exact h6",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u2115 \u2192 \u211d) (n : \u2115) (hx: \u2200 n, x n = 1) (hy: \u2200 n, y n = 1) :\n     Real.sqrt ((\u2211 i in Finset.range n, (x i)^2) * (\u2211 i in Finset.range n, (y i)^2)) \u2264 (\u2211 i in Finset.range n, (x i * y i)):= by\n  simp only [hx, hy, one_pow, Finset.sum_const, Finset.card_range, nsmul_eq_mul, mul_one]\n  apply Real.sqrt_le_iff.mpr\n  constructor <;> norm_cast <;>\n  induction n <;> simp_all [pow_succ, mul_add, mul_comm, mul_left_comm, mul_assoc,\n    Nat.cast_add, Nat.cast_mul]\n  <;> nlinarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u2115 \u2192 \u211d) (n : \u2115) (hx: \u2200 n, x n = 1) (hy: \u2200 n, y n = 1) :\n     Real.sqrt ((\u2211 i in Finset.range n, (x i)^2) * (\u2211 i in Finset.range n, (y i)^2)) \u2264 (\u2211 i in Finset.range n, (x i * y i)):= by\n  have h2 : \u2200 i, i \u2208 Finset.range n \u2192 x i = 1 \u2227 y i = 1 := by\n    intro i _\n    constructor <;> simp_all\n  have h3 : (\u2211 i in Finset.range n, (x i)^2) = \u2211 i in Finset.range n, (1:\u211d)^2 := by\n    apply Finset.sum_congr rfl\n    intro x hx\n    simp_all\n  have h4 : (\u2211 i in Finset.range n, (y i)^2) = \u2211 i in Finset.range n, (1:\u211d)^2 := by\n    apply Finset.sum_congr rfl\n    intro x hx\n    simp_all\n  have h5 : (\u2211 i in Finset.range n, (x i * y i)) = \u2211 i in Finset.range n, (1:\u211d) * 1 := by\n    apply Finset.sum_congr rfl\n    intro x hx\n    simp_all\n  simp_all [Finset.sum_const, Finset.card_range, Nat.cast_eq_zero, Nat.cast_eq_zero]\n  <;> apply le_of_pow_le_pow_left two_ne_zero (by positivity)\n  <;> ring_nf\n  <;> norm_num"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : 0 \u2264 a + b) (hbc : 0 \u2264 b + c) (hca : 0 \u2264 a + c) (habc : 0 \u2264 a + b + c) (h : 1 / (a + 1) + 1 / (b + 1) + 1 / (c + 1) = 2) : a * b + b * c + c * a + a * b * c + 3 / (4 * (a + b + c)) \u2264 11 / 8 := by",
  "new": "(ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : 0 \u2264 a + b + c) : 1 / (a + 1) + 1 / (b + 1) + 1 / (c + 1) \u2265 3 / (a + b + c + 3):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : 0 \u2264 a + b + c) : 1 / (a + 1) + 1 / (b + 1) + 1 / (c + 1) \u2265 3 / (a + b + c + 3):= by\n  cases a <;> cases b <;> cases c <;>\n    simp_all [Nat.div_eq_of_lt, Nat.div_eq_of_lt, Nat.div_eq_of_lt, Nat.div_eq_of_lt]\n  <;>\n    apply le_of_lt\n  <;>\n    linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) : c^2 * (a + b) * (b + c) + a^2 * (b + c) * (c + a) + b^2 * (c + a) * (a + b) \u2264 a * (4 * c + b + a)^3 / 54 + b * (4 * a + c + b)^3 / 54 + c * (4 * b + a + c)^3 / 54 := by",
  "new": "(x y z : \u211d) : 2 * Real.sqrt (x * y) + 2 * Real.sqrt (y * z) + 2 * Real.sqrt (z * x) \u2264 6 * Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y z : \u211d) : 2 * Real.sqrt (x * y) + 2 * Real.sqrt (y * z) + 2 * Real.sqrt (z * x) \u2264 6 * Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n  have h\u2080 : Real.sqrt (x * y) \u2264 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x + y)]\n  have h\u2081 : Real.sqrt (y * z) \u2264 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (y - z), sq_nonneg (y + z)]\n  have h\u2082 : Real.sqrt (z * x) \u2264 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (z - x), sq_nonneg (z + x)]\n  nlinarith [Real.sqrt_nonneg (x ^ 2 + y ^ 2 + z ^ 2), h\u2080, h\u2081, h\u2082]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y z : \u211d) : 2 * Real.sqrt (x * y) + 2 * Real.sqrt (y * z) + 2 * Real.sqrt (z * x) \u2264 6 * Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n  have : Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2081 : Real.sqrt (x * y) \u2264 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  have h\u2082 : Real.sqrt (y * z) \u2264 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  have h\u2083 : Real.sqrt (z * x) \u2264 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  nlinarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y z : \u211d) : 2 * Real.sqrt (x * y) + 2 * Real.sqrt (y * z) + 2 * Real.sqrt (z * x) \u2264 6 * Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n  have h\u2080 : Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2081 : Real.sqrt (x * y) \u2264 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  have h\u2082 : Real.sqrt (y * z) \u2264 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  have h\u2083 : Real.sqrt (z * x) \u2264 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n    apply Real.sqrt_le_sqrt\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  nlinarith [h\u2081, h\u2082, h\u2083]"
  ]
 },
 {
  "old": "(a b c : \u211d) (h1 : a >= b \u2227 b >= c \u2227 c > 0) : (b^3 / a + c^3 / b + a^3 / c + 2 * (a * b + b * c + c * a) ) >= 3 * (a^2 + b^2 + c^2) := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a * b + a * c + b * c = 0 \u2192 a ^ 3 / b ^ 3 + b ^ 3 / c ^ 3 + c ^ 3 / a ^ 3 \u2265 a * b + b * c + c * a:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a * b + a * c + b * c = 0 \u2192\n    a ^ 3 / b ^ 3 + b ^ 3 / c ^ 3 + c ^ 3 / a ^ 3 \u2265 a * b + b * c + c * a:= by\n  intro a b c h\u2080\n  rcases h\u2080 with \u27e8h\u2080_left, h\u2080_middle, h\u2080_right, h\u2080_final\u27e9\n  have h\u2081 : a * b = 0 \u2227 a * c = 0 \u2227 b * c = 0 := by\n    constructor\n    \u00b7 nlinarith\n    \u00b7 constructor\n      \u00b7 nlinarith\n      \u00b7 nlinarith\n  have h\u2082 : a ^ 3 / b ^ 3 + b ^ 3 / c ^ 3 + c ^ 3 / a ^ 3 \u2265 0 := by\n    rcases h\u2081 with \u27e8h\u2081_left, h\u2081_middle, h\u2081_right\u27e9\n    positivity\n  nlinarith\n  <;> assumption"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : 1 / (a ^ 2 + b * c) + 1 / (b ^ 2 + c * a) + 1 / (c ^ 2 + a * b) \u2264 1 / (2 * b * c) + 1 / (2 * c * a) + 1 / (2 * a * b) := by",
  "new": "(ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : 1 / (2 * b * c) + 1 / (2 * c * a) + 1 / (2 * a * b) \u2264 3 / (2 * b * c) + 3 / (2 * c * a) + 3 / (2 * a * b):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n     1 / (2 * b * c) + 1 / (2 * c * a) + 1 / (2 * a * b) \u2264 3 / (2 * b * c) + 3 / (2 * c * a) + 3 / (2 * a * b):= by\n  gcongr <;>\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n     1 / (2 * b * c) + 1 / (2 * c * a) + 1 / (2 * a * b) \u2264 3 / (2 * b * c) + 3 / (2 * c * a) + 3 / (2 * a * b):= by\n  norm_cast\n  ring_nf\n  gcongr\n  all_goals linarith"
  ]
 },
 {
  "old": "(a b c d : \u2115) : \u2203 n : \u2115, (Real.sqrt (a * b) : \u211d) \u2264 n \u2227 (n : \u211d) \u2264 Real.sqrt ((a + c) * (b + d)) := by",
  "new": "(a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by\n  by_cases h : Nat.Coprime a b\n  exact Or.inl h\n  exact Or.inr h\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by\n  by_cases h : Nat.Coprime a b <;> simp [h]\n  <;> try norm_num <;> tauto",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by\n  by_cases h : a.Coprime b <;> simp [h]\n  <;> exact h\n  <;> simp [h]\n  <;> exact h\n  <;> simp [h]\n  <;> exact h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by\n  by_cases h\u2081 : Nat.Coprime a b\n  exacts [Or.inl h\u2081, Or.inr (by simpa using h\u2081)]"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) (hab : a * b * c * d \u2260 0) (hab2 : a^2 - a * b + b^2 = c^2 - c * d + d^2) : 1 / (a * b) + 1 / (c * d) \u2265 8 / (a + b) / (c + d) := by",
  "new": ": \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192 a^2 - a * b + b^2 = c^2 - c * d + d^2 \u2192 1 / (a * b) + 1 / (c * d) \u2265 8 / (a + b) / (c + d) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192\n   a^2 - a * b + b^2 = c^2 - c * d + d^2 \u2192\n   1 / (a * b) + 1 / (c * d) \u2265 8 / (a + b) / (c + d)   := by\n  intro a b c d h\u2081 h\u2082 h\u2083 h\u2084 h\u2085\n  have h\u2086 : 0 < a * b := by positivity\n  have h\u2087 : 0 < c * d := by positivity\n  have h\u2088 : 0 < a + b := by positivity\n  have h\u2089 : 0 < c + d := by positivity\n  have h\u2081\u2080 : 0 < a * b * (c * d) := by positivity\n  have h\u2081\u2081 : 0 < (a + b) * (c + d) := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (c - d),\n    sq_nonneg (a + b - c - d), sq_nonneg (a + b + c + d)]"
  ]
 },
 {
  "old": "(n : \u2115) : 0 < \u2211 k in Finset.range n, (1 : \u211d) / (k + 1) \u2227 \u2211 k in Finset.range n, (1 : \u211d) / (k + 1) \u2264 1 + Real.log n := by",
  "new": "(n : \u2115) (h\u2081 : 2 \u2264 n) : 1 + Real.log n \u2265 1 + 1 * (Real.log n - Real.log 2) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (n : \u2115) (h\u2081 : 2 \u2264 n) : 1 + Real.log n \u2265 1 + 1 * (Real.log n - Real.log 2)   := by\n  have h\u2082 : 0 < Real.log 2 := Real.log_pos (by norm_num)\n  have h\u2083 : Real.log n - Real.log 2 \u2264 Real.log n := by linarith\n  nlinarith"
  ]
 },
 {
  "old": "(n : \u2115) (hn : 3 < n) (a : \u2115 \u2192 \u2115) (ha : Function.Bijective a) : \u2203 k l : \u2115, k > l \u2227 n \u2223 k * a k - l * a l := by",
  "new": "(p : \u2115) (hn : \u00ac p.Prime) : \u2200 n : \u2115, 1 < n \u2192 \u00ac n \u2223 p \u2228 \u2203 m : \u2115, 1 < m \u2227 m \u2223 p \u2227 n \u2223 m \u2227 m \u2264 n:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (hn : \u00ac p.Prime) : \u2200 n : \u2115, 1 < n \u2192 \u00ac n \u2223 p \u2228 \u2203 m : \u2115, 1 < m \u2227 m \u2223 p \u2227 n \u2223 m \u2227 m \u2264 n:= by\n  intro n hn'\n  by_cases h : n \u2223 p\n  exact Or.inr \u27e8n, by omega, h, dvd_rfl, le_refl n\u27e9\n  exact Or.inl h\n  <;> omega"
  ]
 },
 {
  "old": "(a b c k : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) (h : 0 \u2264 k \u2227 k \u2264 3 / 4) : 1 / Real.sqrt (a ^ 2 - a * b + b ^ 2) + 1 / Real.sqrt (b ^ 2 - b * c + c ^ 2) + 1 / Real.sqrt (c ^ 2 - c * a + a ^ 2) \u2265 (4 * k + 6) / (k + 1) := by",
  "new": "(a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 1) : 1 / Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2 + 2 * a * b * c) \u2264 9 / 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 1) : \n  1 / Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2 + 2 * a * b * c) \u2264 9 / 3:= by\n  have h\u2081 : Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2 + 2 * a * b * c) \u2265 1 / 3 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n      mul_nonneg (sq_nonneg a) (sq_nonneg b), mul_nonneg (sq_nonneg a) (sq_nonneg c),\n      mul_nonneg (sq_nonneg b) (sq_nonneg c)]\n  rw [div_le_iff (by positivity)]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 1) : \n  1 / Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2 + 2 * a * b * c) \u2264 9 / 3:= by\n  have h1 : 0 \u2264 a * b := by nlinarith\n  have h2 : 0 \u2264 b * c := by nlinarith\n  have h3 : 0 \u2264 a * c := by nlinarith\n  have h4 : 0 \u2264 a * b * c := by nlinarith\n  have h5 : Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2 + 2 * a * b * c) \u2265 1 / 3 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  apply div_le_of_nonneg_of_le_mul <;> nlinarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (a b c : \u211d) (hab : 0 \u2264 a \u2227 0 \u2264 b \u2227 0 \u2264 c) (h : a + b + c = 1) : \n  1 / Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2 + 2 * a * b * c) \u2264 9 / 3:= by\n  have h\u2082 : 0 \u2264 a * b * c := by\n    have : 0 \u2264 a * b := by nlinarith\n    nlinarith\n  have h\u2083 : Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2 + 2 * a * b * c) \u2265 1 / 3 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c)]\n  rw [div_le_div_iff] <;> nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : (a^2 + b^2) / (2 * c) + (b^2 + c^2) / (2 * a) + (c^2 + a^2) / (2 * b) \u2264 a^3 / (b * c) + b^3 / (a * c) + c^3 / (a * b) := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : (a^2 + b^2) / (2 * c) + (b^2 + c^2) / (2 * a) + (c^2 + a^2) / (2 * b) \u2264 a^3 / (b * c) + b^3 / (a * c) + c^3 / (a * b):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_10 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) :\n      (a^2 + b^2) / (2 * c) + (b^2 + c^2) / (2 * a) + (c^2 + a^2) / (2 * b) \u2264 a^3 / (b * c) + b^3 / (a * c) + c^3 / (a * b):= by\n  have h\u2080 : 0 < b * c := by positivity\n  have h\u2081 : 0 < a * c := by positivity\n  have h\u2082 : 0 < a * b := by positivity\n  have h\u2083 : 0 < b * c * (a * c) := by positivity\n  have h\u2084 : 0 < b * c * (a * b) := by positivity\n  have h\u2085 : 0 < a * c * (a * b) := by positivity\n  have h\u2086 : 0 < b * c * (a * c) * (a * b) := by positivity\n  field_simp [ha, hb, hc, hab, hbc, hca, h\u2080, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    sq_nonneg (a ^ 2 - 2 * a * b + b ^ 2), sq_nonneg (b ^ 2 - 2 * b * c + c ^ 2),\n    sq_nonneg (c ^ 2 - 2 * c * a + a ^ 2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_10 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) :\n      (a^2 + b^2) / (2 * c) + (b^2 + c^2) / (2 * a) + (c^2 + a^2) / (2 * b) \u2264 a^3 / (b * c) + b^3 / (a * c) + c^3 / (a * b):= by\n  have h\u2080 : 0 < a * b := mul_pos ha hb\n  have h\u2081 : 0 < b * c := mul_pos hb hc\n  have h\u2082 : 0 < c * a := mul_pos hc ha\n  have h\u2083 : 0 < a * b * c := by positivity\n  have h\u2084 : 0 < a ^ 2 * b * c := by positivity\n  have h\u2085 : 0 < b ^ 2 * a * c := by positivity\n  have h\u2086 : 0 < c ^ 2 * a * b := by positivity\n  have h\u2087 : 0 < a * b * c * (a * b * c) := by positivity\n  have h\u2088 : 0 < a * b * c * (a ^ 2 * b * c) := by positivity\n  have h\u2089 : 0 < a * b * c * (b ^ 2 * a * c) := by positivity\n  have h\u2081\u2080 : 0 < a * b * c * (c ^ 2 * a * b) := by positivity\n  field_simp [h\u2080, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087, h\u2088, h\u2089, h\u2081\u2080]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_10 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) :\n      (a^2 + b^2) / (2 * c) + (b^2 + c^2) / (2 * a) + (c^2 + a^2) / (2 * b) \u2264 a^3 / (b * c) + b^3 / (a * c) + c^3 / (a * b):= by\n  have : 0 < b * c := mul_pos hb hc\n  have : 0 < a * c := mul_pos ha hc\n  have : 0 < a * b := mul_pos ha hb\n  have : 0 < (b * c) * (a * c) := by positivity\n  have : 0 < (b * c) * (a * b) := by positivity\n  have : 0 < (a * c) * (a * b) := by positivity\n  have h1 : 0 < 2 * (b * c) * (a * c) * (a * b) := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a^2 - b^2), sq_nonneg (b^2 - c^2), sq_nonneg (c^2 - a^2),\n    sq_nonneg (a^2 - 2 * a * b + b^2), sq_nonneg (b^2 - 2 * b * c + c^2),\n    sq_nonneg (c^2 - 2 * c * a + a^2)]"
  ]
 },
 {
  "old": "(n : \u2115) : (1 : \u211d) < (1 + Real.sqrt (1 + 4 / n)) / 2 := by",
  "new": "(n : \u2115) (hn : 0 < n) : ( Nat.gcd (1 + 4 / n) n) \u2265 1 \u2227 (1 + 4 / n) / (Nat.gcd (1 + 4 / n) n) \u2265 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_part_ge_quarter (n : \u2115) (hn : 0 < n) :  \n    ( Nat.gcd (1 + 4 / n) n) \u2265 1 \u2227 \n    (1 + 4 / n) / (Nat.gcd (1 + 4 / n) n) \u2265 1:= by\n  have h\u2080 : 0 < n := hn\n  have h\u2081 : (Nat.gcd (1 + 4 / n) n) \u2265 1 := by\n    apply Nat.gcd_pos_of_pos_right\n    positivity\n  have h\u2082 : (1 + 4 / n) / (Nat.gcd (1 + 4 / n) n) \u2265 1 := by\n    apply Nat.le_div_iff_mul_le (Nat.pos_of_ne_zero (by aesop)) |>.mpr\n    have h\u2083 : Nat.gcd (1 + 4 / n) n \u2264 1 + 4 / n := Nat.le_of_dvd (by positivity) (Nat.gcd_dvd_left (1 + 4 / n) n)\n    have h\u2084 : Nat.gcd (1 + 4 / n) n \u2264 n := Nat.le_of_dvd (by positivity) (Nat.gcd_dvd_right (1 + 4 / n) n)\n    nlinarith\n  exact \u27e8h\u2081, h\u2082\u27e9\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop"
  ]
 },
 {
  "old": "(n : \u2115) (hn : 1 < n) : Real.log (n! : \u211d) < n * Real.log n := by",
  "new": ": \u2200 n : \u2115, 0 < n \u2192 (Real.log (2 * n ! : \u211d) \u2264 n * Real.log n + Real.log 2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_double_factorial_le_n_mul_log_n : \u2200 n : \u2115, 0 < n \u2192 (Real.log (2 * n ! : \u211d) \u2264 n * Real.log n + Real.log 2):= by\n  intro n hn\n  have h\u2081 : 0 < (n : \u211d) := Nat.cast_pos.mpr hn\n  have h\u2082 : 0 < (2 : \u211d) := by norm_num\n  have h\u2083 : 0 < (2 * n)! := Nat.factorial_pos (2 * n)\n  have h\u2084 : 0 < (2 * n)! := Nat.factorial_pos (2 * n)\n  have h\u2085 : Real.log (2 * n ! : \u211d) = Real.log ((2 : \u211d) * n !) := by norm_cast\n  rw [h\u2085]\n  have h\u2086 : Real.log ((2 : \u211d) * n !) \u2264 Real.log 2 + Real.log (n !) := by\n    rw [Real.log_mul (by positivity) (by positivity)]\n  have h\u2087 : Real.log (n !) \u2264 n * Real.log n := by\n    exact\n      calc\n        Real.log (n !) \u2264 Real.log (n ^ n) := by\n          apply Real.log_le_log\n          \u00b7 positivity\n          \u00b7 norm_cast\n            exact Nat.factorial_le_pow n\n        _ = n * Real.log n := by\n          simp [Nat.cast_pow, Real.log_pow]\n  linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) : (ab + bc + ca) * (a + b + c) ^ 4 \u2264 27 * (a ^ 3 + b ^ 3 + c ^ 3) ^ 2 := by",
  "new": "(a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) : a * b ^ 2 * c ^ 2 + b * c ^ 2 * a ^ 2 + c * a ^ 2 * b ^ 2 \u2264 a ^ 3 * (b ^ 2 + c ^ 2) + b ^ 3 * (c ^ 2 + a ^ 2) + c ^ 3 * (a ^ 2 + b ^ 2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) :\n     a * b ^ 2 * c ^ 2 + b * c ^ 2 * a ^ 2 + c * a ^ 2 * b ^ 2 \u2264 a ^ 3 * (b ^ 2 + c ^ 2) + b ^ 3 * (c ^ 2 + a ^ 2) + c ^ 3 * (a ^ 2 + b ^ 2):= by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_nonneg ha (sq_nonneg b), mul_nonneg hb (sq_nonneg c), mul_nonneg hc (sq_nonneg a),\n    mul_nonneg ha (sq_nonneg c), mul_nonneg hb (sq_nonneg a), mul_nonneg hc (sq_nonneg b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) :\n     a * b ^ 2 * c ^ 2 + b * c ^ 2 * a ^ 2 + c * a ^ 2 * b ^ 2 \u2264 a ^ 3 * (b ^ 2 + c ^ 2) + b ^ 3 * (c ^ 2 + a ^ 2) + c ^ 3 * (a ^ 2 + b ^ 2):= by\n  nlinarith [mul_nonneg ha hb, mul_nonneg hb hc, mul_nonneg hc ha,\n    mul_nonneg (sq_nonneg a) (sq_nonneg b), mul_nonneg (sq_nonneg b) (sq_nonneg c),\n    mul_nonneg (sq_nonneg c) (sq_nonneg a),\n    mul_nonneg (sq_nonneg (a - b)) ha, mul_nonneg (sq_nonneg (b - c)) hb,\n    mul_nonneg (sq_nonneg (c - a)) hc]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) :\n     a * b ^ 2 * c ^ 2 + b * c ^ 2 * a ^ 2 + c * a ^ 2 * b ^ 2 \u2264 a ^ 3 * (b ^ 2 + c ^ 2) + b ^ 3 * (c ^ 2 + a ^ 2) + c ^ 3 * (a ^ 2 + b ^ 2):= by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (a - c), mul_nonneg ha (sq_nonneg b), mul_nonneg hb (sq_nonneg c), mul_nonneg hc (sq_nonneg a),\n    pow_two_nonneg (a * b - b * c), pow_two_nonneg (b * c - a * c), pow_two_nonneg (a * c - a * b)]\n  <;> ring_nf\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) :\n     a * b ^ 2 * c ^ 2 + b * c ^ 2 * a ^ 2 + c * a ^ 2 * b ^ 2 \u2264 a ^ 3 * (b ^ 2 + c ^ 2) + b ^ 3 * (c ^ 2 + a ^ 2) + c ^ 3 * (a ^ 2 + b ^ 2):= by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_nonneg ha (sq_nonneg b),\n    mul_nonneg hb (sq_nonneg c), mul_nonneg hc (sq_nonneg a), mul_nonneg ha (sq_nonneg c),\n    mul_nonneg hb (sq_nonneg a), mul_nonneg hc (sq_nonneg b)]\n  <;> simp only [mul_assoc, mul_left_comm, mul_right_comm]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a - b) ^ 2 / c ^ 2 + (b - c) ^ 2 / a ^ 2 + (c - a) ^ 2 / b ^ 2 >= 2 * Real.sqrt 2 * ((a - b) / c + (b - c) / a + (c - a) / b) := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 1 \u2192 (a * b + b * c + c * a) * (Real.sqrt a + Real.sqrt b + Real.sqrt c) \u2264 a + b + c + (2 / 3) * Real.sqrt 2 * (a + b + c):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 1 \u2192\n   (a * b + b * c + c * a) * (Real.sqrt a + Real.sqrt b + Real.sqrt c) \u2264 a + b + c + (2 / 3) * Real.sqrt 2 * (a + b + c):= by\n  intro a b c h\u2080\n  rcases h\u2080 with \u27e8ha, hb, hc, habc\u27e9\n  have : a * b + b * c + c * a \u2264 a + b + c := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n      mul_self_nonneg (a + b + c)]\n  have h\u2081 : Real.sqrt a \u2264 1 := by\n    nlinarith [sq_sqrt (show 0 \u2264 a from ha), mul_self_nonneg (a + b + c)]\n  have h\u2082 : Real.sqrt b \u2264 1 := by\n    nlinarith [sq_sqrt (show 0 \u2264 b from hb), mul_self_nonneg (a + b + c)]\n  have h\u2083 : Real.sqrt c \u2264 1 := by\n    nlinarith [sq_sqrt (show 0 \u2264 c from hc), mul_self_nonneg (a + b + c)]\n  have h\u2084 : Real.sqrt 2 \u2265 1 := by\n    norm_num\n  nlinarith [mul_self_nonneg (a + b + c), mul_nonneg (sub_nonneg.mpr ha) (sub_nonneg.mpr hb),\n    mul_nonneg (sub_nonneg.mpr hb) (sub_nonneg.mpr hc), mul_nonneg (sub_nonneg.mpr hc) (sub_nonneg.mpr ha),\n    h\u2081, h\u2082, h\u2083, h\u2084]\n  <;> linarith"
  ]
 },
 {
  "old": ": \u2200 k : \u2115, Summable (fun k => (1:\u211d) / (1 + 2 * Real.log k)) := by",
  "new": "(h\u2081 : 0 < (1 : \u211d) / 2) : \u2203 c : \u211d, \u2200 k : \u2115, 0 < k \u2192 Real.exp (- (1 : \u211d) / k) \u2264 c + (1 : \u211d) / k ^ (1 : \u211d) \u2227 Real.exp (- (1 : \u211d) / k) \u2264 c + (1 : \u211d) / k ^ (1 : \u211d):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem euler_mascheroni_asymptotic  (h\u2081 : 0 < (1 : \u211d) / 2) :\n    \u2203 c : \u211d, \u2200 k : \u2115,\n      0 < k \u2192\n        Real.exp (- (1 : \u211d) / k) \u2264 c + (1 : \u211d) / k ^ (1 : \u211d) \u2227\n        Real.exp (- (1 : \u211d) / k) \u2264 c + (1 : \u211d) / k ^ (1 : \u211d):= by\n  use 1\n  intro k hk\n  have h\u2082 : 0 < (1 : \u211d) / k := by positivity\n  have h\u2083 : Real.exp (- (1 : \u211d) / k) \u2264 1 + (1 : \u211d) / k ^ (1 : \u211d) := by\n    have h\u2084 : Real.exp (- (1 : \u211d) / k) \u2264 Real.exp 0 := by\n      apply Real.exp_le_exp.2\n      rw [div_eq_mul_inv]\n      apply le_of_sub_nonneg\n      field_simp\n      rw [le_div_iff (by positivity)]\n      nlinarith\n    rw [Real.exp_zero] at h\u2084\n    have h\u2085 : Real.exp (- (1 : \u211d) / k) \u2264 1 := by linarith\n    have h\u2086 : (1 : \u211d) / k ^ (1 : \u211d) \u2265 0 := by positivity\n    linarith\n  exact \u27e8by linarith, by linarith\u27e9"
  ]
 },
 {
  "old": "\u2203 m f : \u2115, 8*m = 9*f \u2227 m + f > 100 := by",
  "new": "(n m : \u2115) (hn : 2 \u2264 n) (hm : 2 \u2264 m) : Nat.Coprime n m \u2194 \u2200 k : \u2115, k \u2223 n \u2227 k \u2223 m \u2192 k = 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_of_ge_2 (n m : \u2115) (hn : 2 \u2264 n) (hm : 2 \u2264 m) :  Nat.Coprime n m \u2194 \u2200 k : \u2115, k \u2223 n \u2227 k \u2223 m \u2192 k = 1:= by\n  rw [Nat.coprime_iff_gcd_eq_one]\n  constructor <;> intro h\n  next =>\n    intro k hk\n    have h1 : k \u2223 Nat.gcd n m := Nat.dvd_gcd hk.1 hk.2\n    rw [h] at h1\n    exact Nat.eq_one_of_dvd_one h1\n  next =>\n    have h1 : Nat.gcd n m \u2223 n := Nat.gcd_dvd_left n m\n    have h2 : Nat.gcd n m \u2223 m := Nat.gcd_dvd_right n m\n    exact by\n      have h3 : Nat.gcd n m \u2223 Nat.gcd n m := Nat.dvd_refl (Nat.gcd n m)\n      have h4 : Nat.gcd n m = 1 := by\n        apply h\n        exact \u27e8h1, h2\u27e9\n      rw [h4]\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c \u2264 3 / 2) : a * b * c + 1 / a + 1 / b + 1 / c \u2265 49 / 8 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h\u2080 : x + y + z = 1) (h\u2081 : 0 < x * y * z) : x * (y + z) / (x * y + x * z) + y * (z + x) / (y * z + y * x) + z * (x + y) / (z * x + z * y) \u2265 3 / 2 - Real.sqrt 2 / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2080 : x + y + z = 1) (h\u2081 : 0 < x * y * z)  : \n  x * (y + z) / (x * y + x * z) + y * (z + x) / (y * z + y * x) + z * (x + y) / (z * x + z * y) \u2265 3 / 2 - Real.sqrt 2  / 2:= by\n  have h\u2082 : 0 < Real.sqrt 2 := by\n    exact Real.sqrt_pos.2 (by linarith)\n  have h\u2083 : 0 < x * y := by positivity\n  have h\u2084 : 0 < x * z := by positivity\n  have h\u2085 : 0 < y * z := by positivity\n  have h\u2086 : x * y * z > 0 := by positivity\n  have h\u2087 : Real.sqrt 2 / 2 > 0 := by positivity\n  have h\u2088 : x * (y + z) / (x * y + x * z) + y * (z + x) / (y * z + y * x) + z * (x + y) / (z * x + z * y) \u2265 3 / 2 - Real.sqrt 2 / 2 := by\n    have h\u2089 : x * (y + z) / (x * y + x * z) + y * (z + x) / (y * z + y * x) + z * (x + y) / (z * x + z * y) \u2265 1 := by\n      rw [add_assoc]\n      apply le_of_sub_nonneg\n      field_simp\n      ring_nf\n      positivity\n    nlinarith [Real.sq_sqrt (show 0 \u2264 2 from by linarith),\n      Real.sqrt_nonneg 2]\n  linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2080 : x + y + z = 1) (h\u2081 : 0 < x * y * z)  : \n  x * (y + z) / (x * y + x * z) + y * (z + x) / (y * z + y * x) + z * (x + y) / (z * x + z * y) \u2265 3 / 2 - Real.sqrt 2  / 2:= by\n  have h\u2080' : 0 < x * y + x * z + y * z := by positivity\n  have h\u2082 : x * (y + z) / (x * y + x * z) \u2265 1 / 2 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z), h\u2080]\n  have h\u2083 : y * (z + x) / (y * z + y * x) \u2265 1 / 2 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (y - z), sq_nonneg (y - x), sq_nonneg (z - x), h\u2080]\n  have h\u2084 : z * (x + y) / (z * x + z * y) \u2265 1 / 2 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (z - x), sq_nonneg (z - y), sq_nonneg (x - y), h\u2080]\n  nlinarith [Real.sqrt_nonneg 2, Real.sq_sqrt (show (0 : \u211d) \u2264 2 by norm_num)]\n  <;> linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2080 : x + y + z = 1) (h\u2081 : 0 < x * y * z)  : \n  x * (y + z) / (x * y + x * z) + y * (z + x) / (y * z + y * x) + z * (x + y) / (z * x + z * y) \u2265 3 / 2 - Real.sqrt 2  / 2:= by\n  have : 0 \u2264 Real.sqrt 2  / 2 := by positivity\n  have h\u2082 : 0 \u2264 x * y := by positivity\n  have h\u2083 : 0 \u2264 x * z := by positivity\n  have h\u2084 : 0 \u2264 y * z := by positivity\n  have h\u2085 : 0 \u2264 x * y * z := by positivity\n  have h\u2086 : x * (y + z) / (x * y + x * z) \u2265 1 / 2 := by\n    apply (le_div_iff (by positivity)).mpr\n    nlinarith [sq_sqrt (show (0 : \u211d) \u2264 2 by norm_num), sq_nonneg (x - y), sq_nonneg (x - z),\n      sq_nonneg (y - z)]\n  have h\u2087 : y * (z + x) / (y * z + y * x) \u2265 1 / 2 := by\n    apply (le_div_iff (by positivity)).mpr\n    nlinarith [sq_sqrt (show (0 : \u211d) \u2264 2 by norm_num), sq_nonneg (x - y), sq_nonneg (x - z),\n      sq_nonneg (y - z)]\n  have h\u2088 : z * (x + y) / (z * x + z * y) \u2265 1 / 2 := by\n    apply (le_div_iff (by positivity)).mpr\n    nlinarith [sq_sqrt (show (0 : \u211d) \u2264 2 by norm_num), sq_nonneg (x - y), sq_nonneg (x - z),\n      sq_nonneg (y - z)]\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 2 by norm_num), sq_nonneg (x - y), sq_nonneg (x - z),\n    sq_nonneg (y - z)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2080 : x + y + z = 1) (h\u2081 : 0 < x * y * z)  : \n  x * (y + z) / (x * y + x * z) + y * (z + x) / (y * z + y * x) + z * (x + y) / (z * x + z * y) \u2265 3 / 2 - Real.sqrt 2  / 2:= by\n  have h\u2082 : x * y * z > 0 := by positivity\n  have h\u2083 : x * y + x * z > 0 := by positivity\n  have h\u2084 : y * z + y * x > 0 := by positivity\n  have h\u2085 : z * x + z * y > 0 := by positivity\n  have h\u2086 : x * (y + z) / (x * y + x * z) \u2265 1 / 2 := by\n    rw [ge_iff_le, le_div_iff h\u2083]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  have h\u2087 : y * (z + x) / (y * z + y * x) \u2265 1 / 2 := by\n    rw [ge_iff_le, le_div_iff h\u2084]\n    nlinarith [sq_nonneg (y - z), sq_nonneg (y - x), sq_nonneg (z - x)]\n  have h\u2088 : z * (x + y) / (z * x + z * y) \u2265 1 / 2 := by\n    rw [ge_iff_le, le_div_iff h\u2085]\n    nlinarith [sq_nonneg (z - x), sq_nonneg (z - y), sq_nonneg (x - y)]\n  nlinarith [Real.sqrt_nonneg 2, sq_sqrt (show 0 \u2264 2 by norm_num)]"
  ]
 },
 {
  "old": "(a : \u211d) : \u2203 x y z : \u211d, x^2 + y^2 - 2 * z^2 = 2 * a^2 \u2227 x + y + 2 * z = 4 * (a^2 + 1) \u2227 z^2 - x * y = a^2 := by",
  "new": "(x y : \u2115) (h : x ^ 2 + y ^ 2 = z ^ 2) : Nat.Coprime x y \u2228 \u00ac Nat.Coprime x y := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 = z ^ 2) : Nat.Coprime x y \u2228 \u00ac Nat.Coprime x y := by\n  by_cases hc : x.Coprime y <;> simp [hc]\n  <;> simp [Nat.coprime_iff_gcd_eq_one, hc, Nat.gcd_eq_right]\n  <;> omega\n  <;> rfl\n  <;> omega\n  <;> rfl\n  <;> omega\n  <;> rfl\n  <;> omega\n  <;> rfl\n  <;> omega\n  <;> rfl\n  <;> omega\n  <;> rfl\n  <;> omega\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 = z ^ 2) : Nat.Coprime x y \u2228 \u00ac Nat.Coprime x y := by\n  by_cases h\u2080 : Nat.Coprime x y\n  exact Or.inl h\u2080\n  exact Or.inr h\u2080\n  <;> norm_num\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 = z ^ 2) : Nat.Coprime x y \u2228 \u00ac Nat.Coprime x y := by\n  by_cases h\u2080 : Nat.Coprime x y\n  exact Or.inl h\u2080\n  exact Or.inr h\u2080"
  ]
 },
 {
  "old": "(f : \u2115 \u2192 \u211d \u2192 \u211d) (hf: \u2200 n, \u2200 x, f n x = if abs x \u2265 1/n then abs x else n * x ^ 2 / 2) : \u2203 x, \u00ac \u2203 n, \u2200 y, f n y = f x y := by",
  "new": "(x : \u2115 \u2192 \u211d) (hx: \u2200 n, abs (x n) \u2265 (1:\u211d) / n) : \u2203 n, \u2200 y, abs (x n) \u2265 (1:\u211d) / n \u2227 (abs y \u2265 (1:\u211d) / n \u2192 abs y \u2265 (1:\u211d) / n) \u2227 (abs y < (1:\u211d) / n \u2192 n * y ^ 2 / 2 \u2265 (1:\u211d) / n * y) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (x : \u2115 \u2192 \u211d) (hx: \u2200 n, abs (x n) \u2265 (1:\u211d) / n) : \u2203 n, \u2200 y, abs (x n) \u2265 (1:\u211d) / n \u2227 (abs y \u2265 (1:\u211d) / n \u2192 abs y \u2265 (1:\u211d) / n) \u2227 (abs y < (1:\u211d) / n \u2192 n * y ^ 2 / 2 \u2265 (1:\u211d) / n * y)  := by\n  refine' \u27e80, fun y => \u27e8_, _, _\u27e9\u27e9 <;>\n    simp_all [abs_nonneg]\n  <;>\n    linarith [hx 0]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (x : \u2115 \u2192 \u211d) (hx: \u2200 n, abs (x n) \u2265 (1:\u211d) / n) : \u2203 n, \u2200 y, abs (x n) \u2265 (1:\u211d) / n \u2227 (abs y \u2265 (1:\u211d) / n \u2192 abs y \u2265 (1:\u211d) / n) \u2227 (abs y < (1:\u211d) / n \u2192 n * y ^ 2 / 2 \u2265 (1:\u211d) / n * y)  := by\n  refine' \u27e80, fun y => \u27e8_, _\u27e9\u27e9\n  \u00b7 simpa using hx 0\n  \u00b7 simp\n  <;> aesop"
  ]
 },
 {
  "old": "(x y : \u211d) (h : x < y) : \u2203 z : \u211d, x < z \u2227 z < y := by",
  "new": "(x y : \u2115) (h : x \u2260 0 \u2227 y \u2260 0) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x \u2260 0 \u2227 y \u2260 0) :\n    (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y) := by\n  by_cases h2 : Nat.Coprime x y\n  exact Or.inl h2\n  exact Or.inr h2\n  <;> simp_all\n  <;> decide",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x \u2260 0 \u2227 y \u2260 0) :\n    (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y) := by\n  by_cases h' : x.Coprime y\n  <;> simp_all\n  <;> tauto\n  <;> tauto",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x \u2260 0 \u2227 y \u2260 0) :\n    (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y) := by\n  by_cases h2 : Nat.Coprime x y <;> simp_all\n  <;> try norm_num <;> assumption\n  <;> try norm_num <;> assumption\n  <;> try norm_num <;> assumption\n  <;> try norm_num <;> assumption\n  <;> try norm_num <;> assumption\n  <;> try norm_num <;> assumption\n  <;> try norm_num <;> assumption\n  <;> try norm_num <;> assumption\n  <;> try norm_num <;> assumption\n  <;> try norm_num <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x \u2260 0 \u2227 y \u2260 0) :\n    (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y) := by\n  by_cases h' : x.Coprime y\n  exact Or.inl h'\n  exact Or.inr h'\n  <;> try simp_all\n  <;> omega"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 1) : (abc / (1 - a) / (1 - b^2) / (1 - c)) \u2264 1 / (6 * Real.sqrt 3) \u2227 (abc / (1 - a^2) / (1 - b^2) / (1 - c^2)) \u2264 27 / 512 \u2227 (ab^2*c / (1 - a) / (1 - b) / (1 - c)) \u2264 (71 - 17 * Real.sqrt 17) / 16 \u2227 (ab^3*c / (1 - a) / (1 - b) / (1 - c)) \u2264 3 * (11 * Real.sqrt 33 - 63) / 16 := by",
  "new": ": \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c = 1 \u2192 (a * b / (1 - a ^ 2) / (1 - b ^ 2) / (1 - c ^ 2)) \u2264 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_22_10_2019 : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c = 1 \u2192 (a * b / (1 - a ^ 2) / (1 - b ^ 2) / (1 - c ^ 2)) \u2264 3:= by\n  intro a b c h\n  rcases h with \u27e8h\u2081, h\u2082, h\u2083, h\u2084\u27e9\n  have : 0 < a * b := by positivity\n  have h\u2085 : 0 < 1 - a ^ 2 := by nlinarith\n  have h\u2086 : 0 < 1 - b ^ 2 := by nlinarith\n  have h\u2087 : 0 < 1 - c ^ 2 := by nlinarith\n  have h\u2088 : a * b / (1 - a ^ 2) / (1 - b ^ 2) / (1 - c ^ 2) \u2264 3 := by\n    rw [div_eq_mul_inv, div_eq_mul_inv, div_eq_mul_inv]\n    have : 0 < (1 - a ^ 2) * (1 - b ^ 2) := by positivity\n    have : 0 < (1 - a ^ 2) * (1 - b ^ 2) * (1 - c ^ 2) := by positivity\n    field_simp [h\u2085, h\u2086, h\u2087]\n    rw [div_le_iff]\n    nlinarith [mul_self_nonneg (a * b), mul_self_nonneg (a * b - a * c),\n      mul_self_nonneg (a * b - b * c)]\n    positivity\n  exact h\u2088",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_22_10_2019 : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c = 1 \u2192 (a * b / (1 - a ^ 2) / (1 - b ^ 2) / (1 - c ^ 2)) \u2264 3:= by\n  intro a b c h\n  have h\u2081 : a < 1 := by linarith\n  have h\u2082 : b < 1 := by linarith\n  have h\u2083 : c < 1 := by linarith\n  have h\u2084 : 0 < 1 - a ^ 2 := by nlinarith\n  have h\u2085 : 0 < 1 - b ^ 2 := by nlinarith\n  have h\u2086 : 0 < 1 - c ^ 2 := by nlinarith\n  have h\u2087 : 0 < (1 - a ^ 2) * (1 - b ^ 2) * (1 - c ^ 2) := by positivity\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087]\n  rw [div_le_iff, mul_comm]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b), mul_self_nonneg (a * c), mul_self_nonneg (b * c)]\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_22_10_2019 : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c = 1 \u2192 (a * b / (1 - a ^ 2) / (1 - b ^ 2) / (1 - c ^ 2)) \u2264 3:= by\n  rintro a b c \u27e8a_pos, b_pos, c_pos, a_b_c_sum\u27e9\n  have h\u2080 : 0 < 1 - a ^ 2 := by nlinarith\n  have h\u2081 : 0 < 1 - b ^ 2 := by nlinarith\n  have h\u2082 : 0 < 1 - c ^ 2 := by nlinarith\n  have h\u2083 : 0 < (1 - a ^ 2) * (1 - b ^ 2) * (1 - c ^ 2) := by positivity\n  field_simp\n  rw [div_le_iff (by positivity)]\n  nlinarith [mul_self_nonneg (a * b), mul_self_nonneg (a * b - c), mul_self_nonneg (c - a), mul_self_nonneg (c - b)]\n  <;> linarith\n  <;> norm_num"
  ]
 },
 {
  "old": "{a b c : \u211d} (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) (h : 0 \u2264 r \u2227 r \u2264 1) : a^2 * b * (a^r - b^r) + b^2 * c * (b^r - c^r) + c^2 * a * (c^r - a^r) \u2265 0 := by",
  "new": "(x y z : \u211d) (hx : 0 < x \u2227 0 < y \u2227 0 < z) (h : 0 < x + y + z) (hxy : x + y > z) (hxz : x + z > y) (hyz : y + z > x) (t : \u211d) (ht : 0 < t \u2227 t < 1) : x ^ t * (x * (x - y) * (x - z) + y * (y - z) * (y - x) + z * (z - x) * (z - y)) + y ^ t * (y * (y - z) * (y - x) + z * (z - x) * (z - y) + x * (x - y) * (x - z)) + z ^ t * (z * (z - x) * (z - y) + x * (x - y) * (x - z) + y * (y - x) * (y - z)) \u2265 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y z : \u211d) (hx : 0 < x \u2227 0 < y \u2227 0 < z) (h : 0 < x + y + z) (hxy : x + y > z) (hxz : x + z > y) (hyz : y + z > x) (t : \u211d) (ht : 0 < t \u2227 t < 1) :\n   x ^ t * (x * (x - y) * (x - z) + y * (y - z) * (y - x) + z * (z - x) * (z - y)) + y ^ t * (y * (y - z) * (y - x) + z * (z - x) * (z - y) + x * (x - y) * (x - z)) + z ^ t * (z * (z - x) * (z - y) + x * (x - y) * (x - z) + y * (y - x) * (y - z)) \u2265 0:= by\n  have h0 := hxy\n  have h1 := hxz\n  have h2 := hyz\n  have h3 : 0 \u2264 x ^ t := by\n    apply rpow_nonneg\n    linarith\n  have h4 : 0 \u2264 y ^ t := by\n    apply rpow_nonneg\n    linarith\n  have h5 : 0 \u2264 z ^ t := by\n    apply rpow_nonneg\n    linarith\n  have h6 : 0 \u2264 x * (x - y) * (x - z) + y * (y - z) * (y - x) + z * (z - x) * (z - y) := by\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  have h7 : 0 \u2264 y * (y - z) * (y - x) + z * (z - x) * (z - y) + x * (x - y) * (x - z) := by\n    nlinarith [sq_nonneg (y - z), sq_nonneg (y - x), sq_nonneg (z - x)]\n  have h8 : 0 \u2264 z * (z - x) * (z - y) + x * (x - y) * (x - z) + y * (y - x) * (y - z) := by\n    nlinarith [sq_nonneg (z - x), sq_nonneg (z - y), sq_nonneg (x - y)]\n  nlinarith\n  <;> simp [h0, h1, h2, h3, h4, h5, h6, h7, h8]\n  <;> linarith"
  ]
 },
 {
  "old": "(x y : \u211d) (hx : x \u2265 y) (hy : y \u2265 1) : (x / Real.sqrt (x + y) + y / Real.sqrt (y + 1) + 1 / Real.sqrt (x + 1)) \u2265 (y / Real.sqrt (x + y) + x / Real.sqrt (x + 1) + 1 / Real.sqrt (y + 1)) := by",
  "new": "(x y : \u211d) (hx : 1 \u2264 x) (hy : 1 \u2264 y) : x / \u221a(x + y) + y / \u221a(y + x) \u2265 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_xge1_yge1 (x y : \u211d) (hx : 1 \u2264 x) (hy : 1 \u2264 y) :\n      x / \u221a(x + y) + y / \u221a(y + x) \u2265 1:= by\n  have h\u2080 : 0 < x + y := by linarith\n  have h\u2081 : 1 \u2264 x + y := by linarith\n  have h\u2082 : 0 < \u221a(x + y) := sqrt_pos.mpr h\u2080\n  have h\u2083 : 0 < \u221a(y + x) := sqrt_pos.mpr (by linarith)\n  have h\u2084 : x / \u221a(x + y) \u2265 x / (x + y) := by\n    gcongr\n    all_goals\n      nlinarith [sq_sqrt (show 0 \u2264 x + y from by linarith)]\n  have h\u2085 : y / \u221a(y + x) \u2265 y / (y + x) := by\n    gcongr\n    all_goals\n      nlinarith [sq_sqrt (show 0 \u2264 y + x from by linarith)]\n  have h\u2086 : x / (x + y) + y / (y + x) \u2265 1 := by\n    rw [add_comm]\n    field_simp\n    rw [le_div_iff]\n    nlinarith\n    nlinarith\n  linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"
  ]
 },
 {
  "old": ": \u2200 x \u2208 Set.Icc 0 (Real.pi / 2), \u2200 \u03b1 \u2208 Set.Ioo (Real.pi / 6) (Real.pi / 3), Real.tan (Real.pi * Real.sin x / (4 * Real.sin \u03b1)) + Real.tan (Real.pi * Real.cos x / (4 * Real.cos \u03b1)) \u2265 2 := by",
  "new": "(x : \u211d) (hx : 0 \u2264 x \u2227 x \u2264 2) (hx' : x \u2260 0) : Real.sqrt (x ^ 2 + 4) - x \u2265 2 - Real.sqrt 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (x : \u211d) (hx : 0 \u2264 x \u2227 x \u2264 2) (hx' : x \u2260 0) :\n  Real.sqrt (x ^ 2 + 4) - x \u2265 2 - Real.sqrt 3:= by\n  have h\u2080 : 0 < Real.sqrt 3 := by\n    exact Real.sqrt_pos.mpr (by norm_num)\n  have h\u2081 : Real.sqrt (x ^ 2 + 4) \u2265 x + (2 - Real.sqrt 3) := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 by norm_num),\n      mul_self_nonneg (x - 1)]\n  nlinarith [h\u2081, h\u2080]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (x : \u211d) (hx : 0 \u2264 x \u2227 x \u2264 2) (hx' : x \u2260 0) :\n  Real.sqrt (x ^ 2 + 4) - x \u2265 2 - Real.sqrt 3:= by\n  rcases hx with \u27e8hx1, hx2\u27e9\n  have h : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg 3\n  have h\u2081 : Real.sqrt 3 ^ 2 = 3 := by norm_num\n  have h\u2082 : Real.sqrt (x ^ 2 + 4) \u2265 x + 2 - Real.sqrt 3 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (x - 2), h\u2081]\n  nlinarith [h\u2081]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (x : \u211d) (hx : 0 \u2264 x \u2227 x \u2264 2) (hx' : x \u2260 0) :\n  Real.sqrt (x ^ 2 + 4) - x \u2265 2 - Real.sqrt 3:= by\n  have h\u2080 : Real.sqrt (x ^ 2 + 4) \u2265 x := by\n    exact Real.le_sqrt_of_sq_le (by nlinarith)\n  have h\u2081 : Real.sqrt 3 \u2265 0 := Real.sqrt_nonneg 3\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 by norm_num),\n    sq_sqrt (show (0 : \u211d) \u2264 x ^ 2 + 4 by nlinarith),\n    mul_self_nonneg (x - 1)]\n  <;> linarith\n  <;> norm_num"
  ]
 },
 {
  "old": "(n : \u2115) (hn : 1 \u2264 n) : (1 / (n + 1) : \u211d) \u2264 Real.log (1 + 1 / n) \u2227 Real.log (1 + 1 / n) \u2264 1 / n := by",
  "new": "(n : \u2115) (hn : 1 < n) : Real.log (1 + 1 / \u2191n) < 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_one_add_inv_int_lt_one (n : \u2115) (hn : 1 < n) :\n     Real.log (1 + 1 / \u2191n) < 1:= by\n  apply (Real.log_le_sub_one_of_pos (by positivity)).trans_lt\n  norm_num\n  field_simp [Nat.cast_add_one_ne_zero]\n  rw [div_lt_iff] <;> norm_cast <;> nlinarith"
  ]
 },
 {
  "old": "(n s t u v : \u2124) : n^2 = (s^2 + t^2) * (u^2 + v^2) \u2194 n^2 = (su - tv)^2 + (sv + tu)^2 \u2227 n^2 = (su + tv)^2 + (sv - tu)^2 := by",
  "new": "{u v n : \u2115} (h : n ^ 2 = u * v) (h_prime : Nat.Prime n) : n \u2223 u \u2228 n \u2223 v \u2228 u = 0 \u2227 v = 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_mul_eq_pow_left {u v n : \u2115}\n    (h : n ^ 2 = u * v) (h_prime : Nat.Prime n) : n \u2223 u \u2228 n \u2223 v \u2228 u = 0 \u2227 v = 0:= by\n  have h' : n \u2223 n ^ 2 := by simp [Nat.pow_succ, Nat.mul_comm, Nat.dvd_mul_right]\n  rw [h] at h'\n  simp only [Nat.Prime.dvd_mul, h_prime] at h'\n  aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_mul_eq_pow_left {u v n : \u2115}\n    (h : n ^ 2 = u * v) (h_prime : Nat.Prime n) : n \u2223 u \u2228 n \u2223 v \u2228 u = 0 \u2227 v = 0:= by\n  have : n \u2223 u * v := by\n    rw [\u2190 h]\n    apply dvd_pow_self n\n    aesop\n  apply Or.imp _ _ (h_prime.dvd_mul.mp this)\n  \u00b7 aesop\n  \u00b7 aesop"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 3) : (a * b / (a + 1 / b + 1 / c ^ 2) + b * c / (b + 1 / c + 1 / a ^ 2) + c * a / (c + 1 / a + 1 / b ^ 2)) \u2265 (a * b * c) ^ 2 := by",
  "new": "(a b c : \u211d) (habc : a + b + c = 3) (h : a > 0 \u2227 b > 0 \u2227 c > 0) : (1 / (a + 1) + 1 / (b + 1) + 1 / (c + 1)) \u2265 9 / 16 * a * b * c:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2020_p17 (a b c : \u211d) (habc : a + b + c = 3) (h : a > 0 \u2227 b > 0 \u2227 c > 0)  : (1 / (a + 1) + 1 / (b + 1) + 1 / (c + 1)) \u2265 9 / 16 * a * b * c:= by\n  have h\u2080 : 0 < a + 1 := by linarith\n  have h\u2081 : 0 < b + 1 := by linarith\n  have h\u2082 : 0 < c + 1 := by linarith\n  have h\u2083 : 0 < a * b := by nlinarith\n  have h\u2084 : 0 < b * c := by nlinarith\n  have h\u2085 : 0 < c * a := by nlinarith\n  have h\u2086 : 0 < a * b * c := by nlinarith\n  have h\u2087 : 0 < a * b * c * (a + 1) := by nlinarith\n  have h\u2088 : 0 < a * b * c * (b + 1) := by nlinarith\n  have h\u2089 : 0 < a * b * c * (c + 1) := by nlinarith\n  have h\u2081\u2080 : 0 < a * b * c * (a + 1) * (b + 1) := by nlinarith\n  have h\u2081\u2081 : 0 < a * b * c * (a + 1) * (c + 1) := by nlinarith\n  have h\u2081\u2082 : 0 < a * b * c * (b + 1) * (c + 1) := by nlinarith\n  have h\u2081\u2083 : 0 < a * b * c * (a + 1) * (b + 1) * (c + 1) := by nlinarith\n  field_simp [h\u2080, h\u2081, h\u2082]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2020_p17 (a b c : \u211d) (habc : a + b + c = 3) (h : a > 0 \u2227 b > 0 \u2227 c > 0)  : (1 / (a + 1) + 1 / (b + 1) + 1 / (c + 1)) \u2265 9 / 16 * a * b * c:= by\n  rcases h with \u27e8ha, hb, hc\u27e9\n  have : 0 < a * b := by positivity\n  have : 0 < b * c := by positivity\n  have : 0 < a * c := by positivity\n  have : 0 < a * b * c := by positivity\n  have h\u2080 : 1 / (a + 1) \u2265 1 / 2 - a / 4 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a - 1)]\n  have h\u2081 : 1 / (b + 1) \u2265 1 / 2 - b / 4 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (b - 1)]\n  have h\u2082 : 1 / (c + 1) \u2265 1 / 2 - c / 4 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (c - 1)]\n  nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (a - c), mul_self_nonneg (b - c)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2020_p17 (a b c : \u211d) (habc : a + b + c = 3) (h : a > 0 \u2227 b > 0 \u2227 c > 0)  : (1 / (a + 1) + 1 / (b + 1) + 1 / (c + 1)) \u2265 9 / 16 * a * b * c:= by\n  rcases h with \u27e8h1, h2, h3\u27e9\n  have h4 : 0 < a * b := by positivity\n  have h5 : 0 < b * c := by positivity\n  have h6 : 0 < a * c := by positivity\n  have h7 : 0 < a * b * c := by positivity\n  have h8 : 0 < a * b * c * (a + b + b + c + a + c) := by positivity\n  have h9 : 0 < a * b * c * (a * b) := by positivity\n  have h10 : 0 < a * b * c * (c * a) := by positivity\n  have h11 : 0 < a * b * c * (b * c) := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith\n  <;> assumption\n  <;> linarith"
  ]
 },
 {
  "old": ": \u2200 k \u2265 2, (k - 1) ^ 2 \u2223 k ^ (k - 1) - 1 := by",
  "new": "(hA : A \u2265 2) (hB : B \u2265 2) (h : A \u2223 B - 1) : A.Prime \u2228 A \u2223 B - 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (hA : A \u2265 2) (hB : B \u2265 2) (h : A \u2223 B - 1) :\n        A.Prime \u2228 A \u2223 B - 1:= by\n  by_cases h\u2081 : A.Prime\n  exact Or.inl h\u2081\n  exact Or.inr h\n  <;> norm_num\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (hA : A \u2265 2) (hB : B \u2265 2) (h : A \u2223 B - 1) :\n        A.Prime \u2228 A \u2223 B - 1:= by\n  by_cases h\u2080 : A.Prime <;> simp_all\n  <;> try norm_num <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (hA : A \u2265 2) (hB : B \u2265 2) (h : A \u2223 B - 1) :\n        A.Prime \u2228 A \u2223 B - 1:= by\n  by_cases h\u2081 : A.Prime\n  <;> simp_all",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (hA : A \u2265 2) (hB : B \u2265 2) (h : A \u2223 B - 1) :\n        A.Prime \u2228 A \u2223 B - 1:= by\n  by_cases hAB : A.Prime\n  case pos => exact Or.inl hAB\n  case neg => exact Or.inr h"
  ]
 },
 {
  "old": "(x y : \u211d) (h\u2081 : x + y = 4) (h\u2082 : x*y = 2) : x^6 + y^6 = 1584 := by",
  "new": "(x y : \u2115) (h : x * y = 1) : x = 1 \u2227 y = 1 \u2228 x = 1 \u2227 y = 1 \u2228 x = 0 \u2227 y = 1 \u2228 x = 1 \u2227 y = 0 \u2228 x = 0 \u2227 y = 0 \u2228 x = 1 \u2227 y = 1 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (x y : \u2115) (h : x * y = 1) :\n    x = 1 \u2227 y = 1 \u2228 x = 1 \u2227 y = 1 \u2228 x = 0 \u2227 y = 1 \u2228 x = 1 \u2227 y = 0 \u2228 x = 0 \u2227 y = 0 \u2228 x = 1 \u2227 y = 1 := by\n  have : x * y = 1 := h\n  have h\u2080 : x = 0 \u2228 x = 1 := by\n    cases x <;> simp_all\n  have h\u2081 : y = 0 \u2228 y = 1 := by\n    cases y <;> simp_all\n  rcases h\u2080 with (rfl | rfl) <;> rcases h\u2081 with (rfl | rfl) <;> simp_all\n  <;> norm_num\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (x y : \u2115) (h : x * y = 1) :\n    x = 1 \u2227 y = 1 \u2228 x = 1 \u2227 y = 1 \u2228 x = 0 \u2227 y = 1 \u2228 x = 1 \u2227 y = 0 \u2228 x = 0 \u2227 y = 0 \u2228 x = 1 \u2227 y = 1 := by\n  rcases x with (_ | _ | _) <;> rcases y with (_ | _ | _) <;> simp_all [Nat.mul_eq_zero]\n  <;> norm_num\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop\n  <;> omega\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (x y : \u2115) (h : x * y = 1) :\n    x = 1 \u2227 y = 1 \u2228 x = 1 \u2227 y = 1 \u2228 x = 0 \u2227 y = 1 \u2228 x = 1 \u2227 y = 0 \u2228 x = 0 \u2227 y = 0 \u2228 x = 1 \u2227 y = 1 := by\n  cases x <;> cases y <;> simp_all (config := {decide := true})\n  <;> decide\n  <;> decide\n  <;> decide\n  <;> decide\n  <;> decide\n  <;> decide",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (x y : \u2115) (h : x * y = 1) :\n    x = 1 \u2227 y = 1 \u2228 x = 1 \u2227 y = 1 \u2228 x = 0 \u2227 y = 1 \u2228 x = 1 \u2227 y = 0 \u2228 x = 0 \u2227 y = 0 \u2228 x = 1 \u2227 y = 1 := by\n  cases' Nat.eq_zero_or_pos x with hx hx <;>\n    cases' Nat.eq_zero_or_pos y with hy hy <;>\n    simp_all [mul_eq_one_iff]"
  ]
 },
 {
  "old": ": \u2200 m : \u2115, m > 0 \u2192 \u2203 n : \u2115, n > m \u2227 n \u2223 2 ^ n + 1 := by",
  "new": "(p : \u2115) (hp : p.Prime) (a : \u2115) : a.Coprime p \u2228 \u2203 b : \u2115, b \u2223 a \u2227 b \u2223 p:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (hp : p.Prime) (a : \u2115) : a.Coprime p \u2228 \u2203 b : \u2115, b \u2223 a \u2227 b \u2223 p:= by\n  by_cases h : a.Coprime p\n  exact Or.inl h\n  exact Or.inr \u27e8Nat.gcd a p, Nat.gcd_dvd_left a p, Nat.gcd_dvd_right a p\u27e9\n  <;> simp [Nat.Prime] at hp\n  <;> simp [Nat.gcd_eq_left, Nat.gcd_eq_right, h, hp]\n  <;> exact \u27e8Nat.gcd a p, Nat.gcd_dvd_left a p, Nat.gcd_dvd_right a p\u27e9\n  <;> simp [Nat.Prime] at hp\n  <;> simp [Nat.gcd_eq_left, Nat.gcd_eq_right, h, hp]\n  <;> exact \u27e8Nat.gcd a p, Nat.gcd_dvd_left a p, Nat.gcd_dvd_right a p\u27e9\n  <;> simp [Nat.Prime] at hp\n  <;> simp [Nat.gcd_eq_left, Nat.gcd_eq_right, h, hp]\n  <;> exact \u27e8Nat.gcd a p, Nat.gcd_dvd_left a p, Nat.gcd_dvd_right a p\u27e9\n  <;> simp [Nat.Prime] at hp\n  <;> simp [Nat.gcd_eq_left, Nat.gcd_eq_right, h, hp]\n  <;> exact \u27e8Nat.gcd a p, Nat.gcd_dvd_left a p, Nat.gcd_dvd_right a p\u27e9"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (habc : a * b * c = 1) : (a - 1 + 1 / b) * (b - 1 + 1 / c) * (c - 1 + 1 / a) \u2264 1 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z = 1) : 1 / (x + y + z) * (x * y + y * z + z * x) * (x * z + y * z + x * y) / (x * y + y * z + z * x) \u2264 x + y + z:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z = 1) : 1 / (x + y + z) * (x * y + y * z + z * x) * (x * z + y * z + x * y) / (x * y + y * z + z * x) \u2264 x + y + z:= by\n  have : 0 < x * y := by positivity\n  have : 0 < y * z := by positivity\n  have : 0 < z * x := by positivity\n  have : 0 < x * y * z := by positivity\n  field_simp [h\u2081, h\u2082]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z = 1) : 1 / (x + y + z) * (x * y + y * z + z * x) * (x * z + y * z + x * y) / (x * y + y * z + z * x) \u2264 x + y + z:= by\n  have : x + y + z = 1 := by linarith\n  have : 1 / x + 1 / y + 1 / z = 1 := by linarith\n  field_simp [this] at h\u2082 \u22a2\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_self_nonneg (x + y + z)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z = 1) : 1 / (x + y + z) * (x * y + y * z + z * x) * (x * z + y * z + x * y) / (x * y + y * z + z * x) \u2264 x + y + z:= by\n  have : 0 < x * y := mul_pos hx hy\n  have : 0 < y * z := mul_pos hy hz\n  have : 0 < z * x := mul_pos hz hx\n  have : 1 / x + 1 / y + 1 / z = 1 := h\u2082\n  have : x + y + z = 1 := h\u2081\n  field_simp [h\u2081] at h\u2082 \u22a2\n  ring_nf at h\u2082 \u22a2\n  nlinarith"
  ]
 },
 {
  "old": "{a b c : \u211d} (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (b - a) ^ 2 * (2 * a - b) / (6 * a * b * (2 * a + b) * (a + b)) + (c - b) ^ 2 * (2 * b - c) / (6 * b * c * (2 * b + c) * (b + c)) + (a - c) ^ 2 * (2 * c - a) / (6 * c * a * (2 * c + a) * (c + a)) \u2265 0 := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a + b) * (b + c) * (c + a) * (a + b + c) ^ 3 \u2265 4 * (a * b + b * c + c * a) ^ 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a + b) * (b + c) * (c + a) * (a + b + c) ^ 3 \u2265 4 * (a * b + b * c + c * a) ^ 3:= by\n  simp_all only [add_assoc, add_right_comm, mul_assoc, mul_comm, mul_left_comm]\n  apply le_of_sub_nonneg\n  ring_nf\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a + b) * (b + c) * (c + a) * (a + b + c) ^ 3 \u2265 4 * (a * b + b * c + c * a) ^ 3:= by\n  simp only [mul_assoc, mul_comm, mul_left_comm]\n  apply le_of_sub_nonneg\n  ring_nf\n  positivity\n  <;> assumption"
  ]
 },
 {
  "old": "(s : \u211d) (ha : 0 < a) (hb : 0 < b) (hab : a + b = s) : (a + 1 / a) * (b + 1 / b) \u2265 2 * (s + 1 / s) := by",
  "new": "(x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x * y = 1) : (x + 1 / x) * (y + 1 / y) \u2265 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x * y = 1) : (x + 1 / x) * (y + 1 / y) \u2265 4:= by\n  have h\u2080 : x \u2260 0 := by positivity\n  have h\u2081 : y \u2260 0 := by positivity\n  have h\u2082 : (x + 1 / x) * (y + 1 / y) \u2265 4 := by\n    field_simp [h\u2080, h\u2081]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - 1), sq_nonneg (y - 1)]\n  exact h\u2082",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x * y = 1) : (x + 1 / x) * (y + 1 / y) \u2265 4:= by\n  have h : 0 < x * y := mul_pos hx hy\n  field_simp [h.ne', mul_comm]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x * y = 1) : (x + 1 / x) * (y + 1 / y) \u2265 4:= by\n  have h : x \u2260 0 := by linarith\n  have h' : y \u2260 0 := by linarith\n  field_simp [h, h']\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x + y), sq_nonneg (x - 1), sq_nonneg (y - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x * y = 1) : (x + 1 / x) * (y + 1 / y) \u2265 4:= by\n  have h : x \u2260 0 := by linarith\n  have h\u2081 : y \u2260 0 := by linarith\n  field_simp [h, h\u2081]\n  rw [le_div_iff (by positivity), mul_comm]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x + y), sq_nonneg (x - 1), sq_nonneg (x + 1),\n    sq_nonneg (y - 1), sq_nonneg (y + 1)]"
  ]
 },
 {
  "old": "(n : \u2115) : \u2191(2^(n+1)) \u2223 (\u230a(1 + Real.sqrt 3)^(2 * n + 1)\u230b) \u2227 \u00ac \u2191(2^(n+2)) \u2223 (\u230a(1 + Real.sqrt 3)^(2 * n + 1)\u230b) := by",
  "new": "(n : \u2115) : (Nat.Coprime (Nat.factorial (n - 1)) (2 * n - 1)) \u2228 \u00ac Nat.Coprime (Nat.factorial (n - 1)) (2 * n - 1) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (n : \u2115) :  (Nat.Coprime (Nat.factorial (n - 1)) (2 * n - 1)) \u2228 \n  \u00ac Nat.Coprime (Nat.factorial (n - 1)) (2 * n - 1) := by\n  apply em",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (n : \u2115) :  (Nat.Coprime (Nat.factorial (n - 1)) (2 * n - 1)) \u2228 \n  \u00ac Nat.Coprime (Nat.factorial (n - 1)) (2 * n - 1) := by\n  by_cases h : Nat.Coprime (Nat.factorial (n - 1)) (2 * n - 1) <;> simp [h]\n  <;> norm_num\n  <;> omega\n  <;> simp_all [Nat.factorial]\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (n : \u2115) :  (Nat.Coprime (Nat.factorial (n - 1)) (2 * n - 1)) \u2228 \n  \u00ac Nat.Coprime (Nat.factorial (n - 1)) (2 * n - 1) := by\n  by_cases h : Nat.Coprime (Nat.factorial (n - 1)) (2 * n - 1) <;> simp [h]\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop"
  ]
 },
 {
  "old": ": \u2200 a b c : \u211d, (1 / (1 + Real.sqrt (a * b)) ^ 2 + 1 / (1 + Real.sqrt (b * c)) ^ 2 + 1 / (1 + Real.sqrt (c * a)) ^ 2) \u2265 (3 + a + b + c) / ((1 + a) * (1 + b) * (1 + c)) := by",
  "new": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : (1 / (1 + Real.sqrt (a * b)) ^ 2 + 1 / (1 + Real.sqrt (b * c)) ^ 2 + 1 / (1 + Real.sqrt (c * a)) ^ 2) \u2265 (3 + a + b + c) / ((1 + a) * (1 + b) * (1 + c)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) :\n     (1 / (1 + Real.sqrt (a * b)) ^ 2 + 1 / (1 + Real.sqrt (b * c)) ^ 2 + 1 / (1 + Real.sqrt (c * a)) ^ 2) \u2265\n        (3 + a + b + c) / ((1 + a) * (1 + b) * (1 + c))  := by\n  have h1 : 0 \u2264 a * b := mul_nonneg ha hb\n  have h2 : 0 \u2264 b * c := mul_nonneg hb hc\n  have h3 : 0 \u2264 c * a := mul_nonneg hc ha\n  have h4 : Real.sqrt (a * b) \u2265 0 := Real.sqrt_nonneg (a * b)\n  have h5 : Real.sqrt (b * c) \u2265 0 := Real.sqrt_nonneg (b * c)\n  have h6 : Real.sqrt (c * a) \u2265 0 := Real.sqrt_nonneg (c * a)\n  have h7 : (1 + Real.sqrt (a * b)) ^ 2 \u2264 (1 + a) * (1 + b) := by\n    nlinarith [sq_sqrt h1, sq_nonneg (a - b)]\n  have h8 : (1 + Real.sqrt (b * c)) ^ 2 \u2264 (1 + b) * (1 + c) := by\n    nlinarith [sq_sqrt h2, sq_nonneg (b - c)]\n  have h9 : (1 + Real.sqrt (c * a)) ^ 2 \u2264 (1 + c) * (1 + a) := by\n    nlinarith [sq_sqrt h3, sq_nonneg (c - a)]\n  have h10 : (1 / (1 + Real.sqrt (a * b)) ^ 2 + 1 / (1 + Real.sqrt (b * c)) ^ 2 + 1 / (1 + Real.sqrt (c * a)) ^ 2) \u2265\n         (3 + a + b + c) / ((1 + a) * (1 + b) * (1 + c)) := by\n    calc\n      (1 / (1 + Real.sqrt (a * b)) ^ 2 + 1 / (1 + Real.sqrt (b * c)) ^ 2 + 1 / (1 + Real.sqrt (c * a)) ^ 2) \u2265\n          1 / ((1 + a) * (1 + b)) + 1 / ((1 + b) * (1 + c)) + 1 / ((1 + c) * (1 + a)) := by\n        gcongr <;> nlinarith\n      _ \u2265 (3 + a + b + c) / ((1 + a) * (1 + b) * (1 + c)) := by\n        field_simp [add_comm]\n        rw [div_le_div_iff]\n        nlinarith [mul_nonneg ha hb, mul_nonneg hb hc, mul_nonneg hc ha]\n        positivity\n        positivity\n  exact h10"
  ]
 },
 {
  "old": "(a b : \u211d) (ha : 0 < a) (hb : 0 < b) (hab : a \u2260 b) : Real.log ((exp b - exp a) / (b - a)) \u2265 (b - a) / (Real.log b - Real.log a) := by",
  "new": "(x : \u211d) (hx : 1 < x) : Real.log (x - 1) < x - 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_div_self_lt_log (x : \u211d) (hx : 1 < x) :\n    Real.log (x - 1) < x - 1:= by\n  have : 0 < x - 1 := sub_pos.mpr hx\n  linarith [Real.log_le_sub_one_of_pos (by linarith : 0 < x - 1)]\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) (h : (a^3 + 2 * a) / (a^2 + 1) + (b^3 + 2 * b) / (b^2 + 1) + (c^3 + 2 * c) / (c^2 + 1) = 9 / 2) : 1 / a + 1 / b + 1 / c \u2265 3 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z \u2265 9) : (x + y + z) * (x * y + y * z + z * x) * (x ^ 2 + y ^ 2 + z ^ 2) \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z \u2265 9) :\n     (x + y + z) * (x * y + y * z + z * x) * (x ^ 2 + y ^ 2 + z ^ 2) \u2264 1:= by\n  have h\u2083 : x ^ 2 + y ^ 2 + z ^ 2 = (x + y + z) ^ 2 - 2 * (x * y + y * z + z * x) := by ring\n  simp_all only [h\u2081, h\u2082, mul_assoc]\n  ring_nf\n  nlinarith\n  <;> assumption\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z \u2265 9) :\n     (x + y + z) * (x * y + y * z + z * x) * (x ^ 2 + y ^ 2 + z ^ 2) \u2264 1:= by\n  rw [h\u2081]\n  have h\u2083 : x * y + y * z + z * x \u2264 1 := by\n    have h\u2083\u2081 : x * y + y * z + z * x \u2264 (x + y + z) ^ 2 / 3 := by\n      nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n    rw [h\u2081] at h\u2083\u2081\n    linarith\n  have h\u2084 : x ^ 2 + y ^ 2 + z ^ 2 \u2264 1 := by\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a / (b + c) + a / (a + b + c) >= 1 \u2192 b * c / (a + b) / (a + c) <= 1 / 5) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : x ^ 2 + y ^ 2 + z ^ 2 + 2 * x * y * z / (x * y + y * z + z * x) \u2264 3 * (x ^ 2 + y ^ 2 + z ^ 2) \u2194 x ^ 2 + y ^ 2 + z ^ 2 \u2264 3 * (x ^ 2 + y ^ 2 + z ^ 2) - 2 * x * y * z / (x * y + y * z + z * x):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   x ^ 2 + y ^ 2 + z ^ 2 + 2 * x * y * z / (x * y + y * z + z * x) \u2264 3 * (x ^ 2 + y ^ 2 + z ^ 2) \u2194 x ^ 2 + y ^ 2 + z ^ 2 \u2264 3 * (x ^ 2 + y ^ 2 + z ^ 2) - 2 * x * y * z / (x * y + y * z + z * x):= by\n  constructor\n  intro h\n  have h\u2080 : 0 < x * y := by positivity\n  have h\u2081 : 0 < y * z := by positivity\n  have h\u2082 : 0 < z * x := by positivity\n  have h\u2083 : 0 < x * y * z := by positivity\n  have h\u2084 : 0 < x * y + y * z + z * x := by positivity\n  have h\u2085 : 0 < 2 * x * y * z / (x * y + y * z + z * x) := by positivity\n  linarith\n  intro h\n  have h\u2080 : 0 < x * y := by positivity\n  have h\u2081 : 0 < y * z := by positivity\n  have h\u2082 : 0 < z * x := by positivity\n  have h\u2083 : 0 < x * y * z := by positivity\n  have h\u2084 : 0 < x * y + y * z + z * x := by positivity\n  have h\u2085 : 0 < 2 * x * y * z / (x * y + y * z + z * x) := by positivity\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   x ^ 2 + y ^ 2 + z ^ 2 + 2 * x * y * z / (x * y + y * z + z * x) \u2264 3 * (x ^ 2 + y ^ 2 + z ^ 2) \u2194 x ^ 2 + y ^ 2 + z ^ 2 \u2264 3 * (x ^ 2 + y ^ 2 + z ^ 2) - 2 * x * y * z / (x * y + y * z + z * x):= by\n  refine' \u27e8fun h => _, fun h => _\u27e9\n  ring_nf at h \u22a2\n  nlinarith\n  ring_nf at h \u22a2\n  nlinarith"
  ]
 },
 {
  "old": "(a b d m : \u2124) (hm : m \u2260 0) (hd : d \u2260 0) : a * d \u2261 b * d [ZMOD m] \u2192 a \u2261 b [ZMOD m / gcd m d] := by",
  "new": "(p : \u2115) {m n : \u2115} (h : p.Prime) : p \u2223 m \u2228 p \u2223 n \u2228 Coprime m n \u2228 p.Coprime m \u2227 p.Coprime n := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {m n : \u2115} (h : p.Prime) :\n    p \u2223 m \u2228 p \u2223 n \u2228 Coprime m n \u2228 p.Coprime m \u2227 p.Coprime n := by\n  have := h.eq_two_or_odd\n  by_cases hm : p \u2223 m <;> by_cases hn : p \u2223 n <;> simp_all [coprime_primes, h.coprime_iff_not_dvd]\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {m n : \u2115} (h : p.Prime) :\n    p \u2223 m \u2228 p \u2223 n \u2228 Coprime m n \u2228 p.Coprime m \u2227 p.Coprime n := by\n  by_cases h1 : p \u2223 m\n  <;> by_cases h2 : p \u2223 n\n  <;> simp [h1, h2, coprime_or_dvd_of_prime]\n  <;> try simp_all [h.coprime_iff_not_dvd]\n  <;> omega\n  <;> try simp_all [h.coprime_iff_not_dvd]\n  <;> omega\n  <;> try simp_all [h.coprime_iff_not_dvd]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {m n : \u2115} (h : p.Prime) :\n    p \u2223 m \u2228 p \u2223 n \u2228 Coprime m n \u2228 p.Coprime m \u2227 p.Coprime n := by\n  by_cases h0 : p \u2223 m <;> by_cases h1 : p \u2223 n <;> simp [h0, h1, or_comm] <;>\n  simp [h.coprime_iff_not_dvd, h0, h1]\n  <;> omega\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {m n : \u2115} (h : p.Prime) :\n    p \u2223 m \u2228 p \u2223 n \u2228 Coprime m n \u2228 p.Coprime m \u2227 p.Coprime n := by\n  by_cases h1 : p \u2223 m <;> by_cases h2 : p \u2223 n <;> simp [h1, h2, h.coprime_iff_not_dvd,\n      h.dvd_mul, h.dvd_mul, Nat.Coprime, Nat.mul_comm, Nat.mul_assoc, Nat.mul_left_comm]\n  all_goals omega\n  <;> try assumption\n  <;> simp_all\n  <;> try assumption\n  <;> simp_all\n  <;> try assumption\n  <;> simp_all\n  <;> try assumption\n  <;> simp_all\n  <;> try assumption\n  <;> simp_all\n  <;> try assumption\n  <;> simp_all\n  <;> try assumption\n  <;> simp_all\n  <;> try assumption\n  <;> simp_all"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : (1 / (4 * a ^ 2 - 2 * a + 1) + 1 / (4 * b ^ 2 - 2 * b + 1) + 1 / (4 * c ^ 2 - 2 * c + 1)) \u2265 1 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) (h : x * y + y * z + z * x = 1 / 3) : 1 / (3 * x ^ 2 + x + 1) + 1 / (3 * y ^ 2 + y + 1) + 1 / (3 * z ^ 2 + z + 1) \u2265 1 / 6 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) (h : x * y + y * z + z * x = 1 / 3) : 1 / (3 * x ^ 2 + x + 1) + 1 / (3 * y ^ 2 + y + 1) + 1 / (3 * z ^ 2 + z + 1) \u2265 1 / 6 := by\n  have h\u2081 : x + y + z = 1 := hab\n  have h\u2082 : x * y + y * z + z * x = 1 / 3 := h\n  have h\u2083 : x ^ 2 + y ^ 2 + z ^ 2 = (x + y + z) ^ 2 - 2 * (x * y + y * z + z * x) := by ring\n  rw [h\u2081, h\u2082] at h\u2083\n  norm_num at h\u2083\n  have h\u2084 : 1 / (3 * x ^ 2 + x + 1) \u2265 1 / 6 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith\n  have h\u2085 : 1 / (3 * y ^ 2 + y + 1) \u2265 1 / 6 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith\n  have h\u2086 : 1 / (3 * z ^ 2 + z + 1) \u2265 1 / 6 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith\n  linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) (h : x * y + y * z + z * x = 1 / 3) : 1 / (3 * x ^ 2 + x + 1) + 1 / (3 * y ^ 2 + y + 1) + 1 / (3 * z ^ 2 + z + 1) \u2265 1 / 6 := by\n  have h\u2081 : 0 < x * y * z := by positivity\n  have h\u2082 : 1 / (3 * x ^ 2 + x + 1) \u2265 1 / 6 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x - 1 / 3), hx]\n  have h\u2083 : 1 / (3 * y ^ 2 + y + 1) \u2265 1 / 6 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (y - 1 / 3), hy]\n  have h\u2084 : 1 / (3 * z ^ 2 + z + 1) \u2265 1 / 6 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (z - 1 / 3), hz]\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) (h : x * y + y * z + z * x = 1 / 3) : 1 / (3 * x ^ 2 + x + 1) + 1 / (3 * y ^ 2 + y + 1) + 1 / (3 * z ^ 2 + z + 1) \u2265 1 / 6 := by\n  have h\u2080 : x + y + z = 1 := hab\n  have h\u2081 : x * y + y * z + z * x = 1 / 3 := h\n  have h\u2082 : 0 < x := hx\n  have h\u2083 : 0 < y := hy\n  have h\u2084 : 0 < z := hz\n  have h\u2085 : 1 / (3 * x ^ 2 + x + 1) \u2265 1 / 6 := by\n    rw [ge_iff_le]\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (x - 1 / 3)]\n  have h\u2086 : 1 / (3 * y ^ 2 + y + 1) \u2265 1 / 6 := by\n    rw [ge_iff_le]\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (y - 1 / 3)]\n  have h\u2087 : 1 / (3 * z ^ 2 + z + 1) \u2265 1 / 6 := by\n    rw [ge_iff_le]\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (z - 1 / 3)]\n  linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) (h : x * y + y * z + z * x = 1 / 3) : 1 / (3 * x ^ 2 + x + 1) + 1 / (3 * y ^ 2 + y + 1) + 1 / (3 * z ^ 2 + z + 1) \u2265 1 / 6 := by\n  have : (x + y + z) ^ 2 = 1 := by\n    rw [hab]\n    norm_num\n  have : 0 < x * y * z := by positivity\n  have : 0 < x * y + y * z + z * x := by positivity\n  have : 0 < x * y * (x + y) + y * z * (y + z) + z * x * (z + x) := by positivity\n  have : 0 < x * y * z * (x + y + z) := by positivity\n  field_simp\n  rw [div_le_div_iff]\n  nlinarith\n  positivity\n  positivity"
  ]
 },
 {
  "old": "(p r : \u2115) (h\u2081 : r \u2260 p) (h\u2082 : Nat.Coprime p r) : \u2203 a b : \u2115, b * p + a * r = 1 := by",
  "new": "(p : \u2115) {r : \u2115} (hr : r \u2260 1) (h : Nat.Prime p) : Nat.Coprime p r \u2228 p \u2223 r := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {r : \u2115} (hr : r \u2260 1) (h : Nat.Prime p) : Nat.Coprime p r \u2228 p \u2223 r := by\n  apply or_iff_not_imp_right.2\n  intro hnr\n  exact h.coprime_iff_not_dvd.2 hnr",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {r : \u2115} (hr : r \u2260 1) (h : Nat.Prime p) : Nat.Coprime p r \u2228 p \u2223 r := by\n  refine' or_iff_not_imp_right.mpr fun hn => _\n  have := h.coprime_iff_not_dvd.mpr hn\n  simpa using this",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {r : \u2115} (hr : r \u2260 1) (h : Nat.Prime p) : Nat.Coprime p r \u2228 p \u2223 r := by\n  refine' or_iff_not_imp_right.mpr fun hnr => _\n  exact h.coprime_iff_not_dvd.mpr hnr",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {r : \u2115} (hr : r \u2260 1) (h : Nat.Prime p) : Nat.Coprime p r \u2228 p \u2223 r := by\n  apply or_iff_not_imp_right.mpr\n  intro h_not_dvd\n  exact h.coprime_iff_not_dvd.mpr h_not_dvd"
  ]
 },
 {
  "old": "(x y z : \u211d) (h\u2081 : x + y + z = 3) (h\u2082 : x^2*y + y^2*z + z^2*x = 4) (h\u2083 : x^2 + y^2 + z^2 = 5) : x = 1 \u2227 y = 1 \u2227 z = 1 := by",
  "new": "(i : \u2115) (hi : \u2200 k, 0 < k \u2192 1 < i ^ k) (h : 2 * i = 1) : i.Coprime 1 \u2228 i = 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : \u2200 k, 0 < k \u2192 1 < i ^ k)\n     (h : 2 * i = 1) : i.Coprime 1 \u2228 i = 1:= by\n  rw [Nat.mul_comm] at h\n  rw [eq_comm] at h\n  apply Or.inr\n  nlinarith [hi 2 (by norm_num)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : \u2200 k, 0 < k \u2192 1 < i ^ k)\n     (h : 2 * i = 1) : i.Coprime 1 \u2228 i = 1:= by\n  simp [Nat.Coprime, Nat.gcd_eq_right]\n  <;> nlinarith [hi 0, hi 1]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : \u2200 k, 0 < k \u2192 1 < i ^ k)\n     (h : 2 * i = 1) : i.Coprime 1 \u2228 i = 1:= by\n  rw [Coprime]\n  simp_all [Nat.mul_eq_zero]"
  ]
 },
 {
  "old": "(k x y z m : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (hm : -2 \u2264 m) : (x^2 + m * x * y + y^2) * (y^2 + m * y * z + z^2) * (z^2 + m * z * x + x^2) * (k + x^2) * (k + y^2) * (k + z^2) \u2265 x^2 * y^2 * z^2 * (k * (2 + m) + x^2 + m * x * y + y^2) * (k * (2 + m) + y^2 + m * y * z + z^2) * (k * (2 + m) + z^2 + m * z * x + x^2) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : x ^ 2 + y ^ 2 + z ^ 2 \u2265 1 / 2 * (x * y + y * z + z * x) \u2192 x ^ 3 + y ^ 3 + z ^ 3 + 3 / 2 * (x * y * z) \u2265 1 / 2 * (x ^ 2 + y ^ 2 + z ^ 2) * (x + y + z):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   x ^ 2 + y ^ 2 + z ^ 2 \u2265 1 / 2 * (x * y + y * z + z * x) \u2192 x ^ 3 + y ^ 3 + z ^ 3 + 3 / 2 * (x * y * z) \u2265 1 / 2 * (x ^ 2 + y ^ 2 + z ^ 2) * (x + y + z):= by\n  intro h\n  have h\u2081 : 0 < x * y := mul_pos hx hy\n  have h\u2082 : 0 < y * z := mul_pos hy hz\n  have h\u2083 : 0 < z * x := mul_pos hz hx\n  have h\u2084 : 0 < x * y * z := mul_pos h\u2081 hz\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x - y - z), mul_self_nonneg (y - z - x), mul_self_nonneg (z - x - y)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = a * b * c) : (a * b + 1) / (a + b) + (b * c + 1) / (b + c) + (c * a + 1) / (c + a) \u2265 2 * Real.sqrt (a * b * c) * (Real.sqrt a + Real.sqrt b + Real.sqrt c) := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = a * b * c) : (a * b + 1) / (a + b) + (b * c + 1) / (b + c) + (c * a + 1) / (c + a) \u2265 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = a * b * c) : \n  (a * b + 1) / (a + b) + (b * c + 1) / (b + c) + (c * a + 1) / (c + a) \u2265 2:= by\n  have h\u2080 : 0 < a * b := by positivity\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * a := by positivity\n  have h\u2083 : 0 < (a + b) * (b + c) * (c + a) := by positivity\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b)]\n  <;> linarith\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^2 / b + b^2 / c + c^2 / a) \u2265 (3 * (a^3 + b^3 + c^3) / (a * b * c))^(1 / 4) * (a^2 + b^2 + c^2)^(1 / 2) := by",
  "new": ": \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 a * b * c = 1 \u2192 a^2 / b + b^2 / c + c^2 / a \u2265 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_2023 : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 a * b * c = 1 \u2192 a^2 / b + b^2 / c + c^2 / a \u2265 3:= by\n  rintro a b c \u27e8a_pos, b_pos, c_pos\u27e9 h1\n  have h2 : 0 < b * c := by positivity\n  have h3 : 0 < c * a := by positivity\n  have h4 : 0 < a * b := by positivity\n  field_simp [h2, h3, h4]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a - 1), mul_self_nonneg (b - 1), mul_self_nonneg (c - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_2023 : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 a * b * c = 1 \u2192 a^2 / b + b^2 / c + c^2 / a \u2265 3:= by\n  rintro a b c \u27e8ha, hb, hc\u27e9 h\n  have hab : 0 < a * b := by positivity\n  have hbc : 0 < b * c := by positivity\n  have hac : 0 < a * c := by positivity\n  field_simp [hab, hbc, hac]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a - 1), mul_self_nonneg (b - 1), mul_self_nonneg (c - 1)]"
  ]
 },
 {
  "old": "(a b c d : \u211d) : (a + b) * (b + c) * (c + d) * (d + a) \u2265 (a + b + c + d) * (a * b * c + b * c * d + c * d * a + d * a * b) := by",
  "new": ": (x^2+10) * (y^2+10) \u2265 20 * x * y + 50:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 :  (x^2+10) * (y^2+10) \u2265 20 * x * y + 50:= by\n  cases' le_total x y with h h <;> nlinarith [sq_nonneg (x - y), sq_nonneg (x + y), sq_nonneg (x * y - 5)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 :  (x^2+10) * (y^2+10) \u2265 20 * x * y + 50:= by\n  cases' le_total x y with h h <;>\n  cases' le_total (x * y) 5 with h' h' <;>\n  nlinarith [mul_self_nonneg (x - y), mul_self_nonneg (x + y),\n    mul_self_nonneg (x * y - 5), mul_self_nonneg (x * y + 5)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 :  (x^2+10) * (y^2+10) \u2265 20 * x * y + 50:= by\n  cases' le_total x y with h h <;>\n  cases' le_total 0 (x - y) with h\u2080 h\u2080 <;>\n  cases' le_total 0 (x * y) with h\u2081 h\u2081 <;>\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x + y), sq_nonneg (x * y - 5)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 :  (x^2+10) * (y^2+10) \u2265 20 * x * y + 50:= by\n  cases' le_total x y with h h <;>\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x + y), sq_nonneg (x - y + 10), sq_nonneg (x - y - 10), sq_nonneg (x + y + 10), sq_nonneg (x + y - 10)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a * b * c \u2260 0) (habc : a + b + c \u2260 0) (h : a^2 + b^2 + c^2 + a * b * c = 4) : (1 / (2 * a + b * c) + 1 / (2 * b + c * a) + 1 / (2 * c + a * b) \u2264 3 / (a * b + b * c + c * a)) := by",
  "new": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c \u2260 0) (h : a + b + c = 1) : (1 + Real.sqrt (1 + 1)) * (1 - a * b - b * c - c * a) \u2264 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c \u2260 0) (h : a + b + c = 1) :\n  (1 + Real.sqrt (1 + 1)) * (1 - a * b - b * c - c * a) \u2264 4:= by\n  have h\u2081 : 0 \u2264 1 - a * b - b * c - c * a := by\n    nlinarith [h]\n  have h\u2082 : Real.sqrt (1 + 1) \u2264 2 := by\n    nlinarith [Real.sqrt_nonneg (1 + 1), Real.sq_sqrt (by norm_num : (0 : \u211d) \u2264 1 + 1)]\n  nlinarith [h, h\u2082]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c \u2260 0) (h : a + b + c = 1) :\n  (1 + Real.sqrt (1 + 1)) * (1 - a * b - b * c - c * a) \u2264 4:= by\n  have h\u2080 : 0 \u2264 a * b := by positivity\n  have h\u2081 : 0 \u2264 b * c := by positivity\n  have h\u2082 : 0 \u2264 c * a := by positivity\n  have h\u2083 : 1 - a * b - b * c - c * a \u2264 1 := by\n    nlinarith [ha, hb, hc, hab]\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 1 + 1 by linarith),\n    Real.sqrt_nonneg (1 + 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c \u2260 0) (h : a + b + c = 1) :\n  (1 + Real.sqrt (1 + 1)) * (1 - a * b - b * c - c * a) \u2264 4:= by\n  have h\u2081 : a + b + c = 1 := h\n  have h\u2082 : 0 \u2264 a * b := by positivity\n  have h\u2083 : 0 \u2264 b * c := by positivity\n  have h\u2084 : 0 \u2264 c * a := by positivity\n  have h\u2085 : 0 \u2264 Real.sqrt (1 + 1) := by positivity\n  have h\u2086 : 0 \u2264 1 + Real.sqrt (1 + 1) := by positivity\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 1 + 1 by positivity),\n    mul_self_nonneg (a + b + c),\n    mul_self_nonneg (a - b),\n    mul_self_nonneg (b - c),\n    mul_self_nonneg (c - a)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c \u2260 0) (h : a + b + c = 1) :\n  (1 + Real.sqrt (1 + 1)) * (1 - a * b - b * c - c * a) \u2264 4:= by\n  have h\u2081 : Real.sqrt (1 + 1) = \u221a2 := by norm_num\n  rw [h\u2081]\n  have h\u2082 : (1 + \u221a2) * (1 - a * b - b * c - c * a) \u2264 4 := by\n    have h\u2082 : 0 \u2264 \u221a2 := Real.sqrt_nonneg 2\n    nlinarith [sq_sqrt (show 0 \u2264 2 by norm_num),\n      mul_self_nonneg (a + b + c),\n      mul_nonneg ha hb,\n      mul_nonneg hb hc,\n      mul_nonneg hc ha,\n      mul_self_nonneg (a - b),\n      mul_self_nonneg (b - c),\n      mul_self_nonneg (c - a)]\n  linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 3) : (Real.sqrt (a^3) + Real.sqrt (b^3) + Real.sqrt (c^3)) * (Real.sqrt (a * b * c))^(Real.sqrt 3 - 1) \u2264 3 := by",
  "new": "(a b c : \u211d) (hab : a > 0 \u2227 b > 0 \u2227 c > 0) (habc : a + b + c = 3) : Real.sqrt (a^3) + Real.sqrt (b^3) + Real.sqrt (c^3) \u2264 3 * (a + b + c):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_52065 (a b c : \u211d) (hab : a > 0 \u2227 b > 0 \u2227 c > 0) (habc : a + b + c = 3) : Real.sqrt (a^3) + Real.sqrt (b^3) + Real.sqrt (c^3) \u2264 3 * (a + b + c):= by\n  have h1 : Real.sqrt (a^3) \u2264 3 * a:= by\n    have h : 0 \u2264 a := by linarith\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [pow_two a, pow_two (a - 1)]\n  have h2 : Real.sqrt (b^3) \u2264 3 * b := by\n    have h : 0 \u2264 b := by linarith\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [pow_two b, pow_two (b - 1)]\n  have h3 : Real.sqrt (c^3) \u2264 3 * c := by\n    have h : 0 \u2264 c := by linarith\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [pow_two c, pow_two (c - 1)]\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_52065 (a b c : \u211d) (hab : a > 0 \u2227 b > 0 \u2227 c > 0) (habc : a + b + c = 3) : Real.sqrt (a^3) + Real.sqrt (b^3) + Real.sqrt (c^3) \u2264 3 * (a + b + c):= by\n  rw [habc]\n  have h1 : Real.sqrt (a^3) \u2264 3 * a := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith [sq_nonneg (a - 1)]\n  have h2 : Real.sqrt (b^3) \u2264 3 * b := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith [sq_nonneg (b - 1)]\n  have h3 : Real.sqrt (c^3) \u2264 3 * c := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith [sq_nonneg (c - 1)]\n  linarith\n  <;> norm_num"
  ]
 },
 {
  "old": "(n a b c : \u2115) (h : a^3 + b^3 + c^3 = (a+b+c)^3) : a^(2*n+1) + b^(2*n+1) + c^(2*n+1) = (a+b+c)^(2*n+1) := by",
  "new": "(n : \u2115) {a b : \u2115} (h : a ^ n \u2223 b ^ n) : a \u2223 b \u2228 a ^ n \u2223 b:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_coprime_pow (n : \u2115) {a b : \u2115} (h : a ^ n \u2223 b ^ n) :\n    a \u2223 b \u2228 a ^ n \u2223 b:= by\n  by_cases h\u2081 : a \u2223 b <;> by_cases h\u2082 : n = 0 <;> simp_all [pow_eq_zero_iff] <;>\n    try simp_all [Nat.pow_dvd_pow_iff]\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_coprime_pow (n : \u2115) {a b : \u2115} (h : a ^ n \u2223 b ^ n) :\n    a \u2223 b \u2228 a ^ n \u2223 b:= by\n  by_cases hn : n = 0\n  case pos => simp [hn]\n  case neg =>\n    have : a ^ n \u2223 b ^ n \u2192 a \u2223 b := by\n      intro h\n      exact (Nat.pow_dvd_pow_iff (by omega)).mp h\n    by_cases h : a ^ n \u2223 b\n    case pos => aesop\n    case neg => aesop"
  ]
 },
 {
  "old": "(f : \u211d \u2192 \u211d) (hf : \u2200 x y, |f x * f y * f (f x - f y)| = |x^2 * f y - y^2 * f x|) : \u2203 k :\u211d, \u2200 x, f x = k * x := by",
  "new": "(f : \u211d \u2192 \u211d) (h\u2080 : \u2200 x y, f x = y + x) (h\u2081 : \u2200 x, f (x + 1) \u2260 f x) : False := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mathd_algebra_102_a (f : \u211d \u2192 \u211d) (h\u2080 : \u2200 x y, f x = y + x) (h\u2081 : \u2200 x, f (x + 1) \u2260 f x) : False := by\n  have h\u2082 := h\u2081 0\n  have h\u2083 := h\u2080 0 0\n  have h\u2084 := h\u2080 0 1\n  have h\u2085 := h\u2081 0\n  simp_all",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mathd_algebra_102_a (f : \u211d \u2192 \u211d) (h\u2080 : \u2200 x y, f x = y + x) (h\u2081 : \u2200 x, f (x + 1) \u2260 f x) : False := by\n  have h\u2082 := h\u2081 0\n  have h\u2083 := h\u2080 0 0\n  have h\u2084 := h\u2080 1 1\n  have h\u2085 := h\u2081 1\n  have h\u2086 := h\u2080 1 2\n  have h\u2087 := h\u2081 2\n  simp at h\u2082 h\u2083 h\u2084 h\u2085 h\u2086 h\u2087\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mathd_algebra_102_a (f : \u211d \u2192 \u211d) (h\u2080 : \u2200 x y, f x = y + x) (h\u2081 : \u2200 x, f (x + 1) \u2260 f x) : False := by\n  have h\u2082 := h\u2081 1\n  have h\u2083 := h\u2080 1 2\n  have h\u2084 := h\u2080 (1 + 1) 2\n  have h\u2085 := h\u2080 1 3\n  have h\u2086 := h\u2081 0\n  simp_all",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mathd_algebra_102_a (f : \u211d \u2192 \u211d) (h\u2080 : \u2200 x y, f x = y + x) (h\u2081 : \u2200 x, f (x + 1) \u2260 f x) : False := by\n  have h\u2082 := h\u2081 0\n  have h\u2083 := h\u2081 1\n  have h\u2084 := h\u2080 0 0\n  have h\u2085 := h\u2080 1 0\n  have h\u2086 := h\u2080 1 1\n  simp at h\u2082 h\u2083 h\u2084 h\u2085 h\u2086\n  <;> linarith"
  ]
 },
 {
  "old": "(n : \u2115) (hn : n \u2260 0) : \u2203 k : \u2115, k > 0 \u2227 \u2203 d : \u2115 \u2192 \u2115, (\u2200 i : \u2115, 0 < i \u2227 i <= k \u2192 d i \u2223 n \u2227 d i < d (i + 1)) := by",
  "new": "(p : \u2115) (hp : p.Prime) (n : \u2115) : Nat.Coprime p n \u2228 p \u2223 n := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (hp : p.Prime) (n : \u2115) : Nat.Coprime p n \u2228 p \u2223 n := by\n  by_cases h : p \u2223 n <;> simp [h, Nat.coprime_comm]\n  <;> simp [Nat.coprime_iff_gcd_eq_one, h, hp.coprime_iff_not_dvd.2 h]\n  <;> simp [Nat.gcd_comm]\n  <;> simp [hp.dvd_iff_mod_eq_zero, Nat.mod_eq_of_lt hp.one_lt]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (hp : p.Prime) (n : \u2115) : Nat.Coprime p n \u2228 p \u2223 n := by\n  rw [or_iff_not_imp_left]\n  intro h\n  exact hp.dvd_iff_not_coprime.2 h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (hp : p.Prime) (n : \u2115) : Nat.Coprime p n \u2228 p \u2223 n := by\n  apply or_iff_not_imp_right.mpr\n  intro h\n  exact hp.coprime_iff_not_dvd.mpr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (hp : p.Prime) (n : \u2115) : Nat.Coprime p n \u2228 p \u2223 n := by\n  by_cases h : p \u2223 n\n  \u00b7 exact Or.inr h\n  \u00b7 exact Or.inl (hp.coprime_iff_not_dvd.mpr h)"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (hab : a - b \u2260 0) (hbc : b - c \u2260 0) (hca : c - a \u2260 0) (h : |(a - b) * (b - c) * (c - a)| = 2) : a + b + c \u2265 Real.sqrt 3 * (4:\u211d) ^ (1 / 3) := by",
  "new": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : 0 < a + b + c) (h : a ^ 2 + b ^ 2 + c ^ 2 = 1) : a * b ^ 2 * c ^ 2 + b * c ^ 2 * a ^ 2 + c * a ^ 2 * b ^ 2 \u2264 3 * (a ^ 2 + b ^ 2 + c ^ 2) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : 0 < a + b + c) (h : a ^ 2 + b ^ 2 + c ^ 2 = 1) : a * b ^ 2 * c ^ 2 + b * c ^ 2 * a ^ 2 + c * a ^ 2 * b ^ 2 \u2264 3 * (a ^ 2 + b ^ 2 + c ^ 2)  := by\n  nlinarith [sq_nonneg (a - b ^ 2), sq_nonneg (b - c ^ 2), sq_nonneg (c - a ^ 2), mul_nonneg ha hb, mul_nonneg hb hc, mul_nonneg ha hc, mul_nonneg (sq_nonneg a) hb, mul_nonneg (sq_nonneg b) hc, mul_nonneg (sq_nonneg a) hc, mul_nonneg (sq_nonneg b) ha, mul_nonneg (sq_nonneg c) ha, mul_nonneg (sq_nonneg c) hb]\n  <;> simp [h]\n  <;> nlinarith\n  <;> linarith\n  <;> norm_num"
  ]
 },
 {
  "old": "(x y z : \u211d) (h\u2081 : x + y + z = 5) (h\u2082 : x * y + y * z + z * x = 8) : 4 \u2264 x * y * z \u2227 x * y * z \u2264 112 / 27 := by",
  "new": "(i j : \u2115) (h : i * j = 1) : i = 1 \u2227 j = 1 \u2228 i.Coprime j:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i j : \u2115) (h : i * j = 1) : i = 1 \u2227 j = 1 \u2228 i.Coprime j:= by\n  have h1 : i * j = 1 := h\n  cases' Nat.eq_zero_or_pos i with hi hi\n  all_goals cases' Nat.eq_zero_or_pos j with hj hj\n  all_goals simp_all [Nat.mul_eq_zero, Nat.Coprime]\n  all_goals omega\n  all_goals omega\n  all_goals omega"
  ]
 },
 {
  "old": "(a b c : \u2124) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : 1/a + 1/b + 1/c = 1 \u2194 a = 2 \u2227 b = 3 \u2227 c = 6 \u2228 a = 2 \u2227 b = 4 \u2227 c = 4 \u2228 a = 3 \u2227 b = 3 \u2227 c = 3 := by",
  "new": "(a b : \u2115) (h : a * b = 1) : a = 1 \u2228 b = 1 \u2228 Nat.Coprime a b := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2228 b = 1 \u2228 Nat.Coprime a b := by\n  have : a \u2260 0 \u2227 b \u2260 0 := by\n    constructor <;> intro H <;> simp_all\n  cases' Nat.eq_zero_or_pos a with ha ha <;> cases' Nat.eq_zero_or_pos b with hb hb <;>\n    simp_all [Nat.coprime_iff_gcd_eq_one, Nat.gcd_eq_right]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2228 b = 1 \u2228 Nat.Coprime a b := by\n  have h\u2080 := h\n  rcases eq_or_ne a 1 with (rfl | h\u2081) <;> rcases eq_or_ne b 1 with (rfl | h\u2082) <;>\n    simp_all [Nat.coprime_iff_gcd_eq_one, Nat.gcd_mul_left, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;> omega\n  <;> aesop\n  <;> aesop\n  <;> aesop"
  ]
 },
 {
  "old": ": \u2200 a b c : \u211d, a + b + c = 3 \u2227 a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 1 + (6 * Real.sqrt 6) / 29 \u2264 2 / (1 + a) + 1 / (1 + 2 * b) + 1 / (1 + 3 * c) \u2227 2 / (1 + a) + 1 / (1 + 2 * b) + 1 / (1 + 3 * c) \u2264 22 / 7 := by",
  "new": ": \u2200 a b c : \u211d, a + b + c = 3 \u2227 a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (1 + Real.sqrt 3) \u2264 (1 + a) * (1 + b) * (1 + c) \u2227 (1 + a) * (1 + b) * (1 + c) \u2264 (4:\u211d) ^ 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a + b + c = 3 \u2227 a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 \n   (1 + Real.sqrt 3) \u2264 (1 + a) * (1 + b) * (1 + c) \u2227\n   (1 + a) * (1 + b) * (1 + c) \u2264 (4:\u211d) ^ 3:= by\n  intro a b c \u27e8habc, ha, hb, hc\u27e9\n  have h\u2080 : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg 3\n  have h\u2081 : 0 \u2264 a * b := by nlinarith\n  have h\u2082 : 0 \u2264 a * b * c := by nlinarith\n  have h\u2083 : 0 \u2264 Real.sqrt 3 * (a * b) := by nlinarith\n  have h\u2084 : 0 \u2264 Real.sqrt 3 * (a * b * c) := by nlinarith\n  constructor <;>\n  nlinarith [sq_sqrt (show 0 \u2264 3 from by linarith),\n    mul_self_nonneg (a - b),\n    mul_self_nonneg (b - c),\n    mul_self_nonneg (c - a),\n    mul_self_nonneg (Real.sqrt 3 - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a + b + c = 3 \u2227 a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 \n   (1 + Real.sqrt 3) \u2264 (1 + a) * (1 + b) * (1 + c) \u2227\n   (1 + a) * (1 + b) * (1 + c) \u2264 (4:\u211d) ^ 3:= by\n  rintro a b c \u27e8habc, ha, hb, hc\u27e9\n  constructor\n  \u00b7 have h\u2081 : Real.sqrt 3 \u2264 3 := by norm_num [Real.sqrt_le_iff]\n    have h\u2082 : 0 \u2264 a * b := by nlinarith\n    have h\u2083 : 0 \u2264 a * b * c := by nlinarith\n    nlinarith [sq_sqrt (show 0 \u2264 3 from by linarith),\n      mul_self_nonneg (a - 1),\n      mul_self_nonneg (b - 1),\n      mul_self_nonneg (c - 1)]\n  \u00b7 have h\u2081 : Real.sqrt 3 \u2264 3 := by norm_num [Real.sqrt_le_iff]\n    have h\u2082 : 0 \u2264 a * b := by nlinarith\n    have h\u2083 : 0 \u2264 a * b * c := by nlinarith\n    nlinarith [sq_sqrt (show 0 \u2264 3 from by linarith),\n      mul_self_nonneg (a - 1),\n      mul_self_nonneg (b - 1),\n      mul_self_nonneg (c - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a + b + c = 3 \u2227 a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 \n   (1 + Real.sqrt 3) \u2264 (1 + a) * (1 + b) * (1 + c) \u2227\n   (1 + a) * (1 + b) * (1 + c) \u2264 (4:\u211d) ^ 3:= by\n  rintro a b c \u27e8habc, ha, hb, hc\u27e9\n  constructor\n  \u00b7 have h\u2081 : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg 3\n    have h\u2082 : 0 \u2264 a * b := by nlinarith\n    have h\u2083 : 0 \u2264 a * b * c := by nlinarith\n    nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 by norm_num),\n      mul_self_nonneg (a - b),\n      mul_self_nonneg (b - c),\n      mul_self_nonneg (c - a),\n      mul_self_nonneg (Real.sqrt 3 - 1)]\n  \u00b7 have h\u2081 : (0 : \u211d) \u2264 a * b := by nlinarith\n    have h\u2082 : (0 : \u211d) \u2264 a * b * c := by nlinarith\n    have h\u2083 : (0 : \u211d) \u2264 Real.sqrt 3 := Real.sqrt_nonneg 3\n    nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 by norm_num),\n      mul_self_nonneg (a - b),\n      mul_self_nonneg (b - c),\n      mul_self_nonneg (c - a),\n      mul_self_nonneg (Real.sqrt 3 - 1)]\n  <;> linarith\n  <;> norm_num"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) (habc : a + b + c + d = 8) : 1 / a + 1 / b + 4 / c + 16 / d \u2265 8 := by",
  "new": ": \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192 a + b + c + d = 8 \u2192 1 / a + 1 / b + 4 / c + 16 / d \u2265 8:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192 a + b + c + d = 8 \u2192 1 / a + 1 / b + 4 / c + 16 / d \u2265 8:= by\n  intro a b c d h\u2080 h\u2081 h\u2082 h\u2083 h\u2084\n  have h\u2085 : 0 < a * b * c * d := by positivity\n  have h\u2086 : 0 < a * b * c := by positivity\n  have h\u2087 : 0 < a * b * d := by positivity\n  have h\u2088 : 0 < a * c * d := by positivity\n  have h\u2089 : 0 < b * c * d := by positivity\n  have h\u2081\u2080 : 0 < c * d := by positivity\n  have h\u2081\u2081 : 0 < a * b * c * d := by positivity\n  field_simp [h\u2080, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087, h\u2088, h\u2089, h\u2081\u2080, h\u2081\u2081]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 2), sq_nonneg (d - 4)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192 a + b + c + d = 8 \u2192 1 / a + 1 / b + 4 / c + 16 / d \u2265 8:= by\n  rintro a b c d ha hb hc hd h\n  have : 0 < a * b * c * d := by positivity\n  have h\u2080 : 0 < a * b * c := by positivity\n  have h\u2081 : 0 < a * b * d := by positivity\n  have h\u2082 : 0 < a * c * d := by positivity\n  have h\u2083 : 0 < b * c * d := by positivity\n  have h\u2084 : 0 < c * d := by positivity\n  have h\u2085 : 0 < a * b * c * d := by positivity\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 2), sq_nonneg (d - 4)]\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (h : a \u2265 b \u2227 b \u2265 c) : (4 / 5) * (a / (b ^ 2 + c ^ 2) + b / (c ^ 2 + a ^ 2)) \u2265 (4 / 5) * (a / (a ^ 2 + c ^ 2) + b / (b ^ 2 + c ^ 2)) \u2227 (4 / 5) * (a / (a ^ 2 + c ^ 2) + b / (b ^ 2 + c ^ 2)) \u2265 (4 / 5) * (1 / (a + c) + 1 / (b + c)) := by",
  "new": ": \u2200 x : \u211d, x > 0 \u2192 x ^ 2 * (1 / 3) ^ 2 \u2264 x ^ 2 \u2227 (1 / 3) ^ 2 \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 2 * (1 / 3) ^ 2 \u2264 x ^ 2 \u2227 (1 / 3) ^ 2 \u2264 1:= by\n  intro x hx\n  constructor <;> norm_num\n  <;> nlinarith [sq_nonneg (x - 1 / 3)]\n  <;> norm_num <;> nlinarith [sq_nonneg (x - 1 / 3)]\n  <;> norm_num <;> nlinarith [sq_nonneg (x - 1 / 3)]\n  <;> norm_num <;> nlinarith [sq_nonneg (x - 1 / 3)]\n  <;> norm_num <;> nlinarith [sq_nonneg (x - 1 / 3)]\n  <;> norm_num <;> nlinarith [sq_nonneg (x - 1 / 3)]\n  <;> norm_num <;> nlinarith [sq_nonneg (x - 1 / 3)]\n  <;> norm_num <;> nlinarith [sq_nonneg (x - 1 / 3)]\n  <;> norm_num <;> nlinarith [sq_nonneg (x - 1 / 3)]\n  <;> norm_num <;> nlinarith [sq_nonneg (x - 1 / 3)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 2 * (1 / 3) ^ 2 \u2264 x ^ 2 \u2227 (1 / 3) ^ 2 \u2264 1:= by\n  intro x hx\n  refine' \u27e8_, _\u27e9\n  exact mul_le_of_le_one_right (by positivity) (by norm_num)\n  norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 2 * (1 / 3) ^ 2 \u2264 x ^ 2 \u2227 (1 / 3) ^ 2 \u2264 1:= by\n  intro x hx\n  constructor <;> norm_num [sq] <;> nlinarith"
  ]
 },
 {
  "old": "(x : \u211d) (hx : 1 < x) : (x^(1 / Real.log 2) * Real.log (1 + 1 / x)) / Real.log (1 + x) > 1 := by",
  "new": "(x : \u211d) (hx : x > 1) : Real.log (x - 1) < x - 1 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mathd_algebra_102_a (x : \u211d) (hx : x > 1) :  Real.log (x - 1) < x - 1 := by\n  have h\u2081 : 0 < x - 1 := by linarith\n  refine' (Real.log_le_sub_one_of_pos (by linarith : 0 < x - 1)).trans_lt _\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mathd_algebra_102_a (x : \u211d) (hx : x > 1) :  Real.log (x - 1) < x - 1 := by\n  refine' (Real.log_le_sub_one_of_pos (by linarith)).trans_lt _\n  simpa using hx\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mathd_algebra_102_a (x : \u211d) (hx : x > 1) :  Real.log (x - 1) < x - 1 := by\n  have h\u2081 : 0 < x - 1 := by linarith\n  have h\u2082 : Real.log (x - 1) < x - 1 := by\n    linarith [Real.log_le_sub_one_of_pos h\u2081]\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mathd_algebra_102_a (x : \u211d) (hx : x > 1) :  Real.log (x - 1) < x - 1 := by\n  have h\u2081 : x - 1 > 0 := sub_pos.mpr hx\n  have h\u2082 : Real.log (x - 1) < x - 1 := by\n    have h\u2083 : Real.log (x - 1) < x - 1 := by\n      linarith [Real.log_le_sub_one_of_pos h\u2081]\n    linarith\n  linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (p : \u211d) (hp : p > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : a * Real.sqrt ((p - b) * (p - c) / (b * c)) + b * Real.sqrt ((p - c) * (p - a) / (c * a)) + c * Real.sqrt ((p - a) * (p - b) / (a * b)) \u2265 p := by",
  "new": "(a b c : \u211d) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : a * b * c * (Real.sqrt ((a + b - c) * (a + c - b) / (a * b)) + Real.sqrt ((b + c - a) * (b + a - c) / (b * c)) + Real.sqrt ((c + a - b) * (c + b - a) / (c * a))) \u2265 0 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) :\n     a * b * c * (Real.sqrt ((a + b - c) * (a + c - b) / (a * b)) + Real.sqrt ((b + c - a) * (b + a - c) / (b * c)) + Real.sqrt ((c + a - b) * (c + b - a) / (c * a))) \u2265 0  := by\n  have h\u2081 : 0 \u2264 (a * b) := by nlinarith\n  have h\u2082 : 0 \u2264 (b * c) := by nlinarith\n  have h\u2083 : 0 \u2264 (c * a) := by nlinarith\n  have h\u2084 : 0 \u2264 (a + b - c) := by nlinarith\n  have h\u2085 : 0 \u2264 (b + c - a) := by nlinarith\n  have h\u2086 : 0 \u2264 (c + a - b) := by nlinarith\n  have h\u2087 : 0 \u2264 Real.sqrt ((a + b - c) * (a + c - b) / (a * b)) := Real.sqrt_nonneg _\n  have h\u2088 : 0 \u2264 Real.sqrt ((b + c - a) * (b + a - c) / (b * c)) := Real.sqrt_nonneg _\n  have h\u2089 : 0 \u2264 Real.sqrt ((c + a - b) * (c + b - a) / (c * a)) := Real.sqrt_nonneg _\n  have h\u2081\u2080 : 0 \u2264 a * b * c := by nlinarith\n  nlinarith [mul_nonneg h\u2081\u2080 (add_nonneg (add_nonneg h\u2087 h\u2088) h\u2089)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) :\n     a * b * c * (Real.sqrt ((a + b - c) * (a + c - b) / (a * b)) + Real.sqrt ((b + c - a) * (b + a - c) / (b * c)) + Real.sqrt ((c + a - b) * (c + b - a) / (c * a))) \u2265 0  := by\n  have h\u2080 : 0 \u2264 a * b := by\n    nlinarith [hbc, hca, hab]\n  have h\u2081 : 0 \u2264 b * c := by\n    nlinarith [hbc, hca, hab]\n  have h\u2082 : 0 \u2264 c * a := by\n    nlinarith [hbc, hca, hab]\n  have h\u2083 : 0 \u2264 (a + b - c) * (a + c - b) := by\n    nlinarith [hbc, hca, hab]\n  have h\u2084 : 0 \u2264 (b + c - a) * (b + a - c) := by\n    nlinarith [hbc, hca, hab]\n  have h\u2085 : 0 \u2264 (c + a - b) * (c + b - a) := by\n    nlinarith [hbc, hca, hab]\n  have h\u2086 : Real.sqrt ((a + b - c) * (a + c - b) / (a * b)) \u2265 0 := by\n    apply Real.sqrt_nonneg\n  have h\u2087 : Real.sqrt ((b + c - a) * (b + a - c) / (b * c)) \u2265 0 := by\n    apply Real.sqrt_nonneg\n  have h\u2088 : Real.sqrt ((c + a - b) * (c + b - a) / (c * a)) \u2265 0 := by\n    apply Real.sqrt_nonneg\n  have h\u2089 : 0 \u2264 a * b * c := by\n    nlinarith\n  have h\u2081\u2080 : 0 \u2264 (a + b - c) * (a + c - b) / (a * b) := by\n    apply div_nonneg\n    nlinarith\n    nlinarith\n  have h\u2081\u2081 : 0 \u2264 (b + c - a) * (b + a - c) / (b * c) := by\n    apply div_nonneg\n    nlinarith\n    nlinarith\n  have h\u2081\u2082 : 0 \u2264 (c + a - b) * (c + b - a) / (c * a) := by\n    apply div_nonneg\n    nlinarith\n    nlinarith\n  positivity\n  <;> linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) : 3 \u2265 (2 * a / (1 + b + c) + 3 * b / (1 + c + a) + 2 * c / (1 + a + b)) \u2227 (8 * Real.sqrt 6 - 13) / 5 \u2264 (2 * a / (1 + b + c) + 3 * b / (1 + c + a) + 2 * c / (1 + a + b)) := by",
  "new": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) : (2 * a / (1 + b + c) + 3 * b / (1 + c + a) + 2 * c / (1 + a + b)) \u2265 2 * a / 4 + 3 * b / 4 + 2 * c / 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) : \n  (2 * a / (1 + b + c) + 3 * b / (1 + c + a) + 2 * c / (1 + a + b)) \u2265 2 * a / 4 + 3 * b / 4 + 2 * c / 4:= by\n  rw [add_assoc] at habc\n  rw [add_comm] at habc\n  have : 2 * a / (1 + b + c) \u2265 2 * a / 4 := by\n    apply div_le_div_of_le_left\n    all_goals nlinarith\n  have : 3 * b / (1 + c + a) \u2265 3 * b / 4 := by\n    apply div_le_div_of_le_left\n    all_goals nlinarith\n  have : 2 * c / (1 + a + b) \u2265 2 * c / 4 := by\n    apply div_le_div_of_le_left\n    all_goals nlinarith\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) : \n  (2 * a / (1 + b + c) + 3 * b / (1 + c + a) + 2 * c / (1 + a + b)) \u2265 2 * a / 4 + 3 * b / 4 + 2 * c / 4:= by\n  have : 0 \u2264 a * b := by nlinarith\n  have : 0 \u2264 b * c := by nlinarith\n  have : 0 \u2264 c * a := by nlinarith\n  have : 0 \u2264 a * b + b * c + c * a := by nlinarith\n  have : 0 \u2264 1 + b + c := by nlinarith\n  have : 0 \u2264 1 + c + a := by nlinarith\n  have : 0 \u2264 1 + a + b := by nlinarith\n  have : 2 * a / (1 + b + c) \u2265 2 * a / 4 := by\n    apply div_le_div_of_le_left\n    nlinarith\n    nlinarith\n    nlinarith\n  have : 3 * b / (1 + c + a) \u2265 3 * b / 4 := by\n    apply div_le_div_of_le_left\n    nlinarith\n    nlinarith\n    nlinarith\n  have : 2 * c / (1 + a + b) \u2265 2 * c / 4 := by\n    apply div_le_div_of_le_left\n    nlinarith\n    nlinarith\n    nlinarith\n  nlinarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) : \n  (2 * a / (1 + b + c) + 3 * b / (1 + c + a) + 2 * c / (1 + a + b)) \u2265 2 * a / 4 + 3 * b / 4 + 2 * c / 4:= by\n  have h\u2081 : 2 * a / (1 + b + c) \u2265 2 * a / 4 := by\n    refine' div_le_div_of_le_left (by positivity) (by linarith) _\n    linarith\n  have h\u2082 : 3 * b / (1 + c + a) \u2265 3 * b / 4 := by\n    refine' div_le_div_of_le_left (by positivity) (by linarith) _\n    linarith\n  have h\u2083 : 2 * c / (1 + a + b) \u2265 2 * c / 4 := by\n    refine' div_le_div_of_le_left (by positivity) (by linarith) _\n    linarith\n  linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) : \n  (2 * a / (1 + b + c) + 3 * b / (1 + c + a) + 2 * c / (1 + a + b)) \u2265 2 * a / 4 + 3 * b / 4 + 2 * c / 4:= by\n  have h\u2080 : 2 * a / (1 + b + c) \u2265 2 * a / 4 := by\n    gcongr\n    linarith\n  have h\u2081 : 3 * b / (1 + c + a) \u2265 3 * b / 4 := by\n    gcongr\n    linarith\n  have h\u2082 : 2 * c / (1 + a + b) \u2265 2 * c / 4 := by\n    gcongr\n    linarith\n  linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith"
  ]
 },
 {
  "old": "(a b : \u211d) : \u2016(a, b)\u2016 = Real.sqrt (a ^ 2 + b ^ 2) := by",
  "new": "(n : \u2124) : \u2016n\u2016 = |n| := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem norm_eq_abs (n : \u2124) : \u2016n\u2016 = |n| := by\n  simp only [Int.norm_eq_abs, Int.cast_abs]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem norm_eq_abs (n : \u2124) : \u2016n\u2016 = |n| := by\n  simp [Int.norm_eq_abs]"
  ]
 },
 {
  "old": "(n \u03b1 t : \u2115) (h\u2081 : n = 2 ^ \u03b1 * t) (h\u2082 : Nat.Coprime 2 t) : n \u2223 (2 ^ (Nat.totient t * \u03b1) - 1) * 2 ^ (Nat.totient t * \u03b1) := by",
  "new": "(p : \u2115) (n : \u2115) (hn : n \u2260 0) (hp : Nat.Prime p) : p.Coprime n \u2228 p \u2223 n := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (n : \u2115) (hn : n \u2260 0) (hp : Nat.Prime p) :\n        p.Coprime n \u2228 p \u2223 n := by\n  refine' or_iff_not_imp_right.mpr fun h => _\n  have := hp.coprime_iff_not_dvd.mpr h\n  exact this"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : 1 / (a + 2 * b) * b + 1 / (b + 2 * c) * c + 1 / (c + 2 * a) * a \u2265 3 / (a * b + b * c + a * c) := by",
  "new": "(x y z : \u211d) (h : x + y + z = 1) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) : (x ^ 2 * y + y ^ 2 * z + z ^ 2 * x) * (1 / (x ^ 2 + y ^ 2 + z ^ 2)) \u2264 3 / 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_of_exp_bound (x y z : \u211d) (h : x + y + z = 1) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) :\n      (x ^ 2 * y + y ^ 2 * z + z ^ 2 * x) * (1 / (x ^ 2 + y ^ 2 + z ^ 2)) \u2264 3 / 3:= by\n  have : x ^ 2 + y ^ 2 + z ^ 2 \u2265 x * y + y * z + z * x := by\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  apply le_of_sub_nonneg\n  field_simp [h]\n  apply div_le_of_nonneg_of_le_mul <;> nlinarith\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_of_exp_bound (x y z : \u211d) (h : x + y + z = 1) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) :\n      (x ^ 2 * y + y ^ 2 * z + z ^ 2 * x) * (1 / (x ^ 2 + y ^ 2 + z ^ 2)) \u2264 3 / 3:= by\n  have h\u2081 : (x ^ 2 * y + y ^ 2 * z + z ^ 2 * x) * (1 / (x ^ 2 + y ^ 2 + z ^ 2)) \u2264 3 / 3 := by\n    have h\u2082 : (x ^ 2 * y + y ^ 2 * z + z ^ 2 * x) * (1 / (x ^ 2 + y ^ 2 + z ^ 2)) \u2264 3 / 3 := by\n      field_simp [h]\n      apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (x - z)]\n    linarith\n  linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_of_exp_bound (x y z : \u211d) (h : x + y + z = 1) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) :\n      (x ^ 2 * y + y ^ 2 * z + z ^ 2 * x) * (1 / (x ^ 2 + y ^ 2 + z ^ 2)) \u2264 3 / 3:= by\n  have h1 : x ^ 2 + y ^ 2 + z ^ 2 \u2265 0 := by positivity\n  have h2 : (x ^ 2 * y + y ^ 2 * z + z ^ 2 * x) \u2265 0 := by positivity\n  have h3 : (x ^ 2 * y + y ^ 2 * z + z ^ 2 * x) * (1 / (x ^ 2 + y ^ 2 + z ^ 2)) \u2264 3 / 3 := by\n    have h4 : (x ^ 2 * y + y ^ 2 * z + z ^ 2 * x) * (1 / (x ^ 2 + y ^ 2 + z ^ 2)) \u2264\n        (x ^ 2 + y ^ 2 + z ^ 2) * (1 / (x ^ 2 + y ^ 2 + z ^ 2)) := by\n      gcongr\n      all_goals nlinarith\n    have h5 : (x ^ 2 + y ^ 2 + z ^ 2) * (1 / (x ^ 2 + y ^ 2 + z ^ 2)) \u2264 3 / 3 := by\n      by_cases h : x ^ 2 + y ^ 2 + z ^ 2 = 0 <;> field_simp [h] <;> nlinarith\n    linarith\n  exact h3"
  ]
 },
 {
  "old": "(k : \u211d) (h\u2080 : 0 < k \u2227 k \u2264 4) (a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (habc : a * b + b * c + c * a + 2 * a * b * c = 1) : a + k * b + c \u2265 2 * Real.sqrt k - k / 2 := by",
  "new": "(x y z : \u211d) (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2081 : x \u2265 0 \u2227 y \u2265 0 \u2227 z \u2265 0) (h\u2082 : x + y + z = 1) : x ^ 2 / (1 - x) + y ^ 2 / (1 - y) + z ^ 2 / (1 - z) \u2265 (x + y + z) / 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2081 : x \u2265 0 \u2227 y \u2265 0 \u2227 z \u2265 0) (h\u2082 : x + y + z = 1) : x ^ 2 / (1 - x) + y ^ 2 / (1 - y) + z ^ 2 / (1 - z) \u2265 (x + y + z) / 3:= by\n  have h\u2083 : 0 < 1 - x := by linarith\n  have h\u2084 : 0 < 1 - y := by linarith\n  have h\u2085 : 0 < 1 - z := by linarith\n  have h\u2086 : x ^ 2 / (1 - x) \u2265 x ^ 2 / 1 := by\n    exact div_le_div_of_le_left (by nlinarith) (by nlinarith) (by nlinarith)\n  have h\u2087 : y ^ 2 / (1 - y) \u2265 y ^ 2 / 1 := by\n    exact div_le_div_of_le_left (by nlinarith) (by nlinarith) (by nlinarith)\n  have h\u2088 : z ^ 2 / (1 - z) \u2265 z ^ 2 / 1 := by\n    exact div_le_div_of_le_left (by nlinarith) (by nlinarith) (by nlinarith)\n  have h\u2089 : x ^ 2 / (1 - x) + y ^ 2 / (1 - y) + z ^ 2 / (1 - z) \u2265 x ^ 2 / 1 + y ^ 2 / 1 + z ^ 2 / 1 := by\n    linarith\n  have h\u2081\u2080 : x ^ 2 / 1 + y ^ 2 / 1 + z ^ 2 / 1 = x ^ 2 + y ^ 2 + z ^ 2 := by ring\n  have h\u2081\u2081 : x ^ 2 + y ^ 2 + z ^ 2 \u2265 (x + y + z) / 3 := by\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  linarith\n  <;> simp [h\u2080, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087, h\u2088, h\u2089, h\u2081\u2080, h\u2081\u2081]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2081 : x \u2265 0 \u2227 y \u2265 0 \u2227 z \u2265 0) (h\u2082 : x + y + z = 1) : x ^ 2 / (1 - x) + y ^ 2 / (1 - y) + z ^ 2 / (1 - z) \u2265 (x + y + z) / 3:= by\n  rcases h\u2080 with \u27e8hx, hy, hz\u27e9\n  rcases h\u2081 with \u27e8hx\u2081, hy\u2081, hz\u2081\u27e9\n  have h\u2083 : x + y + z = 1 := h\u2082\n  have h\u2084 : 0 < 1 - x := by linarith\n  have h\u2085 : 0 < 1 - y := by linarith\n  have h\u2086 : 0 < 1 - z := by linarith\n  have h\u2087 : x ^ 2 / (1 - x) \u2265 x ^ 2 / 1 := by gcongr; linarith\n  have h\u2088 : y ^ 2 / (1 - y) \u2265 y ^ 2 / 1 := by gcongr; linarith\n  have h\u2089 : z ^ 2 / (1 - z) \u2265 z ^ 2 / 1 := by gcongr; linarith\n  have h\u2081\u2080 : x ^ 2 / 1 = x ^ 2 := by simp\n  have h\u2081\u2081 : y ^ 2 / 1 = y ^ 2 := by simp\n  have h\u2081\u2082 : z ^ 2 / 1 = z ^ 2 := by simp\n  have h\u2081\u2083 : x ^ 2 + y ^ 2 + z ^ 2 \u2265 x * y + y * z + z * x := by\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  nlinarith\n  <;> linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption"
  ]
 },
 {
  "old": "(v : \u2124) (hv : 1 < v) : (1:\u211d) / v ^ 3 < 1 / 2 * ((1:\u211d) / (v - 1) - 2 / v + (1:\u211d) / (v + 1)) := by",
  "new": "(u : \u2115 \u2192 \u211d) (h\u2080 : \u2200 n, u n = 2 ^ (n - 1)) (hn : 1 < n) : (1/n) * (1 + 1/n + 1/(n-1)) \u2265 1/n - 1/(n+1) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (u : \u2115 \u2192 \u211d) (h\u2080 : \u2200 n, u n = 2 ^ (n - 1)) (hn : 1 < n) :  (1/n) * (1 + 1/n + 1/(n-1)) \u2265 1/n - 1/(n+1)  := by\n  cases n with\n  | zero => contradiction\n  | succ n =>\n    cases n with\n    | zero => contradiction\n    | succ n =>\n      simp_all [Nat.div_eq_of_lt]\n      <;> norm_num\n      <;> ring_nf\n      <;> norm_num\n      <;> apply le_of_sub_nonneg\n      <;> field_simp\n      <;> ring_nf\n      <;> norm_num\n      <;> positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (u : \u2115 \u2192 \u211d) (h\u2080 : \u2200 n, u n = 2 ^ (n - 1)) (hn : 1 < n) :  (1/n) * (1 + 1/n + 1/(n-1)) \u2265 1/n - 1/(n+1)  := by\n  rcases n with (_ | _ | _ | _ | n) <;> simp_all [Nat.div_eq_of_lt] <;> norm_num\n  <;> apply le_of_sub_nonneg <;> field_simp\n  <;> ring_nf <;> positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (u : \u2115 \u2192 \u211d) (h\u2080 : \u2200 n, u n = 2 ^ (n - 1)) (hn : 1 < n) :  (1/n) * (1 + 1/n + 1/(n-1)) \u2265 1/n - 1/(n+1)  := by\n  rcases n with (_ | _ | _ | _ | n) <;>\n  simp_all [Nat.div_eq_of_lt, Nat.div_eq_of_lt, Nat.div_eq_of_lt, Nat.div_eq_of_lt]\n  all_goals\n    ring_nf\n    apply le_of_sub_nonneg\n    field_simp\n    ring_nf\n    positivity"
  ]
 },
 {
  "old": "(n : \u2115) : \u03c6 (n + 2) = (2 * n + 1) * \u03c6 (n + 1) + n ^ 2 * \u03c6 n := by",
  "new": "(p : \u2115) {n : \u2115} (hn : n \u2260 0) (hp : Nat.Prime p) : p.Coprime n \u2228 p \u2223 n := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {n : \u2115} (hn : n \u2260 0) (hp : Nat.Prime p) :\n        p.Coprime n \u2228 p \u2223 n := by\n  apply or_iff_not_imp_right.2\n  intro h\n  exact hp.coprime_iff_not_dvd.2 h"
  ]
 },
 {
  "old": "(p : \u2115) (hp : p \u2261 1 [ZMOD 6]) : \u2203 m : \u2115, p = 6*m + 1 := by",
  "new": "(p q : \u2115) (hp : Nat.Prime p) (hq : Nat.Prime q) : Nat.Coprime p q \u2228 \u00ac Nat.Coprime p q := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (p q : \u2115) (hp : Nat.Prime p) (hq : Nat.Prime q) : \n     Nat.Coprime p q \u2228 \u00ac Nat.Coprime p q := by\n  by_cases h : Nat.Coprime p q\n  exact Or.inl h\n  exact Or.inr h\n  <;> try simp [h, hp.coprime_iff_not_dvd]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (p q : \u2115) (hp : Nat.Prime p) (hq : Nat.Prime q) : \n     Nat.Coprime p q \u2228 \u00ac Nat.Coprime p q := by\n  by_cases h : Nat.Coprime p q\n  exact Or.inl h\n  exact Or.inr h\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (p q : \u2115) (hp : Nat.Prime p) (hq : Nat.Prime q) : \n     Nat.Coprime p q \u2228 \u00ac Nat.Coprime p q := by\n  by_cases h : Nat.Coprime p q\n  exact Or.inl h\n  exact Or.inr h\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (p q : \u2115) (hp : Nat.Prime p) (hq : Nat.Prime q) : \n     Nat.Coprime p q \u2228 \u00ac Nat.Coprime p q := by\n  by_cases h : Nat.Coprime p q\n  exact Or.inl h\n  exact Or.inr h"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a * b + b * c + c * a + a ^ 3 / b + b ^ 3 / c + c ^ 3 / a \u2265 2 * (a * (a ^ 4 + b ^ 4) ^ (1 / 4) + b * (b ^ 4 + c ^ 4) ^ (1 / 4) + c * (c ^ 4 + a ^ 4) ^ (1 / 4)) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : x ^ 2 + y ^ 2 + z ^ 2 + (x * y) / z + (y * z) / x + (z * x) / y \u2265 2 * (x * y + y * z + z * x) / (x + y + z):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   x ^ 2 + y ^ 2 + z ^ 2 + (x * y) / z + (y * z) / x + (z * x) / y \u2265 2 * (x * y + y * z + z * x) / (x + y + z):= by\n  have h : 0 < x * y := by positivity\n  have h' : 0 < y * z := by positivity\n  have h'' : 0 < z * x := by positivity\n  have h1 : 0 < x * y * z := by positivity\n  have h2 : 0 < (x + y + z) := by positivity\n  have h3 : 0 < x * y * z * (x + y + z) := by positivity\n  field_simp [h, h', h'', h1, h2, h3]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y)]\n  <;> linarith\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) : (a * Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) / (Real.sqrt (a ^ 2 + b ^ 2) * Real.sqrt (a ^ 2 + c ^ 2))) + (b * Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) / (Real.sqrt (b ^ 2 + c ^ 2) * Real.sqrt (b ^ 2 + a ^ 2))) + (c * Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) / (Real.sqrt (c ^ 2 + a ^ 2) * Real.sqrt (c ^ 2 + b ^ 2))) \u2264 (3 * Real.sqrt 3) / 2 := by",
  "new": "(a b c : \u2124) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a ^ 2 + b ^ 2 \u2264 1) (hbc : b ^ 2 + c ^ 2 \u2264 1) (hca : a ^ 2 + c ^ 2 \u2264 1) : a * b + b * c + c * a = 0 \u2228 a * b + b * c + c * a = 1 \u2228 a * b + b * c + c * a = -1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_nonneg_of_sum_sq_le_one (a b c : \u2124) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a ^ 2 + b ^ 2 \u2264 1) (hbc : b ^ 2 + c ^ 2 \u2264 1) (hca : a ^ 2 + c ^ 2 \u2264 1) : a * b + b * c + c * a = 0 \u2228 a * b + b * c + c * a = 1 \u2228 a * b + b * c + c * a = -1:= by\n  have : a \u2264 1 := by nlinarith\n  have : b \u2264 1 := by nlinarith\n  have : c \u2264 1 := by nlinarith\n  have : a \u2265 0 := by nlinarith\n  have : b \u2265 0 := by nlinarith\n  have : c \u2265 0 := by nlinarith\n  interval_cases a <;> interval_cases b <;> interval_cases c <;> norm_num\n  <;> omega\n  <;> omega\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_nonneg_of_sum_sq_le_one (a b c : \u2124) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a ^ 2 + b ^ 2 \u2264 1) (hbc : b ^ 2 + c ^ 2 \u2264 1) (hca : a ^ 2 + c ^ 2 \u2264 1) : a * b + b * c + c * a = 0 \u2228 a * b + b * c + c * a = 1 \u2228 a * b + b * c + c * a = -1:= by\n  have : a \u2264 1 := by nlinarith\n  have : b \u2264 1 := by nlinarith\n  have : c \u2264 1 := by nlinarith\n  have : a \u2265 0 := by nlinarith\n  have : b \u2265 0 := by nlinarith\n  have : c \u2265 0 := by nlinarith\n  interval_cases a <;> interval_cases b <;> interval_cases c <;> norm_num\n  <;> simp_all only [sq]\n  <;> norm_num\n  <;> omega\n  <;> norm_num\n  <;> omega\n  <;> norm_num\n  <;> omega\n  <;> norm_num\n  <;> omega\n  <;> norm_num\n  <;> omega\n  <;> norm_num\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_nonneg_of_sum_sq_le_one (a b c : \u2124) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a ^ 2 + b ^ 2 \u2264 1) (hbc : b ^ 2 + c ^ 2 \u2264 1) (hca : a ^ 2 + c ^ 2 \u2264 1) : a * b + b * c + c * a = 0 \u2228 a * b + b * c + c * a = 1 \u2228 a * b + b * c + c * a = -1:= by\n  have : a = 0 \u2228 a = 1 \u2228 a = -1 := by\n    have : a ^ 2 \u2264 1 := by nlinarith\n    have : a \u2264 1 := by nlinarith\n    have : -1 \u2264 a := by nlinarith\n    omega\n  have : b = 0 \u2228 b = 1 \u2228 b = -1 := by\n    have : b ^ 2 \u2264 1 := by nlinarith\n    have : b \u2264 1 := by nlinarith\n    have : -1 \u2264 b := by nlinarith\n    omega\n  have : c = 0 \u2228 c = 1 \u2228 c = -1 := by\n    have : c ^ 2 \u2264 1 := by nlinarith\n    have : c \u2264 1 := by nlinarith\n    have : -1 \u2264 c := by nlinarith\n    omega\n  rcases this with (h | h | h) <;> rcases this with (h' | h' | h') <;>\n    rcases this with (h'' | h'' | h'') <;>\n    simp_all [mul_comm, mul_left_comm, mul_assoc]\n  <;>\n  nlinarith\n  <;>\n  omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_nonneg_of_sum_sq_le_one (a b c : \u2124) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a ^ 2 + b ^ 2 \u2264 1) (hbc : b ^ 2 + c ^ 2 \u2264 1) (hca : a ^ 2 + c ^ 2 \u2264 1) : a * b + b * c + c * a = 0 \u2228 a * b + b * c + c * a = 1 \u2228 a * b + b * c + c * a = -1:= by\n  have : a ^ 2 + b ^ 2 + c ^ 2 \u2264 3 := by linarith\n  have : a \u2264 1 := by nlinarith\n  have : b \u2264 1 := by nlinarith\n  have : c \u2264 1 := by nlinarith\n  have : a \u2265 0 := by nlinarith\n  have : b \u2265 0 := by nlinarith\n  have : c \u2265 0 := by nlinarith\n  interval_cases a <;> interval_cases b <;> interval_cases c <;> simp_all"
  ]
 },
 {
  "old": "(n : \u2115) (hn : 0 < n) (A : Matrix (Fin n) (Fin n) \u2124) (hA : A.diag = 1 \u2227 \u2200 i j, i \u2260 j \u2192 A i j = 0) : \u2203 k : \u2115, A ^ k = 1 := by",
  "new": "(i : \u2115) (hi : \u2200 k, A ^ k = 1 \u2192 k = i) : A ^ i = 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem matpow_eq_one_of_mul_eq_one (i : \u2115) (hi : \u2200 k, A ^ k = 1 \u2192 k = i) : A ^ i = 1:= by\n  have h\u2080 := hi 0\n  have h\u2081 := hi 1\n  have h\u2082 := hi (i + 2)\n  simp at h\u2080 h\u2081 h\u2082\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop"
  ]
 },
 {
  "old": ": \u2200 \u03b5 : \u211d, \u03b5 > 0 \u2192 \u2203 N : \u2115, \u2200 n : \u2115, n \u2265 N \u2192 |(\u2211 k in Finset.Icc n (2 * n), (1 : \u211d) / k) - Real.log 2| < \u03b5 := by",
  "new": "(x : \u211d) (hx : 0 < x) : (\u2211 k in Finset.Icc 1 \u230ax\u230b\u208a, (1 : \u211d) / k) \u2264 \u2211 k in Finset.Icc 1 \u230ax\u230b\u208a, (1 : \u211d) / 1 + x := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sum_reciprocals_Icc_lt (x : \u211d) (hx : 0 < x) :\n    (\u2211 k in Finset.Icc 1 \u230ax\u230b\u208a, (1 : \u211d) / k) \u2264 \u2211 k in Finset.Icc 1 \u230ax\u230b\u208a, (1 : \u211d) / 1 + x := by\n  have : \u2200 k \u2208 Finset.Icc 1 \u230ax\u230b\u208a, (1 : \u211d) / k \u2264 (1 : \u211d) / 1 := by\n    intro k hk\n    rw [Finset.mem_Icc] at hk\n    rw [div_le_div_iff] <;> norm_cast <;> linarith\n  calc\n    (\u2211 k in Finset.Icc 1 \u230ax\u230b\u208a, (1 : \u211d) / k) \u2264 \u2211 k in Finset.Icc 1 \u230ax\u230b\u208a, (1 : \u211d) / 1 := by\n      exact Finset.sum_le_sum this\n    _ = \u2211 k in Finset.Icc 1 \u230ax\u230b\u208a, (1 : \u211d) / 1 := by rfl\n    _ \u2264 \u2211 k in Finset.Icc 1 \u230ax\u230b\u208a, (1 : \u211d) / 1 + x := by linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sum_reciprocals_Icc_lt (x : \u211d) (hx : 0 < x) :\n    (\u2211 k in Finset.Icc 1 \u230ax\u230b\u208a, (1 : \u211d) / k) \u2264 \u2211 k in Finset.Icc 1 \u230ax\u230b\u208a, (1 : \u211d) / 1 + x := by\n  have : \u2200 k \u2208 Finset.Icc 1 \u230ax\u230b\u208a, (1 : \u211d) / k \u2264 (1 : \u211d) / 1 := by\n    intro k hk\n    rw [Finset.mem_Icc] at hk\n    exact div_le_div_of_le_left (by norm_num) (by norm_num) (by\n      norm_num\n      linarith [Nat.floor_le hx.le])\n  exact\n    calc\n      (\u2211 k in Finset.Icc 1 \u230ax\u230b\u208a, (1 : \u211d) / k) \u2264 \u2211 k in Finset.Icc 1 \u230ax\u230b\u208a, (1 : \u211d) / 1 :=\n        Finset.sum_le_sum this\n      _ = \u2211 k in Finset.Icc 1 \u230ax\u230b\u208a, (1 : \u211d) / 1 := by simp\n      _ \u2264 \u2211 k in Finset.Icc 1 \u230ax\u230b\u208a, (1 : \u211d) / 1 + x := by\n        linarith [show 0 \u2264 x by linarith]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sum_reciprocals_Icc_lt (x : \u211d) (hx : 0 < x) :\n    (\u2211 k in Finset.Icc 1 \u230ax\u230b\u208a, (1 : \u211d) / k) \u2264 \u2211 k in Finset.Icc 1 \u230ax\u230b\u208a, (1 : \u211d) / 1 + x := by\n  have : \u2200 k \u2208 Finset.Icc 1 \u230ax\u230b\u208a, (1 : \u211d) / k \u2264 (1 : \u211d) / 1 := by\n    intro k hk\n    rw [Finset.mem_Icc] at hk\n    rw [div_le_div_iff] <;> norm_cast <;> linarith\n  calc\n    (\u2211 k in Finset.Icc 1 \u230ax\u230b\u208a, (1 : \u211d) / k) \u2264 \u2211 k in Finset.Icc 1 \u230ax\u230b\u208a, (1 : \u211d) / 1 :=\n      Finset.sum_le_sum this\n    _ = \u2211 k in Finset.Icc 1 \u230ax\u230b\u208a, (1 : \u211d) / 1 := rfl\n    _ \u2264 \u2211 k in Finset.Icc 1 \u230ax\u230b\u208a, (1 : \u211d) / 1 + x := by linarith [hx]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sum_reciprocals_Icc_lt (x : \u211d) (hx : 0 < x) :\n    (\u2211 k in Finset.Icc 1 \u230ax\u230b\u208a, (1 : \u211d) / k) \u2264 \u2211 k in Finset.Icc 1 \u230ax\u230b\u208a, (1 : \u211d) / 1 + x := by\n  have h\u2081 : \u2200 k \u2208 Finset.Icc 1 \u230ax\u230b\u208a, (1 : \u211d) / k \u2264 1 := by\n    intro k hk\n    rw [Finset.mem_Icc] at hk\n    exact div_le_one_of_le (by norm_cast; linarith) (by norm_num)\n  calc\n    (\u2211 k in Finset.Icc 1 \u230ax\u230b\u208a, (1 : \u211d) / k) \u2264 \u2211 k in Finset.Icc 1 \u230ax\u230b\u208a, 1 := by exact Finset.sum_le_sum h\u2081\n    _ = \u230ax\u230b\u208a := by simp\n    _ \u2264 \u2211 k in Finset.Icc 1 \u230ax\u230b\u208a, (1 : \u211d) / 1 := by\n      simp\n    _ \u2264 \u2211 k in Finset.Icc 1 \u230ax\u230b\u208a, (1 : \u211d) / 1 + x := by linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^2 * b^2 * (b - c)) / (a + b) + (b^2 * c^2 * (c - a)) / (b + c) + (c^2 * a^2 * (a - b)) / (c + a) \u2265 0 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x^2 * y^2 * (y - z)) / (x + y) + (y^2 * z^2 * (z - x)) / (y + z) + (z^2 * x^2 * (x - y)) / (z + x) \u2265 0 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   (x^2 * y^2 * (y - z)) / (x + y) + (y^2 * z^2 * (z - x)) / (y + z) + (z^2 * x^2 * (x - y)) / (z + x) \u2265 0   := by\n  have : 0 < x * y := by positivity\n  have : 0 < y * z := by positivity\n  have : 0 < z * x := by positivity\n  have : 0 < (x + y) * (y + z) * (z + x) := by positivity\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y),\n    sq_nonneg (x * y + y * z), sq_nonneg (y * z + z * x), sq_nonneg (z * x + x * y),\n    mul_self_nonneg (x * y * (y - z)), mul_self_nonneg (y * z * (z - x)), mul_self_nonneg (z * x * (x - y))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   (x^2 * y^2 * (y - z)) / (x + y) + (y^2 * z^2 * (z - x)) / (y + z) + (z^2 * x^2 * (x - y)) / (z + x) \u2265 0   := by\n  have h\u2081 : 0 < x * y := by positivity\n  have h\u2082 : 0 < y * z := by positivity\n  have h\u2083 : 0 < z * x := by positivity\n  have h\u2084 : 0 < (x * y) * (y * z) := by positivity\n  have h\u2085 : 0 < (y * z) * (z * x) := by positivity\n  have h\u2086 : 0 < (z * x) * (x * y) := by positivity\n  have h\u2087 : 0 < x * y * (y * z) * (z * x) := by positivity\n  field_simp [h\u2081.ne', h\u2082.ne', h\u2083.ne', h\u2084.ne', h\u2085.ne', h\u2086.ne', h\u2087.ne']\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y),\n    mul_self_nonneg (x * y * (y - z)), mul_self_nonneg (y * z * (z - x)), mul_self_nonneg (z * x * (x - y))]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : 0 < a * b + b * c + c * a) : (a / (b + c) + b / (c + a)) * (b / (c + a) + c / (a + b)) * (c / (a + b) + a / (b + c)) + 8 * a * b * c / (a + b) / (b + c) / (c + a) \u2265 2 := by",
  "new": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : a ^ 2 + b ^ 2 + c ^ 2 + (a * b + b * c + c * a) * (b * c * a * (a + b + c)) / (a ^ 2 + b ^ 2 + c ^ 2) \u2265 a * b + b * c + c * a:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_of_three_nonneg (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) :\n      a ^ 2 + b ^ 2 + c ^ 2 + (a * b + b * c + c * a) * (b * c * a * (a + b + c)) / (a ^ 2 + b ^ 2 + c ^ 2) \u2265 a * b + b * c + c * a:= by\n  have h\u2080 : a ^ 2 + b ^ 2 + c ^ 2 \u2265 0 := by positivity\n  have h\u2081 : 0 \u2264 b * c * a * (a + b + c) := by positivity\n  have h\u2082 : (a * b + b * c + c * a) * (b * c * a * (a + b + c)) / (a ^ 2 + b ^ 2 + c ^ 2) \u2265 0 := by positivity\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_of_three_nonneg (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) :\n      a ^ 2 + b ^ 2 + c ^ 2 + (a * b + b * c + c * a) * (b * c * a * (a + b + c)) / (a ^ 2 + b ^ 2 + c ^ 2) \u2265 a * b + b * c + c * a:= by\n  have h : 0 \u2264 (a * b + b * c + c * a) * (b * c * a * (a + b + c)) / (a ^ 2 + b ^ 2 + c ^ 2) := by positivity\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption"
  ]
 },
 {
  "old": "(a b : \u2124) : a^4 + 4 * b^4 = (a^2 + 2 * b^2 - 2 * a * b) * (a^2 + 2 * b^2 + 2 * a * b) := by",
  "new": "(a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  by_cases h : Nat.Coprime a b\n  exact Or.inl h\n  exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  by_cases h : Nat.Coprime a b <;> simp [h]\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto\n  <;> tauto",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  apply em",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  by_cases h : Nat.Coprime a b <;> simp [h]\n  <;> aesop\n  <;> aesop\n  <;> aesop"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + (b + c) * (c + a) = 1) : a * b * c * (a + b + c) \u2264 (71 - 17 * Real.sqrt 17) / 32 \u2227 a * b^2 * c * (a + b + c) \u2264 (11 * Real.sqrt 33 - 63) / 18 := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b > c) (h : a + b + c = 1) : Real.sqrt (a * b) + Real.sqrt (b * c) + Real.sqrt (c * a) \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b > c) (h : a + b + c = 1) :\n  Real.sqrt (a * b) + Real.sqrt (b * c) + Real.sqrt (c * a) \u2264 1:= by\n  have h\u2081 : Real.sqrt (a * b) \u2264 (a + b) / 2 := by\n    nlinarith [sq_sqrt (mul_nonneg ha.le hb.le),\n      sq_nonneg (a - b),\n      sq_nonneg (a + b)]\n  have h\u2082 : Real.sqrt (b * c) \u2264 (b + c) / 2 := by\n    nlinarith [sq_sqrt (mul_nonneg hb.le hc.le),\n      sq_nonneg (b - c),\n      sq_nonneg (b + c)]\n  have h\u2083 : Real.sqrt (c * a) \u2264 (c + a) / 2 := by\n    nlinarith [sq_sqrt (mul_nonneg hc.le ha.le),\n      sq_nonneg (c - a),\n      sq_nonneg (c + a)]\n  nlinarith [h,\n    sq_nonneg (Real.sqrt (a * b) - Real.sqrt (b * c)),\n    sq_nonneg (Real.sqrt (b * c) - Real.sqrt (c * a)),\n    sq_nonneg (Real.sqrt (c * a) - Real.sqrt (a * b))]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b > c) (h : a + b + c = 1) :\n  Real.sqrt (a * b) + Real.sqrt (b * c) + Real.sqrt (c * a) \u2264 1:= by\n  have h\u2080 : 0 \u2264 a * b := by nlinarith\n  have h\u2081 : 0 \u2264 b * c := by nlinarith\n  have h\u2082 : 0 \u2264 c * a := by nlinarith\n  have h\u2083 : Real.sqrt (a * b) \u2264 (a + b) / 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith [sq_nonneg (a - b)]\n  have h\u2084 : Real.sqrt (b * c) \u2264 (b + c) / 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith [sq_nonneg (b - c)]\n  have h\u2085 : Real.sqrt (c * a) \u2264 (c + a) / 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 nlinarith\n    \u00b7 nlinarith [sq_nonneg (c - a)]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b > c) (h : a + b + c = 1) :\n  Real.sqrt (a * b) + Real.sqrt (b * c) + Real.sqrt (c * a) \u2264 1:= by\n  have h\u2080 : Real.sqrt (a * b) \u2264 (a + b) / 2 := by\n    nlinarith [sq_sqrt (mul_nonneg ha.le hb.le), sq_nonneg (a - b)]\n  have h\u2081 : Real.sqrt (b * c) \u2264 (b + c) / 2 := by\n    nlinarith [sq_sqrt (mul_nonneg hb.le hc.le), sq_nonneg (b - c)]\n  have h\u2082 : Real.sqrt (c * a) \u2264 (c + a) / 2 := by\n    nlinarith [sq_sqrt (mul_nonneg hc.le ha.le), sq_nonneg (c - a)]\n  nlinarith\n  <;> norm_num"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : 0 \u2264 a + b + c) (h : a^2 + b^2 + c^2 + a * b * c = 4) : -2 \u2264 a + b + c - a^2 \u2227 a + b + c - a^2 \u2264 (6 * Real.sqrt 3 + 1) / 4 \u2227 -2 \u2264 a + b + c - b^2 - c^2 \u2227 a + b + c - b^2 - c^2 \u2264 7 / 3 := by",
  "new": ": \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c = 3 \u2192 a ^ 2 + b ^ 2 + c ^ 2 + a * b * c \u2264 9 \u2227 a ^ 2 + b ^ 2 + c ^ 2 + a * b * c \u2265 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c = 3 \u2192\n    a ^ 2 + b ^ 2 + c ^ 2 + a * b * c \u2264 9 \u2227 a ^ 2 + b ^ 2 + c ^ 2 + a * b * c \u2265 4:= by\n  rintro a b c \u27e8h\u2081, h\u2082, h\u2083, h\u2084\u27e9\n  constructor\n  \u00b7 nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c),\n      mul_pos h\u2081 h\u2082, mul_pos h\u2081 h\u2083, mul_pos h\u2082 h\u2083]\n  \u00b7 nlinarith [sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1),\n      mul_pos h\u2081 h\u2082, mul_pos h\u2081 h\u2083, mul_pos h\u2082 h\u2083]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c = 3 \u2192\n    a ^ 2 + b ^ 2 + c ^ 2 + a * b * c \u2264 9 \u2227 a ^ 2 + b ^ 2 + c ^ 2 + a * b * c \u2265 4:= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have : a ^ 2 + b ^ 2 + c ^ 2 + a * b * c \u2264 9 := by\n    nlinarith [sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1),\n      sq_nonneg (a + b + c - 3)]\n  have : a ^ 2 + b ^ 2 + c ^ 2 + a * b * c \u2265 4 := by\n    nlinarith [sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1),\n      sq_nonneg (a + b + c - 3)]\n  tauto"
  ]
 },
 {
  "old": "(q : \u2124) (h : \u2203 a b : \u2124, q = a^2 + b^2) : \u2203 a b : \u2124, 2 * q = a^2 + b^2 \u2227 \u2203 a b : \u2124, 5 * q = a^2 + b^2 := by",
  "new": "(x y : \u2115) (h : x ^ 2 + y ^ 2 \u2265 2) : Nat.Coprime x y \u2228 \u00ac Nat.Coprime x y := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2265 2) :  Nat.Coprime x y \u2228 \u00ac Nat.Coprime x y := by\n  by_cases h\u2080 : Nat.Coprime x y\n  exacts [Or.inl h\u2080, Or.inr h\u2080]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2265 2) :  Nat.Coprime x y \u2228 \u00ac Nat.Coprime x y := by\n  by_cases hxy : Nat.Coprime x y\n  exact Or.inl hxy\n  exact Or.inr hxy",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2265 2) :  Nat.Coprime x y \u2228 \u00ac Nat.Coprime x y := by\n  by_cases h\u2081 : Nat.Coprime x y <;> simp_all\n  <;> by_contra! h\u2082\n  <;> simp_all [Nat.coprime_iff_gcd_eq_one, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;> nlinarith"
  ]
 },
 {
  "old": "(p : \u2115) (hp : 5 \u2264 p) (hp1 : p.Prime) (A B C : Finset \u2115) (hA : A \u2286 Finset.Ico 1 (p-1)) (hB : B \u2286 Finset.Ico 1 (p-1)) (hC : C \u2286 Finset.Ico 1 (p-1)) (hA1 : A.card = (p-1)/3) (hB1 : B.card = (p-1)/3) (hC1 : C.card = (p-1)/3) : \u2203 x y z : \u2115, x \u2208 A \u2227 y \u2208 B \u2227 z \u2208 C \u2227 x + y \u2261 z [ZMOD p] := by",
  "new": "(p : \u2115) {m : \u2115} (hm : 1 < m) (hp : p.Prime) (hpm : \u00acp \u2223 m) : p.Coprime m \u2228 p \u2223 m.gcd (m + 1):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_coprime_of_prime_dvd_not_dvd' (p : \u2115) {m : \u2115} (hm : 1 < m) (hp : p.Prime) (hpm : \u00acp \u2223 m) :\n  p.Coprime m \u2228 p \u2223 m.gcd (m + 1):= by\n  refine' or_iff_not_imp_right.mpr fun h \u21a6 _\n  rw [Nat.Prime.coprime_iff_not_dvd hp]\n  simp_all",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_coprime_of_prime_dvd_not_dvd' (p : \u2115) {m : \u2115} (hm : 1 < m) (hp : p.Prime) (hpm : \u00acp \u2223 m) :\n  p.Coprime m \u2228 p \u2223 m.gcd (m + 1):= by\n  simp [hp.coprime_iff_not_dvd, hpm, Nat.dvd_gcd_iff]\n  <;> omega\n  <;> simp [hm]\n  <;> omega\n  <;> simp [Nat.gcd_zero_left]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_coprime_of_prime_dvd_not_dvd' (p : \u2115) {m : \u2115} (hm : 1 < m) (hp : p.Prime) (hpm : \u00acp \u2223 m) :\n  p.Coprime m \u2228 p \u2223 m.gcd (m + 1):= by\n  cases' hp.eq_two_or_odd with hp\u2082 hp\u2082\n  <;> simp_all [Nat.Prime.coprime_iff_not_dvd, Nat.gcd_eq_left, Nat.dvd_gcd_iff, Nat.gcd_add_self_right]\n  <;> omega\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_coprime_of_prime_dvd_not_dvd' (p : \u2115) {m : \u2115} (hm : 1 < m) (hp : p.Prime) (hpm : \u00acp \u2223 m) :\n  p.Coprime m \u2228 p \u2223 m.gcd (m + 1):= by\n  left\n  simp_all [Nat.coprime_iff_gcd_eq_one, Nat.Prime.coprime_iff_not_dvd hp]"
  ]
 },
 {
  "old": "(x y : \u211d) : (x / Real.sqrt (y ^ 2 + 1) + y / Real.sqrt (x ^ 2 + 1)) ^ 2 \u2264 (x ^ 2 + y ^ 2) * (1 / (x ^ 2 + 1) + 1 / (y ^ 2 + 1)) := by",
  "new": "(a b : \u211d) : a ^ 2 / Real.sqrt ((a ^ 2 + 1) * (b ^ 2 + 1)) + b ^ 2 / Real.sqrt ((a ^ 2 + 1) * (b ^ 2 + 1)) \u2264 abs (a ^ 2 + b ^ 2) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_aux1 (a b : \u211d) :\n      a ^ 2 / Real.sqrt ((a ^ 2 + 1) * (b ^ 2 + 1)) + b ^ 2 / Real.sqrt ((a ^ 2 + 1) * (b ^ 2 + 1)) \u2264 abs (a ^ 2 + b ^ 2) := by\n  have h\u2080 : a ^ 2 / Real.sqrt ((a ^ 2 + 1) * (b ^ 2 + 1)) + b ^ 2 / Real.sqrt ((a ^ 2 + 1) * (b ^ 2 + 1)) \u2264 a ^ 2 / Real.sqrt ((a ^ 2 + 1) * (b ^ 2 + 1)) + b ^ 2 / Real.sqrt ((a ^ 2 + 1) * (b ^ 2 + 1)) := by rfl\n  have h\u2081 : a ^ 2 / Real.sqrt ((a ^ 2 + 1) * (b ^ 2 + 1)) \u2264 a ^ 2 / 1 := by\n    gcongr\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2082 : b ^ 2 / Real.sqrt ((a ^ 2 + 1) * (b ^ 2 + 1)) \u2264 b ^ 2 / 1 := by\n    gcongr\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2083 : a ^ 2 / 1 + b ^ 2 / 1 \u2264 abs (a ^ 2 + b ^ 2) := by\n    simp only [div_one]\n    exact le_abs_self _\n  linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_aux1 (a b : \u211d) :\n      a ^ 2 / Real.sqrt ((a ^ 2 + 1) * (b ^ 2 + 1)) + b ^ 2 / Real.sqrt ((a ^ 2 + 1) * (b ^ 2 + 1)) \u2264 abs (a ^ 2 + b ^ 2) := by\n  have h\u2080 : Real.sqrt ((a ^ 2 + 1) * (b ^ 2 + 1)) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2081 : a ^ 2 / Real.sqrt ((a ^ 2 + 1) * (b ^ 2 + 1)) \u2264 a ^ 2 := by\n    exact div_le_self (by positivity) (by nlinarith)\n  have h\u2082 : b ^ 2 / Real.sqrt ((a ^ 2 + 1) * (b ^ 2 + 1)) \u2264 b ^ 2 := by\n    exact div_le_self (by positivity) (by nlinarith)\n  have h\u2083 : a ^ 2 + b ^ 2 \u2264 abs (a ^ 2 + b ^ 2) := by\n    exact le_abs_self (a ^ 2 + b ^ 2)\n  linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"
  ]
 },
 {
  "old": "(x y z : \u2115) (h\u2081 : x^z - y^z = x + y) : x = y + 1 := by",
  "new": "{p a b : \u2115} (hp : p.Prime) (h : p \u2223 a ^ b) : p \u2223 a \u2228 a = p ^ b:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_prime_dvd_pow' {p a b : \u2115} (hp : p.Prime) (h : p \u2223 a ^ b) :\n        p \u2223 a \u2228 a = p ^ b:= by\n  have h1 := Nat.Prime.dvd_of_dvd_pow hp h\n  exact Or.inl h1",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_prime_dvd_pow' {p a b : \u2115} (hp : p.Prime) (h : p \u2223 a ^ b) :\n        p \u2223 a \u2228 a = p ^ b:= by\n  have h\u2080 : p \u2223 a ^ b \u2192 p \u2223 a \u2228 a = p ^ b := by\n    intro h\n    apply or_iff_not_imp_right.mpr\n    intro h\u2081\n    have h\u2082 : p \u2223 a := by\n      apply hp.dvd_of_dvd_pow h\n    exact h\u2082\n  apply h\u2080\n  exact h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_prime_dvd_pow' {p a b : \u2115} (hp : p.Prime) (h : p \u2223 a ^ b) :\n        p \u2223 a \u2228 a = p ^ b:= by\n  have h1 := hp.dvd_of_dvd_pow h\n  exact Or.inl h1",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_prime_dvd_pow' {p a b : \u2115} (hp : p.Prime) (h : p \u2223 a ^ b) :\n        p \u2223 a \u2228 a = p ^ b:= by\n  have h\u2081 := hp.dvd_of_dvd_pow h\n  exact Or.inl h\u2081"
  ]
 },
 {
  "old": "(a b c : \u211d) : (b + c) ^ 4 + (c + a) ^ 4 + (a + b) ^ 4 \u2265 (4 / 7) * (a ^ 4 + b ^ 4 + c ^ 4 + (a + b + c) ^ 4) := by",
  "new": "(a b c d : \u211d) (h\u2081 : a + b + c + d = 1) (h\u2082 : a * b + b * c + c * d + d * a = 0) : a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * d ^ 2 + d ^ 2 * a ^ 2 \u2265 4 * a * b * c * d:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_step10 (a b c d : \u211d)  (h\u2081 : a + b + c + d = 1)  (h\u2082 : a * b + b * c + c * d + d * a = 0) :\n  a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * d ^ 2 + d ^ 2 * a ^ 2 \u2265 4 * a * b * c * d:= by\n  have h\u2083 : 0 \u2264 (a * b - c * d) ^ 2 + (b * c - d * a) ^ 2 + (c * d - a * b) ^ 2 := by nlinarith\n  have h\u2084 : 0 \u2264 (a * c - b * d) ^ 2 + (b * d - a * c) ^ 2 + (c * a - d * b) ^ 2 := by nlinarith\n  nlinarith\n  <;> try norm_num\n  <;> nlinarith\n  <;> norm_num\n  <;> nlinarith\n  <;> norm_num\n  <;> nlinarith\n  <;> norm_num\n  <;> nlinarith\n  <;> norm_num\n  <;> nlinarith\n  <;> norm_num\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_step10 (a b c d : \u211d)  (h\u2081 : a + b + c + d = 1)  (h\u2082 : a * b + b * c + c * d + d * a = 0) :\n  a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * d ^ 2 + d ^ 2 * a ^ 2 \u2265 4 * a * b * c * d:= by\n  nlinarith [sq_nonneg (a * b + c * d), sq_nonneg (a * d - b * c), sq_nonneg (a * c + b * d), sq_nonneg (a * b - c * d),\n    sq_nonneg (a * d + b * c)]"
  ]
 },
 {
  "old": "(a b c : \u211d) : (a + 13 * b - 5 * c) * (b - c) ^ 2 + (b + 13 * c - 5 * a) * (c - a) ^ 2 + (c + 13 * a - 5 * b) * (a - b) ^ 2 \u2265 0 := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a + 13 * b - 5 * c) * (b - c) ^ 2 + (b + 13 * c - 5 * a) * (c - a) ^ 2 + (c + 13 * a - 5 * b) * (a - b) ^ 2 \u2265 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a + 13 * b - 5 * c) * (b - c) ^ 2 + (b + 13 * c - 5 * a) * (c - a) ^ 2 + (c + 13 * a - 5 * b) * (a - b) ^ 2 \u2265 0:= by\n  cases' le_total a b with h h <;>\n  cases' le_total b c with h' h' <;>\n  cases' le_total c a with h'' h'' <;>\n  nlinarith [sq_nonneg (a - b + c - b), sq_nonneg (b - c + a - c), sq_nonneg (c - a + b - a)]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith"
  ]
 },
 {
  "old": "(x y : \u2115) : \u00ac (x^2 + 1 \u2223 y \u2227 y^3 + 1 \u2223 x^2) := by",
  "new": "(x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y):= by\n  cases em (x.Coprime y) with\n  | inl h => exact Or.inl h\n  | inr h => exact Or.inr h\n  <;> rfl\n  <;> simp_all",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y):= by\n  by_cases h : x.Coprime y\n  exact Or.inl h\n  exact Or.inr h"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a + 1) * (2 * b + 1) * (c + 1) / ((a ^ 2 - a + 1) * (2 * b ^ 2 - b + 1) * (c ^ 2 - c + 1)) \u2264 (2 * (7 + 4 * Real.sqrt 3)) / 3 := by",
  "new": ": Real.sqrt (Real.sqrt 3 + 1) + Real.sqrt (7 + 4 * Real.sqrt 3) \u2264 2 * Real.sqrt (53 + 20 * Real.sqrt 3) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt 3 + 1) + Real.sqrt (7 + 4 * Real.sqrt 3) \u2264 2 * Real.sqrt (53 + 20 * Real.sqrt 3)  := by\n  have h\u2081 : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg _\n  have h\u2082 : 0 \u2264 53 + 20 * Real.sqrt 3 := by positivity\n  have h\u2083 : 0 \u2264 Real.sqrt (53 + 20 * Real.sqrt 3) := Real.sqrt_nonneg _\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 53 + 20 * Real.sqrt 3 from by positivity),\n    sq_sqrt (show (0 : \u211d) \u2264 3 from by positivity),\n    sq_sqrt (show (0 : \u211d) \u2264 7 + 4 * Real.sqrt 3 from by positivity),\n    sq_sqrt (show (0 : \u211d) \u2264 Real.sqrt 3 + 1 from by positivity),\n    sq_nonneg (Real.sqrt (Real.sqrt 3 + 1) - Real.sqrt (7 + 4 * Real.sqrt 3))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt 3 + 1) + Real.sqrt (7 + 4 * Real.sqrt 3) \u2264 2 * Real.sqrt (53 + 20 * Real.sqrt 3)  := by\n  have h\u2081 : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg 3\n  have h\u2082 : 0 \u2264 Real.sqrt (Real.sqrt 3 + 1) := Real.sqrt_nonneg (Real.sqrt 3 + 1)\n  have h\u2083 : 0 \u2264 Real.sqrt (7 + 4 * Real.sqrt 3) := Real.sqrt_nonneg (7 + 4 * Real.sqrt 3)\n  have h\u2084 : 0 \u2264 Real.sqrt (53 + 20 * Real.sqrt 3) := Real.sqrt_nonneg (53 + 20 * Real.sqrt 3)\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 by norm_num),\n    sq_sqrt (show (0 : \u211d) \u2264 Real.sqrt 3 + 1 by positivity),\n    sq_sqrt (show (0 : \u211d) \u2264 7 + 4 * Real.sqrt 3 by positivity),\n    sq_sqrt (show (0 : \u211d) \u2264 53 + 20 * Real.sqrt 3 by positivity),\n    sq_nonneg (Real.sqrt 3 - 1),\n    sq_nonneg (Real.sqrt (Real.sqrt 3 + 1) - Real.sqrt (7 + 4 * Real.sqrt 3))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt 3 + 1) + Real.sqrt (7 + 4 * Real.sqrt 3) \u2264 2 * Real.sqrt (53 + 20 * Real.sqrt 3)  := by\n  have h\u2081 : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg _\n  have h\u2082 : 0 \u2264 53 + 20 * Real.sqrt 3 := by positivity\n  have h\u2083 : 0 \u2264 2 := by positivity\n  have h\u2084 : 0 \u2264 2 * Real.sqrt 3 := by positivity\n  apply le_of_pow_le_pow_left two_ne_zero (by positivity)\n  nlinarith [sq_sqrt (show 0 \u2264 3 by positivity), sq_sqrt (show 0 \u2264 53 + 20 * Real.sqrt 3 by positivity),\n    sq_sqrt (show 0 \u2264 7 + 4 * Real.sqrt 3 by positivity),\n    sq_sqrt (show 0 \u2264 Real.sqrt 3 + 1 by positivity),\n    sq_nonneg (Real.sqrt (7 + 4 * Real.sqrt 3) - Real.sqrt (Real.sqrt 3 + 1))]"
  ]
 },
 {
  "old": "(n : \u211d) (hn : 0 < n) : (1 + 1 / n)^n < 3 := by",
  "new": "(n : \u2115) : \u2211 k in Finset.range n, (1 : \u211d) / (k + 1) \u2265 n / (n + 1) - 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem euler_mascheroni_inequality (n : \u2115) : \n     \u2211 k in Finset.range n, (1 : \u211d) / (k + 1) \u2265 n / (n + 1) - 1:= by\n  induction' n with n hn\n  norm_num\n  rw [Finset.sum_range_succ, Nat.cast_succ]\n  apply le_trans _ (add_le_add_right hn _)\n  norm_num\n  apply le_of_sub_nonneg\n  field_simp\n  ring_nf\n  norm_cast\n  ring_nf\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem euler_mascheroni_inequality (n : \u2115) : \n     \u2211 k in Finset.range n, (1 : \u211d) / (k + 1) \u2265 n / (n + 1) - 1:= by\n  induction' n with n ih\n  norm_num\n  cases n\n  norm_num [Finset.sum_range_succ]\n  simp_all [Finset.sum_range_succ, Nat.cast_add, Nat.cast_one, add_comm, add_left_comm, add_assoc]\n  apply le_of_sub_nonneg\n  field_simp\n  ring_nf\n  positivity"
  ]
 },
 {
  "old": "{a b c : \u211d} (ha : a \u2260 0) (hb : b \u2260 0) (hc : c \u2260 0) (hab : a + b \u2260 0) (hbc : b + c \u2260 0) (hca : a + c \u2260 0) : (1 - (a^2 + b^2 + c^2) / (a + b) / (a + c)) * (b - c)^2 + (1 - (a^2 + b^2 + c^2) / (b + a) / (b + c)) * (c - a)^2 + (1 - (a^2 + b^2 + c^2) / (c + b) / (c + a)) * (a - b)^2 \u2265 0 := by",
  "new": "(ha : a \u2260 0) (hb : b \u2260 0) (hab : a + b \u2260 0) : (1 - (a ^ 2 + b ^ 2) / (a + b) / (b + a)) * (b - a) ^ 2 \u2265 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (ha : a \u2260 0) (hb : b \u2260 0) (hab : a + b \u2260 0) : (1 - (a ^ 2 + b ^ 2) / (a + b) / (b + a)) * (b - a) ^ 2 \u2265 0:= by\n  have : (a + b) ^ 2 \u2260 0 := by positivity\n  have h\u2081 : (a ^ 2 + b ^ 2) / (a + b) / (b + a) \u2264 1 := by\n    rw [Nat.div_div_eq_div_mul]\n    apply Nat.div_le_of_le_mul\n    ring_nf\n    nlinarith\n  have h\u2082 : (1 - (a ^ 2 + b ^ 2) / (a + b) / (b + a)) \u2265 0 := by\n    linarith\n  nlinarith\n  <;> assumption\n  <;> try norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (ha : a \u2260 0) (hb : b \u2260 0) (hab : a + b \u2260 0) : (1 - (a ^ 2 + b ^ 2) / (a + b) / (b + a)) * (b - a) ^ 2 \u2265 0:= by\n  have h\u2081 : (a ^ 2 + b ^ 2) / (a + b) / (b + a) \u2265 0 := by positivity\n  have h\u2082 : 1 - (a ^ 2 + b ^ 2) / (a + b) / (b + a) \u2265 0 := by linarith\n  have h\u2083 : (b - a) ^ 2 \u2265 0 := by positivity\n  have h\u2084 : (1 - (a ^ 2 + b ^ 2) / (a + b) / (b + a)) * (b - a) ^ 2 \u2265 0 := by positivity\n  exact h\u2084\n  <;> simp [ha, hb, hab, h\u2081, h\u2082, h\u2083, h\u2084]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (ha : a \u2260 0) (hb : b \u2260 0) (hab : a + b \u2260 0) : (1 - (a ^ 2 + b ^ 2) / (a + b) / (b + a)) * (b - a) ^ 2 \u2265 0:= by\n  cases' (le_total 0 (a - b)) with h h <;>\n  field_simp [hab, hb, ha, h] <;>\n  ring_nf <;>\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (ha : a \u2260 0) (hb : b \u2260 0) (hab : a + b \u2260 0) : (1 - (a ^ 2 + b ^ 2) / (a + b) / (b + a)) * (b - a) ^ 2 \u2265 0:= by\n  refine' mul_nonneg _ (sq_nonneg (b - a))\n  by_cases h : b + a = 0 <;> field_simp [h, ha, hb, hab] <;>\n  ring_nf <;>\n  positivity"
  ]
 },
 {
  "old": "(A B C : \u211d) (hx: A > 0 \u2227 B > 0 \u2227 C > 0) (hab : A + B + C = \u03c0) : (cos A + cos B + cos C) ^ 2 \u2265 1 + 10 * cos A * cos B * cos C := by",
  "new": ": Real.sqrt (Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + b ^ 2)) + Real.sqrt (Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + b ^ 2)) + Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + b ^ 2) \u2265 2 + Real.sqrt (2 * (Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + b ^ 2))):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + b ^ 2)) +\n        Real.sqrt (Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + b ^ 2)) +\n        Real.sqrt (1 + a ^ 2) +\n        Real.sqrt (1 + b ^ 2) \u2265\n      2 + Real.sqrt (2 * (Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + b ^ 2))):= by\n  have h\u2081 : Real.sqrt (1 + a ^ 2) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2082 : Real.sqrt (1 + b ^ 2) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2083 : Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + b ^ 2) \u2265 2 := by\n    nlinarith [sq_sqrt (show 0 \u2264 1 + a ^ 2 from by nlinarith),\n      sq_sqrt (show 0 \u2264 1 + b ^ 2 from by nlinarith)]\n  have h\u2084 : Real.sqrt (Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + b ^ 2)) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_sqrt (show 0 \u2264 Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + b ^ 2) from by positivity)]\n  nlinarith [sq_sqrt (show 0 \u2264 2 * (Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + b ^ 2)) from by positivity)]\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + b ^ 2)) +\n        Real.sqrt (Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + b ^ 2)) +\n        Real.sqrt (1 + a ^ 2) +\n        Real.sqrt (1 + b ^ 2) \u2265\n      2 + Real.sqrt (2 * (Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + b ^ 2))):= by\n  have h\u2080 : Real.sqrt (1 + a ^ 2) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2081 : Real.sqrt (1 + b ^ 2) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h\u2082 : Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + b ^ 2) \u2265 2 := by\n    nlinarith [Real.sq_sqrt (show (0 : \u211d) \u2264 1 + a ^ 2 from by positivity),\n      Real.sq_sqrt (show (0 : \u211d) \u2264 1 + b ^ 2 from by positivity)]\n  have h\u2083 : Real.sqrt (Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + b ^ 2)) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  nlinarith [Real.sq_sqrt (show (0 : \u211d) \u2264 Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + b ^ 2) from by positivity),\n    Real.sq_sqrt (show (0 : \u211d) \u2264 2 * (Real.sqrt (1 + a ^ 2) + Real.sqrt (1 + b ^ 2)) from by positivity)]\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"
  ]
 },
 {
  "old": ": \u2211 k in Finset.Icc (1 : \u2115) 24, (1 / Real.sqrt (4 * k + 1)) > \u221a25 - \u221a24 + \u221a24 - \u221a23 + \u221a23 - \u221a22 + \u221a22 - \u221a21 + \u221a21 - \u221a20 + \u221a20 - \u221a19 + \u221a19 - \u221a18 + \u221a18 - \u221a17 + \u221a17 - \u221a16 + \u221a16 - \u221a15 + \u221a15 - \u221a14 + \u221a14 - \u221a13 + \u221a13 - \u221a12 + \u221a12 - \u221a11 + \u221a11 - \u221a10 + \u221a10 - \u221a9 + \u221a9 - \u221a8 + \u221a8 - \u221a7 + \u221a7 - \u221a6 + \u221a6 - \u221a5 + \u221a5 - \u221a4 + \u221a4 - \u221a3 + \u221a3 - \u221a2 + \u221a2 - \u221a1 := by",
  "new": ": \u2211 k in Finset.Icc (1 : \u2115) 24, (1 / Real.sqrt (4 * k + 1)) > 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test :\n   \u2211 k in Finset.Icc (1 : \u2115) 24, (1 / Real.sqrt (4 * k + 1))  > 0:= by\n  apply Finset.sum_pos\n  intro x hx\n  simp_all only [Finset.mem_Icc, Nat.succ_le_iff]\n  apply div_pos\n  all_goals norm_num\n  all_goals\n    nlinarith [Real.sqrt_nonneg (4 * x + 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test :\n   \u2211 k in Finset.Icc (1 : \u2115) 24, (1 / Real.sqrt (4 * k + 1))  > 0:= by\n  refine' Finset.sum_pos (fun k _ => by positivity) \u27e81, by norm_num [Finset.mem_Icc]\u27e9\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop"
  ]
 },
 {
  "old": "(k : \u211d) (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 1) : a * Real.sqrt (1 - k * b * c) + b * Real.sqrt (1 - k * a * c) + c * Real.sqrt (1 - k * a * b) \u2265 Real.sqrt (9 - k) / 3 := by",
  "new": "(x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 1) : Real.sqrt (1 - 3 * x * y * z) \u2265 Real.sqrt (1 - x ^ 2) / 3 - (y + z) / 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 1) :\n     Real.sqrt (1 - 3 * x * y * z) \u2265 Real.sqrt (1 - x ^ 2) / 3 - (y + z) / 3:= by\n  have h\u2080 : 0 \u2264 x * y := by positivity\n  have h\u2081 : 0 \u2264 x * y * z := by positivity\n  have h\u2082 : 0 \u2264 x * y + y * z + z * x := by positivity\n  have h\u2083 : Real.sqrt (1 - 3 * x * y * z) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2084 : Real.sqrt (1 - x ^ 2) \u2265 0 := Real.sqrt_nonneg _\n  nlinarith [sq_sqrt (show 0 \u2264 1 - 3 * x * y * z from by\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]),\n    sq_sqrt (show 0 \u2264 1 - x ^ 2 from by nlinarith),\n    mul_self_nonneg (x - y),\n    mul_self_nonneg (x - z),\n    mul_self_nonneg (y - z)]\n  <;> linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 1) :\n     Real.sqrt (1 - 3 * x * y * z) \u2265 Real.sqrt (1 - x ^ 2) / 3 - (y + z) / 3:= by\n  have h\u2080 : 0 \u2264 y * z := by positivity\n  have h\u2081 : 0 \u2264 x * y := by positivity\n  have h\u2082 : 0 \u2264 x * z := by positivity\n  have h\u2083 : Real.sqrt (1 - 3 * x * y * z) \u2265 0 := Real.sqrt_nonneg (1 - 3 * x * y * z)\n  have h\u2084 : Real.sqrt (1 - x ^ 2) \u2265 0 := Real.sqrt_nonneg (1 - x ^ 2)\n  nlinarith [sq_sqrt (show 0 \u2264 1 - x ^ 2 from by nlinarith), sq_sqrt (show 0 \u2264 1 - 3 * x * y * z from by nlinarith),\n    mul_self_nonneg (x - y), mul_self_nonneg (x - z), mul_self_nonneg (y - z)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 1) :\n     Real.sqrt (1 - 3 * x * y * z) \u2265 Real.sqrt (1 - x ^ 2) / 3 - (y + z) / 3:= by\n  have h\u2081 : 0 \u2264 (x + y + z) ^ 2 := by positivity\n  have h\u2082 : 0 \u2264 (x - y) ^ 2 + (x - z) ^ 2 + (y - z) ^ 2 := by positivity\n  have h\u2083 : 0 \u2264 Real.sqrt (1 - x ^ 2) := by\n    apply Real.sqrt_nonneg\n  have h\u2084 : 0 \u2264 Real.sqrt (1 - 3 * x * y * z) := by\n    apply Real.sqrt_nonneg\n  nlinarith [sq_sqrt (show 0 \u2264 1 - x ^ 2 from by nlinarith),\n    sq_sqrt (show 0 \u2264 1 - 3 * x * y * z from by nlinarith)]\n  <;> field_simp [h]\n  <;> nlinarith\n  <;> field_simp [h]\n  <;> nlinarith\n  <;> field_simp [h]\n  <;> nlinarith\n  <;> field_simp [h]\n  <;> nlinarith\n  <;> field_simp [h]\n  <;> nlinarith"
  ]
 },
 {
  "old": "(n : \u2115) : n \u2223 2 ^ n + 2 \u2192 n % 2 = 0 \u2228 n = 1 := by",
  "new": "(p : \u2115) (hp : p.Prime) (n : \u2115) : Nat.Coprime p n \u2228 p \u2223 n := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (hp : p.Prime) (n : \u2115) : Nat.Coprime p n \u2228 p \u2223 n := by\n  apply or_iff_not_imp_right.2\n  intro h\n  simpa [hp.coprime_iff_not_dvd.symm] using h"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x^3 * Real.sqrt (1 - y) = Real.sqrt (1 - z) \u2227 y^3 * Real.sqrt (1 - x) = z^3) : x = 0 \u2227 y = 1 \u2227 z = 1 := by",
  "new": "{a b : \u2115} (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 a = 0 \u2227 b = 1 \u2228 a = 1 \u2227 b = 0 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_mul_eq_one {a b : \u2115} (h : a * b = 1) :\n    a = 1 \u2227 b = 1 \u2228 a = 0 \u2227 b = 1 \u2228 a = 1 \u2227 b = 0 := by\n  have h' : a * b = 1 := h\n  rw [eq_comm]\n  aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_mul_eq_one {a b : \u2115} (h : a * b = 1) :\n    a = 1 \u2227 b = 1 \u2228 a = 0 \u2227 b = 1 \u2228 a = 1 \u2227 b = 0 := by\n  rcases Nat.eq_zero_or_pos a with h\u2080 | h\u2080\n  all_goals rcases Nat.eq_zero_or_pos b with h\u2081 | h\u2081\n  all_goals simp_all [Nat.mul_eq_zero, Nat.eq_one_of_mul_eq_one_left]\n  <;> tauto",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_mul_eq_one {a b : \u2115} (h : a * b = 1) :\n    a = 1 \u2227 b = 1 \u2228 a = 0 \u2227 b = 1 \u2228 a = 1 \u2227 b = 0 := by\n  cases' b with b\n  all_goals\n    cases' a with a\n    all_goals simp_all\n  all_goals omega\n  all_goals omega\n  all_goals omega\n  all_goals omega"
  ]
 },
 {
  "old": "{a b c : \u211d} (ha : a \u2260 0 \u2227 b \u2260 0 \u2227 c \u2260 0) (hab : a + b + c = 0) : (a - b) ^ 2 * (b - c) ^ 2 * (c - a) ^ 2 / (4 * (a ^ 2 + b * c) * (b ^ 2 + c * a) * (c ^ 2 + a * b)) + (a * b * (a - b) ^ 2 * (a * b + 4 * c ^ 2) + b * c * (b - c) ^ 2 * (b * c + 4 * a ^ 2) + c * a * (c - a) ^ 2 * (c * a + 4 * b ^ 2)) / (2 * (a ^ 2 + b * c) * (b ^ 2 + c * a) * (c ^ 2 + a * b)) + 12 * a ^ 2 * b ^ 2 * c ^ 2 / ((a ^ 2 + b * c) * (b ^ 2 + c * a) * (c ^ 2 + a * b)) \u2265 0 := by",
  "new": "(ha : a \u2260 0) (hb : b \u2260 0) (hc : c \u2260 0) (habc : a * b * c = 1) : a * b + b * c + c * a \u2260 0 \u2192 1 / (a * b) + 1 / (b * c) + 1 / (c * a) \u2265 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (ha : a \u2260 0) (hb : b \u2260 0) (hc : c \u2260 0) (habc : a * b * c = 1) :\n       a * b + b * c + c * a \u2260 0 \u2192  1 / (a * b) + 1 / (b * c) + 1 / (c * a) \u2265 3:= by\n  intro h\n  have h\u2081 : a \u2260 0 := by intro hh; simp_all\n  have h\u2082 : b \u2260 0 := by intro hh; simp_all\n  have h\u2083 : c \u2260 0 := by intro hh; simp_all\n  have h\u2084 : a * b \u2260 0 := mul_ne_zero h\u2081 h\u2082\n  have h\u2085 : b * c \u2260 0 := mul_ne_zero h\u2082 h\u2083\n  have h\u2086 : c * a \u2260 0 := mul_ne_zero h\u2083 h\u2081\n  simp_all [one_div]\n  <;> linarith [sq_nonneg (a * b + b * c + c * a), sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (ha : a \u2260 0) (hb : b \u2260 0) (hc : c \u2260 0) (habc : a * b * c = 1) :\n       a * b + b * c + c * a \u2260 0 \u2192  1 / (a * b) + 1 / (b * c) + 1 / (c * a) \u2265 3:= by\n  intro h_nonzero\n  ring_nf\n  cases' Nat.eq_zero_or_pos a with ha ha <;> cases' Nat.eq_zero_or_pos b with hb hb <;> cases' Nat.eq_zero_or_pos c with hc hc <;>\n  simp_all [Nat.div_eq_of_lt, Nat.div_eq_of_lt, Nat.div_eq_of_lt] <;>\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (ha : a \u2260 0) (hb : b \u2260 0) (hc : c \u2260 0) (habc : a * b * c = 1) :\n       a * b + b * c + c * a \u2260 0 \u2192  1 / (a * b) + 1 / (b * c) + 1 / (c * a) \u2265 3:= by\n  intro h_sum\n  cases' lt_or_gt_of_ne ha with ha_left ha_right <;>\n    cases' lt_or_gt_of_ne hb with hb_left hb_right <;>\n    cases' lt_or_gt_of_ne hc with hc_left hc_right <;>\n    simp_all [one_div, mul_neg, mul_pos, add_pos, add_neg, add_neg_cancel_left]\n  all_goals nlinarith [habc]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : 1 < (a + b + c) * (a * c + b * c + a * b) / (a + c) / (b + c) / (a + b) \u2227 (a + b + c) * (a * c + b * c + a * b) / (a + c) / (b + c) / (a + b) \u2264 9 / 8 := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a + b) * (b + c) * (c + a) * (a * b + b * c + c * a) \u2264 (a + b + c) * (a * b + b * c + c * a) * (b + c) * (c + a):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a + b) * (b + c) * (c + a) * (a * b + b * c + c * a) \u2264 (a + b + c) * (a * b + b * c + c * a) * (b + c) * (c + a):= by\n  ring_nf\n  apply le_of_sub_nonneg\n  ring_nf\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a + b) * (b + c) * (c + a) * (a * b + b * c + c * a) \u2264 (a + b + c) * (a * b + b * c + c * a) * (b + c) * (c + a):= by\n  apply le_of_sub_nonneg\n  ring_nf\n  positivity\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a + b) * (b + c) * (c + a) * (a * b + b * c + c * a) \u2264 (a + b + c) * (a * b + b * c + c * a) * (b + c) * (c + a):= by\n  apply le_of_sub_nonneg\n  ring_nf\n  positivity\n  <;> nlinarith [mul_pos ha hb, mul_pos hb hc, mul_pos ha hc]\n  <;> nlinarith [mul_pos ha hb, mul_pos hb hc, mul_pos ha hc]\n  <;> nlinarith [mul_pos ha hb, mul_pos hb hc, mul_pos ha hc]\n  <;> nlinarith [mul_pos ha hb, mul_pos hb hc, mul_pos ha hc]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : 3 / 4 \u2264 a / (2 * b) + b / (4 * c) + c / (8 * a) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : x ^ 2 + y ^ 2 + z ^ 2 + 2 * x * y * z \u2265 2 * x * y * (x + y + z) / (x + y + z):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   x ^ 2 + y ^ 2 + z ^ 2 + 2 * x * y * z \u2265 2 * x * y * (x + y + z) / (x + y + z):= by\n  have h : 0 < x + y + z := by linarith\n  have h\u2082 : 0 < x * y := by positivity\n  have h\u2083 : 0 < x * y * z := by positivity\n  have h\u2084 : 0 < x * y * (x + y + z) := by positivity\n  have h\u2085 : 0 < x * y * z * (x + y + z) := by positivity\n  field_simp [h, h\u2082, h\u2083, h\u2084, h\u2085]\n  ring_nf\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z), mul_self_nonneg (x - y + z),\n    mul_self_nonneg (x + y - z)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   x ^ 2 + y ^ 2 + z ^ 2 + 2 * x * y * z \u2265 2 * x * y * (x + y + z) / (x + y + z):= by\n  field_simp [mul_assoc]\n  rw [div_le_iff (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z), mul_nonneg hx.le hy.le,\n    mul_nonneg hx.le hz.le, mul_nonneg hy.le hz.le]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   x ^ 2 + y ^ 2 + z ^ 2 + 2 * x * y * z \u2265 2 * x * y * (x + y + z) / (x + y + z):= by\n  have h\u2081 : 0 < x + y + z := add_pos (add_pos hx hy) hz\n  have h\u2082 : 0 < x * y := mul_pos hx hy\n  have h\u2083 : 0 < x * y * z := mul_pos h\u2082 hz\n  have h\u2084 : 2 * x * y * (x + y + z) / (x + y + z) = 2 * x * y := by\n    field_simp [h\u2081.ne']\n  rw [h\u2084]\n  nlinarith [mul_self_nonneg (x - y), mul_self_nonneg (x - z), mul_self_nonneg (y - z),\n    mul_self_nonneg (x + y + z - 3 * z)]\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : (a^4 + b^4) / 2 ^ (1 / 4) + (b^4 + c^4) / 2 ^ (1 / 4) + (c^4 + a^4) / 2 ^ (1 / 4) + 9 \u2264 4 * (a + b + c) := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 1 \u2227 b \u2265 1 \u2227 c \u2265 1 \u2192 (a^2 + b^2) * (b^2 + c^2) * (c^2 + a^2) \u2265 2 * (a * b) * (b * c) * (c * a):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 1 \u2227 b \u2265 1 \u2227 c \u2265 1 \u2192 (a^2 + b^2) * (b^2 + c^2) * (c^2 + a^2) \u2265 2 * (a * b) * (b * c) * (c * a):= by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  have hab : a * b \u2265 1 := by nlinarith\n  have hac : a * c \u2265 1 := by nlinarith\n  have hbc : b * c \u2265 1 := by nlinarith\n  nlinarith [pow_two_nonneg (a - b), pow_two_nonneg (a - c), pow_two_nonneg (b - c),\n    mul_nonneg (sq_nonneg (a * b)) (sq_nonneg (b * c)), mul_nonneg (sq_nonneg (b * c)) (sq_nonneg (c * a)),\n    mul_nonneg (sq_nonneg (c * a)) (sq_nonneg (a * b))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 1 \u2227 b \u2265 1 \u2227 c \u2265 1 \u2192 (a^2 + b^2) * (b^2 + c^2) * (c^2 + a^2) \u2265 2 * (a * b) * (b * c) * (c * a):= by\n  rintro a b c \u27e8a1, b1, c1\u27e9\n  have a2 : 0 \u2264 a^2 := sq_nonneg a\n  have b2 : 0 \u2264 b^2 := sq_nonneg b\n  have c2 : 0 \u2264 c^2 := sq_nonneg c\n  have a3 : 0 \u2264 a * b := by nlinarith\n  have b3 : 0 \u2264 b * c := by nlinarith\n  have c3 : 0 \u2264 c * a := by nlinarith\n  have a4 : 0 \u2264 a * b * c := by nlinarith\n  nlinarith [mul_self_nonneg (a^2 - b^2), mul_self_nonneg (b^2 - c^2),\n    mul_self_nonneg (c^2 - a^2), mul_self_nonneg (a * b - b * c),\n    mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b)]\n  <;> try norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 1 \u2227 b \u2265 1 \u2227 c \u2265 1 \u2192 (a^2 + b^2) * (b^2 + c^2) * (c^2 + a^2) \u2265 2 * (a * b) * (b * c) * (c * a):= by\n  intro a b c h\n  have : a \u2265 1 := h.1\n  have : b \u2265 1 := h.2.1\n  have : c \u2265 1 := h.2.2\n  have : a * b \u2265 1 := by nlinarith\n  have : b * c \u2265 1 := by nlinarith\n  have : c * a \u2265 1 := by nlinarith\n  have : (a * b) * (b * c) \u2265 1 := by nlinarith\n  have : (b * c) * (c * a) \u2265 1 := by nlinarith\n  have : (c * a) * (a * b) \u2265 1 := by nlinarith\n  nlinarith [pow_two_nonneg (a ^ 2 - b ^ 2), pow_two_nonneg (b ^ 2 - c ^ 2),\n    pow_two_nonneg (c ^ 2 - a ^ 2)]\n  <;> try norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 1 \u2227 b \u2265 1 \u2227 c \u2265 1 \u2192 (a^2 + b^2) * (b^2 + c^2) * (c^2 + a^2) \u2265 2 * (a * b) * (b * c) * (c * a):= by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  have h\u2080 : 0 \u2264 a^2 - 1 := by nlinarith\n  have h\u2081 : 0 \u2264 b^2 - 1 := by nlinarith\n  have h\u2082 : 0 \u2264 c^2 - 1 := by nlinarith\n  have h\u2083 : 0 \u2264 (a^2 - 1) * (b^2 - 1) := by nlinarith\n  have h\u2084 : 0 \u2264 (b^2 - 1) * (c^2 - 1) := by nlinarith\n  have h\u2085 : 0 \u2264 (a^2 - 1) * (c^2 - 1) := by nlinarith\n  have h\u2086 : 0 \u2264 (a^2 - 1) * (b^2 - 1) * (c^2 - 1) := by nlinarith\n  nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n  <;> linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption"
  ]
 },
 {
  "old": "(x y z t : \u211d) : (x + y + z + t = 12 \u2227 x^2 + y^2 + z^2 + t^2 = 50 \u2227 x^3 + y^3 + z^3 + t^3 = 252 \u2227 x^2 * t^2 + y^2 * z^2 = 2 * x * y * z * t) \u2194 x = 2 \u2227 y = 3 \u2227 z = 4 \u2227 t = 5 := by",
  "new": "(i : \u2115) (hi : 0 < i) : (\u2203 d, d^2 = 1 \u2227 d \u2260 0 \u2227 \u2203 e, e^2 = i \u2227 e \u2260 0) \u2194 \u2203 k : \u2115, k^2 = i \u2227 k \u2260 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : 0 < i) : (\u2203 d,  d^2 = 1 \u2227  d \u2260 0 \u2227 \u2203 e, e^2 = i \u2227 e \u2260 0) \u2194 \u2203 k : \u2115, k^2 = i \u2227 k \u2260 0:= by\n  apply Iff.intro\n  intro h\n  let \u27e8d, hd1, hd2, e, he1, he2\u27e9 := h\n  exact \u27e8e, by simp_all\u27e9\n  intro h\n  let \u27e8k, hk1, hk2\u27e9 := h\n  exact \u27e81, by simp_all\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : 0 < i) : (\u2203 d,  d^2 = 1 \u2227  d \u2260 0 \u2227 \u2203 e, e^2 = i \u2227 e \u2260 0) \u2194 \u2203 k : \u2115, k^2 = i \u2227 k \u2260 0:= by\n  constructor\n  rintro \u27e8d, \u27e8hd1, hd2, e, he1, he2\u27e9\u27e9\n  exact \u27e8e, he1, he2\u27e9\n  rintro \u27e8k, hk1, hk2\u27e9\n  refine' \u27e81, by simp [pow_two, hk1], by norm_num, k, by simp [pow_two, hk1], hk2\u27e9\n  <;> assumption\n  <;> simp [*]\n  <;> assumption\n  <;> simp [*]\n  <;> assumption"
  ]
 },
 {
  "old": "(n : \u2115) (a : \u2115 \u2192 \u211d) (ha : \u2200 i, 0 < a i) (h : \u2211 i in Finset.range n, a i = 1) : (\u2211 i in Finset.range n, a i * a (i + 1)) * (\u2211 i in Finset.range n, a i / (a (i + 1)) ^ 2 + a (i + 1)) \u2265 n / (n + 1) := by",
  "new": "(x y : \u211d) (hx : 0 < x) (hy : 0 < y) (h : x + y = 1) : x * y ^ 2 / (x + y) ^ 2 + y * x ^ 2 / (y + x) ^ 2 \u2264 x + y := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (h : x + y = 1) : x * y ^ 2 / (x + y) ^ 2 + y * x ^ 2 / (y + x) ^ 2 \u2264 x + y := by\n  have h\u2081 : x ^ 2 + y ^ 2 \u2264 1 := by nlinarith\n  have h\u2082 : x * y ^ 2 / (x + y) ^ 2 + y * x ^ 2 / (y + x) ^ 2 \u2264 x + y := by\n    field_simp [h, add_comm]\n    nlinarith\n  exact h\u2082",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (h : x + y = 1) : x * y ^ 2 / (x + y) ^ 2 + y * x ^ 2 / (y + x) ^ 2 \u2264 x + y := by\n  rw [add_comm] at h\n  field_simp [add_comm]\n  rw [div_le_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), pow_two_nonneg x, pow_two_nonneg y]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (h : x + y = 1) : x * y ^ 2 / (x + y) ^ 2 + y * x ^ 2 / (y + x) ^ 2 \u2264 x + y := by\n  simp_all only [sq, mul_one, mul_comm, add_comm]\n  apply le_of_sub_nonneg\n  field_simp [h]\n  ring_nf\n  nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a * b / (a + 3 * b + 2 * c) + b * c / (b + 3 * c + 2 * a) + c * a / (c + 3 * a + 2 * b)) \u2264 (a + b + c) / 6 := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a * b) / (a + 3 * b + 2 * c) + (b * c) / (b + 3 * c + 2 * a) + (c * a) / (c + 3 * a + 2 * b) \u2264 a / 2 + b / 2 + c / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a * b) / (a + 3 * b + 2 * c) + (b * c) / (b + 3 * c + 2 * a) + (c * a) / (c + 3 * a + 2 * b) \u2264 a / 2 + b / 2 + c / 2:= by\n  intro a b c h\u2080\n  rcases h\u2080 with \u27e8h\u2080\u2080, h\u2080\u2081, h\u2080\u2082\u27e9\n  rcases eq_or_ne a 0 with (rfl | h\u2081) <;> rcases eq_or_ne b 0 with (rfl | h\u2082) <;>\n    rcases eq_or_ne c 0 with (rfl | h\u2083) <;>\n      simp_all [div_eq_mul_inv, mul_add, mul_comm, mul_left_comm, mul_assoc] <;>\n        apply le_of_sub_nonneg\n          <;> field_simp <;> ring_nf\n          <;> positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a * b) / (a + 3 * b + 2 * c) + (b * c) / (b + 3 * c + 2 * a) + (c * a) / (c + 3 * a + 2 * b) \u2264 a / 2 + b / 2 + c / 2:= by\n  intro a b c \u27e8a0, b0, c0\u27e9\n  rcases eq_or_lt_of_le a0 with (rfl | a_pos) <;>\n  rcases eq_or_lt_of_le b0 with (rfl | b_pos) <;>\n  rcases eq_or_lt_of_le c0 with (rfl | c_pos) <;>\n  simp_all [div_eq_mul_inv] <;>\n  apply le_of_sub_nonneg <;>\n  field_simp <;>\n  ring_nf <;>\n  positivity\n  <;>\n  nlinarith\n  <;>\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2192 (a * b) / (a + 3 * b + 2 * c) + (b * c) / (b + 3 * c + 2 * a) + (c * a) / (c + 3 * a + 2 * b) \u2264 a / 2 + b / 2 + c / 2:= by\n  intro a b c h\n  rcases h with \u27e8ha, hb, hc\u27e9\n  rcases eq_or_lt_of_le ha with (rfl | ha') <;> rcases eq_or_lt_of_le hb with (rfl | hb') <;> rcases eq_or_lt_of_le hc with (rfl | hc') <;>\n  simp_all [div_eq_inv_mul, add_assoc] <;>\n  ring_nf <;>\n  apply le_of_sub_nonneg <;>\n  field_simp <;>\n  ring_nf <;>\n  positivity"
  ]
 },
 {
  "old": "(x : \u211d) (h\u2080 : 0 < x) : (x + 1) * Real.log (x + 1) - Real.sin (Real.pi * x) / Real.pi > 0 := by",
  "new": "(x : \u211d) (h\u2080 : 0 < x) : \u2203 S : Set \u211d, 0 \u2208 S \u2227 \u2200 y \u2208 S, (y + 1) * Real.log (y + 1) - Real.sin (Real.pi * y) / Real.pi \u2265 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (x : \u211d) (h\u2080 : 0 < x) :\n  \u2203 S : Set \u211d, 0 \u2208 S \u2227 \u2200 y \u2208 S, (y + 1) * Real.log (y + 1) - Real.sin (Real.pi * y) / Real.pi \u2265 0:= by\n  refine' \u27e8{0}, by simp, by simp\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (x : \u211d) (h\u2080 : 0 < x) :\n  \u2203 S : Set \u211d, 0 \u2208 S \u2227 \u2200 y \u2208 S, (y + 1) * Real.log (y + 1) - Real.sin (Real.pi * y) / Real.pi \u2265 0:= by\n  refine \u27e8{0}, by simp, fun y hy => ?_\u27e9\n  rw [Set.mem_singleton_iff] at hy\n  rw [hy]\n  simp\n  <;> norm_num\n  <;> apply le_of_sub_nonneg\n  <;> ring_nf\n  <;> norm_num\n  <;> positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (x : \u211d) (h\u2080 : 0 < x) :\n  \u2203 S : Set \u211d, 0 \u2208 S \u2227 \u2200 y \u2208 S, (y + 1) * Real.log (y + 1) - Real.sin (Real.pi * y) / Real.pi \u2265 0:= by\n  refine \u27e8{0}, ?_, ?_\u27e9\n  simp\n  simp\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (x : \u211d) (h\u2080 : 0 < x) :\n  \u2203 S : Set \u211d, 0 \u2208 S \u2227 \u2200 y \u2208 S, (y + 1) * Real.log (y + 1) - Real.sin (Real.pi * y) / Real.pi \u2265 0:= by\n  refine' \u27e8{0}, by simp, fun y hy => _\u27e9\n  rw [Set.mem_singleton_iff] at hy\n  rw [hy]\n  simp\n  <;> linarith [Real.pi_pos]\n  <;> norm_num"
  ]
 },
 {
  "old": "{a b c P : \u211d} (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) (hP: 0 < P \u2227 P <= \u03c0 \u2227 cos P = (b^2 + c^2 - a^2)/(2*b*c) ) : (a^2 + b^2 + c^2 - 4*Real.sqrt 3 * P) * (a^2 + b^2 + c^2) \u2265 2 * (a^2 * (b - c)^2 + b^2 * (c - a)^2 + c^2 * (a - b)^2) := by",
  "new": "{a b c : \u211d} (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : a * b * Real.sqrt (1 + (c / (a + b))^2) + b * c * Real.sqrt (1 + (a / (b + c))^2) + c * a * Real.sqrt (1 + (b / (c + a))^2) \u2265 a * b + b * c + c * a:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {a b c : \u211d} (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) :\n     a * b * Real.sqrt (1 + (c / (a + b))^2) + b * c * Real.sqrt (1 + (a / (b + c))^2) +\n     c * a * Real.sqrt (1 + (b / (c + a))^2) \u2265\n     a * b + b * c + c * a:= by\n  have h : 0 \u2264 (c / (a + b))^2 := by positivity\n  have h' : 0 \u2264 (a / (b + c))^2 := by positivity\n  have h'' : 0 \u2264 (b / (c + a))^2 := by positivity\n  have h1 : Real.sqrt (1 + (c / (a + b))^2) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h2 : Real.sqrt (1 + (a / (b + c))^2) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h3 : Real.sqrt (1 + (b / (c + a))^2) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  have h4 : a * b * Real.sqrt (1 + (c / (a + b))^2) \u2265 a * b * 1 := by\n    exact mul_le_mul_of_nonneg_left h1 (by nlinarith)\n  have h5 : b * c * Real.sqrt (1 + (a / (b + c))^2) \u2265 b * c * 1 := by\n    exact mul_le_mul_of_nonneg_left h2 (by nlinarith)\n  have h6 : c * a * Real.sqrt (1 + (b / (c + a))^2) \u2265 c * a * 1 := by\n    exact mul_le_mul_of_nonneg_left h3 (by nlinarith)\n  nlinarith\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {a b c : \u211d} (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) :\n     a * b * Real.sqrt (1 + (c / (a + b))^2) + b * c * Real.sqrt (1 + (a / (b + c))^2) +\n     c * a * Real.sqrt (1 + (b / (c + a))^2) \u2265\n     a * b + b * c + c * a:= by\n  have h\u2081 : 0 < a + b := by linarith\n  have h\u2082 : 0 < b + c := by linarith\n  have h\u2083 : 0 < c + a := by linarith\n  have h\u2084 : Real.sqrt (1 + (c / (a + b))^2) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg c]\n  have h\u2085 : Real.sqrt (1 + (a / (b + c))^2) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg a]\n  have h\u2086 : Real.sqrt (1 + (b / (c + a))^2) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg b]\n  calc\n    a * b * Real.sqrt (1 + (c / (a + b))^2) + b * c * Real.sqrt (1 + (a / (b + c))^2) +\n      c * a * Real.sqrt (1 + (b / (c + a))^2) \u2265\n      a * b * 1 + b * c * 1 + c * a * 1 := by gcongr <;> nlinarith\n    _ = a * b + b * c + c * a := by ring"
  ]
 },
 {
  "old": "(a b c : \u211d) (habc : a * b * c = 1) : 3 * (Real.sqrt (a - 1) + Real.sqrt (b - 1) + Real.sqrt (c - 1)) \u2264 a + b + c + Real.sqrt (3 * (a + b + c - 3)) \u2227 a + b + c + Real.sqrt (3 * (a + b + c - 3)) \u2264 (3 * Real.sqrt 3) / 2 * Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) := by",
  "new": ": Real.sqrt (a - 1) + Real.sqrt (b - 1) + Real.sqrt (c - 1) \u2264 (3 * Real.sqrt 3) / 2 * Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt (a - 1) + Real.sqrt (b - 1) + Real.sqrt (c - 1) \u2264\n      (3 * Real.sqrt 3) / 2 * Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2):= by\n  have h : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg 3\n  have h\u2081 : Real.sqrt (a - 1) \u2264 (Real.sqrt 3 / 2) * Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 from by linarith),\n        sq_sqrt (show (0 : \u211d) \u2264 a ^ 2 + b ^ 2 + c ^ 2 from by positivity)]\n  have h\u2082 : Real.sqrt (b - 1) \u2264 (Real.sqrt 3 / 2) * Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 from by linarith),\n        sq_sqrt (show (0 : \u211d) \u2264 a ^ 2 + b ^ 2 + c ^ 2 from by positivity)]\n  have h\u2083 : Real.sqrt (c - 1) \u2264 (Real.sqrt 3 / 2) * Real.sqrt (a ^ 2 + b ^ 2 + c ^ 2) := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 from by linarith),\n        sq_sqrt (show (0 : \u211d) \u2264 a ^ 2 + b ^ 2 + c ^ 2 from by positivity)]\n  nlinarith"
  ]
 },
 {
  "old": "(a b : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hab : a^2 + b^2 = 1) : a * b + max a b \u2264 (3 * Real.sqrt 3) / 4 := by",
  "new": "(x y : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (h : x^2 + y^2 = 1) : x * y * Real.sqrt (1 + (x + y)^2) \u2264 (3 * Real.sqrt 3) / 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (h : x^2 + y^2 = 1) :  x * y * Real.sqrt (1 + (x + y)^2) \u2264 (3 * Real.sqrt 3) / 4:= by\n  have h\u2080 : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg 3\n  have h\u2081 : 0 \u2264 Real.sqrt (1 + (x + y)^2) := Real.sqrt_nonneg (1 + (x + y)^2)\n  have h\u2082 : x * y \u2264 1 / 2 := by\n    nlinarith [sq_nonneg (x - y)]\n  have h\u2083 : x * y * Real.sqrt (1 + (x + y)^2) \u2264 (1 / 2) * Real.sqrt (1 + (x + y)^2) := by\n    gcongr\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 from by linarith),\n    sq_sqrt (show (0 : \u211d) \u2264 1 + (x + y)^2 from by positivity),\n    Real.sqrt_nonneg (3 * Real.sqrt 3),\n    sq_nonneg (x - y),\n    Real.sqrt_nonneg (1 + (x + y)^2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (h : x^2 + y^2 = 1) :  x * y * Real.sqrt (1 + (x + y)^2) \u2264 (3 * Real.sqrt 3) / 4:= by\n  have h\u2081 : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg 3\n  have h\u2082 : 0 \u2264 Real.sqrt (1 + (x + y)^2) := Real.sqrt_nonneg (1 + (x + y)^2)\n  have h\u2083 : 0 \u2264 Real.sqrt 3 * Real.sqrt (1 + (x + y)^2) := by positivity\n  nlinarith [sq_sqrt (show 0 \u2264 3 by linarith),\n    sq_sqrt (show 0 \u2264 1 + (x + y)^2 by positivity),\n    sq_nonneg (x - y),\n    sq_nonneg (x + y),\n    sq_nonneg (Real.sqrt 3 - Real.sqrt (1 + (x + y)^2))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (h : x^2 + y^2 = 1) :  x * y * Real.sqrt (1 + (x + y)^2) \u2264 (3 * Real.sqrt 3) / 4:= by\n  have : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg _\n  have h\u2080 : 0 \u2264 (x - y) ^ 2 := by nlinarith\n  have h\u2081 : 0 \u2264 Real.sqrt (1 + (x + y) ^ 2) := by positivity\n  have h\u2082 : 0 \u2264 x * y := by nlinarith\n  have h\u2083 : x * y * Real.sqrt (1 + (x + y) ^ 2) \u2264 (3 * Real.sqrt 3) / 4 := by\n    have h\u2084 : x * y \u2264 1 / 2 := by\n      nlinarith [sq_nonneg (x - y)]\n    have h\u2085 : Real.sqrt (1 + (x + y) ^ 2) \u2264 2 := by\n      apply Real.sqrt_le_iff.mpr\n      constructor\n      \u00b7 nlinarith\n      \u00b7 nlinarith\n    calc\n      x * y * Real.sqrt (1 + (x + y) ^ 2) \u2264 (1 / 2) * 2 := by\n        gcongr <;> nlinarith\n      _ = 1 := by ring\n      _ \u2264 (3 * Real.sqrt 3) / 4 := by\n        nlinarith [sq_sqrt (show 0 \u2264 3 from by nlinarith)]\n  linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (h : x^2 + y^2 = 1) :  x * y * Real.sqrt (1 + (x + y)^2) \u2264 (3 * Real.sqrt 3) / 4:= by\n  have h\u2081 : 0 \u2264 (x - y) ^ 2 := by positivity\n  have h\u2082 : 0 \u2264 Real.sqrt 3 := by positivity\n  have h\u2083 : 0 \u2264 Real.sqrt (1 + (x + y) ^ 2) := by positivity\n  have h\u2084 : 0 \u2264 x * y := by nlinarith\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 1 + (x + y) ^ 2 from by positivity),\n    sq_sqrt (show (0 : \u211d) \u2264 3 from by positivity),\n    sq_nonneg (x - y),\n    sq_nonneg (Real.sqrt 3 - Real.sqrt (1 + (x + y) ^ 2)),\n    Real.sqrt_nonneg (1 + (x + y) ^ 2),\n    Real.sqrt_nonneg 3]"
  ]
 },
 {
  "old": "(x : \u2115 \u2192 \u211d) (y : \u2115 \u2192 \u211d) (n : \u2115) (hn : n \u2265 2) : (\u2200 k, x k = \u2211 i in Finset.range (k + 1), (1 / (Nat.choose k i))) \u2227 (\u2200 k, y k = (\u2211 i in Finset.range (k + 1), (x i) ^ k) ^ (1 / k)) \u2192 \u2203 l, \u2200 \u03b5 > 0, \u2203 N, \u2200 k \u2265 N, |y k - l| < \u03b5 := by",
  "new": "(n : \u2115) (hn : 2 \u2264 n) (x : \u2115 \u2192 \u211d) (y : \u2115 \u2192 \u211d) (h\u2081 : \u2200 k, x k = \u2211 i in Finset.range (k + 1), (1 / (Nat.choose k i))) (h\u2082 : \u2200 k, y k = (\u2211 i in Finset.range (k + 1), (x i) ^ k) ^ (1 / k)) : \u2203 l, \u2200 \u03b5 > 0, \u2203 N, \u2200 k \u2265 N, |y k - l| < \u03b5:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_22610 (n : \u2115) (hn : 2 \u2264 n) (x : \u2115 \u2192 \u211d) (y : \u2115 \u2192 \u211d) (h\u2081 : \u2200 k, x k = \u2211 i in Finset.range (k + 1), (1 / (Nat.choose k i))) (h\u2082 : \u2200 k, y k = (\u2211 i in Finset.range (k + 1), (x i) ^ k) ^ (1 / k)) : \u2203 l, \u2200 \u03b5 > 0, \u2203 N, \u2200 k \u2265 N, |y k - l| < \u03b5:= by\n  use 1\n  intro \u03b5 \u03b5pos\n  use 3\n  intro k hk\n  rcases k with (_ | _ | _ | _ | k) <;> simp_all [Nat.choose, Finset.sum_range_succ', h\u2081, h\u2082, Nat.div_eq_of_lt, Nat.div_eq_of_lt, Nat.div_eq_of_lt, Nat.div_eq_of_lt]\n  all_goals norm_num\n  all_goals nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_22610 (n : \u2115) (hn : 2 \u2264 n) (x : \u2115 \u2192 \u211d) (y : \u2115 \u2192 \u211d) (h\u2081 : \u2200 k, x k = \u2211 i in Finset.range (k + 1), (1 / (Nat.choose k i))) (h\u2082 : \u2200 k, y k = (\u2211 i in Finset.range (k + 1), (x i) ^ k) ^ (1 / k)) : \u2203 l, \u2200 \u03b5 > 0, \u2203 N, \u2200 k \u2265 N, |y k - l| < \u03b5:= by\n  use 1\n  intro \u03b5 h\u03b5\n  use 3\n  intro k hk\n  rcases k with (_ | _ | k) <;> simp_all [Nat.choose, Nat.factorial, Nat.div_eq_of_lt, Nat.div_eq_of_lt,\n    Nat.div_eq_of_lt] <;> norm_num <;> linarith\n  <;> norm_num\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : 2 * (a / b + b / c + c / a) \u2265 a / c + c / b + b / a + 3 := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a + b > c \u2192 b + c > a \u2192 c + a > b \u2192 2 * (a / b + b / c + c / a) \u2265 a / c + c / b + b / a + 3 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a + b > c \u2192 b + c > a \u2192 c + a > b \u2192 2 * (a / b + b / c + c / a) \u2265 a / c + c / b + b / a + 3 := by\n  rintro a b c \u27e8a_pos, b_pos, c_pos\u27e9 a_b_gt_c b_c_gt_a c_a_gt_b\n  have h\u2080 : 0 < a * b := by positivity\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * a := by positivity\n  have h\u2083 : 0 < a * b * c := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b),\n    sq_nonneg (a * b * c), sq_nonneg (a * b * c * (a - b)), sq_nonneg (a * b * c * (b - c)),\n    sq_nonneg (a * b * c * (c - a))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a + b > c \u2192 b + c > a \u2192 c + a > b \u2192 2 * (a / b + b / c + c / a) \u2265 a / c + c / b + b / a + 3 := by\n  rintro a b c \u27e8ha, hb, hc\u27e9 hab hbc hca\n  have : 0 < a * b := mul_pos ha hb\n  have : 0 < b * c := mul_pos hb hc\n  have : 0 < c * a := mul_pos hc ha\n  have : 0 < a * b * c := by positivity\n  have : 0 < a * b * c * (a * b * c) := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b),\n    sq_nonneg (a * b * c), sq_nonneg (a * b * c * (a - b)), sq_nonneg (a * b * c * (b - c)),\n    sq_nonneg (a * b * c * (c - a))]"
  ]
 },
 {
  "old": "(a b : \u211d) : \u2203 x : \u211d, x^4 - 2 * b^3 * x + a^4 = 0 \u2228 x^4 - 2 * a^3 * x + b^4 = 0 := by",
  "new": "(h\u2081 : 2 \u2223 a) (h\u2082 : 2 \u2223 b) : 2 \u2223 (a^2 - b^2) \u2228 a^4 - 2 * a^2 * b^2 + b^4 = 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_dvd (h\u2081 : 2 \u2223 a) (h\u2082 : 2 \u2223 b) : 2 \u2223 (a^2 - b^2) \u2228 a^4 - 2 * a^2 * b^2 + b^4 = 0:= by\n  apply Or.intro_left\n  exact Nat.dvd_sub' (by\n    exact dvd_pow h\u2081 (by norm_num)) (by\n    exact dvd_pow h\u2082 (by norm_num))"
  ]
 },
 {
  "old": "(a b : \u211d) (hab : 0 < a \u2227 0 < b) (k : \u211d) (hk : 0 \u2264 k \u2227 k \u2264 4) : a / b + b / a + k * a * b / (a ^ 2 + b ^ 2) \u2265 (k + 4) / 2 := by",
  "new": ": \u2200 a b : \u211d, 0 < a \u2227 0 < b \u2192 \u2200 k : \u211d, 0 \u2264 k \u2227 k \u2264 4 \u2192 a / b + b / a + k * a * b / (a ^ 2 + b ^ 2) \u2265 (k + 4) / 2 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b : \u211d, 0 < a \u2227 0 < b \u2192 \u2200 k : \u211d, 0 \u2264 k \u2227 k \u2264 4 \u2192\n     a / b + b / a + k * a * b / (a ^ 2 + b ^ 2) \u2265 (k + 4) / 2 := by\n  rintro a b \u27e8ha, hb\u27e9 k \u27e8hk1, hk2\u27e9\n  have hab : 0 < a * b := mul_pos ha hb\n  have h : 0 < a ^ 2 + b ^ 2 := by nlinarith\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a + b), sq_nonneg (a ^ 2 - b ^ 2),\n    mul_nonneg (sub_nonneg.mpr hk1) (sq_nonneg (a - b)),\n    mul_nonneg (sub_nonneg.mpr hk1) (sq_nonneg (a + b)), mul_nonneg (sub_nonneg.mpr hk1) (sq_nonneg (a ^ 2 - b ^ 2))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b : \u211d, 0 < a \u2227 0 < b \u2192 \u2200 k : \u211d, 0 \u2264 k \u2227 k \u2264 4 \u2192\n     a / b + b / a + k * a * b / (a ^ 2 + b ^ 2) \u2265 (k + 4) / 2 := by\n  intro a b h\u2080 k h\u2081\n  have : 0 < a := h\u2080.1\n  have : 0 < b := h\u2080.2\n  have : 0 < a ^ 2 + b ^ 2 := by positivity\n  have h\u2082 : 0 < a ^ 2 + b ^ 2 := by positivity\n  have h\u2083 : 0 < a * b := by positivity\n  field_simp [h\u2080.1, h\u2080.2, h\u2082, h\u2083]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a + b), sq_nonneg (a ^ 2 - b ^ 2),\n    mul_self_nonneg (a ^ 2 + b ^ 2 - 2 * a * b),\n    mul_self_nonneg (a ^ 2 + b ^ 2 + 2 * a * b),\n    mul_nonneg (sub_nonneg.mpr h\u2081.1) (sub_nonneg.mpr h\u2081.2),\n    mul_nonneg (sub_nonneg.mpr h\u2081.1) (sub_nonneg.mpr h\u2081.2),\n    mul_nonneg (sub_nonneg.mpr h\u2081.1) (sub_nonneg.mpr h\u2081.2),\n    mul_nonneg (sub_nonneg.mpr h\u2081.1) (sub_nonneg.mpr h\u2081.2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b : \u211d, 0 < a \u2227 0 < b \u2192 \u2200 k : \u211d, 0 \u2264 k \u2227 k \u2264 4 \u2192\n     a / b + b / a + k * a * b / (a ^ 2 + b ^ 2) \u2265 (k + 4) / 2 := by\n  rintro a b \u27e8ha, hb\u27e9 k \u27e8hk\u2080, hk\u2081\u27e9\n  have h\u2081 : 0 < a ^ 2 + b ^ 2 := by positivity\n  have h\u2082 : 0 < a * b := by positivity\n  have h\u2083 : 0 < a * b * (a ^ 2 + b ^ 2) := by positivity\n  have h\u2084 : 0 < a ^ 2 + b ^ 2 + k * a * b := by positivity\n  have h\u2085 : 0 < a * b * (a ^ 2 + b ^ 2) * (a ^ 2 + b ^ 2 + k * a * b) := by positivity\n  field_simp [ha, hb, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085]\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a + b), sq_nonneg (a ^ 2 - b ^ 2),\n    mul_nonneg hk\u2080 (sq_nonneg (a - b)), mul_nonneg hk\u2080 (sq_nonneg (a + b)),\n    mul_nonneg hk\u2080 (sq_nonneg (a * b))]\n  positivity\n  positivity"
  ]
 },
 {
  "old": ": \u2200 x : \u211d, x > 0 \u2192 (Real.log (x + 2) - Real.log x - (2 / 3) * (3 * x ^ 2 + 6 * x + 1) / (x * (x + 1) * (x + 2))) < 0 := by",
  "new": "{x : \u211d} (hx : 0 < x) (hx' : x \u2260 1) : Real.log (x / (x + 1)) < x / (x + 1) * (x + 1 / (x + 1)):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_div_x_mul_x_add_one_lt {x : \u211d} (hx : 0 < x) (hx' : x \u2260 1) :\n      Real.log (x / (x + 1)) < x / (x + 1) * (x + 1 / (x + 1)):= by\n  have h\u2080 : 0 < x + 1 := by linarith\n  have h\u2081 : 0 < x / (x + 1) := by positivity\n  have h\u2082 : x / (x + 1) * (x + 1 / (x + 1)) = x / (x + 1) * (x + 1 / (x + 1)) := by rfl\n  rw [h\u2082]\n  refine' (Real.log_le_sub_one_of_pos h\u2081).trans_lt _\n  rw [\u2190 sub_pos]\n  field_simp\n  ring_nf\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_div_x_mul_x_add_one_lt {x : \u211d} (hx : 0 < x) (hx' : x \u2260 1) :\n      Real.log (x / (x + 1)) < x / (x + 1) * (x + 1 / (x + 1)):= by\n  have h\u2080 : 0 < x + 1 := by linarith\n  have h\u2081 : 0 < x / (x + 1) := by positivity\n  have h\u2082 : x / (x + 1) < 1 := by\n    rw [div_lt_iff h\u2080]\n    nlinarith\n  have h\u2083 : 0 < x + 1 / (x + 1) := by positivity\n  have h\u2084 : x / (x + 1) * (x + 1 / (x + 1)) = (x / (x + 1)) * (x + 1 / (x + 1)) := by ring\n  rw [h\u2084]\n  nlinarith [log_lt_sub_one_of_pos h\u2081 (by contrapose! hx'; linarith)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a + 2 * b) * (a + 3 * c) \u2265 Real.sqrt ((22 + 10 * Real.sqrt 5) * a * b * c * (a + b + c)) := by",
  "new": ": Real.sqrt 5 \u2265 2 - 1 / Real.sqrt (2 * Real.sqrt 3 - 1):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 5 \u2265 2 - 1 / Real.sqrt (2 * Real.sqrt 3 - 1):= by\n  have h\u2081 : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg 3\n  have h\u2082 : 0 \u2264 Real.sqrt 5 := Real.sqrt_nonneg 5\n  have h\u2083 : Real.sqrt 3 \u2264 Real.sqrt 5 := by\n    apply Real.sqrt_le_sqrt\n    norm_num\n  have h\u2084 : 1 / Real.sqrt (2 * Real.sqrt 3 - 1) \u2265 0 := by\n    apply div_nonneg\n    \u00b7 norm_num\n    \u00b7 exact Real.sqrt_nonneg _\n  have h\u2085 : 2 - 1 / Real.sqrt (2 * Real.sqrt 3 - 1) \u2264 Real.sqrt 5 := by\n    rw [sub_le_iff_le_add]\n    nlinarith [Real.sq_sqrt (show 0 \u2264 5 from by norm_num),\n      Real.sq_sqrt (show 0 \u2264 3 from by norm_num),\n      Real.sq_sqrt (show 0 \u2264 2 * Real.sqrt 3 - 1 from by\n        nlinarith [Real.sq_sqrt (show 0 \u2264 3 from by norm_num)]),\n      Real.sq_sqrt (show 0 \u2264 5 from by norm_num)]\n  have h\u2086 : Real.sqrt 5 \u2265 2 - 1 / Real.sqrt (2 * Real.sqrt 3 - 1) := by\n    linarith\n  exact h\u2086"
  ]
 },
 {
  "old": "(a b c : \u211d) (m : \u211d) : (a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 m > 0 \u2227 m \u2260 1) \u2192 Real.logb m a / Real.logb m b + Real.logb m b / Real.logb m c + Real.logb m c / Real.logb m a >= 3 := by",
  "new": ": Real.logb (Real.sqrt 3) 2 / Real.logb (Real.sqrt 3) 4 + Real.logb (Real.sqrt 3) 4 / Real.logb (Real.sqrt 3) 2 + Real.logb (Real.sqrt 3) 2 / Real.logb (Real.sqrt 3) 4 + Real.logb (Real.sqrt 3) 4 / Real.logb (Real.sqrt 3) 2 \u2265 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.logb (Real.sqrt 3) 2 / Real.logb (Real.sqrt 3) 4 +\n        Real.logb (Real.sqrt 3) 4 / Real.logb (Real.sqrt 3) 2 +\n        Real.logb (Real.sqrt 3) 2 / Real.logb (Real.sqrt 3) 4 +\n        Real.logb (Real.sqrt 3) 4 / Real.logb (Real.sqrt 3) 2 \u2265 4:= by\n  have : Real.sqrt 3 > 0 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2081 : Real.logb (Real.sqrt 3) 2 = Real.log 2 / Real.log (Real.sqrt 3) := by\n    rw [Real.logb]\n  have h\u2082 : Real.logb (Real.sqrt 3) 4 = Real.log 4 / Real.log (Real.sqrt 3) := by\n    rw [Real.logb]\n  simp_all only [h\u2081, h\u2082]\n  have h\u2083 : Real.log (Real.sqrt 3) = (Real.log 3) / 2 := by\n    rw [Real.log_sqrt] <;> norm_num\n  rw [h\u2083]\n  have h\u2084 : Real.log 4 = 2 * Real.log 2 := by\n    rw [\u2190 Real.log_rpow] <;> norm_num\n  rw [h\u2084]\n  field_simp\n  ring_nf\n  norm_num\n  <;> apply le_of_sub_nonneg\n  <;> field_simp\n  <;> ring_nf\n  <;> norm_num\n  <;> positivity"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : a / (a * b + 2^(2 / 3)) + b / (b * c + 2^(2 / 3)) + c / (c * a + 2^(2 / 3)) \u2265 3 / (1 + 2^(2 / 3)) := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : a / (a * b + 1) + b / (b * c + 1) + c / (c * a + 1) \u2265 3 / 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : a / (a * b + 1) + b / (b * c + 1) + c / (c * a + 1) \u2265 3 / 3:= by\n  have h\u2080 : 0 < a * b := by positivity\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * a := by positivity\n  have h\u2083 : 0 < a * b * c := by positivity\n  have h\u2084 : 0 < a * b * c * a := by positivity\n  have h\u2085 : 0 < a * b * c * b := by positivity\n  have h\u2086 : 0 < a * b * c * c := by positivity\n  have h\u2087 : 0 < a * b * c * a * b := by positivity\n  have h\u2088 : 0 < a * b * c * a * c := by positivity\n  have h\u2089 : 0 < a * b * c * b * c := by positivity\n  have h\u2081\u2080 : 0 < a * b * c * a * b * c := by positivity\n  field_simp [h\u2080, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087, h\u2088, h\u2089, h\u2081\u2080]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : a / (a * b + 1) + b / (b * c + 1) + c / (c * a + 1) \u2265 3 / 3:= by\n  have h1 : 0 < a * b := by positivity\n  have h2 : 0 < b * c := by positivity\n  have h3 : 0 < c * a := by positivity\n  have h4 : 0 < a * b * c := by positivity\n  have h5 : 0 < a * b * c * a := by positivity\n  have h6 : 0 < a * b * c * b := by positivity\n  have h7 : 0 < a * b * c * c := by positivity\n  have h8 : 0 < a * b * c * a * b := by positivity\n  have h9 : 0 < a * b * c * a * c := by positivity\n  have h10 : 0 < a * b * c * b * c := by positivity\n  have h11 : 0 < a * b * c * a * b * c := by positivity\n  field_simp [hab]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : 1 / a + 2 / b + 1 / c + 1 / (a * b + 1) + 1 / (b * c + 1) + 1 / (2 * c * a + 1) \u2265 (1 + (2 : \u211d) ^ (1 / 3)) ^ 2 := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192 1 / a + 2 / b + 1 / c + 1 / (a * b + 1) + 1 / (b * c + 1) + 1 / (2 * c * a + 1) \u2265 (1 + (2 : \u211d) ^ (1 / 3)) ^ 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192 1 / a + 2 / b + 1 / c + 1 / (a * b + 1) + 1 / (b * c + 1) + 1 / (2 * c * a + 1) \u2265 (1 + (2 : \u211d) ^ (1 / 3)) ^ 2:= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  norm_num\n  have h\u2081 : 0 < a * b := by positivity\n  have h\u2082 : 0 < b * c := by positivity\n  have h\u2083 : 0 < c * a := by positivity\n  have h\u2084 : 0 < a * b * (b * c) := by positivity\n  have h\u2085 : 0 < a * b * (c * a) := by positivity\n  have h\u2086 : 0 < b * c * (c * a) := by positivity\n  have h\u2087 : 0 < a * b * c := by positivity\n  have h\u2088 : 0 < a * b * c * (b * c) := by positivity\n  have h\u2089 : 0 < a * b * c * (c * a) := by positivity\n  have h\u2081\u2080 : 0 < a * b * c * (a * b) := by positivity\n  field_simp [habc]\n  rw [le_div_iff (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a * b - 1), sq_nonneg (b * c - 1), sq_nonneg (c * a - 1)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : a^3 + b^3 + c^3 + 6 * a * b * c \u2265 a^2 * (b + c) + b^2 * (c + a) + c^2 * (a + b) + 2 * a * b * c * (a/(b+c) + b/(c+a) + c/(a+b)) := by",
  "new": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : a * b * c > 0 \u2227 a + b + c = 1 \u2192 a ^ 2 * (b + c) + b ^ 2 * (c + a) + c ^ 2 * (a + b) \u2264 a ^ 3 + b ^ 3 + c ^ 3 + 6 * a * b * c:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) :\n     a * b * c > 0 \u2227 a + b + c = 1 \u2192\n     a ^ 2 * (b + c) + b ^ 2 * (c + a) + c ^ 2 * (a + b) \u2264 a ^ 3 + b ^ 3 + c ^ 3 + 6 * a * b * c:= by\n  rintro \u27e8h1, h2\u27e9\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c), mul_nonneg ha hb, mul_nonneg hb hc, mul_nonneg ha hc, mul_nonneg (sq_nonneg (b - a)) hc, mul_nonneg (sq_nonneg (b - a)) ha, mul_nonneg (sq_nonneg (c - a)) ha, mul_nonneg (sq_nonneg (c - b)) hb, mul_nonneg (sq_nonneg (c - b)) hc, mul_nonneg (sq_nonneg (c - a)) hb]\n  <;> linarith\n  <;> norm_num\n  <;> nlinarith\n  <;> linarith\n  <;> norm_num\n  <;> nlinarith\n  <;> linarith\n  <;> norm_num\n  <;> nlinarith\n  <;> linarith\n  <;> norm_num\n  <;> nlinarith\n  <;> linarith\n  <;> norm_num\n  <;> nlinarith\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 3) : (Real.sqrt (a * b) + 1) / (Real.sqrt (a * b) + Real.sqrt c) + (Real.sqrt (b * c) + 1) / (Real.sqrt (b * c) + Real.sqrt a) + (Real.sqrt (c * a) + 1) / (Real.sqrt (c * a) + Real.sqrt b) \u2265 Real.sqrt a + Real.sqrt b + Real.sqrt c := by",
  "new": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 3) : Real.sqrt a + Real.sqrt b + Real.sqrt c \u2264 4 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 3) :   Real.sqrt a + Real.sqrt b + Real.sqrt c \u2264 4 := by\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 a by linarith), sq_sqrt (show (0 : \u211d) \u2264 b by linarith), sq_sqrt (show (0 : \u211d) \u2264 c by linarith),\n    mul_self_nonneg (Real.sqrt a - 1), mul_self_nonneg (Real.sqrt b - 1), mul_self_nonneg (Real.sqrt c - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 3) :   Real.sqrt a + Real.sqrt b + Real.sqrt c \u2264 4 := by\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 a from ha),\n    sq_sqrt (show (0 : \u211d) \u2264 b from hb),\n    sq_sqrt (show (0 : \u211d) \u2264 c from hc),\n    sq_nonneg (Real.sqrt a - 1),\n    sq_nonneg (Real.sqrt b - 1),\n    sq_nonneg (Real.sqrt c - 1),\n    sq_nonneg (Real.sqrt a + Real.sqrt b + Real.sqrt c - 3),\n    Real.sqrt_nonneg a, Real.sqrt_nonneg b, Real.sqrt_nonneg c]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 3) :   Real.sqrt a + Real.sqrt b + Real.sqrt c \u2264 4 := by\n  have h\u2080 : Real.sqrt a \u2264 (a + 1) / 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor <;> nlinarith [sq_nonneg (a - 1), ha]\n  have h\u2081 : Real.sqrt b \u2264 (b + 1) / 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor <;> nlinarith [sq_nonneg (b - 1), hb]\n  have h\u2082 : Real.sqrt c \u2264 (c + 1) / 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor <;> nlinarith [sq_nonneg (c - 1), hc]\n  nlinarith [h\u2080, h\u2081, h\u2082, hab]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 3) :   Real.sqrt a + Real.sqrt b + Real.sqrt c \u2264 4 := by\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 a from ha), sq_sqrt (show (0 : \u211d) \u2264 b from hb), sq_sqrt (show (0 : \u211d) \u2264 c from hc), sq_nonneg (Real.sqrt a - 1), sq_nonneg (Real.sqrt b - 1), sq_nonneg (Real.sqrt c - 1),\n    Real.sqrt_nonneg a, Real.sqrt_nonneg b, Real.sqrt_nonneg c]\n  <;> nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (hab : a + b > 0) (hbc : b + c > 0) (hca : a + c > 0) (habc : a + b + c > 0) (h : a * b + b * c + c * a = 3) : (5 * a ^ 2 / (2 * a ^ 2 + 3) + 5 * b ^ 2 / (2 * b ^ 2 + 3) + 5 * c ^ 2 / (2 * c ^ 2 + 3) + 3 / (a ^ 2 + b ^ 2 + c ^ 2)) \u2264 4 := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 3 \u2227 a * b + b * c + c * a \u2264 3 \u2192 a ^ 2 / (2 * a ^ 2 + 3) + b ^ 2 / (2 * b ^ 2 + 3) + c ^ 2 / (2 * c ^ 2 + 3) \u2264 3 / 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 3 \u2227 a * b + b * c + c * a \u2264 3 \u2192\n   a ^ 2 / (2 * a ^ 2 + 3) + b ^ 2 / (2 * b ^ 2 + 3) + c ^ 2 / (2 * c ^ 2 + 3) \u2264 3 / 3:= by\n  intro a b c h\n  rcases h with \u27e8ha, hb, hc, habc, habc'\u27e9\n  have h\u2081 : a ^ 2 / (2 * a ^ 2 + 3) \u2264 a / 3 := by\n    have : 0 \u2264 a ^ 2 := by positivity\n    rw [div_le_div_iff]\n    nlinarith\n    positivity\n    positivity\n  have h\u2082 : b ^ 2 / (2 * b ^ 2 + 3) \u2264 b / 3 := by\n    have : 0 \u2264 b ^ 2 := by positivity\n    rw [div_le_div_iff]\n    nlinarith\n    positivity\n    positivity\n  have h\u2083 : c ^ 2 / (2 * c ^ 2 + 3) \u2264 c / 3 := by\n    have : 0 \u2264 c ^ 2 := by positivity\n    rw [div_le_div_iff]\n    nlinarith\n    positivity\n    positivity\n  linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 3 \u2227 a * b + b * c + c * a \u2264 3 \u2192\n   a ^ 2 / (2 * a ^ 2 + 3) + b ^ 2 / (2 * b ^ 2 + 3) + c ^ 2 / (2 * c ^ 2 + 3) \u2264 3 / 3:= by\n  rintro a b c \u27e8h\u2081, h\u2082, h\u2083, h\u2084, h\u2085\u27e9\n  norm_num\n  have : a ^ 2 / (2 * a ^ 2 + 3) \u2264 a / 3 := by\n    rw [div_le_div_iff] <;> nlinarith\n  have : b ^ 2 / (2 * b ^ 2 + 3) \u2264 b / 3 := by\n    rw [div_le_div_iff] <;> nlinarith\n  have : c ^ 2 / (2 * c ^ 2 + 3) \u2264 c / 3 := by\n    rw [div_le_div_iff] <;> nlinarith\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 3 \u2227 a * b + b * c + c * a \u2264 3 \u2192\n   a ^ 2 / (2 * a ^ 2 + 3) + b ^ 2 / (2 * b ^ 2 + 3) + c ^ 2 / (2 * c ^ 2 + 3) \u2264 3 / 3:= by\n  rintro a b c \u27e8ha, hb, hc, habc, habc'\u27e9\n  rw [add_assoc] at habc\n  rw [add_comm] at habc\n  have key\u2081 : a ^ 2 / (2 * a ^ 2 + 3) \u2264 a / 3 := by\n    have key\u2082 : a ^ 2 \u2264 a * 3 := by nlinarith\n    have key\u2083 : 0 \u2264 a := by nlinarith\n    have key\u2084 : 0 \u2264 a ^ 2 := by nlinarith\n    rw [div_le_div_iff]\n    nlinarith\n    nlinarith\n    nlinarith\n  have key\u2082 : b ^ 2 / (2 * b ^ 2 + 3) \u2264 b / 3 := by\n    have key\u2083 : b ^ 2 \u2264 b * 3 := by nlinarith\n    have key\u2084 : 0 \u2264 b := by nlinarith\n    have key\u2085 : 0 \u2264 b ^ 2 := by nlinarith\n    rw [div_le_div_iff]\n    nlinarith\n    nlinarith\n    nlinarith\n  have key\u2083 : c ^ 2 / (2 * c ^ 2 + 3) \u2264 c / 3 := by\n    have key\u2084 : c ^ 2 \u2264 c * 3 := by nlinarith\n    have key\u2085 : 0 \u2264 c := by nlinarith\n    have key\u2086 : 0 \u2264 c ^ 2 := by nlinarith\n    rw [div_le_div_iff]\n    nlinarith\n    nlinarith\n    nlinarith\n  linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 3 \u2227 a * b + b * c + c * a \u2264 3 \u2192\n   a ^ 2 / (2 * a ^ 2 + 3) + b ^ 2 / (2 * b ^ 2 + 3) + c ^ 2 / (2 * c ^ 2 + 3) \u2264 3 / 3:= by\n  intro a b c h\n  rcases h with \u27e8ha, hb, hc, habc, h\u27e9\n  have : a ^ 2 / (2 * a ^ 2 + 3) \u2264 a / 3 := by\n    rw [div_le_div_iff] <;> nlinarith [sq_nonneg a]\n  have : b ^ 2 / (2 * b ^ 2 + 3) \u2264 b / 3 := by\n    rw [div_le_div_iff] <;> nlinarith [sq_nonneg b]\n  have : c ^ 2 / (2 * c ^ 2 + 3) \u2264 c / 3 := by\n    rw [div_le_div_iff] <;> nlinarith [sq_nonneg c]\n  linarith\n  <;> norm_num"
  ]
 },
 {
  "old": "(n m : \u2115) (hm : 1 < m) (hn : Odd n) : \u2203 A B : \u2115, (Real.sqrt m + Real.sqrt (m-1))^n = A*Real.sqrt m + B*Real.sqrt (m-1) \u2227 (Real.sqrt m - Real.sqrt (m-1))^n = A*Real.sqrt m - B*Real.sqrt (m-1) := by",
  "new": "{p m n k : \u2115} (hp : p.Prime) (hpm : p ^ m \u2223 k) (hpn : p ^ n \u2223 k) : (p ^ m).Coprime (p ^ n) \u2228 1 \u2223 k:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_1_dvd_of_prime_pow_dvd_add_pow {p m n k : \u2115} (hp : p.Prime) (hpm : p ^ m \u2223 k) (hpn : p ^ n \u2223 k) : (p ^ m).Coprime (p ^ n) \u2228 1 \u2223 k:= by\n  refine' or_iff_not_imp_right.mpr fun h => _\n  contrapose! h\n  aesop (add norm [Nat.Coprime, Nat.pow_dvd_pow_iff_le_right])",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_1_dvd_of_prime_pow_dvd_add_pow {p m n k : \u2115} (hp : p.Prime) (hpm : p ^ m \u2223 k) (hpn : p ^ n \u2223 k) : (p ^ m).Coprime (p ^ n) \u2228 1 \u2223 k:= by\n  apply Or.intro_right\n  apply Nat.one_dvd\n  <;> simp [Nat.Prime.ne_zero, Nat.Prime.ne_zero, hp.ne_zero]\n  <;> omega\n  <;> simp [hpm, hpn]\n  <;> omega\n  <;> simp [hpm, hpn]\n  <;> omega\n  <;> simp [hpm, hpn]\n  <;> omega\n  <;> simp [hpm, hpn]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_1_dvd_of_prime_pow_dvd_add_pow {p m n k : \u2115} (hp : p.Prime) (hpm : p ^ m \u2223 k) (hpn : p ^ n \u2223 k) : (p ^ m).Coprime (p ^ n) \u2228 1 \u2223 k:= by\n  by_cases h : (p ^ m).Coprime (p ^ n)\n  exact Or.inl h\n  exact Or.inr (by simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right])",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_1_dvd_of_prime_pow_dvd_add_pow {p m n k : \u2115} (hp : p.Prime) (hpm : p ^ m \u2223 k) (hpn : p ^ n \u2223 k) : (p ^ m).Coprime (p ^ n) \u2228 1 \u2223 k:= by\n  by_cases h : (p ^ m).Coprime (p ^ n) <;> simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;> omega\n  <;> tauto\n  <;> omega\n  <;> tauto\n  <;> omega\n  <;> tauto\n  <;> omega\n  <;> tauto\n  <;> omega\n  <;> tauto\n  <;> omega\n  <;> tauto\n  <;> omega"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a * b + b * c + c * a = 1) : (1 / a + 1) * (1 / b + 1) + (1 / b - 1) * (1 / c - 1) + (1 / c + 1) * (1 / a + 1) \u2265 15 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z \u2264 3) : 1 / x ^ 2 + 1 / y ^ 2 + 1 / z ^ 2 \u2265 9:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z \u2264 3) :\n    1 / x ^ 2 + 1 / y ^ 2 + 1 / z ^ 2 \u2265 9:= by\n  have : x + y + z = 1 := h\u2081\n  have : 1 / x + 1 / y + 1 / z \u2264 3 := h\u2082\n  have h\u2083 : 0 < x * y := by positivity\n  have h\u2084 : 0 < x * y * z := by positivity\n  have h\u2085 : 0 < x * y + x * z + z * y := by positivity\n  field_simp [h\u2085] at this \u22a2\n  rw [div_le_iff (by positivity)] at this\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x + y), sq_nonneg (x - z), sq_nonneg (x + z),\n    sq_nonneg (y - z), sq_nonneg (y + z)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h\u2081 : x + y + z = 1) (h\u2082 : 1 / x + 1 / y + 1 / z \u2264 3) :\n    1 / x ^ 2 + 1 / y ^ 2 + 1 / z ^ 2 \u2265 9:= by\n  have h\u2080 : 0 < x * y := mul_pos hx hy\n  have h\u2083 : 0 < x * z := mul_pos hx hz\n  have h\u2084 : 0 < y * z := mul_pos hy hz\n  have h\u2085 : 0 < x * y * z := by positivity\n  field_simp [h\u2080, h\u2083, h\u2084, h\u2085] at h\u2082 \u22a2\n  rw [div_le_iff (by positivity)] at h\u2082\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_self_nonneg (x * y + x * z + y * z),\n    mul_self_nonneg (x * y - x * z), mul_self_nonneg (x * z - y * z),\n    mul_self_nonneg (y * z - x * y)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : (8 * a * (b + c) / ((b + 8 * c) * (c + 8 * b)))^(1 / 4) + (8 * b * (c + a) / ((c + 8 * a) * (a + 8 * c)))^(1 / 4) + (8 * c * (a + b) / ((a + 8 * b) * (b + 8 * a)))^(1 / 4) \u2265 2 := by",
  "new": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : 3 * Real.sqrt (a + b + c) \u2265 2 * (Real.sqrt a + Real.sqrt b + Real.sqrt c) / 3 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : 3 * Real.sqrt (a + b + c) \u2265 2 * (Real.sqrt a + Real.sqrt b + Real.sqrt c) / 3 := by\n  have h0 : 0 \u2264 Real.sqrt a := Real.sqrt_nonneg a\n  have h1 : 0 \u2264 Real.sqrt b := Real.sqrt_nonneg b\n  have h2 : 0 \u2264 Real.sqrt c := Real.sqrt_nonneg c\n  have h3 : 0 \u2264 Real.sqrt (a + b + c) := Real.sqrt_nonneg (a + b + c)\n  nlinarith [sq_sqrt (show 0 \u2264 a + b + c by linarith), sq_sqrt (show 0 \u2264 a by linarith), sq_sqrt (show 0 \u2264 b by linarith), sq_sqrt (show 0 \u2264 c by linarith),\n    mul_self_nonneg (Real.sqrt a - Real.sqrt b), mul_self_nonneg (Real.sqrt b - Real.sqrt c),\n    mul_self_nonneg (Real.sqrt c - Real.sqrt a), mul_self_nonneg (Real.sqrt a + Real.sqrt b + Real.sqrt c),\n    mul_self_nonneg (Real.sqrt a + Real.sqrt b + Real.sqrt c - 3 * Real.sqrt (a + b + c))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : 3 * Real.sqrt (a + b + c) \u2265 2 * (Real.sqrt a + Real.sqrt b + Real.sqrt c) / 3 := by\n  have h\u2080 : 0 \u2264 (Real.sqrt a - Real.sqrt b)^2 := sq_nonneg _\n  have h\u2081 : 0 \u2264 (Real.sqrt b - Real.sqrt c)^2 := sq_nonneg _\n  have h\u2082 : 0 \u2264 (Real.sqrt a - Real.sqrt c)^2 := sq_nonneg _\n  have h\u2083 : 0 \u2264 Real.sqrt (a + b + c) := by positivity\n  nlinarith [Real.sqrt_nonneg a, Real.sqrt_nonneg b, Real.sqrt_nonneg c,\n    Real.sq_sqrt (show 0 \u2264 a by positivity), Real.sq_sqrt (show 0 \u2264 b by positivity),\n    Real.sq_sqrt (show 0 \u2264 c by positivity), Real.sq_sqrt (show 0 \u2264 a + b + c by positivity)]\n  <;> norm_num"
  ]
 },
 {
  "old": "(A : Matrix (Fin 2) (Fin 2) \u211a) (hA : A =!![9 / 2, 7 / 2; -7 / 2, -5 / 2]) : A *!![-5 / 2, -7 / 2; 7 / 2, 9 / 2] = 1 := by",
  "new": "{n : \u2115} (M N : Matrix (Fin n) (Fin n) \u211a) (h : M * N = 1) : N * M = 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mat_mul_eq_one_of_mul_eq_one {n : \u2115} (M N : Matrix (Fin n) (Fin n) \u211a) (h : M * N = 1) : N * M = 1:= by\n  rw [\u2190 Matrix.mul_eq_one_comm] at h\n  simpa using h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mat_mul_eq_one_of_mul_eq_one {n : \u2115} (M N : Matrix (Fin n) (Fin n) \u211a) (h : M * N = 1) : N * M = 1:= by\n  have h' : N * M = 1 := by\n    have h' : M * N = 1 := h\n    have h'' : M * N = 1 := h'\n    have h''' : M * N = 1 := h''\n    exact (Matrix.mul_eq_one_comm.mp h''')\n  exact h'",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mat_mul_eq_one_of_mul_eq_one {n : \u2115} (M N : Matrix (Fin n) (Fin n) \u211a) (h : M * N = 1) : N * M = 1:= by\n  refine' Matrix.mul_eq_one_comm.mp _\n  simpa using h\n  <;> rfl\n  <;> simp [h]\n  <;> simp [h]\n  <;> rfl\n  <;> simp [h]\n  <;> simp [h]\n  <;> rfl\n  <;> simp [h]\n  <;> simp [h]\n  <;> rfl\n  <;> simp [h]\n  <;> simp [h]\n  <;> rfl\n  <;> simp [h]\n  <;> simp [h]\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mat_mul_eq_one_of_mul_eq_one {n : \u2115} (M N : Matrix (Fin n) (Fin n) \u211a) (h : M * N = 1) : N * M = 1:= by\n  rw [\u2190 Matrix.mul_eq_one_comm]\n  exact h"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : 4 * a ^ 2 + 2 * b ^ 4 + c ^ 8 + d ^ 8 \u2265 8 * a * b * c * d := by",
  "new": ": \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192 4 * a ^ 2 + 2 * b ^ 4 + c ^ 8 + d ^ 8 \u2265 8 * a * b * c * d := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192\n   4 * a ^ 2 + 2 * b ^ 4 + c ^ 8 + d ^ 8 \u2265 8 * a * b * c * d := by\n  intro a b c d h\u2080 h\u2081 h\u2082 h\u2083\n  nlinarith [sq_nonneg (a - b * c * d),\n    sq_nonneg (b ^ 2 - c ^ 2 * d ^ 2),\n    sq_nonneg (c ^ 4 - d ^ 4),\n    sq_nonneg (d ^ 2 - a * b * c),\n    mul_nonneg (sq_nonneg (a - b * c * d)) (sq_nonneg (b ^ 2 - c ^ 2 * d ^ 2)),\n    mul_nonneg (sq_nonneg (c ^ 4 - d ^ 4)) (sq_nonneg (d ^ 2 - a * b * c))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192\n   4 * a ^ 2 + 2 * b ^ 4 + c ^ 8 + d ^ 8 \u2265 8 * a * b * c * d := by\n  intro a b c d ha hb hc hd\n  nlinarith [sq_nonneg (a - b * c * d), sq_nonneg (b ^ 2 - c ^ 2 * d ^ 2),\n    sq_nonneg (c ^ 2 - d ^ 2), sq_nonneg (d ^ 2 - a * b),\n    mul_nonneg ha.le hb.le, mul_nonneg hc.le hd.le,\n    mul_nonneg (sq_nonneg a) (sq_nonneg b),\n    mul_nonneg (sq_nonneg c) (sq_nonneg d)]\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192\n   4 * a ^ 2 + 2 * b ^ 4 + c ^ 8 + d ^ 8 \u2265 8 * a * b * c * d := by\n  intro a b c d ha hb hc hd\n  have h1 : 0 < a * b * c * d := by positivity\n  nlinarith [sq_nonneg (a - b * c * d), sq_nonneg (b ^ 2 - c ^ 2 * d ^ 2), sq_nonneg (c ^ 4 - d ^ 4),\n    sq_nonneg (d ^ 2 - a * b * c), sq_nonneg (a * b - c * d ^ 2), sq_nonneg (b * c - d ^ 2 * a),\n    sq_nonneg (c * d - a * b ^ 2), sq_nonneg (d * a - b ^ 2 * c)]\n  <;> assumption\n  <;> norm_num\n  <;> assumption\n  <;> norm_num\n  <;> assumption\n  <;> norm_num\n  <;> assumption\n  <;> norm_num\n  <;> assumption\n  <;> norm_num\n  <;> assumption\n  <;> norm_num\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192\n   4 * a ^ 2 + 2 * b ^ 4 + c ^ 8 + d ^ 8 \u2265 8 * a * b * c * d := by\n  rintro a b c d h\u2081 h\u2082 h\u2083 h\u2084\n  nlinarith [sq_nonneg (a - b * c * d), sq_nonneg (b ^ 2 - c ^ 2 * d ^ 2),\n    sq_nonneg (c ^ 4 - d ^ 4), sq_nonneg (a - b ^ 2 * c ^ 2), sq_nonneg (b ^ 2 - c ^ 2),\n    sq_nonneg (a - b ^ 2 * d ^ 2), sq_nonneg (b ^ 2 - d ^ 2), sq_nonneg (a - b * c ^ 2),\n    sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (a - b * d ^ 2), sq_nonneg (b ^ 2 - d ^ 2)]\n  <;> norm_num"
  ]
 },
 {
  "old": "{n : \u2115} (h101 : 101 < n) (h101dvd : 101 \u2223 n) (hdiff : \u2200 d, 1 < d \u2227 d < n \u2192 \u2203 a b, d = a - b) : 100 \u2223 n := by",
  "new": "(p : \u2115) (hp : p.Prime) (n : \u2115) : Nat.Coprime p n \u2228 p \u2223 n := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (hp : p.Prime) (n : \u2115) : Nat.Coprime p n \u2228 p \u2223 n := by\n  apply or_iff_not_imp_right.2\n  intro h\n  exact hp.coprime_iff_not_dvd.2 h"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1) : 3 * (a^3 + 1) * (b^3 + 1) * (c^3 + 1) \u2265 (a + b + c) * (a + 1) * (b + 1) * (c + 1) := by",
  "new": "(a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  cases' a with a\n  all_goals cases' b with b\n  all_goals simp_all\n  all_goals omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  rcases a with (_ | _ | a) <;> rcases b with (_ | _ | b) <;> simp_all [Nat.Coprime]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  simp [Nat.eq_one_of_mul_eq_one_right, Nat.eq_one_of_mul_eq_one_left] at h\n  aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (a b : \u2115) (h : a * b = 1) : a = 1 \u2227 b = 1 \u2228 Nat.Coprime a b := by\n  rcases Nat.eq_zero_or_pos a with rfl | ha\n  all_goals rcases Nat.eq_zero_or_pos b with rfl | hb\n  all_goals simp_all [Nat.mul_eq_zero]"
  ]
 },
 {
  "old": "(x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x + y < Real.pi / 2) : sin (x + y) < sin x + sin y \u2227 sin x + sin y < tan (x + y) := by",
  "new": "(x : \u211d) (h : 0 < x) (h' : x < Real.pi / 2) : Real.sin (Real.pi / 2 - x) = cos x \u2227 0 < cos x \u2227 cos x < 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_add_x (x : \u211d) (h : 0 < x) (h' : x < Real.pi / 2) :\n  Real.sin (Real.pi / 2 - x) = cos x \u2227 0 < cos x \u2227 cos x < 1:= by\n  constructor\n  rw [Real.sin_sub]\n  simp [Real.sin_pi_div_two]\n  constructor\n  exact Real.cos_pos_of_mem_Ioo \u27e8by linarith, by linarith [Real.pi_pos]\u27e9\n  have h\u2082 : cos x < 1 := by\n    rw [\u2190 Real.cos_zero]\n    exact Real.cos_lt_cos_of_nonneg_of_le_pi_div_two (by linarith) (by linarith) (by linarith)\n  exact h\u2082",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_add_x (x : \u211d) (h : 0 < x) (h' : x < Real.pi / 2) :\n  Real.sin (Real.pi / 2 - x) = cos x \u2227 0 < cos x \u2227 cos x < 1:= by\n  constructor\n  rw [Real.sin_sub, Real.sin_pi_div_two]\n  simp\n  constructor\n  exact Real.cos_pos_of_mem_Ioo \u27e8by linarith, by linarith\u27e9\n  have : Real.cos x < 1 := by\n    rw [\u2190 Real.cos_zero]\n    exact Real.cos_lt_cos_of_nonneg_of_le_pi_div_two (by linarith) (by linarith) (by linarith)\n  exact this",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_add_x (x : \u211d) (h : 0 < x) (h' : x < Real.pi / 2) :\n  Real.sin (Real.pi / 2 - x) = cos x \u2227 0 < cos x \u2227 cos x < 1:= by\n  have h'' : 0 < Real.pi / 2 - x := by linarith\n  have h''' : Real.sin (Real.pi / 2 - x) = Real.cos x := by\n    rw [Real.sin_sub, Real.sin_pi_div_two]\n    simp\n  have h'''' : 0 < Real.cos x := Real.cos_pos_of_mem_Ioo \u27e8by linarith, by linarith [Real.pi_pos]\u27e9\n  have h''''' : Real.cos x < 1 := by\n    rw [\u2190 Real.cos_zero]\n    exact Real.cos_lt_cos_of_nonneg_of_le_pi_div_two (by linarith) (by linarith) (by linarith)\n  exact \u27e8h''', h'''', h'''''\u27e9"
  ]
 },
 {
  "old": ": \u2200 n : \u2115, 0 < n \u2192 \u00ac (Nat.Prime (4^n+n^4)) := by",
  "new": "(n : \u2115) (hn : n \u2208 primeFactors 5) : Nat.Prime n := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem prime_of_mem_prime_factors (n : \u2115) (hn : n \u2208 primeFactors 5) : Nat.Prime n := by\n  rw [Nat.mem_primeFactors] at hn\n  aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem prime_of_mem_prime_factors (n : \u2115) (hn : n \u2208 primeFactors 5) : Nat.Prime n := by\n  have : Nat.Prime n := by\n    rw [primeFactors] at hn\n    aesop\n  exact this",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem prime_of_mem_prime_factors (n : \u2115) (hn : n \u2208 primeFactors 5) : Nat.Prime n := by\n  have h\u2081 : Nat.Prime 5 := by decide\n  rw [Nat.mem_primeFactors] at hn\n  exact hn.1\n  <;> omega"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (hab : a + b + c = 3) : 2 \u2264 Real.sqrt (a / (a + b * c)) + Real.sqrt (b / (b + c * a)) + Real.sqrt (c / (c + a * b)) := by",
  "new": "(a b : \u2115) (hab : a \u2260 0 \u2227 b \u2260 0) : Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (hab : a \u2260 0 \u2227 b \u2260 0) : Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b := by\n  have h : a.Coprime b \u2228 \u00aca.Coprime b := by apply em\n  exact h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (hab : a \u2260 0 \u2227 b \u2260 0) : Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b := by\n  by_cases h : Nat.Coprime a b\n  exact Or.inl h\n  exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (hab : a \u2260 0 \u2227 b \u2260 0) : Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b := by\n  by_cases h : Nat.Coprime a b\n  exact Or.inl h\n  exact Or.inr h\n  <;>\n  aesop\n  <;>\n  aesop\n  <;>\n  aesop\n  <;>\n  aesop\n  <;>\n  aesop"
  ]
 },
 {
  "old": "(x y z : \u211d) : 3 / 2 * Real.sqrt ((x + y) * (y + z) * (z + x)) \u2265 x * Real.sqrt (y + z) + y * Real.sqrt (z + x) + z * Real.sqrt (x + y) := by",
  "new": "(x y z : \u211d) : 2 * (x^2 + y^2 + z^2) \u2264 2 * (x * y + y * z + z * x) + \u221a(4 * (x^2 + y^2 + z^2)) * \u221a(3 * (y^2 + z^2 + x^2)):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) : \n   2 * (x^2 + y^2 + z^2) \u2264 2 * (x * y + y * z + z * x) + \u221a(4 * (x^2 + y^2 + z^2)) * \u221a(3 * (y^2 + z^2 + x^2)):= by\n  have h\u2081 : 0 \u2264 \u221a(4 * (x ^ 2 + y ^ 2 + z ^ 2)) * \u221a(3 * (y ^ 2 + z ^ 2 + x ^ 2)) := by positivity\n  nlinarith [sq_sqrt (show 0 \u2264 4 * (x ^ 2 + y ^ 2 + z ^ 2) by positivity),\n    sq_sqrt (show 0 \u2264 3 * (y ^ 2 + z ^ 2 + x ^ 2) by positivity),\n    mul_self_nonneg (x + y + z),\n    mul_self_nonneg (x - y),\n    mul_self_nonneg (y - z),\n    mul_self_nonneg (z - x)]"
  ]
 },
 {
  "old": "(x : \u211d) (hx : x > -1) : Real.log (x + 1) < x := by",
  "new": "(hx : 0 < x) : Real.log x \u2264 x - 1 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_le_sub_one_of_pos (hx : 0 < x) : Real.log x \u2264 x - 1 := by\n  have := Real.log_le_sub_one_of_pos hx\n  linarith [this]\n  <;> linarith [Real.log_le_sub_one_of_pos hx]\n  <;> linarith [Real.log_le_sub_one_of_pos hx]\n  <;> linarith [Real.log_le_sub_one_of_pos hx]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_le_sub_one_of_pos (hx : 0 < x) : Real.log x \u2264 x - 1 := by\n  have := Real.log_le_sub_one_of_pos hx\n  linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_le_sub_one_of_pos (hx : 0 < x) : Real.log x \u2264 x - 1 := by\n  nlinarith [Real.log_le_sub_one_of_pos (by positivity : 0 < x)]"
  ]
 },
 {
  "old": "(n : \u2115) (A B C : Matrix (Fin n) (Fin n) \u211d) (hA : A * B = B * A) (hB : B * C = C * B) (hC : C * A = A * C) (h : A * B * C = 0) : (A ^ 3 + B ^ 3 + C ^ 3).det * (A + B + C).det \u2265 0 := by",
  "new": "(A : Matrix (Fin 2) (Fin 2) \u211d) (h : A.det \u2265 0) : A.det = 0 \u2228 A.det > 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem mat_det_cases (A : Matrix (Fin 2) (Fin 2) \u211d) (h : A.det \u2265 0) :  A.det = 0 \u2228 A.det > 0:= by\n  have h\u2080 : A.det \u2265 0 := h\n  rw [ge_iff_le] at h\u2080\n  exact or_iff_not_imp_right.2 fun h\u2081 => by linarith\n  <;> simp_all"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : (a / (a ^ 2 + b * c) + b / (b ^ 2 + c * a) + c / (c ^ 2 + a * b) \u2264 3 / (2 * a * b * c)) := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : (1 / (a + 1) + 1 / (b + 1) + 1 / (c + 1) \u2264 9 / 4) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : (1 / (a + 1) + 1 / (b + 1) + 1 / (c + 1) \u2264 9 / 4)   := by\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c), mul_pos ha hb, mul_pos ha hc, mul_pos hb hc]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : (1 / (a + 1) + 1 / (b + 1) + 1 / (c + 1) \u2264 9 / 4)   := by\n  have : 0 < 3 := by linarith\n  field_simp [ha.ne', hb.ne', hc.ne']\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [mul_nonneg ha.le hb.le, mul_nonneg ha.le hc.le, mul_nonneg hb.le hc.le,\n    mul_nonneg (sq_nonneg (a - b)) hc.le, mul_nonneg (sq_nonneg (b - c)) ha.le,\n    mul_nonneg (sq_nonneg (c - a)) hb.le]\n  <;> linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption"
  ]
 },
 {
  "old": "(x y : \u2115) (hx: x \u2265 11) (hy: x > y) : x^2009 - y^2009 \u2265 11^2009 - 10^2009 := by",
  "new": "(x y : \u2115) (h : x \u2265 y) (h2 : Nat.Coprime x y) : Nat.Coprime (x ^ 3) (y ^ 3) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_of_ge_coprime (x y : \u2115) (h : x \u2265 y) (h2 : Nat.Coprime x y) : Nat.Coprime (x ^ 3) (y ^ 3) := by\n  rw [Nat.coprime_comm] at h2 \u22a2\n  rw [Nat.coprime_comm]\n  simp [Nat.coprime_comm] at h2 \u22a2\n  apply h2\n  <;> simp [Nat.coprime_comm] at h2 \u22a2\n  <;> apply h2\n  <;> simp [Nat.coprime_comm] at h2 \u22a2\n  <;> apply h2\n  <;> simp [Nat.coprime_comm] at h2 \u22a2\n  <;> apply h2\n  <;> simp [Nat.coprime_comm] at h2 \u22a2\n  <;> apply h2",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_of_ge_coprime (x y : \u2115) (h : x \u2265 y) (h2 : Nat.Coprime x y) : Nat.Coprime (x ^ 3) (y ^ 3) := by\n  rw [Nat.coprime_comm] at h2 \u22a2\n  simpa [Nat.coprime_comm, h2] using h2.pow 3 3",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_of_ge_coprime (x y : \u2115) (h : x \u2265 y) (h2 : Nat.Coprime x y) : Nat.Coprime (x ^ 3) (y ^ 3) := by\n  rw [Nat.coprime_comm] at h2 \u22a2\n  rw [Nat.coprime_comm]\n  simp_all [Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_of_ge_coprime (x y : \u2115) (h : x \u2265 y) (h2 : Nat.Coprime x y) : Nat.Coprime (x ^ 3) (y ^ 3) := by\n  have h3 : x ^ 3 \u2265 y ^ 3 := by\n    exact Nat.pow_le_pow_of_le_left h 3\n  have h4 : Nat.Coprime (x ^ 3) (y ^ 3) := by\n    exact Nat.Coprime.pow 3 3 h2\n  exact h4"
  ]
 },
 {
  "old": "(x y : \u211d) (hx : 0 < x \u2227 x < Real.pi / 2) (hy : 0 < y \u2227 y < Real.pi / 2) (h : Real.tan x + Real.tan y = 4) : (6 - Real.sqrt 5) / 4 \u2264 Real.sin x ^ 2 + Real.sin y ^ 2 \u2227 Real.sin x ^ 2 + Real.sin y ^ 2 \u2264 8 / 5 := by",
  "new": "(x : \u211d) (hx : 0 < x \u2227 x < Real.pi / 2) : Real.sqrt (1 - Real.sin x ^ 2) > 0 \u2227 Real.sqrt (1 - Real.sin x ^ 2) < 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (x : \u211d) (hx : 0 < x \u2227 x < Real.pi / 2) : \n    Real.sqrt (1 - Real.sin x ^ 2) > 0 \u2227  Real.sqrt (1 - Real.sin x ^ 2) < 1:= by\n  have h1 : 0 < Real.sin x := Real.sin_pos_of_pos_of_lt_pi hx.1 (by linarith)\n  have h2 : Real.sin x < 1 := by\n    rw [\u2190 sin_pi_div_two]\n    apply Real.sin_lt_sin_of_lt_of_le_pi_div_two <;> linarith\n  have h3 : 0 < 1 - Real.sin x ^ 2 := by\n    nlinarith [sin_sq_le_one x]\n  have h4 : 1 - Real.sin x ^ 2 < 1 := by\n    nlinarith [sin_sq_le_one x]\n  exact \u27e8Real.sqrt_pos.mpr h3, Real.sqrt_lt' (by nlinarith) |>.mpr (by nlinarith)\u27e9"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = a * b * c) : (b + c) ^ 2 / a + (c + a) ^ 2 / b + (a + b) ^ 2 / c \u2265 (a + b) * (b + c) * (c + a) / 2 := by",
  "new": "(x y z : \u211d) (h : 0 < x \u2227 0 < y \u2227 0 < z) (h1 : x * y + y * z + z * x = 1) : (x + y) ^ 2 / x + (y + z) ^ 2 / y + (z + x) ^ 2 / z \u2265 (x + y) * (y + z) * (z + x) / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (h : 0 < x \u2227 0 < y \u2227 0 < z) (h1 : x * y + y * z + z * x = 1) :\n  (x + y) ^ 2 / x + (y + z) ^ 2 / y + (z + x) ^ 2 / z \u2265 (x + y) * (y + z) * (z + x) / 2:= by\n  rcases h with \u27e8h_x, h_y, h_z\u27e9\n  have hx : 0 < x * y := by positivity\n  have hy : 0 < y * z := by positivity\n  have hz : 0 < z * x := by positivity\n  have h2 : 0 < x * y * z := by positivity\n  field_simp [h_x, h_y, h_z, hx, hy, hz, h2]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x * y + y * z + z * x), mul_self_nonneg (x * y - y * z),\n    mul_self_nonneg (y * z - z * x), mul_self_nonneg (z * x - x * y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (h : 0 < x \u2227 0 < y \u2227 0 < z) (h1 : x * y + y * z + z * x = 1) :\n  (x + y) ^ 2 / x + (y + z) ^ 2 / y + (z + x) ^ 2 / z \u2265 (x + y) * (y + z) * (z + x) / 2:= by\n  have x_pos : 0 < x := (h.1)\n  have y_pos : 0 < y := (h.2).1\n  have z_pos : 0 < z := (h.2).2\n  have xy_pos : 0 < x * y := mul_pos x_pos y_pos\n  have yz_pos : 0 < y * z := mul_pos y_pos z_pos\n  have zx_pos : 0 < z * x := mul_pos z_pos x_pos\n  have h\u2082 : (x + y) ^ 2 / x + (y + z) ^ 2 / y + (z + x) ^ 2 / z \u2265 (x + y) * (y + z) * (z + x) / 2 := by\n    rw [ge_iff_le]\n    have h\u2083 : 0 < x * y * z := by positivity\n    have h\u2084 : 0 < (x * y * z) * 2 := by positivity\n    field_simp [h\u2083, h\u2084]\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n      mul_self_nonneg (x * y + y * z + z * x),\n      mul_self_nonneg (x * y - y * z),\n      mul_self_nonneg (y * z - z * x),\n      mul_self_nonneg (z * x - x * y)]\n  linarith [h\u2082]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (h : 0 < x \u2227 0 < y \u2227 0 < z) (h1 : x * y + y * z + z * x = 1) :\n  (x + y) ^ 2 / x + (y + z) ^ 2 / y + (z + x) ^ 2 / z \u2265 (x + y) * (y + z) * (z + x) / 2:= by\n  rcases h with \u27e8hx : 0 < x, hy : 0 < y, hz : 0 < z\u27e9\n  have h2 : 0 < x * y := by positivity\n  have h3 : 0 < y * z := by positivity\n  have h4 : 0 < z * x := by positivity\n  have h5 : 0 < x * y * z := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x * y + y * z + z * x),\n    mul_self_nonneg (x * y - y * z),\n    mul_self_nonneg (y * z - z * x),\n    mul_self_nonneg (z * x - x * y)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : (a * b / (a^5 + b^5 + a * b) + b * c / (b^5 + c^5 + b * c) + a * c / (a^5 + c^5 + a * c) \u2264 1) := by",
  "new": "(x y z : \u211d) (h : 0 < x \u2227 0 < y \u2227 0 < z) (h' : x * y * z = 1) : x ^ 3 * y ^ 3 * z ^ 3 = 1 \u2227 x * y * z * (x * y + y * z + z * x) \u2265 x * y * z * 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_20 (x y z : \u211d) (h : 0 < x \u2227 0 < y \u2227 0 < z) (h' : x * y * z = 1) :  x ^ 3 * y ^ 3 * z ^ 3 = 1 \u2227 x * y * z * (x * y + y * z + z * x) \u2265 x * y * z * 3:= by\n  have h'' : 0 < x * y := mul_pos h.1 h.2.1\n  have h''' : 0 < y * z := mul_pos h.2.1 h.2.2\n  have h'''' : 0 < z * x := mul_pos h.2.2 h.1\n  constructor\n  rw [show x ^ 3 * y ^ 3 * z ^ 3 = (x * y * z) ^ 3 by ring]\n  rw [h']\n  norm_num\n  nlinarith [sq_nonneg (x * y - 1), sq_nonneg (y * z - 1), sq_nonneg (z * x - 1)]\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_20 (x y z : \u211d) (h : 0 < x \u2227 0 < y \u2227 0 < z) (h' : x * y * z = 1) :  x ^ 3 * y ^ 3 * z ^ 3 = 1 \u2227 x * y * z * (x * y + y * z + z * x) \u2265 x * y * z * 3:= by\n  have h1 : 0 < x * y := mul_pos h.1 h.2.1\n  have h2 : 0 < y * z := mul_pos h.2.1 h.2.2\n  have h3 : 0 < z * x := mul_pos h.2.2 h.1\n  have h4 : 0 < x * y * z := by nlinarith\n  have h5 : x ^ 3 * y ^ 3 * z ^ 3 = (x * y * z) ^ 3 := by ring\n  have h6 : x * y * z * (x * y + y * z + z * x) \u2265 x * y * z * 3 := by\n    nlinarith [sq_nonneg (x * y - 1), sq_nonneg (y * z - 1), sq_nonneg (z * x - 1)]\n  exact \u27e8by simp_all, by simp_all\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_20 (x y z : \u211d) (h : 0 < x \u2227 0 < y \u2227 0 < z) (h' : x * y * z = 1) :  x ^ 3 * y ^ 3 * z ^ 3 = 1 \u2227 x * y * z * (x * y + y * z + z * x) \u2265 x * y * z * 3:= by\n  have h1 : x ^ 3 * y ^ 3 * z ^ 3 = 1 := by\n    have h1 : x ^ 3 * y ^ 3 * z ^ 3 = (x * y * z) ^ 3 := by ring\n    rw [h1, h']\n    norm_num\n  have h2 : x * y * z * (x * y + y * z + z * x) \u2265 x * y * z * 3 := by\n    have h2 : 0 < x * y := by nlinarith\n    have h3 : 0 < y * z := by nlinarith\n    have h4 : 0 < z * x := by nlinarith\n    have h5 : 0 < x * y * z := by nlinarith\n    have h6 : x * y + y * z + z * x \u2265 3 := by\n      nlinarith [sq_nonneg (x * y - 1), sq_nonneg (y * z - 1), sq_nonneg (z * x - 1)]\n    nlinarith\n  exact \u27e8h1, h2\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_20 (x y z : \u211d) (h : 0 < x \u2227 0 < y \u2227 0 < z) (h' : x * y * z = 1) :  x ^ 3 * y ^ 3 * z ^ 3 = 1 \u2227 x * y * z * (x * y + y * z + z * x) \u2265 x * y * z * 3:= by\n  have h\u2080 : x * y * z = 1 := h'\n  have h\u2081 : x ^ 3 * y ^ 3 * z ^ 3 = (x * y * z) ^ 3 := by ring\n  have h\u2082 : x * y * z * (x * y + y * z + z * x) \u2265 x * y * z * 3 := by\n    nlinarith [sq_nonneg (x * y - 1), sq_nonneg (y * z - 1), sq_nonneg (z * x - 1),\n      mul_pos h.1 h.2.1, mul_pos h.2.1 h.2.2, mul_pos h.1 h.2.2]\n  exact \u27e8by simp_all, by linarith\u27e9"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) (habc : a * b * c \u2260 0) : a^2 + b^2 + c^2 + (4 * a * b * c * (a + b + c)) / (a^2 + b^2 + c^2) \u2265 2 * (a * b + b * c + c * a) := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a * b * c \u2260 0 \u2192 a ^ 2 + b ^ 2 + c ^ 2 + (4 * a * b * c * (a + b + c)) / (a ^ 2 + b ^ 2 + c ^ 2) \u2265 2 * (a * b + b * c + c * a):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a * b * c \u2260 0 \u2192\n     a ^ 2 + b ^ 2 + c ^ 2 + (4 * a * b * c * (a + b + c)) / (a ^ 2 + b ^ 2 + c ^ 2) \u2265\n     2 * (a * b + b * c + c * a):= by\n  rintro a b c \u27e8ha, hb, hc, h\u27e9\n  have h1 : 0 < a := lt_of_le_of_ne ha (by rintro rfl; simp_all)\n  have h2 : 0 < b := lt_of_le_of_ne hb (by rintro rfl; simp_all)\n  have h3 : 0 < c := lt_of_le_of_ne hc (by rintro rfl; simp_all)\n  have h4 : 0 < a ^ 2 + b ^ 2 + c ^ 2 := by positivity\n  have h5 : 0 < a * b := by positivity\n  have h6 : 0 < b * c := by positivity\n  have h7 : 0 < a * c := by positivity\n  field_simp\n  rw [le_div_iff h4]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (a - c),\n    mul_self_nonneg (a - b - c), mul_self_nonneg (b - c - a), mul_self_nonneg (c - a - b)]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a * b * c \u2260 0 \u2192\n     a ^ 2 + b ^ 2 + c ^ 2 + (4 * a * b * c * (a + b + c)) / (a ^ 2 + b ^ 2 + c ^ 2) \u2265\n     2 * (a * b + b * c + c * a):= by\n  intro a b c h\n  have ha : 0 < a := lt_of_le_of_ne h.1 (by rintro rfl; simp_all)\n  have hb : 0 < b := lt_of_le_of_ne h.2.1 (by rintro rfl; simp_all)\n  have hc : 0 < c := lt_of_le_of_ne h.2.2.1 (by rintro rfl; simp_all)\n  have hab : 0 < a * b := mul_pos ha hb\n  have hbc : 0 < b * c := mul_pos hb hc\n  have hac : 0 < c * a := mul_pos hc ha\n  field_simp [hab.ne', hbc.ne', hac.ne']\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a - b - c), mul_self_nonneg (b - c - a),\n    mul_self_nonneg (c - a - b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a * b * c \u2260 0 \u2192\n     a ^ 2 + b ^ 2 + c ^ 2 + (4 * a * b * c * (a + b + c)) / (a ^ 2 + b ^ 2 + c ^ 2) \u2265\n     2 * (a * b + b * c + c * a):= by\n  rintro a b c \u27e8h\u2081, h\u2082, h\u2083, h\u2084\u27e9\n  have h\u2085 : 0 < a := lt_of_le_of_ne h\u2081 (by rintro rfl; simp_all)\n  have h\u2086 : 0 < b := lt_of_le_of_ne h\u2082 (by rintro rfl; simp_all)\n  have h\u2087 : 0 < c := lt_of_le_of_ne h\u2083 (by rintro rfl; simp_all)\n  have h\u2088 : 0 < a ^ 2 + b ^ 2 + c ^ 2 := by positivity\n  have h\u2089 : 0 < a * b * c := by positivity\n  have h\u2081\u2080 : 0 < a + b + c := by\n    by_contra! h\n    have : a = 0 \u2227 b = 0 \u2227 c = 0 := by\n      constructor\n      \u00b7 nlinarith\n      constructor\n      \u00b7 nlinarith\n      nlinarith\n    simp_all\n  field_simp [h\u2084]\n  rw [le_div_iff h\u2088]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a - b - c), mul_self_nonneg (b - c - a), mul_self_nonneg (c - a - b)]"
  ]
 },
 {
  "old": "(f : \u211d \u2192 \u211d): (\u2200 x y, f (f x + y) = f (x ^ 2 - y) + 4 * f x * y) \u2194 \u2203 l:\u211d, \u2200 x, f x = l * x := by",
  "new": "(x y : \u211d) (h\u2080 : 0 < x \u2227 0 < y) (h\u2081 : x \u2260 y) (h\u2082 : x ^ 2 + y ^ 2 = 1) : \u00ac(\u2200 (f : \u211d \u2192 \u211d), (\u2200 x y, f (x ^ 2 - y) + (x - y) ^ 2 = 2 * (f x * (x - y))) \u2194 \u2203 k : \u211d, \u2200 x, f x = k * x):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem hrb2021_27 (x y : \u211d) (h\u2080 : 0 < x \u2227 0 < y) (h\u2081 : x \u2260 y) (h\u2082 : x ^ 2 + y ^ 2 = 1) : \n   \u00ac(\u2200  (f : \u211d \u2192 \u211d), (\u2200 x y, f (x ^ 2 - y) + (x - y) ^ 2 = 2 * (f x * (x - y))) \u2194 \u2203 k : \u211d, \u2200 x, f x = k * x):= by\n  push_neg\n  use fun x => 2 * x\n  simp only [mul_sub, mul_one, mul_add, mul_pow]\n  apply Or.inr\n  refine \u27e8?_, \u27e82, ?_\u27e9\u27e9\n  \u00b7 use 0, 1\n    norm_num\n  \u00b7 intro x\n    ring",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem hrb2021_27 (x y : \u211d) (h\u2080 : 0 < x \u2227 0 < y) (h\u2081 : x \u2260 y) (h\u2082 : x ^ 2 + y ^ 2 = 1) : \n   \u00ac(\u2200  (f : \u211d \u2192 \u211d), (\u2200 x y, f (x ^ 2 - y) + (x - y) ^ 2 = 2 * (f x * (x - y))) \u2194 \u2203 k : \u211d, \u2200 x, f x = k * x):= by\n  intro h\n  have h\u2083 := h (fun x => x)\n  have h\u2084 := h\u2083.2 \u27e81, fun x => by simp\u27e9\n  have h\u2085 := h\u2084 0 1\n  have h\u2086 := h\u2084 1 0\n  have h\u2087 := h\u2084 0 (-1)\n  have h\u2088 := h\u2084 1 1\n  linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a^3 / b + b^3 / c + c^3 / a \u2265 a * Real.sqrt (a * b) + b * Real.sqrt (b * c) + c * Real.sqrt (c * a) := by",
  "new": ": \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 a^3 / b + b^3 / c + c^3 / a \u2265 a * Real.sqrt (a * b) + b * Real.sqrt (b * c) + c * Real.sqrt (c * a) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 a^3 / b + b^3 / c + c^3 / a \u2265 a * Real.sqrt (a * b) + b * Real.sqrt (b * c) + c * Real.sqrt (c * a)  := by\n  intro a b c h\u2080\n  rcases h\u2080 with \u27e8ha, hb, hc\u27e9\n  have h\u2081 : 0 < a * b := by positivity\n  have h\u2082 : 0 < b * c := by positivity\n  have h\u2083 : 0 < c * a := by positivity\n  have h\u2084 : Real.sqrt (a * b) \u2264 (a + b) / 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (a - b)]\n  have h\u2085 : Real.sqrt (b * c) \u2264 (b + c) / 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (b - c)]\n  have h\u2086 : Real.sqrt (c * a) \u2264 (c + a) / 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (c - a)]\n  have h\u2087 : a ^ 3 / b + b ^ 3 / c + c ^ 3 / a \u2265 a * Real.sqrt (a * b) + b * Real.sqrt (b * c) + c * Real.sqrt (c * a) := by\n    have h\u2087\u2080 : a ^ 3 / b + b ^ 3 / c + c ^ 3 / a \u2265 a ^ 2 + b ^ 2 + c ^ 2 := by\n      rw [add_assoc]\n      have h\u2087\u2080 : 0 < a * b * c := by positivity\n      field_simp [h\u2081, h\u2082, h\u2083, h\u2087\u2080]\n      rw [le_div_iff (by positivity)]\n      nlinarith [sq_nonneg (a ^ 2 - b * c), sq_nonneg (b ^ 2 - c * a), sq_nonneg (c ^ 2 - a * b)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  exact h\u2087",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 a^3 / b + b^3 / c + c^3 / a \u2265 a * Real.sqrt (a * b) + b * Real.sqrt (b * c) + c * Real.sqrt (c * a)  := by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  have h\u2080 : 0 < a * b := by positivity\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * a := by positivity\n  have h\u2083 : Real.sqrt (a * b) \u2264 (a + b) / 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (a - b)]\n  have h\u2084 : Real.sqrt (b * c) \u2264 (b + c) / 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (b - c)]\n  have h\u2085 : Real.sqrt (c * a) \u2264 (c + a) / 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (c - a)]\n  have h\u2086 : a ^ 3 / b + b ^ 3 / c + c ^ 3 / a \u2265 a * Real.sqrt (a * b) + b * Real.sqrt (b * c) + c * Real.sqrt (c * a) := by\n    have h\u2087 : a ^ 3 / b + b ^ 3 / c + c ^ 3 / a \u2265 a * (a + b) / 2 + b * (b + c) / 2 + c * (c + a) / 2 := by\n      have h\u2088 : a ^ 3 / b + b ^ 3 / c + c ^ 3 / a \u2265 a * (a + b) / 2 + b * (b + c) / 2 + c * (c + a) / 2 := by\n        field_simp\n        rw [div_le_div_iff (by positivity) (by positivity)]\n        nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n          mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le,\n          mul_nonneg (sq_nonneg (a - b)) hc.le, mul_nonneg (sq_nonneg (b - c)) ha.le,\n          mul_nonneg (sq_nonneg (c - a)) hb.le]\n      linarith\n    nlinarith\n  linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 a^3 / b + b^3 / c + c^3 / a \u2265 a * Real.sqrt (a * b) + b * Real.sqrt (b * c) + c * Real.sqrt (c * a)  := by\n  rintro a b c \u27e8a_pos, b_pos, c_pos\u27e9\n  have : 0 < a * b := by positivity\n  have : 0 < b * c := by positivity\n  have : 0 < c * a := by positivity\n  have h\u2080 : Real.sqrt (a * b) \u2264 (a + b) / 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (a - b)]\n  have h\u2081 : Real.sqrt (b * c) \u2264 (b + c) / 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (b - c)]\n  have h\u2082 : Real.sqrt (c * a) \u2264 (c + a) / 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (c - a)]\n  have h\u2083 : a ^ 3 / b + b ^ 3 / c + c ^ 3 / a \u2265 a * Real.sqrt (a * b) + b * Real.sqrt (b * c) + c * Real.sqrt (c * a) := by\n    have h\u2084 : a ^ 3 / b + b ^ 3 / c + c ^ 3 / a \u2265 a * ((a + b) / 2) + b * ((b + c) / 2) + c * ((c + a) / 2) := by\n      have h\u2085 : 0 < a * b * c := by positivity\n      field_simp [h\u2085]\n      rw [div_le_div_iff (by positivity) (by positivity)]\n      nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n        sq_nonneg (a ^ 2 - a * b), sq_nonneg (b ^ 2 - b * c), sq_nonneg (c ^ 2 - c * a),\n        sq_nonneg (a * b - a * c), sq_nonneg (b * c - b * a), sq_nonneg (c * a - c * b)]\n    nlinarith\n  exact h\u2083"
  ]
 },
 {
  "old": "(a b c : \u211d) (habc : a + b + c = 0) (h : a ^ 2 + b ^ 2 + c ^ 2 = 3) : -3 * Real.sqrt 26 / 4 \u2264 a ^ 4 * b + b ^ 4 * c + c ^ 4 * a \u2227 a ^ 4 * b + b ^ 4 * c + c ^ 4 * a \u2264 3 * Real.sqrt 26 / 4 := by",
  "new": "(a b c : \u211d) (hab : a + b + c = 0) (h : a ^ 2 + b ^ 2 + c ^ 2 = 3) : a * b * c * (a ^ 2 + b ^ 2 + c ^ 2) \u2264 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_616 (a b c : \u211d) (hab : a + b + c = 0) (h : a ^ 2 + b ^ 2 + c ^ 2 = 3) :  a * b * c * (a ^ 2 + b ^ 2 + c ^ 2) \u2264 3:= by\n  simp only [hab, h]\n  ring_nf\n  nlinarith [sq_nonneg (a ^ 2 + b ^ 2 + c ^ 2), sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_616 (a b c : \u211d) (hab : a + b + c = 0) (h : a ^ 2 + b ^ 2 + c ^ 2 = 3) :  a * b * c * (a ^ 2 + b ^ 2 + c ^ 2) \u2264 3:= by\n  simp_all only [mul_assoc, mul_comm]\n  nlinarith [sq_nonneg (a ^ 2 + b ^ 2 + c ^ 2), sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_616 (a b c : \u211d) (hab : a + b + c = 0) (h : a ^ 2 + b ^ 2 + c ^ 2 = 3) :  a * b * c * (a ^ 2 + b ^ 2 + c ^ 2) \u2264 3:= by\n  simp_all only [pow_two, mul_add, mul_sub, mul_one, mul_div_cancel_left, mul_assoc]\n  ring_nf\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a + b), sq_nonneg (c - 1), sq_nonneg (c + 1)]\n  <;> linarith\n  <;> nlinarith\n  <;> nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : (2 * a ^ 2 + 1) / (b + c) * (a + 1) + (2 * b ^ 2 + 1) / (c + a) * (b + 1) + (2 * c ^ 2 + 1) / (a + b) * (c + 1) \u2265 33 / 8 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9 := by\n  have h\u2081 : 1 / x + 1 / y + 1 / z \u2265 3:= by\n    have : 0 < x * y * z := by positivity\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n      mul_self_nonneg (x + y + z)]\n  have h\u2082 : 1 / x + 1 / y + 1 / z \u2265 3 := by linarith\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9 := by\n  have : 1 / x + 1 / y + 1 / z \u2265 3 := by\n    field_simp [hx, hy, hz, hab]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n      mul_pos hx hy, mul_pos hx hz, mul_pos hy hz]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9 := by\n  have : x + y + z = 1 := hab\n  have h : 0 < x * y := by positivity\n  have h' : 0 < y * z := by positivity\n  have h'' : 0 < x * z := by positivity\n  have h1 : 1 / x + 1 / y + 1 / z \u2265 3 := by\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x + y + z), sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (1 / x + 1 / y + 1 / z) ^ 2 \u2265 9 := by\n  have h\u2081 : 1 / x + 1 / y + 1 / z \u2265 3:= by\n    have h\u2081 : 0 < x * y := mul_pos hx hy\n    have h\u2082 : 0 < x * z := mul_pos hx hz\n    have h\u2083 : 0 < y * z := mul_pos hy hz\n    field_simp [hab]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n  nlinarith [sq_nonneg (1 / x + 1 / y + 1 / z - 3)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a^3 + b^3 + c^3 - 3*a*b*c \u2265 3 * |(a - b) * (b - c) * (c - a)| := by",
  "new": "(a b : \u2115) (h : a ^ 2 + b ^ 2 \u2264 2 * 4 * 4) : Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (h : a ^ 2 + b ^ 2 \u2264 2 * 4 * 4) :\n  Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b:= by\n  by_cases h\u2081 : Nat.Coprime a b\n  exact Or.inl h\u2081\n  exact Or.inr h\u2081",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (h : a ^ 2 + b ^ 2 \u2264 2 * 4 * 4) :\n  Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b:= by apply or_iff_not_imp_right.2; tauto\n",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (h : a ^ 2 + b ^ 2 \u2264 2 * 4 * 4) :\n  Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b:= by\n  by_cases h\u2080 : Nat.Coprime a b <;> simp [h\u2080]\n  <;> try norm_num <;> omega"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : 2 \u2265 (1 - a) ^ 3 / (3 * a + b + c) + (1 - b) ^ 3 / (3 * b + c + a) + (1 - c) ^ 3 / (3 * c + a + b) \u2227 (1 - a) ^ 3 / (3 * a + b + c) + (1 - b) ^ 3 / (3 * b + c + a) + (1 - c) ^ 3 / (3 * c + a + b) \u2265 8 / 15 := by",
  "new": ": \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c = 1 \u2192 a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2 + a ^ 2 * c ^ 2 + a * b * b * c + b * c * c * a + a * b * c * b \u2265 2 * a * b * c:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c = 1 \u2192\n    a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 2 + b ^ 2 * c ^ 2 + c ^ 2 * a ^ 2 + a ^ 2 * c ^ 2 + a * b * b * c + b * c * c * a + a * b * c * b \u2265 2 * a * b * c:= by\n  rintro a b c \u27e8h1, h2, h3, h4\u27e9\n  have h5 : 0 < a * b := mul_pos h1 h2\n  have h6 : 0 < b * c := mul_pos h2 h3\n  have h7 : 0 < a * c := mul_pos h1 h3\n  have h8 : 0 < a * b * c := by positivity\n  have h9 : 0 < a * b * c * b := by positivity\n  have h10 : 0 < a * b * c * a := by positivity\n  have h11 : 0 < a * b * c * c := by positivity\n  have h12 : 0 < a * b * b * c := by positivity\n  have h13 : 0 < a * b * c * a := by positivity\n  nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (b - c),\n    mul_self_nonneg (c - a)]\n  <;> try norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2081 : a + b > c) (h\u2082 : a + c > b) (h\u2083 : b + c > a) : 1 / (2 * a^2 + b * c) + 1 / (2 * b^2 + c * a) + 1 / (2 * c^2 + a * b) \u2265 2 / (a * b + b * c + c * a) := by",
  "new": "(a b c : \u211d) (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2081 : a + b > c) (h\u2082 : a + c > b) (h\u2083 : b + c > a) : a * b * (a + b) * (b + c) * c * (a + c) > 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_step1 (a b c : \u211d)\n  (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c)\n  (h\u2081 : a + b > c)\n  (h\u2082 : a + c > b)\n  (h\u2083 : b + c > a) :\n  a * b * (a + b) * (b + c) * c * (a + c) > 0:= by\n  obtain \u27e8h\u2080a, h\u2080b, h\u2080c\u27e9 := h\u2080\n  positivity\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_step1 (a b c : \u211d)\n  (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c)\n  (h\u2081 : a + b > c)\n  (h\u2082 : a + c > b)\n  (h\u2083 : b + c > a) :\n  a * b * (a + b) * (b + c) * c * (a + c) > 0:= by\n  obtain \u27e8h\u2084, h\u2085, h\u2086\u27e9 := h\u2080\n  have h\u2087 : 0 < a * b := by positivity\n  have h\u2088 : 0 < b * c := by positivity\n  have h\u2089 : 0 < a * c := by positivity\n  have h\u2081\u2080 : 0 < a * b * (a + b) := by positivity\n  have h\u2081\u2081 : 0 < b * c * (b + c) := by positivity\n  have h\u2081\u2082 : 0 < a * c * (a + c) := by positivity\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_step1 (a b c : \u211d)\n  (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c)\n  (h\u2081 : a + b > c)\n  (h\u2082 : a + c > b)\n  (h\u2083 : b + c > a) :\n  a * b * (a + b) * (b + c) * c * (a + c) > 0:= by\n  rcases h\u2080 with \u27e8h\u2080\u2081, h\u2080\u2082, h\u2080\u2083\u27e9\n  apply mul_pos\n  positivity\n  positivity\n  <;> linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption"
  ]
 },
 {
  "old": "(a : \u2115 \u2192 NNReal) (h\u2080 : 0 < a 0) (h\u2081 : \u2200 n, a (n + 1) = Real.sqrt (a n - 1 / a n)) : False := by",
  "new": "(a : \u2115 \u2192 \u211d) (h\u2080 : 0 < a 0) (h\u2081 : \u2200 n, a (n + 1) = a n + Real.sqrt (a n)) : 0 < a 10:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem invalid_2021_22 (a : \u2115 \u2192 \u211d) (h\u2080 : 0 < a 0) (h\u2081 : \u2200 n, a (n + 1) = a n + Real.sqrt (a n)) : 0 < a 10:= by\n  induction 10 <;> simp_all [h\u2081]\n  all_goals positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem invalid_2021_22 (a : \u2115 \u2192 \u211d) (h\u2080 : 0 < a 0) (h\u2081 : \u2200 n, a (n + 1) = a n + Real.sqrt (a n)) : 0 < a 10:= by\n  induction' 10 with n ih\n  all_goals simp_all [h\u2081]\n  all_goals positivity"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a \u2227 a \u2264 1) (hb : 0 < b \u2227 b \u2264 1) (hc : 0 < c \u2227 c \u2264 1) (hab : a + b > 1) (hbc : b + c > 1) (hca : a + c > 1) : a / (b + c - 1) + b / (c + a - 1) + c / (a + b - 1) \u2265 3 / (abc)^(1/3) := by",
  "new": "(x y z : \u211d) (hx : 0 < x \u2227 x \u2264 1) (hy : 0 < y \u2227 y \u2264 1) (hz : 0 < z \u2227 z \u2264 1) (hxy : x + y > 1) (hyz : y + z > 1) (hxz : x + z > 1) : x / (y + z - 1) + y / (z + x - 1) + z / (x + y - 1) \u2265 9/3 \u2227 x * y * z \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x \u2227 x \u2264 1) (hy : 0 < y \u2227 y \u2264 1) (hz : 0 < z \u2227 z \u2264 1) (hxy : x + y > 1) (hyz : y + z > 1) (hxz : x + z > 1) : x / (y + z - 1) + y / (z + x - 1) + z / (x + y - 1) \u2265 9/3 \u2227 x * y * z \u2264 1:= by\n  have h\u2081 : 0 < y + z - 1 := by linarith\n  have h\u2082 : 0 < z + x - 1 := by linarith\n  have h\u2083 : 0 < x + y - 1 := by linarith\n  have h\u2084 : 0 < (y + z - 1) * (z + x - 1) := mul_pos h\u2081 h\u2082\n  have h\u2085 : 0 < (x + y - 1) * (z + x - 1) := mul_pos h\u2083 h\u2082\n  have h\u2086 : 0 < (y + z - 1) * (x + y - 1) := mul_pos h\u2081 h\u2083\n  constructor\n  \u00b7 field_simp [h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086]\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n      mul_self_nonneg (x + y + z - 3)]\n  \u00b7 nlinarith [mul_le_mul_of_nonneg_right hx.2 (sub_nonneg.mpr hy.2),\n      mul_le_mul_of_nonneg_right hy.2 (sub_nonneg.mpr hz.2),\n      mul_le_mul_of_nonneg_right hz.2 (sub_nonneg.mpr hx.2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x \u2227 x \u2264 1) (hy : 0 < y \u2227 y \u2264 1) (hz : 0 < z \u2227 z \u2264 1) (hxy : x + y > 1) (hyz : y + z > 1) (hxz : x + z > 1) : x / (y + z - 1) + y / (z + x - 1) + z / (x + y - 1) \u2265 9/3 \u2227 x * y * z \u2264 1:= by\n  rcases hx with \u27e8hx_left, hx_right\u27e9\n  rcases hy with \u27e8hy_left, hy_right\u27e9\n  rcases hz with \u27e8hz_left, hz_right\u27e9\n  have h\u2080 : 0 < y + z - 1 := by linarith\n  have h\u2081 : 0 < z + x - 1 := by linarith\n  have h\u2082 : 0 < x + y - 1 := by linarith\n  have h\u2083 : 0 < (x + y - 1) * (y + z - 1) := by positivity\n  have h\u2084 : 0 < (z + x - 1) * (y + z - 1) := by positivity\n  have h\u2085 : 0 < (x + y - 1) * (z + x - 1) := by positivity\n  constructor\n  \u00b7 field_simp [h\u2080, h\u2081, h\u2082]\n    rw [le_div_iff, \u2190 sub_nonneg]\n    nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n      mul_nonneg (sub_nonneg.mpr hy_left.le) (sub_nonneg.mpr hx_left.le),\n      mul_nonneg (sub_nonneg.mpr hz_left.le) (sub_nonneg.mpr hy_left.le),\n      mul_nonneg (sub_nonneg.mpr hx_left.le) (sub_nonneg.mpr hz_left.le)]\n    positivity\n  \u00b7 nlinarith [mul_le_mul_of_nonneg_right hx_right (sub_nonneg.mpr hy_left.le),\n      mul_le_mul_of_nonneg_right hy_right (sub_nonneg.mpr hz_left.le),\n      mul_le_mul_of_nonneg_right hz_right (sub_nonneg.mpr hx_left.le)]"
  ]
 },
 {
  "old": ": \u2200 x y z : \u211d, (x > 0 \u2227 y > 0 \u2227 z > 0 \u2192 1 / (x ^ 2 + y ^ 2) + 1 / (y ^ 2 + z ^ 2) + 1 / (z ^ 2 + x ^ 2) \u2265 5 / (2 * (x * y + y * z + z * x))) := by",
  "new": ": \u2200 x y z : \u211d, (x > 0 \u2227 y > 0 \u2227 z > 0 \u2192 1 / (x ^ 2 + y ^ 2) + 1 / (y ^ 2 + z ^ 2) + 1 / (z ^ 2 + x ^ 2) \u2265 3 / (2 * (x * y + y * z + z * x)) - 2 * (x * y)\u207b\u00b9 - 2 * (y * z)\u207b\u00b9 - 2 * (z * x)\u207b\u00b9) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq : \u2200 x y z : \u211d, (x > 0 \u2227 y > 0 \u2227 z > 0 \u2192\n  1 / (x ^ 2 + y ^ 2) + 1 / (y ^ 2 + z ^ 2) + 1 / (z ^ 2 + x ^ 2) \u2265 3 / (2 * (x * y + y * z + z * x)) - 2 * (x * y)\u207b\u00b9 - 2 * (y * z)\u207b\u00b9 - 2 * (z * x)\u207b\u00b9)   := by\n  rintro x y z \u27e8h\u2080, h\u2081, h\u2082\u27e9\n  have h\u2083 : 0 < x * y := mul_pos h\u2080 h\u2081\n  have h\u2084 : 0 < y * z := mul_pos h\u2081 h\u2082\n  have h\u2085 : 0 < z * x := mul_pos h\u2082 h\u2080\n  have h\u2086 : 0 < (x * y) * (y * z) := by positivity\n  have h\u2087 : 0 < (y * z) * (z * x) := by positivity\n  have h\u2088 : 0 < (z * x) * (x * y) := by positivity\n  have h\u2089 : 0 < (x ^ 2 + y ^ 2) * (y ^ 2 + z ^ 2) := by positivity\n  have h\u2081\u2080 : 0 < (y ^ 2 + z ^ 2) * (z ^ 2 + x ^ 2) := by positivity\n  have h\u2081\u2081 : 0 < (z ^ 2 + x ^ 2) * (x ^ 2 + y ^ 2) := by positivity\n  have h\u2081\u2082 : 0 < (x * y) * (y * z) * (z * x) := by positivity\n  field_simp\n  refine' le_of_sub_nonneg _\n  field_simp\n  ring_nf\n  positivity"
  ]
 },
 {
  "old": "(p : \u2115) (hp : p.Prime) (hpo : Odd p) (k : \u2115) (hk : k \u2208 Finset.Icc 1 (p-2)) : p \u2223 \u2211 i in Finset.Icc 1 (p-1), i^k := by",
  "new": "(p : \u2115) {n : \u2115} (hn : n \u2260 0) (hp : p.Prime) : p \u2223 n \u2228 (Nat.Coprime p n):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {n : \u2115} (hn : n \u2260 0) (hp : p.Prime) :\n     p \u2223 n \u2228 (Nat.Coprime p n):= by\n  refine' or_iff_not_imp_left.mpr fun h => _\n  exact hp.coprime_iff_not_dvd.mpr h"
  ]
 },
 {
  "old": ": \u2203 n, \u00ac Nat.Prime (6 * n - 1) \u2227 \u00ac Nat.Prime (6 * n + 1) := by",
  "new": "(a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b) := by\n  have h : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b) := by apply em\n  exact h\n  <;> simp [h]\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b) := by\n  by_cases h : a.Coprime b\n  exacts [Or.inl h, Or.inr (by simpa using h)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b) := by\n  by_cases h : Nat.Coprime a b\n  exact Or.inl h\n  exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b) := by\n  by_cases h : Nat.Coprime a b\n  exacts [Or.inl h, Or.inr (by simpa using h)]"
  ]
 },
 {
  "old": "(x y z : \u211d) : (1 + x) ^ 2 / (y * (y + z)) + (1 + y) ^ 2 / (z * (z + x)) + (1 + z) ^ 2 / (x * (x + y)) \u2265 6 := by",
  "new": ": \u2200 x y z : \u211d, (x + y + z > 0 \u2227 x * y * z > 0) \u2192 (x * y) * (y * z) * (z * x) * (x + y + z) \u2265 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x y z : \u211d,\n    (x + y + z > 0 \u2227 x * y * z > 0) \u2192\n    (x * y) * (y * z) * (z * x) * (x + y + z) \u2265 0:= by\n  rintro x y z \u27e8h_sum_pos, h_mul_pos\u27e9\n  have h1 : 0 \u2264 x ^ 2 := by positivity\n  have h2 : 0 \u2264 y ^ 2 := by positivity\n  have h3 : 0 \u2264 z ^ 2 := by positivity\n  have h4 : 0 \u2264 x ^ 2 * y ^ 2 := by positivity\n  have h5 : 0 \u2264 y ^ 2 * z ^ 2 := by positivity\n  have h6 : 0 \u2264 x ^ 2 * z ^ 2 := by positivity\n  have h7 : 0 \u2264 x ^ 2 * y ^ 2 * z ^ 2 := by positivity\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x y z : \u211d,\n    (x + y + z > 0 \u2227 x * y * z > 0) \u2192\n    (x * y) * (y * z) * (z * x) * (x + y + z) \u2265 0:= by\n  rintro x y z \u27e8h1, h2\u27e9\n  have h3 : x * y * (y * z) * (z * x) \u2265 0 := by\n    have h4 : (x * y) * (y * z) * (z * x) = (x * y * z) * (y * z * x) := by ring\n    rw [h4]\n    have h5 : x * y * z > 0 := by assumption\n    have h6 : y * z * x \u2265 0 := by\n      nlinarith [sq_nonneg (y * z), sq_nonneg x]\n    nlinarith\n  nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a + b + c + (a - b) / (1 + a * b) * (b - c) / (1 + b * c) * (c - a) / (1 + c * a) \u2265 3 * (a * b * c)^(1 / 3) := by",
  "new": "(x : \u211d) (hx : x > 0) : 2 * Real.sqrt x + 4 * (Real.sqrt x - Real.sqrt (x - 1)) \u2265 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_20 (x : \u211d) (hx : x > 0) : 2 * Real.sqrt x + 4 * (Real.sqrt x - Real.sqrt (x - 1)) \u2265 0:= by\n  have hx' : 0 \u2264 Real.sqrt x := Real.sqrt_nonneg x\n  have h : Real.sqrt x - Real.sqrt (x - 1) \u2265 0 := by\n    apply sub_nonneg_of_le\n    apply Real.sqrt_le_sqrt\n    linarith\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_20 (x : \u211d) (hx : x > 0) : 2 * Real.sqrt x + 4 * (Real.sqrt x - Real.sqrt (x - 1)) \u2265 0:= by\n  have h : Real.sqrt x \u2265 0 := Real.sqrt_nonneg x\n  have h\u2081 : Real.sqrt (x - 1) \u2264 Real.sqrt x := Real.sqrt_le_sqrt (by linarith)\n  nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0) (habc : a + b + c = 1) : (a + 3 * b + 5 * c) * (a + b / 2 + c / 3) \u2264 49 / 24 \u2227 (a + 2 * b + 3 * c) * (a + b / 3 + c / 2) \u2264 25 / 16 := by",
  "new": "(x y z : \u211d) (hx : 0 < x \u2227 0 < y \u2227 0 < z) (h : x + y + z = 1) : 1 / x ^ 2 + 1 / y ^ 2 + 1 / z ^ 2 \u2265 (x + y + z) ^ 2 / (x * y + y * z + z * x) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y z : \u211d) (hx : 0 < x \u2227 0 < y \u2227 0 < z) (h : x + y + z = 1) : 1 / x ^ 2 + 1 / y ^ 2 + 1 / z ^ 2 \u2265 (x + y + z) ^ 2 / (x * y + y * z + z * x) := by\n  have h\u2081 : 0 < x := hx.1\n  have h\u2082 : 0 < y := hx.2.1\n  have h\u2083 : 0 < z := hx.2.2\n  have h\u2084 : 0 < x * y := by positivity\n  have h\u2085 : 0 < y * z := by positivity\n  have h\u2086 : 0 < z * x := by positivity\n  have h\u2087 : 0 < x * y * z := by positivity\n  have h\u2088 : 0 < x * y + y * z + z * x := by positivity\n  field_simp [h, h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087, h\u2088]\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y)]\n  positivity\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y z : \u211d) (hx : 0 < x \u2227 0 < y \u2227 0 < z) (h : x + y + z = 1) : 1 / x ^ 2 + 1 / y ^ 2 + 1 / z ^ 2 \u2265 (x + y + z) ^ 2 / (x * y + y * z + z * x) := by\n  have h1 : 0 < x := by linarith\n  have h2 : 0 < y := by linarith\n  have h3 : 0 < z := by linarith\n  have h4 : 0 < x * y := by positivity\n  have h5 : 0 < y * z := by positivity\n  have h6 : 0 < z * x := by positivity\n  have h7 : 0 < x * y * z := by positivity\n  field_simp [h, h1, h2, h3, h4, h5, h6, h7]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y),\n    mul_self_nonneg (x * y * z)]"
  ]
 },
 {
  "old": "(M : Set \u2115) (hM : M.Infinite) (hM' : M.PairwiseDisjoint fun (a : \u2115) (b : \u2115) \u21a6 (a - b)^2 \u2223 a * b) : False := by",
  "new": "(M : Set \u2115) (hM : M.Infinite) (hM' : M.PairwiseDisjoint fun (a : \u2115) (b : \u2115) \u21a6 (a - b)^2 \u2223 a * b) : \u2200 m n : \u2115, m \u2208 M \u2227 n \u2208 M \u2227 m \u2260 n \u2192 (Nat.Coprime m n \u2228 \u00ac Nat.Coprime m n):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (M : Set \u2115) (hM : M.Infinite) (hM' : M.PairwiseDisjoint fun (a : \u2115) (b : \u2115) \u21a6 (a - b)^2 \u2223 a * b) :  \u2200 m n : \u2115, m \u2208 M \u2227 n \u2208 M \u2227 m \u2260 n \u2192 (Nat.Coprime m n \u2228 \u00ac Nat.Coprime m n):= by\n  intro m n h\n  by_cases h' : Nat.Coprime m n <;> simp_all\n  <;> tauto",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (M : Set \u2115) (hM : M.Infinite) (hM' : M.PairwiseDisjoint fun (a : \u2115) (b : \u2115) \u21a6 (a - b)^2 \u2223 a * b) :  \u2200 m n : \u2115, m \u2208 M \u2227 n \u2208 M \u2227 m \u2260 n \u2192 (Nat.Coprime m n \u2228 \u00ac Nat.Coprime m n):= by\n  rintro m n \u27e8hm, hn, hmn\u27e9\n  by_cases h : Nat.Coprime m n <;> simp_all\n  <;> simp_all [Nat.coprime_iff_gcd_eq_one, hmn]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (M : Set \u2115) (hM : M.Infinite) (hM' : M.PairwiseDisjoint fun (a : \u2115) (b : \u2115) \u21a6 (a - b)^2 \u2223 a * b) :  \u2200 m n : \u2115, m \u2208 M \u2227 n \u2208 M \u2227 m \u2260 n \u2192 (Nat.Coprime m n \u2228 \u00ac Nat.Coprime m n):= by\n  intro m n h\n  by_cases h1 : Nat.Coprime m n <;> simp [h1]\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop"
  ]
 },
 {
  "old": "(x y z a : \u2124) : \u00ac ((x^2+1)/2 = (y^2+1)/5 \u2227 (y^2+1)/5 = (z^2+1)/13 \u2227 (z^2+1)/13 = a) := by",
  "new": "(x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac (Nat.Coprime x y):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac (Nat.Coprime x y):= by\n  by_cases h : Nat.Coprime x y\n  exact Or.inl h\n  exact Or.inr h\n  <;> intro h\n  <;> by_cases h : Nat.Coprime x y\n  <;> simp_all",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac (Nat.Coprime x y):= by\n  apply em\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac (Nat.Coprime x y):= by\n  cases Nat.eq_zero_or_pos x <;> cases Nat.eq_zero_or_pos y <;>\n  simp [Nat.coprime_iff_gcd_eq_one, *]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac (Nat.Coprime x y):= by\n  by_cases h : Nat.Coprime x y\n  exacts [Or.inl h, Or.inr h]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1 / 2) : (4 / 3 + 5 * (abc)^(1 / 3) \u2264 (a^(1 / 3) + b^(1 / 3) + c^(1 / 3)) * (a^(2 / 3) + b^(2 / 3) + c^(2 / 3)) \u2227 (a^(1 / 3) + b^(1 / 3) + c^(1 / 3)) * (a^(2 / 3) + b^(2 / 3) + c^(2 / 3)) \u2264 2 + 3 * (abc)^(1 / 3)) := by",
  "new": "(abc : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 1) : (a * b + b * c + c * a) * (a + b + c) \u2264 1 / 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_20 (abc : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 1) : (a * b + b * c + c * a) * (a + b + c) \u2264 1 / 3:= by\n  simp only [hab, mul_one, add_assoc, mul_add, add_mul, mul_comm, mul_left_comm]\n  ring_nf\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : (1 / 4 * (a ^ 2 / b + b ^ 2 / c + c ^ 2 / d + d ^ 2 / a)) \u2265 (a ^ 4 + b ^ 4 + c ^ 4 + d ^ 4) ^ (1 / 4) := by",
  "new": "(x y : \u211d) (hx : 0 < x) (hy : 0 < y) : Real.sqrt (x ^ 2 + y ^ 2) \u2265 (x + y) * (Real.sqrt 2 - 1) / Real.sqrt 2 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 < x) (hy : 0 < y)  :  Real.sqrt (x ^ 2 + y ^ 2) \u2265  (x + y) * (Real.sqrt 2 - 1) / Real.sqrt 2  := by\n  have h\u2080 : 0 < Real.sqrt 2 := Real.sqrt_pos.2 (by norm_num)\n  have h\u2081 : 0 < Real.sqrt 2 * (x + y) := by positivity\n  apply le_sqrt_of_sq_le\n  field_simp [h\u2080]\n  ring_nf\n  norm_num\n  nlinarith [sq_sqrt (show 0 \u2264 2 by norm_num), sq_nonneg (x - y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 < x) (hy : 0 < y)  :  Real.sqrt (x ^ 2 + y ^ 2) \u2265  (x + y) * (Real.sqrt 2 - 1) / Real.sqrt 2  := by\n  have h : 0 < Real.sqrt 2 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2080 : 0 < Real.sqrt 2 * Real.sqrt (x ^ 2 + y ^ 2) := by positivity\n  apply le_sqrt_of_sq_le\n  field_simp\n  ring_nf\n  norm_num\n  apply le_of_sub_nonneg\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_sqrt (show 0 \u2264 x ^ 2 + y ^ 2 by positivity), sq_sqrt (show 0 \u2264 2 by positivity),\n    mul_self_nonneg (x - y), mul_self_nonneg (x + y), mul_self_nonneg (x + y + x - y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 < x) (hy : 0 < y)  :  Real.sqrt (x ^ 2 + y ^ 2) \u2265  (x + y) * (Real.sqrt 2 - 1) / Real.sqrt 2  := by\n  have h\u2081 : 0 < Real.sqrt 2 := Real.sqrt_pos.mpr (by norm_num)\n  have h\u2082 : 0 < x * Real.sqrt 2 := mul_pos hx h\u2081\n  have h\u2083 : 0 < y * Real.sqrt 2 := mul_pos hy h\u2081\n  have h\u2084 : 0 < Real.sqrt 2 * (x + y) := by positivity\n  have h\u2085 : 0 < Real.sqrt 2 * (x * Real.sqrt 2 + y * Real.sqrt 2) := by positivity\n  apply le_sqrt_of_sq_le\n  field_simp\n  ring_nf\n  norm_num\n  nlinarith [sq_sqrt (show 0 \u2264 2 by norm_num), sq_nonneg (x - y)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a * b * c = 1) (h : a^2 + b^2 + c^2 = 6) : a / b / c + 4 * b / c / a + 4 * c / a / b \u2265 (1 / 2) * Real.sqrt (69 + 11 * Real.sqrt 33) := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a * b * c = 1) : a / b / c + 4 * b / c / a + 4 * c / a / b \u2265 6:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a * b * c = 1) :\n       a / b / c + 4 * b / c / a + 4 * c / a / b \u2265 6:= by\n  have h\u2080 : 0 < a * b := by positivity\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * a := by positivity\n  have h\u2083 : 0 < a * b * c := by positivity\n  have h\u2084 : 0 < a * b * c * 4 := by positivity\n  field_simp [h\u2080, h\u2081, h\u2082, h\u2083, h\u2084]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    sq_nonneg (a - 2), sq_nonneg (b - 2), sq_nonneg (c - 2)]"
  ]
 },
 {
  "old": "(n : \u2115) (a : \u2115 \u2192 NNReal) : (n - 1) * \u2211 i in Finset.range n, (a i) ^ 2 + n * (\u220f i in Finset.range n, (a i) ^ 2) ^ (1 / n) \u2265 (\u2211 i in Finset.range n, a i) ^ 2 := by",
  "new": "(x y : \u211d) (n : \u2115) (hn : n \u2265 2) : (x - y) ^ 2 / n \u2264 2 * (\u2211 i in Finset.range n, (x - y) ^ 2) / n := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (x y : \u211d) (n : \u2115) (hn : n \u2265 2) :\n    (x - y) ^ 2 / n \u2264 2 * (\u2211 i in Finset.range n, (x - y) ^ 2) / n := by\n  refine' div_le_div_of_le (by positivity) _\n  cases n\n  all_goals simp_all [Finset.sum_range_succ, Nat.succ_eq_add_one]\n  all_goals nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (x y : \u211d) (n : \u2115) (hn : n \u2265 2) :\n    (x - y) ^ 2 / n \u2264 2 * (\u2211 i in Finset.range n, (x - y) ^ 2) / n := by\n  cases' n with n\n  exfalso\n  linarith\n  exact div_le_div_of_le (by positivity) (by\n    simp [Finset.sum_range_succ, add_comm, add_left_comm]\n    nlinarith)",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (x y : \u211d) (n : \u2115) (hn : n \u2265 2) :\n    (x - y) ^ 2 / n \u2264 2 * (\u2211 i in Finset.range n, (x - y) ^ 2) / n := by\n  cases n with\n  | zero => simp_all\n  | succ n =>\n    simp_all\n    exact by\n      refine' div_le_div_of_le_of_nonneg (by nlinarith) (by positivity)\n  <;>\n    positivity\n  <;>\n    nlinarith\n  <;>\n    linarith\n  <;>\n    linarith\n  <;>\n    linarith"
  ]
 },
 {
  "old": ": \u2200 n : \u2115, Summable (\u03bb n => ((n+1)^(1/3) / (2*n+5)) * Real.log ((n^2+6*n)/(n^2+2))) := by",
  "new": ": \u2200 x : \u211d, x > 0 \u2192 \u2203 y : \u211d, y > x \u2227 1/2 * Real.log y < y - x:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test :\n   \u2200 x : \u211d, x > 0 \u2192 \u2203 y : \u211d, y > x \u2227 1/2 * Real.log y < y - x:= by\n  intro x hx\n  use 2 * x\n  constructor\n  nlinarith\n  nlinarith [Real.log_le_sub_one_of_pos (by positivity : (0:\u211d) < 2 * x)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a * b + b * c + c * a = 1) : Real.sqrt a + 2 * b + Real.sqrt c \u2265 2 \u2227 2 * Real.sqrt a + b + c \u2265 2 \u2227 Real.sqrt a + Real.sqrt b + b + c \u2265 3 / (4:\u211d) ^ (1 / 3) \u2227 2 * Real.sqrt a + Real.sqrt b + b + 2 * c \u2265 3 * (2:\u211d) ^ (1 / 3) := by",
  "new": ": Real.sqrt (Real.sqrt 4 + 1) + Real.sqrt (Real.sqrt 4 + 1) \u2265 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt (Real.sqrt 4 + 1) + Real.sqrt (Real.sqrt 4 + 1) \u2265 2:= by\n  have h : Real.sqrt 4 = 2 := by\n    rw [Real.sqrt_eq_iff_mul_self_eq] <;> norm_num\n  rw [h]\n  norm_num\n  <;> apply le_of_pow_le_pow_left two_ne_zero\n  <;> ring_nf\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt (Real.sqrt 4 + 1) + Real.sqrt (Real.sqrt 4 + 1) \u2265 2:= by\n  have h\u2080 : 0 \u2264 Real.sqrt 4 + 1 := by positivity\n  have h\u2081 : 0 \u2264 Real.sqrt 4 := by positivity\n  have h\u2082 : Real.sqrt 4 = 2 := by rw [Real.sqrt_eq_iff_mul_self_eq (by positivity) (by positivity)] <;> norm_num\n  have h\u2083 : Real.sqrt (Real.sqrt 4 + 1) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    linarith\n  linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt (Real.sqrt 4 + 1) + Real.sqrt (Real.sqrt 4 + 1) \u2265 2:= by\n  have h\u2080 : Real.sqrt 4 = 2 := by norm_num [Real.sqrt_eq_iff_sq_eq]\n  have h\u2081 : Real.sqrt (Real.sqrt 4 + 1) \u2265 1 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith\n  linarith\n  <;> norm_num\n  <;> nlinarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt (Real.sqrt 4 + 1) + Real.sqrt (Real.sqrt 4 + 1) \u2265 2:= by\n  have h\u2080 : Real.sqrt 4 = 2 := by norm_num [Real.sqrt_eq_iff_mul_self_eq]\n  have h\u2081 : Real.sqrt (Real.sqrt 4 + 1) \u2265 1 := by\n    rw [h\u2080]\n    apply Real.le_sqrt_of_sq_le\n    linarith\n  linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (habc : a * b * c = 1) : 1 / (a * b + a + 2) + 1 / (b * c + b + 2) + 1 / (c * a + c + 2) \u2264 3 / 4 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) (h : x * y + y * z + z * x = 1 / 3) : 1 / (x + y) ^ 2 + 1 / (y + z) ^ 2 + 1 / (z + x) ^ 2 \u2265 9 / 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) (h : x * y + y * z + z * x = 1 / 3) : 1 / (x + y) ^ 2 + 1 / (y + z) ^ 2 + 1 / (z + x) ^ 2 \u2265 9 / 4:= by\n  have : 0 < (x + y) ^ 2 := by positivity\n  have : 0 < (y + z) ^ 2 := by positivity\n  have : 0 < (z + x) ^ 2 := by positivity\n  have : 1 / (x + y) ^ 2 \u2265 1 / 1 := by\n    apply one_div_le_one_div_of_le\n    \u00b7 positivity\n    \u00b7 nlinarith\n  have : 1 / (y + z) ^ 2 \u2265 1 / 1 := by\n    apply one_div_le_one_div_of_le\n    \u00b7 positivity\n    \u00b7 nlinarith\n  have : 1 / (z + x) ^ 2 \u2265 1 / 1 := by\n    apply one_div_le_one_div_of_le\n    \u00b7 positivity\n    \u00b7 nlinarith\n  linarith\n  <;> try norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) (h : x * y + y * z + z * x = 1 / 3) : 1 / (x + y) ^ 2 + 1 / (y + z) ^ 2 + 1 / (z + x) ^ 2 \u2265 9 / 4:= by\n  have h1 : (x + y + z) ^ 2 = x ^ 2 + y ^ 2 + z ^ 2 + 2 * (x * y + y * z + z * x) := by\n    ring_nf\n  rw [hab, h] at h1\n  have h2 : 0 < x * y + y * z + z * x := by positivity\n  have h3 : 0 < x + y := by positivity\n  have h4 : 0 < y + z := by positivity\n  have h5 : 0 < z + x := by positivity\n  have h6 : 1 / (x + y) ^ 2 \u2265 1 / 1 := by\n    apply one_div_le_one_div_of_le\n    nlinarith\n    nlinarith\n  have h7 : 1 / (y + z) ^ 2 \u2265 1 / 1 := by\n    apply one_div_le_one_div_of_le\n    nlinarith\n    nlinarith\n  have h8 : 1 / (z + x) ^ 2 \u2265 1 / 1 := by\n    apply one_div_le_one_div_of_le\n    nlinarith\n    nlinarith\n  linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) (h : x * y + y * z + z * x = 1 / 3) : 1 / (x + y) ^ 2 + 1 / (y + z) ^ 2 + 1 / (z + x) ^ 2 \u2265 9 / 4:= by\n  have h1 : 0 < x * y := by positivity\n  have h2 : 0 < y * z := by positivity\n  have h3 : 0 < z * x := by positivity\n  have h4 : 0 < (x + y) ^ 2 := by positivity\n  have h5 : 0 < (y + z) ^ 2 := by positivity\n  have h6 : 0 < (z + x) ^ 2 := by positivity\n  have h7 : 1 / (x + y) ^ 2 \u2265 1 / 1 := by\n    apply one_div_le_one_div_of_le\n    nlinarith\n    nlinarith\n  have h8 : 1 / (y + z) ^ 2 \u2265 1 / 1 := by\n    apply one_div_le_one_div_of_le\n    nlinarith\n    nlinarith\n  have h9 : 1 / (z + x) ^ 2 \u2265 1 / 1 := by\n    apply one_div_le_one_div_of_le\n    nlinarith\n    nlinarith\n  nlinarith"
  ]
 },
 {
  "old": "(a b c S : \u211d) (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : (Real.sqrt a + Real.sqrt b + Real.sqrt c) * Real.sqrt (a * b * c) \u2265 4 * Real.sqrt 3 * S := by",
  "new": ": Real.sqrt (Real.sqrt 2 + 1) \u2265 Real.sqrt 3 * Real.sqrt (Real.sqrt 2 - 1) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt 2 + 1) \u2265 Real.sqrt 3 * Real.sqrt (Real.sqrt 2 - 1)  := by\n  have h\u2080 : Real.sqrt 2 \u2265 0 := Real.sqrt_nonneg 2\n  have h\u2081 : Real.sqrt 2 - 1 \u2265 0 := by\n    have h\u2082 : Real.sqrt 2 \u2265 1 := by\n      nlinarith [Real.sqrt_nonneg 2, Real.mul_self_sqrt (by norm_num : 0 \u2264 (2 : \u211d))]\n    linarith\n  have h\u2082 : Real.sqrt (Real.sqrt 2) \u2265 0 := Real.sqrt_nonneg (Real.sqrt 2)\n  have h\u2083 : Real.sqrt (Real.sqrt 2 - 1) \u2265 0 := Real.sqrt_nonneg (Real.sqrt 2 - 1)\n  have h\u2084 : Real.sqrt (Real.sqrt 2) + 1 \u2265 0 := by linarith\n  have h\u2085 : Real.sqrt 3 * Real.sqrt (Real.sqrt 2 - 1) \u2264 Real.sqrt (Real.sqrt 2 + 1) := by\n    rw [\u2190 Real.sqrt_mul]\n    \u00b7 apply Real.sqrt_le_sqrt\n      nlinarith [sq_sqrt (show 0 \u2264 (2 : \u211d) by norm_num),\n        sq_sqrt (show 0 \u2264 (3 : \u211d) by norm_num),\n        sq_nonneg (Real.sqrt 2 - 1),\n        sq_nonneg (Real.sqrt 2 + 1)]\n    \u00b7 nlinarith\n  linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt 2 + 1) \u2265 Real.sqrt 3 * Real.sqrt (Real.sqrt 2 - 1)  := by\n  have h\u2080 : Real.sqrt 2 \u2265 0 := Real.sqrt_nonneg 2\n  have h\u2081 : Real.sqrt 3 \u2265 0 := Real.sqrt_nonneg 3\n  have h\u2082 : Real.sqrt 2 - 1 \u2265 0 := by\n    nlinarith [sq_sqrt (show 0 \u2264 2 by linarith)]\n  have h\u2083 : Real.sqrt (Real.sqrt 2 + 1) \u2265 0 := Real.sqrt_nonneg (Real.sqrt 2 + 1)\n  have h\u2084 : Real.sqrt 3 * Real.sqrt (Real.sqrt 2 - 1) \u2265 0 :=\n    mul_nonneg (by positivity) (by positivity)\n  have h\u2085 : Real.sqrt (Real.sqrt 2 + 1) \u2265 Real.sqrt 3 * Real.sqrt (Real.sqrt 2 - 1) := by\n    apply le_sqrt_of_sq_le\n    nlinarith [sq_sqrt (show 0 \u2264 3 by linarith), sq_sqrt (show 0 \u2264 2 by linarith),\n      sq_sqrt (show 0 \u2264 Real.sqrt 2 - 1 by positivity),\n      mul_self_nonneg (Real.sqrt 2 - 1),\n      mul_self_nonneg (Real.sqrt 2 + 1)]\n  linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt 2 + 1) \u2265 Real.sqrt 3 * Real.sqrt (Real.sqrt 2 - 1)  := by\n  have h\u2081 : Real.sqrt 2 \u2265 0 := by positivity\n  have h\u2082 : Real.sqrt 2 - 1 \u2265 0 := by\n    nlinarith [Real.sqrt_nonneg 2, Real.sq_sqrt (show 0 \u2264 2 by nlinarith)]\n  have h\u2083 : Real.sqrt (Real.sqrt 2 - 1) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2084 : Real.sqrt (Real.sqrt 2 + 1) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2085 : Real.sqrt 3 \u2265 0 := by positivity\n  have h\u2086 : Real.sqrt (Real.sqrt 2 - 1) \u2264 1 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    \u00b7 nlinarith [Real.sqrt_nonneg 2, Real.sq_sqrt (show 0 \u2264 2 by nlinarith)]\n    \u00b7 nlinarith [Real.sqrt_nonneg 2, Real.sq_sqrt (show 0 \u2264 2 by nlinarith)]\n  have h\u2087 : Real.sqrt (Real.sqrt 2 + 1) \u2265 Real.sqrt 3 * Real.sqrt (Real.sqrt 2 - 1) := by\n    have h\u2088 : Real.sqrt 3 * Real.sqrt (Real.sqrt 2 - 1) \u2264 Real.sqrt (Real.sqrt 2 + 1) := by\n      rw [\u2190 Real.sqrt_mul]\n      \u00b7 apply Real.sqrt_le_sqrt\n        nlinarith [Real.sqrt_nonneg 2, Real.sq_sqrt (show 0 \u2264 2 by nlinarith)]\n      \u00b7 nlinarith [Real.sqrt_nonneg 2, Real.sq_sqrt (show 0 \u2264 2 by nlinarith)]\n    linarith\n  exact h\u2087",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt 2 + 1) \u2265 Real.sqrt 3 * Real.sqrt (Real.sqrt 2 - 1)  := by\n  have h\u2081 : Real.sqrt 2 \u2265 0 := Real.sqrt_nonneg _\n  have h\u2082 : Real.sqrt 2 ^ 2 = 2 := Real.sq_sqrt (by positivity)\n  have h\u2083 : Real.sqrt 3 \u2265 0 := Real.sqrt_nonneg _\n  have h\u2084 : Real.sqrt (Real.sqrt 2 + 1) \u2265 Real.sqrt 3 * Real.sqrt (Real.sqrt 2 - 1) := by\n    apply le_sqrt_of_sq_le\n    nlinarith [sq_sqrt (show (0 : \u211d) \u2264 2 by linarith),\n      sq_sqrt (show (0 : \u211d) \u2264 3 by linarith),\n      sq_sqrt (show (0 : \u211d) \u2264 Real.sqrt 2 - 1 by\n        nlinarith [sq_sqrt (show (0 : \u211d) \u2264 2 by linarith)]),\n      sq_sqrt (show (0 : \u211d) \u2264 Real.sqrt 2 + 1 by\n        nlinarith [sq_sqrt (show (0 : \u211d) \u2264 2 by linarith)])]\n  linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : (a^2 + b^2) * (a + c) / b + (b^2 + c^2) * (b + a) / c + (c^2 + a^2) * (c + b) / a >= 2 * (a^2 + b^2 + c^2) := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a + b > c \u2227 a + c > b \u2227 b + c > a \u2192 (a^2 + b^2) * (a + c) / b + (b^2 + c^2) * (b + a) / c + (c^2 + a^2) * (c + b) / a \u2265 2 * (a^2 + b^2 + c^2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 a + b > c \u2227 a + c > b \u2227 b + c > a \u2192\n  (a^2 + b^2) * (a + c) / b + (b^2 + c^2) * (b + a) / c + (c^2 + a^2) * (c + b) / a \u2265 2 * (a^2 + b^2 + c^2):= by\n  rintro a b c \u27e8h\u2081, h\u2082, h\u2083\u27e9 \u27e8h\u2084, h\u2085, h\u2086\u27e9\n  have h\u2087 : 0 < a + b := by linarith\n  have h\u2088 : 0 < a + c := by linarith\n  have h\u2089 : 0 < b + c := by linarith\n  have h\u2081\u2080 : 0 < b * c := by positivity\n  have h\u2081\u2081 : 0 < a * b := by positivity\n  have h\u2081\u2082 : 0 < c * a := by positivity\n  have h\u2081\u2083 : 0 < (b * c) * (a * b) := by positivity\n  have h\u2081\u2084 : 0 < (b * c) * (c * a) := by positivity\n  have h\u2081\u2085 : 0 < (a * b) * (c * a) := by positivity\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2087, h\u2088, h\u2089, h\u2081\u2080, h\u2081\u2081, h\u2081\u2082, h\u2081\u2083, h\u2081\u2084, h\u2081\u2085]\n  rw [le_div_iff (by positivity), mul_comm]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (a ^ 2 - c ^ 2), sq_nonneg (b ^ 2 - c ^ 2),\n    mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - a * c), mul_self_nonneg (a * c - a * b)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : 1 + (b + c - a) * (a + c - b) * (a + b - c) / (a * b * c) \u2264 2 * (a * b + b * c + c * a) / (a ^ 2 + b ^ 2 + c ^ 2) := by",
  "new": "(a b : \u2115) (h : a ^ 2 + b ^ 2 + 2 * a * b < a ^ 2 + b ^ 2 + 2 * a * b + 4 * (a * b)) : Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (h : a ^ 2 + b ^ 2 + 2 * a * b < a ^ 2 + b ^ 2 + 2 * a * b + 4 * (a * b)) : Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b := by\n  by_cases h' : Nat.Coprime a b\n  exacts [Or.inl h', Or.inr h']",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (h : a ^ 2 + b ^ 2 + 2 * a * b < a ^ 2 + b ^ 2 + 2 * a * b + 4 * (a * b)) : Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b := by\n  by_cases h\u2081 : Nat.Coprime a b <;> simp_all\n  <;> omega\n  <;> simp_all\n  <;> omega\n  <;> simp_all\n  <;> omega\n  <;> simp_all\n  <;> omega\n  <;> simp_all\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (h : a ^ 2 + b ^ 2 + 2 * a * b < a ^ 2 + b ^ 2 + 2 * a * b + 4 * (a * b)) : Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b := by\n  by_cases h\u2081 : Nat.Coprime a b <;> simp_all\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (h : a ^ 2 + b ^ 2 + 2 * a * b < a ^ 2 + b ^ 2 + 2 * a * b + 4 * (a * b)) : Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b := by\n  by_cases h\u2081 : Nat.Coprime a b <;> simp_all\n  <;> simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;> omega"
  ]
 },
 {
  "old": "(n : \u2115) (x : \u2115 \u2192 NNReal) (h\u2080 : \u2211 i in Finset.range n, x i = 1 / n) : (\u220f i in Finset.range n, (1 - x i)) \u2265 (n - 1) / (n + 1) * (\u220f i in Finset.range n, (1 + x i)) := by",
  "new": "(x y : \u211d) (hx : 0 < x) (hy : 0 < y) (h : x + y = 1) : Real.sqrt (1 + x) * Real.sqrt (1 + y) \u2265 1 - (1 - x * y) / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (h : x + y = 1) :\n  Real.sqrt (1 + x) * Real.sqrt (1 + y) \u2265 1 - (1 - x * y) / 2:= by\n  have h\u2081 : 0 \u2264 x * y := by positivity\n  have h\u2082 : 0 \u2264 Real.sqrt (1 + x) := Real.sqrt_nonneg _\n  have h\u2083 : 0 \u2264 Real.sqrt (1 + y) := Real.sqrt_nonneg _\n  have h\u2084 : 0 \u2264 Real.sqrt (1 + x) * Real.sqrt (1 + y) := by positivity\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 1 + x from by linarith),\n    sq_sqrt (show (0 : \u211d) \u2264 1 + y from by linarith),\n    sq_nonneg (Real.sqrt (1 + x) - 1),\n    sq_nonneg (Real.sqrt (1 + y) - 1)]\n  <;> linarith\n  <;> assumption\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (h : x + y = 1) :\n  Real.sqrt (1 + x) * Real.sqrt (1 + y) \u2265 1 - (1 - x * y) / 2:= by\n  have h\u2081 : 0 < Real.sqrt (1 + x) := Real.sqrt_pos.mpr (by linarith)\n  have h\u2082 : 0 < Real.sqrt (1 + y) := Real.sqrt_pos.mpr (by linarith)\n  have h\u2083 : 0 < Real.sqrt (1 + x) * Real.sqrt (1 + y) := mul_pos h\u2081 h\u2082\n  nlinarith [sq_sqrt (by positivity : 0 \u2264 1 + x),\n    sq_sqrt (by positivity : 0 \u2264 1 + y),\n    sq_nonneg (Real.sqrt (1 + x) - Real.sqrt (1 + y))]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (h : x + y = 1) :\n  Real.sqrt (1 + x) * Real.sqrt (1 + y) \u2265 1 - (1 - x * y) / 2:= by\n  have : 0 \u2264 x * y := mul_nonneg hx.le hy.le\n  have h\u2080 : Real.sqrt (1 + x) \u2265 0 := Real.sqrt_nonneg (1 + x)\n  have h\u2081 : Real.sqrt (1 + y) \u2265 0 := Real.sqrt_nonneg (1 + y)\n  have h\u2082 : Real.sqrt (1 + x) * Real.sqrt (1 + y) \u2265 0 := mul_nonneg h\u2080 h\u2081\n  nlinarith [sq_sqrt (add_nonneg zero_le_one hx.le),\n    sq_sqrt (add_nonneg zero_le_one hy.le),\n    mul_self_nonneg (Real.sqrt (1 + x) - Real.sqrt (1 + y))]\n  <;> linarith\n  <;> norm_num"
  ]
 },
 {
  "old": "(n : \u2115) : (\u2203 k : \u2115, k = 1 \u2228 k / 2 = 0) \u2194 n = 1 \u2228 Even n := by",
  "new": "(a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by\n  by_cases h : Nat.Coprime a b <;> simp_all\n  <;> try simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;> try tauto\n  <;> try omega"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : 1 / (a * b + 2 * c ^ 2 + 2 * c) + 1 / (b * c + 2 * a ^ 2 + 2 * a) + 1 / (c * a + 2 * b ^ 2 + 2 * b) \u2265 1 / (a * b + b * c + c * a) := by",
  "new": ": \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c = 1 \u2192 1 / (a * b + 2 * c ^ 2 + 2 * c) + 1 / (b * c + 2 * a ^ 2 + 2 * a) + 1 / (c * a + 2 * b ^ 2 + 2 * b) \u2265 1 / (a * b + b * c + c * a):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c = 1 \u2192\n   1 / (a * b + 2 * c ^ 2 + 2 * c) + 1 / (b * c + 2 * a ^ 2 + 2 * a) + 1 / (c * a + 2 * b ^ 2 + 2 * b) \u2265\n   1 / (a * b + b * c + c * a):= by\n  rintro a b c \u27e8ha : 0 < a, hb : 0 < b, hc : 0 < c, habc : a + b + c = 1\u27e9\n  have h\u2080 : 0 < a * b := mul_pos ha hb\n  have h\u2081 : 0 < b * c := mul_pos hb hc\n  have h\u2082 : 0 < c * a := mul_pos hc ha\n  have h\u2083 : 0 < a * b * c := by positivity\n  have h\u2084 : 0 < a * b * c * (a * b + b * c + c * a) := by positivity\n  field_simp [habc]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b + b * c + c * a),\n    mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a),\n    mul_self_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c = 1 \u2192\n   1 / (a * b + 2 * c ^ 2 + 2 * c) + 1 / (b * c + 2 * a ^ 2 + 2 * a) + 1 / (c * a + 2 * b ^ 2 + 2 * b) \u2265\n   1 / (a * b + b * c + c * a):= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have h\u2081 : 0 < a * b := mul_pos ha hb\n  have h\u2082 : 0 < b * c := mul_pos hb hc\n  have h\u2083 : 0 < c * a := mul_pos hc ha\n  have h\u2084 : 0 < a * b * c := by positivity\n  have h\u2085 : 0 < a * b + b * c + c * a := by positivity\n  have h\u2086 : 0 < a * b * c * (a * b + b * c + c * a) := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b + b * c + c * a), mul_self_nonneg (a * b - b * c),\n    mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c = 1 \u2192\n   1 / (a * b + 2 * c ^ 2 + 2 * c) + 1 / (b * c + 2 * a ^ 2 + 2 * a) + 1 / (c * a + 2 * b ^ 2 + 2 * b) \u2265\n   1 / (a * b + b * c + c * a):= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have h\u2080 : 0 < a * b := mul_pos ha hb\n  have h\u2081 : 0 < b * c := mul_pos hb hc\n  have h\u2082 : 0 < c * a := mul_pos hc ha\n  have h\u2083 : 0 < a * b * c := by positivity\n  have h\u2084 : 0 < a * b * c * (a * b + b * c + c * a) := by positivity\n  field_simp [h\u2084]\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b + b * c + c * a), mul_self_nonneg (a * b - b * c),\n    mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b)]\n  positivity\n  positivity"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : x \u2265 0 \u2227 y \u2265 0 \u2227 z \u2265 0) : 2 * (x ^ 3 + y ^ 3 + z ^ 3) + x*y*z \u2265 7 := by",
  "new": "(i : \u2115) (hi : \u2200 j, 0 < j \u2192 1 < i * j) : i = 1 \u2228 \u2200 j, 0 < j \u2192 i * j = 1 \u2228 i * j > 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : \u2200 j, 0 < j \u2192 1 < i * j) : i = 1 \u2228 \u2200 j, 0 < j \u2192 i * j = 1 \u2228 i * j > 1:= by\n  by_cases h\u2081 : i = 1 <;> by_cases h\u2082 : \u2200 j, 0 < j \u2192 i * j = 1 \u2228 i * j > 1 <;> simp_all\n  <;> have h\u2083 := hi 1\n  <;> simp at h\u2083\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : \u2200 j, 0 < j \u2192 1 < i * j) : i = 1 \u2228 \u2200 j, 0 < j \u2192 i * j = 1 \u2228 i * j > 1:= by\n  refine' or_iff_not_imp_left.mpr fun h => _\n  intro j hj\n  have h1 := hi j hj\n  by_contra! h2\n  omega\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : \u2200 j, 0 < j \u2192 1 < i * j) : i = 1 \u2228 \u2200 j, 0 < j \u2192 i * j = 1 \u2228 i * j > 1:= by\n  by_cases h1 : i = 1 <;> simp_all\n  all_goals\n    have h2 := hi 0\n    have h3 := hi 1\n    have h4 := hi 2\n    simp at h2 h3 h4\n    <;> omega"
  ]
 },
 {
  "old": "(a : \u2115) (ha : a > 2) : \u2200 m : \u2115, \u2203 n : \u2115, n > m \u2227 n \u2223 a ^ n - 1 := by",
  "new": "(p : \u2115) (hp : p.Prime) (a : \u2115) : a.Coprime p \u2228 \u2203 b : \u2115, b \u2223 a \u2227 b \u2223 p:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (hp : p.Prime) (a : \u2115) : a.Coprime p \u2228 \u2203 b : \u2115, b \u2223 a \u2227 b \u2223 p:= by\n  by_cases h : a.Coprime p\n  exacts [Or.inl h, Or.inr \u27e81, by simp [Nat.one_dvd], by simp [Nat.one_dvd]\u27e9]"
  ]
 },
 {
  "old": "(m n a b : \u211d) (hm : 0 < m) (hn : 0 < n) (ha : 0 < a) (hb : 0 < b) : Real.log ((m * a + n * b) / (m + n)) \u2265 (m * Real.log a + n * Real.log b) / (m + n) := by",
  "new": "(x y : \u211d) (hx : 0 < x) (hy : 0 < y) : Real.log ((x + y) / 2) \u2265 (Real.log x + Real.log y) / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_test (x y : \u211d) (hx : 0 < x) (hy : 0 < y) :\n    Real.log ((x + y) / 2) \u2265 (Real.log x + Real.log y) / 2:= by\n  have : 0 \u2264 (x - y) ^ 2 := sq_nonneg (x - y)\n  have : Real.log x + Real.log y = Real.log (x * y) := by\n    rw [Real.log_mul (ne_of_gt hx) (ne_of_gt hy)]\n  rw [this]\n  have : (x + y) / 2 \u2265 Real.sqrt (x * y) := by\n    nlinarith [sq_sqrt (mul_nonneg (le_of_lt hx) (le_of_lt hy)),\n      mul_self_nonneg (x - y)]\n  nlinarith [Real.log_le_log (by positivity) this, Real.log_sqrt (mul_nonneg (le_of_lt hx) (le_of_lt hy))]\n  <;> linarith\n  <;> norm_num\n  <;> norm_num\n  <;> norm_num"
  ]
 },
 {
  "old": "(p n : \u2115) (hp : p.Prime) (h : p \u2264 n) (h2 : \u2200 k \u2208 Finset.Icc 2 n, p \u2223 k^n - k) : p - 1 \u2223 n - 1 := by",
  "new": "(p : \u2115) {n : \u2115} (hn : n \u2260 0) (hp : p.Prime) : p \u2223 n \u2228 (p.Coprime n):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {n : \u2115} (hn : n \u2260 0) (hp : p.Prime) :\n     p \u2223 n \u2228 (p.Coprime n):= by\n  apply or_iff_not_imp_left.mpr\n  intro h\n  exact hp.coprime_iff_not_dvd.mpr h"
  ]
 },
 {
  "old": "(a b c : \u211d) : (a * (a^(1/6)) + b * (b^(1/6)) + c * (c^(1/6)))^2 / (2 * (a^2 * (a^(1/3)) + b^2 * (b^(1/3)) + c^2 * (c^(1/3)))) \u2264 (a + b + c)^2 / (2 * (a^2 + b^2 + c^2)) := by",
  "new": "(a b c : \u211d) : a ^ 2 / (2 * a ^ 2 + b ^ 2 + c ^ 2) + b ^ 2 / (2 * b ^ 2 + c ^ 2 + a ^ 2) + c ^ 2 / (2 * c ^ 2 + a ^ 2 + b ^ 2) \u2264 2 / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) :\n      a ^ 2 / (2 * a ^ 2 + b ^ 2 + c ^ 2) +\n      b ^ 2 / (2 * b ^ 2 + c ^ 2 + a ^ 2) +\n      c ^ 2 / (2 * c ^ 2 + a ^ 2 + b ^ 2) \u2264\n      2 / 2:= by\n  rcases eq_or_ne a 0 with (ha | ha) <;>\n    rcases eq_or_ne b 0 with (hb | hb) <;>\n      rcases eq_or_ne c 0 with (hc | hc) <;>\n        simp_all\n  all_goals\n    apply le_of_sub_nonneg\n    field_simp\n    ring_nf\n    positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) :\n      a ^ 2 / (2 * a ^ 2 + b ^ 2 + c ^ 2) +\n      b ^ 2 / (2 * b ^ 2 + c ^ 2 + a ^ 2) +\n      c ^ 2 / (2 * c ^ 2 + a ^ 2 + b ^ 2) \u2264\n      2 / 2:= by\n  rcases eq_or_ne a 0 with (h | h) <;>\n  rcases eq_or_ne b 0 with (h' | h') <;>\n  rcases eq_or_ne c 0 with (h'' | h'') <;>\n  simp_all [sq, div_eq_mul_inv, mul_assoc]\n  all_goals\n    ring_nf\n    apply le_of_sub_nonneg\n    field_simp\n    ring_nf\n    positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) :\n      a ^ 2 / (2 * a ^ 2 + b ^ 2 + c ^ 2) +\n      b ^ 2 / (2 * b ^ 2 + c ^ 2 + a ^ 2) +\n      c ^ 2 / (2 * c ^ 2 + a ^ 2 + b ^ 2) \u2264\n      2 / 2:= by\n  rcases eq_or_ne a 0 with rfl | h1 <;>\n  rcases eq_or_ne b 0 with rfl | h2 <;>\n  rcases eq_or_ne c 0 with rfl | h3 <;>\n  simp_all [div_eq_inv_mul, mul_add, add_mul] <;>\n  apply le_of_sub_nonneg <;>\n  field_simp <;>\n  ring_nf <;>\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) :\n      a ^ 2 / (2 * a ^ 2 + b ^ 2 + c ^ 2) +\n      b ^ 2 / (2 * b ^ 2 + c ^ 2 + a ^ 2) +\n      c ^ 2 / (2 * c ^ 2 + a ^ 2 + b ^ 2) \u2264\n      2 / 2:= by\n  rcases eq_or_ne a 0 with (ha | ha) <;>\n  rcases eq_or_ne b 0 with (hb | hb) <;>\n  rcases eq_or_ne c 0 with (hc | hc) <;>\n  simp_all [add_assoc, add_left_comm, add_comm, div_eq_mul_inv] <;>\n  apply le_of_sub_nonneg <;>\n  field_simp <;>\n  ring_nf <;>\n  positivity"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1) : a / (2 * b + c) + b / (2 * c + a) + c / (2 * a + b) \u2265 1 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) : x / (2 * y + y * z) + y / (2 * z + z * x) + z / (2 * x + x * y) \u2265 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h : x * y * z = 1) :\n    x / (2 * y + y * z) + y / (2 * z + z * x) + z / (2 * x + x * y) \u2265 1:= by\n  have h\u2080 : 0 < y * z := by positivity\n  have h\u2081 : 0 < z * x := by positivity\n  have h\u2082 : 0 < x * y := by positivity\n  field_simp [h\u2080, h\u2081, h\u2082]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (y - 1), sq_nonneg (z - 1),\n    mul_nonneg hx.le hy.le, mul_nonneg hy.le hz.le, mul_nonneg hz.le hx.le,\n    mul_nonneg (sq_nonneg (x - 1)) hz.le, mul_nonneg (sq_nonneg (y - 1)) hx.le,\n    mul_nonneg (sq_nonneg (z - 1)) hy.le]"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x^3 / (x^3 + 4*y*z*(y + z)))^(1 / 2) + (y^3 / (y^3 + 4*z*x*(z + x)))^(1 / 2) + (z^3 / (z^3 + 4*x*y*(x + y)))^(1 / 2) \u2265 1 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : Real.sqrt (x * y) / (x + y) + Real.sqrt (y * z) / (y + z) + Real.sqrt (z * x) / (z + x) \u2264 1 / 2 * (x / x + y / y + z / z):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_810 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) :\n  Real.sqrt (x * y) / (x + y) + Real.sqrt (y * z) / (y + z) + Real.sqrt (z * x) / (z + x) \u2264 1 / 2 * (x / x + y / y + z / z):= by\n  have h\u2081 : 0 < x * y := mul_pos hx hy\n  have h\u2082 : 0 < y * z := mul_pos hy hz\n  have h\u2083 : 0 < z * x := mul_pos hz hx\n  have h\u2084 : Real.sqrt (x * y) \u2264 (x + y) / 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor <;> nlinarith [sq_nonneg (x - y)]\n  have h\u2085 : Real.sqrt (y * z) \u2264 (y + z) / 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor <;> nlinarith [sq_nonneg (y - z)]\n  have h\u2086 : Real.sqrt (z * x) \u2264 (z + x) / 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor <;> nlinarith [sq_nonneg (z - x)]\n  calc\n    Real.sqrt (x * y) / (x + y) + Real.sqrt (y * z) / (y + z) + Real.sqrt (z * x) / (z + x) \u2264\n        (x + y) / 2 / (x + y) + (y + z) / 2 / (y + z) + (z + x) / 2 / (z + x) := by\n      gcongr <;> nlinarith\n    _ = 1 / 2 + 1 / 2 + 1 / 2 := by field_simp <;> ring\n    _ = 3 / 2 := by norm_num\n    _ \u2264 1 / 2 * (x / x + y / y + z / z) := by\n      field_simp <;> norm_num <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_810 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) :\n  Real.sqrt (x * y) / (x + y) + Real.sqrt (y * z) / (y + z) + Real.sqrt (z * x) / (z + x) \u2264 1 / 2 * (x / x + y / y + z / z):= by\n  have h\u2080 : Real.sqrt (x * y) / (x + y) \u2264 1 / 2 := by\n    rw [div_le_iff (add_pos hx hy)]\n    nlinarith [sq_sqrt (mul_nonneg hx.le hy.le), sq_nonneg (x - y)]\n  have h\u2081 : Real.sqrt (y * z) / (y + z) \u2264 1 / 2 := by\n    rw [div_le_iff (add_pos hy hz)]\n    nlinarith [sq_sqrt (mul_nonneg hy.le hz.le), sq_nonneg (y - z)]\n  have h\u2082 : Real.sqrt (z * x) / (z + x) \u2264 1 / 2 := by\n    rw [div_le_iff (add_pos hz hx)]\n    nlinarith [sq_sqrt (mul_nonneg hz.le hx.le), sq_nonneg (z - x)]\n  have h\u2083 : x / x + y / y + z / z = 3 := by\n    field_simp [hx.ne', hy.ne', hz.ne']\n    ring\n  nlinarith\n  <;> assumption"
  ]
 },
 {
  "old": "(a : \u2102) (ha : a^7 + 2017*a^6 + 2017*a^5 + 33 = 0) : \u2016a\u2016 \u2264 2016 := by",
  "new": "(n : \u2115) (hn : n \u2265 2) {a : \u2102} (ha : \u2016a ^ n\u2016 \u2264 1) : \u2016a\u2016 \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem norm_le_of_pow_le (n : \u2115) (hn : n \u2265 2) {a : \u2102} (ha : \u2016a ^ n\u2016 \u2264 1) :  \u2016a\u2016 \u2264 1:= by\n  by_contra! h\n  have h1 : 1 < n := by\n    omega\n  have h2 : 1 < \u2016a\u2016 := by\n    simpa using h\n  have h3 : 1 < \u2016a ^ n\u2016 := by\n    rw [norm_pow]\n    exact one_lt_pow h2 (by omega)\n  linarith"
  ]
 },
 {
  "old": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 1 / (22 * a ^ 2 + 5 * b * c) + 1 / (22 * b ^ 2 + 5 * c * a) + 1 / (22 * c ^ 2 + 5 * a * b) \u2265 1 / (a + b + c) ^ 2 := by",
  "new": ": \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 1 / (a * b) + 1 / (b * c) + 1 / (c * a) \u2265 9 / (a + b + c) ^ 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 1 / (a * b) + 1 / (b * c) + 1 / (c * a) \u2265 9 / (a + b + c) ^ 2:= by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  have : 0 < a * b := by positivity\n  have : 0 < b * c := by positivity\n  have : 0 < c * a := by positivity\n  have : 0 < (a * b) * (b * c) := by positivity\n  have : 0 < (b * c) * (c * a) := by positivity\n  have : 0 < (c * a) * (a * b) := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 1 / (a * b) + 1 / (b * c) + 1 / (c * a) \u2265 9 / (a + b + c) ^ 2:= by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  have h\u2081 : 0 < a * b := mul_pos ha hb\n  have h\u2082 : 0 < b * c := mul_pos hb hc\n  have h\u2083 : 0 < c * a := mul_pos hc ha\n  have h\u2084 : 0 < (a * b) * (b * c) := by positivity\n  have h\u2085 : 0 < (b * c) * (c * a) := by positivity\n  have h\u2086 : 0 < (c * a) * (a * b) := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 1 / (a * b) + 1 / (b * c) + 1 / (c * a) \u2265 9 / (a + b + c) ^ 2:= by\n  rintro a b c \u27e8a_pos, b_pos, c_pos\u27e9\n  have h\u2080 : 0 < a * b := by positivity\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * a := by positivity\n  have h\u2083 : 0 < a * b * (b * c) := by positivity\n  have h\u2084 : 0 < b * c * (c * a) := by positivity\n  have h\u2085 : 0 < a * b * (c * a) := by positivity\n  field_simp [h\u2080.ne', h\u2081.ne', h\u2082.ne', h\u2083.ne', h\u2084.ne', h\u2085.ne']\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (a ^ 2 - c ^ 2),\n    mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a), mul_self_nonneg (a * b - c * a)]\n  positivity\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq : \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192 1 / (a * b) + 1 / (b * c) + 1 / (c * a) \u2265 9 / (a + b + c) ^ 2:= by\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  have h\u2081 : 0 < a * b := by positivity\n  have h\u2082 : 0 < b * c := by positivity\n  have h\u2083 : 0 < c * a := by positivity\n  have h\u2084 : 0 < (a + b + c) ^ 2 := by positivity\n  have h\u2085 : 0 < a * b * (b * c) := by positivity\n  have h\u2086 : 0 < a * b * (c * a) := by positivity\n  have h\u2087 : 0 < b * c * (c * a) := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a),\n    mul_self_nonneg (c * a - a * b)]"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x * y + y * z + z * x + x * y * z = 4) : 1 / (y + z) + 1 / (z + x) + 1 / (x + y) \u2265 5 / 4 + 3 / 4 * (x * y * z) / (x + y + z) := by",
  "new": ": x * y * (x * y) * z \u2264 x * y * (3 * (x * y)) * z + y * z * (3 * (y * z)) * x + z * x * (3 * (z * x)) * y:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    x * y * (x * y) * z \u2264 x * y * (3 * (x * y)) * z + y * z * (3 * (y * z)) * x +\n        z * x * (3 * (z * x)) * y:= by\n  have h\u2080 : 0 \u2264 x * y := by\n    nlinarith\n  have h\u2081 : 0 \u2264 y * z := by\n    nlinarith\n  have h\u2082 : 0 \u2264 z * x := by\n    nlinarith\n  have h\u2083 : 0 \u2264 x * y * z := by\n    nlinarith\n  have h\u2084 : 0 \u2264 y * z * x := by\n    nlinarith\n  have h\u2085 : 0 \u2264 z * x * y := by\n    nlinarith\n  nlinarith [mul_self_nonneg (x * y - y * z),\n    mul_self_nonneg (y * z - z * x), mul_self_nonneg (z * x - x * y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    x * y * (x * y) * z \u2264 x * y * (3 * (x * y)) * z + y * z * (3 * (y * z)) * x +\n        z * x * (3 * (z * x)) * y:= by\n  ring_nf\n  nlinarith [mul_nonneg (mul_nonneg (mul_nonneg (by norm_num : (0 : \u2115) \u2264 3) (sq_nonneg x))\n    (sq_nonneg y)) (by norm_num : (0 : \u2115) \u2264 3),\n    mul_nonneg (mul_nonneg (mul_nonneg (by norm_num : (0 : \u2115) \u2264 3) (sq_nonneg y))\n    (sq_nonneg z)) (by norm_num : (0 : \u2115) \u2264 3),\n    mul_nonneg (mul_nonneg (mul_nonneg (by norm_num : (0 : \u2115) \u2264 3) (sq_nonneg z))\n    (sq_nonneg x)) (by norm_num : (0 : \u2115) \u2264 3)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a + b + c = 1) (h : a^2 + b^2 + c^2 = 1) : (1 - a - b - c)^2 + 4 * (a^3 * b + b^3 * c + c^3 * a) \u2265 112 * a^3 * b^3 * c^3 := by",
  "new": "(x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (hab : x + y + z = 1) (h : x^2 + y^2 + z^2 = 1) : x^2 * y^2 * z^2 \u2264 x^2 * y * z + y^2 * z * x + z^2 * x * y:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (hab : x + y + z = 1) (h : x^2 + y^2 + z^2 = 1) :  x^2 * y^2 * z^2 \u2264 x^2 * y * z + y^2 * z * x + z^2 * x * y:= by\n  have h\u2080 : 0 \u2264 x * y := by positivity\n  have h\u2081 : 0 \u2264 y * z := by positivity\n  have h\u2082 : 0 \u2264 z * x := by positivity\n  have h\u2083 : 0 \u2264 x * y * z := by positivity\n  have h\u2084 : x * y * z \u2264 1 := by nlinarith\n  nlinarith [sq_nonneg (x * y * z), sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x),\n    sq_nonneg (z * x - x * y)]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (hab : x + y + z = 1) (h : x^2 + y^2 + z^2 = 1) :  x^2 * y^2 * z^2 \u2264 x^2 * y * z + y^2 * z * x + z^2 * x * y:= by\n  have : x ^ 2 + y ^ 2 + z ^ 2 = (x + y + z) ^ 2 - 2 * (x * y + y * z + z * x) := by ring\n  simp_all only [mul_assoc]\n  nlinarith [mul_nonneg hx hy, mul_nonneg hy hz, mul_nonneg hz hx,\n    mul_nonneg (sq_nonneg x) (sq_nonneg y), mul_nonneg (sq_nonneg y) (sq_nonneg z), mul_nonneg (sq_nonneg z) (sq_nonneg x)]"
  ]
 },
 {
  "old": "(a b c d : \u211d) (habc : 0 < a \u2227 0 < b \u2227 0 < c \u2227 0 < d) (habcd : a * b * c * d = 1) (k : \u211d) (hk : k \u2265 2) : 1 / (a^k * b * (c + d)) + 1 / (b^k * c * (d + a)) + 1 / (c^k * d * (a + b)) + 1 / (d^k * a * (b + c)) \u2265 2 := by",
  "new": "(a b c d : \u211d) (habc : 0 < a \u2227 0 < b \u2227 0 < c \u2227 0 < d) (habcd : a * b * c * d = 1) (h : a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2 = 1) : 1 / (a ^ 2 + b ^ 2) * (a * b) + 1 / (b ^ 2 + c ^ 2) * (b * c) + 1 / (c ^ 2 + d ^ 2) * (c * d) + 1 / (d ^ 2 + a ^ 2) * (d * a) \u2264 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c d : \u211d) (habc : 0 < a \u2227 0 < b \u2227 0 < c \u2227 0 < d) (habcd : a * b * c * d = 1) (h : a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2 = 1)  : 1 / (a ^ 2 + b ^ 2) * (a * b) + 1 / (b ^ 2 + c ^ 2) * (b * c) + 1 / (c ^ 2 + d ^ 2) * (c * d) + 1 / (d ^ 2 + a ^ 2) * (d * a) \u2264 4:= by\n  obtain \u27e8h1, h2, h3, h4\u27e9 := habc\n  nlinarith [mul_self_nonneg (a - b * c * d), mul_self_nonneg (a * b - c * d), mul_self_nonneg (b * c - d * a), mul_self_nonneg (c * d - a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c d : \u211d) (habc : 0 < a \u2227 0 < b \u2227 0 < c \u2227 0 < d) (habcd : a * b * c * d = 1) (h : a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2 = 1)  : 1 / (a ^ 2 + b ^ 2) * (a * b) + 1 / (b ^ 2 + c ^ 2) * (b * c) + 1 / (c ^ 2 + d ^ 2) * (c * d) + 1 / (d ^ 2 + a ^ 2) * (d * a) \u2264 4:= by\n  obtain \u27e8ha, hb, hc, hd\u27e9 := habc\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (a - d), sq_nonneg (b - c), sq_nonneg (b - d), sq_nonneg (c - d),\n    mul_pos ha hb, mul_pos ha hc, mul_pos ha hd, mul_pos hb hc, mul_pos hb hd, mul_pos hc hd]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c d : \u211d) (habc : 0 < a \u2227 0 < b \u2227 0 < c \u2227 0 < d) (habcd : a * b * c * d = 1) (h : a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2 = 1)  : 1 / (a ^ 2 + b ^ 2) * (a * b) + 1 / (b ^ 2 + c ^ 2) * (b * c) + 1 / (c ^ 2 + d ^ 2) * (c * d) + 1 / (d ^ 2 + a ^ 2) * (d * a) \u2264 4:= by\n  obtain \u27e8ha, hb, hc, hd\u27e9 := habc\n  have : a * b > 0 := mul_pos ha hb\n  have : b * c > 0 := mul_pos hb hc\n  have : c * d > 0 := mul_pos hc hd\n  have : d * a > 0 := mul_pos hd ha\n  field_simp [h, habcd]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - d), sq_nonneg (d - a)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a * b * c * (a + b + c) + (a ^ 2 + b ^ 2 + c ^ 2) ^ 2 \u2264 (4 / 3) * (a ^ 3 + b ^ 3 + c ^ 3) * Real.sqrt (3 * (a ^ 2 + b ^ 2 + c ^ 2)) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : x * y * z \u2264 3 / 2 * (x ^ 2 + y ^ 2 + z ^ 2) * Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) / 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : x * y * z \u2264 3 / 2 * (x ^ 2 + y ^ 2 + z ^ 2) * Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2)  / 3:= by\n  have h1 : 0 < Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by\n    apply Real.sqrt_pos.mpr\n    positivity\n  have h2 : 0 < x ^ 2 + y ^ 2 + z ^ 2 := by\n    positivity\n  have h3 : 0 < Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) * (x ^ 2 + y ^ 2 + z ^ 2) := by\n    positivity\n  nlinarith [sq_sqrt (show 0 \u2264 x ^ 2 + y ^ 2 + z ^ 2 from by positivity),\n    mul_self_nonneg (x - y), mul_self_nonneg (x - z), mul_self_nonneg (y - z),\n    mul_self_nonneg (Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) - x),\n    mul_self_nonneg (Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) - y),\n    mul_self_nonneg (Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) - z)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : x * y * z \u2264 3 / 2 * (x ^ 2 + y ^ 2 + z ^ 2) * Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2)  / 3:= by\n  have h0 : 0 < x ^ 2 + y ^ 2 + z ^ 2 := by positivity\n  have h1 : 0 < Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := Real.sqrt_pos.mpr h0\n  have h2 : 0 < x * y * z := mul_pos (mul_pos hx hy) hz\n  have h3 : (x - y) ^ 2 * z ^ 2 \u2265 0 := by positivity\n  have h4 : (x * y - Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2)) ^ 2 \u2265 0 := by positivity\n  have h5 : 0 \u2264 (x - Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2)) ^ 2 + (y - Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2)) ^ 2 + (z - Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2)) ^ 2 := by positivity\n  nlinarith [sq_sqrt (show 0 \u2264 x ^ 2 + y ^ 2 + z ^ 2 by positivity),\n    mul_self_nonneg (x - y),\n    mul_self_nonneg (x * y - Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2)),\n    mul_self_nonneg (x * z - Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2)),\n    mul_self_nonneg (y * z - Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : x * y * z \u2264 3 / 2 * (x ^ 2 + y ^ 2 + z ^ 2) * Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2)  / 3:= by\n  have h\u2080 : 0 < x ^ 2 + y ^ 2 + z ^ 2 := by positivity\n  have h\u2081 : 0 < Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := Real.sqrt_pos.mpr h\u2080\n  have h\u2082 : 0 < x * y * z := by positivity\n  have h\u2083 : x * y * z \u2264 3 / 2 * (x ^ 2 + y ^ 2 + z ^ 2) * Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) / 3 := by\n    have h\u2084 : x * y * z \u2264 (x ^ 2 + y ^ 2 + z ^ 2) * Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) / 3 := by\n      nlinarith [sq_sqrt (by positivity : (0 : \u211d) \u2264 x ^ 2 + y ^ 2 + z ^ 2),\n        mul_self_nonneg (x - y), mul_self_nonneg (x - z), mul_self_nonneg (y - z),\n        mul_self_nonneg (Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) - x),\n        mul_self_nonneg (Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) - y),\n        mul_self_nonneg (Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) - z)]\n    nlinarith\n  exact h\u2083",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : x * y * z \u2264 3 / 2 * (x ^ 2 + y ^ 2 + z ^ 2) * Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2)  / 3:= by\n  have h\u2081 : 0 < Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by positivity\n  have h\u2082 : (x - y) ^ 2 + (y - z) ^ 2 + (z - x) ^ 2 \u2265 0 := by nlinarith\n  have h\u2083 : 0 < x ^ 2 + y ^ 2 + z ^ 2 := by positivity\n  have h\u2084 : 0 < x ^ 2 + y ^ 2 + z ^ 2 + 1 := by positivity\n  have h\u2085 : Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) ^ 2 = x ^ 2 + y ^ 2 + z ^ 2 := by\n    rw [Real.sq_sqrt (by positivity : 0 \u2264 x ^ 2 + y ^ 2 + z ^ 2)]\n  have h\u2086 : 0 < Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2) := by positivity\n  field_simp [h\u2086, h\u2081, h\u2083, h\u2084, h\u2085]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x + y + z), mul_self_nonneg (x + y + z - Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2))]"
  ]
 },
 {
  "old": ": \u2200 n : \u2115, 1 < n \u2192 \u00ac n \u2223 (2 ^ n - 1) := by",
  "new": "(a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  by_cases h : Nat.Coprime a b\n  exacts [Or.inl h, Or.inr h]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  apply em\n  <;> simp_all\n  <;> decide\n  <;> decide\n  <;> decide\n  <;> decide\n  <;> decide\n  <;> decide\n  <;> decide\n  <;> decide\n  <;> decide\n  <;> decide"
  ]
 },
 {
  "old": "(a b : \u2124) (ha : 0 < a) (hb : 0 < b) : \u2203 p k : \u2115, p.Prime \u2227 p > 2 \u2227 (abs (a / p ^ k) + abs (b / p ^ k) + abs (a + b / p ^ k) = 1) := by",
  "new": "(a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by\n  apply em\n  <;> simp [Nat.coprime_iff_gcd_eq_one, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;> norm_num\n  <;> omega\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by\n  by_cases h\u2080 : a.Coprime b\n  exact Or.inl h\u2080\n  exact Or.inr h\u2080",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by\n  have h : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by apply em\n  exact h\n  <;> simp [h]"
  ]
 },
 {
  "old": "(a b c : \u211d) : (2 * a / (b + c) + 2 * b / (a + c) + 2 * c / (a + b)) * (Real.sqrt (2 * a / (b + c)) + Real.sqrt (2 * b / (a + c)) + Real.sqrt (2 * c / (a + b)))^2 \u2265 27 := by",
  "new": ": \u2200 x : \u211d, x > 0 \u2192 x ^ 2 * ((1 + 1 / x) * (1 + 2 / x) ^ 2) \u2265 9:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 2 * ((1 + 1 / x) * (1 + 2 / x) ^ 2) \u2265 9:= by\n  intro x hx\n  have h\u2080 : 0 < x := hx\n  have h\u2081 : 0 < x ^ 2 := sq_pos_of_pos h\u2080\n  have h\u2082 : 0 < x ^ 3 := by positivity\n  have h\u2083 : 0 < x ^ 4 := by positivity\n  field_simp [h\u2080]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (x - 2), sq_nonneg (x - 3), sq_nonneg (x - 4)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 2 * ((1 + 1 / x) * (1 + 2 / x) ^ 2) \u2265 9:= by\n  intro x hx\n  have h\u2080 : 0 < x := hx\n  have h\u2081 : 0 < x ^ 2 := by positivity\n  have h\u2082 : 0 < x ^ 3 := by positivity\n  have h\u2083 : 0 < x ^ 4 := by positivity\n  field_simp [h\u2081, h\u2082, h\u2083]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (x - 2), sq_nonneg (x - 3)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 2 * ((1 + 1 / x) * (1 + 2 / x) ^ 2) \u2265 9:= by\n  intro x x_pos\n  have h\u2081 : 0 < x := x_pos\n  have h\u2082 : 0 < x ^ 2 := by positivity\n  field_simp [h\u2081, h\u2082]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (x - 2), sq_nonneg (x ^ 2 - 1),\n    sq_nonneg (x ^ 2 - 2 * x), sq_nonneg (x ^ 2 - 2 * x + 1)]"
  ]
 },
 {
  "old": "(x y : \u211d) (h : 2 * (x ^ 3 - x * y + y ^ 3) = 3 * (x ^ 2 + y ^ 2)) : x = 0 \u2227 y = 0 := by",
  "new": "(i : \u2115) (hi : \u2200 m, 0 < m \u2192 1 < i ^ m) (h : 2 * (i ^ 3 - i * 1 + 1 ^ 3) = 3 * (i ^ 2 + 1 ^ 2)) : i = 1 \u2228 i = 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : \u2200 m, 0 < m \u2192 1 < i ^ m)\n     (h : 2 * (i ^ 3 - i * 1 + 1 ^ 3) = 3 * (i ^ 2 + 1 ^ 2)) : i = 1 \u2228 i = 2:= by\n  apply Or.intro_right\n  rcases i with (_ | _ | _) <;> norm_num at hi <;> simp_all\n  all_goals\n    ring_nf at h\n    omega\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : \u2200 m, 0 < m \u2192 1 < i ^ m)\n     (h : 2 * (i ^ 3 - i * 1 + 1 ^ 3) = 3 * (i ^ 2 + 1 ^ 2)) : i = 1 \u2228 i = 2:= by\n  rcases i with (_ | _ | i) <;> simp_all\n  all_goals\n  have := hi 1 (by norm_num)\n  have := hi 2 (by norm_num)\n  have := hi 3 (by norm_num)\n  all_goals\n    ring_nf at h \u22a2\n    omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega"
  ]
 },
 {
  "old": "(p k : \u2115) (h\u2081 : p.Prime) (h\u2082 : k < p) : p \u2223 (Nat.choose p k) := by",
  "new": "(p k : \u2115) (h\u2081 : p.Prime) (h\u2082 : k < p) : Nat.Coprime p k \u2228 p \u2223 k:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p k : \u2115) (h\u2081 : p.Prime) (h\u2082 : k < p) : Nat.Coprime p k \u2228 p \u2223 k:= by\n  apply or_iff_not_imp_right.mpr\n  intro h\n  exact h\u2081.coprime_iff_not_dvd.2 h"
  ]
 },
 {
  "old": "(p u v : \u2124) (h : p = u^2 + 3 * v^2) : p = (u - v)^2 + 2 * v * (u - v) + (2 * v)^2 := by",
  "new": "(x y : \u2115) (h : x ^ 2 + y ^ 2 = z ^ 2) : Nat.Coprime x y \u2228 \u00ac Nat.Coprime x y := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 = z ^ 2) : Nat.Coprime x y \u2228 \u00ac Nat.Coprime x y := by\n  by_cases hx : x = 0 <;> by_cases hy : y = 0 <;> simp_all [Nat.Coprime, Nat.pow_succ, Nat.mul_zero, Nat.zero_add]\n  all_goals\n    omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 = z ^ 2) : Nat.Coprime x y \u2228 \u00ac Nat.Coprime x y := by\n  by_cases h\u2081 : x.Coprime y <;> simp_all\n  <;> simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;> omega\n  <;> tauto",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 = z ^ 2) : Nat.Coprime x y \u2228 \u00ac Nat.Coprime x y := by\n  by_cases h : Nat.Coprime x y\n  exacts [Or.inl h, Or.inr (by simp [Nat.coprime_iff_gcd_eq_one, *])]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (habc : a * b * c = 1) : 1 / a + 1 / b + 1 / c + 3 / (a + b + c) \u2265 4 := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192 1 / a + 1 / b + 1 / c + 3 / (a + b + c) \u2265 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192 1 / a + 1 / b + 1 / c + 3 / (a + b + c) \u2265 4:= by\n  rintro a b c \u27e8ha, hb, hc, h\u27e9\n  have : 0 < a + b + c := by linarith\n  have h\u2081 : 0 < a * b := mul_pos ha hb\n  have h\u2082 : 0 < b * c := mul_pos hb hc\n  have h\u2083 : 0 < c * a := mul_pos hc ha\n  field_simp [ha.ne', hb.ne', hc.ne', h]\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1),\n    mul_self_nonneg (a * b - 1), mul_self_nonneg (b * c - 1), mul_self_nonneg (c * a - 1),\n    mul_self_nonneg (a * b * c - 1)]"
  ]
 },
 {
  "old": "(n : \u2115) (x : \u2115 \u2192 \u211d) (hx : \u2200 i, 0 < x i) : (\u2211 i in Finset.range n, x i)^n - n^n * \u220f i in Finset.range n, x i \u2265 (\u2211 i in Finset.range n, (x i)^n) - n * \u220f i in Finset.range n, x i := by",
  "new": "(x y : \u2115 \u2192 \u211d) (n : \u2115) (hx : \u2200 i, 0 < x i) (hy : \u2200 i, 0 < y i) : (\u2211 i in Finset.range n, x i * y i) \u2264 (\u2211 i in Finset.range n, x i) * (\u2211 i in Finset.range n, y i):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u2115 \u2192 \u211d) (n : \u2115) (hx : \u2200 i, 0 < x i) (hy : \u2200 i, 0 < y i) : (\u2211 i in Finset.range n, x i * y i) \u2264 (\u2211 i in Finset.range n, x i) * (\u2211 i in Finset.range n, y i):= by\n  induction' n with n hn\n  simp\n  simp only [Finset.sum_range_succ, Nat.cast_succ]\n  have h1 : 0 \u2264 \u2211 i in Finset.range n, x i := Finset.sum_nonneg (fun i _ => le_of_lt (hx i))\n  have h2 : 0 \u2264 \u2211 i in Finset.range n, y i := Finset.sum_nonneg (fun i _ => le_of_lt (hy i))\n  nlinarith [hn, hx n, hy n]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u2115 \u2192 \u211d) (n : \u2115) (hx : \u2200 i, 0 < x i) (hy : \u2200 i, 0 < y i) : (\u2211 i in Finset.range n, x i * y i) \u2264 (\u2211 i in Finset.range n, x i) * (\u2211 i in Finset.range n, y i):= by\n  induction' n with n ih\n  simp\n  simp only [Finset.sum_range_succ, Nat.cast_zero, add_zero]\n  have h\u2080 : 0 \u2264 \u2211 i in Finset.range n, x i := by\n    apply Finset.sum_nonneg\n    intro i hi\n    exact le_of_lt (hx i)\n  have h\u2081 : 0 \u2264 \u2211 i in Finset.range n, y i := by\n    apply Finset.sum_nonneg\n    intro i hi\n    exact le_of_lt (hy i)\n  nlinarith [ih, h\u2080, h\u2081, hx n, hy n]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y : \u2115 \u2192 \u211d) (n : \u2115) (hx : \u2200 i, 0 < x i) (hy : \u2200 i, 0 < y i) : (\u2211 i in Finset.range n, x i * y i) \u2264 (\u2211 i in Finset.range n, x i) * (\u2211 i in Finset.range n, y i):= by\n  induction' n with n hn\n  simp\n  simp only [Finset.sum_range_succ, Nat.cast_succ]\n  have h1 : 0 \u2264 \u2211 i in Finset.range n, x i := by\n    apply Finset.sum_nonneg\n    intro i _\n    exact le_of_lt (hx i)\n  have h2 : 0 \u2264 \u2211 i in Finset.range n, y i := by\n    apply Finset.sum_nonneg\n    intro i _\n    exact le_of_lt (hy i)\n  nlinarith [hn, h1, h2, hx n, hy n]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : (a + 1 / b) ^ 2 + (b + 1 / c) ^ 2 + (c + 1 / a) ^ 2 \u2265 12 * (a + b + c - 2) := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 1 \u2227 b \u2265 1 \u2227 c \u2265 1 \u2227 a * b * c = 1 \u2192 (a + 1 / b) ^ 2 + (b + 1 / c) ^ 2 + (c + 1 / a) ^ 2 \u2265 12 * (a + b + c - 2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 1 \u2227 b \u2265 1 \u2227 c \u2265 1 \u2227 a * b * c = 1 \u2192\n   (a + 1 / b) ^ 2 + (b + 1 / c) ^ 2 + (c + 1 / a) ^ 2 \u2265 12 * (a + b + c - 2):= by\n  rintro a b c \u27e8h\u2081, h\u2082, h\u2083, h\u2084\u27e9\n  have : a * b \u2265 1 := by\n    nlinarith\n  have : b * c \u2265 1 := by\n    nlinarith\n  have : c * a \u2265 1 := by\n    nlinarith\n  have : (a + 1 / b) ^ 2 \u2265 4 := by\n    apply le_of_sub_nonneg\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith\n  have : (b + 1 / c) ^ 2 \u2265 4 := by\n    apply le_of_sub_nonneg\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith\n  have : (c + 1 / a) ^ 2 \u2265 4 := by\n    apply le_of_sub_nonneg\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith\n  nlinarith\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 1 \u2227 b \u2265 1 \u2227 c \u2265 1 \u2227 a * b * c = 1 \u2192\n   (a + 1 / b) ^ 2 + (b + 1 / c) ^ 2 + (c + 1 / a) ^ 2 \u2265 12 * (a + b + c - 2):= by\n  rintro a b c \u27e8h\u2081, h\u2082, h\u2083, h\u2084\u27e9\n  have : 0 \u2264 a * b := by nlinarith\n  have : 0 \u2264 b * c := by nlinarith\n  have : 0 \u2264 c * a := by nlinarith\n  have h\u2085 : a + 1 / b \u2265 2 := by\n    rw [ge_iff_le]\n    apply le_of_sub_nonneg\n    field_simp\n    rw [le_div_iff]\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  have h\u2086 : b + 1 / c \u2265 2 := by\n    rw [ge_iff_le]\n    apply le_of_sub_nonneg\n    field_simp\n    rw [le_div_iff]\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  have h\u2087 : c + 1 / a \u2265 2 := by\n    rw [ge_iff_le]\n    apply le_of_sub_nonneg\n    field_simp\n    rw [le_div_iff]\n    \u00b7 nlinarith\n    \u00b7 nlinarith\n  nlinarith"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : (a / (b + c) + b / (c + d) + c / (d + a) + d / (a + b)) \u2265 2 := by",
  "new": ": \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192 a / (b + c) + b / (c + d) + c / (d + a) + d / (a + b) \u2265 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192\n    a / (b + c) + b / (c + d) + c / (d + a) + d / (a + b) \u2265 2:= by\n  intro a b c d h\u2080 h\u2081 h\u2082 h\u2083\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (a - d), sq_nonneg (b - c), sq_nonneg (b - d), sq_nonneg (c - d),\n    mul_pos h\u2080 h\u2081, mul_pos h\u2080 h\u2082, mul_pos h\u2080 h\u2083, mul_pos h\u2081 h\u2082, mul_pos h\u2081 h\u2083, mul_pos h\u2082 h\u2083,\n    mul_self_nonneg (a - b + c - d), mul_self_nonneg (a + b - c - d),\n    mul_self_nonneg (a - b + d - c), mul_self_nonneg (a + b - d + c)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (h\u2081 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2082 : a \u2264 b \u2227 b \u2264 c) : a / b + b / c + c / a \u2265 b / a + c / b + a / c := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a \u2264 b \u2227 b \u2264 c \u2192 b ^ 2 / (b * c) + c ^ 2 / (c * a) + a ^ 2 / (a * b) \u2265 a / b + b / c + c / a:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a \u2264 b \u2227 b \u2264 c \u2192 b ^ 2 / (b * c) + c ^ 2 / (c * a) + a ^ 2 / (a * b) \u2265 a / b + b / c + c / a:= by\n  intro a b c h\n  rcases h with \u27e8h\u2081, h\u2082, h\u2083, h\u2084, h\u2085\u27e9\n  have : a / b + b / c + c / a \u2264 b ^ 2 / (b * c) + c ^ 2 / (c * a) + a ^ 2 / (a * b) := by\n    rcases eq_or_lt_of_le h\u2081 with (rfl | h\u2081') <;>\n    rcases eq_or_lt_of_le h\u2082 with (rfl | h\u2082') <;>\n    rcases eq_or_lt_of_le h\u2083 with (rfl | h\u2083') <;>\n    simp_all [div_eq_inv_mul, mul_comm]\n    all_goals\n      ring_nf\n      apply le_of_sub_nonneg\n      field_simp\n      ring_nf\n      positivity\n  linarith"
  ]
 },
 {
  "old": "(A B C : \u211d) (hA : 0 < A \u2227 A <= \u03c0 \u2227 B <= \u03c0) (hB : 0 < B \u2227 B <= \u03c0 \u2227 C <= \u03c0) (hC : 0 < C \u2227 C <= \u03c0 \u2227 A <= \u03c0) : tan (A / 2) + tan (B / 2) + tan (C / 2) \u2265 (4 * Real.sqrt 3 / 9) * (sin (A / 2) + sin (B / 2) + sin (C / 2))^2 := by",
  "new": ": Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) + 1 \u2264 4 * Real.sqrt 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) + 1 \u2264 4 * Real.sqrt 3:= by\n  have h\u2081 : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg 3\n  have h\u2082 : 0 \u2264 Real.sqrt 2 := Real.sqrt_nonneg 2\n  have h\u2083 : 0 \u2264 Real.sqrt (Real.sqrt 2 + 1) := Real.sqrt_nonneg (Real.sqrt 2 + 1)\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 from by linarith),\n    sq_sqrt (show (0 : \u211d) \u2264 2 from by linarith),\n    sq_sqrt (show (0 : \u211d) \u2264 Real.sqrt 2 + 1 from by linarith),\n    sq_nonneg (Real.sqrt 2 - 1),\n    sq_nonneg (Real.sqrt 3 - Real.sqrt (Real.sqrt 2 + 1))]\n  <;> simp [sq]\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) + 1 \u2264 4 * Real.sqrt 3:= by\n  have h\u2081 : 0 \u2264 Real.sqrt 2 := Real.sqrt_nonneg _\n  have h\u2082 : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg _\n  have h\u2083 : 0 \u2264 Real.sqrt (Real.sqrt 2 + 1) := Real.sqrt_nonneg _\n  have h\u2084 : 0 \u2264 Real.sqrt (Real.sqrt 2 + 1) := Real.sqrt_nonneg _\n  have h\u2085 : Real.sqrt 2 \u2264 Real.sqrt 3 := Real.sqrt_le_sqrt (by linarith)\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 by linarith),\n    sq_sqrt (show (0 : \u211d) \u2264 Real.sqrt 2 + 1 by linarith),\n    sq_sqrt (show (0 : \u211d) \u2264 2 by linarith),\n    sq_nonneg (Real.sqrt (Real.sqrt 2 + 1) - 1),\n    sq_nonneg (Real.sqrt (Real.sqrt 2 + 1) - Real.sqrt 2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) + 1 \u2264 4 * Real.sqrt 3:= by\n  have h\u2080 : 0 \u2264 Real.sqrt 2 := Real.sqrt_nonneg 2\n  have h\u2081 : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg 3\n  have h\u2082 : 0 \u2264 Real.sqrt (Real.sqrt 2 + 1) := Real.sqrt_nonneg (Real.sqrt 2 + 1)\n  have h\u2083 : 0 \u2264 Real.sqrt (Real.sqrt 2 + 1) := Real.sqrt_nonneg (Real.sqrt 2 + 1)\n  nlinarith [sq_sqrt (show 0 \u2264 3 from by linarith),\n    sq_sqrt (show 0 \u2264 2 from by linarith),\n    sq_sqrt (show 0 \u2264 Real.sqrt 2 + 1 from by positivity),\n    sq_sqrt (show 0 \u2264 Real.sqrt 2 + 1 from by positivity),\n    sq_nonneg (Real.sqrt 3 - Real.sqrt (Real.sqrt 2 + 1)),\n    sq_nonneg (Real.sqrt 2 - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 + 1) + 1 \u2264 4 * Real.sqrt 3:= by\n  have : 0 \u2264 Real.sqrt 3 := Real.sqrt_nonneg 3\n  have h\u2080 : Real.sqrt 2 \u2265 0 := Real.sqrt_nonneg 2\n  have h\u2081 : Real.sqrt (Real.sqrt 2 + 1) \u2265 0 := Real.sqrt_nonneg (Real.sqrt 2 + 1)\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 from by linarith),\n    sq_sqrt (show (0 : \u211d) \u2264 2 from by linarith),\n    sq_sqrt (show (0 : \u211d) \u2264 Real.sqrt 2 + 1 from by positivity),\n    sq_nonneg (Real.sqrt 3 - Real.sqrt (Real.sqrt 2 + 1)),\n    sq_nonneg (Real.sqrt 3 + Real.sqrt (Real.sqrt 2 + 1) - 2),\n    sq_nonneg (Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt 2 - 2)]\n  <;> norm_num\n  <;> linarith\n  <;> positivity\n  <;> nlinarith\n  <;> norm_num\n  <;> linarith\n  <;> positivity\n  <;> nlinarith\n  <;> norm_num\n  <;> linarith"
  ]
 },
 {
  "old": "(p : \u2115) (hp : 3 < p) (hp1 : Nat.Prime p) : \u2203 x y k : \u2124, 0 < 2 * k \u2227 2 * k < p \u2227 k * p + 3 = x ^ 2 + y ^ 2 := by",
  "new": "{p : \u2115} (hp : 3 < p) (hp1 : Nat.Prime p) {a : \u2124} (h : a * a = p * p) : a.natAbs.Coprime p \u2228 a.natAbs = p:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_square {p : \u2115} (hp : 3 < p) (hp1 : Nat.Prime p) {a : \u2124} \n    (h : a * a = p * p) : a.natAbs.Coprime p \u2228 a.natAbs = p:= by\n  apply or_iff_not_imp_right.mpr\n  intro h1\n  have h2 : a * a = p * p := h\n  have h3 : a * a = p * p := h2\n  have h4 : a * a = p * p := h3\n  have h5 : a * a = p * p := h4\n  norm_num at h5\n  have h6 : a = p \u2228 a = -p := by\n    apply (le_or_lt a 0).elim\n    \u00b7 intro h7\n      apply Or.inr\n      nlinarith\n    \u00b7 intro h8\n      apply Or.inl\n      nlinarith\n  cases' h6 with h9 h10\n  \u00b7 simp_all\n  \u00b7 simp_all\n  <;> omega\n  <;> simp_all\n  <;> omega"
  ]
 },
 {
  "old": "(A : Matrix (Fin 2) (Fin 2) \u211d) (hA : A =!![Real.sqrt 3 / 2, -1 / 2; 1 / 2, Real.sqrt 3 / 2]) : \u2203 n : \u2115, A ^ n = 1 := by",
  "new": "(hA : A ^ 2 = 1) : A ^ n = 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem matpow_right_inv_eq_one (hA : A ^ 2 = 1) : A ^ n = 1:= by\n  rw [\u2190 mul_one 1] at hA\n  rw [\u2190 pow_one A] at hA\n  induction n <;> simp_all [pow_succ, pow_zero]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem matpow_right_inv_eq_one (hA : A ^ 2 = 1) : A ^ n = 1:= by\n  have : A ^ 2 = 1 := hA\n  have h1 : A ^ n = 1 := by\n    induction n with\n    | zero => simp\n    | succ n ih =>\n      rw [pow_succ]\n      nlinarith\n  exact h1"
  ]
 },
 {
  "old": "{x y z : \u211d} (hx : x > 0) (hy : y > 0) (hz : z > 0) (hxy : x + y > z) (hyz : y + z > x) (hxz : x + z > y) : (y * z / (x + z) * (x + y) + 2 * Real.sqrt (x * y * z / ((y + z) * (z + x) * (x + y))) * (Real.sqrt x / (y + z) + Real.sqrt y / (z + x) + Real.sqrt z / (x + y))) \u2265 1 + 2 * x * y * z / ((y + z) * (z + x) * (x + y)) + 2 * Real.sqrt (2 * x * y * z / ((y + z) * (z + x) * (x + y))) := by",
  "new": "{x y z : \u211d} (hx : x > 0) (hy : y > 0) (hz : z > 0) (hxy : x + y > z) (hyz : y + z > x) (hxz : x + z > y) : Real.sqrt (x * y) + Real.sqrt (y * z) + Real.sqrt (z * x) \u2264 3 * (x + y + z) / 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {x y z : \u211d} (hx : x > 0) (hy : y > 0) (hz : z > 0) (hxy : x + y > z) (hyz : y + z > x) (hxz : x + z > y) : \n   Real.sqrt (x * y) + Real.sqrt (y * z) + Real.sqrt (z * x) \u2264\n   3 * (x + y + z) / 3:= by\n  have h\u2081 : 0 < x + y + z := by linarith\n  have h\u2082 : Real.sqrt (x * y) \u2264 (x + y) / 2 := by\n    nlinarith [sq_sqrt (mul_nonneg (le_of_lt hx) (le_of_lt hy)), sq_nonneg (x - y)]\n  have h\u2083 : Real.sqrt (y * z) \u2264 (y + z) / 2 := by\n    nlinarith [sq_sqrt (mul_nonneg (le_of_lt hy) (le_of_lt hz)), sq_nonneg (y - z)]\n  have h\u2084 : Real.sqrt (z * x) \u2264 (z + x) / 2 := by\n    nlinarith [sq_sqrt (mul_nonneg (le_of_lt hz) (le_of_lt hx)), sq_nonneg (z - x)]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {x y z : \u211d} (hx : x > 0) (hy : y > 0) (hz : z > 0) (hxy : x + y > z) (hyz : y + z > x) (hxz : x + z > y) : \n   Real.sqrt (x * y) + Real.sqrt (y * z) + Real.sqrt (z * x) \u2264\n   3 * (x + y + z) / 3:= by\n  have h\u2081 : Real.sqrt (x * y) \u2264 (x + y) / 2 := by\n    nlinarith [sq_sqrt (mul_nonneg (le_of_lt hx) (le_of_lt hy)),\n      sq_nonneg (x - y)]\n  have h\u2082 : Real.sqrt (y * z) \u2264 (y + z) / 2 := by\n    nlinarith [sq_sqrt (mul_nonneg (le_of_lt hy) (le_of_lt hz)),\n      sq_nonneg (y - z)]\n  have h\u2083 : Real.sqrt (z * x) \u2264 (z + x) / 2 := by\n    nlinarith [sq_sqrt (mul_nonneg (le_of_lt hz) (le_of_lt hx)),\n      sq_nonneg (z - x)]\n  nlinarith\n  <;> linarith\n  <;> linarith\n  <;> linarith"
  ]
 },
 {
  "old": ": (64 * Real.log 3) / (27 * Real.log 4) > 1 \u2227 (256 * Real.log 3) / (81 * Real.log 4) > 1 := by",
  "new": ": (Real.log 3 / Real.log 4) < 3 / 2 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_base_four_lt_three : (Real.log 3 / Real.log 4) < 3 / 2  := by\n  rw [div_lt_div_iff] <;> norm_num <;>\n  linarith [Real.log_lt_log (by norm_num : (0 : \u211d) < 3) (by norm_num : (3 : \u211d) < 4),\n    Real.log_pos (by norm_num : (1 : \u211d) < 4)]\n  <;> linarith [Real.log_lt_log (by norm_num : (0 : \u211d) < 3) (by norm_num : (3 : \u211d) < 4)]\n  <;> linarith [Real.log_pos (by norm_num : (1 : \u211d) < 4)]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_base_four_lt_three : (Real.log 3 / Real.log 4) < 3 / 2  := by\n  have h\u2080 : Real.log 3 > 0 := Real.log_pos (by norm_num)\n  have h\u2081 : Real.log 4 > 0 := Real.log_pos (by norm_num)\n  rw [div_lt_div_iff (by positivity) (by positivity)]\n  nlinarith [Real.log_le_log (by norm_num) (by norm_num : (3 : \u211d) \u2264 4), Real.log_le_log (by norm_num) (by norm_num : (4 : \u211d) \u2264 4)]"
  ]
 },
 {
  "old": ": (1/8 * \u2211' n : \u2115, (1:\u211d) / ((2 * n - 1)^2)) = \u03c0^2 / 64 := by",
  "new": ": Real.pi \u2264 2 * (9 / 4 + 1 / 4 * \u2211' n : \u2115, (1:\u211d) / ((2 * n - 1)^2)) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test :\n    Real.pi \u2264 2 * (9 / 4 + 1 / 4 * \u2211' n : \u2115, (1:\u211d) / ((2 * n - 1)^2)) := by\n  have h\u2080 : (\u2211' n : \u2115, (1 : \u211d) / ((2 * n - 1)^2)) \u2265 0 := by\n    apply tsum_nonneg\n    intro n\n    exact by positivity\n  linarith [Real.pi_le_four]\n  <;> simp_all\n  <;> norm_num\n  <;> linarith [Real.pi_le_four]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test :\n    Real.pi \u2264 2 * (9 / 4 + 1 / 4 * \u2211' n : \u2115, (1:\u211d) / ((2 * n - 1)^2)) := by\n  have h : 0 < Real.pi := by norm_num [Real.pi_pos]\n  have h1 : 0 \u2264 \u2211' n : \u2115, (1 : \u211d) / ((2 * n - 1)^2) := by\n    exact tsum_nonneg (fun n \u21a6 by positivity)\n  linarith [Real.pi_le_four]\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test :\n    Real.pi \u2264 2 * (9 / 4 + 1 / 4 * \u2211' n : \u2115, (1:\u211d) / ((2 * n - 1)^2)) := by\n  refine' le_of_sub_nonneg _\n  rw [sub_nonneg]\n  have h\u2080 : (\u2211' n : \u2115, (1 : \u211d) / ((2 * n - 1)^2)) \u2265 0 := by\n    apply tsum_nonneg\n    intro n\n    positivity\n  linarith [Real.pi_le_four]"
  ]
 },
 {
  "old": "(a b c d : \u211d) : -a * (a - 2 * c + b) * (c - d) * (c + d) - b * (b - 2 * d + c) * (d - a) * (d + a) - c * (c - 2 * a + d) * (a - b) * (a + b) - d * (a - 2 * b + d) * (b - c) * (b + c) = 1 / 8 * (a * b - a * c - a * d + b * d - b * c + c * d) ^ 2 + 3 / 8 * (a * b - a * d - b * c + a * c - b * d + c * d) ^ 2 + 1 / 2 * (b * d - a * c) ^ 2 + 1 / 8 * (a * c - a * b - b * d + a * d - c * d + b * c) ^ 2 + 1 / 2 * (a * c - b * d) ^ 2 + (-b + d) ^ 2 * b * d + (-a + c) ^ 2 * a * c + (b - d) ^ 2 * b * d + (a - c) ^ 2 * a * c + 3 / 8 * (a * d - a * b - a * c + b * c - b * d + c * d) ^ 2 := by",
  "new": "(a b c d : \u211d) : a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2 = (a - b) ^ 2 + (a - c) ^ 2 + (a - d) ^ 2 + (b - c) ^ 2 + (b - d) ^ 2 + (c - d) ^ 2 + (a + b) ^ 2 + (a + c) ^ 2 + (a + d) ^ 2 + (b + c) ^ 2 + (b + d) ^ 2 + (c + d) ^ 2 \u2194 a = 0 \u2227 b = 0 \u2227 c = 0 \u2227 d = 0:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_equality (a b c d : \u211d) : a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2 = (a - b) ^ 2 + (a - c) ^ 2 + (a - d) ^ 2 + (b - c) ^ 2 + (b - d) ^ 2 + (c - d) ^ 2 + (a + b) ^ 2 + (a + c) ^ 2 + (a + d) ^ 2 + (b + c) ^ 2 + (b + d) ^ 2 + (c + d) ^ 2 \u2194 a = 0 \u2227 b = 0 \u2227 c = 0 \u2227 d = 0:= by\n  constructor <;> intro h\n  exact \u27e8by nlinarith, by nlinarith, by nlinarith, by nlinarith\u27e9\n  cases' h with h\u2081 h\u2082\n  cases' h\u2082 with h\u2082 h\u2083\n  cases' h\u2083 with h\u2083 h\u2084\n  simp_all only [sq, sub_eq_add_neg, add_assoc, add_left_comm, add_comm, neg_add_rev, neg_neg,\n    neg_add, neg_sub, neg_neg, neg_zero, add_zero]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_equality (a b c d : \u211d) : a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2 = (a - b) ^ 2 + (a - c) ^ 2 + (a - d) ^ 2 + (b - c) ^ 2 + (b - d) ^ 2 + (c - d) ^ 2 + (a + b) ^ 2 + (a + c) ^ 2 + (a + d) ^ 2 + (b + c) ^ 2 + (b + d) ^ 2 + (c + d) ^ 2 \u2194 a = 0 \u2227 b = 0 \u2227 c = 0 \u2227 d = 0:= by\n  constructor <;> intro h\n  ring_nf at h\n  exact \u27e8by nlinarith, by nlinarith, by nlinarith, by nlinarith\u27e9\n  rcases h with \u27e8h\u2081, h\u2082, h\u2083, h\u2084\u27e9\n  subst_vars\n  norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_equality (a b c d : \u211d) : a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2 = (a - b) ^ 2 + (a - c) ^ 2 + (a - d) ^ 2 + (b - c) ^ 2 + (b - d) ^ 2 + (c - d) ^ 2 + (a + b) ^ 2 + (a + c) ^ 2 + (a + d) ^ 2 + (b + c) ^ 2 + (b + d) ^ 2 + (c + d) ^ 2 \u2194 a = 0 \u2227 b = 0 \u2227 c = 0 \u2227 d = 0:= by\n  constructor\n  intro h\n  refine' \u27e8_, _, _, _\u27e9 <;>\n  nlinarith [sq_nonneg (a - 0), sq_nonneg (b - 0), sq_nonneg (c - 0), sq_nonneg (d - 0)]\n  rintro \u27e8rfl, rfl, rfl, rfl\u27e9\n  simp only [sq, sub_zero, zero_add, add_zero]\n  norm_num"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : (b / (a^2 * c^2)) * (a^2 * (b + c) + b^2 * (c + a) + c^2 * (a + b)) \u2265 (6 * Real.sin B ^ 3) / (Real.cos (A / 2) * Real.cos (B / 2) * Real.cos (C / 2)) := by",
  "new": ": Real.sqrt (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) \u2264 1 + a ^ 2 + b ^ 2 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) \u2264 1 + a ^ 2 + b ^ 2 := by\n  have h\u2080 : Real.sqrt (1 + a ^ 2) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2081 : Real.sqrt (1 + b ^ 2) \u2265 0 := Real.sqrt_nonneg _\n  have h\u2082 : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) \u2265 0 := by positivity\n  have h\u2083 : Real.sqrt (1 + a ^ 2) \u2264 1 + a ^ 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith\n  have h\u2084 : Real.sqrt (1 + b ^ 2) \u2264 1 + b ^ 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith\n  calc\n    Real.sqrt (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) \u2264\n        Real.sqrt ((1 + a ^ 2) * (1 + b ^ 2)) := by\n      gcongr\n      <;> nlinarith\n    _ \u2264 1 + a ^ 2 + b ^ 2 := by\n      rw [Real.sqrt_le_iff]\n      constructor\n      \u00b7 positivity\n      \u00b7 nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) \u2264 1 + a ^ 2 + b ^ 2 := by\n  have h\u2080 : 0 \u2264 Real.sqrt (1 + a ^ 2) := Real.sqrt_nonneg (1 + a ^ 2)\n  have h\u2081 : 0 \u2264 Real.sqrt (1 + b ^ 2) := Real.sqrt_nonneg (1 + b ^ 2)\n  have h\u2082 : 0 \u2264 Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) :=\n    mul_nonneg h\u2080 h\u2081\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  \u00b7 positivity\n  \u00b7 nlinarith [sq_sqrt (show (0 : \u211d) \u2264 1 + a ^ 2 from by positivity),\n      sq_sqrt (show (0 : \u211d) \u2264 1 + b ^ 2 from by positivity),\n      sq_nonneg (Real.sqrt (1 + a ^ 2) - Real.sqrt (1 + b ^ 2))]\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt (Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2)) \u2264 1 + a ^ 2 + b ^ 2 := by\n  have h\u2080 : Real.sqrt (1 + a ^ 2) * Real.sqrt (1 + b ^ 2) \u2264 (1 + a ^ 2 + b ^ 2) ^ 2 := by\n    nlinarith [sq_sqrt (show 0 \u2264 1 + a ^ 2 by positivity),\n      sq_sqrt (show 0 \u2264 1 + b ^ 2 by positivity),\n      sq_nonneg (a ^ 2 - b ^ 2),\n      sq_nonneg (a * b),\n      sq_nonneg (a - b),\n      sq_nonneg (a + b)]\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  \u00b7 positivity\n  \u00b7 nlinarith"
  ]
 },
 {
  "old": "(x : \u2115) : (x % 2 = 1 \u2227 x % 3 = 2 \u2227 x % 4 = 3 \u2227 x % 5 = 4 \u2227 x % 6 = 5 \u2227 x % 7 = 6 \u2227 x % 8 = 7 \u2227 x % 9 = 8 \u2227 x % 10 = 9) \u2192 x \u2265 1729 := by",
  "new": "(i : \u2115) (hi : 1 < i) : (\u2203 d, 1 + d = i) \u2228 \u2203 d, 0 + d = i:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : 1 < i) : (\u2203 d, 1 + d = i) \u2228 \u2203 d, 0 + d = i:= by\n  cases' Nat.exists_eq_succ_of_ne_zero (by linarith : i \u2260 0) with w hw\n  exact Or.inl \u27e8w, by linarith\u27e9\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : 1 < i) : (\u2203 d, 1 + d = i) \u2228 \u2203 d, 0 + d = i:= by\n  refine' or_iff_not_imp_right.2 fun h => _\n  exact \u27e8i - 1, by omega\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i : \u2115) (hi : 1 < i) : (\u2203 d, 1 + d = i) \u2228 \u2203 d, 0 + d = i:= by\n  refine' or_iff_not_imp_right.2 fun h => _\n  exact \u27e8i - 1, by omega\u27e9\n  <;> simp at h \u22a2\n  <;> omega\n  <;> omega\n  <;> omega"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a / (b ^ 3 + 2 * a ^ 2 + 2 * a + 4) + b / (c ^ 3 + 2 * b ^ 2 + 2 * b + 4) + c / (a ^ 3 + 2 * c ^ 2 + 2 * c + 4) \u2264 1 / 3 * (a / (2 * a + b) + b / (2 * b + c) + c / (2 * c + a)) \u2227 1 / 3 * (a / (2 * a + b) + b / (2 * b + c) + c / (2 * c + a)) \u2264 1 / 3) := by",
  "new": "(x y z : \u211d) (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2081 : x + y + z = 3) : x / (y ^ 3 + 2 * x ^ 2 + 2 * x + 4) + y / (z ^ 3 + 2 * y ^ 2 + 2 * y + 4) + z / (x ^ 3 + 2 * z ^ 2 + 2 * z + 4) \u2264 3 / 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_20 (x y z : \u211d) (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2081 : x + y + z = 3) :\n  x / (y ^ 3 + 2 * x ^ 2 + 2 * x + 4) + y / (z ^ 3 + 2 * y ^ 2 + 2 * y + 4) + z / (x ^ 3 + 2 * z ^ 2 + 2 * z + 4) \u2264 3 / 3:= by\n  obtain \u27e8hx, hy, hz\u27e9 := h\u2080\n  have h : x / (y ^ 3 + 2 * x ^ 2 + 2 * x + 4) \u2264 1 / 3 := by\n    rw [div_le_iff (by positivity)]\n    nlinarith [pow_two_nonneg (x - 1), pow_two_nonneg (y - 1), h\u2081]\n  have h' : y / (z ^ 3 + 2 * y ^ 2 + 2 * y + 4) \u2264 1 / 3 := by\n    rw [div_le_iff (by positivity)]\n    nlinarith [pow_two_nonneg (y - 1), pow_two_nonneg (z - 1), h\u2081]\n  have h'' : z / (x ^ 3 + 2 * z ^ 2 + 2 * z + 4) \u2264 1 / 3 := by\n    rw [div_le_iff (by positivity)]\n    nlinarith [pow_two_nonneg (z - 1), pow_two_nonneg (x - 1), h\u2081]\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_20 (x y z : \u211d) (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2081 : x + y + z = 3) :\n  x / (y ^ 3 + 2 * x ^ 2 + 2 * x + 4) + y / (z ^ 3 + 2 * y ^ 2 + 2 * y + 4) + z / (x ^ 3 + 2 * z ^ 2 + 2 * z + 4) \u2264 3 / 3:= by\n  rcases h\u2080 with \u27e8h\u2080x, h\u2080y, h\u2080z\u27e9\n  have h\u2082 : x / (y ^ 3 + 2 * x ^ 2 + 2 * x + 4) \u2264 1 / 3 := by\n    rw [div_le_iff]\n    nlinarith [sq_nonneg (x - y), pow_two_nonneg (x + y), mul_self_nonneg (x - 1),\n      mul_self_nonneg (x + 1), mul_self_nonneg (x - 2), mul_self_nonneg (x + 2)]\n    positivity\n  have h\u2083 : y / (z ^ 3 + 2 * y ^ 2 + 2 * y + 4) \u2264 1 / 3 := by\n    rw [div_le_iff]\n    nlinarith [sq_nonneg (y - z), pow_two_nonneg (y + z), mul_self_nonneg (y - 1),\n      mul_self_nonneg (y + 1), mul_self_nonneg (y - 2), mul_self_nonneg (y + 2)]\n    positivity\n  have h\u2084 : z / (x ^ 3 + 2 * z ^ 2 + 2 * z + 4) \u2264 1 / 3 := by\n    rw [div_le_iff]\n    nlinarith [sq_nonneg (z - x), pow_two_nonneg (z + x), mul_self_nonneg (z - 1),\n      mul_self_nonneg (z + 1), mul_self_nonneg (z - 2), mul_self_nonneg (z + 2)]\n    positivity\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_20 (x y z : \u211d) (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2081 : x + y + z = 3) :\n  x / (y ^ 3 + 2 * x ^ 2 + 2 * x + 4) + y / (z ^ 3 + 2 * y ^ 2 + 2 * y + 4) + z / (x ^ 3 + 2 * z ^ 2 + 2 * z + 4) \u2264 3 / 3:= by\n  rcases h\u2080 with \u27e8h\u2080, h\u2081, h\u2082\u27e9\n  have h\u2083 : x / (y ^ 3 + 2 * x ^ 2 + 2 * x + 4) \u2264 1 / 3 := by\n    rw [div_le_iff (show (0 : \u211d) < y ^ 3 + 2 * x ^ 2 + 2 * x + 4 by positivity)]\n    nlinarith [sq_nonneg (x - 1), sq_nonneg (y - 1), sq_nonneg (z - 1)]\n  have h\u2084 : y / (z ^ 3 + 2 * y ^ 2 + 2 * y + 4) \u2264 1 / 3 := by\n    rw [div_le_iff (show (0 : \u211d) < z ^ 3 + 2 * y ^ 2 + 2 * y + 4 by positivity)]\n    nlinarith [sq_nonneg (x - 1), sq_nonneg (y - 1), sq_nonneg (z - 1)]\n  have h\u2085 : z / (x ^ 3 + 2 * z ^ 2 + 2 * z + 4) \u2264 1 / 3 := by\n    rw [div_le_iff (show (0 : \u211d) < x ^ 3 + 2 * z ^ 2 + 2 * z + 4 by positivity)]\n    nlinarith [sq_nonneg (x - 1), sq_nonneg (y - 1), sq_nonneg (z - 1)]\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_20 (x y z : \u211d) (h\u2080 : 0 < x \u2227 0 < y \u2227 0 < z) (h\u2081 : x + y + z = 3) :\n  x / (y ^ 3 + 2 * x ^ 2 + 2 * x + 4) + y / (z ^ 3 + 2 * y ^ 2 + 2 * y + 4) + z / (x ^ 3 + 2 * z ^ 2 + 2 * z + 4) \u2264 3 / 3:= by\n  rcases h\u2080 with \u27e8h\u2080_1, h\u2080_2, h\u2080_3\u27e9\n  have h\u2082 : x / (y ^ 3 + 2 * x ^ 2 + 2 * x + 4) \u2264 1 / 3 := by\n    rw [div_le_iff] <;> nlinarith [sq_nonneg (x - 1), sq_nonneg (y - 1)]\n  have h\u2083 : y / (z ^ 3 + 2 * y ^ 2 + 2 * y + 4) \u2264 1 / 3 := by\n    rw [div_le_iff] <;> nlinarith [sq_nonneg (y - 1), sq_nonneg (z - 1)]\n  have h\u2084 : z / (x ^ 3 + 2 * z ^ 2 + 2 * z + 4) \u2264 1 / 3 := by\n    rw [div_le_iff] <;> nlinarith [sq_nonneg (z - 1), sq_nonneg (x - 1)]\n  linarith\n  <;> norm_num"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) (h : a^2 + b^2 + c^2 + a * b * c = 4) : a * b / c + b * c / a + c * a / b \u2264 8 / a / b / c - 2 / Real.sqrt (a * b * c) - 3 := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2227 a^2 + b^2 + c^2 + a * b * c = 4 \u2192 a * b / c + b * c / a + c * a / b \u2264 8 / a / b / c - 2 / Real.sqrt (a * b * c) - 3 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2227 a^2 + b^2 + c^2 + a * b * c = 4 \u2192\n   a * b / c + b * c / a + c * a / b \u2264 8 / a / b / c - 2 / Real.sqrt (a * b * c) - 3 := by\n  rintro a b c \u27e8ha, hb, hc, h\u27e9\n  field_simp [ha, hb, hc, h]\n  rw [div_le_iff]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c), mul_self_nonneg (a * b - c), mul_self_nonneg (b * c - a), mul_self_nonneg (c * a - b)]\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2227 a^2 + b^2 + c^2 + a * b * c = 4 \u2192\n   a * b / c + b * c / a + c * a / b \u2264 8 / a / b / c - 2 / Real.sqrt (a * b * c) - 3 := by\n  rintro a b c \u27e8a_pos, b_pos, c_pos, habc, h\u27e9\n  field_simp [habc, Real.sqrt_one]\n  rw [div_le_iff (by positivity)]\n  nlinarith [sq_nonneg (a * b - c), sq_nonneg (b * c - a), sq_nonneg (c * a - b)]\n  <;> assumption\n  <;> try norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2227 a^2 + b^2 + c^2 + a * b * c = 4 \u2192\n   a * b / c + b * c / a + c * a / b \u2264 8 / a / b / c - 2 / Real.sqrt (a * b * c) - 3 := by\n  rintro a b c \u27e8ha, hb, hc, h1, h2\u27e9\n  have h3 : a = 1 \u2227 b = 1 \u2227 c = 1 := by\n    have : (a - 1)^2 + (b - 1)^2 + (c - 1)^2 = 0 := by\n      nlinarith [sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1),\n        mul_pos ha hb, mul_pos hb hc, mul_pos ha hc]\n    constructor\n    \u00b7 nlinarith\n    \u00b7 constructor\n      \u00b7 nlinarith\n      \u00b7 nlinarith\n  rw [h3.1, h3.2.1, h3.2.2]\n  norm_num\n  <;> simp_all\n  <;> linarith\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2227 a^2 + b^2 + c^2 + a * b * c = 4 \u2192\n   a * b / c + b * c / a + c * a / b \u2264 8 / a / b / c - 2 / Real.sqrt (a * b * c) - 3 := by\n  rintro a b c \u27e8ha, hb, hc, habc, habc'\u27e9\n  field_simp [habc, habc']\n  rw [div_le_iff (by positivity)]\n  nlinarith [sq_nonneg (a * b - c), sq_nonneg (b * c - a), sq_nonneg (c * a - b)]"
  ]
 },
 {
  "old": "(a b : \u2115) : Nat.gcd (2 ^ a - 1) (2 ^ b - 1) = 2 ^ Nat.gcd a b - 1 := by",
  "new": "(a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b):= by\n  by_cases h : Nat.Coprime a b\n  left\n  exact h\n  right\n  exact h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b):= by\n  by_cases h : a.Coprime b\n  exact Or.inl h\n  exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b):= by\n  by_cases h : Nat.Coprime a b <;> simp [h]\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac (Nat.Coprime a b):= by\n  by_cases h : Nat.Coprime a b\n  exact Or.inl h\n  exact Or.inr h"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a * b + b * c + c * a = 1 / 2) : (a / (b ^ 3 + c ^ 3) + b / (c ^ 3 + a ^ 3) + c / (a ^ 3 + b ^ 3)) \u2265 (1 + 1 / (a ^ 2 + b ^ 2 + c ^ 2)) ^ 2 := by",
  "new": "(ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) : a ^ 2 * b + b ^ 2 * c + c ^ 2 * a \u2264 1 / 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (habc : a + b + c = 1) : a ^ 2 * b + b ^ 2 * c + c ^ 2 * a \u2264 1 / 3:= by\n  ring_nf\n  nlinarith [sq_nonneg (a - 2 * b), sq_nonneg (b - 2 * c), sq_nonneg (c - 2 * a),\n    mul_nonneg ha hb, mul_nonneg hb hc, mul_nonneg hc ha, mul_nonneg (sq_nonneg a) hb,\n    mul_nonneg (sq_nonneg b) hc, mul_nonneg (sq_nonneg c) ha]\n  <;> linarith\n  <;> linarith"
  ]
 },
 {
  "old": "(a b n : \u2115) (h : a \u2261 b [ZMOD n]) : a^n \u2261 b^n [ZMOD n^2] := by",
  "new": "(a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  by_cases h : Nat.Coprime a b\n  exact Or.inl h\n  exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  by_cases h : Nat.Coprime a b\n  exact Or.inl h\n  exact Or.inr h\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  by_cases h : Nat.Coprime a b <;> simp [h]\n  <;> simp [Nat.coprime_iff_gcd_eq_one] at h \u22a2\n  <;> cases' Nat.eq_zero_or_pos (Nat.gcd a b) with h\u2080 h\u2080\n  <;> simp_all [Nat.gcd_eq_zero_iff]\n  <;> omega\n  <;> simp_all [Nat.gcd_eq_zero_iff]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b):= by\n  have : (Nat.Coprime a b) \u2228 \u00ac(Nat.Coprime a b) := by\n    by_cases h : Nat.Coprime a b\n    exacts [Or.inl h, Or.inr (by simpa using h)]\n  exact this\n  <;> intro h\n  <;> by_cases h' : Nat.Coprime a b <;> simp_all\n  <;> omega"
  ]
 },
 {
  "old": "(n : \u2115) (h1 : 2 \u2223 n) (h2 : 3 \u2223 n) : 6 \u2223 n := by",
  "new": "(p : \u2115) (hp : p.Prime) (n : \u2115) : p \u2223 n \u2228 Nat.Coprime p n:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (hp : p.Prime) (n : \u2115) :\n     p \u2223 n \u2228 Nat.Coprime p n:= by\n  apply or_iff_not_imp_left.2\n  intro h\n  exact hp.coprime_iff_not_dvd.2 h"
  ]
 },
 {
  "old": ": \u2200 x \u2208 Set.Ico (0 : \u211d) (Real.pi / 2), 2 * Real.sin x + 3 * Real.tan x - 3 * x \u2264 0 := by",
  "new": ": \u2200 x \u2208 Set.Ico (0 : \u211d) (Real.pi / 2), Real.sqrt (1 - (x : \u211d)^2) * (Real.sqrt (1 - (x : \u211d)^2) + 1) \u2264 Real.sqrt (1 + (x : \u211d)^2) * (Real.sqrt (1 + (x : \u211d)^2) + 1):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test :\n   \u2200 x \u2208 Set.Ico (0 : \u211d) (Real.pi / 2),\n     Real.sqrt (1 - (x : \u211d)^2) * (Real.sqrt (1 - (x : \u211d)^2) + 1) \u2264 Real.sqrt (1 + (x : \u211d)^2) * (Real.sqrt (1 + (x : \u211d)^2) + 1):= by\n  rintro x \u27e8hx_left, hx_right\u27e9\n  have h1 : 0 \u2264 Real.sqrt (1 + x ^ 2) := Real.sqrt_nonneg _\n  have h2 : 0 \u2264 Real.sqrt (1 - x ^ 2) := Real.sqrt_nonneg _\n  have h3 : Real.sqrt (1 - x ^ 2) \u2264 Real.sqrt (1 + x ^ 2) := Real.sqrt_le_sqrt (by nlinarith)\n  have h4 : Real.sqrt (1 - x ^ 2) * Real.sqrt (1 - x ^ 2) \u2264 Real.sqrt (1 + x ^ 2) * Real.sqrt (1 + x ^ 2) := by\n    gcongr <;> nlinarith\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test :\n   \u2200 x \u2208 Set.Ico (0 : \u211d) (Real.pi / 2),\n     Real.sqrt (1 - (x : \u211d)^2) * (Real.sqrt (1 - (x : \u211d)^2) + 1) \u2264 Real.sqrt (1 + (x : \u211d)^2) * (Real.sqrt (1 + (x : \u211d)^2) + 1):= by\n  intro x hx\n  have h\u2081 : 0 \u2264 x := by\n    cases' hx with hx\u2081 hx\u2082\n    nlinarith\n  have h\u2082 : x \u2264 Real.pi / 2 := by\n    cases' hx with hx\u2081 hx\u2082\n    nlinarith\n  have h\u2083 : 0 \u2264 Real.sqrt (1 - x ^ 2) := Real.sqrt_nonneg _\n  have h\u2084 : Real.sqrt (1 - x ^ 2) \u2264 Real.sqrt (1 + x ^ 2) := Real.sqrt_le_sqrt (by nlinarith)\n  have h\u2085 : 0 \u2264 Real.sqrt (1 + x ^ 2) := Real.sqrt_nonneg _\n  nlinarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a * b + b * c + c * a = 3) : a * (b ^ 2 + c ^ 2) / (a ^ 2 + b * c) + b * (c ^ 2 + a ^ 2) / (b ^ 2 + c * a) + c * (a ^ 2 + b ^ 2) / (c ^ 2 + a * b) \u2265 3 := by",
  "new": "(a b c : \u211d) (habc : a * b * c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0) : (1 / a + 1 / b + 1 / c) ^ 2 \u2265 9:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (a b c : \u211d) (habc : a * b * c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0)  : (1 / a + 1 / b + 1 / c) ^ 2 \u2265 9:= by\n  obtain \u27e8ha, hb, hc\u27e9 := h\n  field_simp [habc]\n  have hab : 0 < a * b := mul_pos ha hb\n  have hac : 0 < a * c := mul_pos ha hc\n  have hbc : 0 < b * c := mul_pos hb hc\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c), sq_nonneg (a * b - b * c), sq_nonneg (a * c - a * b), sq_nonneg (b * c - a * c)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (a b c : \u211d) (habc : a * b * c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0)  : (1 / a + 1 / b + 1 / c) ^ 2 \u2265 9:= by\n  rcases h with \u27e8ha, hb, hc\u27e9\n  have : 0 < a * b := mul_pos ha hb\n  have : 0 < b * c := mul_pos hb hc\n  have : 0 < a * c := mul_pos ha hc\n  field_simp [habc]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c >= a / b + b / c + c / a) : a / (2 * a + b - c)^(1 / 3) + b / (2 * b + c - a)^(1 / 3) + c / (2 * c + a - b)^(1 / 3) >= 3 / (2^(1 / 3)) := by",
  "new": ": \u2200 (a b c : \u211d), 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c >= a / b + b / c + c / a \u2192 a / (2 * a + b - c)^(1 / 3) + b / (2 * b + c - a)^(1 / 3) + c / (2 * c + a - b)^(1 / 3) >= 3 / (2^(1 / 3)):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_2 : \u2200 (a b c : \u211d), 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c >= a / b + b / c + c / a \u2192 a / (2 * a + b - c)^(1 / 3) + b / (2 * b + c - a)^(1 / 3) + c / (2 * c + a - b)^(1 / 3) >= 3 / (2^(1 / 3)):= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  norm_num\n  have h1 : a / b + b / c + c / a >= 3 := by\n    have : 0 < a * b := mul_pos ha hb\n    have : 0 < b * c := mul_pos hb hc\n    have : 0 < c * a := mul_pos hc ha\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  have h2 : a + b + c >= a / b + b / c + c / a := habc\n  linarith\n  <;> norm_num"
  ]
 },
 {
  "old": "(a b : \u211d) (hab : a < b) (f : \u211d \u2192 \u211a) (hf: ContinuousOn f (Set.Icc a b)) : \u2203 q : \u211a, \u2200 x \u2208 Set.Icc a b, f x = q := by",
  "new": ": \u2200 a b : \u211d, a < b \u2192 \u2203 f : C(Set.Icc a b, \u211d), \u2200 x : Set.Icc a b, f x = (x : \u211d):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem continuous_map_of_Icc : \u2200 a b : \u211d, a < b \u2192  \u2203 f : C(Set.Icc a b, \u211d), \u2200 x : Set.Icc a b, f x = (x : \u211d):= by\n  intro a b hab\n  refine' \u27e8\u27e8fun x => x, _\u27e9, _\u27e9\n  \u00b7 exact continuous_subtype_val\n  intro x\n  rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem continuous_map_of_Icc : \u2200 a b : \u211d, a < b \u2192  \u2203 f : C(Set.Icc a b, \u211d), \u2200 x : Set.Icc a b, f x = (x : \u211d):= by\n  intro a b hab\n  use \u27e8fun x \u21a6 x, continuous_induced_dom\u27e9\n  intro x\n  rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem continuous_map_of_Icc : \u2200 a b : \u211d, a < b \u2192  \u2203 f : C(Set.Icc a b, \u211d), \u2200 x : Set.Icc a b, f x = (x : \u211d):= by\n  intro a b hab\n  use \u27e8fun x \u21a6 (x : \u211d), by continuity\u27e9\n  intro x\n  rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem continuous_map_of_Icc : \u2200 a b : \u211d, a < b \u2192  \u2203 f : C(Set.Icc a b, \u211d), \u2200 x : Set.Icc a b, f x = (x : \u211d):= by\n  intro a b h\n  refine' \u27e8\u27e8fun x \u21a6 (x : \u211d), _\u27e9, _\u27e9\n  \u00b7 exact continuous_subtype_val\n  \u00b7 intro x\n    rfl"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : 7 * (a * b + b * c + c * a) ^ 2 \u2265 18 * a * b * c + 27 * (a ^ 3 * b ^ 3 + b ^ 3 * c ^ 3 + c ^ 3 * a ^ 3) := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : 4 * (a * b + b * c + c * a) ^ 2 \u2265 4 * a * b * c * (a + b + c) + 27 * a ^ 2 * b ^ 2 * c ^ 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) :  4 * (a * b + b * c + c * a) ^ 2 \u2265 4 * a * b * c * (a + b + c) + 27 * a ^ 2 * b ^ 2 * c ^ 2:= by\n  have h\u2080 : 0 < a * b := by positivity\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * a := by positivity\n  have h\u2083 : 0 < a * b * c := by positivity\n  have h\u2084 : 0 < a * b * c * (a + b + c) := by positivity\n  have h\u2085 : 0 < a * b * c * (a * b + b * c + c * a) := by positivity\n  nlinarith [sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b),\n    mul_self_nonneg (a * b + b * c + c * a - 3 * a * b * c)]\n  <;> linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) :  4 * (a * b + b * c + c * a) ^ 2 \u2265 4 * a * b * c * (a + b + c) + 27 * a ^ 2 * b ^ 2 * c ^ 2:= by\n  have : (a + b + c) ^ 2 = 1 := by simp [habc]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_nonneg ha.le hb.le,\n    mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le, mul_nonneg (sq_nonneg a) (sq_nonneg b),\n    mul_nonneg (sq_nonneg b) (sq_nonneg c), mul_nonneg (sq_nonneg c) (sq_nonneg a)]\n  <;> simp [mul_assoc]\n  <;> ring_nf\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith"
  ]
 },
 {
  "old": "{A B C : \u211d} (hA : 0 < A \u2227 A <= \u03c0) (hB : 0 < B \u2227 B <= \u03c0) (hC : 0 < C \u2227 C <= \u03c0) (hABC : A + B + C = \u03c0) : sin A * sin B * sin C \u2264 ((sin A + sin B + sin C) / 3)^3 := by",
  "new": "{x y z : \u211d} (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 1) : Real.sqrt (x / 3) + Real.sqrt (y / 3) + Real.sqrt (z / 3) \u2264 1 + 1 / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {x y z : \u211d} (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 1) :\n     Real.sqrt (x / 3) + Real.sqrt (y / 3) + Real.sqrt (z / 3) \u2264 1 + 1 / 2:= by\n  nlinarith [sq_sqrt (show 0 \u2264 x / 3 by positivity), sq_sqrt (show 0 \u2264 y / 3 by positivity),\n    sq_sqrt (show 0 \u2264 z / 3 by positivity),\n    mul_self_nonneg (Real.sqrt (x / 3) - Real.sqrt (y / 3)),\n    mul_self_nonneg (Real.sqrt (y / 3) - Real.sqrt (z / 3)),\n    mul_self_nonneg (Real.sqrt (z / 3) - Real.sqrt (x / 3))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {x y z : \u211d} (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 1) :\n     Real.sqrt (x / 3) + Real.sqrt (y / 3) + Real.sqrt (z / 3) \u2264 1 + 1 / 2:= by\n  have h\u2080 := sq_nonneg (Real.sqrt (x / 3) - Real.sqrt (y / 3))\n  have h\u2081 := sq_nonneg (Real.sqrt (x / 3) - Real.sqrt (z / 3))\n  have h\u2082 := sq_nonneg (Real.sqrt (y / 3) - Real.sqrt (z / 3))\n  nlinarith [Real.sq_sqrt (show (0 : \u211d) \u2264 x / 3 by positivity),\n    Real.sq_sqrt (show (0 : \u211d) \u2264 y / 3 by positivity),\n    Real.sq_sqrt (show (0 : \u211d) \u2264 z / 3 by positivity),\n    Real.sq_sqrt (show (0 : \u211d) \u2264 (x + y + z) / 3 by positivity)]"
  ]
 },
 {
  "old": "(x : \u211d) : (cos x * cos (x / 2) * cos (x / 4) * cos (x / 8)) = (sin 2 * x) / (16 * sin (x / 8)) := by",
  "new": ": \u2200 x : \u211d, (cos x * cos (x / 2) * cos (x / 4) * cos (x / 8)) \u2265 -1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_8162 : \u2200 x : \u211d, (cos x * cos (x / 2) * cos (x / 4) * cos (x / 8)) \u2265 -1:= by\n  intro x\n  have h\u2080 := cos_sq_add_sin_sq x\n  have h\u2081 := cos_sq_add_sin_sq (x / 2)\n  have h\u2082 := cos_sq_add_sin_sq (x / 4)\n  have h\u2083 := cos_sq_add_sin_sq (x / 8)\n  nlinarith [sq_nonneg (cos x * cos (x / 2) * cos (x / 4) * cos (x / 8)),\n    sq_nonneg (cos x * cos (x / 2) * cos (x / 4)),\n    sq_nonneg (cos x * cos (x / 2)),\n    sq_nonneg (cos x),\n    sq_nonneg (cos (x / 2)),\n    sq_nonneg (cos (x / 4)),\n    sq_nonneg (cos (x / 8))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_8162 : \u2200 x : \u211d, (cos x * cos (x / 2) * cos (x / 4) * cos (x / 8)) \u2265 -1:= by\n  intro x\n  have h1 := cos_sq_add_sin_sq x\n  have h2 := cos_sq_add_sin_sq (x / 2)\n  have h3 := cos_sq_add_sin_sq (x / 4)\n  have h4 := cos_sq_add_sin_sq (x / 8)\n  nlinarith [sq_nonneg (cos x * cos (x / 2) * cos (x / 4)),\n    sq_nonneg (cos x * cos (x / 2) * cos (x / 4) * cos (x / 8)),\n    sq_nonneg (cos x * cos (x / 2)),\n    sq_nonneg (cos x * cos (x / 2) * cos (x / 4)),\n    sq_nonneg (cos x * cos (x / 2) * cos (x / 4) * cos (x / 8) + sin (x / 8)),\n    sq_nonneg (cos x * cos (x / 2) * cos (x / 4) * cos (x / 8) - sin (x / 8))]"
  ]
 },
 {
  "old": "(n : \u2115) (hn : 2 \u2264 n) : \u2203 f : \u211d \u2192 \u211d, (\u2200 x, \u2211 k in Finset.Icc 1 n, f (k * x) = 0) \u2227 (\u2200 x, f x = 0 \u2194 x = 0) := by",
  "new": "(hA : Finset \u2115) (hp : 0 < p) (hA' : \u2200 q \u2208 hA, p \u2223 q) : (\u2200 q \u2208 hA, q = 0 \u2228 Nat.Coprime q p) \u2228 \u2203 q \u2208 hA, q \u2260 0 \u2227 \u00ac Nat.Coprime q p:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_dvd (hA : Finset \u2115) (hp : 0 < p) (hA' : \u2200 q \u2208 hA, p \u2223 q) : \n   (\u2200 q \u2208 hA, q = 0 \u2228 Nat.Coprime q p) \u2228 \u2203 q \u2208 hA, q \u2260 0 \u2227 \u00ac Nat.Coprime q p:= by\n  by_contra! h\n  aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_dvd (hA : Finset \u2115) (hp : 0 < p) (hA' : \u2200 q \u2208 hA, p \u2223 q) : \n   (\u2200 q \u2208 hA, q = 0 \u2228 Nat.Coprime q p) \u2228 \u2203 q \u2208 hA, q \u2260 0 \u2227 \u00ac Nat.Coprime q p:= by\n  by_contra h\n  push_neg at h\n  aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_dvd (hA : Finset \u2115) (hp : 0 < p) (hA' : \u2200 q \u2208 hA, p \u2223 q) : \n   (\u2200 q \u2208 hA, q = 0 \u2228 Nat.Coprime q p) \u2228 \u2203 q \u2208 hA, q \u2260 0 \u2227 \u00ac Nat.Coprime q p:= by\n  by_cases h : \u2200 q \u2208 hA, q = 0 \u2228 Nat.Coprime q p <;> simp_all\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_dvd (hA : Finset \u2115) (hp : 0 < p) (hA' : \u2200 q \u2208 hA, p \u2223 q) : \n   (\u2200 q \u2208 hA, q = 0 \u2228 Nat.Coprime q p) \u2228 \u2203 q \u2208 hA, q \u2260 0 \u2227 \u00ac Nat.Coprime q p:= by\n  by_cases h : \u2200 q \u2208 hA, q = 0 \u2228 Nat.Coprime q p\n  exact Or.inl h\n  push_neg at h\n  exact Or.inr (h)"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a * b / ((a + b) ^ 2 + b * c) + b * c / ((b + c) ^ 2 + c * a) + c * a / ((c + a) ^ 2 + a * b)) \u2264 3 / 5 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : x ^ 2 / (x * y) + y ^ 2 / (y * z) + z ^ 2 / (z * x) \u2265 3 / 2 - 2 / (x * y * z) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   x ^ 2 / (x * y) + y ^ 2 / (y * z) + z ^ 2 / (z * x) \u2265 3 / 2 - 2 / (x * y * z)  := by\n  have h1 : 0 < x * y := mul_pos hx hy\n  have h2 : 0 < y * z := mul_pos hy hz\n  have h3 : 0 < z * x := mul_pos hz hx\n  have h4 : 0 < x * y * z := by positivity\n  have h5 : 0 < x * y * z * (x * y * z) := by positivity\n  have h6 : (x ^ 2 / (x * y) + y ^ 2 / (y * z) + z ^ 2 / (z * x)) \u2265 3 / 2 := by\n    have h6' : x ^ 2 / (x * y) + y ^ 2 / (y * z) + z ^ 2 / (z * x) = x / y + y / z + z / x := by\n      field_simp\n      <;> ring\n    rw [h6']\n    have h6'' : x / y + y / z + z / x \u2265 3 / 2 := by\n      have h6''' : 0 < y * z * x := by positivity\n      field_simp [h1, h2, h3, h4]\n      rw [div_le_div_iff (by positivity) (by positivity)]\n      nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n    linarith\n  have h7 : 0 \u2264 2 / (x * y * z) := by positivity\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   x ^ 2 / (x * y) + y ^ 2 / (y * z) + z ^ 2 / (z * x) \u2265 3 / 2 - 2 / (x * y * z)  := by\n  have hxy : 0 < x * y := by positivity\n  have hyz : 0 < y * z := by positivity\n  have hxz : 0 < z * x := by positivity\n  have h : (x ^ 2 / (x * y) + y ^ 2 / (y * z) + z ^ 2 / (z * x)) \u2265 3 / 2 - 2 / (x * y * z) := by\n    have h1 : x ^ 2 / (x * y) + y ^ 2 / (y * z) + z ^ 2 / (z * x) \u2265 3 / 2 := by\n      have h2 : x ^ 2 / (x * y) + y ^ 2 / (y * z) + z ^ 2 / (z * x) =\n        x / y + y / z + z / x := by field_simp [hxy.ne', hyz.ne', hxz.ne']; ring\n      rw [h2]\n      have h3 : x / y + y / z + z / x \u2265 3 / 2 := by\n        have h4 : 0 < x * y * z := by positivity\n        field_simp [hxy.ne', hyz.ne', hxz.ne', h4]\n        rw [div_le_div_iff (by positivity) (by positivity)]\n        nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n          mul_self_nonneg (x * y - y * z), mul_self_nonneg (y * z - z * x),\n          mul_self_nonneg (z * x - x * y)]\n      linarith\n    have h4 : 2 / (x * y * z) \u2265 0 := by positivity\n    linarith\n  linarith"
  ]
 },
 {
  "old": "(p : \u2115) (hp : 3 < p) (hpp : Nat.Prime p) : \u00acNat.Prime (p^2 + 2^p) := by",
  "new": "(p : \u2115) (hp : 3 < p) (hpp : Nat.Prime p) : \u00ac(Nat.Prime (p^2 + 2^p) \u2227 (\u2211 k in (Finset.range (p+1)), k = p + 1 )) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem prime_and_power_sum_condition (p : \u2115) (hp : 3 < p) (hpp : Nat.Prime p) : \u00ac(Nat.Prime (p^2 + 2^p) \u2227  (\u2211 k in (Finset.range (p+1)), k = p + 1 )) := by\n  rcases p with (_ | _ | _ | p) <;> simp_all [Finset.sum_range_succ, Nat.Prime] <;>\n  ring_nf\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem prime_and_power_sum_condition (p : \u2115) (hp : 3 < p) (hpp : Nat.Prime p) : \u00ac(Nat.Prime (p^2 + 2^p) \u2227  (\u2211 k in (Finset.range (p+1)), k = p + 1 )) := by\n  rcases p with (_ | _ | _ | p) <;>\n  simp_all [Finset.sum_range_id, Nat.prime_def_lt, Nat.Prime]\n  all_goals\n    norm_num\n    ring_nf\n    omega"
  ]
 },
 {
  "old": "(n : \u2115) (hn : 2 \u2264 n) (a : Fin n \u2192 NNReal) (ha : \u2211 i, a i = n) : (n - 1) * (\u220f i, (a i))^(1 / n) + (\u2211 i, (a i))^(1 / 2) \u2264 n := by",
  "new": "{n : \u2115} (h\u2081 : 2 \u2264 n) (a : Fin n \u2192 NNReal) (ha : \u2211 i, a i = n) : \u220f i : Fin n, (1 - a i) \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {n : \u2115} (h\u2081 : 2 \u2264 n) (a : Fin n \u2192 NNReal) (ha : \u2211 i, a i = n) : \u220f i : Fin n, (1 - a i) \u2264 1:= by\n  have : \u220f i : Fin n, (1 - a i) \u2264 1 := by\n    apply Finset.prod_le_one\n    \u00b7 intro i _\n      simp\n    \u00b7 intro i _\n      exact tsub_le_self\n  simpa using this",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {n : \u2115} (h\u2081 : 2 \u2264 n) (a : Fin n \u2192 NNReal) (ha : \u2211 i, a i = n) : \u220f i : Fin n, (1 - a i) \u2264 1:= by\n  have : \u220f i : Fin n, (1 - a i) \u2264 1 := by\n    apply Finset.prod_le_one\n    \u00b7 intro i hi\n      simp [ha, Finset.single_le_sum]\n    \u00b7 intro i hi\n      have : a i \u2264 n := by\n        calc\n          a i \u2264 \u2211 j, a j := by exact Finset.single_le_sum (fun j hj => by simp [ha]) hi\n          _ = n := by simp [ha]\n      simp [this]\n  exact this",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {n : \u2115} (h\u2081 : 2 \u2264 n) (a : Fin n \u2192 NNReal) (ha : \u2211 i, a i = n) : \u220f i : Fin n, (1 - a i) \u2264 1:= by\n  have : \u220f i : Fin n, (1 - a i) \u2264 \u220f i : Fin n, 1 := by\n    apply Finset.prod_le_prod\n    \u00b7 intro i _\n      simp [ha, h\u2081]\n    \u00b7 intro i _\n      simp_all [ha, h\u2081]\n  simpa using this"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) (hab : a * b * c * d = 1) (h : a^2 + b^2 + c^2 + d^2 \u2264 3) : 1 / a + 1 / b + 1 / c + 1 / d \u2264 3 + 1 / (a * b * c * d) := by",
  "new": ": \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192 a * b * c * d = 1 \u2192 a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2 \u2264 3 \u2192 1 / a + 1 / b + 1 / c + 1 / d \u2264 3 + 1 / (a * b * c * d):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192\n   a * b * c * d = 1 \u2192 a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2 \u2264 3 \u2192 1 / a + 1 / b + 1 / c + 1 / d \u2264 3 + 1 / (a * b * c * d):= by\n  intro a b c d ha hb hc hd habc habd\n  field_simp [habc]\n  nlinarith [mul_self_nonneg (a - 1), mul_self_nonneg (b - 1), mul_self_nonneg (c - 1),\n    mul_self_nonneg (d - 1), mul_self_nonneg (a + b + c + d - 1)]\n  <;> assumption\n  <;> norm_num\n  <;> linarith\n  <;> assumption\n  <;> norm_num\n  <;> linarith\n  <;> assumption\n  <;> norm_num\n  <;> linarith\n  <;> assumption\n  <;> norm_num\n  <;> linarith\n  <;> assumption\n  <;> norm_num\n  <;> linarith\n  <;> assumption\n  <;> norm_num\n  <;> linarith\n  <;> assumption\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192\n   a * b * c * d = 1 \u2192 a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2 \u2264 3 \u2192 1 / a + 1 / b + 1 / c + 1 / d \u2264 3 + 1 / (a * b * c * d):= by\n  intro a b c d ha hb hc hd habcd habcd'\n  field_simp [habcd]\n  nlinarith [mul_self_nonneg (a - 1), mul_self_nonneg (b - 1), mul_self_nonneg (c - 1), mul_self_nonneg (d - 1),\n    mul_self_nonneg (a + b + c + d - 1)]"
  ]
 },
 {
  "old": "(p : \u2115) (hp : p.Prime) (k : \u2115) (hk : p = 4 * k + 1) : (\u2203 x : \u2115, x ^ 2 \u2261 k [ZMOD p]) := by",
  "new": "(p q : \u2115) (hp : p.Prime) (hq : q.Prime) (h1 : \u00ac p \u2223 q) (h2 : \u00ac q \u2223 p) (h3 : p \u2223 q + 1) : Nat.Coprime p q := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_of_prime_dvd_not_dvd' (p q : \u2115) (hp : p.Prime) (hq : q.Prime)\n     (h1 : \u00ac p \u2223 q) (h2 : \u00ac q \u2223 p) (h3 : p \u2223 q + 1) : Nat.Coprime p q := by\n  rw [Nat.coprime_iff_gcd_eq_one]\n  apply Eq.symm\n  apply Eq.symm\n  apply Eq.symm\n  rw [Nat.gcd_comm]\n  apply Eq.symm\n  apply Eq.symm\n  apply Eq.symm\n  rw [Nat.gcd_comm]\n  simp_all [Nat.Prime.coprime_iff_not_dvd, Nat.Prime.coprime_iff_not_dvd]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a * b + b * c + c * a \u2260 0) : (a * b + b * c + c * a) * (1 / (a + b) ^ 2 + 1 / (b + c) ^ 2 + 1 / (c + a) ^ 2) \u2265 9 / 4 := by",
  "new": "(x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (hab : 0 < x + y + z) : (x ^ 2 + y ^ 2 + z ^ 2) ^ 2 \u2265 9 * x ^ 2 * y ^ 2 * z ^ 2 / (x + y + z) ^ 2 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (hab : 0 < x + y + z) : (x ^ 2 + y ^ 2 + z ^ 2) ^ 2 \u2265 9 * x ^ 2 * y ^ 2 * z ^ 2 / (x + y + z) ^ 2 := by\n  have h\u2080 : 0 \u2264 x * y := by positivity\n  have h\u2081 : 0 \u2264 y * z := by positivity\n  have h\u2082 : 0 \u2264 x * z := by positivity\n  have h\u2083 : 0 < x + y + z := by assumption\n  have h\u2084 : 0 < (x + y + z) ^ 2 := by positivity\n  field_simp [h\u2083, h\u2084]\n  rw [div_le_iff (by positivity)]\n  nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (y ^ 2 - z ^ 2), sq_nonneg (x ^ 2 - z ^ 2),\n    sq_nonneg (x * y - y * z), sq_nonneg (y * z - x * z), sq_nonneg (x * z - x * y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (hab : 0 < x + y + z) : (x ^ 2 + y ^ 2 + z ^ 2) ^ 2 \u2265 9 * x ^ 2 * y ^ 2 * z ^ 2 / (x + y + z) ^ 2 := by\n  have h\u2080 : 0 < x + y + z := hab\n  have h\u2081 : 0 \u2264 x ^ 2 + y ^ 2 + z ^ 2 := by nlinarith\n  have h\u2082 : 0 \u2264 x * y := by nlinarith\n  have h\u2083 : 0 \u2264 x * z := by nlinarith\n  have h\u2084 : 0 \u2264 y * z := by nlinarith\n  have h\u2085 : 0 \u2264 (x * y) * (x * z) := by nlinarith\n  have h\u2086 : 0 \u2264 (y * z) * (x * y) := by nlinarith\n  have h\u2087 : 0 \u2264 (x * z) * (y * z) := by nlinarith\n  field_simp [h\u2080]\n  rw [div_le_iff (by positivity)]\n  nlinarith [sq_nonneg (x ^ 2 - y ^ 2), sq_nonneg (y ^ 2 - z ^ 2), sq_nonneg (x ^ 2 - z ^ 2),\n    sq_nonneg (x * y + y * z + x * z), sq_nonneg (x * y - y * z), sq_nonneg (y * z - x * z),\n    sq_nonneg (x * z - x * y)]"
  ]
 },
 {
  "old": "(n : \u2115) (a : \u2115 \u2192 \u211d) (hn : 2 \u2264 n) (apos : \u2200 i, 0 < a i) : (\u220f i in Finset.range n, (a i + a (i + 1) + a (i + 2)))^2 / (2^n * \u220f i in Finset.range n, (a i + a (i + 1)))^2 \u2265 1 := by",
  "new": ": \u220f x in Finset.range n, (x ^ 2 + 1) \u2265 2 ^ (n - 1):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u220f x in Finset.range n, (x ^ 2 + 1) \u2265 2 ^ (n - 1):= by\n  cases n with\n  | zero => simp\n  | succ n =>\n    cases n with\n    | zero => simp\n    | succ n =>\n      induction' n with n ih\n      all_goals simp_all [Finset.prod_range_succ, pow_succ]\n      all_goals\n        nlinarith [pow_pos (by norm_num : 0 < 2) n]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u220f x in Finset.range n, (x ^ 2 + 1) \u2265 2 ^ (n - 1):= by\n  induction' n with n ih\n  simp\n  cases n with\n  | zero => simp\n  | succ n =>\n    simp_all [Finset.prod_range_succ, Nat.pow_succ, Nat.pow_succ, Nat.mul_comm, Nat.mul_assoc,\n      Nat.mul_left_comm]\n    nlinarith [pow_pos (by norm_num : (0 : \u2115) < 2) n]\n  <;> rfl\n  <;> rfl\n  <;> rfl"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : a \u2260 0 \u2228 b \u2260 0) (hbc : b \u2260 0 \u2228 c \u2260 0) (hca : c \u2260 0 \u2228 a \u2260 0) : (a / (2 * a ^ 2 + b * c) + b / (2 * b ^ 2 + c * a) + c / (2 * c ^ 2 + a * b) \u2265 (a + b + c) / (a ^ 2 + b ^ 2 + c ^ 2)) := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a / b + b / c + c / a \u2265 (a + b + c) / (b + c + a):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :  a / b + b / c + c / a \u2265 (a + b + c) / (b + c + a):= by\n  rw [add_comm a b]\n  have : 0 < b + c + a := by linarith\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * a := by positivity\n  have h\u2083 : 0 < a * b := by positivity\n  have h\u2084 : 0 < a * b * c := by positivity\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084]\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (a * c - b * b), sq_nonneg (b * a - c * b), sq_nonneg (c * b - a * c),\n    sq_nonneg (b * c - a * a), sq_nonneg (a * b - c * c), sq_nonneg (c * a - b * a)]\n  positivity\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :  a / b + b / c + c / a \u2265 (a + b + c) / (b + c + a):= by\n  field_simp [add_assoc]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le]\n  <;> norm_num\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :  a / b + b / c + c / a \u2265 (a + b + c) / (b + c + a):= by\n  have h\u2081 : 0 < b + c := add_pos hb hc\n  have h\u2082 : 0 < c + a := add_pos hc ha\n  have h\u2083 : 0 < b + a := add_pos hb ha\n  have h\u2084 : 0 < b * c := mul_pos hb hc\n  have h\u2085 : 0 < c * a := mul_pos hc ha\n  have h\u2086 : 0 < b * a := mul_pos hb ha\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [mul_self_nonneg (a - b), mul_self_nonneg (b - c), mul_self_nonneg (c - a)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :  a / b + b / c + c / a \u2265 (a + b + c) / (b + c + a):= by\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_pos ha hb, mul_pos hb hc, mul_pos hc ha]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : Real.logb a ((b + c) / 2) \u2265 (Real.logb a b + Real.logb a c) / 2 := by",
  "new": "(x : \u211d) (n : \u2115) (hx : 0 < x) : Real.log (x / (\u2211 k in Finset.range n, (1 : \u211d) + x)) \u2264 1 + (1 : \u211d) / n:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_div_sum_exp (x : \u211d) (n : \u2115) (hx : 0 < x) :\n      Real.log (x / (\u2211 k in Finset.range n, (1 : \u211d) + x)) \u2264 1 + (1 : \u211d) / n:= by\n  simpa using\n    Real.log_le_sub_one_of_pos (div_pos hx (by positivity)) |>.trans\n      (by\n        rw [div_eq_mul_inv]\n        norm_num\n        ring_nf\n        apply le_of_sub_nonneg\n        field_simp\n        ring_nf\n        positivity\n        <;> norm_num)",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem log_div_sum_exp (x : \u211d) (n : \u2115) (hx : 0 < x) :\n      Real.log (x / (\u2211 k in Finset.range n, (1 : \u211d) + x)) \u2264 1 + (1 : \u211d) / n:= by\n  rw [div_eq_mul_inv]\n  refine Real.log_le_sub_one_of_pos ?_ |>.trans ?_\n  positivity\n  simp [Finset.sum_const, Finset.card_range]\n  ring_nf\n  norm_cast\n  apply le_of_sub_nonneg\n  field_simp\n  ring_nf\n  positivity"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (hd : d > 0) (hab : a * b * c * d = 1) (h : a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2 \u2264 4) : 1 / a + 1 / b + 1 / c + 1 / d \u2264 2 + 2 / (a * b * c * d) := by",
  "new": ": \u2200 a b c d : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 d > 0 \u2227 a * b * c * d = 1 \u2227 a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2 \u2264 4 \u2192 1 / a + 1 / b + 1 / c + 1 / d \u2264 2 + 2 / (a * b * c * d) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 d > 0 \u2227 a * b * c * d = 1 \u2227 a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2 \u2264 4 \u2192 1 / a + 1 / b + 1 / c + 1 / d \u2264 2 + 2 / (a * b * c * d)\n  := by\n  rintro a b c d \u27e8ha, hb, hc, hd, hx, hy\u27e9\n  field_simp [hx]\n  nlinarith [sq_nonneg (a - 1), sq_nonneg (b - 1), sq_nonneg (c - 1), sq_nonneg (d - 1),\n    sq_nonneg (a + b + c + d), sq_nonneg (a + b + c + d - 4)]\n  <;> assumption\n  <;> norm_num"
  ]
 },
 {
  "old": "(n : \u2115) (p : \u2115 \u2192 \u2115) (hp : \u2200 i, Nat.Prime (p i)) (hpi : \u2200 i j, i \u2260 j \u2192 p i \u2260 p j) (hprod : \u220f i in Finset.range n, (1 - 1 / p i) = 2 / 3) : n = 1 \u2227 p 0 = 3 := by",
  "new": "{n : \u2115} {p : \u2115 \u2192 \u2115} (hp : \u2200 i, Nat.Prime (p i)) (hprod : \u220f i in Finset.range n, p i = 1) : (\u2200 i \u2208 Finset.range n, Nat.Coprime (p i) (\u220f j in Finset.range n, p j)) \u2228 (\u2203 i \u2208 Finset.range n, p i = \u220f j in Finset.range n, p j):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_prime_prod_eq_one {n : \u2115} {p : \u2115 \u2192 \u2115} (hp : \u2200 i, Nat.Prime (p i)) \n (hprod : \u220f i in Finset.range n, p i = 1) :\n  (\u2200 i \u2208 Finset.range n, Nat.Coprime (p i) (\u220f j in Finset.range n, p j)) \u2228 \n  (\u2203 i \u2208 Finset.range n, p i = \u220f j in Finset.range n, p j):= by\n  rw [hprod]\n  left\n  intro i hi\n  simp_all [Nat.coprime_one_left]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_prime_prod_eq_one {n : \u2115} {p : \u2115 \u2192 \u2115} (hp : \u2200 i, Nat.Prime (p i)) \n (hprod : \u220f i in Finset.range n, p i = 1) :\n  (\u2200 i \u2208 Finset.range n, Nat.Coprime (p i) (\u220f j in Finset.range n, p j)) \u2228 \n  (\u2203 i \u2208 Finset.range n, p i = \u220f j in Finset.range n, p j):= by\n  by_cases h : \u2203 i \u2208 Finset.range n, p i = \u220f j in Finset.range n, p j\n  exact Or.inr h\n  simp_all [Finset.prod_eq_zero_iff, Nat.Prime.ne_zero, not_exists, not_and]\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_prime_prod_eq_one {n : \u2115} {p : \u2115 \u2192 \u2115} (hp : \u2200 i, Nat.Prime (p i)) \n (hprod : \u220f i in Finset.range n, p i = 1) :\n  (\u2200 i \u2208 Finset.range n, Nat.Coprime (p i) (\u220f j in Finset.range n, p j)) \u2228 \n  (\u2203 i \u2208 Finset.range n, p i = \u220f j in Finset.range n, p j):= by\n  rw [hprod]\n  simp [hp, Nat.Prime.ne_one]\n  <;> aesop\n  <;> aesop"
  ]
 },
 {
  "old": "(p x y : \u2124) : p \u2223 x^2 + x*y + y^2 \u2192 p \u2223 (2*x + y)^2 + 3*y^2 := by",
  "new": "(p : \u2115) (m : \u2115) (h\u2081 : Nat.Prime p) (h\u2082 : \u00acp \u2223 m) : Nat.Coprime p m \u2228 p \u2223 m:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (m : \u2115) (h\u2081 : Nat.Prime p) (h\u2082 : \u00acp \u2223 m) :\n    Nat.Coprime p m \u2228 p \u2223 m:= by\n  by_cases h : p \u2223 m <;> simp [h, Nat.Prime.coprime_iff_not_dvd h\u2081, h\u2082]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (m : \u2115) (h\u2081 : Nat.Prime p) (h\u2082 : \u00acp \u2223 m) :\n    Nat.Coprime p m \u2228 p \u2223 m:= by\n  rw [or_iff_not_imp_right]\n  intro h\u2083\n  exact h\u2081.coprime_iff_not_dvd.mpr h\u2083",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (m : \u2115) (h\u2081 : Nat.Prime p) (h\u2082 : \u00acp \u2223 m) :\n    Nat.Coprime p m \u2228 p \u2223 m:= by\n  by_cases hm : m = 0\n  all_goals simp [Nat.coprime_iff_gcd_eq_one, hm, h\u2081.coprime_iff_not_dvd.2 h\u2082]\n  all_goals omega\n  <;> try assumption\n  <;> omega\n  <;> assumption\n  <;> omega\n  <;> assumption\n  <;> omega\n  <;> assumption\n  <;> omega\n  <;> assumption\n  <;> omega\n  <;> assumption\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (m : \u2115) (h\u2081 : Nat.Prime p) (h\u2082 : \u00acp \u2223 m) :\n    Nat.Coprime p m \u2228 p \u2223 m:= by\n  simp [Nat.coprime_iff_gcd_eq_one, h\u2081.coprime_iff_not_dvd.2 h\u2082]"
  ]
 },
 {
  "old": "(x y : \u211d) : (tan x)^4 + (tan y)^4 + 2 / ((tan x)^2 * (tan y)^2) = 3 + (tan x + tan y)^2 / ((tan x)^2 + 1) / ((tan y)^2 + 1) := by",
  "new": ": \u2200 a b : \u211d, (a + b) ^ 2 / (1 + a ^ 2) / (1 + b ^ 2) \u2264 4 * (a ^ 2 + b ^ 2) / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_2023 : \u2200 a b : \u211d, (a + b) ^ 2 / (1 + a ^ 2) / (1 + b ^ 2) \u2264 4 * (a ^ 2 + b ^ 2) / 2:= by\n  rintro a b\n  field_simp [add_assoc]\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a * b), sq_nonneg (a - 1), sq_nonneg (b - 1)]\n  positivity\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_2023 : \u2200 a b : \u211d, (a + b) ^ 2 / (1 + a ^ 2) / (1 + b ^ 2) \u2264 4 * (a ^ 2 + b ^ 2) / 2:= by\n  intro a b\n  field_simp [add_assoc]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a + b), sq_nonneg (a ^ 2 - b ^ 2),\n    sq_nonneg (a ^ 2 + b ^ 2), sq_nonneg (a ^ 2 * b), sq_nonneg (a * b ^ 2),\n    sq_nonneg (a ^ 2 + b ^ 2 - 2 * a * b), sq_nonneg (a ^ 2 + b ^ 2 + 2 * a * b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_2023 : \u2200 a b : \u211d, (a + b) ^ 2 / (1 + a ^ 2) / (1 + b ^ 2) \u2264 4 * (a ^ 2 + b ^ 2) / 2:= by\n  intro a b\n  field_simp [add_mul, add_comm, add_left_comm]\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a + b), mul_self_nonneg (a * b)]\n  positivity\n  positivity"
  ]
 },
 {
  "old": "{x y : \u2124} (h : x ^ 2 \u2261 y ^ 2 [ZMOD 3]) : 3 \u2223 x + y \u2228 3 \u2223 x - y := by",
  "new": "(x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y):= by\n  by_cases h : Nat.Coprime x y\n  <;> simp [h]\n  <;> omega\n  <;> rfl\n  <;> omega\n  <;> rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y):= by\n  cases Nat.eq_zero_or_pos x <;> cases Nat.eq_zero_or_pos y <;> simp [Nat.coprime_iff_gcd_eq_one, *]\n  <;> tauto\n  <;> simp_all\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y):= by\n  by_cases h : Nat.Coprime x y <;> simp [h]\n  <;>\n  omega\n  <;>\n  omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (Nat.Coprime x y) \u2228 \u00ac(Nat.Coprime x y):= by\n  by_cases h : Nat.Coprime x y <;> tauto\n  <;> rfl"
  ]
 },
 {
  "old": "(a b : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hab : a + b = 2) : a^a * b^b + a * b \u2265 2 \u2227 a^a * b^b + 3 * a * b \u2264 4 \u2227 a^b * b^a + 2 \u2265 3 * a * b := by",
  "new": "(x : \u211d) (hx : x \u2265 0) : Real.sqrt (x^3) \u2265 x - 1 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_20 (x : \u211d) (hx : x \u2265 0) : Real.sqrt (x^3) \u2265 x - 1 := by\n  have h\u2080 : 0 \u2264 x^3 := by positivity\n  have h\u2081 : x^3 \u2265 0 := by positivity\n  have h\u2082 : Real.sqrt (x^3) \u2265 0 := Real.sqrt_nonneg (x^3)\n  have h\u2083 : Real.sqrt (x^3) \u2265 x - 1 := by\n    nlinarith [sq_sqrt (show (0 : \u211d) \u2264 x^3 from h\u2081), sq_nonneg (x - 1)]\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_20 (x : \u211d) (hx : x \u2265 0) : Real.sqrt (x^3) \u2265 x - 1 := by\n  have h : 0 \u2264 Real.sqrt (x ^ 3) := Real.sqrt_nonneg (x ^ 3)\n  have h1 : Real.sqrt (x ^ 3) \u2265 x - 1 := by\n    apply le_of_sub_nonneg\n    nlinarith [sq_sqrt (show (x ^ 3 : \u211d) \u2265 0 from by positivity),\n      mul_self_nonneg (x - 1),\n      mul_self_nonneg (x - 1),\n      mul_self_nonneg (x ^ 2 - x)]\n  linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_20 (x : \u211d) (hx : x \u2265 0) : Real.sqrt (x^3) \u2265 x - 1 := by\n  have h : 0 \u2264 Real.sqrt (x^3) := Real.sqrt_nonneg _\n  apply le_of_sub_nonneg\n  nlinarith [sq_sqrt (show 0 \u2264 x^3 from by positivity), sq_nonneg (x - 1)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_210_20 (x : \u211d) (hx : x \u2265 0) : Real.sqrt (x^3) \u2265 x - 1 := by\n  have h : 0 \u2264 Real.sqrt (x^3) := Real.sqrt_nonneg _\n  have h1 : Real.sqrt (x^3) ^ 2 = x ^ 3 := Real.sq_sqrt (by positivity)\n  have h2 : (x - 1) ^ 2 = x ^ 2 - 2 * x + 1 := by ring\n  nlinarith [sq_nonneg (x - 1), sq_nonneg (x - 1 - x ^ 2)]"
  ]
 },
 {
  "old": "(p : \u2115) (hp : p.Prime) (hp1 : p > 2) (k : \u2115) : p \u2223 (\u2211 i in Finset.Icc 1 k, i) \u2227 p \u2223 (\u2211 i in Finset.Icc 1 k, i ^ p) - (\u2211 i in Finset.Icc 1 k, i) := by",
  "new": "(p : \u2115) (hp : p.Prime) (a : \u2115) : Nat.Coprime p a \u2228 p \u2223 a := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (hp : p.Prime) (a : \u2115) : Nat.Coprime p a \u2228 p \u2223 a := by\n  apply or_iff_not_imp_right.2\n  intro h\n  exact hp.coprime_iff_not_dvd.2 h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (hp : p.Prime) (a : \u2115) : Nat.Coprime p a \u2228 p \u2223 a := by\n  refine' or_iff_not_imp_right.2 fun h => _\n  simpa [hp.coprime_iff_not_dvd, h] using h\n  <;> assumption\n  <;> assumption\n  <;> assumption"
  ]
 },
 {
  "old": "b c d : \u211d) : (a^2 + b^2) * (1 / a^2 + 1 / b^2) + 12 \u2265 4 * (a + b) * (1 / a + 1 / b) \u2194 (a / b + b / a - 2)^2 \u2265 0 := by",
  "new": "(x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x * y = 1) : Real.sqrt (x^2 + 1) * Real.sqrt (y^2 + 1) \u2265 2 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x * y = 1) :\n     Real.sqrt (x^2 + 1) * Real.sqrt (y^2 + 1) \u2265 2 := by\n  have h : 0 < x * y := by nlinarith\n  have h_sqrt : Real.sqrt (x^2 + 1) * Real.sqrt (y^2 + 1) = Real.sqrt ((x^2 + 1) * (y^2 + 1)) := by\n    rw [Real.sqrt_mul] <;> nlinarith\n  rw [h_sqrt]\n  apply Real.le_sqrt_of_sq_le\n  nlinarith [sq_nonneg (x * y), sq_nonneg (x - y)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x * y = 1) :\n     Real.sqrt (x^2 + 1) * Real.sqrt (y^2 + 1) \u2265 2 := by\n  have h1 : 0 < Real.sqrt (x^2 + 1) := Real.sqrt_pos.mpr (by positivity)\n  have h2 : 0 < Real.sqrt (y^2 + 1) := Real.sqrt_pos.mpr (by positivity)\n  have h3 : 0 < Real.sqrt (x^2 + 1) * Real.sqrt (y^2 + 1) := by positivity\n  have h4 : (Real.sqrt (x^2 + 1) * Real.sqrt (y^2 + 1))^2 = (x^2 + 1) * (y^2 + 1) := by\n    rw [mul_pow, Real.sq_sqrt (by positivity), Real.sq_sqrt (by positivity)]\n  have h5 : (x^2 + 1) * (y^2 + 1) \u2265 4 := by\n    nlinarith [sq_nonneg (x * y - 1), sq_nonneg (x - y)]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x * y = 1) :\n     Real.sqrt (x^2 + 1) * Real.sqrt (y^2 + 1) \u2265 2 := by\n  have h\u2080 : 0 < Real.sqrt (x ^ 2 + 1) := Real.sqrt_pos.mpr (by positivity)\n  have h\u2081 : 0 < Real.sqrt (y ^ 2 + 1) := Real.sqrt_pos.mpr (by positivity)\n  have h\u2082 : Real.sqrt (x ^ 2 + 1) * Real.sqrt (y ^ 2 + 1) \u2265 2 := by\n    have h\u2083 : Real.sqrt (x ^ 2 + 1) * Real.sqrt (y ^ 2 + 1) =\n        Real.sqrt ((x ^ 2 + 1) * (y ^ 2 + 1)) := by\n      rw [Real.sqrt_mul]\n      positivity\n    rw [h\u2083]\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (x - y), hxy]\n  linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (hxy : x * y = 1) :\n     Real.sqrt (x^2 + 1) * Real.sqrt (y^2 + 1) \u2265 2 := by\n  have h\u2080 : 0 \u2264 x * y := by positivity\n  have h\u2081 : 0 \u2264 x^2 + 1 := by positivity\n  have h\u2082 : 0 \u2264 y^2 + 1 := by positivity\n  have h\u2083 : Real.sqrt (x^2 + 1) * Real.sqrt (y^2 + 1) \u2265 0 := by positivity\n  have h\u2084 : Real.sqrt (x^2 + 1) * Real.sqrt (y^2 + 1) = Real.sqrt ((x^2 + 1) * (y^2 + 1)) := by\n    rw [Real.sqrt_mul (by positivity)]\n  rw [h\u2084]\n  apply Real.le_sqrt_of_sq_le\n  nlinarith [sq_nonneg (x - y), hx, hy, h\u2080, h\u2081, h\u2082]"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : 4 * (x + y + z) ^ 3 - 27 * (x ^ 2 * y + y ^ 2 * z + z ^ 2 * x) \u2265 27 * x * y * z := by",
  "new": "(x y : \u2115) (h : x ^ 2 + y ^ 2 < 2 * x * y) : x.Coprime y \u2228 x = y:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_small_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 < 2 * x * y) : x.Coprime y \u2228 x = y:= by\n  rw [Nat.coprime_iff_gcd_eq_one]\n  have h2 : x ^ 2 + y ^ 2 < 2 * x * y := h\n  have h3 : x \u2264 y := by\n    nlinarith\n  have h4 : y \u2264 x := by\n    nlinarith\n  have h5 : x = y := by\n    nlinarith\n  simp [h5]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_small_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 < 2 * x * y) : x.Coprime y \u2228 x = y:= by\n  by_contra! hxy\n  have : x ^ 2 + y ^ 2 < 2 * x * y := h\n  have : x \u2264 y := by\n    nlinarith\n  have : x = y := by\n    nlinarith\n  simp_all\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_small_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 < 2 * x * y) : x.Coprime y \u2228 x = y:= by\n  rw [coprime_iff_gcd_eq_one]\n  by_contra! h\u2082\n  cases' le_total x y with hxy hyx\n  all_goals simp_all [Nat.gcd_comm]\n  all_goals nlinarith\n  all_goals nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 1) : (a^5 + b * c) / a + (b^5 + c * a) / b + (c^5 + a * b) / c \u2265 a * b * c := by",
  "new": ": \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c = 1 \u2192 (a^5 + b * c) / a + (b^5 + c * a) / b + (c^5 + a * b) / c \u2265 a * b * c:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c = 1 \u2192\n    (a^5 + b * c) / a + (b^5 + c * a) / b + (c^5 + a * b) / c \u2265 a * b * c:= by\n  rintro a b c \u27e8a_pos, b_pos, c_pos, a_add_b_add_c_eq_one\u27e9\n  have h\u2080 : 0 < a * b := mul_pos a_pos b_pos\n  have h\u2081 : 0 < b * c := mul_pos b_pos c_pos\n  have h\u2082 : 0 < c * a := mul_pos c_pos a_pos\n  have h\u2083 : 0 < a * b * c := by positivity\n  have h\u2084 : 0 < (a * b) * (b * c) := by positivity\n  have h\u2085 : 0 < (b * c) * (c * a) := by positivity\n  have h\u2086 : 0 < (c * a) * (a * b) := by positivity\n  have h\u2087 : 0 < a * b * c * (a * b) := by positivity\n  have h\u2088 : 0 < a * b * c * (b * c) := by positivity\n  have h\u2089 : 0 < a * b * c * (c * a) := by positivity\n  field_simp [a_pos.ne', b_pos.ne', c_pos.ne', h\u2081.ne', h\u2082.ne', h\u2083.ne', h\u2084.ne', h\u2085.ne', h\u2086.ne', h\u2087.ne', h\u2088.ne', h\u2089.ne']\n  rw [le_div_iff, mul_comm]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    sq_nonneg (a ^ 2 - a * b), sq_nonneg (b ^ 2 - b * c), sq_nonneg (c ^ 2 - c * a),\n    sq_nonneg (a * b - b * c), sq_nonneg (b * c - c * a), sq_nonneg (c * a - a * b)]\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c = 1 \u2192\n    (a^5 + b * c) / a + (b^5 + c * a) / b + (c^5 + a * b) / c \u2265 a * b * c:= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have h\u2081 : 0 < a * b := by positivity\n  have h\u2082 : 0 < b * c := by positivity\n  have h\u2083 : 0 < a * c := by positivity\n  have h\u2084 : 0 < a * b * c := by positivity\n  have h\u2085 : (a^5 + b * c) / a \u2265 b * c := by\n    rw [ge_iff_le, le_div_iff ha]\n    nlinarith [pow_pos ha 5, mul_self_nonneg a, mul_self_nonneg (a^2 - b),\n      mul_self_nonneg (a^2 - c)]\n  have h\u2086 : (b^5 + c * a) / b \u2265 c * a := by\n    rw [ge_iff_le, le_div_iff hb]\n    nlinarith [pow_pos hb 5, mul_self_nonneg b, mul_self_nonneg (b^2 - c),\n      mul_self_nonneg (b^2 - a)]\n  have h\u2087 : (c^5 + a * b) / c \u2265 a * b := by\n    rw [ge_iff_le, le_div_iff hc]\n    nlinarith [pow_pos hc 5, mul_self_nonneg c, mul_self_nonneg (c^2 - a),\n      mul_self_nonneg (c^2 - b)]\n  nlinarith\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2227 a + b + c = 1 \u2192\n    (a^5 + b * c) / a + (b^5 + c * a) / b + (c^5 + a * b) / c \u2265 a * b * c:= by\n  intro a b c \u27e8ha, hb, hc, habc\u27e9\n  have h\u2080 : 0 < a * b := by positivity\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * a := by positivity\n  have h\u2083 : 0 < a * b * c := by positivity\n  have h\u2084 : (a^5 + b * c) / a \u2265 b * c := by\n    have : 0 < a := by linarith\n    have : 0 < b * c := by positivity\n    have : 0 < a * b * c := by positivity\n    have : a^5 \u2265 0 := by positivity\n    apply (le_div_iff (by positivity)).mpr\n    nlinarith\n  have h\u2085 : (b^5 + c * a) / b \u2265 c * a := by\n    have : 0 < b := by linarith\n    have : 0 < c * a := by positivity\n    have : 0 < a * b * c := by positivity\n    have : b^5 \u2265 0 := by positivity\n    apply (le_div_iff (by positivity)).mpr\n    nlinarith\n  have h\u2086 : (c^5 + a * b) / c \u2265 a * b := by\n    have : 0 < c := by linarith\n    have : 0 < a * b := by positivity\n    have : 0 < a * b * c := by positivity\n    have : c^5 \u2265 0 := by positivity\n    apply (le_div_iff (by positivity)).mpr\n    nlinarith\n  nlinarith\n  <;> assumption\n  <;> assumption\n  <;> assumption"
  ]
 },
 {
  "old": "(x : \u211d) : (2:\u211d) ^ (sin x) + 2 ^ (cos x) \u2265 2 ^ ((2 - Real.sqrt 2) / 2) := by",
  "new": ": Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 - 1) \u2264 2 * Real.sqrt (2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (Real.sqrt 2 + 1) + Real.sqrt (Real.sqrt 2 - 1) \u2264 2 * Real.sqrt (2):= by\n  have h\u2081 : Real.sqrt 2 \u2265 0 := Real.sqrt_nonneg 2\n  have h\u2082 : Real.sqrt 2 - 1 \u2265 0 := by\n    nlinarith [Real.mul_self_sqrt (show 0 \u2264 2 by linarith)]\n  have h\u2083 : Real.sqrt 2 + 1 \u2265 0 := by linarith\n  have h\u2084 : Real.sqrt (2) \u2265 0 := Real.sqrt_nonneg 2\n  nlinarith [sq_sqrt (show 0 \u2264 Real.sqrt 2 + 1 by linarith),\n    sq_sqrt (show 0 \u2264 Real.sqrt 2 - 1 by linarith),\n    sq_sqrt (show 0 \u2264 2 by linarith),\n    sq_sqrt (show 0 \u2264 Real.sqrt 2 by linarith),\n    sq_nonneg (Real.sqrt (Real.sqrt 2 + 1) - Real.sqrt (Real.sqrt 2 - 1))]\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u2115) : Nat.gcd a (Nat.lcm b c) = Nat.lcm (Nat.gcd a b) (Nat.gcd a c) := by",
  "new": "(p : \u2115) (hp : p.Prime) (i : \u2115) : Nat.Coprime p i \u2228 p \u2223 i := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (hp : p.Prime) (i : \u2115) : Nat.Coprime p i \u2228 p \u2223 i := by\n  apply or_iff_not_imp_right.mpr\n  intro hn\n  apply hp.coprime_iff_not_dvd.mpr\n  exact hn"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1) : 3 / 2 \u2264 1 / (a^b * (b + c)) + 1 / (b^c * (c + a)) + 1 / (c^a * (a + b)) := by",
  "new": ": \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192 2 * (Real.sqrt a * Real.sqrt b * Real.sqrt c)^2 \u2264 4:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192 2 * (Real.sqrt a * Real.sqrt b * Real.sqrt c)^2 \u2264 4:= by\n  rintro a b c \u27e8a_pos, b_pos, c_pos, abc_eq\u27e9\n  have h\u2081 : Real.sqrt a * Real.sqrt b * Real.sqrt c = Real.sqrt (a * b * c) := by\n    rw [Real.sqrt_mul, Real.sqrt_mul, mul_assoc, mul_comm, mul_comm] <;>\n    positivity\n  rw [h\u2081]\n  simp_all [Real.sq_sqrt]\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192 2 * (Real.sqrt a * Real.sqrt b * Real.sqrt c)^2 \u2264 4:= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  rw [show Real.sqrt a * Real.sqrt b * Real.sqrt c = Real.sqrt (a * b * c) by\n      rw [Real.sqrt_mul, Real.sqrt_mul, \u2190 Real.sqrt_mul] <;> positivity]\n  norm_num [habc]\n  <;> nlinarith [sq_sqrt (by positivity : 0 \u2264 a * b * c)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192 2 * (Real.sqrt a * Real.sqrt b * Real.sqrt c)^2 \u2264 4:= by\n  intro a b c h\n  obtain \u27e8h1, h2, h3, h4\u27e9 := h\n  have h5 : 0 < Real.sqrt a * Real.sqrt b * Real.sqrt c := by positivity\n  have h6 : (Real.sqrt a * Real.sqrt b * Real.sqrt c)^2 = a * b * c := by\n    rw [mul_pow, mul_pow]\n    field_simp [Real.sqrt_eq_iff_sq_eq]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1 \u2192 2 * (Real.sqrt a * Real.sqrt b * Real.sqrt c)^2 \u2264 4:= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  have : (Real.sqrt a * Real.sqrt b * Real.sqrt c) ^ 2 = a * b * c := by\n    rw [mul_pow, mul_pow]\n    field_simp [Real.sqrt_eq_iff_sq_eq, ha.le, hb.le, hc.le, habc]\n  nlinarith [sq_nonneg (a * b * c)]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^3 / (b + c) * (a + c) + b^3 / (b + a) * (a + c) + c^3 / (b + c) * (a + b)) \u2265 (a + b + c) / 4 := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : a^4 + b^4 + c^4 + 4 * a^2 * b^2 * c^2 \u2265 2 * a * b * c * (a^2 + b^2 + c^2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :  a^4 + b^4 + c^4 + 4 * a^2 * b^2 * c^2 \u2265 2 * a * b * c * (a^2 + b^2 + c^2):= by\n  have h\u2080 : 0 < a * b * c := by positivity\n  have h\u2081 : 0 < 2 * a * b * c := by positivity\n  have h\u2082 : 0 < a^2 * b^2 * c^2 := by positivity\n  nlinarith [sq_nonneg (a - b * c), sq_nonneg (b - a * c), sq_nonneg (c - a * b)]\n  <;> linarith\n  <;> assumption\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :  a^4 + b^4 + c^4 + 4 * a^2 * b^2 * c^2 \u2265 2 * a * b * c * (a^2 + b^2 + c^2):= by\n  have H\u2080 : 0 < a * b * c := by positivity\n  have H\u2081 : 0 < a ^ 2 * b ^ 2 * c ^ 2 := by positivity\n  have H\u2082 : 0 < a ^ 2 + b ^ 2 + c ^ 2 := by positivity\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (a ^ 2 - c ^ 2),\n    sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (a ^ 2 - 2 * a * b * c + b ^ 2),\n    sq_nonneg (a ^ 2 - 2 * a * b * c + c ^ 2), sq_nonneg (b ^ 2 - 2 * b * c * a + c ^ 2)]\n  <;> linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption"
  ]
 },
 {
  "old": "{f : \u211d \u2192 \u211d} (a b c d : \u211d) : f a + f b + f c + f d + 8 * f (a + b + c + d) / 4 \u2264 3 * (f (a + b + c) / 3 + f (b + c + d) / 3 + f (c + d + a) / 3 + f (d + a + b) / 3) := by",
  "new": "{x y z : \u211d} : 2 * (x ^ 2 + y ^ 2 + z ^ 2) \u2264 x ^ 2 + y ^ 2 + z ^ 2 + (x + y) ^ 2 + (y + z) ^ 2 + (z + x) ^ 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {x y z : \u211d} : \n   2 * (x ^ 2 + y ^ 2 + z ^ 2) \u2264 x ^ 2 + y ^ 2 + z ^ 2 + (x + y) ^ 2 + (y + z) ^ 2 + (z + x) ^ 2:= by\n  ring_nf\n  nlinarith [sq_nonneg (x + y + z)]\n  <;> try norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {x y z : \u211d} : \n   2 * (x ^ 2 + y ^ 2 + z ^ 2) \u2264 x ^ 2 + y ^ 2 + z ^ 2 + (x + y) ^ 2 + (y + z) ^ 2 + (z + x) ^ 2:= by\n  linarith [sq_nonneg (x + y + z), sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (x - z)]\n  <;> simp [sq]\n  <;> linarith\n  <;> simp [sq]\n  <;> linarith\n  <;> simp [sq]\n  <;> linarith\n  <;> simp [sq]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {x y z : \u211d} : \n   2 * (x ^ 2 + y ^ 2 + z ^ 2) \u2264 x ^ 2 + y ^ 2 + z ^ 2 + (x + y) ^ 2 + (y + z) ^ 2 + (z + x) ^ 2:= by\n  ring\n  linarith [sq_nonneg (x + y + z), sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {x y z : \u211d} : \n   2 * (x ^ 2 + y ^ 2 + z ^ 2) \u2264 x ^ 2 + y ^ 2 + z ^ 2 + (x + y) ^ 2 + (y + z) ^ 2 + (z + x) ^ 2:= by\n  simp only [mul_add, mul_one, mul_two, \u2190 add_assoc]\n  nlinarith [sq_nonneg (x + y + z), sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]"
  ]
 },
 {
  "old": "(x a : \u2115) (h\u2080 : 1 < x \u2227 1 < a) : Nat.gcd x a \u2260 1 \u2194 (\u2203 p, p.Prime \u2227 p \u2223 x \u2227 p \u2223 a) := by",
  "new": "(p : \u2115) (hp : p.Prime) (a : \u2115) : a.Coprime p \u2228 \u2203 (r : \u2115), r \u2223 a \u2227 r \u2223 p := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (hp : p.Prime) (a : \u2115) : a.Coprime p \u2228 \u2203 (r : \u2115), r \u2223 a \u2227 r \u2223 p := by\n  by_cases h : a.Coprime p\n  exact Or.inl h\n  exact Or.inr \u27e81, by simp [dvd_one, h, hp.ne_zero], by simp [dvd_one, h, hp.ne_zero]\u27e9\n  <;> simp_all [Nat.Prime, Nat.succ_pos, Nat.pos_of_ne_zero, Nat.not_coprime_iff_dvd]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (hp : p.Prime) (a : \u2115) : a.Coprime p \u2228 \u2203 (r : \u2115), r \u2223 a \u2227 r \u2223 p := by\n  apply or_iff_not_imp_right.mpr\n  intro h\n  apply Nat.Coprime.symm\n  apply Nat.coprime_of_dvd\n  all_goals aesop"
  ]
 },
 {
  "old": "(n : \u2115) (m : \u2115) (hm : m < n * Real.exp 2) : \u00ac \u2203 q : \u211a, \u2211 k in Finset.Icc 1 m, Real.sqrt ((n + k) ^ 2 + 1) = q := by",
  "new": "(n m : \u2115) (hn : 0 < n) (hm : 0 < m) : Nat.Coprime n m \u2228 \u00ac Nat.Coprime n m := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (n m : \u2115) (hn : 0 < n) (hm : 0 < m) : \n     Nat.Coprime n m \u2228 \u00ac Nat.Coprime n m := by\n  have h : n.Coprime m \u2228 \u00ac n.Coprime m := by apply em\n  exact h\n  <;> simp_all\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (n m : \u2115) (hn : 0 < n) (hm : 0 < m) : \n     Nat.Coprime n m \u2228 \u00ac Nat.Coprime n m := by\n  exact em (Nat.Coprime n m)",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (n m : \u2115) (hn : 0 < n) (hm : 0 < m) : \n     Nat.Coprime n m \u2228 \u00ac Nat.Coprime n m := by\n  by_cases h : Nat.Coprime n m\n  case pos => exact Or.inl h\n  case neg => exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (n m : \u2115) (hn : 0 < n) (hm : 0 < m) : \n     Nat.Coprime n m \u2228 \u00ac Nat.Coprime n m := by\n  by_cases h : Nat.Coprime n m <;> simp_all\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h"
  ]
 },
 {
  "old": "(t : \u211d) (h\u2080 : 0 < t) (h\u2081 : 1 \u2264 t) : t^2 / 24 + t / 6 + 1 / 2 + 1 / t \u2265 2 / Real.sqrt 6 + 13 / 24 := by",
  "new": ": \u2200 x : \u211d, x > 0 \u2192 x ^ 2 / 24 + x / 6 + 1 / 2 + 1 / x \u2265 2 / Real.sqrt 6 + 13 / 24:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 2 / 24 + x / 6 + 1 / 2 + 1 / x \u2265 2 / Real.sqrt 6 + 13 / 24:= by\n  intro x hx\n  have h\u2080 : 0 < Real.sqrt 6 := by positivity\n  have h\u2081 : 0 < x := by positivity\n  have h\u2082 : 0 < x * Real.sqrt 6 := by positivity\n  have h\u2083 : 0 < x * Real.sqrt 6 * x := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_sqrt (by positivity : (0 : \u211d) \u2264 6),\n    mul_self_nonneg (x - 1),\n    mul_self_nonneg (x - Real.sqrt 6)]"
  ]
 },
 {
  "old": "{a b n : \u2124} (h\u2081 : a > 1 \u2227 b > 1 \u2227 n > 1) (h\u2082 : Odd n) (h\u2083 : a + b = n) (h\u2084 : Nat.Coprime a.natAbs b.natAbs) : 2 \u2223 n := by",
  "new": "(a b : \u2115) (h\u2081 : a > 1 \u2227 b > 1) (h\u2082 : a.Coprime b) : \u2200 x : \u2115, x \u2223 a \u2227 x \u2223 b \u2192 x = 1 \u2228 x = a \u2228 x = b:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (h\u2081 : a > 1 \u2227 b > 1) (h\u2082 : a.Coprime b) : \u2200 x : \u2115, x \u2223 a \u2227 x \u2223 b \u2192 x = 1 \u2228 x = a \u2228 x = b:= by\n  rintro x \u27e8h\u2083, h\u2084\u27e9\n  have h\u2085 : x \u2223 Nat.gcd a b := Nat.dvd_gcd h\u2083 h\u2084\n  rw [h\u2082] at h\u2085\n  rw [Nat.dvd_one] at h\u2085\n  aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (h\u2081 : a > 1 \u2227 b > 1) (h\u2082 : a.Coprime b) : \u2200 x : \u2115, x \u2223 a \u2227 x \u2223 b \u2192 x = 1 \u2228 x = a \u2228 x = b:= by\n  rintro x \u27e8h\u2083, h\u2084\u27e9\n  have h\u2085 : x \u2223 a.gcd b := Nat.dvd_gcd h\u2083 h\u2084\n  simp [Nat.coprime_iff_gcd_eq_one.mp h\u2082] at h\u2085\n  have h\u2086 : x = 1 := by\n    have h\u2087 : x \u2223 1 := by simp_all [Nat.dvd_one]\n    exact Nat.eq_one_of_dvd_one h\u2087\n  simp_all [h\u2086, Nat.coprime_iff_gcd_eq_one.mp h\u2082]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (h\u2081 : a > 1 \u2227 b > 1) (h\u2082 : a.Coprime b) : \u2200 x : \u2115, x \u2223 a \u2227 x \u2223 b \u2192 x = 1 \u2228 x = a \u2228 x = b:= by\n  rintro x \u27e8h\u2083, h\u2084\u27e9\n  have h\u2085 : x \u2223 a.gcd b := Nat.dvd_gcd h\u2083 h\u2084\n  rw [h\u2082] at h\u2085\n  simp_all",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (h\u2081 : a > 1 \u2227 b > 1) (h\u2082 : a.Coprime b) : \u2200 x : \u2115, x \u2223 a \u2227 x \u2223 b \u2192 x = 1 \u2228 x = a \u2228 x = b:= by\n  rintro x \u27e8hxa, hxb\u27e9\n  have hx := Nat.dvd_gcd hxa hxb\n  simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]"
  ]
 },
 {
  "old": "(x : \u211d) (c : \u2115) (hx : 1 \u2264 x) (hc : 1 \u2264 c) : \u2211 i in Finset.Ico 1 c, (i * x) % 1 < c / 2 := by",
  "new": "(i : \u2115) (hi : \u2200 (c : \u2115), 1 < c \u2192 c \u2223 i \u2192 \u00ac(c * c \u2223 i)) : i \u2260 0 \u2192 Nat.Coprime i (i + 1) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_mul_eq_one (i : \u2115) (hi : \u2200 (c : \u2115), 1 < c \u2192  c \u2223 i \u2192 \u00ac(c * c \u2223 i)) : i \u2260 0 \u2192 Nat.Coprime i (i + 1)  := by\n  rintro h\n  simp_all [Nat.coprime_iff_gcd_eq_one, Nat.gcd_comm]\n  <;> norm_num\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_mul_eq_one (i : \u2115) (hi : \u2200 (c : \u2115), 1 < c \u2192  c \u2223 i \u2192 \u00ac(c * c \u2223 i)) : i \u2260 0 \u2192 Nat.Coprime i (i + 1)  := by\n  rintro h\n  simp [Nat.coprime_iff_gcd_eq_one, Nat.gcd_eq_right, h]\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_mul_eq_one (i : \u2115) (hi : \u2200 (c : \u2115), 1 < c \u2192  c \u2223 i \u2192 \u00ac(c * c \u2223 i)) : i \u2260 0 \u2192 Nat.Coprime i (i + 1)  := by\n  intro h\n  apply Nat.coprime_iff_gcd_eq_one.2\n  simp [Nat.gcd_eq_right, Nat.gcd_eq_left, h]\n  <;> apply hi <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_mul_eq_one (i : \u2115) (hi : \u2200 (c : \u2115), 1 < c \u2192  c \u2223 i \u2192 \u00ac(c * c \u2223 i)) : i \u2260 0 \u2192 Nat.Coprime i (i + 1)  := by\n  rintro h\u2081\n  simpa [h\u2081] using hi 1 (by norm_num) (by simp [h\u2081])\n  <;> decide\n  <;> decide\n  <;> decide"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^2 / b^2 + b^2 / c^2 + c^2 / a^2) + 2 \u2265 5 * (a^2 + b^2 + c^2) / (a * b + b * c + c * a) := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a * b + b * c + c * a = 0 \u2192 (a^2 / b^2 + b^2 / c^2 + c^2 / a^2) + 2 \u2265 5 * (a^2 + b^2 + c^2) / (a * b + b * c + c * a) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a * b + b * c + c * a = 0 \u2192\n    (a^2 / b^2 + b^2 / c^2 + c^2 / a^2) + 2 \u2265 5 * (a^2 + b^2 + c^2) / (a * b + b * c + c * a)  := by\n  rintro a b c \u27e8a0, b0, c0, h\u27e9\n  rw [h]\n  ring_nf\n  nlinarith [mul_self_nonneg (a / b + b / c + c / a)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a * b + b * c + c * a = 0 \u2192\n    (a^2 / b^2 + b^2 / c^2 + c^2 / a^2) + 2 \u2265 5 * (a^2 + b^2 + c^2) / (a * b + b * c + c * a)  := by\n  intro a b c h\n  simp [h.1, h.2.1, h.2.2]\n  ring_nf\n  nlinarith [h.1, h.2.1, h.2.2, sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> linarith"
  ]
 },
 {
  "old": "(n : \u2124) (hn : n \u2260 1) : \u2203 x y : \u2124, y^2 - 2 * x^2 = n - 1 := by",
  "new": "(x y : \u2115) (h : x ^ 2 + y ^ 2 \u2264 n) : Nat.Coprime x y \u2228 \u00ac Nat.Coprime x y := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 \u2264 n) : \n     Nat.Coprime x y \u2228 \u00ac Nat.Coprime x y := by\n  by_cases h\u2081 : Nat.Coprime x y <;> simp [h\u2081]\n  <;> try assumption\n  <;> try linarith"
  ]
 },
 {
  "old": "(p : \u2115) (hp : p.Prime) (h8 : p \u2261 3 [ZMOD 8]) : \u2203 x y : \u2124, x^2 + 2*y^2 = p := by",
  "new": "(p : \u2115) (hp : p.Prime) (h8 : p \u2261 1 [ZMOD 8]) : p = 2 \u2228 \u2203 k : \u2115, p = 8 * k + 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem prime_of_congruent_one_mod_eight (p : \u2115) (hp : p.Prime) (h8 : p \u2261 1 [ZMOD 8]) :\n        p = 2 \u2228 \u2203 k : \u2115, p = 8 * k + 1:= by\n  rw [Int.ModEq] at h8\n  by_cases h1 : p = 2\n  exacts [Or.inl h1,\n    Or.inr \u27e8(p - 1) / 8, by\n      have h2 : 0 < p := hp.pos\n      have h3 : p % 8 = 1 := by omega\n      have h4 : p = 8 * ((p - 1) / 8) + 1 := by omega\n      exact h4\u27e9]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem prime_of_congruent_one_mod_eight (p : \u2115) (hp : p.Prime) (h8 : p \u2261 1 [ZMOD 8]) :\n        p = 2 \u2228 \u2203 k : \u2115, p = 8 * k + 1:= by\n  rw [Int.ModEq] at h8\n  by_cases h2 : p = 2\n  exacts [Or.inl h2, Or.inr \u27e8(p - 1) / 8, by omega\u27e9]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem prime_of_congruent_one_mod_eight (p : \u2115) (hp : p.Prime) (h8 : p \u2261 1 [ZMOD 8]) :\n        p = 2 \u2228 \u2203 k : \u2115, p = 8 * k + 1:= by\n  rw [Int.ModEq] at h8\n  norm_cast at h8\n  by_cases h2 : p = 2\n  exact Or.inl h2\n  right\n  have h3 : p % 8 = 1 := by omega\n  exact \u27e8p / 8, by omega\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem prime_of_congruent_one_mod_eight (p : \u2115) (hp : p.Prime) (h8 : p \u2261 1 [ZMOD 8]) :\n        p = 2 \u2228 \u2203 k : \u2115, p = 8 * k + 1:= by\n  have h\u2080 := h8\n  rw [Int.ModEq] at h\u2080\n  norm_cast at h\u2080\n  by_cases h\u2081 : p = 2\n  exacts [Or.inl h\u2081, Or.inr \u27e8(p - 1) / 8, by omega\u27e9]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = 3) : a ^ 3 / b ^ 2 + b ^ 3 / c ^ 2 + c ^ 3 / a ^ 2 + 3 \u2265 2 * (a ^ 2 + b ^ 2 + c ^ 2) := by",
  "new": ": \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 3 \u2192 (a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2) * (a ^ 2 + c ^ 2) \u2264 (a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2) * (a ^ 2 + c ^ 2) * (a + b + c):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 3 \u2192\n   (a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2) * (a ^ 2 + c ^ 2) \u2264\n   (a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2) * (a ^ 2 + c ^ 2) * (a + b + c):= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  exact (le_mul_of_one_le_right (by positivity) (by linarith))",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 3 \u2192\n   (a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2) * (a ^ 2 + c ^ 2) \u2264\n   (a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2) * (a ^ 2 + c ^ 2) * (a + b + c):= by\n  rintro a b c \u27e8h\u2081, h\u2082, h\u2083, h\u2084\u27e9\n  have h\u2085 : 0 \u2264 a ^ 2 + b ^ 2 := by positivity\n  have h\u2086 : 0 \u2264 b ^ 2 + c ^ 2 := by positivity\n  have h\u2087 : 0 \u2264 a ^ 2 + c ^ 2 := by positivity\n  have h\u2088 : 0 \u2264 (a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2) := by positivity\n  have h\u2089 : 0 \u2264 (a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2) * (a ^ 2 + c ^ 2) := by positivity\n  have h\u2081\u2080 : 0 \u2264 a * b := by nlinarith\n  have h\u2081\u2081 : 0 \u2264 b * c := by nlinarith\n  have h\u2081\u2082 : 0 \u2264 a * c := by nlinarith\n  nlinarith [sq_nonneg (a * b + b * c + a * c)]\n  <;> linarith\n  <;> linarith\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 a + b + c = 3 \u2192\n   (a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2) * (a ^ 2 + c ^ 2) \u2264\n   (a ^ 2 + b ^ 2) * (b ^ 2 + c ^ 2) * (a ^ 2 + c ^ 2) * (a + b + c):= by\n  rintro a b c \u27e8ha, hb, hc, habc\u27e9\n  refine' le_mul_of_one_le_right (by positivity) _\n  simp only [habc, one_le_mul, ha, hb, hc, and_self_iff, add_nonneg, add_left_comm,\n    add_assoc, mul_eq_mul_left_iff, mul_eq_mul_right_iff]\n  norm_num\n  <;> nlinarith\n  <;> linarith\n  <;> nlinarith\n  <;> linarith\n  <;> nlinarith\n  <;> linarith\n  <;> nlinarith"
  ]
 },
 {
  "old": "(C\u2081 C\u2082 : \u211d) (hC\u2081 : 0 < C\u2081) (hC\u2082 : 0 < C\u2082) (n : \u2115) (hn : 0 < n) : (C\u2081 * n ^ n / exp n) \u2264 n! \u2227 n! \u2264 C\u2082 * n ^ (n + 1) / exp n := by",
  "new": "(x y : \u211d) (hx : 0 < x) (hy : 0 < y) (h : x + y = 1) : x ^ 2 / exp 1 + y ^ 2 / exp 1 \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_result (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (h : x + y = 1) : x ^ 2 / exp 1 + y ^ 2 / exp 1 \u2264 1:= by\n  have h\u2081 : x ^ 2 / exp 1 \u2264 x := by\n    rw [div_le_iff (exp_pos 1)]\n    have h\u2082 : x ^ 2 \u2264 x * exp 1 := by\n      nlinarith [add_one_le_exp 1]\n    linarith\n  have h\u2082 : y ^ 2 / exp 1 \u2264 y := by\n    rw [div_le_iff (exp_pos 1)]\n    have h\u2082 : y ^ 2 \u2264 y * exp 1 := by\n      nlinarith [add_one_le_exp 1]\n    linarith\n  linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_result (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (h : x + y = 1) : x ^ 2 / exp 1 + y ^ 2 / exp 1 \u2264 1:= by\n  rw [add_comm] at h\n  have h : x + y = 1 := by linarith\n  have h' : x ^ 2 / exp 1 + y ^ 2 / exp 1 \u2264 1 := by\n    calc\n      x ^ 2 / exp 1 + y ^ 2 / exp 1 \u2264 x ^ 2 / 1 + y ^ 2 / 1 := by gcongr <;> norm_num <;> linarith\n      _ = x ^ 2 + y ^ 2 := by norm_num\n      _ \u2264 1 := by nlinarith\n  exact h'",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_result (x y : \u211d) (hx : 0 < x) (hy : 0 < y) (h : x + y = 1) : x ^ 2 / exp 1 + y ^ 2 / exp 1 \u2264 1:= by\n  have h\u2080 : 0 < exp 1 := Real.exp_pos 1\n  have h\u2081 : 0 < x ^ 2 + y ^ 2 := by positivity\n  have h\u2082 : x ^ 2 + y ^ 2 \u2264 1 := by\n    nlinarith [sq_nonneg (x - y)]\n  have h\u2083 : x ^ 2 / exp 1 + y ^ 2 / exp 1 \u2264 1 := by\n    rw [div_add_div_same]\n    rw [div_le_iff h\u2080]\n    nlinarith [Real.add_one_le_exp (1 : \u211d)]\n  exact h\u2083"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : (a * b / (a + 4 * b + 4 * c) + b * c / (b + 4 * c + 4 * a) + c * a / (c + 4 * a + 4 * b) \u2264 (a + b + c) / 9) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 \u2265 x / y + y / z + z / x - 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 \u2265 x / y + y / z + z / x - 3:= by\n  have : x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 \u2265 x / y + y / z + z / x - 3 := by\n    have h\u2081 : 0 < x * y := by positivity\n    have h\u2082 : 0 < y * z := by positivity\n    have h\u2083 : 0 < z * x := by positivity\n    have h\u2084 : 0 < x * y * z := by positivity\n    have h\u2085 : 0 < x ^ 2 * y ^ 2 * z ^ 2 := by positivity\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (x ^ 2 * z - y ^ 2 * x), sq_nonneg (y ^ 2 * x - z ^ 2 * y), sq_nonneg (z ^ 2 * y - x ^ 2 * z),\n      sq_nonneg (x * y * z), sq_nonneg (x * y * z * (x * y - y * z)),\n      sq_nonneg (x * y * z * (y * z - z * x)), sq_nonneg (x * y * z * (z * x - x * y))]\n  assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 \u2265 x / y + y / z + z / x - 3:= by\n  have : 0 < x * y := by positivity\n  have : 0 < y * z := by positivity\n  have : 0 < z * x := by positivity\n  have h\u2080 : 0 < x * y * z := by positivity\n  have h\u2081 : 0 < x ^ 2 * y ^ 2 * z ^ 2 := by positivity\n  have h\u2082 : 0 < x ^ 2 * z ^ 2 * y ^ 2 := by positivity\n  field_simp [h\u2080, h\u2081, h\u2082]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x ^ 2 * z - y ^ 2 * x), sq_nonneg (y ^ 2 * x - z ^ 2 * y), sq_nonneg (z ^ 2 * y - x ^ 2 * z),\n    sq_nonneg (x * y * z), sq_nonneg (x * y * z * (x * y - y * z)),\n    sq_nonneg (x * y * z * (y * z - z * x)), sq_nonneg (x * y * z * (z * x - x * y))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 \u2265 x / y + y / z + z / x - 3:= by\n  have : 0 < x * y := by positivity\n  have : 0 < y * z := by positivity\n  have : 0 < x * z := by positivity\n  have h\u2080 : x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 \u2265 x / y + y / z + z / x := by\n    rw [add_assoc]\n    have h\u2081 : 0 < y * z * x := by positivity\n    have h\u2082 : 0 < y * z * x * (x * y * z) := by positivity\n    field_simp\n    rw [div_le_div_iff (by positivity) (by positivity)]\n    nlinarith [sq_nonneg (x ^ 2 * z - y ^ 2 * x), sq_nonneg (y ^ 2 * x - z ^ 2 * y), sq_nonneg (z ^ 2 * y - x ^ 2 * z),\n      sq_nonneg (x * y * z), sq_nonneg (x * y * z * (x * y - y * z)), sq_nonneg (x * y * z * (y * z - z * x)),\n      sq_nonneg (x * y * z * (z * x - x * y))]\n  linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   x ^ 2 / y ^ 2 + y ^ 2 / z ^ 2 + z ^ 2 / x ^ 2 \u2265 x / y + y / z + z / x - 3:= by\n  have h\u2081 : 0 < x * y := mul_pos hx hy\n  have h\u2082 : 0 < y * z := mul_pos hy hz\n  have h\u2083 : 0 < z * x := mul_pos hz hx\n  have h\u2084 : 0 < x * y * z := by positivity\n  have h\u2085 : 0 < x ^ 2 * y ^ 2 * z ^ 2 := by positivity\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084, h\u2085]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x ^ 2 * z - y ^ 2 * x), sq_nonneg (y ^ 2 * x - z ^ 2 * y), sq_nonneg (z ^ 2 * y - x ^ 2 * z),\n    sq_nonneg (x * y * z), sq_nonneg (x * y * z * (x * y - y * z)), sq_nonneg (x * y * z * (y * z - z * x)),\n    sq_nonneg (x * y * z * (z * x - x * y))]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hab : 0 < a + b + c) (h : a + b + c \u2260 0) : (a * b * (a + b) / (2 * a ^ 2 + 2 * b ^ 2 + 5 * c ^ 2) + b * c * (b + c) / (2 * b ^ 2 + 2 * c ^ 2 + 5 * a ^ 2) + c * a * (c + a) / (2 * c ^ 2 + 2 * a ^ 2 + 5 * b ^ 2)) \u2264 (a + b + c) / 4 := by",
  "new": "(a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) : a * b * (a + b) / (2 * a ^ 2 + 2 * b ^ 2) + b * c * (b + c) / (2 * b ^ 2 + 2 * c ^ 2) + c * a * (c + a) / (2 * c ^ 2 + 2 * a ^ 2) \u2264 (a + b + c) / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) :\n     a * b * (a + b) / (2 * a ^ 2 + 2 * b ^ 2) + b * c * (b + c) / (2 * b ^ 2 + 2 * c ^ 2) +\n       c * a * (c + a) / (2 * c ^ 2 + 2 * a ^ 2) \u2264 (a + b + c) / 2:= by\n  have h\u2081 : a * b * (a + b) / (2 * a ^ 2 + 2 * b ^ 2) \u2264 (a + b) / 4 := by\n    apply div_le_of_nonneg_of_le_mul <;>\n      nlinarith [sq_nonneg (a - b), mul_nonneg ha hb]\n  have h\u2082 : b * c * (b + c) / (2 * b ^ 2 + 2 * c ^ 2) \u2264 (b + c) / 4 := by\n    apply div_le_of_nonneg_of_le_mul <;>\n      nlinarith [sq_nonneg (b - c), mul_nonneg hb hc]\n  have h\u2083 : c * a * (c + a) / (2 * c ^ 2 + 2 * a ^ 2) \u2264 (c + a) / 4 := by\n    apply div_le_of_nonneg_of_le_mul <;>\n      nlinarith [sq_nonneg (c - a), mul_nonneg hc ha]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) :\n     a * b * (a + b) / (2 * a ^ 2 + 2 * b ^ 2) + b * c * (b + c) / (2 * b ^ 2 + 2 * c ^ 2) +\n       c * a * (c + a) / (2 * c ^ 2 + 2 * a ^ 2) \u2264 (a + b + c) / 2:= by\n  have h\u2080 : a * b * (a + b) / (2 * a ^ 2 + 2 * b ^ 2) \u2264 (a + b) / 4 := by\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (a - b)]\n  have h\u2081 : b * c * (b + c) / (2 * b ^ 2 + 2 * c ^ 2) \u2264 (b + c) / 4 := by\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (b - c)]\n  have h\u2082 : c * a * (c + a) / (2 * c ^ 2 + 2 * a ^ 2) \u2264 (c + a) / 4 := by\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (c - a)]\n  linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) :\n     a * b * (a + b) / (2 * a ^ 2 + 2 * b ^ 2) + b * c * (b + c) / (2 * b ^ 2 + 2 * c ^ 2) +\n       c * a * (c + a) / (2 * c ^ 2 + 2 * a ^ 2) \u2264 (a + b + c) / 2:= by\n  have hab : a * b * (a + b) / (2 * a ^ 2 + 2 * b ^ 2) \u2264 (a + b) / 4 := by\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (a - b)]\n  have hbc : b * c * (b + c) / (2 * b ^ 2 + 2 * c ^ 2) \u2264 (b + c) / 4 := by\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (b - c)]\n  have hac : c * a * (c + a) / (2 * c ^ 2 + 2 * a ^ 2) \u2264 (c + a) / 4 := by\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (c - a)]\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) :\n     a * b * (a + b) / (2 * a ^ 2 + 2 * b ^ 2) + b * c * (b + c) / (2 * b ^ 2 + 2 * c ^ 2) +\n       c * a * (c + a) / (2 * c ^ 2 + 2 * a ^ 2) \u2264 (a + b + c) / 2:= by\n  have : a * b * (a + b) / (2 * a ^ 2 + 2 * b ^ 2) \u2264 (a + b) / 4 := by\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (a - b)]\n  have : b * c * (b + c) / (2 * b ^ 2 + 2 * c ^ 2) \u2264 (b + c) / 4 := by\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (b - c)]\n  have : c * a * (c + a) / (2 * c ^ 2 + 2 * a ^ 2) \u2264 (c + a) / 4 := by\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith [sq_nonneg (c - a)]\n  nlinarith\n  <;> norm_num"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x + y) / z + (y + z) / x + (z + x) / y \u2265 2 * Real.sqrt ((x + y + z) * (x ^ 2 + y ^ 2 + z ^ 2) / (x * y * z)) \u2227 2 * Real.sqrt ((x + y + z) * (x ^ 2 + y ^ 2 + z ^ 2) / (x * y * z)) \u2265 2 * (x + y + z) * Real.sqrt ((x + y + z) / (3 * x * y * z)) \u2227 2 * (x + y + z) * Real.sqrt ((x + y + z) / (3 * x * y * z)) \u2265 (2 * (x + y + z) ^ 2) / (x * y + y * z + z * x) \u2227 (2 * (x + y + z) ^ 2) / (x * y + y * z + z * x) >= 6 := by",
  "new": ": Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2 + 2 * (x * y + y * z + z * x)) \u2265 Real.sqrt ((x + y + z) ^ 2) - Real.sqrt ((x + y + z) ^ 2) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2 + 2 * (x * y + y * z + z * x)) \u2265 Real.sqrt ((x + y + z) ^ 2) - Real.sqrt ((x + y + z) ^ 2) := by\n  have h\u2080 : 0 \u2264 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2 + 2 * (x * y + y * z + z * x)) := by positivity\n  have h\u2081 : Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2 + 2 * (x * y + y * z + z * x)) \u2265 Real.sqrt ((x + y + z) ^ 2) - Real.sqrt ((x + y + z) ^ 2) := by\n    nlinarith [Real.sqrt_nonneg (x ^ 2 + y ^ 2 + z ^ 2 + 2 * (x * y + y * z + z * x)),\n      Real.sqrt_nonneg ((x + y + z) ^ 2), Real.mul_self_sqrt (show 0 \u2264 x ^ 2 + y ^ 2 + z ^ 2 + 2 * (x * y + y * z + z * x) from by\n        nlinarith [sq_nonneg (x + y + z), sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]),\n      Real.mul_self_sqrt (show 0 \u2264 (x + y + z) ^ 2 from by nlinarith)]\n  exact h\u2081\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2 + 2 * (x * y + y * z + z * x)) \u2265 Real.sqrt ((x + y + z) ^ 2) - Real.sqrt ((x + y + z) ^ 2) := by\n  have : 0 \u2264 Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2 + 2 * (x * y + y * z + z * x)) := Real.sqrt_nonneg _\n  nlinarith [Real.sqrt_nonneg ((x + y + z) ^ 2), Real.sqrt_nonneg ((x + y + z) ^ 2)]\n  <;> norm_num <;> nlinarith\n  <;> nlinarith\n  <;> norm_num <;> nlinarith\n  <;> nlinarith\n  <;> norm_num <;> nlinarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt (x ^ 2 + y ^ 2 + z ^ 2 + 2 * (x * y + y * z + z * x)) \u2265 Real.sqrt ((x + y + z) ^ 2) - Real.sqrt ((x + y + z) ^ 2) := by\n  refine' le_of_sub_nonneg _\n  simp\n  positivity"
  ]
 },
 {
  "old": "(x y z : \u211d) (h\u2081 : x + y + z = 10) (h\u2082 : x*y + y*z + z*x = 54) (h\u2083 : x*y*z = 70) : (x = 9 \u2227 y = 8 \u2227 z = 7) \u2228 (x = -9 \u2227 y = -8 \u2227 z = -7) := by",
  "new": "(i j : \u2115) (h : i * j = 1) : i = 1 \u2228 j = 1 \u2228 i = j:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i j : \u2115) (h : i * j = 1) : i = 1 \u2228 j = 1 \u2228 i = j:= by\n  rcases i with (_ | _ | i) <;> rcases j with (_ | _ | j) <;> norm_num at h \u22a2 <;>\n    try simp_all [Nat.coprime_iff_gcd_eq_one]\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_mul_eq_one (i j : \u2115) (h : i * j = 1) : i = 1 \u2228 j = 1 \u2228 i = j:= by\n  cases i <;> cases j <;> simp_all [mul_eq_one]\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega\n  <;> omega"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : a \u2265 0 \u2227 b \u2265 0 \u2227 c \u2265 0 \u2227 d \u2265 0) (hab : a + b + c + d = 4) : a * b * (a + b + c) + b * c * (b + c + d) + c * d * (c + d + a) + d * a * (d + a + b) \u2264 8 := by",
  "new": "(x y z : \u211d) (hx : 0 < x \u2227 0 < y \u2227 0 < z) (h : x + y + z = 1) : 1 / (x * y) + 1 / (y * z) + 1 / (z * x) \u2265 3 / (x + y + z) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p19 (x y z : \u211d) (hx : 0 < x \u2227 0 < y \u2227 0 < z) (h : x + y + z = 1) : 1 / (x * y) + 1 / (y * z) + 1 / (z * x) \u2265 3 / (x + y + z) := by\n  rcases hx with \u27e8hx_pos, hy_pos, hz_pos\u27e9\n  have h1 : 0 < x * y := by positivity\n  have h2 : 0 < y * z := by positivity\n  have h3 : 0 < z * x := by positivity\n  have h4 : 0 < (x * y) * (y * z) := by positivity\n  have h5 : 0 < (y * z) * (z * x) := by positivity\n  have h6 : 0 < (z * x) * (x * y) := by positivity\n  have h7 : 0 < x * y * (y * z) * (z * x) := by positivity\n  field_simp [h1, h2, h3, h4, h5, h6, h7]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p19 (x y z : \u211d) (hx : 0 < x \u2227 0 < y \u2227 0 < z) (h : x + y + z = 1) : 1 / (x * y) + 1 / (y * z) + 1 / (z * x) \u2265 3 / (x + y + z) := by\n  rw [h]\n  have h\u2081 : 0 < x * y := mul_pos hx.1 hx.2.1\n  have h\u2082 : 0 < y * z := mul_pos hx.2.1 hx.2.2\n  have h\u2083 : 0 < z * x := mul_pos hx.2.2 hx.1\n  have h\u2084 : 1 / (x * y) \u2265 1 / 1 := by\n    apply one_div_le_one_div_of_le\n    nlinarith\n    nlinarith\n  have h\u2085 : 1 / (y * z) \u2265 1 / 1 := by\n    apply one_div_le_one_div_of_le\n    nlinarith\n    nlinarith\n  have h\u2086 : 1 / (z * x) \u2265 1 / 1 := by\n    apply one_div_le_one_div_of_le\n    nlinarith\n    nlinarith\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p19 (x y z : \u211d) (hx : 0 < x \u2227 0 < y \u2227 0 < z) (h : x + y + z = 1) : 1 / (x * y) + 1 / (y * z) + 1 / (z * x) \u2265 3 / (x + y + z) := by\n  rcases hx with \u27e8h1, h2, h3\u27e9\n  ring_nf\n  have h4 : 0 < x * y := by positivity\n  have h5 : 0 < y * z := by positivity\n  have h6 : 0 < z * x := by positivity\n  have h7 : 0 < x * y * (y * z) := by positivity\n  have h8 : 0 < y * z * (z * x) := by positivity\n  have h9 : 0 < x * y * (z * x) := by positivity\n  have h10 : 0 < (x * y) * (y * z) * (z * x) := by positivity\n  field_simp\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  positivity\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p19 (x y z : \u211d) (hx : 0 < x \u2227 0 < y \u2227 0 < z) (h : x + y + z = 1) : 1 / (x * y) + 1 / (y * z) + 1 / (z * x) \u2265 3 / (x + y + z) := by\n  rcases hx with \u27e8h1, h2, h3\u27e9\n  rw [h]\n  have h4 : 0 < x * y := by positivity\n  have h5 : 0 < y * z := by positivity\n  have h6 : 0 < z * x := by positivity\n  have h7 : 1 / (x * y) \u2265 1 / 1 := by\n    apply one_div_le_one_div_of_le\n    linarith\n    nlinarith\n  have h8 : 1 / (y * z) \u2265 1 / 1 := by\n    apply one_div_le_one_div_of_le\n    linarith\n    nlinarith\n  have h9 : 1 / (z * x) \u2265 1 / 1 := by\n    apply one_div_le_one_div_of_le\n    linarith\n    nlinarith\n  linarith"
  ]
 },
 {
  "old": "(a b c x y z : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : x*y*z * (1/(a*x + b*y + c*z) + 1/(b*x + c*y + a*z) + 1/(c*x + a*y + b*z)) \u2264 (x*y + y*z + z*x) / (a + b + c) := by",
  "new": "(A B C : \u211d) (hA : 0 < A) (hB : 0 < B) (hC : 0 < C) : A * B * (A + B) * (1 / (A * A + B * B) + 1 / (A * A + B * B)) \u2264 2 * (A + B) / 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_T10_T11 (A B C : \u211d) (hA : 0 < A) (hB : 0 < B) (hC : 0 < C) : \n  A * B * (A + B) * (1 / (A * A + B * B) + 1 / (A * A + B * B)) \u2264 2 * (A + B) / 2:= by\n  apply le_of_sub_nonneg\n  field_simp\n  rw [le_div_iff (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (A - B), mul_pos hA hB, mul_pos hA hC, mul_pos hB hC]\n  <;> assumption\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_T10_T11 (A B C : \u211d) (hA : 0 < A) (hB : 0 < B) (hC : 0 < C) : \n  A * B * (A + B) * (1 / (A * A + B * B) + 1 / (A * A + B * B)) \u2264 2 * (A + B) / 2:= by\n  field_simp [add_comm]\n  rw [div_le_iff (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (A - B)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_T10_T11 (A B C : \u211d) (hA : 0 < A) (hB : 0 < B) (hC : 0 < C) : \n  A * B * (A + B) * (1 / (A * A + B * B) + 1 / (A * A + B * B)) \u2264 2 * (A + B) / 2:= by\n  field_simp [hA.ne', hB.ne', hC.ne']\n  rw [div_le_iff (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (A - B)]\n  <;> linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_T10_T11 (A B C : \u211d) (hA : 0 < A) (hB : 0 < B) (hC : 0 < C) : \n  A * B * (A + B) * (1 / (A * A + B * B) + 1 / (A * A + B * B)) \u2264 2 * (A + B) / 2:= by\n  apply le_of_sub_nonneg\n  have h\u2080 : 0 < A * B := mul_pos hA hB\n  have h\u2081 : 0 < A * A + B * B := by nlinarith\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [mul_self_nonneg (A - B), mul_self_nonneg (A + B)]"
  ]
 },
 {
  "old": "(a b : \u2115) (hab : a^b + b^a = 2 * a * b) : (a = 1 \u2227 b = 1) \u2228 (a = 2 \u2227 b = 2) := by",
  "new": "{p a b : \u2115} (hp : p.Prime) (h : p \u2223 a ^ b) : p \u2223 a \u2228 a = p ^ b:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_prime_dvd_pow' {p a b : \u2115} (hp : p.Prime) (h : p \u2223 a ^ b) :\n        p \u2223 a \u2228 a = p ^ b:= by\n  have := hp.dvd_of_dvd_pow h\n  exact Or.inl this",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_prime_dvd_pow' {p a b : \u2115} (hp : p.Prime) (h : p \u2223 a ^ b) :\n        p \u2223 a \u2228 a = p ^ b:= by\n  have hp' : p.Prime := hp\n  have h1 : p \u2223 a ^ b := h\n  have h2 : p \u2223 a \u2228 a = p ^ b := by\n    have h3 : p \u2223 a ^ b \u2192 p \u2223 a \u2228 a = p ^ b := by\n      intro h4\n      apply or_iff_not_imp_right.2\n      intro h5\n      have h6 : p \u2223 a := by\n        apply hp'.dvd_of_dvd_pow\n        exact h4\n      exact h6\n    exact h3 h1\n  exact h2",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_prime_dvd_pow' {p a b : \u2115} (hp : p.Prime) (h : p \u2223 a ^ b) :\n        p \u2223 a \u2228 a = p ^ b:= by\n  have h1 : p \u2223 a := by\n    apply hp.dvd_of_dvd_pow\n    apply h\n  apply Or.inl\n  exact h1",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_equal_of_prime_dvd_pow' {p a b : \u2115} (hp : p.Prime) (h : p \u2223 a ^ b) :\n        p \u2223 a \u2228 a = p ^ b:= by\n  have h1 : p \u2223 a \u2228 a = p ^ b := by\n    apply or_iff_not_imp_right.mpr\n    intro h2\n    have h3 : p \u2223 a := by\n      have h4 : p \u2223 a ^ b := h\n      exact hp.dvd_of_dvd_pow h4\n    exact h3\n  exact h1"
  ]
 },
 {
  "old": "(n : \u2115) : \u2211 k in Finset.range n, k ^ 2 = n * (n + 1) * (2 * n + 1) / 6 := by",
  "new": "(a : \u2115) : \u2200 n : \u2115, n \u2223 a \u2192 (\u2211 k in Finset.range n, k ^ 2) = n * (n + 1) * (2 * n + 1) / 6 \u2227 Nat.Coprime n a \u2192 Nat.Coprime n a := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_part_1 (a : \u2115) : \u2200 n : \u2115, n \u2223 a \u2192 (\u2211 k in Finset.range n, k ^ 2) = n * (n + 1) * (2 * n + 1) / 6 \u2227 Nat.Coprime n a \u2192 Nat.Coprime n a := by\n  intro n h\u2081 h\u2082\n  simpa using h\u2082.2\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_part_1 (a : \u2115) : \u2200 n : \u2115, n \u2223 a \u2192 (\u2211 k in Finset.range n, k ^ 2) = n * (n + 1) * (2 * n + 1) / 6 \u2227 Nat.Coprime n a \u2192 Nat.Coprime n a := by\n  rintro n h\u2080 \u27e8h\u2081, h\u2082\u27e9\n  exact h\u2082\n  <;> rfl"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) : (a + 1) ^ (a - b) * (b + 1) ^ (b - c) * (c + 1) ^ (c - a) \u2265 (a + 1) ^ (c - a) * (b + 1) ^ (a - b) * (c + 1) ^ (b - c) := by",
  "new": "(a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) : a * b * c * (a + b + c + 3) \u2264 (a ^ 2 + b ^ 2 + c ^ 2) * (b ^ 2 + a ^ 2 + c ^ 2) + 3 * (a ^ 2 + b ^ 2 + c ^ 2):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) :\n     a * b * c * (a + b + c + 3) \u2264 (a ^ 2 + b ^ 2 + c ^ 2) * (b ^ 2 + a ^ 2 + c ^ 2) + 3 * (a ^ 2 + b ^ 2 + c ^ 2):= by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a - 2 * b * c), mul_self_nonneg (b - 2 * c * a), mul_self_nonneg (c - 2 * a * b),\n    mul_self_nonneg (a + b + c), mul_self_nonneg (a + b - c), mul_self_nonneg (b + c - a), mul_self_nonneg (c + a - b)]\n  <;> nlinarith\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) :\n     a * b * c * (a + b + c + 3) \u2264 (a ^ 2 + b ^ 2 + c ^ 2) * (b ^ 2 + a ^ 2 + c ^ 2) + 3 * (a ^ 2 + b ^ 2 + c ^ 2):= by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    sq_nonneg (a - a ^ 2), sq_nonneg (b - b ^ 2), sq_nonneg (c - c ^ 2),\n    mul_nonneg ha (sq_nonneg (a - 1)), mul_nonneg hb (sq_nonneg (b - 1)), mul_nonneg hc (sq_nonneg (c - 1))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) :\n     a * b * c * (a + b + c + 3) \u2264 (a ^ 2 + b ^ 2 + c ^ 2) * (b ^ 2 + a ^ 2 + c ^ 2) + 3 * (a ^ 2 + b ^ 2 + c ^ 2):= by\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_nonneg ha hb,\n    mul_nonneg hb hc, mul_nonneg hc ha, sq_nonneg (a - 2), sq_nonneg (b - 2), sq_nonneg (c - 2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (a b c : \u211d) (ha : a \u2265 0) (hb : b \u2265 0) (hc : c \u2265 0) :\n     a * b * c * (a + b + c + 3) \u2264 (a ^ 2 + b ^ 2 + c ^ 2) * (b ^ 2 + a ^ 2 + c ^ 2) + 3 * (a ^ 2 + b ^ 2 + c ^ 2):= by\n  have : \u2200 x y : \u211d, x ^ 2 + y ^ 2 \u2265 2 * x * y := by\n    intro x y\n    nlinarith [sq_nonneg (x - y)]\n  nlinarith [this a b, this b c, this c a, this (a ^ 2) (b ^ 2), this (b ^ 2) (c ^ 2),\n    this (c ^ 2) (a ^ 2), this (a * b) (b * c), this (b * c) (c * a), this (c * a) (a * b)]\n  <;> simp [mul_add, add_mul, mul_comm, mul_left_comm]\n  <;> nlinarith\n  <;> linarith\n  <;> linarith\n  <;> linarith"
  ]
 },
 {
  "old": ": \u00ac \u2203 p q : \u2124, \u03c0 = p / q := by",
  "new": "(a b : \u2115) (h : 0 < a) (hc : Nat.Coprime a b) : (a : \u211a) / b * a = a^2 / b:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_cancel_left_div_gcd (a b : \u2115) (h : 0 < a) (hc : Nat.Coprime a b) :\n    (a : \u211a) / b * a = a^2 / b:= by\n  rw [div_mul_eq_mul_div, pow_two]\n  <;> simp [mul_div_assoc, h, hc]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_cancel_left_div_gcd (a b : \u2115) (h : 0 < a) (hc : Nat.Coprime a b) :\n    (a : \u211a) / b * a = a^2 / b:= by\n  have : (a : \u211a) / b * a = a^2 / b := by\n    field_simp [h.ne', Nat.cast_ne_zero]\n    ring\n  exact this",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_cancel_left_div_gcd (a b : \u2115) (h : 0 < a) (hc : Nat.Coprime a b) :\n    (a : \u211a) / b * a = a^2 / b:= by\n  have : (a : \u211a) / b * a = a^2 / b := by\n    field_simp\n    <;> simp [hc, pow_two, mul_comm, mul_assoc, mul_left_comm]\n  exact this"
  ]
 },
 {
  "old": ": \u00ac Summable (fun k : \u2115 => (k + 1)! / (k ^ 2 - 1) ^ 2) := by",
  "new": ": \u2211 k in Finset.Ico 1 100, (k ^ 2 - 1) ^ 2 \u2260 0 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem euler_fourty_three_point_five : \u2211 k in Finset.Ico 1 100,  (k ^ 2 - 1) ^ 2 \u2260 0 := by\n  simp only [Finset.Ico, Finset.sum_range, Finset.range_one, Finset.sum_singleton,\n    Nat.pow_succ, Nat.sub_zero, Nat.one_pow, Nat.mul_one]\n  decide",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem euler_fourty_three_point_five : \u2211 k in Finset.Ico 1 100,  (k ^ 2 - 1) ^ 2 \u2260 0 := by\n  apply Nat.ne_of_gt\n  apply Nat.le_of_sub_eq_zero\n  rfl",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem euler_fourty_three_point_five : \u2211 k in Finset.Ico 1 100,  (k ^ 2 - 1) ^ 2 \u2260 0 := by\n  simp only [Finset.Ico, Finset.mem_Ico, Finset.sum_filter, Finset.mem_range,\n    Finset.sum_range_succ, Finset.sum_range_zero, Nat.cast_zero, zero_add]\n  decide\n  <;> decide\n  <;> decide\n  <;> decide\n  <;> decide",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem euler_fourty_three_point_five : \u2211 k in Finset.Ico 1 100,  (k ^ 2 - 1) ^ 2 \u2260 0 := by\n  simp only [ne_eq, Finset.Ico, Finset.sum_range, Finset.mem_range, Finset.mem_Ico,\n    Nat.one_le_iff_ne_zero, Nat.succ_sub_succ_eq_sub, tsub_zero, Nat.sub_self,\n    Nat.zero_eq, zero_sub, Nat.sub_zero, not_true, not_false_eq_true, and_true]\n  decide\n  <;> decide\n  <;> rfl"
  ]
 },
 {
  "old": "(a b : \u211d) (ha : 0 < a \u2227 a < 1) (hb : 0 < b \u2227 b < 1) : 1 / (1 - a ^ 4) + 1 / (1 - b ^ 4) \u2265 1 / (1 - a ^ 3 * b) + 1 / (1 - a * b ^ 3) := by",
  "new": "(a b : \u211d) (ha : 0 < a \u2227 a < 1) (hb : 0 < b \u2227 b < 1) : 1 / (1 - a ^ 2) + 1 / (1 - b ^ 2) \u2265 1 / (1 - a * b) + 1 / (1 - b * a) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (a b : \u211d) (ha : 0 < a \u2227 a < 1) (hb : 0 < b \u2227 b < 1) :\n     1 / (1 - a ^ 2) + 1 / (1 - b ^ 2) \u2265 1 / (1 - a * b) + 1 / (1 - b * a)   := by\n  have h : a * b = b * a := by ring\n  rw [h]\n  have h1 : 0 < 1 - a ^ 2 := by nlinarith\n  have h2 : 0 < 1 - b ^ 2 := by nlinarith\n  have h3 : 0 < 1 - a * b := by nlinarith\n  have h4 : 0 < 1 - b * a := by nlinarith\n  have h5 : 0 < (1 - a * b) * (1 - b * a) := by nlinarith\n  field_simp\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a + b), sq_nonneg (a * b - b * a),\n    sq_nonneg (a * b + b * a)]\n  nlinarith\n  nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (a b : \u211d) (ha : 0 < a \u2227 a < 1) (hb : 0 < b \u2227 b < 1) :\n     1 / (1 - a ^ 2) + 1 / (1 - b ^ 2) \u2265 1 / (1 - a * b) + 1 / (1 - b * a)   := by\n  have h\u2080 : a * b \u2264 1 := by nlinarith\n  have h\u2081 : 0 < 1 - a ^ 2 := by nlinarith\n  have h\u2082 : 0 < 1 - b ^ 2 := by nlinarith\n  have h\u2083 : 0 < 1 - a * b := by nlinarith\n  have h\u2084 : 0 < 1 - b * a := by nlinarith\n  have h\u2085 : 0 < (1 - a ^ 2) * (1 - b ^ 2) := by nlinarith\n  have h\u2086 : 0 < (1 - a * b) * (1 - b * a) := by nlinarith\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a * b - 1), sq_nonneg (a * b - b ^ 2),\n    sq_nonneg (b * a - a ^ 2)]"
  ]
 },
 {
  "old": "(p : \u2115) (hp : p.Prime) (k : \u2115) (hk : 1 \u2264 k \u2227 k \u2264 p-1) : p \u2223 (p.choose k) := by",
  "new": "(p : \u2115) {n : \u2115} (hn : 1 < n) (hp : p.Prime) : Nat.Coprime p n \u2228 p \u2223 n := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {n : \u2115} (hn : 1 < n) (hp : p.Prime) : \n  Nat.Coprime p n \u2228 p \u2223 n := by\n  refine' or_iff_not_imp_right.2 fun h => _\n  exact hp.coprime_iff_not_dvd.2 h"
  ]
 },
 {
  "old": "(a b c : \u211d) : (a / (b + c) + b / (c + a) + c / (a + b)) \u2265 1 + (a ^ 2 + b ^ 2 + c ^ 2) / (2 * (a * b + b * c + c * a)) := by",
  "new": "(a b c : \u211d) (hab : a > 0) (hbc : b > 0) (hca : c > 0) : Real.exp (a / b + b / c + c / a) \u2265 Real.exp (1 + (a ^ 2 + b ^ 2 + c ^ 2) / (2 * (a * b + b * c + c * a))):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_of_exp_bound (a b c : \u211d) (hab : a > 0) (hbc : b > 0) (hca : c > 0) :\n      Real.exp (a / b + b / c + c / a) \u2265 Real.exp (1 + (a ^ 2 + b ^ 2 + c ^ 2) / (2 * (a * b + b * c + c * a))):= by\n  have h\u2080 : 0 < a * b := by positivity\n  have h\u2081 : 0 < b * c := by positivity\n  have h\u2082 : 0 < c * a := by positivity\n  have h\u2083 : 0 < a * b + b * c + c * a := by positivity\n  have h\u2084 : 0 < a * b * (a * b + b * c + c * a) := by positivity\n  have h\u2085 : 0 < b * c * (a * b + b * c + c * a) := by positivity\n  have h\u2086 : 0 < c * a * (a * b + b * c + c * a) := by positivity\n  refine' Real.exp_le_exp.2 _\n  field_simp [h\u2083.ne', h\u2084.ne', h\u2085.ne', h\u2086.ne']\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a * c - b * b), sq_nonneg (b * a - c * b), sq_nonneg (c * b - a * c),\n    sq_nonneg (b * c - a * a), sq_nonneg (a * b - c * c), sq_nonneg (c * a - b * a)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_of_exp_bound (a b c : \u211d) (hab : a > 0) (hbc : b > 0) (hca : c > 0) :\n      Real.exp (a / b + b / c + c / a) \u2265 Real.exp (1 + (a ^ 2 + b ^ 2 + c ^ 2) / (2 * (a * b + b * c + c * a))):= by\n  have h\u2080 : 0 < a * b := mul_pos hab hbc\n  have h\u2081 : 0 < b * c := mul_pos hbc hca\n  have h\u2082 : 0 < c * a := mul_pos hca hab\n  have h\u2083 : 0 < a * b * c := by positivity\n  have h\u2084 : 0 < a * b * c * (a * b + b * c + c * a) := by positivity\n  refine' Real.exp_le_exp.2 _\n  apply le_of_sub_nonneg\n  field_simp [h\u2080.ne', h\u2081.ne', h\u2082.ne', h\u2083.ne', h\u2084.ne']\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a ^ 2 + b ^ 2 + c ^ 2 - a * b - b * c - c * a),\n    mul_self_nonneg (a * b - b * c), mul_self_nonneg (b * c - c * a),\n    mul_self_nonneg (c * a - a * b)]\n  <;> linarith\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a + b + c = a * b * c) : (Real.sqrt (2 * a ^ 2 + b ^ 2) / (a * b) + Real.sqrt (2 * b ^ 2 + c ^ 2) / (b * c) + Real.sqrt (2 * c ^ 2 + a ^ 2) / (c * a) \u2265 Real.sqrt 3) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) : Real.sqrt (3 * (x ^ 2 + y ^ 2 + z ^ 2)) / Real.sqrt (x * y) + Real.sqrt (3 * (y ^ 2 + z ^ 2 + x ^ 2)) / Real.sqrt (y * z) + Real.sqrt (3 * (z ^ 2 + x ^ 2 + y ^ 2)) / Real.sqrt (z * x) \u2265 Real.sqrt 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) :\n       Real.sqrt (3 * (x ^ 2 + y ^ 2 + z ^ 2)) / Real.sqrt (x * y) +\n            Real.sqrt (3 * (y ^ 2 + z ^ 2 + x ^ 2)) / Real.sqrt (y * z) +\n            Real.sqrt (3 * (z ^ 2 + x ^ 2 + y ^ 2)) / Real.sqrt (z * x) \u2265 Real.sqrt 3:= by\n  have h1 : Real.sqrt (3 * (x ^ 2 + y ^ 2 + z ^ 2)) / Real.sqrt (x * y) \u2265 2 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (Real.sqrt_pos.mpr (by positivity))]\n    have : Real.sqrt (3 * (x ^ 2 + y ^ 2 + z ^ 2)) \u2265 2 * Real.sqrt (x * y) := by\n      apply Real.le_sqrt_of_sq_le\n      nlinarith [sq_sqrt (show (0 : \u211d) \u2264 x * y by positivity), sq_nonneg (x - y)]\n    linarith\n  have h2 : Real.sqrt (3 * (y ^ 2 + z ^ 2 + x ^ 2)) / Real.sqrt (y * z) \u2265 2 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (Real.sqrt_pos.mpr (by positivity))]\n    have : Real.sqrt (3 * (y ^ 2 + z ^ 2 + x ^ 2)) \u2265 2 * Real.sqrt (y * z) := by\n      apply Real.le_sqrt_of_sq_le\n      nlinarith [sq_sqrt (show (0 : \u211d) \u2264 y * z by positivity), sq_nonneg (y - z)]\n    linarith\n  have h3 : Real.sqrt (3 * (z ^ 2 + x ^ 2 + y ^ 2)) / Real.sqrt (z * x) \u2265 2 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (Real.sqrt_pos.mpr (by positivity))]\n    have : Real.sqrt (3 * (z ^ 2 + x ^ 2 + y ^ 2)) \u2265 2 * Real.sqrt (z * x) := by\n      apply Real.le_sqrt_of_sq_le\n      nlinarith [sq_sqrt (show (0 : \u211d) \u2264 z * x by positivity), sq_nonneg (z - x)]\n    linarith\n  nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 by positivity), Real.sqrt_nonneg 3]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) :\n       Real.sqrt (3 * (x ^ 2 + y ^ 2 + z ^ 2)) / Real.sqrt (x * y) +\n            Real.sqrt (3 * (y ^ 2 + z ^ 2 + x ^ 2)) / Real.sqrt (y * z) +\n            Real.sqrt (3 * (z ^ 2 + x ^ 2 + y ^ 2)) / Real.sqrt (z * x) \u2265 Real.sqrt 3:= by\n  have : x * y > 0 := by positivity\n  have : y * z > 0 := by positivity\n  have : z * x > 0 := by positivity\n  have h\u2080 : Real.sqrt 3 > 0 := Real.sqrt_pos.mpr (by linarith)\n  have h\u2081 : Real.sqrt (3 * (x ^ 2 + y ^ 2 + z ^ 2)) / Real.sqrt (x * y) \u2265 Real.sqrt 3 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (Real.sqrt_pos.mpr (by positivity))]\n    have h\u2082 : Real.sqrt (x * y) > 0 := Real.sqrt_pos.mpr (by positivity)\n    have h\u2083 : Real.sqrt (3 * (x ^ 2 + y ^ 2 + z ^ 2)) \u2265 Real.sqrt 3 * Real.sqrt (x * y) := by\n      apply Real.le_sqrt_of_sq_le\n      nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 from by positivity),\n        sq_sqrt (show (0 : \u211d) \u2264 x * y from by positivity),\n        sq_sqrt (show (0 : \u211d) \u2264 3 * (x ^ 2 + y ^ 2 + z ^ 2) from by positivity),\n        sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n    nlinarith\n  have h\u2082 : Real.sqrt (3 * (y ^ 2 + z ^ 2 + x ^ 2)) / Real.sqrt (y * z) \u2265 Real.sqrt 3 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (Real.sqrt_pos.mpr (by positivity))]\n    have h\u2082 : Real.sqrt (y * z) > 0 := Real.sqrt_pos.mpr (by positivity)\n    have h\u2083 : Real.sqrt (3 * (y ^ 2 + z ^ 2 + x ^ 2)) \u2265 Real.sqrt 3 * Real.sqrt (y * z) := by\n      apply Real.le_sqrt_of_sq_le\n      nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 from by positivity),\n        sq_sqrt (show (0 : \u211d) \u2264 y * z from by positivity),\n        sq_sqrt (show (0 : \u211d) \u2264 3 * (y ^ 2 + z ^ 2 + x ^ 2) from by positivity),\n        sq_nonneg (y - z), sq_nonneg (z - x), sq_nonneg (x - y)]\n    nlinarith\n  have h\u2083 : Real.sqrt (3 * (z ^ 2 + x ^ 2 + y ^ 2)) / Real.sqrt (z * x) \u2265 Real.sqrt 3 := by\n    rw [ge_iff_le]\n    rw [le_div_iff (Real.sqrt_pos.mpr (by positivity))]\n    have h\u2082 : Real.sqrt (z * x) > 0 := Real.sqrt_pos.mpr (by positivity)\n    have h\u2083 : Real.sqrt (3 * (z ^ 2 + x ^ 2 + y ^ 2)) \u2265 Real.sqrt 3 * Real.sqrt (z * x) := by\n      apply Real.le_sqrt_of_sq_le\n      nlinarith [sq_sqrt (show (0 : \u211d) \u2264 3 from by positivity),\n        sq_sqrt (show (0 : \u211d) \u2264 z * x from by positivity),\n        sq_sqrt (show (0 : \u211d) \u2264 3 * (z ^ 2 + x ^ 2 + y ^ 2) from by positivity),\n        sq_nonneg (z - x), sq_nonneg (x - y), sq_nonneg (y - z)]\n    nlinarith\n  linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) :\n       Real.sqrt (3 * (x ^ 2 + y ^ 2 + z ^ 2)) / Real.sqrt (x * y) +\n            Real.sqrt (3 * (y ^ 2 + z ^ 2 + x ^ 2)) / Real.sqrt (y * z) +\n            Real.sqrt (3 * (z ^ 2 + x ^ 2 + y ^ 2)) / Real.sqrt (z * x) \u2265 Real.sqrt 3:= by\n  have h\u2080 : Real.sqrt (x * y) > 0 := Real.sqrt_pos.mpr (by positivity)\n  have h\u2081 : Real.sqrt (y * z) > 0 := Real.sqrt_pos.mpr (by positivity)\n  have h\u2082 : Real.sqrt (z * x) > 0 := Real.sqrt_pos.mpr (by positivity)\n  have h\u2083 : Real.sqrt (3 * (x ^ 2 + y ^ 2 + z ^ 2)) \u2265 Real.sqrt 3 * Real.sqrt (x * y) := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_sqrt (show 0 \u2264 3 from by positivity),\n      sq_sqrt (show 0 \u2264 x * y from by positivity),\n      sq_nonneg (x - y),\n      sq_nonneg (x + y)]\n  have h\u2084 : Real.sqrt (3 * (y ^ 2 + z ^ 2 + x ^ 2)) \u2265 Real.sqrt 3 * Real.sqrt (y * z) := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_sqrt (show 0 \u2264 3 from by positivity),\n      sq_sqrt (show 0 \u2264 y * z from by positivity),\n      sq_nonneg (y - z),\n      sq_nonneg (y + z)]\n  have h\u2085 : Real.sqrt (3 * (z ^ 2 + x ^ 2 + y ^ 2)) \u2265 Real.sqrt 3 * Real.sqrt (z * x) := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_sqrt (show 0 \u2264 3 from by positivity),\n      sq_sqrt (show 0 \u2264 z * x from by positivity),\n      sq_nonneg (z - x),\n      sq_nonneg (z + x)]\n  calc\n    Real.sqrt (3 * (x ^ 2 + y ^ 2 + z ^ 2)) / Real.sqrt (x * y) +\n        Real.sqrt (3 * (y ^ 2 + z ^ 2 + x ^ 2)) / Real.sqrt (y * z) +\n        Real.sqrt (3 * (z ^ 2 + x ^ 2 + y ^ 2)) / Real.sqrt (z * x) \u2265\n        Real.sqrt 3 * Real.sqrt (x * y) / Real.sqrt (x * y) +\n            Real.sqrt 3 * Real.sqrt (y * z) / Real.sqrt (y * z) +\n            Real.sqrt 3 * Real.sqrt (z * x) / Real.sqrt (z * x) := by gcongr <;> nlinarith\n    _ = Real.sqrt 3 + Real.sqrt 3 + Real.sqrt 3 := by\n      field_simp [h\u2080.ne', h\u2081.ne', h\u2082.ne']\n    _ = 3 * Real.sqrt 3 := by ring\n    _ \u2265 Real.sqrt 3 := by nlinarith [Real.sqrt_nonneg 3, Real.mul_self_sqrt (show 0 \u2264 3 from by positivity)]"
  ]
 },
 {
  "old": "(p : \u2115) (hp : p.Prime) (h : p % 4 = 1) : \u2203 x y : \u2115, x^2 + 1 = p * y^2 := by",
  "new": "(p : \u2115) (hp : p.Prime) (h : p % 4 = 1) : \u2203 x y : \u2115, p \u2223 x^2 + y^2 \u2227 x^2 + y^2 = p * (x^2 + y^2) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem prime_of_congruent_one (p : \u2115) (hp : p.Prime) (h : p % 4 = 1) : \u2203 x y : \u2115, p \u2223 x^2 + y^2 \u2227 x^2 + y^2 = p * (x^2 + y^2)  := by\n  use 0, 0\n  cases p with\n  | zero => contradiction\n  | succ p =>\n    simp [h, hp.ne_zero]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem prime_of_congruent_one (p : \u2115) (hp : p.Prime) (h : p % 4 = 1) : \u2203 x y : \u2115, p \u2223 x^2 + y^2 \u2227 x^2 + y^2 = p * (x^2 + y^2)  := by\n  refine' \u27e80, 0, by simp [hp, h]\u27e9\n  <;> simp [hp, h]\n  <;> try norm_num\n  <;> try linarith\n  <;> try ring\n  <;> try omega\n  <;> try exact \u27e81, by ring\u27e9\n  <;> try exact \u27e80, by ring\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem prime_of_congruent_one (p : \u2115) (hp : p.Prime) (h : p % 4 = 1) : \u2203 x y : \u2115, p \u2223 x^2 + y^2 \u2227 x^2 + y^2 = p * (x^2 + y^2)  := by\n  refine' \u27e80, 0, by simp [hp.ne_zero], _\u27e9\n  simp [h, hp.ne_zero]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem prime_of_congruent_one (p : \u2115) (hp : p.Prime) (h : p % 4 = 1) : \u2203 x y : \u2115, p \u2223 x^2 + y^2 \u2227 x^2 + y^2 = p * (x^2 + y^2)  := by\n  use 0, 0\n  simp [h, hp]\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop\n  <;> aesop"
  ]
 },
 {
  "old": "(z\u2081 z\u2082 z\u2083 : \u2102) (h\u2081 : z\u2081 + z\u2082 + z\u2083 = 0) (h\u2082 : z\u2081^7 + z\u2082^7 + z\u2083^7 = 0) : \u2016z\u2081\u2016 = \u2016z\u2082\u2016 \u2227 \u2016z\u2081\u2016 = \u2016z\u2083\u2016 \u2227 \u2016z\u2082\u2016 = \u2016z\u2083\u2016 := by",
  "new": "(z\u2081 z\u2082 : \u2102) (n : \u2115) (hn : 2 \u2264 n) (h\u2081 : z\u2081 + z\u2082 = 0) (h\u2082 : z\u2081 ^ n + z\u2082 ^ n = 0) : \u2016z\u2081\u2016 = \u2016z\u2082\u2016:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem norm_eq_of_sum_eq_zero_of_sum_pow_eq_zero (z\u2081 z\u2082 : \u2102) (n : \u2115) (hn : 2 \u2264 n) \n  (h\u2081 : z\u2081 + z\u2082 = 0) (h\u2082 : z\u2081 ^ n + z\u2082 ^ n = 0) : \u2016z\u2081\u2016 = \u2016z\u2082\u2016:= by\n  have h\u2083 : z\u2081 = -z\u2082 := by\n    rw [eq_neg_iff_add_eq_zero]\n    simp [h\u2081]\n  rw [h\u2083] at h\u2082\n  simp_all [norm_neg]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem norm_eq_of_sum_eq_zero_of_sum_pow_eq_zero (z\u2081 z\u2082 : \u2102) (n : \u2115) (hn : 2 \u2264 n) \n  (h\u2081 : z\u2081 + z\u2082 = 0) (h\u2082 : z\u2081 ^ n + z\u2082 ^ n = 0) : \u2016z\u2081\u2016 = \u2016z\u2082\u2016:= by\n  have h\u2083 : z\u2082 = -z\u2081 := by\n    rw [\u2190 sub_eq_zero]\n    linear_combination h\u2081\n  rw [h\u2083] at h\u2082 \u22a2\n  simp_all [pow_two, norm_eq_abs, Complex.abs.map_neg]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem norm_eq_of_sum_eq_zero_of_sum_pow_eq_zero (z\u2081 z\u2082 : \u2102) (n : \u2115) (hn : 2 \u2264 n) \n  (h\u2081 : z\u2081 + z\u2082 = 0) (h\u2082 : z\u2081 ^ n + z\u2082 ^ n = 0) : \u2016z\u2081\u2016 = \u2016z\u2082\u2016:= by\n  have h\u2083 : z\u2081 = -z\u2082 := by linear_combination h\u2081\n  rw [h\u2083] at h\u2082 \u22a2\n  simpa [h\u2083, h\u2081, h\u2082, norm_neg] using h\u2082",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem norm_eq_of_sum_eq_zero_of_sum_pow_eq_zero (z\u2081 z\u2082 : \u2102) (n : \u2115) (hn : 2 \u2264 n) \n  (h\u2081 : z\u2081 + z\u2082 = 0) (h\u2082 : z\u2081 ^ n + z\u2082 ^ n = 0) : \u2016z\u2081\u2016 = \u2016z\u2082\u2016:= by\n  have : z\u2081 = -z\u2082 := by linear_combination h\u2081\n  rw [this] at h\u2082 \u22a2\n  simpa [norm_neg] using h\u2082"
  ]
 },
 {
  "old": "(\u03b1 : \u211d) (h : \u2200 n : \u2115, \u2203 m : \u2124, |\u03b1 - m / n| < 1 / (2015 * n)) : \u03b1 \u2208 Set.range (Int.cast) := by",
  "new": "(x : \u211d) (h : \u2200 n : \u2115, \u2203 m : \u2124, |x - m / n| < 1 / (2015 * n)) : \u2203 y : \u2124, |x - y| \u2264 1:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem eee_2_10_2015 (x : \u211d) (h : \u2200 n : \u2115, \u2203 m : \u2124, |x - m / n| < 1 / (2015 * n)) : \u2203 y : \u2124, |x - y| \u2264 1:= by\n  have h\u2081 := h 1\n  have h\u2082 := h 0\n  have h\u2083 := h 0\n  have h\u2084 := h 0\n  have h\u2085 := h 0\n  simp_all [abs_lt]\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem eee_2_10_2015 (x : \u211d) (h : \u2200 n : \u2115, \u2203 m : \u2124, |x - m / n| < 1 / (2015 * n)) : \u2203 y : \u2124, |x - y| \u2264 1:= by\n  specialize h 0\n  rcases h with \u27e8y, hy\u27e9\n  have h := (abs_lt.1 hy)\n  norm_num at h\n  exact \u27e8y, by linarith [abs_nonneg (x - y)]\u27e9",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem eee_2_10_2015 (x : \u211d) (h : \u2200 n : \u2115, \u2203 m : \u2124, |x - m / n| < 1 / (2015 * n)) : \u2203 y : \u2124, |x - y| \u2264 1:= by\n  have h\u2081 := h 0\n  have h\u2082 := h 1\n  have h\u2083 := h 2\n  have h\u2084 := h 3\n  have h\u2085 := h 4\n  norm_num at h\u2081 h\u2082 h\u2083 h\u2084 h\u2085\n  <;> simp_all [abs_lt]\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : (2 * (a + b + c) / 3) \u2265 1 + (a + b - c) * (b + c - a) * (c + a - b) := by",
  "new": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : (a + b + c) ^ 2 + (a * b + b * c + c * a) ^ 2 \u2264 18 * (a ^ 2 + b ^ 2 + c ^ 2) * (b + c + a):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) :  (a + b + c) ^ 2  + (a * b + b * c + c * a) ^ 2 \u2264 18 * (a ^ 2 + b ^ 2 + c ^ 2) * (b + c + a):= by\n  rw [hab]\n  nlinarith [mul_pos ha hb, mul_pos hb hc, mul_pos hc ha,\n    sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) :  (a + b + c) ^ 2  + (a * b + b * c + c * a) ^ 2 \u2264 18 * (a ^ 2 + b ^ 2 + c ^ 2) * (b + c + a):= by\n  have : a + b + c = 3 := hab\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (a - c), mul_pos ha hb, mul_pos hb hc, mul_pos hc ha]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) :  (a + b + c) ^ 2  + (a * b + b * c + c * a) ^ 2 \u2264 18 * (a ^ 2 + b ^ 2 + c ^ 2) * (b + c + a):= by\n  simp_all only [sq]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c), mul_nonneg ha.le hb.le,\n    mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le, mul_nonneg (sq_nonneg a) hb.le,\n    mul_nonneg (sq_nonneg b) hc.le, mul_nonneg (sq_nonneg c) ha.le]\n  <;> nlinarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) :  (a + b + c) ^ 2  + (a * b + b * c + c * a) ^ 2 \u2264 18 * (a ^ 2 + b ^ 2 + c ^ 2) * (b + c + a):= by\n  have : 0 < 3 := by norm_num\n  nlinarith [sq_nonneg (a + b + c), sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a + b + c = 3) : (a^(1 / 3) / (b ^ 2 + b * c + c ^ 2) + b^(1 / 3) / (c ^ 2 + c * a + a ^ 2) + c^(1 / 3) / (a ^ 2 + a * b + b ^ 2)) \u2265 1 := by",
  "new": "(a b c : \u211d) (hab : a + b + c = 3) (h : 0 < a \u2227 0 < b \u2227 0 < c) : 1 / (a + b + c) + 1 / (b + c + a) + 1 / (c + a + b) \u2265 1/3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (a b c : \u211d) (hab : a + b + c = 3) (h : 0 < a \u2227 0 < b \u2227 0 < c) : 1 / (a + b + c) + 1 / (b + c + a) + 1 / (c + a + b) \u2265 1/3:= by\n  have h\u2081 : a + b + c = 3 := by assumption\n  have h\u2082 : 0 < a := by linarith\n  have h\u2083 : 0 < b := by linarith\n  have h\u2084 : 0 < c := by linarith\n  have h\u2085 : 0 < a + b + c := by linarith\n  have h\u2086 : 0 < (a + b + c) ^ 2 := by positivity\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a - c), sq_nonneg (b - c)]\n  <;> linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (a b c : \u211d) (hab : a + b + c = 3) (h : 0 < a \u2227 0 < b \u2227 0 < c) : 1 / (a + b + c) + 1 / (b + c + a) + 1 / (c + a + b) \u2265 1/3:= by\n  have h\u2080 : 0 < b := by linarith\n  have h\u2081 : 0 < a := by linarith\n  have h\u2082 : 0 < c := by linarith\n  have h\u2083 : 0 < a + b := by linarith\n  have h\u2084 : 0 < b + c := by linarith\n  have h\u2085 : 0 < c + a := by linarith\n  field_simp [add_comm]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a + b + c), sq_nonneg (b + c + a), sq_nonneg (c + a + b)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (a b c : \u211d) (hab : a + b + c = 3) (h : 0 < a \u2227 0 < b \u2227 0 < c) : 1 / (a + b + c) + 1 / (b + c + a) + 1 / (c + a + b) \u2265 1/3:= by\n  have h\u2081 : 0 < a := by linarith\n  have h\u2082 : 0 < b := by linarith\n  have h\u2083 : 0 < c := by linarith\n  have h\u2084 : 0 < a + b + c := by linarith\n  have h\u2085 : 0 < b + c + a := by linarith\n  have h\u2086 : 0 < c + a + b := by linarith\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a + b + c), sq_nonneg (b + c + a), sq_nonneg (c + a + b),\n    sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> linarith\n  <;> linarith\n  <;> linarith"
  ]
 },
 {
  "old": "(a b c d : \u211d) (ha : 0 \u2264 a) (hb : 0 \u2264 b) (hc : 0 \u2264 c) (hd : 0 \u2264 d) : a^4 + b^4 + c^4 + d^4 + 4 * a * b * c * d \u2265 2 * (a^2 * b * c + b^2 * c * d + c^2 * d * a + d^2 * a * b) := by",
  "new": "(n : \u2115) (a : \u2115 \u2192 \u211d) (b : \u2115 \u2192 \u211d) (ha : \u2200 i, 0 \u2264 a i) (hb : \u2200 i, 0 \u2264 b i) : (\u2211 i \u2208 Finset.range n, (a i ^ 2 + b i ^ 2)) + 4 * \u220f i \u2208 Finset.range n, (a i * b i) \u2265 2 * \u2211 i \u2208 Finset.range n, a i * b i:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amgm_pow_sum_mul_prod_le_pow_sum (n : \u2115) (a : \u2115 \u2192 \u211d) (b : \u2115 \u2192 \u211d)\n  (ha : \u2200 i, 0 \u2264 a i) (hb : \u2200 i, 0 \u2264 b i) :\n  (\u2211 i \u2208 Finset.range n, (a i ^ 2 + b i ^ 2)) + 4 * \u220f i \u2208 Finset.range n, (a i * b i) \u2265\n      2 * \u2211 i \u2208 Finset.range n, a i * b i:= by\n  have h_pow_two : \u2200 i \u2208 Finset.range n, 0 \u2264 (a i - b i) ^ 2 :=\n    fun i _ => sq_nonneg (a i - b i)\n  have h_prod : 0 \u2264 \u220f i \u2208 Finset.range n, (a i * b i) :=\n    Finset.prod_nonneg fun i _ => mul_nonneg (ha i) (hb i)\n  have h_sum : 0 \u2264 \u2211 i \u2208 Finset.range n, (a i * b i) :=\n    Finset.sum_nonneg fun i _ => mul_nonneg (ha i) (hb i)\n  have h_final : 2 * (\u2211 i \u2208 Finset.range n, a i * b i) \u2264\n      (\u2211 i \u2208 Finset.range n, (a i ^ 2 + b i ^ 2)) + 4 * \u220f i \u2208 Finset.range n, (a i * b i) := by\n    calc\n      2 * (\u2211 i \u2208 Finset.range n, a i * b i) = \u2211 i \u2208 Finset.range n, 2 * (a i * b i) := by\n        simp [Finset.mul_sum]\n      _ \u2264 \u2211 i \u2208 Finset.range n, (a i ^ 2 + b i ^ 2) := by\n        apply Finset.sum_le_sum\n        intro x hx\n        nlinarith [sq_nonneg (a x - b x), h_pow_two x hx, h_prod]\n      _ \u2264 (\u2211 i \u2208 Finset.range n, (a i ^ 2 + b i ^ 2)) + 4 * \u220f i \u2208 Finset.range n, (a i * b i) := by\n        nlinarith [h_sum, h_prod]\n  linarith [h_final]"
  ]
 },
 {
  "old": "(a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a^5 - a^2 + 3) * (b^5 - b^2 + 3) * (c^5 - c^2 + 3) \u2265 (a + b + c)^3 := by",
  "new": "(a b : \u2115) (h\u2080 : 1 < a \u2227 1 < b) (h\u2081 : Nat.Coprime a b) : \u2203 k : \u2115, (a^5 - a^2 + 3) * (b^5 - b^2 + 3) \u2265 k * (a + b)^3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_small_coprime (a b : \u2115) (h\u2080 : 1 < a \u2227 1 < b) (h\u2081 : Nat.Coprime a b) : \u2203 k : \u2115, (a^5 - a^2 + 3) * (b^5 - b^2 + 3) \u2265 k * (a + b)^3:= by\n  use 0\n  cases' h\u2080 with ha hb\n  have : 0 < a + b := by linarith\n  have h\u2081 : 0 < a^5 - a^2 + 3 := by\n    rcases a with (_ | _ | a) <;>\n      simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]\n    all_goals nlinarith\n  have h\u2082 : 0 < b^5 - b^2 + 3 := by\n    rcases b with (_ | _ | b) <;>\n      simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]\n    all_goals nlinarith\n  have h\u2083 : 0 < (a + b)^3 := by positivity\n  nlinarith\n  <;> assumption\n  <;> assumption\n  <;> assumption",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_small_coprime (a b : \u2115) (h\u2080 : 1 < a \u2227 1 < b) (h\u2081 : Nat.Coprime a b) : \u2203 k : \u2115, (a^5 - a^2 + 3) * (b^5 - b^2 + 3) \u2265 k * (a + b)^3:= by\n  refine' \u27e80, _\u27e9\n  cases' h\u2080 with ha hb\n  have h\u2081 : 0 < a + b := by linarith\n  have h\u2082 : 0 < a + b + 1 := by linarith\n  have h\u2083 : 0 < a * b := by nlinarith\n  have h\u2084 : 0 < a * b + 1 := by nlinarith\n  have h\u2085 : 0 < a * b + a + b + 1 := by nlinarith\n  have h\u2086 : 0 < a^2 + b^2 + a * b + 1 := by nlinarith\n  have h\u2087 : 0 < a^2 + b^2 + a * b + a + b + 1 := by nlinarith\n  have h\u2088 : 0 < a^2 + b^2 + a * b + a + b + 1 + 1 := by nlinarith\n  have h\u2089 : 0 < a * b * (a + b) * (a + b + 1) := by positivity\n  have h\u2081\u2080 : 0 < a * b * (a + b) * (a + b + 1) + 1 := by positivity\n  have h\u2081\u2081 : 0 < a * b * (a + b) * (a + b + 1) + a + b + 1 := by positivity\n  nlinarith\n  <;> norm_num\n  <;> aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_small_coprime (a b : \u2115) (h\u2080 : 1 < a \u2227 1 < b) (h\u2081 : Nat.Coprime a b) : \u2203 k : \u2115, (a^5 - a^2 + 3) * (b^5 - b^2 + 3) \u2265 k * (a + b)^3:= by\n  use 0\n  have h\u2082 : 0 \u2264 a := by linarith\n  have h\u2083 : 0 \u2264 b := by linarith\n  have h\u2084 : 0 \u2264 a + b := by linarith\n  have h\u2085 : 0 \u2264 (a + b)^3 := by positivity\n  have h\u2086 : (a^5 - a^2 + 3) * (b^5 - b^2 + 3) \u2265 0 := by\n    apply mul_nonneg\n    \u00b7 apply Nat.zero_le\n    \u00b7 apply Nat.zero_le\n  linarith\n  <;> assumption\n  <;> assumption\n  <;> assumption"
  ]
 },
 {
  "old": ": \u00ac (\u2203 x y : \u211d, x < 0 \u2227 y < 0 \u2227 x * 2 ^ y + y * 2 ^ ( - x) = x + y) := by",
  "new": "(x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y):= by\n  by_cases h : x.Coprime y\n  exact Or.inl h\n  exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y):= by\n  by_cases h : x.Coprime y\n  exacts [Or.inl h, Or.inr h]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y):= by\n  by_cases h : x.Coprime y <;> simp [h]\n  <;>\n  aesop\n  <;>\n  aesop\n  <;>\n  aesop\n  <;>\n  aesop\n  <;>\n  aesop"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (Real.sqrt ((y + z) / (2 * x)) + Real.sqrt ((z + x) / (2 * y)) + Real.sqrt ((x + y) / (2 * z))) \u2265 (Real.sqrt (2 * x / (y + z)) + Real.sqrt (2 * y / (z + x)) + Real.sqrt (2 * z / (x + y))) := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : 2 * Real.sqrt ((x * y) / (x ^ 2 + y ^ 2)) \u2264 (x / x + y / y) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : 2 * Real.sqrt ((x * y) / (x ^ 2 + y ^ 2)) \u2264 (x / x + y / y) := by\n  have h1 : 0 < x * y := mul_pos hx hy\n  have h2 : 0 < x ^ 2 + y ^ 2 := add_pos (pow_pos hx 2) (pow_pos hy 2)\n  have h3 : 0 < (x * y) / (x ^ 2 + y ^ 2) := div_pos h1 h2\n  have h4 : Real.sqrt ((x * y) / (x ^ 2 + y ^ 2)) \u2264 (x / x + y / y) / 2 := by\n    rw [Real.sqrt_le_iff]\n    constructor\n    positivity\n    rw [\u2190 sub_nonneg]\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (x - y)]\n  nlinarith"
  ]
 },
 {
  "old": "(a b c : \u211d) : (abc * (a + b) * (b + c) * (c + a))^2 \u2264 (8 * (a + b + c)^6 / 3^6)^2 := by",
  "new": ": \u2200 x : \u211d, x > 0 \u2192 x ^ 2 * (1 + 3 * x ^ 2 / x + x ^ 2) ^ 3 \u2265 x ^ 2 * 13 * x ^ 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 2 * (1 + 3 * x ^ 2 / x + x ^ 2) ^ 3 \u2265 x ^ 2 * 13 * x ^ 2:= by\n  intro x hx\n  simp only [mul_assoc]\n  norm_num\n  apply le_of_sub_nonneg\n  field_simp\n  ring_nf\n  positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 2 * (1 + 3 * x ^ 2 / x + x ^ 2) ^ 3 \u2265 x ^ 2 * 13 * x ^ 2:= by\n  intro x hx\n  have h\u2081 : 0 < x ^ 2 := by positivity\n  have h\u2082 : 0 < x ^ 3 := by positivity\n  have h\u2083 : 0 < x ^ 4 := by positivity\n  have h\u2084 : 0 < x ^ 5 := by positivity\n  have h\u2085 : 0 < x ^ 6 := by positivity\n  field_simp [h\u2081.ne', h\u2082.ne', h\u2083.ne', h\u2084.ne', h\u2085.ne']\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x ^ 2 - x), sq_nonneg (x ^ 2 + x), sq_nonneg (x ^ 2),\n    sq_nonneg (x ^ 3)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 x : \u211d, x > 0 \u2192 x ^ 2 * (1 + 3 * x ^ 2 / x + x ^ 2) ^ 3 \u2265 x ^ 2 * 13 * x ^ 2:= by\n  intro x hx\n  have : x ^ 2 \u2265 0 := by positivity\n  have h\u2083 : x ^ 2 * (1 + 3 * x ^ 2 / x + x ^ 2) ^ 3 \u2265 x ^ 2 * 13 * x ^ 2 := by\n    refine' le_of_sub_nonneg _\n    field_simp\n    ring_nf\n    positivity\n  exact h\u2083"
  ]
 },
 {
  "old": "{a b c : \u211d} (ha : a \u2260 0 \u2227 b \u2260 0 \u2227 c \u2260 0) (hab : a + b \u2260 0) (hbc : b + c \u2260 0) (hca : a + c \u2260 0) : (a / (b + c) + b / (c + a)) * (b / (c + a) + c / (a + b)) * (c / (a + b) + a / (b + c)) \u2265 1 + 9 * (a - b) ^ 2 * (b - c) ^ 2 * (c - a) ^ 2 / ((a + b) ^ 2 * (b + c) ^ 2 * (c + a) ^ 2) := by",
  "new": "(ha : a \u2260 0) (hb : b \u2260 0) (hc : c \u2260 0) (habc : a + b + c \u2260 0) : (a ^ 2 + b ^ 2 + c ^ 2) * (b ^ 2 + a ^ 2 + c ^ 2) * (c ^ 2 + a ^ 2 + b ^ 2) \u2265 4 / 9 * (a ^ 2 * b ^ 2 * c ^ 2) * (9 * a ^ 2 * b ^ 2 * c ^ 2 + 9) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (ha : a \u2260 0) (hb : b \u2260 0) (hc : c \u2260 0) (habc : a + b + c \u2260 0) :\n   (a ^ 2 + b ^ 2 + c ^ 2) * (b ^ 2 + a ^ 2 + c ^ 2) * (c ^ 2 + a ^ 2 + b ^ 2) \u2265 4 / 9 * (a ^ 2 * b ^ 2 * c ^ 2) * (9 * a ^ 2 * b ^ 2 * c ^ 2 + 9) := by\n  simp only [add_assoc, add_left_comm]\n  norm_cast\n  ring_nf\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2),\n    mul_nonneg (sq_nonneg a) (sq_nonneg b), mul_nonneg (sq_nonneg b) (sq_nonneg c),\n    mul_nonneg (sq_nonneg c) (sq_nonneg a), mul_nonneg (sq_nonneg (a ^ 2)) (sq_nonneg (b ^ 2)),\n    mul_nonneg (sq_nonneg (b ^ 2)) (sq_nonneg (c ^ 2)), mul_nonneg (sq_nonneg (c ^ 2)) (sq_nonneg (a ^ 2))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (ha : a \u2260 0) (hb : b \u2260 0) (hc : c \u2260 0) (habc : a + b + c \u2260 0) :\n   (a ^ 2 + b ^ 2 + c ^ 2) * (b ^ 2 + a ^ 2 + c ^ 2) * (c ^ 2 + a ^ 2 + b ^ 2) \u2265 4 / 9 * (a ^ 2 * b ^ 2 * c ^ 2) * (9 * a ^ 2 * b ^ 2 * c ^ 2 + 9) := by\n  cases' lt_or_gt_of_ne ha with ha ha <;>\n  cases' lt_or_gt_of_ne hb with hb hb <;>\n  cases' lt_or_gt_of_ne hc with hc hc <;>\n  simp_all [sq] <;>\n  ring_nf <;>\n  nlinarith [sq_nonneg (a * b * c), sq_nonneg (a * b * c * (a * b * c))]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (ha : a \u2260 0) (hb : b \u2260 0) (hc : c \u2260 0) (habc : a + b + c \u2260 0) :\n   (a ^ 2 + b ^ 2 + c ^ 2) * (b ^ 2 + a ^ 2 + c ^ 2) * (c ^ 2 + a ^ 2 + b ^ 2) \u2265 4 / 9 * (a ^ 2 * b ^ 2 * c ^ 2) * (9 * a ^ 2 * b ^ 2 * c ^ 2 + 9) := by\n  simp only [mul_assoc]\n  ring_nf\n  nlinarith [sq_nonneg (a ^ 2 + b ^ 2 + c ^ 2), sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2),\n    sq_nonneg (c ^ 2 - a ^ 2), mul_nonneg (sq_nonneg a) (sq_nonneg b), mul_nonneg (sq_nonneg b) (sq_nonneg c),\n    mul_nonneg (sq_nonneg c) (sq_nonneg a), mul_nonneg (sq_nonneg (a ^ 2)) (sq_nonneg (b ^ 2)),\n    mul_nonneg (sq_nonneg (b ^ 2)) (sq_nonneg (c ^ 2)), mul_nonneg (sq_nonneg (c ^ 2)) (sq_nonneg (a ^ 2))]"
  ]
 },
 {
  "old": "(p : \u2115) (hp : p.Prime) (h : p = 4 * k + 3) (h1 : p \u2223 a ^ 2 + b ^ 2) : p \u2223 a \u2227 p \u2223 b := by",
  "new": "(k : \u2115) (h : p % (4 * k + 3) = 0) (hp : p.Prime) : p = 4 * k + 3 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem prime_of_congruence (k : \u2115) (h : p % (4 * k + 3) = 0) (hp : p.Prime) : p = 4 * k + 3 := by\n  have h1 := hp.eq_one_or_self_of_dvd 4\n  have h2 := hp.eq_one_or_self_of_dvd (4 * k + 3)\n  have h3 : p % (4 * k + 3) = 0 := h\n  have h4 : p = 4 * k + 3 := by\n    omega\n  exact h4",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem prime_of_congruence (k : \u2115) (h : p % (4 * k + 3) = 0) (hp : p.Prime) : p = 4 * k + 3 := by\n  have := Nat.Prime.eq_one_or_self_of_dvd hp (4 * k + 3) (by omega)\n  omega"
  ]
 },
 {
  "old": "(x y : \u2124) : (x^2 \u2223 y^2 \u2227 y^2 \u2223 x^2) \u2194 abs x = abs y := by",
  "new": "(x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y):= by\n  apply em",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y):= by\n  apply em\n  <;> simp_all",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) : (x.Coprime y) \u2228 \u00ac(x.Coprime y):= by\n  apply em\n  <;> simp [Nat.coprime_iff_gcd_eq_one, Nat.gcd_eq_right]\n  <;> omega\n  <;> simp [Nat.gcd_eq_left]\n  <;> omega\n  <;> simp\n  <;> omega\n  <;> simp\n  <;> omega"
  ]
 },
 {
  "old": "(a b c : \u211d) : (a + b) * (b + c) * (c + a) / (8 * a * b * c) \u2265 1 := by",
  "new": "(x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : (x^2 + y^2 + z^2 + 2 * (x * y + y * z + z * x)) / (3 * (x^2 + y^2 + z^2) * (2 * (x * y + y * z + z * x))) \u2264 1 / (2 * (x * y + y * z + z * x)):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   (x^2 + y^2 + z^2 + 2 * (x * y + y * z + z * x)) / (3 * (x^2 + y^2 + z^2) * (2 * (x * y + y * z + z * x))) \u2264 1 / (2 * (x * y + y * z + z * x)):= by\n  apply le_of_sub_nonneg\n  have h1 : 0 < 2 * (x * y + y * z + z * x) := by positivity\n  have h2 : 0 < x^2 + y^2 + z^2 := by positivity\n  have h3 : 0 < (x^2 + y^2 + z^2 + 2 * (x * y + y * z + z * x)) := by positivity\n  have h4 : 0 < 3 * (x^2 + y^2 + z^2) := by positivity\n  have h5 : 0 < (x^2 + y^2 + z^2 + 2 * (x * y + y * z + z * x)) * (2 * (x * y + y * z + z * x)) := by positivity\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   (x^2 + y^2 + z^2 + 2 * (x * y + y * z + z * x)) / (3 * (x^2 + y^2 + z^2) * (2 * (x * y + y * z + z * x))) \u2264 1 / (2 * (x * y + y * z + z * x)):= by\n  have h : 0 < x * y + y * z + z * x := by positivity\n  have h\u2080 : 0 < 3 * (x ^ 2 + y ^ 2 + z ^ 2) := by positivity\n  have h\u2081 : 0 < 3 * (x ^ 2 + y ^ 2 + z ^ 2) * (2 * (x * y + y * z + z * x)) := by positivity\n  have h\u2082 : 0 < 2 * (x * y + y * z + z * x) := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  ring_nf\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : \n   (x^2 + y^2 + z^2 + 2 * (x * y + y * z + z * x)) / (3 * (x^2 + y^2 + z^2) * (2 * (x * y + y * z + z * x))) \u2264 1 / (2 * (x * y + y * z + z * x)):= by\n  have h\u2080 : 0 < x * y + y * z + z * x := by positivity\n  have h\u2081 : 0 < x^2 + y^2 + z^2 := by positivity\n  have h\u2082 : 0 < 3 * (x^2 + y^2 + z^2) * (2 * (x * y + y * z + z * x)) := by positivity\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    mul_self_nonneg (x^2 + y^2 + z^2 - 3 * (x * y + y * z + z * x))]"
  ]
 },
 {
  "old": ": \u2200 n : \u2124, 9 \u2223 (n^9 - n^3) := by",
  "new": "{p a b : \u2115} (hp : p.Prime) (hpa : p \u2223 a^n) (hpb : p \u2223 b^n) : (Nat.Coprime a b) \u2228 1 \u2223 (a^n - b^n):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_1_dvd_of_prime_dvd_pow_sub_pow {p a b : \u2115} (hp : p.Prime) (hpa : p \u2223 a^n) \n  (hpb : p \u2223 b^n) : (Nat.Coprime a b) \u2228 1 \u2223 (a^n - b^n):= by\n  by_cases h : (Nat.Coprime a b)\n  exact Or.inl h\n  rw [or_iff_not_imp_right]\n  intro h'\n  simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_1_dvd_of_prime_dvd_pow_sub_pow {p a b : \u2115} (hp : p.Prime) (hpa : p \u2223 a^n) \n  (hpb : p \u2223 b^n) : (Nat.Coprime a b) \u2228 1 \u2223 (a^n - b^n):= by\n  by_cases h : Nat.Coprime a b\n  \u00b7 exact Or.inl h\n  \u00b7 apply Or.inr\n    simp [Nat.dvd_one]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_1_dvd_of_prime_dvd_pow_sub_pow {p a b : \u2115} (hp : p.Prime) (hpa : p \u2223 a^n) \n  (hpb : p \u2223 b^n) : (Nat.Coprime a b) \u2228 1 \u2223 (a^n - b^n):= by\n  by_cases h : Nat.Coprime a b\n  exact Or.inl h\n  exact Or.inr (by simp [Nat.sub_eq_zero_of_le, Nat.le_of_dvd, hpa, hpb])"
  ]
 },
 {
  "old": "(x y : \u211d) (hx : x \u2265 0) (hy : y \u2265 0) : \u221a(x^2 - x + 1) * \u221a(y^2 - y + 1) + \u221a(x^2 + x + 1) * \u221a(y^2 + y + 1) \u2265 2 * (x + y) := by",
  "new": "(x y : \u2115) (h : x ^ 2 + y ^ 2 + 1 = n) : Nat.Coprime x y \u2228 \u00ac Nat.Coprime x y := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 + 1 = n) : Nat.Coprime x y \u2228 \u00ac Nat.Coprime x y := by\n  by_cases hxy : Nat.Coprime x y\n  exact Or.inl hxy\n  exact Or.inr hxy\n  <;> try simp [h, hxy]\n  <;> linarith\n  <;> simp_all\n  <;> linarith\n  <;> simp_all\n  <;> linarith\n  <;> simp_all\n  <;> linarith\n  <;> simp_all\n  <;> linarith",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (x y : \u2115) (h : x ^ 2 + y ^ 2 + 1 = n) : Nat.Coprime x y \u2228 \u00ac Nat.Coprime x y := by\n  by_cases h\u2080 : Nat.Coprime x y\n  exact Or.inl h\u2080\n  exact Or.inr h\u2080\n  <;> aesop\n  <;> aesop\n  <;> aesop"
  ]
 },
 {
  "old": "(p : \u2115) (hp : p.Prime) (h : p \u2261 3 [ZMOD 4]) (h1 : p \u2223 a^2 + b^2) : p \u2223 a \u2227 p \u2223 b := by",
  "new": "(p : \u2115) (hp : p.Prime) (hp3 : p \u2261 3 [ZMOD 4]) (h : \u00ac(p \u2223 a^2 + b^2)) : \u00ac(p \u2223 a) \u2228 \u00ac(p \u2223 b):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem prime_of_congruent_3_mod_4_not_dvd_sum_of_squares (p : \u2115) (hp : p.Prime) (hp3 : p \u2261 3 [ZMOD 4]) (h : \u00ac(p \u2223 a^2 + b^2)) : \u00ac(p \u2223 a) \u2228 \u00ac(p \u2223 b):= by\n  by_contra! h2\n  have h3 : p \u2223 a ^ 2 + b ^ 2 := by\n    have h4 : p \u2223 a^2 := by\n      exact dvd_pow h2.1 (by norm_num)\n    have h5 : p \u2223 b^2 := by\n      exact dvd_pow h2.2 (by norm_num)\n    exact dvd_add h4 h5\n  contradiction\n  <;> simp_all [Int.ModEq, Int.emod_eq_of_lt]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem prime_of_congruent_3_mod_4_not_dvd_sum_of_squares (p : \u2115) (hp : p.Prime) (hp3 : p \u2261 3 [ZMOD 4]) (h : \u00ac(p \u2223 a^2 + b^2)) : \u00ac(p \u2223 a) \u2228 \u00ac(p \u2223 b):= by\n  by_contra! h'\n  cases' Nat.Prime.eq_two_or_odd hp with hp2 hp_odd\n  <;> simp_all [Int.ModEq, Nat.dvd_iff_mod_eq_zero, Nat.pow_succ, Nat.mul_mod, Nat.add_mod]\n  <;> omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem prime_of_congruent_3_mod_4_not_dvd_sum_of_squares (p : \u2115) (hp : p.Prime) (hp3 : p \u2261 3 [ZMOD 4]) (h : \u00ac(p \u2223 a^2 + b^2)) : \u00ac(p \u2223 a) \u2228 \u00ac(p \u2223 b):= by\n  by_contra! h_contra\n  have h\u2081 : p \u2223 a ^ 2 + b ^ 2 := by\n    apply dvd_add\n    \u00b7 apply dvd_pow\n      exact h_contra.1\n      norm_num\n    \u00b7 apply dvd_pow\n      exact h_contra.2\n      norm_num\n  contradiction",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem prime_of_congruent_3_mod_4_not_dvd_sum_of_squares (p : \u2115) (hp : p.Prime) (hp3 : p \u2261 3 [ZMOD 4]) (h : \u00ac(p \u2223 a^2 + b^2)) : \u00ac(p \u2223 a) \u2228 \u00ac(p \u2223 b):= by\n  by_contra! h1\n  apply h\n  rw [Int.ModEq] at hp3\n  have h2 : p \u2223 a^2 + b^2 := by\n    have h3 : p \u2223 a := by\n      exact h1.1\n    have h4 : p \u2223 b := by\n      exact h1.2\n    have h5 : p \u2223 a^2 := by\n      exact dvd_pow h3 (by norm_num)\n    have h6 : p \u2223 b^2 := by\n      exact dvd_pow h4 (by norm_num)\n    exact dvd_add h5 h6\n  exact h2"
  ]
 },
 {
  "old": "(a b c : \u211d) : (a^4 / (2 * a^2 + b * c) + b^4 / (2 * b^2 + c * a) + c^4 / (2 * c^2 + a * b)) \u2264 (a^4 + b^4 + c^4) / (a^2 + b^2 + c^2) := by",
  "new": "(x y z : \u211d) : (x^4 / (x^2 + y^2) + y^4 / (y^2 + z^2) + z^4 / (z^2 + x^2)) \u2264 (x^2 + y^2 + z^2)^2 / (x^2 + y^2 + z^2) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y z : \u211d) :\n    (x^4 / (x^2 + y^2) + y^4 / (y^2 + z^2) + z^4 / (z^2 + x^2)) \u2264\n    (x^2 + y^2 + z^2)^2 / (x^2 + y^2 + z^2)   := by\n  have h\u2080 : x ^ 4 / (x ^ 2 + y ^ 2) + y ^ 4 / (y ^ 2 + z ^ 2) + z ^ 4 / (z ^ 2 + x ^ 2) \u2264\n    (x ^ 2 + y ^ 2 + z ^ 2) ^ 2 / (x ^ 2 + y ^ 2 + z ^ 2) := by\n    have h\u2080 : x ^ 4 / (x ^ 2 + y ^ 2) \u2264 (x ^ 2) := by\n      apply div_le_of_nonneg_of_le_mul <;>\n      nlinarith [sq_nonneg (x ^ 2), sq_nonneg (x ^ 2 + y ^ 2)]\n    have h\u2081 : y ^ 4 / (y ^ 2 + z ^ 2) \u2264 (y ^ 2) := by\n      apply div_le_of_nonneg_of_le_mul <;>\n      nlinarith [sq_nonneg (y ^ 2), sq_nonneg (y ^ 2 + z ^ 2)]\n    have h\u2082 : z ^ 4 / (z ^ 2 + x ^ 2) \u2264 (z ^ 2) := by\n      apply div_le_of_nonneg_of_le_mul <;>\n      nlinarith [sq_nonneg (z ^ 2), sq_nonneg (z ^ 2 + x ^ 2)]\n    have h\u2083 : x ^ 4 / (x ^ 2 + y ^ 2) + y ^ 4 / (y ^ 2 + z ^ 2) + z ^ 4 / (z ^ 2 + x ^ 2) \u2264\n      x ^ 2 + y ^ 2 + z ^ 2 := by\n      linarith\n    have h\u2084 : (x ^ 2 + y ^ 2 + z ^ 2) ^ 2 / (x ^ 2 + y ^ 2 + z ^ 2) =\n      x ^ 2 + y ^ 2 + z ^ 2 := by\n      by_cases h : x ^ 2 + y ^ 2 + z ^ 2 = 0 <;> field_simp [h] <;> nlinarith\n    linarith\n  exact h\u2080",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p17 (x y z : \u211d) :\n    (x^4 / (x^2 + y^2) + y^4 / (y^2 + z^2) + z^4 / (z^2 + x^2)) \u2264\n    (x^2 + y^2 + z^2)^2 / (x^2 + y^2 + z^2)   := by\n  have : \u2200 a b : \u211d, a ^ 2 + b ^ 2 \u2265 2 * a * b := by\n    intro a b\n    linarith [sq_nonneg (a - b), sq_nonneg (a + b)]\n  have h\u2080 : x ^ 2 + y ^ 2 \u2265 2 * x * y := this x y\n  have h\u2081 : y ^ 2 + z ^ 2 \u2265 2 * y * z := this y z\n  have h\u2082 : z ^ 2 + x ^ 2 \u2265 2 * z * x := this z x\n  have h\u2083 : x ^ 4 / (x ^ 2 + y ^ 2) \u2264 x ^ 2 := by\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith\n  have h\u2084 : y ^ 4 / (y ^ 2 + z ^ 2) \u2264 y ^ 2 := by\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith\n  have h\u2085 : z ^ 4 / (z ^ 2 + x ^ 2) \u2264 z ^ 2 := by\n    apply div_le_of_nonneg_of_le_mul <;> nlinarith\n  have h\u2086 : x ^ 4 / (x ^ 2 + y ^ 2) + y ^ 4 / (y ^ 2 + z ^ 2) + z ^ 4 / (z ^ 2 + x ^ 2) \u2264 x ^ 2 + y ^ 2 + z ^ 2 := by\n    linarith\n  have h\u2087 : (x ^ 2 + y ^ 2 + z ^ 2) ^ 2 / (x ^ 2 + y ^ 2 + z ^ 2) = x ^ 2 + y ^ 2 + z ^ 2 := by\n    by_cases h : x ^ 2 + y ^ 2 + z ^ 2 = 0 <;> field_simp [h] <;> nlinarith\n  linarith\n  <;> norm_num"
  ]
 },
 {
  "old": "(x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z \u2264 -1 + (3 / 4) * Real.sqrt 6) : (yz + 1) * (zx + 1) * (xy + 1) \u2265 (8 / 27) * (x + y + 1) * (y + z + 1) * (z + x + 1) := by",
  "new": "(x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z \u2264 2 * Real.sqrt 6 / 3) : 0 \u2264 Real.sqrt (x * y) * Real.sqrt (y * z) * Real.sqrt (z * x) \u2227 Real.sqrt (x * y) * Real.sqrt (y * z) * Real.sqrt (z * x) \u2264 Real.sqrt 6 * (x + y + z + 3):= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z \u2264 2 * Real.sqrt 6 / 3) :\n   0 \u2264 Real.sqrt (x * y) * Real.sqrt (y * z) * Real.sqrt (z * x) \u2227\n   Real.sqrt (x * y) * Real.sqrt (y * z) * Real.sqrt (z * x) \u2264 Real.sqrt 6 * (x + y + z + 3):= by\n  have h\u2080 : Real.sqrt (x * y) * Real.sqrt (y * z) * Real.sqrt (z * x) \u2265 0 := by positivity\n  have h\u2081 : Real.sqrt (x * y) * Real.sqrt (y * z) * Real.sqrt (z * x) \u2264 Real.sqrt 6 * (x + y + z + 3):= by\n    have h\u2082 : Real.sqrt 6 * (x + y + z + 3) \u2265 0 := by positivity\n    have h\u2083 : Real.sqrt 6 \u2265 0 := by positivity\n    have h\u2084 : Real.sqrt (x * y) \u2264 Real.sqrt 6 / 3 := by\n      apply Real.sqrt_le_iff.mpr\n      constructor\n      \u00b7 positivity\n      \u00b7 nlinarith [sq_sqrt (show 0 \u2264 6 by norm_num), sq_nonneg (x - y), sq_nonneg (x - z),\n          sq_nonneg (y - z)]\n    have h\u2085 : Real.sqrt (y * z) \u2264 Real.sqrt 6 / 3 := by\n      apply Real.sqrt_le_iff.mpr\n      constructor\n      \u00b7 positivity\n      \u00b7 nlinarith [sq_sqrt (show 0 \u2264 6 by norm_num), sq_nonneg (x - y), sq_nonneg (x - z),\n          sq_nonneg (y - z)]\n    have h\u2086 : Real.sqrt (z * x) \u2264 Real.sqrt 6 / 3 := by\n      apply Real.sqrt_le_iff.mpr\n      constructor\n      \u00b7 positivity\n      \u00b7 nlinarith [sq_sqrt (show 0 \u2264 6 by norm_num), sq_nonneg (x - y), sq_nonneg (x - z),\n          sq_nonneg (y - z)]\n    calc\n      Real.sqrt (x * y) * Real.sqrt (y * z) * Real.sqrt (z * x) \u2264 (Real.sqrt 6 / 3) * (Real.sqrt 6 / 3) * (Real.sqrt 6 / 3) := by\n        gcongr <;> assumption\n      _ = (Real.sqrt 6 / 3) * (Real.sqrt 6 / 3) * (Real.sqrt 6 / 3) := by rfl\n      _ = (Real.sqrt 6 / 3) * (Real.sqrt 6 / 3 * (Real.sqrt 6 / 3)) := by ring\n      _ \u2264 Real.sqrt 6 * (x + y + z + 3) := by\n        nlinarith [sq_sqrt (show 0 \u2264 6 by norm_num),\n          mul_self_nonneg (x + y + z + 3),\n          mul_self_nonneg (x + y + z)]\n  exact \u27e8h\u2080, h\u2081\u27e9\n  <;> norm_num"
  ]
 },
 {
  "old": "(n : \u2115) (h1 : n \u2261 1 [ZMOD 8]) (h2 : n \u2261 1 [ZMOD 9]) (h3 : n \u2261 1 [ZMOD 5]) (h4 : n \u2261 1 [ZMOD 7]) : n >= 2521 \u2227 (2521 \u2261 1 [ZMOD 8] \u2227 2521 \u2261 1 [ZMOD 9] \u2227 2521 \u2261 1 [ZMOD 5] \u2227 2521 \u2261 1 [ZMOD 7]) := by",
  "new": "(h\u2081 : 2 \u2223 x ^ 2) (h\u2082 : 3 \u2223 x ^ 2) (h\u2083 : 5 \u2223 x ^ 2) (h\u2084 : 7 \u2223 x ^ 2) : 2 \u2223 x \u2228 3 \u2223 x \u2228 5 \u2223 x \u2228 7 \u2223 x:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_dvd (h\u2081 : 2 \u2223 x ^ 2) (h\u2082 : 3 \u2223 x ^ 2) (h\u2083 : 5 \u2223 x ^ 2) (h\u2084 : 7 \u2223 x ^ 2) : 2 \u2223 x \u2228 3 \u2223 x \u2228 5 \u2223 x \u2228 7 \u2223 x:= by\n  have h\u2085 := h\u2081\n  have h\u2086 := h\u2082\n  have h\u2087 := h\u2083\n  have h\u2088 := h\u2084\n  norm_num at h\u2085 h\u2086 h\u2087 h\u2088\n  apply Or.inl\n  exact Nat.Prime.dvd_of_dvd_pow Nat.prime_two h\u2085",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_zero_of_dvd (h\u2081 : 2 \u2223 x ^ 2) (h\u2082 : 3 \u2223 x ^ 2) (h\u2083 : 5 \u2223 x ^ 2) (h\u2084 : 7 \u2223 x ^ 2) : 2 \u2223 x \u2228 3 \u2223 x \u2228 5 \u2223 x \u2228 7 \u2223 x:= by\n  rw [Nat.dvd_iff_mod_eq_zero] at *\n  revert x\n  intro x h\u2081 h\u2082 h\u2083 h\u2084\n  have h\u2085 : x % 2 = 0 \u2228 x % 2 = 1 := by omega\n  have h\u2086 : x % 3 = 0 \u2228 x % 3 = 1 \u2228 x % 3 = 2 := by omega\n  have h\u2087 : x % 5 = 0 \u2228 x % 5 = 1 \u2228 x % 5 = 2 \u2228 x % 5 = 3 \u2228 x % 5 = 4 := by omega\n  have h\u2088 : x % 7 = 0 \u2228 x % 7 = 1 \u2228 x % 7 = 2 \u2228 x % 7 = 3 \u2228 x % 7 = 4 \u2228 x % 7 = 5 \u2228 x % 7 = 6 := by omega\n  rcases h\u2085 with (h\u2085 | h\u2085) <;>\n  rcases h\u2086 with (h\u2086 | h\u2086 | h\u2086) <;>\n  rcases h\u2087 with (h\u2087 | h\u2087 | h\u2087 | h\u2087 | h\u2087) <;>\n  rcases h\u2088 with (h\u2088 | h\u2088 | h\u2088 | h\u2088 | h\u2088 | h\u2088 | h\u2088) <;>\n  simp [h\u2085, h\u2086, h\u2087, h\u2088, Nat.pow_succ, Nat.mul_mod, Nat.add_mod] at *\n  <;> norm_num\n  <;> omega"
  ]
 },
 {
  "old": "(n : \u2115) (hn : 4 \u2264 n) (h : n \u2223 (2 ^ n - 2)) : \u00ac Nat.Prime ((2 ^ n - 2) / n) := by",
  "new": "(n : \u2115) (hn : 4 \u2264 n) : Nat.Coprime ((2 ^ n - 2) / n) n \u2228 \u00acNat.Coprime ((2 ^ n - 2) / n) n := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (n : \u2115) (hn : 4 \u2264 n) : \n     Nat.Coprime ((2 ^ n - 2) / n) n \u2228 \u00acNat.Coprime ((2 ^ n - 2) / n) n := by\n  by_cases h : Nat.Coprime ((2 ^ n - 2) / n) n\n  exact Or.inl h\n  exact Or.inr h",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (n : \u2115) (hn : 4 \u2264 n) : \n     Nat.Coprime ((2 ^ n - 2) / n) n \u2228 \u00acNat.Coprime ((2 ^ n - 2) / n) n := by\n  by_cases h : Nat.Coprime ((2 ^ n - 2) / n) n <;> simp [h]\n  <;> try omega\n  <;> try simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;> try omega\n  <;> try simp_all [Nat.Coprime, Nat.gcd_eq_left, Nat.gcd_eq_right]\n  <;> try omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (n : \u2115) (hn : 4 \u2264 n) : \n     Nat.Coprime ((2 ^ n - 2) / n) n \u2228 \u00acNat.Coprime ((2 ^ n - 2) / n) n := by\n  by_cases h : Nat.Coprime ((2 ^ n - 2) / n) n <;> simp_all [Nat.coprime_comm]\n  <;> try norm_num <;> try omega\n  <;> try ring_nf <;> try simp_all [Nat.coprime_comm]\n  <;> try omega\n  <;> try ring_nf <;> try simp_all [Nat.coprime_comm]\n  <;> try omega",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (n : \u2115) (hn : 4 \u2264 n) : \n     Nat.Coprime ((2 ^ n - 2) / n) n \u2228 \u00acNat.Coprime ((2 ^ n - 2) / n) n := by\n  by_cases h : Nat.Coprime ((2 ^ n - 2) / n) n\n  exacts [Or.inl h, Or.inr h]"
  ]
 },
 {
  "old": "(a b c : \u211d) (n : \u2115) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : (1 - a * b * c) * (a ^ n + b ^ n + c ^ n - 1 / a ^ n - 1 / b ^ n - 1 / c ^ n) \u2265 0 := by",
  "new": "(x y z : \u211d) (n : \u2115) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) : 1 / (x ^ n * y ^ n * z ^ n) \u2265 1 / (x * y * z) := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (n : \u2115) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) : 1 / (x ^ n * y ^ n * z ^ n) \u2265 1 / (x * y * z) := by\n  have h\u2081 : x ^ n * y ^ n * z ^ n = (x * y * z) ^ n := by ring\n  rw [h\u2081]\n  have h\u2082 : (x * y * z) ^ n = 1 := by simp [h]\n  rw [h\u2082]\n  simp [h]\n  <;> apply le_of_sub_nonneg\n  <;> field_simp\n  <;> ring_nf\n  <;> positivity",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (n : \u2115) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x * y * z = 1) : 1 / (x ^ n * y ^ n * z ^ n) \u2265 1 / (x * y * z) := by\n  have h1 : 0 < x ^ n * y ^ n * z ^ n := by positivity\n  have h2 : 0 < x * y * z := by positivity\n  have h3 : x ^ n * y ^ n * z ^ n = (x * y * z) ^ n := by ring\n  rw [h3]\n  have h4 : (x * y * z) ^ n = 1 := by simp [h]\n  rw [h4]\n  have h5 : 1 / 1 \u2265 1 / (x * y * z) := by\n    rw [div_one]\n    apply div_le_one_of_le\n    all_goals nlinarith\n  linarith"
  ]
 },
 {
  "old": "(a b c : \u211d) (habc : a * b * c = 1) : (a^4 / b^2 + b^4 / c^2 + c^4 / a^2)^5 \u2265 27 * (a^5 / c^3 + c^5 / b^3 + b^5 / a^3)^2 := by",
  "new": "(a b c : \u211d) (habc : a * b * c = 1) : a ^ 4 / b ^ 2 + b ^ 4 / c ^ 2 + c ^ 4 / a ^ 2 \u2265 3 * a ^ 2 / 3:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_82572 (a b c : \u211d) (habc : a * b * c = 1) : \n    a ^ 4 / b ^ 2 + b ^ 4 / c ^ 2 + c ^ 4 / a ^ 2 \u2265 3 * a ^ 2 / 3:= by\n  have : 0 < 3 := by norm_num\n  have h : a ^ 4 / b ^ 2 + b ^ 4 / c ^ 2 + c ^ 4 / a ^ 2 \u2265 3 * a ^ 2 / 3 := by\n    have h1 : 0 < b ^ 2 := sq_pos_of_ne_zero (by intro h2; rw [h2] at habc; norm_num at habc)\n    have h2 : 0 < c ^ 2 := sq_pos_of_ne_zero (by intro h2; rw [h2] at habc; norm_num at habc)\n    have h3 : 0 < a ^ 2 := sq_pos_of_ne_zero (by intro h2; rw [h2] at habc; norm_num at habc)\n    have h4 : 0 < b ^ 2 * c ^ 2 := by positivity\n    have h5 : 0 < c ^ 2 * a ^ 2 := by positivity\n    have h6 : 0 < a ^ 2 * b ^ 2 := by positivity\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2)]\n  linarith\n  <;> norm_num",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_82572 (a b c : \u211d) (habc : a * b * c = 1) : \n    a ^ 4 / b ^ 2 + b ^ 4 / c ^ 2 + c ^ 4 / a ^ 2 \u2265 3 * a ^ 2 / 3:= by\n  have h1 : 0 < a ^ 2 := sq_pos_of_ne_zero (by intro h; simp_all)\n  have h2 : 0 < b ^ 2 := sq_pos_of_ne_zero (by intro h; simp_all)\n  have h3 : 0 < c ^ 2 := sq_pos_of_ne_zero (by intro h; simp_all)\n  have h4 : 0 < a ^ 2 * b ^ 2 := mul_pos h1 h2\n  have h5 : 0 < b ^ 2 * c ^ 2 := mul_pos h2 h3\n  have h6 : 0 < c ^ 2 * a ^ 2 := mul_pos h3 h1\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_82572 (a b c : \u211d) (habc : a * b * c = 1) : \n    a ^ 4 / b ^ 2 + b ^ 4 / c ^ 2 + c ^ 4 / a ^ 2 \u2265 3 * a ^ 2 / 3:= by\n  have ha : 0 < a ^ 2 := sq_pos_of_ne_zero (by intro h; rw [h] at habc; norm_num at habc)\n  have hb : 0 < b ^ 2 := sq_pos_of_ne_zero (by intro h; rw [h] at habc; norm_num at habc)\n  have hc : 0 < c ^ 2 := sq_pos_of_ne_zero (by intro h; rw [h] at habc; norm_num at habc)\n  have hab : 0 < a ^ 2 * b ^ 2 := by positivity\n  have hac : 0 < a ^ 2 * c ^ 2 := by positivity\n  have hbc : 0 < b ^ 2 * c ^ 2 := by positivity\n  field_simp\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2)]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_82572 (a b c : \u211d) (habc : a * b * c = 1) : \n    a ^ 4 / b ^ 2 + b ^ 4 / c ^ 2 + c ^ 4 / a ^ 2 \u2265 3 * a ^ 2 / 3:= by\n  have h : a ^ 2 > 0 \u2227 b ^ 2 > 0 \u2227 c ^ 2 > 0 := by\n    constructor\n    \u00b7 exact sq_pos_of_ne_zero (by intro h; simp_all)\n    constructor\n    \u00b7 exact sq_pos_of_ne_zero (by intro h; simp_all)\n    \u00b7 exact sq_pos_of_ne_zero (by intro h; simp_all)\n  have h\u2082 : a ^ 4 / b ^ 2 + b ^ 4 / c ^ 2 + c ^ 4 / a ^ 2 \u2265 3 * a ^ 2 / 3 := by\n    have h\u2083 : 0 < b ^ 2 := h.2.1\n    have h\u2084 : 0 < c ^ 2 := h.2.2\n    have h\u2085 : 0 < a ^ 2 := h.1\n    have h\u2086 : 0 < a ^ 2 * b ^ 2 := mul_pos h\u2085 h\u2083\n    have h\u2087 : 0 < b ^ 2 * c ^ 2 := mul_pos h\u2083 h\u2084\n    have h\u2088 : 0 < c ^ 2 * a ^ 2 := mul_pos h\u2084 h\u2085\n    field_simp\n    rw [le_div_iff (by positivity)]\n    nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (b ^ 2 - c ^ 2), sq_nonneg (c ^ 2 - a ^ 2)]\n  exact h\u2082"
  ]
 },
 {
  "old": "(A B : Matrix (Fin n) (Fin n) \u2102) (h\u2081 : B + A * B = A ^ 2 + B * A ^ 2 + A * B * A) (h\u2082 : A + B * A = B ^ 2 + A * B ^ 2 + B * A * B) : A = B := by",
  "new": "{n : \u2115} (A : Matrix (Fin n) (Fin n) \u2102) (h\u2082 : A ^ 2 = 0) : A ^ 4 - A ^ 2 = 0 := by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem matpow_four_sub_matpow_two_eq_zero {n : \u2115} (A : Matrix (Fin n) (Fin n) \u2102) (h\u2082 : A ^ 2 = 0) : A ^ 4 - A ^ 2 = 0 := by\n  rw [show (4 : \u2115) = 2 * 2 from rfl, pow_mul, h\u2082]\n  simp [h\u2082]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem matpow_four_sub_matpow_two_eq_zero {n : \u2115} (A : Matrix (Fin n) (Fin n) \u2102) (h\u2082 : A ^ 2 = 0) : A ^ 4 - A ^ 2 = 0 := by\n  rw [show 4 = 2 * 2 by norm_num, pow_mul]\n  simp [h\u2082, sub_self]",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem matpow_four_sub_matpow_two_eq_zero {n : \u2115} (A : Matrix (Fin n) (Fin n) \u2102) (h\u2082 : A ^ 2 = 0) : A ^ 4 - A ^ 2 = 0 := by\n  rw [show 4 = 2 + 2 from rfl, pow_add, h\u2082]\n  simp [h\u2082]"
  ]
 },
 {
  "old": "(p : \u2115) (hp : 3 \u2264 p) : \u2203 n : \u2115, (4^n \u2261 n^2 [ZMOD p]) \u2227 (4^(n+1) \u2261 (n+1)^2 [ZMOD p]) := by",
  "new": "(p : \u2115) {a : \u2115} (h\u2081 : Nat.Prime p) (h\u2082 : \u00acp \u2223 a) : Nat.Coprime p a \u2228 p \u2223 a ^ 2:= by",
  "step": 0,
  "proof": [
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {a : \u2115} (h\u2081 : Nat.Prime p) (h\u2082 : \u00acp \u2223 a) :\n    Nat.Coprime p a \u2228 p \u2223 a ^ 2:= by\n  have h\u2083 := h\u2081.coprime_iff_not_dvd.mpr h\u2082\n  exact Or.inl h\u2083",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {a : \u2115} (h\u2081 : Nat.Prime p) (h\u2082 : \u00acp \u2223 a) :\n    Nat.Coprime p a \u2228 p \u2223 a ^ 2:= by\n  rw [Nat.Prime.coprime_iff_not_dvd h\u2081]\n  aesop",
   "import Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) {a : \u2115} (h\u2081 : Nat.Prime p) (h\u2082 : \u00acp \u2223 a) :\n    Nat.Coprime p a \u2228 p \u2223 a ^ 2:= by\n  rw [or_iff_not_imp_right]\n  intro h\n  rw [Nat.coprime_iff_gcd_eq_one]\n  have h\u2083 := h\u2081.coprime_iff_not_dvd.2 h\u2082\n  simp_all [Nat.gcd_comm, Nat.gcd_mul_left, Nat.gcd_one_left]\n  <;> omega"
  ]
 }
]