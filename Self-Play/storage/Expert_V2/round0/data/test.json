[{"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1451 (a b : \u211d) (hab : a < b) (f : \u211d \u2192 \u211a) (hf: ContinuousOn f (Set.Icc a b)) : \u2203 q : \u211a, \u2200 x \u2208 Set.Icc a b, f x = q := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1451_plus : \u2200 a b : \u211d, a < b \u2192 \u2203 f : C(Set.Icc a b, \u211d), \u2200 x : Set.Icc a b, f x = (x : \u211d):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z)\n  (h : x * y * z = 1) :\n   8 * (x + y + z) \u2265 12 * Real.sqrt (x * y + y * z + z * x):= by", "target": "\n  have h\u2080 : 0 < x * y := by positivity\n  have h\u2081 : 0 < y * z := by positivity\n  have h\u2082 : 0 < x * z := by positivity\n  have h\u2083 : 0 < Real.sqrt (x * y + y * z + z * x) := by positivity\n  nlinarith [sq_sqrt (by positivity : (0 : \u211d) \u2264 x * y + y * z + z * x),\n    sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    sq_nonneg (Real.sqrt (x * y + y * z + z * x) - x),\n    sq_nonneg (Real.sqrt (x * y + y * z + z * x) - y),\n    sq_nonneg (Real.sqrt (x * y + y * z + z * x) - z)]\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1265 (a b c : \u211d) : (a / Real.sqrt (a + b) + b / Real.sqrt (b + c) + c / Real.sqrt (c + a)) \u2264 (17 * (a ^ 2 + b ^ 2 + c ^ 2) + 10 * (a * b + b * c + c * a)) ^ (1 / 4) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1265_plus (a b c : \u211d) : Real.sqrt (a ^ 2 + b ^ 2) + Real.sqrt (b ^ 2 + c ^ 2) + Real.sqrt (c ^ 2 + a ^ 2) \u2265 2 * (a + b + c) / 2 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192\n   (a * b) ^ 2 / b ^ 2 + (b * c) ^ 2 / c ^ 2 + (c * a) ^ 2 / a ^ 2 \u2265 a * b + b * c + c * a - (a + b + c):= by", "target": "\n  intro a b c habc\n  have ha : 0 < a := habc.1\n  have hb : 0 < b := habc.2.1\n  have hc : 0 < c := habc.2.2\n  have h\u2080 : (a * b) ^ 2 / b ^ 2 = a ^ 2 := by\n    field_simp\n    ring\n  have h\u2081 : (b * c) ^ 2 / c ^ 2 = b ^ 2 := by\n    field_simp\n    ring\n  have h\u2082 : (c * a) ^ 2 / a ^ 2 = c ^ 2 := by\n    field_simp\n    ring\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a)]\n  <;> simp [h\u2080, h\u2081, h\u2082]\n  <;> linarith\n  <;> linarith\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_step1 (a b c : \u211d) (h\u2080 : 0 < a \u2227 0 < b \u2227 0 < c) (h\u2081 : a * b * c = 1) :\n  (1 / (a * (b + 1)) + 1 / (b * (c + 1)) + 1 / (c * (a + 1))) \u2265 3 / (a * b * c + 1) := by", "target": "\n  rcases h\u2080 with \u27e8ha, hb, hc\u27e9\n  field_simp [h\u2081]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le,\n    mul_nonneg (sq_nonneg (a - 1)) hc.le, mul_nonneg (sq_nonneg (b - 1)) ha.le,\n    mul_nonneg (sq_nonneg (c - 1)) hb.le, mul_nonneg (sq_nonneg (a - 1)) hb.le,\n    mul_nonneg (sq_nonneg (b - 1)) hc.le, mul_nonneg (sq_nonneg (c - 1)) ha.le]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (h : a ^ 2 + b ^ 2 \u2265 1) :\n     Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b := by", "target": "\n  by_cases h1 : a.Coprime b\n  exacts [Or.inl h1, Or.inr (by simp_all)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_x1y2z3 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z + x * y + y * z + z * x = 4) :  4 / (x * y) + 4 / (y * z) + 4 / (z * x) \u2265 9 * (2 / 3):= by", "target": "\n  have : 0 < x * y := mul_pos hx hy\n  have : 0 < y * z := mul_pos hy hz\n  have : 0 < z * x := mul_pos hz hx\n  have h\u2081 : 0 < x * y * (y * z * (z * x)) := by positivity\n  have h\u2082 : 0 < x * y * (y * z) := by positivity\n  have h\u2083 : 0 < y * z * (z * x) := by positivity\n  have h\u2084 : 0 < x * y * z := by positivity\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1049 {a b c : \u211d} (hx: a > 0 \u2227 b > 0 \u2227 c > 0) (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : 4 * (a / b + b / c + c / a) \u2265 (a ^ 2 + b ^ 2) / (a ^ 2 + c ^ 2) + (b ^ 2 + c ^ 2) / (b ^ 2 + a ^ 2) + (c ^ 2 + a ^ 2) / (c ^ 2 + b ^ 2) + 9 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1049_plus (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) (hab : a + b + c = 1) : 4 * (a / b + b / c + c / a) \u2265 (a ^ 2 + b ^ 2) / (a ^ 2 + c ^ 2) + (b ^ 2 + c ^ 2) / (b ^ 2 + a ^ 2) + (c ^ 2 + a ^ 2) / (c ^ 2 + b ^ 2) + 9:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem copos_ineq\n    (x y z : \u211d)\n    (hx : 0 < x)\n    (hy : 0 < y)\n    (hz : 0 < z) :\n    x / (x + y + z) + y / (x + y + z) + z / (x + y + z) \u2264 3 := by", "target": "\n  rw [add_assoc, add_comm]\n  field_simp [hx.ne', hy.ne', hz.ne']\n  apply div_le_of_nonneg_of_le_mul <;> nlinarith\n  <;> nlinarith\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_602 (a b c : \u211d) (ha : a > 0 \u2227 b > 0 \u2227 c > 0 \u2227 a * b * c = 1) : 1 / (2 * a ^ 3 + 1) * (a ^ 3 + 2) + 1 / (2 * b ^ 3 + 1) * (b ^ 3 + 2) + 1 / (2 * c ^ 3 + 1) * (c ^ 3 + 2) \u2265 1 / 3 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_602_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) : 3 / (x + y + z) \u2264 1 \u2194 x * y + y * z + z * x \u2265 3:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_of_ge_coprime (x y : \u2115) (h : x \u2265 y) (h2 : Nat.Coprime x y) : Nat.Coprime (x ^ 3) (y ^ 3) := by", "target": "\n  rw [Nat.coprime_comm] at h2 \u22a2\n  rw [Nat.coprime_comm]\n  simp [Nat.coprime_comm] at h2 \u22a2\n  apply h2\n  <;> simp [Nat.coprime_comm] at h2 \u22a2\n  <;> apply h2\n  <;> simp [Nat.coprime_comm] at h2 \u22a2\n  <;> apply h2\n  <;> simp [Nat.coprime_comm] at h2 \u22a2\n  <;> apply h2\n  <;> simp [Nat.coprime_comm] at h2 \u22a2\n  <;> apply h2"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (x y : \u211d) (n : \u2115) (hn : 0 < n) (hy : 0 < y) (hx : 0 < x) :   x \u2208 Set.Icc 0 y \u2192 \u2203  f : \u2115 \u2192 \u211d, f n = 1 / (1 + n ^ 2 * (x / y)) \u2227 f n \u2264 1:= by", "target": "\n  intro hx'\n  use fun n => 1 / (1 + n ^ 2 * (x / y))\n  have h\u2081 : 0 < n ^ 2 * (x / y) := by\n    have h\u2082 : 0 < n ^ 2 := by positivity\n    exact mul_pos (by positivity) (div_pos hx hy)\n  have h\u2082 : 1 / (1 + n ^ 2 * (x / y)) \u2264 1 := by\n    rw [div_le_iff (by positivity)]\n    nlinarith\n  exact \u27e8rfl, h\u2082\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime_dvd_pow' {d k : \u2115} (hk : 2 \u2264 k) {n : \u2115} (p : \u2115) [hp : Fact p.Prime] (hd : p \u2223 d) (heq : p \u2223 k ^ n) : p \u2223 k \u2228 Nat.Coprime d (k ^ n):= by", "target": "\n  have : p \u2223 k := by\n    have : p \u2223 k ^ n := heq\n    exact hp.out.dvd_of_dvd_pow this\n  exact Or.inl this"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n    Real.sqrt (Real.sqrt (1 + 16 * x ^ 2) + 4 * x) \u2264 2 * Real.sqrt (1 + 8 * x ^ 2):= by", "target": "\n  have h\u2080 : 0 \u2264 Real.sqrt (1 + 16 * x ^ 2) := Real.sqrt_nonneg _\n  have h\u2081 : 0 \u2264 Real.sqrt (1 + 8 * x ^ 2) := Real.sqrt_nonneg _\n  have h\u2082 : 0 \u2264 4 * x ^ 2 := by positivity\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  \u00b7 positivity\n  \u00b7 nlinarith [sq_sqrt (show 0 \u2264 1 + 16 * x ^ 2 by positivity),\n      sq_sqrt (show 0 \u2264 1 + 8 * x ^ 2 by positivity), sq_nonneg (x - 1 / 2),\n      sq_nonneg (x + 1 / 2)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_a10 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) :\n 4 * (a + b) ^ 2 + (a + b + 24 * c) ^ 2 \u2265 676 * a * b * c / (a + b + c):= by", "target": "\n  have h\u2081 : 0 < a + b := add_pos ha hb\n  have h\u2082 : 0 < a + b + c := by linarith\n  have h\u2083 : 0 < a * b := mul_pos ha hb\n  have h\u2084 : 0 < a * b * c := by positivity\n  have h\u2085 : 0 < a + b + c := by linarith\n  have h\u2086 : 0 < a * b * (a + b) := by positivity\n  have h\u2087 : 0 < c * (a + b + c) := by positivity\n  have h\u2088 : 0 < a * b * c * (a + b + c) := by positivity\n  field_simp [h\u2081, h\u2082, h\u2083, h\u2084, h\u2085, h\u2086, h\u2087, h\u2088]\n  rw [div_le_iff]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (a + b - 12 * c), sq_nonneg (a + b + 24 * c)]\n  positivity"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_part_ge_quarter (n : \u2115) (hn : 1 < n) :  \u2203 k,  (1 : \u211d) / 4 \u2264  k \u2227 k \u2264 1 \u2227 (\u2211 i in Finset.Icc 1 n, Real.sqrt i) \u2265 k * n := by", "target": "\n  refine \u27e81, ?_\u27e9\n  constructor\n  norm_num\n  constructor\n  norm_num\n  have hn' : (1 : \u211d) < n := by exact_mod_cast hn\n  have h3 : (\u2211 i in Finset.Icc 1 n, Real.sqrt i) \u2265 (1 : \u211d) * n := by\n    have h4 : (\u2211 i in Finset.Icc 1 n, Real.sqrt i) \u2265 (\u2211 i in Finset.Icc 1 n, (1 : \u211d)) := by\n      apply Finset.sum_le_sum\n      intro x hx\n      simp only [Finset.mem_Icc] at hx\n      exact Real.le_sqrt_of_sq_le (by norm_num; nlinarith)\n    simpa using h4\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_2 (x y z : \u211d) (n : \u2115) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 1) :\n      (x ^ (n + 3) + y ^ (n + 2) + z ^ (n + 1)) \u2264 1 \u2227 (y ^ (n + 3) + z ^ (n + 2) + x ^ (n + 1)) \u2264 1 \u2227 (z ^ (n + 3) + x ^ (n + 2) + y ^ (n + 1)) \u2264 1:= by", "target": "\n  constructor\n  have : x ^ (n + 3) + y ^ (n + 2) + z ^ (n + 1) \u2264 1 := by\n    have : x ^ (n + 3) \u2264 x := by\n      exact pow_le_of_le_one (by linarith) (by linarith) (by linarith)\n    have : y ^ (n + 2) \u2264 y := by\n      exact pow_le_of_le_one (by linarith) (by linarith) (by linarith)\n    have : z ^ (n + 1) \u2264 z := by\n      exact pow_le_of_le_one (by linarith) (by linarith) (by linarith)\n    linarith\n  exact this\n  constructor\n  have : y ^ (n + 3) + z ^ (n + 2) + x ^ (n + 1) \u2264 1 := by\n    have : y ^ (n + 3) \u2264 y := by\n      exact pow_le_of_le_one (by linarith) (by linarith) (by linarith)\n    have : z ^ (n + 2) \u2264 z := by\n      exact pow_le_of_le_one (by linarith) (by linarith) (by linarith)\n    have : x ^ (n + 1) \u2264 x := by\n      exact pow_le_of_le_one (by linarith) (by linarith) (by linarith)\n    linarith\n  exact this\n  have : z ^ (n + 3) + x ^ (n + 2) + y ^ (n + 1) \u2264 1 := by\n    have : z ^ (n + 3) \u2264 z := by\n      exact pow_le_of_le_one (by linarith) (by linarith) (by linarith)\n    have : x ^ (n + 2) \u2264 x := by\n      exact pow_le_of_le_one (by linarith) (by linarith) (by linarith)\n    have : y ^ (n + 1) \u2264 y := by\n      exact pow_le_of_le_one (by linarith) (by linarith) (by linarith)\n    linarith\n  exact this"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (a b : \u2115) (hab : a ^ 2 + b ^ 2 + 1 = a * b * 2) :\n  Nat.Coprime a b \u2228 \u00ac Nat.Coprime a b:= by", "target": "\n  by_cases h : a.Coprime b\n  exact Or.inl h\n  exact Or.inr h\n  <;> aesop"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.cos (Real.pi / 3) \u2264 1 / Real.cos (Real.pi / 6) := by", "target": "\n  have h\u2081 : Real.cos (Real.pi / 3) = 1 / 2 := by rw [Real.cos_pi_div_three]\n  have h\u2082 : Real.cos (Real.pi / 6) = Real.sqrt 3 / 2 := by rw [Real.cos_pi_div_six]\n  rw [h\u2081, h\u2082]\n  have h\u2083 : Real.sqrt 3 > 0 := Real.sqrt_pos_of_pos (by norm_num)\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_sqrt (show 0 \u2264 3 by norm_num)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_352 (a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) : (a + b + c) * (a * b + b * c + c * a) / ((a + b) * (b + c) * (c + a)) \u2265 1 + (b + c - a) * (a + c - b) * (a + b - c) / (8 * a * b * c) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_352_plus : \u2200 a b c : \u211d, a > 0 \u2227 b > 0 \u2227 c > 0 \u2192 (a + b + c) * (a * b + b * c + c * a) / ((a + b) * (b + c) * (c + a)) \u2265 1 + (b + c - a) * (a + c - b) * (a + b - c) / (8 * a * b * c) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_x1y2z3 (x y z : \u211d) (h\u2081 : 0 \u2264 x \u2227 0 \u2264 y \u2227 0 \u2264 z) (h\u2082 : x + y + z \u2264 1)  : (1 - x) / (1 - y * z) + (1 - y) / (1 - z * x) + (1 - z) / (1 - x * y) \u2265 4 / 3:= by", "target": "\n  have h\u2083 : 0 \u2264 x * y := by nlinarith\n  have h\u2084 : 0 \u2264 y * z := by nlinarith\n  have h\u2085 : 0 \u2264 z * x := by nlinarith\n  have h\u2086 : 0 \u2264 x * y * z := by nlinarith\n  have h\u2087 : 1 - y * z \u2265 0 := by nlinarith\n  have h\u2088 : 1 - z * x \u2265 0 := by nlinarith\n  have h\u2089 : 1 - x * y \u2265 0 := by nlinarith\n  have h\u2081\u2080 : 1 - y * z \u2260 0 := by nlinarith\n  have h\u2081\u2081 : 1 - z * x \u2260 0 := by nlinarith\n  have h\u2081\u2082 : 1 - x * y \u2260 0 := by nlinarith\n  field_simp\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x),\n    sq_nonneg (x * y - y * z), sq_nonneg (y * z - z * x), sq_nonneg (z * x - x * y)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt (11 * (b ^ 2 + c ^ 2 + d ^ 2) + 5 * (b * c + b * d + c * d)) \u2264 11 * (b ^ 2 + c ^ 2 + d ^ 2) + 5 * (b * c + b * d + c * d) + 1 / 2:= by", "target": "\n  have : 0 \u2264 (b - c) ^ 2 + (b - d) ^ 2 + (c - d) ^ 2 := by positivity\n  apply Real.sqrt_le_iff.mpr\n  constructor\n  all_goals norm_num\n  all_goals nlinarith\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test (T : \u2115) (h\u2081 : 2 \u2264 T) (h\u2082 : T \u2264 100) : \n    1 / (T * (1 + T)) \u2264 1 / 4:= by", "target": "\n  have : 1 / (T * (1 + T)) \u2264 1 / 4 := by\n    apply Nat.div_le_div_left\n    nlinarith\n    nlinarith\n  exact this\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_362 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (habc : a * b * c = 1) : (a / Real.sqrt (3 + 2 * c + c * a) + b / Real.sqrt (3 + 2 * a + a * b) + c / Real.sqrt (3 + 2 * b + b * c)) \u2264 (a ^ 3 + b ^ 3 + c ^ 3) / Real.sqrt 6 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_362_plus {a b c : \u211d} (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hab : a * b > 0 \u2227 b * c > 0 \u2227 a * c > 0) (h : a + b + c = 1) : a ^ 2 / b + b ^ 2 / c + c ^ 2 / a \u2265 a * b + b * c + c * a:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {a b c : \u211d} (hab : a + b > c) (hbc : b + c > a) (hca : a + c > b) : 9 * (a^2 * b^2 + b^2 * c^2 + c^2 * a^2) + 4 * a * b * c * (a + b + c) + 3 * (a * b + b * c + c * a) ^ 2 \u2265 4 * a * b * c * (a + b + c) + a * b * (a ^ 2 + b ^ 2) + b * c * (b ^ 2 + c ^ 2) + c * a * (c ^ 2 + a ^ 2):= by", "target": "\n  nlinarith [mul_pos (sub_pos.mpr hab) (sub_pos.mpr hbc), mul_pos (sub_pos.mpr hbc) (sub_pos.mpr hca), mul_pos (sub_pos.mpr hca) (sub_pos.mpr hab)]\n  <;> simp_all\n  <;> nlinarith\n  <;> simp_all\n  <;> nlinarith\n  <;> simp_all\n  <;> nlinarith\n  <;> simp_all\n  <;> nlinarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem even_square_sub_two (n : \u2124) : Even (n^2 - 2) \u2194 Even n := by", "target": "\n  cases' Int.even_or_odd n with h h <;> simp [h, Int.even_sub, Int.even_mul, Int.even_pow]\n  all_goals norm_num\n  <;> tauto\n  <;> norm_num\n  <;> tauto\n  <;> norm_num\n  <;> tauto\n  <;> norm_num\n  <;> tauto"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 1) :\n     Real.sqrt (1 - 3 * x * y * z) \u2265 Real.sqrt (1 - x ^ 2) / 3 - (y + z) / 3:= by", "target": "\n  have h\u2080 : 0 \u2264 y * z := by positivity\n  have h\u2081 : 0 \u2264 x * y := by positivity\n  have h\u2082 : 0 \u2264 x * z := by positivity\n  have h\u2083 : Real.sqrt (1 - 3 * x * y * z) \u2265 0 := Real.sqrt_nonneg (1 - 3 * x * y * z)\n  have h\u2084 : Real.sqrt (1 - x ^ 2) \u2265 0 := Real.sqrt_nonneg (1 - x ^ 2)\n  nlinarith [sq_sqrt (show 0 \u2264 1 - x ^ 2 from by nlinarith), sq_sqrt (show 0 \u2264 1 - 3 * x * y * z from by nlinarith),\n    mul_self_nonneg (x - y), mul_self_nonneg (x - z), mul_self_nonneg (y - z)]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (l : \u2115) (l_odd : Odd l) (l_gt3 : l > 3) (p : \u2115) (hp : p.Prime) (h : p \u2223 (l! + 1)) : \n  Nat.Coprime p (l!) \u2228 p \u2223 l!:= by", "target": "\n  have : p.Coprime (l!) \u2228 p \u2223 l! := by\n    apply or_iff_not_imp_right.mpr\n    intro h'\n    exact hp.coprime_iff_not_dvd.mpr (by simp_all)\n  simpa [Nat.coprime_comm] using this"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (h1 : 0 < x \u2227 0 < y \u2227 0 < z) (h2 : x + y + z = 1) :\n       (x * y) * (x * z) * (y * z) \u2264 1/9 := by", "target": "\n  have h3 : 0 < x * y := by nlinarith\n  have h4 : 0 < x * z := by nlinarith\n  have h5 : 0 < y * z := by nlinarith\n  have h6 : (x + y + z)^2 = 1 := by rw [h2]; ring\n  nlinarith [sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z),\n    mul_self_nonneg (x * y + x * z + y * z), mul_self_nonneg (x * y - x * z),\n    mul_self_nonneg (x * y - y * z), mul_self_nonneg (x * z - y * z)]\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq (x y z : \u211d) (hx : 0 \u2264 x) (hy : 0 \u2264 y) (hz : 0 \u2264 z) (h : x + y + z = 1) :\n     Real.sqrt (x^2 + y^2 + z^2) + Real.sqrt ((1 - x)^2 + (1 - y)^2 + (1 - z)^2) + Real.sqrt (x * (1 - x) + y * (1 - y) + z * (1 - z)) \u2265\n     Real.sqrt ((x + y + z)^2) := by", "target": "\n  have h\u2081 : Real.sqrt ((x + y + z)^2) = x + y + z := by\n    rw [Real.sqrt_eq_iff_mul_self_eq] <;>\n    nlinarith\n  have h\u2082 : Real.sqrt (x^2 + y^2 + z^2) \u2265 (x + y + z) / 2 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (x - y), sq_nonneg (y - z), sq_nonneg (z - x)]\n  have h\u2083 : Real.sqrt ((1 - x)^2 + (1 - y)^2 + (1 - z)^2) \u2265 (1 - x + (1 - y) + (1 - z)) / 2 := by\n    apply Real.le_sqrt_of_sq_le\n    nlinarith [sq_nonneg (1 - x - (1 - y)), sq_nonneg (1 - y - (1 - z)), sq_nonneg (1 - z - (1 - x))]\n  have h\u2084 : Real.sqrt (x * (1 - x) + y * (1 - y) + z * (1 - z)) \u2265 0 := by\n    apply Real.sqrt_nonneg\n  nlinarith\n  <;> norm_num"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1249 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (Real.sqrt ((5 * a ^ 2 + 5 * c ^ 2 + 8 * b ^ 2) / 4 * a * c) + Real.sqrt ((5 * b ^ 2 + 5 * a ^ 2 + 8 * c ^ 2) / 4 * b * a) + Real.sqrt ((5 * c ^ 2 + 5 * b ^ 2 + 8 * a ^ 2) / 4 * c * b)) \u2265 3 * (8 * (a + b) ^ 2 * (b + c) ^ 2 * (c + a) ^ 2 / (a * b * c) ^ 2) ^ (1 / 9) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1249_plus (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) : 2 * Real.sqrt (x * y) * Real.sqrt (y * z) * Real.sqrt (z * x) \u2265 2 * Real.sqrt (x ^ 2 * y ^ 2 * z ^ 2):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem prime_of_congruent_one (p : \u2115) (hp : p.Prime) (h : p % 4 = 1) : \u2203 x y : \u2115, p \u2223 x^2 + y^2 \u2227 x^2 + y^2 = p * (x^2 + y^2)  := by", "target": "\n  refine' \u27e80, 0, by simp [hp.ne_zero], _\u27e9\n  simp [h, hp.ne_zero]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c d : \u211d, 0 < a \u2192 0 < b \u2192 0 < c \u2192 0 < d \u2192\n   (a / (a + b) + b / (b + c) + c / (c + a)) * (b / (a + b) + c / (b + c) + a / (c + a)) \u2264 9 / 4:= by", "target": "\n  intro a b c d ha hb hc hd\n  field_simp [add_comm, add_left_comm]\n  rw [div_le_div_iff (by positivity) (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le ha.le,\n    mul_nonneg (sq_nonneg (a - b)) (sq_nonneg (b - c)),\n    mul_nonneg (sq_nonneg (b - c)) (sq_nonneg (c - a)),\n    mul_nonneg (sq_nonneg (c - a)) (sq_nonneg (a - b))]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_dvd_of_prime (p : \u2115) (hn : \u00ac p.Prime) : \u2200 n : \u2115, 1 < n \u2192 \u00ac n \u2223 p \u2228 \u2203 m : \u2115, 1 < m \u2227 m \u2223 p \u2227 n \u2223 m \u2227 m \u2264 n:= by", "target": "\n  intro n hn'\n  by_cases h : n \u2223 p\n  exact Or.inr \u27e8n, by omega, h, dvd_rfl, le_refl n\u27e9\n  exact Or.inl h\n  <;> omega"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality {x y : \u211d} (hx : 0 < x) (hy : 0 < y) (h : x + y = 1) : x * Real.log y + y * Real.log x \u2264 0 \u2227 x * Real.log y + y * Real.log x \u2264 Real.log ((1 + 1) / 2):= by", "target": "\n  have h\u2081 : x * Real.log y + y * Real.log x \u2264 0 := by\n    nlinarith [Real.log_le_sub_one_of_pos hx, Real.log_le_sub_one_of_pos hy,\n      Real.log_le_sub_one_of_pos (by linarith : 0 < y), Real.log_le_sub_one_of_pos (by linarith : 0 < x),\n      mul_self_nonneg (Real.log y - Real.log x)]\n  have h\u2082 : x * Real.log y + y * Real.log x \u2264 Real.log ((1 + 1) / 2) := by\n    refine' le_trans h\u2081 _\n    have : Real.log ((1 + 1) / 2) = Real.log (2 / 2) := by norm_num\n    rw [this, Real.log_div] <;> norm_num <;> nlinarith\n  exact \u27e8h\u2081, h\u2082\u27e9"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem sin_add_x (x : \u211d) (h : 0 < x) (h' : x < Real.pi / 2) :\n  Real.sin (Real.pi / 2 - x) = cos x \u2227 0 < cos x \u2227 cos x < 1:= by", "target": "\n  constructor\n  rw [Real.sin_sub, Real.sin_pi_div_two]\n  simp\n  constructor\n  exact Real.cos_pos_of_mem_Ioo \u27e8by linarith, by linarith\u27e9\n  have : Real.cos x < 1 := by\n    rw [\u2190 Real.cos_zero]\n    exact Real.cos_lt_cos_of_nonneg_of_le_pi_div_two (by linarith) (by linarith) (by linarith)\n  exact this"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_factors_ge_two (n : \u2115) (hn: n >= 2) :  \u2203 p, p >= 2 \u2227 p \u2223 n \u2227 p \u2223 n.factors.prod  := by", "target": "\n  use n\n  have h\u2080 : n.factors.prod = n := by\n    rw [Nat.prod_factors (by linarith)]\n  simp_all\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith\n  <;> norm_num\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (habc : x * y * z = 1) (h : x + y + z = 3) :\n   x ^ 2 / (1 + y * z) + y ^ 2 / (1 + z * x) + z ^ 2 / (1 + x * y) \u2265 3 / (x * y * z + 1):= by", "target": "\n  have : x = 1 \u2227 y = 1 \u2227 z = 1 := by\n    have : x = 1 \u2227 y = 1 \u2227 z = 1 := by\n      apply And.intro\n      \u00b7 nlinarith [sq_nonneg (x + y + z), sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n      \u00b7 apply And.intro\n        \u00b7 nlinarith [sq_nonneg (x + y + z), sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n        \u00b7 nlinarith [sq_nonneg (x + y + z), sq_nonneg (x - y), sq_nonneg (x - z), sq_nonneg (y - z)]\n    exact this\n  rw [this.1, this.2.1, this.2.2]\n  norm_num\n  <;> apply le_of_sub_nonneg\n  <;> field_simp\n  <;> ring_nf\n  <;> positivity"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b c : \u211d, 0 < a \u2227 0 < b \u2227 0 < c \u2192\n   1 / a + 1 / b + 1 / c + 9 / (a + b + c) \u2265\n   4 * (1 / (a + b) + 1 / (b + c) + 1 / (a + c)) := by", "target": "\n  rintro a b c \u27e8ha, hb, hc\u27e9\n  have : 0 < a + b := by linarith\n  have : 0 < b + c := by linarith\n  have : 0 < a + c := by linarith\n  have : 0 < a * b := by positivity\n  have : 0 < b * c := by positivity\n  have : 0 < a * c := by positivity\n  field_simp\n  rw [div_le_div_iff]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a),\n    mul_self_nonneg (a ^ 2 - b ^ 2), mul_self_nonneg (b ^ 2 - c ^ 2),\n    mul_self_nonneg (c ^ 2 - a ^ 2), mul_self_nonneg (a * b - b * c),\n    mul_self_nonneg (b * c - c * a), mul_self_nonneg (c * a - a * b)]\n  positivity\n  positivity"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n   \u2200 a b : \u211d, 0 < a \u2227 0 < b \u2192\n    (a^4 / b^4 + b^4 / a^4) + (a^2 / b^2 + b^2 / a^2) + (a / b + b / a) \u2265 6 := by", "target": "\n  intro a b h\n  have ha : 0 < a := h.1\n  have hb : 0 < b := h.2\n  have hab : 0 < a * b := mul_pos ha hb\n  have h1 : a ^ 4 / b ^ 4 + b ^ 4 / a ^ 4 \u2265 2 := by\n    rw [add_comm]\n    field_simp [ha, hb]\n    rw [le_div_iff (by positivity), mul_comm]\n    nlinarith [sq_nonneg (a ^ 2 - b ^ 2), sq_nonneg (a ^ 2 + b ^ 2)]\n  have h2 : a ^ 2 / b ^ 2 + b ^ 2 / a ^ 2 \u2265 2 := by\n    rw [add_comm]\n    field_simp [ha, hb]\n    rw [le_div_iff (by positivity), mul_comm]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a + b)]\n  have h3 : a / b + b / a \u2265 2 := by\n    rw [add_comm]\n    field_simp [ha, hb]\n    rw [le_div_iff (by positivity), mul_comm]\n    nlinarith [sq_nonneg (a - b), sq_nonneg (a + b)]\n  linarith"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_amc_10_2010_p16 (x y z : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (hab : x + y + z = 1) : (x ^ 2 / (x + y) + y ^ 2 / (y + z) + z ^ 2 / (z + x) + (3 / 4) * (x * y / (x + y) + y * z / (y + z) + z * x / (z + x))) \u2265 1 / 2 := by", "target": "\n  have H\u2081 : x ^ 2 / (x + y) + y ^ 2 / (y + z) + z ^ 2 / (z + x) \u2265 1 / 2 := by\n    have H\u2082 : 0 < x + y + z := by linarith\n    have H\u2083 : 0 < x * y := by positivity\n    have H\u2084 : 0 < y * z := by positivity\n    have H\u2085 : 0 < z * x := by positivity\n    have H\u2086 : 0 < x + y := by linarith\n    have H\u2087 : 0 < y + z := by linarith\n    have H\u2088 : 0 < z + x := by linarith\n    have H\u2089 : x ^ 2 / (x + y) \u2265 (2 * x - (x + y) / 2) / 2 := by\n      rw [ge_iff_le]\n      rw [le_div_iff (by positivity)]\n      nlinarith [sq_nonneg (x - (x + y) / 2)]\n    have H\u2081\u2080 : y ^ 2 / (y + z) \u2265 (2 * y - (y + z) / 2) / 2 := by\n      rw [ge_iff_le]\n      rw [le_div_iff (by positivity)]\n      nlinarith [sq_nonneg (y - (y + z) / 2)]\n    have H\u2081\u2081 : z ^ 2 / (z + x) \u2265 (2 * z - (z + x) / 2) / 2 := by\n      rw [ge_iff_le]\n      rw [le_div_iff (by positivity)]\n      nlinarith [sq_nonneg (z - (z + x) / 2)]\n    nlinarith\n  have H\u2082 : 3 / 4 * (x * y / (x + y) + y * z / (y + z) + z * x / (z + x)) \u2265 0 := by positivity\n  nlinarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_75 (a b c : \u211d) (hab : a > 1 \u2227 b > 1 \u2227 c > 1) : (a^a / b^b + b^b / c^c + c^c / a^a) \u2265 a / b + b / c + c / a := by\n<hard theorem>", "target": "\ntheorem leanworkbook_75_plus : \u2200 x : \u211d, x > 1 \u2192 (x^x / (x + 1) ^ (x + 1) + (x + 1) ^ (x + 1) / (x + 2) ^ (x + 2) + (x + 2) ^ (x + 2) / x ^ x) \u2265 1 / 2:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_test_case (a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (hab : a + b + c = 1) : a * b ^ 2 + b * c ^ 2 + c * a ^ 2 \u2264 1 \u2227 a * b ^ 2 + b * c ^ 2 + c * a ^ 2 \u2265 a * b * c:= by", "target": "\n  have h\u2081 : a * b ^ 2 + b * c ^ 2 + c * a ^ 2 \u2264 1 := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_pos ha hb, mul_pos hb hc, mul_pos hc ha]\n  have h\u2082 : a * b ^ 2 + b * c ^ 2 + c * a ^ 2 \u2265 a * b * c := by\n    nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - a), mul_pos ha hb, mul_pos hb hc, mul_pos hc ha]\n  exact \u27e8h\u2081, h\u2082\u27e9\n  <;> linarith"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1358 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : 1 < (a + b + c) * (a * c + b * c + a * b) / (a + c) / (b + c) / (a + b) \u2227 (a + b + c) * (a * c + b * c + a * b) / (a + c) / (b + c) / (a + b) \u2264 9 / 8 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1358_plus (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : (a + b) * (b + c) * (c + a) * (a * b + b * c + c * a) \u2264 (a + b + c) * (a * b + b * c + c * a) * (b + c) * (c + a):= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_195 (a b c : \u211d) (ha : 0 < a \u2227 a < 1) (hb : 0 < b \u2227 b < 1) (hc : 0 < c \u2227 c < 1) : (1 + a) * Real.sqrt ((1 - a) / a) + (1 + b) * Real.sqrt ((1 - b) / b) + (1 + c) * Real.sqrt ((1 + c) / c) \u2265 (3 * Real.sqrt 3) / 4 * (1 + a) * (1 + b) * (1 + c) / Real.sqrt ((1 - a) * (1 - b) * (1 - c)) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_195_plus : Real.sqrt 3 \u2264 2 + 1 / Real.sqrt 3:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_1250 (a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (habc : a * b * c = 1) : a ^ 3 * c ^ 2 + b ^ 3 * a ^ 2 + c ^ 3 * b ^ 2 + a ^ 3 * b + b ^ 3 * c + c ^ 3 * a \u2265 a ^ 2 + b ^ 2 + c ^ 2 + a + b + c := by\n<hard theorem>", "target": "\ntheorem leanworkbook_1250_plus (a b c : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (habc : a * b * c = 1) : a ^ 2 + b ^ 2 + c ^ 2 + 3 * Real.sqrt (a ^ 2 * b ^ 2 * c ^ 2) \u2264 a ^ 2 + b ^ 2 + c ^ 2 + 3 * (a * b * c) + 3 * (a * b * c) := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_232 (x y z n : \u211d) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 1) : 1 / (x ^ (n + 3) + y ^ (n + 2) + z ^ (n + 1)) + 1 / (y ^ (n + 3) + z ^ (n + 2) + x ^ (n + 1)) + 1 / (z ^ (n + 3) + x ^ (n + 2) + y ^ (n + 1)) \u2265 3 / (x ^ n + y ^ n + z ^ n) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_232_plus (x y z : \u211d) (n : \u2115) (hx : 0 < x) (hy : 0 < y) (hz : 0 < z) (h : x + y + z = 1) : (x ^ (n + 3) + y ^ (n + 2) + z ^ (n + 1)) \u2264 1 \u2227 (y ^ (n + 3) + z ^ (n + 2) + x ^ (n + 1)) \u2264 1 \u2227 (z ^ (n + 3) + x ^ (n + 2) + y ^ (n + 1)) \u2264 1:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_315 (a b c d p q : \u211d) (ha : a > 0) (hb : b > 0) (hc : c > 0) (hd : d > 0) (habc : a * b * c * d = 1) (hpq : p + q = 3) : (1 / (1 + p * a + q * a ^ 2) + 1 / (1 + p * b + q * b ^ 2) + 1 / (1 + p * c + q * c ^ 2) + 1 / (1 + p * d + q * d ^ 2)) \u2265 1 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_315_plus (a b c : \u211d) (habc : a * b * c = 1) (h : a > 0 \u2227 b > 0 \u2227 c > 0) : (1 / (a + b + c) + 1 / (a ^ 2 + b ^ 2 + c ^ 2) + 1 / (a ^ 3 + b ^ 3 + c ^ 3)) \u2264 3 := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_507 : \u2200 t : \u211d, 0 < t \u2227 t < 1 / 2 \u2192 6 * t ^ 2 - 4 * t + 1 + t * Real.sqrt (1 - 2 * t) > 1 / 2 := by\n<hard theorem>", "target": "\ntheorem leanworkbook_507_plus (h\u2080 : 0 < \u2191n) (h\u2081 : 1 / 2 < \u2191n) : 6 * (\u2191n) ^ 2 - 4 * \u2191n + 1 + \u2191n * Real.sqrt (1 - 2 * \u2191n) > 1 / 2:= by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_inequality :\n    Real.sqrt 2 \u2264 2 / Real.sqrt 2 + Real.sqrt 2:= by", "target": "\n  have h : 0 < Real.sqrt 2 := by\n    exact Real.sqrt_pos.mpr (by norm_num)\n  field_simp [h]\n  norm_num\n  <;> nlinarith [sq_sqrt (show 0 \u2264 2 by norm_num)]"}, {"prompt": "Complete the following Lean 4 code:\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\n<lemma>\n\n<easy theorem>\ntheorem leanworkbook_625 (a b c : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : Real.sqrt ((a^2 * b + b^2 * c + c^2 * a) * (a * b^2 + b * c^2 + c * a^2)) \u2265 abc + (a^3 + a * b * c)^(1/3) * (b^3 + a * b * c)^(1/3) * (c^3 + a * b * c)^(1/3) := by\n<hard theorem>", "target": "\ntheorem leanworkbook_625_plus (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) : Real.sqrt ((a^2 * b + b^2 * c + c^2 * a) * (a * b^2 + b * c^2 + c * a^2)) \u2265 a * b * c := by\n</hard theorem>"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq :\n   \u2200 x y z : \u211d, 0 < x \u2227 0 < y \u2227 0 < z \u2192\n   2 * Real.sqrt (x * y) * Real.sqrt (y * z) * Real.sqrt (z * x) \u2264 (x + y) * (y + z) * (z + x) := by", "target": "\n  rintro x y z \u27e8x_pos, y_pos, z_pos\u27e9\n  have h\u2080 : 0 \u2264 x * y := by positivity\n  have h\u2081 : 0 \u2264 y * z := by positivity\n  have h\u2082 : 0 \u2264 z * x := by positivity\n  have h\u2083 : 0 \u2264 2 := by positivity\n  have h\u2084 : Real.sqrt (x * y) \u2264 (x + y) / 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (x - y)]\n  have h\u2085 : Real.sqrt (y * z) \u2264 (y + z) / 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (y - z)]\n  have h\u2086 : Real.sqrt (z * x) \u2264 (z + x) / 2 := by\n    apply Real.sqrt_le_iff.mpr\n    constructor\n    \u00b7 positivity\n    \u00b7 nlinarith [sq_nonneg (z - x)]\n  calc\n    2 * Real.sqrt (x * y) * Real.sqrt (y * z) * Real.sqrt (z * x) \u2264\n        2 * ((x + y) / 2) * ((y + z) / 2) * ((z + x) / 2) := by gcongr <;> assumption\n    _ = (x + y) * (y + z) * (z + x) / 4 := by ring\n    _ \u2264 (x + y) * (y + z) * (z + x) := by\n      nlinarith [mul_self_nonneg ((x + y) * (y + z) * (z + x))]\n  <;> assumption\n  <;> assumption\n  <;> assumption"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem main_ineq_sum (a b c d : \u211d) (ha : 0 < a) (hb : 0 < b) (hc : 0 < c) (hd : 0 < d) : \n  a / b + b / c + c / d + d / a \u2265 4:= by", "target": "\n  have : 0 < b * c := by positivity\n  have : 0 < c * d := by positivity\n  have : 0 < d * a := by positivity\n  have : 0 < b * d := by positivity\n  have : 0 < a * c := by positivity\n  have : 0 < b * c * d := by positivity\n  have : 0 < c * d * a := by positivity\n  have : 0 < d * a * b := by positivity\n  have : 0 < a * c * b := by positivity\n  field_simp [ha.ne', hb.ne', hc.ne', hd.ne']\n  rw [le_div_iff (by positivity)]\n  nlinarith [sq_nonneg (a - b), sq_nonneg (b - c), sq_nonneg (c - d), sq_nonneg (d - a),\n    mul_nonneg ha.le hb.le, mul_nonneg hb.le hc.le, mul_nonneg hc.le hd.le, mul_nonneg hd.le ha.le,\n    mul_nonneg (sq_nonneg (a - b)) hd.le, mul_nonneg (sq_nonneg (b - c)) ha.le, mul_nonneg (sq_nonneg (c - d)) hb.le, mul_nonneg (sq_nonneg (d - a)) hc.le]"}, {"prompt": "Complete the following Lean 4 code :\n\n```lean4\nimport Mathlib\nimport Aesop\nset_option maxHeartbeats 0\nopen BigOperators Real Nat Topology Rat\ntheorem coprime_or_not_coprime (n m : \u2115) (hn : 0 < n) (hm : 0 < m) : \n     Nat.Coprime n m \u2228 \u00ac Nat.Coprime n m := by", "target": "\n  by_cases h : Nat.Coprime n m <;> simp_all\n  <;> exact h\n  <;> exact h\n  <;> exact h\n  <;> exact h"}]